{"version":3,"sources":["components/map/task_statistics/task_statistics.style.js","api/task_analysis_api.js","components/map/task_statistics/task_statistics.js","redux/actions/task_analysis_actions.js","hooks/useOnClickOutside.js","components/basic/icon_button/icon_button.style.js","components/basic/icon_button/icon_button.js"],"names":["TaskStatisticsContainer","styled","div","props","yPosition","xPosition","TaskText","span","theme","font","primary","fontSize","sz3","p","TaskIcon","i","RowContainer","operator","getTasksAnalysis","a","axios","method","url","apiIPAddress","headers","response","data","console","error","status","request","message","TaskStatistics","d3","dispatch","useDispatch","onGetTasksAnalysis","onStart","onSuccess","onError","type","GET_","TASKS","ANALYSIS","_FAILURE","payload","tasksAnalysis","_SUCCESS","_STARTED","api","schema","normalize","tasksAnalysisSchema","entities","taskAnalysis","selectedTask","useSelector","state","tasksReducer","selectedHoveringTask","selectedProcess","processesReducer","tasks","positions","positionsReducer","stations","selectedPosition","stationsReducer","taskAnalysisReducer","editingStation","taskQueueReducer","taskQueue","devicesReducer","devices","editingPosition","taskEditing","editingTask","location","editingProcess","useLocation","locations","useEffect","handleSingleTask","task","undefined","pathname","selectedTaskAnalysis","_id","startPos","load","endPos","unload","routeProcesses","getRouteProcesses","x1","x","y1","y","x2","y2","midX","midY","numerator","Math","abs","denominator","atan","style","borderBottom","padding","width","paddingRight","name","color","device_types","className","paddingTop","length","justifyContent","marginTop","borderTop","avg_run_time","successes","failures","routes","map","route","useOnClickOutside","ref","handler","listener","event","current","contains","target","document","addEventListener","passive","removeEventListener","activeContainerStyle","css","RGB_Linear_Shade","hexToRGBA","hoverContainerStyle","focusContainerStyle","disabledContainerStyle","Container","button","height","hoverable","isHovering","clickable","isActive","disabled","IconButton","children","onClick","containerStyle","backgroundColor","Component","onClickOutside","useRef","defaultProps"],"mappings":"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","file":"static/js/36.c9c2b93f.chunk.js","sourcesContent":["import styled from 'styled-components'\n\n\nexport const TaskStatisticsContainer = styled.div`\n    position: absolute;\n    display: flex;\n\n    flex-direction: column;\n    align-items: center;\n\n    top: ${props => props.yPosition};\n    left: ${props => props.xPosition};\n\n    max-height: 6.5rem;\n    min-width: 7rem;\n    max-width: 20rem;\n    padding: .1rem;\n\n    background: red;\n    border-radius: 1rem;\n    box-shadow: 0 0.1rem 0.2rem 0rem #303030;\n    background-color: rgba(255, 255, 255, 0.9);\n\n    overflow: hidden;\n\n`\nexport const TaskNameText = styled.span`\n    margin-bottom: 0rem;\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz3};\n    font-weight: bold;\n\n    overflow-wrap: break-word;\n    align-items: center;\n    box-align: center;\n    width: 100%;\n    height: 100%;\n    word-break: break-word;\n`\n\nexport const TaskNameContainer = styled.div`\n  \tflex: 1;\n  \tdisplay: flex;\n  \tjustify-content: first baseline;\n    flex-direction: column;\n    overflow: hidden;\n    text-overflow: ellipsis;\n\n    max-height: 4rem;\n`\n\nexport const TaskText = styled.p`\n    align-self: center;\n    text-align: center;\n    margin-left: .25rem;\n    margin-top: auto;\n    margin-bottom: auto;\n    font-family: ${props => props.theme.font.primary};\n    align-text: center;\n    white-space: break-spaces;\n`\n\nexport const TaskIcon = styled.i`\n    margin-bottom: .2rem;\n`\n\nexport const RowContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center\n`\n","import axios from 'axios';\nimport {apiIPAddress} from '../settings/settings'\nimport * as log from 'loglevel';\n\nconst operator = 'analysis'\n\nexport async function getTasksAnalysis() {\n  try {\n    const response = await axios({\n      method: 'GET',\n      url: apiIPAddress() + operator,\n      headers: {\n        'X-API-Key': '123456',\n        'Access-Control-Allow-Origin': '*'\n    }\n    });\n\n    // Success ðŸŽ‰\n    // log.debug('getTasks :res:',response);\n    const data = response.data;\n    // const dataJson = JSON.parse(data)\n    // log.debug('getTasks: dataJson: ', dataJson)\n\n    return data;\n\n} catch (error) {\n\n    // Error ðŸ˜¨\n    if (error.response) {\n        /*\n         * The request was made and the server responded with a\n         * status code that falls out of the range of 2xx\n         */\n        console.error('error.response.data', error.response.data);\n        console.error('error.response.status',error.response.status);\n        console.error('error.response.headers',error.response.headers);\n    } else if (error.request) {\n        /*\n         * The request was made but no response was received, `error.request`\n         * is an instance of XMLHttpRequest in the browser and an instance\n         * of http.ClientRequest in Node.js\n         */\n        console.error('error.request', error.request);\n    } else {\n        // Something happened in setting up the request and triggered an Error\n        console.error('error.message', error.message);\n    }\n    throw error\n    console.error('error', error);\n  }\n\n\n};\n\nexport async function getTaskAnalysis(id) {\n  // log.debug('getTask: id: ', id)\n  try {\n    const response = await axios({\n      method: 'GET',\n      url: apiIPAddress() + operator + '/' + id,\n      headers: {\n        'X-API-Key': '123456',\n        'Access-Control-Allow-Origin': '*'\n    }\n    });\n    // Success ðŸŽ‰\n    // log.debug('getTask: response: ', response);\n    const data = response.data;\n    // log.debug('getTask: dataJson:', dataJson)\n    return data;\n\n\n} catch (error) {\n\n    // Error ðŸ˜¨\n    if (error.response) {\n        /*\n         * The request was made and the server responded with a\n         * status code that falls out of the range of 2xx\n         */\n        console.error('getTask: error.response.data', error.response.data);\n        console.error('getTask: error.response.status',error.response.status);\n        console.error('getTask: error.response.headers',error.response.headers);\n    } else if (error.request) {\n        /*\n         * The request was made but no response was received, `error.request`\n         * is an instance of XMLHttpRequest in the browser and an instance\n         * of http.ClientRequest in Node.js\n         */\n        console.error('getTask: error.request', error.request);\n    } else {\n        // Something happened in setting up the request and triggered an Error\n        console.error('getTask: error.message', error.message);\n    }\n    throw error\n    console.error('getTask: error', error);\n  }\n\n\n};\n","import React, { useState, useEffect, useRef } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useLocation } from \"react-router-dom\";\n\n// Import Styles\nimport * as styled from './task_statistics.style'\nimport taskAnalysisReducer from \"../../../redux/reducers/task_analysis_reducer\";\nimport IconButton from '../../basic/icon_button/icon_button'\nimport {getTasksAnalysis} from \"../../../redux/actions/task_analysis_actions\";\nimport {getRouteProcesses} from \"../../../methods/utils/route_utils\";\n\nconst TaskStatistics = (props) => {\n\n    const {\n        // selectedTask,\n        // positions,\n        d3,\n    } = props\n\n    const dispatch = useDispatch()\n    const onGetTasksAnalysis = () => dispatch(getTasksAnalysis())\n\n    const selectedTask = useSelector(state => state.tasksReducer.selectedTask)\n    const selectedHoveringTask = useSelector(state => state.tasksReducer.selectedHoveringTask)\n    const selectedProcess = useSelector(state => state.processesReducer.selectedProcess)\n    const tasks = useSelector(state => state.tasksReducer.tasks)\n    const positions = useSelector(state => state.positionsReducer.positions)\n    const selectedPosition = useSelector(state => state.positionsReducer.selectedPosition)\n\n    const stations = useSelector(state => state.stationsReducer.stations)\n    const tasksAnalysis = useSelector(state => state.taskAnalysisReducer.tasksAnalysis) || {}\n    const taskQueue = useSelector(state=>state.taskQueueReducer.taskQueue)\n    const devices = useSelector(state=>state.devicesReducer.devices)\n\n    const editingStation = useSelector(state => state.stationsReducer.editingStation)\n    const editingPosition = useSelector(state => state.positionsReducer.editingPosition)\n    const taskEditing = useSelector(state => state.tasksReducer.editingTask)\n    const processEditing = useSelector(state => state.processesReducer.editingProcess)\n\n    const location = useLocation()\n\n    const locations = { ...stations, ...positions }\n\n    useEffect(() => {\n        onGetTasksAnalysis()\n\n    }, [])\n\n    const handleSingleTask = (task) => {\n        if (!!task) {\n            if (task === undefined || selectedTask === undefined) return null\n\n            if (editingStation === true || editingPosition === true || (taskEditing && location.pathname === '/tasks')) return null\n\n\n        const selectedTaskAnalysis = !!task ? tasksAnalysis[task._id]: null\n        const startPos = locations[task.load]\n        const endPos = locations[task.unload]\n        const routeProcesses = getRouteProcesses(task._id)\n\n\n            if (task === null || positions === null || startPos === undefined || endPos === undefined) return null\n\n            // const xPosition = (startPos.x + endPos.x) / 2 + 10 * d3.scale + 'px'\n            // const yPosition = (startPos.y + endPos.y) / 2 - 30 + 'px'\n\n            // const xPosition = (startPos.x + endPos.x) / 2 + 'px'\n            // const yPosition = (startPos.y + endPos.y) / 2 - 30 + 'px'\n\n        // Some fancy calculation to find a common offset from a task path\n        // Doesnt work because it doesnt\n          const x1 = startPos.x\n          const y1 = startPos.y\n          const x2 = endPos.x\n          const y2 = endPos.y\n\n\n            const midX = (x1 + x2) / 2\n            const midY = (y1 + y2) / 2\n\n            const difY = (y2 - y1)\n\n            // const height = (25*Math.pow(difY,1/4))/Math.pow(d3.scale/5.8,1/4)\n\n            const height = () => {\n                if ((150 / difY) > 50) {\n                    return 50\n                } else {\n                    return 100 - 150 / difY\n                }\n            }\n\n            // const height = 100\n\n            const numerator = Math.abs(y2 - (midY))\n\n            // const denominator = Math.sqrt(Math.pow(x2 - (midX), 2) + Math.pow(y2 - (midY), 2))\n            const denominator = Math.abs(x2 - (midX))\n\n            const theta = Math.atan(numerator / denominator)\n\n            // const xPosition = (midX - height() * Math.sin(theta)) - 80 + 'px'\n            // const yPosition = (midY + height() * Math.cos(theta)) - 40 + 'px'\n\n            const xPosition = midX - 40 + 'px'\n            const yPosition = midY + 20 + 'px'\n            return (\n                <styled.TaskStatisticsContainer xPosition={xPosition} yPosition={yPosition}>\n                    <styled.RowContainer style={{ borderBottom: '1px solid black', padding: '.2rem .2rem .2rem .2rem', width: '100%' }}>\n\n                        <styled.TaskText style={{ paddingRight: '.3rem' }}>{task.name} </styled.TaskText>\n\n                        <IconButton color={'red'} style={{ paddingRight: '.2rem' }}>\n                            {task.device_types[0] === 'human' ?\n                                <i className=\"fas fa-user\"></i>\n                                :\n                                <i className=\"fas fa-robot\"></i>\n                            }\n                        </IconButton>\n\n                    </styled.RowContainer>\n\n                    <styled.RowContainer style={{ paddingTop: '.2rem' }}>\n\n                  <styled.TaskText style = {{paddingRight: '.7rem'}}>{routeProcesses.length}</styled.TaskText>\n\n                        <IconButton color='#ffb62e'>\n                            <i className=\"fas fa-route\"></i>\n                        </IconButton>\n\n                    </styled.RowContainer>\n\n                    {task.device_types[0] !== 'human' && !!selectedTaskAnalysis &&\n                        <styled.RowContainer style={{ justifyContent: 'space-between', width: '82%', marginTop: '.25rem', borderTop: '1px solid black', paddingTop: '.3rem' }}>\n                            <styled.RowContainer>\n                                <styled.TaskIcon className='far fa-clock' />\n                                <styled.TaskText>{`${selectedTaskAnalysis.avg_run_time}s`}</styled.TaskText>\n                            </styled.RowContainer>\n\n                            <styled.RowContainer>\n                                <styled.TaskIcon className='far fa-check-circle' />\n                                <styled.TaskText>{selectedTaskAnalysis.successes}</styled.TaskText>\n                            </styled.RowContainer>\n\n                            <styled.RowContainer>\n                                <styled.TaskIcon className='far fa-times-circle' />\n                                <styled.TaskText>{selectedTaskAnalysis.failures}</styled.TaskText>\n                            </styled.RowContainer>\n\n                        </styled.RowContainer>\n                    }\n                </styled.TaskStatisticsContainer>\n            )\n        }\n        else { return null }\n\n    }\n\n\n    const handleProcessTasks = () => {\n\n        if (!!selectedHoveringTask) {\n            return handleSingleTask(selectedHoveringTask)\n        }\n\n        // return Object.keys(selectedProcess.routes).map((station) => {\n        return selectedProcess.routes.map((route) => {\n            return handleSingleTask(tasks[route])\n\n        })\n        // })\n    }\n\n\n    return (\n\n        !!selectedProcess ?\n            handleProcessTasks()\n            :\n            handleSingleTask(selectedTask)\n\n\n\n    )\n\n}\n\nexport default TaskStatistics\n","import { normalize, schema } from 'normalizr';\n\nimport {\n    TASKS,\n    TASK,\n    ANALYSIS,\n} from '../types/tasks_types';\n\nimport {\n    GET_,\n\n    _STARTED,\n    _SUCCESS,\n    _FAILURE,\n} from '../types/api_types';\n\nimport * as api from '../../api/task_analysis_api'\n\nimport { tasksAnalysisSchema } from '../../normalizr/schema'\n\n\n// get\n// ******************************\nexport const getTasksAnalysis = () => {\n    return async dispatch => {\n\n        function onStart() {\n            dispatch({ type: GET_ + TASKS + ANALYSIS + _STARTED });\n        }\n        function onSuccess(tasksAnalysis) {\n            dispatch({ type: GET_ + TASKS + ANALYSIS + _SUCCESS, payload: tasksAnalysis });\n            return tasksAnalysis;\n        }\n        function onError(error) {\n            dispatch({ type: GET_ + TASKS + ANALYSIS + _FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const tasksAnalysis = await api.getTasksAnalysis();\n            const schema = normalize(tasksAnalysis, tasksAnalysisSchema)\n            return onSuccess(schema.entities.taskAnalysis);\n\n        } catch (error) {\n            return onError(error);\n        }\n    };\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// get\n// ******************************\nexport const getTaskAnalysis = (id) => {\n    return async dispatch => {\n\n        function onStart() {\n            dispatch({ type: GET_ + TASK + ANALYSIS + _STARTED });\n        }\n        function onSuccess(taskAnalysis) {\n            dispatch({ type: GET_ + TASK + ANALYSIS + _SUCCESS, payload: taskAnalysis });\n            return taskAnalysis;\n        }\n        function onError(error) {\n            dispatch({ type: GET_ + TASK + ANALYSIS + _FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const taskAnalysis = await api.getTaskAnalysis(id);\n\n            return onSuccess(taskAnalysis);\n\n        } catch (error) {\n            return onError(error);\n        }\n    };\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n","import { useEffect } from \"react\";\n\n// custom hook that listens for clicks outside of the ref component,\n// and calls the provided handler when outside click is detected\nfunction useOnClickOutside(ref, handler) {\n    useEffect(\n        () => {\n            const listener = event => {\n                // Do nothing if clicking ref's element or descendent elements\n                if (!ref.current || ref.current.contains(event.target)) {\n                    return;\n                }\n\n                handler(event)\n            }\n\n            document.addEventListener('mousedown', listener, {passive:true})\n            document.addEventListener('touchstart', listener, {passive:true})\n\n            return () => {\n                document.removeEventListener('mousedown', listener, {passive:true})\n                document.removeEventListener('touchstart', listener, {passive:true})\n            }\n        },\n        // Add ref and handler to effect dependencies\n        // It's worth noting that because passed in handler is a new ...\n        // ... function on every render that will cause this effect ...\n        // ... callback/cleanup to run every render. It's not a big deal ...\n        // ... but to optimize you can wrap handler in useCallback before ...\n        // ... passing it into this hook.\n        [ref, handler]\n    )\n}\n\nexport default useOnClickOutside\n\n// EXAMPLE\n\n// // Usage\n// function App() {\n//     // Create a ref that we add to the element for which we want to detect outside clicks\n//     const ref = useRef();\n//     // State for our modal\n//     const [isModalOpen, setModalOpen] = useState(false);\n//     // Call hook passing in the ref and a function to call on outside click\n//     useOnClickOutside(ref, () => setModalOpen(false));\n\n//     return (\n//       <div>\n//         {isModalOpen ? (\n//           <div ref={ref}>\n//             ðŸ‘‹ Hey, I'm a modal. Click anywhere outside of me to close.\n//           </div>\n//         ) : (\n//           <button onClick={() => setModalOpen(true)}>Open Modal</button>\n//         )}\n//       </div>\n//     );\n//   }\n","import styled, {css} from 'styled-components'\nimport {hexToRGBA, RGB_Linear_Shade} from \"../../../methods/utils/color_utils\";\n\nconst activeContainerStyle = css`\n\tcolor:  ${props => RGB_Linear_Shade(-0.1, hexToRGBA(props.color))};\n`\n\nconst hoverContainerStyle = css`\n\tcolor:  ${props => RGB_Linear_Shade(0.5, hexToRGBA(props.color))};\n`\n\nconst focusContainerStyle = css`\n\toutline: none;\n`\n\nconst disabledContainerStyle = css`\n\tpointer-events: none;\n`\n\n\n\nexport const Container = styled.button`\n\twidth: ${props => props.width};\n\theight: ${props => props.height};\n\tcolor: ${props => props.color};\n\t\n\t// flex layout\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\t\n\tborder: none;\n\ttransition: all 0.2s ease 0s;\n\tcursor: pointer;\n\toutline: none;\n\tbackground-color: transparent;\n\tmargin: 0;\n\tpadding: 0;\n\t\n\t&:focus {\n\t\t${focusContainerStyle};\n\t}\n\t\n\t&:hover {\n\t\t${props => props.hoverable && hoverContainerStyle};\n\t}\n\t// also allow enabling hover style via props\n\t${props=> props.isHovering && hoverContainerStyle};\n\t\n\t&:active {\n\t\t${props => props.clickable && activeContainerStyle};\n\t}\n\t// also allow enabling active style via props\n\t${props=> props.isActive && activeContainerStyle};\n\t\n\t// disabled style\n\t${props => props.disabled && disabledContainerStyle};\n\t\n`\n","import React, {useEffect, useRef, useState} from 'react'\nimport PropTypes from 'prop-types'\n\n// Import Styles\nimport * as style from './icon_button.style'\nimport useOnClickOutside from \"../../../hooks/useOnClickOutside\";\n\nconst IconButton = (props => {\n\n    const {\n        color,\n        children,\n        onClick,\n        disabled,\n        width,\n        height,\n        clickable,\n        hoverable,\n        containerStyle,\n        Component,\n        backgroundColor,\n        isActive,\n        isHovering,\n        onClickOutside\n    } = props\n\n    const ref = useRef() // ref for useOnClickOutside\n    useOnClickOutside(ref, onClickOutside) // calls onClickOutside when click outside of element\n\n    return(\n        <style.Container\n            disabled={disabled}\n            width={width}\n            height={height}\n            onClick={onClick}\n            clickable={clickable}\n            hoverable={hoverable}\n            color={color}\n            backgroundColor={backgroundColor}\n            style={containerStyle}\n            isActive={isActive}\n            isHovering={isHovering}\n            ref={ref}\n        >\n            { children}\n        </style.Container>\n    )\n\n})\n\n\n// Specifies propTypes\nIconButton.propTypes = {\n    clickable: PropTypes.bool,\n    hoverable: PropTypes.bool,\n    isActive: PropTypes.bool,\n    isHovering: PropTypes.bool,\n    onClick: PropTypes.func,\n    onClickOutside: PropTypes.func,\n    disabled: PropTypes.bool\n}\n\n// Specifies the default values for props:\nIconButton.defaultProps = {\n    clickable: true,\n    hoverable: true,\n    onClick: () => {},\n    onClickOutside: () => {},\n    disabled: false,\n    width: \"auto\",\n    height: \"auto\",\n    color: \"#123456\",\n    backgroundColor: \"#FFFFFF\",\n    isActive: false,\n    isHovering: false,\n\n}\n\nexport default IconButton\n"],"sourceRoot":""}