{"version":3,"sources":["redux/actions/local_actions.js","redux/actions/index.js","redux/types/devices_types.js","components/widgets/widget_pages/dashboards_page/dashboard_screen/dashboard_screen.js","components/widgets/widget_pages/dashboards_page/dashboard_screen/dashboard_screen.style.js","components/hil_modals/hil_modals.js","redux/types/local_types.js","components/widgets/widget_pages/dashboards_page/dashboard_screen/report_modal/report_modal.style.js","components/widgets/widget_pages/dashboards_page/dashboard_screen/report_modal/report_button/report_button.style.js","components/widgets/widget_pages/dashboards_page/dashboard_screen/report_modal/report_button/report_button.js","components/widgets/widget_pages/dashboards_page/dashboard_screen/report_modal/report_button/report_button_container.js","components/widgets/widget_pages/dashboards_page/dashboard_screen/report_modal/report_modal_edit_buttons/report_modal_edit_buttons.js","constants/class_name_constants.js","components/basic/form/color_field/color_field.style.js","components/basic/form/color_field/color_field.js","components/widgets/widget_pages/dashboards_page/dashboard_screen/report_modal/new_button_form/new_button_form.js","components/widgets/widget_pages/dashboards_page/dashboard_screen/report_modal/report_modal.js","methods/utils/permission_utils.js","components/widgets/widget_pages/dashboards_page/dashboard_screen/dashboard_lot_page/dashboard_lot_page.style.js","components/widgets/widget_pages/dashboards_page/dashboard_screen/dashboard_lot_page/dashboard_lot_fields/dashboard_lot_fields.style.js","components/widgets/widget_pages/dashboards_page/dashboard_screen/dashboard_lot_page/dashboard_lot_fields/dashboard_lot_fields.js","components/widgets/widget_pages/dashboards_page/dashboard_screen/dashboard_lot_page/dashboard_lot_buttons/dashboard_lot_buttons.style.js","components/widgets/widget_pages/dashboards_page/dashboard_screen/dashboard_lot_page/dashboard_lot_buttons/dashboard_lot_buttons.js","components/widgets/widget_pages/dashboards_page/dashboard_screen/dashboard_lot_page/dashboard_lot_input_box/dashboard_lot_input_box.style.js","components/widgets/widget_pages/dashboards_page/dashboard_screen/dashboard_lot_page/dashboard_lot_input_box/dashboard_lot_input_box.js","components/widgets/widget_pages/dashboards_page/dashboard_screen/dashboard_lot_page/dashboard_lot_page.js","components/widgets/widget_pages/dashboards_page/dashboard_screen/merge_modal/merge_modal.style.js","components/basic/box_wrapper/box_wrapper.js","components/widgets/widget_pages/dashboards_page/dashboard_screen/merge_modal/select_lot_quantity/select_lot_quantity.style.js","components/widgets/widget_pages/dashboards_page/dashboard_screen/merge_modal/select_lot_quantity/select_lot_quantity.js","components/widgets/widget_pages/dashboards_page/dashboard_screen/merge_modal/merge_review/merge_review.js","components/widgets/widget_pages/dashboards_page/dashboard_screen/merge_modal/merge_review/merge_review.style.js","components/widgets/widget_pages/dashboards_page/dashboard_screen/merge_modal/merge_modal.js","components/widgets/widget_pages/dashboards_page/dashboard_operations_menu/dashboard_operations_menu.styled.js","components/widgets/widget_pages/dashboards_page/dashboard_operations_menu/dashboard_operations_menu.js","components/widgets/widget_pages/dashboards_page/dashboards_header/dashboards_header.js","components/widgets/widget_pages/dashboards_page/dashboard_screen/dashboard_lot_list/dashboard_lot_list.style.js","components/widgets/widget_pages/dashboards_page/dashboard_screen/dashboard_lot_list/dashboard_lot_list.js","components/widgets/widget_pages/dashboards_page/dashboard_screen/dashboard_device_page/dashboard_device_page.style.js","components/widgets/widget_pages/dashboards_page/dashboard_screen/dashboard_device_page/dashboard_device_page.js","components/widgets/widget_pages/dashboards_page/dashboard_screen/kick_off_modal/kick_off_modal.style.js","components/widgets/widget_pages/dashboards_page/dashboard_screen/kick_off_modal/kick_off_modal.js","components/widgets/widget_pages/dashboards_page/dashboard_screen/finish_modal/finish_modal.style.js","components/widgets/widget_pages/dashboards_page/dashboard_screen/finish_modal/finish_modal.js","components/widgets/widget_pages/dashboards_page/dashboard_screen/task_queue_modal/task_queue_modal.style.js","components/widgets/widget_pages/dashboards_page/dashboard_screen/task_queue_modal/task_queue_modal.js","components/widgets/widget_pages/dashboards_page/dashboard_screen/warehouse_modal/warehouse_modal.style.js","components/widgets/widget_pages/dashboards_page/dashboard_screen/warehouse_modal/warehouse_modal.js","redux/types/dashboards_types.js","components/widgets/widget_pages/dashboards_page/dashboard_screen/route_modal/route_modal.style.js","components/widgets/widget_pages/dashboards_page/dashboard_screen/route_modal/route_modal.js","redux/types/processes_types.js","constants/lot_contants.js","components/hil_modals/hil_modals.style.js","methods/utils/form_utils.js","components/basic/modals/confirm_delete_modal/confirm_delete_modal.style.js","components/basic/modals/confirm_delete_modal/confirm_delete_modal.js","common_css/layout.js","constants/position_constants.js","methods/utils/map_utils.js","components/side_bar/content/cards/zone_header/zone_header.style.js","components/side_bar/content/cards/editors/card_editor/lot_sidebars/lot_sidebars.style.js","methods/utils/utils.js","api/lot_templates.js","redux/actions/lot_template_actions.js","components/side_bar/content/cards/lot_bars.style.js","components/widgets/widget_pages/dashboards_page/dashboard_buttons/dashboard_button/dashboard_button.js","constants/route_constants.js","components/basic/drop_down_search_v2/components/ClickOutside.js","components/basic/drop_down_search_v2/components/Label.js","components/basic/drop_down_search_v2/util.js","components/basic/drop_down_search_v2/constants.js","components/basic/drop_down_search_v2/components/Option.js","components/basic/drop_down_search_v2/components/Input.js","components/basic/drop_down_search_v2/components/Content.js","components/basic/drop_down_search_v2/components/NoData.js","components/basic/drop_down_search_v2/components/Item.js","components/basic/drop_down_search_v2/components/Dropdown.js","components/basic/drop_down_search_v2/components/Loading.js","components/basic/drop_down_search_v2/components/Clear.js","components/basic/drop_down_search_v2/components/Separator.js","components/basic/drop_down_search_v2/components/DropdownHandle.js","components/basic/drop_down_search_v2/drop_down_search.js","components/basic/advanced_calendar_placeholder_button/control_button/control_button.style.js","components/basic/advanced_calendar_placeholder_button/control_button/control_button.js","components/basic/advanced_calendar_placeholder_button/advanced_calendar_placeholder_button.style.js","components/basic/advanced_calendar_placeholder_button/advanced_calendar_placeholder_button.js","global_style.js","redux/types/map_types.js","components/side_bar/content/cards/lot/lot_container.js","hooks/useWindowSize.js","normalizr/schema.js","redux/types/setting_types.js","methods/utils/color_utils.js","methods/utils/device_utils.js","redux/types/status_types.js","constants/form_constants.js","redux/types/sidebar_types.js","redux/types/notifications_types.js","redux/types/authentication_types.js","components/basic/back_button/back_button.style.js","components/basic/back_button/back_button.js","methods/utils/array_utils.js","App.style.js","api/map_api.js","redux/actions/map_actions.js","api/objects_api.js","redux/actions/objects_actions.js","api/sounds_api.js","redux/actions/sounds_actions.js","api/data_stream_api.js","api/schedules_api.js","redux/actions/schedule_actions.js","api/settings_api.js","redux/actions/settings_actions.js","components/misc/splash_screen/splash_screen.style.js","components/misc/splash_screen/splash_screen.js","containers/api_container/api_container.js","redux/actions/data_stream_actions.js","methods/utils/skills_utils.js","containers/right_menu/right_menu.style.js","components/notifications/notification/notification.style.js","components/notifications/notification/notification.js","components/notifications/notifications.js","containers/right_menu/right_menu.js","containers/status_header/status_header.style.js","containers/status_header/status_header.js","containers/logger/logger.js","containers/side_bar/side_bar.style.js","components/side_bar/side_bar_buttons/side_bar_button.style.js","components/side_bar/side_bar_buttons/side_bar_button.js","redux/actions/locations_actions.js","redux/types/locations_types.js","components/side_bar/side_bar_switcher/side_bar_switcher.style.js","components/side_bar/side_bar_switcher/side_bar_switcher.js","components/side_bar/content/locations/locations_content.style.js","components/side_bar/content/content_list/content_list.style.js","components/side_bar/content/content_header/contnet_header.style.js","components/basic/plus_button/plus_button.style.js","components/basic/plus_button/plus_button.js","components/side_bar/content/content_header/content_header.js","constants/station_constants.js","components/side_bar/content/content_list/content_list.js","components/side_bar/content/locations/edit_location/edit_location.style.js","components/side_bar/content/locations/edit_location/location_button/location_button.style.js","components/side_bar/content/locations/edit_location/location_button/location_button.js","components/side_bar/content/locations/edit_location/associated_positions/associated_positions.style.js","components/basic/minus_button/minus_button.style.js","components/basic/minus_button/minus_button.js","components/side_bar/content/locations/edit_location/associated_positions/associated_position_card/associated_position_card.style.js","components/side_bar/content/locations/edit_location/associated_positions/associated_position_card/associated_position_card.js","components/side_bar/content/locations/edit_location/associated_positions/associated_positions.js","constants/location_constants.js","components/side_bar/content/locations/edit_location/edit_location.js","components/side_bar/content/locations/locations_content.js","components/side_bar/content/tasks/tasks_content.style.js","methods/utils/task_utils.js","components/side_bar/content/tasks/tasks_templates/route_task.js","components/basic/form/switch_field/switch_field.style.js","components/basic/form/switch_field/switch_field.js","components/side_bar/content/tasks/task_field/fields/load_unload_fields.js","components/side_bar/content/tasks/object_editor/object_editor.style.js","components/side_bar/content/tasks/object_editor/object_editor.js","redux/actions/widget_actions.js","components/basic/textbox_search/components/ClickOutside.js","components/basic/textbox_search/components/Label.js","components/basic/textbox_search/util.js","components/basic/textbox_search/constants.js","components/basic/textbox_search/components/Option.js","components/basic/textbox_search/components/Input.js","components/basic/textbox_search/components/Content.js","components/basic/textbox_search/components/NoData.js","components/basic/textbox_search/components/Item.js","components/basic/textbox_search/components/Dropdown.js","components/basic/textbox_search/components/Loading.js","components/basic/textbox_search/textbox_search.js","components/basic/textbox_search/components/Clear.js","components/basic/textbox_search/components/Separator.js","components/basic/textbox_search/components/DropdownHandle.js","components/basic/form/textbox_search_field/textbox_search_field.style.js","components/basic/form/textbox_search_field/textbox_search_field.js","components/side_bar/content/tasks/task_field/route_field.js","components/side_bar/content/tasks/task_form/route_form.js","components/side_bar/content/tasks/tasks_content.js","components/side_bar/content/devices/devices_content.style.js","components/side_bar/content/settings/settings.style.js","components/side_bar/content/devices/device_edit/device_edit.style.js","components/side_bar/content/devices/device_edit/device_schedule/device_schedule.style.js","components/side_bar/content/devices/device_edit/device_schedule/day_of_the_week_button.js","methods/utils/time_utils.js","components/side_bar/content/devices/device_edit/device_schedule/device_schedule.js","components/side_bar/content/devices/device_edit/device_edit.js","components/side_bar/content/devices/device_item/device_item.style.js","components/side_bar/content/devices/device_statistics/device_statistics.style.js","components/side_bar/content/devices/device_item/device_item.js","components/side_bar/content/devices/devices_content.js","components/side_bar/content/scheduler/schedule_list/schedule_list_item/schedule_list_item.style.js","components/side_bar/content/scheduler/schedule_list/schedule_list_item/schedule_list_item.js","components/side_bar/content/scheduler/schedule_list/schedule_list.style.js","components/side_bar/content/scheduler/scheduler_content.style.js","components/side_bar/content/scheduler/schedule_list/schedule_list.js","components/basic/modals/modals.style.js","components/basic/small_button/small_button.style.js","components/basic/small_button/small_button.js","components/basic/modals/modals.js","components/basic/form/button_group_field/button_group_field.style.js","components/basic/form/button_group_field/button_group_field.js","components/side_bar/content/scheduler/create_schedule_form/create_schedule_form.helpers.js","methods/utils/schedules_utils.js","components/side_bar/content/scheduler/create_schedule_form/create_schedule_form.style.js","components/side_bar/content/scheduler/create_schedule_form/button_group.style.js","components/side_bar/content/scheduler/create_schedule_form/create_schedule_form.js","components/side_bar/content/scheduler/scheduler_content.js","components/basic/form/list_item_field/list_item_field.style.js","components/basic/form/list_item_field/list_item_field.js","components/side_bar/content/processes/process_field/process_field.style.js","graphics/svg/add_route_button_path.js","components/side_bar/content/processes/process_field/process_field.js","methods/utils/function_utils.js","components/side_bar/content/processes/process_form/process_form.js","components/side_bar/content/processes/processes_content.js","components/side_bar/content/settings/shift_settings/shift_settings.style.js","components/side_bar/content/settings/shift_settings/shift_settings.js","constants/timezone_constants.js","settings/config.js","components/side_bar/content/settings/settings.js","components/side_bar/content/cards/card_menu/card_menu.style.js","components/side_bar/content/cards/card_menu/card_menu.js","components/side_bar/content/cards/columns/station_column/station_column.style.js","components/side_bar/content/cards/columns/column/column.style.js","components/side_bar/content/cards/columns/column/column.js","components/side_bar/content/cards/columns/station_column/station_column.js","components/side_bar/content/cards/columns/lot_queue/lot_queue.style.js","components/side_bar/content/cards/columns/lot_queue/lot_queue.js","components/side_bar/content/cards/columns/finish_column/finish_column.style.js","components/side_bar/content/cards/columns/finish_column/finish_column.js","components/side_bar/content/cards/card_zone/card_zone.style.js","components/side_bar/content/cards/card_zone/card_zone.js","components/side_bar/content/cards/summary_zone/summary_zone.style.js","components/side_bar/content/cards/summary_zone/summary_zone.js","components/side_bar/content/cards/cards.style.js","components/side_bar/content/cards/summary_header/summary_header.style.js","components/side_bar/content/cards/summary_header/summary_header.js","components/side_bar/content/cards/modals/modals.style.js","components/side_bar/content/cards/modals/delete_multiplie_lots_modal/delete_multiplie_lots_modal.js","components/side_bar/content/cards/modals/move_multiplie_lots_modal/footer_content/footer_content.style.js","components/side_bar/content/cards/modals/move_multiplie_lots_modal/footer_content/footer_content.js","components/side_bar/content/cards/modals/move_multiplie_lots_modal/pre_body_content/pre_body_content.style.js","components/side_bar/content/cards/modals/move_multiplie_lots_modal/pre_body_content/pre_body_content.js","components/side_bar/content/cards/modals/move_multiplie_lots_modal/move_multiplie_lots_modal.js","components/side_bar/content/cards/editors/sku_editor/sku_editor_modal.js","components/side_bar/content/cards/editors/card_editor/lot_editor_modal.js","components/side_bar/content/cards/editors/editor_container/editor_container.js","components/side_bar/content/cards/cards.js","components/side_bar/content/statistics/statistics.style.js","components/side_bar/content/statistics/station_columns/station_columns.style.js","components/widgets/widget_pages/statistics_page/statistics_page.style.js","components/widgets/widget_pages/statistics_page/statistics_overview/charts/charts.style.js","components/basic/sort_dropdown/sort_dropdown.style.js","components/basic/sort_dropdown/sort_dropdown.js","components/widgets/widget_pages/statistics_page/statistics_overview/charts/throughput_chart/line_throughput_chart/line_throughput_chart.js","components/widgets/widget_pages/statistics_page/chart_types/bar_chart.js","components/widgets/widget_pages/statistics_page/statistics_overview/statistics_overview.style.js","components/widgets/widget_pages/statistics_page/statistics_overview/charts/report_chart.js","components/basic/day_selector/day_selector.style.js","components/widgets/widget_pages/statistics_page/statistics_overview/data_selector/data_selector.style.js","components/basic/day_selector/day_selector.js","components/basic/timespan_selector/time_span_selector.style.js","components/basic/timespan_selector/time_span_selector.js","components/widgets/widget_pages/statistics_page/statistics_overview/statistics_overview.js","components/widgets/widget_pages/statistics_page/statistics_overview/charts/throughput_chart/throughput_chart.js","components/side_bar/content/statistics/station_columns/station_column/station_column.style.js","components/side_bar/content/statistics/station_columns/station_column/station_column.js","components/side_bar/content/statistics/station_columns/station_columns.js","components/side_bar/content/statistics/statistics_header/statistics_header.style.js","components/side_bar/content/statistics/statistics_header/statistics_header.js","components/side_bar/content/statistics/statistics.js","components/basic/modals/scan_lot_modal/scan_lot_modal.style.js","components/basic/modals/scan_lot_modal/scan_lot_modal.js","containers/side_bar/side_bar.js","containers/map_view/map_view.style.js","components/map/task_paths/task_paths.js","components/map/process_paths/process_paths.js","components/map/amrs/mir100/mir100.js","components/map/right_click_menu/right_click_menu.style.js","components/map/right_click_menu/right_click_menu.js","components/map/task_statistics/task_statistics.style.js","api/task_analysis_api.js","redux/actions/task_analysis_actions.js","components/map/task_statistics/task_statistics.js","components/map/route_confirmation/route_confirmation.style.js","components/map/route_confirmation/route_confirmation.js","components/widgets/widget_pages/widget_pages.style.js","components/widgets/widget_pages/widget_page_header/widget_page_header.style.js","components/widgets/widget_pages/dashboards_page/dashboards_page.style.js","components/widgets/widget_pages/dashboards_page/dashboards_page.js","components/widgets/widget_pages/objects_page/objects_page.style.js","components/widgets/widget_pages/objects_page/object_columns/object_columns.style.js","components/widgets/widget_pages/objects_page/object_link/object_link.js","components/widgets/widget_pages/objects_page/object_columns/object_columns.js","components/widgets/widget_pages/objects_page/objects_page.js","components/widgets/widget_pages/statistics_page/statistics_charts/statistics_charts.style.js","components/widgets/widget_pages/statistics_page/statistics_charts/statistics_charts.js","components/widgets/widget_pages/statistics_page/statistics_page.js","components/widgets/widget_pages/tasks_page/tasks_page.js","components/widgets/widget_pages/viewer_page/viewer_page.style.js","components/widgets/widget_pages/viewer_page/stream_container/stream_container.style.js","components/widgets/widget_pages/viewer_page/stream_container/stream_container.js","components/widgets/widget_pages/viewer_page/stream_info/stream_info.style.js","components/widgets/widget_pages/viewer_page/stream_info/stream_info.js","methods/utils/websocket_utils.js","components/widgets/widget_pages/viewer_page/test_buttons/test_buttons.style.js","components/widgets/widget_pages/viewer_page/viewer_page.js","components/widgets/widget_pages/viewer_page/test_buttons/test_buttons.js","components/widgets/widget_pages/widget_pages.js","components/widgets/widget_button/widget_button.style.js","components/widgets/widget_button/widget_button.js","components/widgets/widgets.style.js","components/widgets/widgets.js","components/map/locations/cart_waypoint/cart_waypoint.style.js","components/map/locations/cart_waypoint/cart_waypoint.js","methods/utils/widget_utils.js","components/map/locations/station/station.style.js","components/map/locations/location_svg/location_svg.style.js","components/map/locations/location_svg/location_svg.js","components/map/locations/drag_entity_proto.js","components/map/locations/station/station.js","components/map/locations/position/position.js","components/map/heatmap/heatspot/heatspot.js","components/map/heatmap/heatmap.js","components/map/ratsnest/ratsnest_path.js","components/map/ratsnest/ratsnest.js","components/map/map_apps/map_app/map_app_icons.js","components/map/map_apps/map_app/map_app.js","components/map/map_apps/map_apps.js","containers/map_view/map_view.js","components/hil_modals/hil_modals_content/hil_success.style.js","components/hil_modals/hil_modals_content/hil_success.js","containers/hil_modal/hil_modal.js","components/sign_in_up_page/sign_in_up_page.style.js","components/sign_in_up_page/sign_in_up_page.js","components/forgotPassword/forgotPassword.style.js","components/forgotPassword/forgotPassword.js","containers/authentication/authentication.style.js","containers/authentication/authentication.js","components/list_view/list_view.style.js","components/list_view/location_list/location_list.js","components/list_view/list_view.js","App.js","serviceWorker.js","index.js","components/side_bar/content/cards/lot/lot_simple_row/lot_simple_row.style.js","components/side_bar/content/cards/lot/lot_simple_row/lot_simple_row.js","methods/utils/locations_utils.js","api/devices_api.js","redux/actions/devices_actions.js","api/status_api.js","redux/actions/status_actions.js","common_css/modal_css.js","components/basic/container_wrapper/container_wrapper.js","components/basic/form/time_picker_field/time_picker/time_picker.js","components/basic/form/time_picker_field/time_picker/index.js","components/basic/form/time_picker_field/time_picker_field.style.js","components/basic/form/time_picker_field/time_picker_field.js","redux/types/ui_types.js","hooks/useLongPress.js","components/basic/form/number_field/number_field.style.js","components/basic/form/number_field/number_field.js","methods/utils/route_utils.js","components/widgets/widget_pages/dashboards_page/dashboard_screen/task_added_alert/task_added_alert.style.js","components/widgets/widget_pages/dashboards_page/dashboard_screen/task_added_alert/task_added_alert.js","components/basic/icon_button/icon_button.style.js","components/basic/icon_button/icon_button.js","components/basic/number_input/number_input.style.js","components/basic/number_input/number_input.js","methods/utils/task_queue_utils.js","components/basic/pdf_viewer/pdf_viewer.style.js","components/side_bar/content/cards/lot/lot.style.js","components/side_bar/content/cards/lot/lot.js","components/basic/form/drop_down_search_field/drop_down_search_field.style.js","components/basic/form/drop_down_search_field/drop_down_search_field.js","methods/utils/dashboards_utils.js","api/cards_api.js","common_css/button_css.js","components/basic/button/button.style.js","components/basic/button/button.js","components/basic/form/calendar_button_field/calendar_button_field.style.js","components/basic/form/calendar_button_field/calendar_button_field.js","components/side_bar/content/cards/editors/lot_template_editor/field_component_mapper/field_component_mapper.style.js","components/basic/file_uploader/file_uploader.style.js","components/basic/file_uploader/file_uploader.js","components/basic/form/file_uploader_field/file_uploader_field.js","components/side_bar/content/cards/editors/lot_template_editor/field_component_mapper/field_component_mapper.js","redux/actions/card_page_actions.js","api/report_events_api.js","redux/actions/report_event_actions.js","redux/types/widget_types.js","api/dashboards_api.js","components/widgets/widget_pages/dashboards_page/dashboards_header/dashboards_header.style.js","settings/settings.js","components/basic/form/useChange.js","components/widgets/widget_pages/dashboards_page/dashboard_buttons/dashboard_buttons.style.js","components/basic/modals/simple_modal/simple_modal.style.js","components/basic/modals/simple_modal/simple_modal.js","logger.js","redux/types/prefixes.js","components/side_bar/content/cards/sort_filter_container/sort_filter_container.js","higher_order_components/with_modal/with_modal.style.js","higher_order_components/with_modal/with_modal.js","components/basic/calendar_placeholder/calendar_placeholder.style.js","components/basic/calendar_placeholder/calendar_placeholder.js","api/task_queue_api.js","api/work_instructions_api.js","components/widgets/widget_pages/dashboards_page/dashboard_buttons/dashboard_button/dashboard_button.style.js","common_css/common_css.js","constants/common_contants.js","normalizr/schedules_schema.js","components/basic/button_group/button_group.js","components/basic/status_list/status_list_body/status_list_body.style.js","components/basic/status_list/status_list_item/status_list_item.style.js","components/basic/status_list/status_list_item/status_list_item.js","components/basic/status_list/status_list_body/status_list_body.js","components/basic/status_list/status_list_header/status_list_header.style.js","components/basic/status_list/status_list_header/status_list_header.js","components/basic/status_list/status_list_footer/status_list_footer.style.js","components/basic/status_list/status_list_footer/status_list_footer.js","components/basic/status_list/status_list.style.js","components/basic/status_list/status_list.js","components/basic/paste_mapper/paste_mapper.style.js","components/basic/paste_mapper/paste_mapper.js","components/side_bar/content/cards/editors/card_editor/lot_editor_container.style.js","components/side_bar/content/cards/editors/card_editor/lot_editor_container.js","redux/types/data_types.js","components/basic/modals/quantity_modal/quantity_modal.style.js","components/basic/modals/quantity_modal/quantity_modal.js","api/local_api.js","hooks/usePrevious.js","methods/utils/stations_utils.js","methods/utils/regex_utils.js","redux/types/tasks_types.js","api/tasks_api.js","redux/actions/tasks_actions.js","components/side_bar/content/cards/lot_sort_bar/lot_sort_bar.js","components/side_bar/content/cards/lot_filter_bar/flag_button/flag_button.js","components/side_bar/content/cards/lot_filter_bar/lot_filter_bar.js","hooks/useOnClickOutside.js","redux/types/api_types.js","components/basic/bounce_button/bounce_button.style.js","components/basic/bounce_button/bounce_button.js","components/basic/scroll_container/scroll_container.style.js","components/basic/scroll_container/scroll_container.js","components/basic/textbox/textbox.style.js","components/basic/textbox/textbox.js","components/basic/button_group/button_group.style.js","methods/utils/event_utils.js","components/hil_modals/hil_button/hil_button.style.js","components/hil_modals/hil_button/hil_button.js","api/stations_api.js","redux/actions/stations_actions.js","methods/utils/object_utils.js","components/basic/pdf_viewer/pdf_viewer.js","components/basic/calendar/calendar.style.js","components/basic/calendar/calendar.js","components/basic/page_selector/page_selector.style.js","components/basic/page_selector/page_selector.js","constants/local_settings_constants.js","methods/utils/style_utils.js","constants/dashboard_constants.js","components/basic/flexible_container/flexible_container.style.js","components/basic/flexible_container/flexible_container.js","components/side_bar/content/cards/editors/card_editor/labeled_button/labeled_button.style.js","components/side_bar/content/cards/editors/card_editor/labeled_button/labeled_button.js","methods/utils/lot_utils.js","components/side_bar/content/cards/editors/card_editor/lot_editor.style.js","api/positions_api.js","redux/actions/positions_actions.js","components/side_bar/content/cards/editors/sku_editor/sku_editor.style.js","components/side_bar/content/cards/editors/sku_editor/work_instructions/process_work_intructions/process_work_intructions.style.js","components/side_bar/content/cards/editors/sku_editor/work_instructions/work_instructions.style.js","components/side_bar/content/cards/editors/sku_editor/work_instructions/station_work_instructions/station_work_instructions.style.js","components/basic/edit_button/edit_button.style.js","components/basic/edit_button/edit_button.js","components/side_bar/content/cards/editors/sku_editor/work_instructions/station_work_instructions/station_work_instructions.js","components/side_bar/content/cards/editors/sku_editor/work_instructions/station_work_instructions/sku_context_station_work_instructions.js","components/side_bar/content/cards/editors/sku_editor/work_instructions/process_work_intructions/process_work_intructions.js","components/side_bar/content/cards/editors/sku_editor/work_instructions/work_instructions.js","components/side_bar/content/cards/editors/sku_editor/work_instructions/instruction_editor/instruction_editor.style.js","components/side_bar/content/cards/editors/sku_editor/work_instructions/instruction_editor/instruction_editor.js","methods/utils/workinstruction_utils.js","api/image_api.js","api/pdf_api.js","components/basic/form/change_detector/change_detector.js","components/side_bar/content/cards/editors/sku_editor/sku_editor.js","components/basic/form/scrolling_buttons_field/scrolling_buttons_field.style.js","components/basic/form/scrolling_buttons_field/scrolling_buttons_field.js","components/side_bar/content/cards/editors/card_editor/lot_sidebars/template_selector_sidebar/template_selector_sidebar.js","components/basic/modals/barcode_modal/barcode_modal.style.js","components/basic/modals/barcode_modal/barcode_modal.js","api/card_history_api.js","redux/actions/card_history_actions.js","components/basic/form/useWarn.js","components/side_bar/content/cards/editors/card_editor/lot_editor.js","components/basic/wobble_button/wobble_button.style.js","components/basic/wobble_button/wobble_button.js","components/side_bar/content/cards/editors/card_editor/lot_fields/lot_fields.style.js","components/side_bar/content/cards/editors/card_editor/lot_fields/lot_fields.js","normalizr/task_queue_schema.js","methods/utils/number_utils.js","redux/types/suffixes.js","redux/actions/work_instructions_actions.js","higher_order_components/portal.js","methods/utils/processes_utils.js","components/side_bar/content/cards/editors/lot_template_editor/lot_form_creator/lot_form_creator.style.js","components/basic/form/submit_error_handler/submit_error_handler.js","hooks/useScrollInfo.js","redux/types/schedule_types.js","redux/reducers/schedules_reducer_v2.js","redux/reducers/skills_reducer.js","redux/types/skills_types.js","redux/reducers/stations_reducer.js","redux/reducers/work_instructions_reducer.js","redux/reducers/positions_reducer.js","redux/reducers/objects_reducer.js","redux/reducers/api_reducer.js","redux/reducers/dashboards_reducer.js","redux/types/error_types.js","redux/reducers/error_reducer.js","redux/reducers/status_reducer.js","redux/reducers/task_queue_reducer.js","redux/types/keyboard_types.js","redux/reducers/keyboard_reducer.js","redux/reducers/tasks_reducer.js","redux/reducers/sounds_reducer.js","redux/reducers/settings_reducer.js","redux/types/models_types.js","redux/reducers/models_reducer.js","redux/types/skill_templates_types.js","redux/reducers/skill_templates_reducer.js","redux/types/poses_types.js","redux/reducers/poses_reducer.js","methods/utils/redux_utils.js","redux/reducers/request_status_reducer.js","redux/reducers/map_reducer.js","redux/reducers/sidebar_reducer.js","redux/reducers/widget_reducer.js","redux/reducers/devices_reducer.js","redux/reducers/notifications_reducer.js","redux/types/events_types.js","redux/reducers/events_reducer.js","redux/reducers/authentication_reducer.js","redux/reducers/processes_reducer.js","redux/reducers/report_events_reducer.js","redux/reducers/cards_reducer.js","redux/reducers/lots_reducer.js","redux/reducers/card_page_reducer.js","redux/reducers/index.js","redux/store/index.js","components/basic/basic_list_item/basic_list_item.style.js","components/basic/basic_list_item/basic_list_item.js","components/task_queue/task_queue_item/task_queue_item.style.js","components/task_queue/task_queue_item/task_queue_item.js","components/task_queue/task_queue.style.js","components/task_queue/task_queue.js","components/basic/scale_wrapper/scale_wrapper.style.js","components/basic/scale_wrapper/scale_wrapper.js","components/basic/calendar_placeholder_button/calendar_placeholder_button.style.js","components/basic/calendar_placeholder_button/calendar_placeholder_button.js","components/side_bar/content/cards/lot/lot_date_range_row/lot_date_range_row.style.js","components/side_bar/content/cards/lot/lot_date_range_row/lot_date_range_row.js","components/side_bar/content/cards/lot/lot_date_row/lot_date_row.style.js","components/side_bar/content/cards/lot/lot_date_row/lot_date_row.js","components/side_bar/content/cards/lot/lot_flags/lot_flags.style.js","components/side_bar/content/cards/lot/lot_flags/lot_flags.js","components/basic/rotate_button/rotate_button.style.js","components/basic/rotate_button/rotate_button.js","components/side_bar/content/cards/editors/card_editor/lot_editor_main_content/lot_editor_main_content.style.js","components/side_bar/content/cards/editors/card_editor/lot_editor_main_content/lot_editor_main_content.js","components/widgets/widget_pages/dashboards_page/dashboard_buttons/dashboard_split_button/dashboard_split_button.style.js","components/widgets/widget_pages/dashboards_page/dashboard_buttons/dashboard_split_button/dashboard_split_button.js","components/basic/form/text_field/text_field.style.js","components/basic/form/text_field/text_field.js","redux/actions/sidebar_actions.js","redux/types/objects_types.js","constants/device_constants.js","constants/scheduler_constants.js","redux/actions/task_queue_actions.js","redux/reducers/local_reducer.js","redux/reducers/task_analysis_reducer.js","redux/reducers/lot_templates_reducer.js","components/basic/pdf_viewer/pdf_viewer_modal.js","components/basic/widget_button/widget_button.style.js","components/side_bar/content/cards/editors/lot_template_editor/lot_template_editor_sidebar/lot_template_editor_sidebar.js","components/basic/form/field_wrapper/field_wrapper.style.js","components/basic/checkbox/checkbox.style.js","components/basic/form/checkbox_field/checkbox_field.js","components/basic/checkbox/checkbox.js","components/basic/form/field_wrapper/field_wrapper.js","components/side_bar/content/cards/editors/lot_template_editor/drop_container/drop_container.style.js","components/side_bar/content/cards/editors/lot_template_editor/drop_container/drop_container.js","components/side_bar/content/cards/editors/lot_template_editor/lot_form_creator/lot_form_creator.js","components/side_bar/content/cards/editors/lot_template_editor/template_form.js","components/side_bar/content/cards/multi_select_options/multi_select_options.style.js","components/side_bar/content/cards/multi_select_options/multi_select_options.js","components/side_bar/content/cards/zone_header/zone_header.js","components/basic/form/calendar_field/calendar_field.style.js","components/basic/form/calendar_field/calendar_field.js","methods/utils/form_schemas.js","theme.js","redux/actions/card_actions.js","redux/types/stations_types.js","redux/types/positions_types.js","redux/types/task_queue_types.js","normalizr/status_schema.js","redux/actions/dashboards_actions.js","methods/utils/station_utils.js","components/basic/form/error_tooltip/error_tooltip.style.js","components/basic/form/error_tooltip/error_tooltip.js","methods/utils/string_utils.js","methods/utils/card_utils.js","api/processes_api.js","redux/actions/processes_actions.js"],"names":["getLoggers","log","getLogger","dispatch","onStart","onSuccess","onError","a","error","type","GET_LOGGERS_FAILURE","payload","response","GET_LOGGERS_SUCCESS","GET_LOGGERS_STARTED","api","loggers","postLoggers","loaded","POST_LOGGERS_FAILURE","POST_LOGGERS_SUCCESS","POST_LOGGERS_STARTED","newLoggers","getLocalSettings","GET_LOCAL_SETTINGS_FAILURE","GET_LOCAL_SETTINGS_SUCCESS","GET_LOCAL_SETTINGS_STARTED","localSettings","postLocalSettings","settings","POST_LOCAL_SETTINGS_FAILURE","POST_LOCAL_SETTINGS_SUCCESS","POST_LOCAL_SETTINGS_STARTED","stopAPICalls","bool","STOP_API_CALLS","api_action","actionName","callback","args","FAILURE","SUCCESS","STARTED","GET_DEVICES","GET_DEVICES_STARTED","GET_DEVICES_SUCCESS","GET_DEVICES_FAILURE","POST_DEVICES","POST_DEVICES_STARTED","POST_DEVICES_SUCCESS","POST_DEVICES_FAILURE","PUT_DEVICES","PUT_DEVICES_STARTED","PUT_DEVICES_SUCCESS","PUT_DEVICES_FAILURE","DELETE_DEVICES","DELETE_DEVICES_STARTED","DELETE_DEVICES_SUCCESS","DELETE_DEVICES_FAILURE","DashboardScreen","props","useParams","stationID","dashboardID","editing","dashboards","lotID","useSelector","state","dashboardsReducer","stations","tasksReducer","tasks","taskQueueReducer","hilResponse","localReducer","mapViewEnabled","kickOffEnabledDashboards","finishEnabledDashboards","stationsReducer","devices","devicesReducer","currentDashboard","useDispatch","onDashboardOpen","bol","dashboardOpen","dispatchPutDashboard","dashboard","id","putDashboard","useState","addTaskAlert","setAddTaskAlert","reportModal","modalButtonId","setDashboardStation","showLotsList","setShowLotsList","selectedOperation","setSelectedOperation","isDevice","setIsDevice","useWindowSize","width","useEffect","getProcesses","handleToggleLock","locked","ADD_TASK_ALERT_TYPE","TASK_ADDED","label","updatedDashboard","_id","$oid","setTimeout","dashboardButtonId","isOpen","title","close","onSubmit","name","success","REPORT_SEND_SUCCESS","REPORT_SEND_FAILURE","message","dashboardId","stationId","quantity","KICK_OFF_SUCCESS","KICK_OFF_FAILURE","FINISH_SUCCESS","FINISH_FAILURE","process","handleTaskAlert","renderModal","showTitle","showBackButton","showEditButton","handleOperationSelected","op","visible","Container","styled","div","theme","bg","secondary","ArrowBackIosIcon","fg","primary","font","fontSize","sz1","RGB_Linear_Shade","hoverHighlightPer","hexToRGBA","QUANTITY_MODES","QUANTITY","FRACTION","CONTENT","QUANTITY_SELECTOR","FRACTION_SELECTOR","REVIEW","LOT_SELECTOR","UNLOAD","fractionOptions","fractionDecimals","HILModals","hilMessage","taskQueueID","item","lotId","lot_id","taskId","task_id","params","history","useHistory","subPage","warehouse","dispatchTaskQueueItemClicked","disptachHILResponse","disptachPutTaskQueue","putTaskQueue","dispatchSetActiveHilDashboards","active","dispatchSetShowModalId","setShowModalId","dispatchGetTaskQueue","getTaskQueue","dispatchGetStations","getStations","hilTimers","cards","cardsReducer","activeHilDashboards","task","setTask","hilType","load","unload","unloadStationId","station","loadStationId","trackQuantity","setTrackQuantity","selectedDashboard","setSelectedDashboard","hilLoadUnload","setHilLoadUnload","dataLoaded","setDataLoaded","content","setContent","lot","setLot","modalClosed","setModalClosed","getBinQuantity","getPreviousWarehouseStation","process_id","maxQuantity","setMaxQuantity","loadStationName","setLoadStationName","unloadStationName","setUnloadStationName","formRef","useRef","formikProps","current","values","setFieldValue","track_quantity","currentTask","activeHilCopy","deepCopy","hil_station_id","onHilSuccess","fraction","rest","newItem","hil_response","push","onHilFailure","putTaskQueueItem","newMax","parseInt","getStationName","renderUnloadContent","useCallback","unloadQuantity","Math","ceil","style","alignSelf","display","flexDirection","minHeight","alignItems","emphasize","renderFractionOptions","overflow","map","value","ind","decimal","containerCss","color","filter","cbrt","eval","onClick","renderQuantitySelector","minValue","maxValue","marginBottom","processId","validationSchema","hilModalSchema","innerRef","initialValues","validateOnChange","validateOnBlur","overlay","zIndex","backgroundColor","backdropFilter","transition","paddingTop","justifyContent","flex","scaleFactor","isMobile","showCustomFields","binId","containerStyle","margin","padding","iconName","iconColor","textColor","defaultProps","GET_LOGGERS","POST_LOGGERS","GET_LOCAL_SETTINGS","POST_LOCAL_SETTINGS","borderGlowCss","css","TextboxDiv","quinary","sz4","octonary","LightenDarkenColor","schema","solid","senary","Modal","cardShadow","Header","Label","span","sz3","StyledForm","Form","Title","h2","sz2","fontWeight","bold","BodyContainer","ButtonForm","ContentContainer","AddNewButtonContainer","septenary","button","background","clickable","hoverable","boxShadow","transform","disabled","quaternary","pointerEvents","borderGlow","ColorFieldContainer","i","ButtonWidthContainer","EditIcon","ReportButton","iconClassName","className","invert","height","lineHeight","minWidth","maxWidth","taskID","React","memo","ReportButtonContainer","reportButtons","reportButton","setReportButton","description","find","currItem","onClickWrapped","ReportModalButtons","buttonsIds","dragging","index","buttonId","isDragging","renderButtons","report_buttons","DefaultContainer","ColorPicker","StyledTwitterPicker","ColorButton","DropdownMenu","ColorOption","ColorField","mode","colors","useFormikContext","setFieldTouched","validateField","validateForm","useField","field","meta","touched","onChangeComplete","hex","onChange","currColor","triangle","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","NewButtonForm","cancel","reportButtonId","dashboardCopy","editingButton","currButton","formMode","FORM_MODES","UPDATE","CREATE","old_report_buttons","newReportButton","uuid","v4","onDelete","oldReportButtons","reportEventSchema","validateOnMount","enableReinitialize","setSubmitting","setTouched","resetForm","placeholder","InputComponent","Textbox","borderRadius","lines","readonly","DASHBOARD_BUTTON_COLORS","setAppElement","ReportModal","useContext","ThemeContext","onPostReportEvent","reportEvent","postReportEvent","noButtons","setNoButtons","addingNew","setAddingNew","setEditing","sending","setSending","setReportButtons","setReportButtonId","setDragging","errors","status","setValues","setErrors","setStatus","isNonEmptyArray","sendReport","dashboard_id","station_id","report_button_id","date","Date","getTime","Error","handleButtonClick","onRequestClose","aria-hidden","showBorder","report","onDragStart","isSource","willAcceptDrop","onDragEnd","onDrop","dropResult","removedIndex","addedIndex","element","shiftedButtons","arrayMove","groupName","getChildPayload","getGhostParent","document","body","lockAxis","tertiary","LotContainer","LotHeader","commonCss","LotTitle","p","LotButtonContainer","LotBodyContainer","LotFieldsContainer","DashboardLotFields","currentLot","processes","processesReducer","count","totalQuantity","getLotTotalQuantity","processName","renderLotFields","useMemo","getCustomFields","lotTemplateId","currIndex","arr","dataType","fieldName","key","isLast","length","FIELD_DATA_TYPES","STRING","EMAIL","labelStyle","countStyle","DATE","dateStyle","DATE_RANGE","dateRange","URL","INTEGER","ButtonContainer","DashboardLotButtons","handleMove","handleCancel","isDeviceRoute","handleScrap","isFinish","handleFinish","titleStyle","renderFinishButton","main","DEVICE_CONSTANTS","HUMAN","renderMoveButton","renderCancelButton","h3","InputForm","DashboardLotInputBox","dispatchPutCard","ID","putCard","lotCopy","fieldValues","inputBox","Object","keys","forEach","ind1","subFieldValues","ind2","inputValue","input","fields","onSave","subField","component","FIELD_COMPONENT_NAMES","INPUT_BOX","onInitialValues","render","arrayHelpers","marginTop","DashboardLotPage","taskQueue","routes","setCurrentLot","setCurrentTask","setIsFinish","showFinish","setShowFinish","lotContainsInput","setLotContainsInput","dispatchPostTaskQueue","handlePostTaskQueue","containsInput","processStations","getProcessStations","returnedRoute","getPreviousRouteForLot","getCurrentRouteForLot","isObject","bins","onBack","onFinish","cardName","custom","instructions","position","sound","handoff","deviceType","Id","CUSTOM_TASK_ID","result","getCards","flags","isDeviceConnected","TASK_EXISTS","isRouteInQueue","onMove","device_types","route","lotCount","quantityOneSchema","infoText","onCloseButtonClick","handleOnClick2","handleOnClick1","button_2_text","button_1_text","renderFinishQuantity","ModalContainerCSS","LotListContainer","Footer","SubTitle","BodyContainerCSS","Column","CloseButton","iconButtonCss","commonClickableIcon","buttonsCss","isButtons","noButtonsCss","BoxWrapper","children","sizeCb","boxRef","offsetHeight","offsetLeft","offsetTop","offsetWidth","x","y","getBoundingClientRect","x2","y2","width2","ref","SelectLotQuantity","selectedLots","initialIndex","submitForm","currentLotIndex","setCurrentLotIndex","tempCurrentLot","items","initialOption","selectLotQuantitySchema","formikHelpers","enableFlagSelector","maxQuanttiy","isEmpty","onForward","MergeReview","quantityOptions","onOptionClick","onNext","option","CONTENT_OPTIONS","MergeModal","card","availableFinishProcesses","availableKickOffProcesses","processCards","useScrollInfo","scrollInfo","setRef","availableLots","setAvailableLots","lotPositions","setLotPositions","setSelectedLots","setQuantityOptions","optionsInitialIndex","setOptionsInitialIndex","subTitle","setSubTitle","shift","setShift","tempAvailableCards","finishProcessId","currentCards","finishedCards","concat","box","left","top","reformattedBox","minX","minY","maxX","maxY","tempSelected","currPosition","minAx","minAy","maxAx","maxAy","minBx","minBy","maxBx","maxBy","rectanglesIntersect","indexOf","prevState","onShift","e","isShift","addEventListener","removeEventListener","contentLabel","prev","immutableReplace","handleResize","selectable","isSelected","includes","updated","itemIndex","immutableDelete","immutableInsert","lotIndex","initialBin","processOptions","updatedLot","moveLot","FINISH_BIN_ID","onAfterOpen","cardId","MenuContainer","DashboardOperationsMenu","handleCloseMenu","availablFinishProcesses","warehouseEnabled","setWarehouseEnabled","mergeEnabled","useOnClickOutside","stationProcesses","getStationProcesses","renderTaskQueueButton","svgColor","renderKickOffButton","kick_off","renderWarehouseButton","renderRouteWithoutLotButton","renderMergeButton","merge","withRouter","showSaveButton","toolTipId","showOperationsMenu","setShowOperationsMenu","mobileMode","right","data-tip","data-for","order","DashboardLotList","lotFilterValue","setLotFilterValue","LOT_FILTER_OPTIONS","sortMode","setSortMode","SORT_DIRECTIONS","ASCENDING","sortDirection","setSortDirection","shouldFocusLotFilter","selectedFilterOption","setSelectedFilterOption","renderLotCards","sortedCards","sortBy","getIsCardAtBin","currLot","currDevice","current_task_queue_id","currTaskQueue","currRoute","currLotIsInTaskQ","deviceAtUnload","next_position","quantityAtStation","lotHasQuantityAlreadyAtStation","onLotIsCurrentlyAtCart","getMatchesFilter","currCardId","DashboardDevicePage","onCustomTask","custom_task","handleDeviceDashboardRoutes","CloseIcon","HeaderMainContentContainer","ButtonsContainer","NoButtonsText","FadeLoaderCSS","ReportButtonsContainer","KickOffModal","useTheme","dispatchGetLotTemplates","getLotTemplates","onPutCard","kickOffEnabledInfo","setShouldFocusLotFilter","showLotEditor","setShowLotEditor","didLoadData","setDidLoadData","selectedLot","setSelectedLot","setLotCount","showQuantitySelector","setShowQuantitySelector","availableKickOffCards","setAvailableKickOffCards","onButtonClick","queueBin","queueBinCount","requestSuccessStatus","cardProcess","processRoutes","firstRouteId","Array","isArray","firstRoute","loadStation","firstStationBin","unalteredBins","firstStationCount","updatedCard","QUEUE","loadData","cardsResult","processesResult","currProcessId","currProcessCards","filteredCards","currCard","showProcessSelector","cardIndex","start_date","end_date","lotNumber","templateValues","loading","FinishModal","lotSelected","dispatchGetCards","dispatchHandlePostTaskQueue","taskQueueActions","finishEnabledDashboard","currentStationBin","currentStationBinCount","h1","TaskQueueModal","cursor","WarehouseModal","renderAvailableLots","warehouseStations","processID","warehouseCards","warehouseID","GET_DASHBOARDS","GET_DASHBOARDS_STARTED","GET_DASHBOARDS_SUCCESS","GET_DASHBOARDS_FAILURE","POST_DASHBOARD","POST_DASHBOARD_STARTED","POST_DASHBOARD_SUCCESS","POST_DASHBOARD_FAILURE","PUT_DASHBOARD","PUT_DASHBOARD_STARTED","PUT_DASHBOARD_SUCCESS","PUT_DASHBOARD_FAILURE","DELETE_DASHBOARD","DELETE_DASHBOARD_STARTED","DELETE_DASHBOARD_SUCCESS","DELETE_DASHBOARD_FAILURE","DASHBOARD_OPEN","RouteListContainer","widthBreakpoint","mobileL","tablet","RouteModal","handleAvailableTasks","GET_PROCESSES","GET_PROCESSES_STARTED","GET_PROCESSES_SUCCESS","GET_PROCESSES_FAILURE","POST_PROCESSES","POST_PROCESSES_STARTED","POST_PROCESSES_SUCCESS","POST_PROCESSES_FAILURE","PUT_PROCESSES","PUT_PROCESSES_STARTED","PUT_PROCESSES_SUCCESS","PUT_PROCESSES_FAILURE","DELETE_PROCESSES","DELETE_PROCESSES_STARTED","DELETE_PROCESSES_SUCCESS","DELETE_PROCESSES_FAILURE","EDITING_PROCESS","QUEUE_BIN_ID","BIN_IDS","FINISH","BIN_THEMES","ICON","COLOR","DISPLAY_NAME","TEXT_BOX","TEXT_BOX_BIG","NUMBER_INPUT","CALENDAR_SINGLE","CALENDAR_START_END","TIME_SELECTOR","IMAGE_SELECTOR","PDF_SELECTOR","MOMENT","IMAGE","PDF","FIELD_COMPONENT_DATA_TYPES","HISTORY","CALENDAR","MOVE","FORM_BUTTON_TYPES","SAVE","ADD","ADD_AND_NEXT","MOVE_OK","BASIC_LOT_TEMPLATE_ID","LOT_EDITOR_SIDEBAR_OPTIONS","SIDE_BAR_MODES","FIELDS","TEMPLATES","TEMPLATE_FIELD_KEYS","FIELD_NAME","REQUIRED","SHOW_IN_PREVIEW","BASIC_DEFAULT_DESCIPTION_FIELD","IGNORE_LOT_SYNC_WARNING","BASIC_DEFAULT_DATES_FIELD","getDefaultFields","uuidv4","BASIC_LOT_TEMPLATE","DEFAULT_NAME_DISPLAY_NAME","DEFAULT_COUNT_DISPLAY_NAME","DEFAULT_DISPLAY_NAMES","NAME_FIELD_ID","COUNT_FIELD_ID","NAME_FIELD","displayName","COUNT_FIELD","fieldPath","LOT_NUMBER_FIELD","REQUIRED_FIELDS","FORM_STATUS","VALIDATION_START","VALIDATION_SUCCESS","VALIDATION_ERROR","CREATE_START","CREATE_SUCCESS","CREATE_ERROR","WAITING","CANCELLED","NOT_STARTED","createBin","getDefaultBins","FLAG_OPTIONS","0","1","2","3","4","5","DESCENDING","LOT_SORT_OPTIONS","ModalContainer","HilButtonContainer","Body","LotInfoContainer","InnerContentContainer","SubtitleContainer","HilMessage","fractionButtonCss","unloadButtonCss","HilSubtitleMessage","h4","emphasisCss","InfoText","HilTimer","ColumnContainer","HilIcon","getMessageFromError","err","getSubmitDisabled","errorCount","isSubmitting","submitCount","ConfirmDeleteModal","handleClose","containerLayout","columnRowLayout","bodyStyle","headerStyle","footerStyle","textSpanStyle","positionColor","PositionTypes","shelf_position","svgPath","fill","rx","strokeMiterlimit","strokeWidth","d","cx","cy","r","attributes","parent","new","charger_position","cart_position","temporary_cart_position","newPositionTemplate","map_id","temp","pos_x","pos_y","rotation","convertD3ToReal","d3","mapResolution","translate","scale","naturalDims","convertRealToD3","flexItemCss","flexContainerCss","scrollCss","SortFilterContainer","ExpandContractIcon","Description","OptionContainer","ItemContainer","laptop","FlagsContainer","rotateButtonContainerCss","rotateButtonIconCss","selectedCss","FlagButton","selected","TitleText","pageStyle","isSmall","LotTemplateButton","CloseOutlinedIcon","lots","TemplateIcon","EditTemplateIcon","TemplateName","ListContainer","SidebarContent","ResizeBar","ResizeHandle","convertArrayToObject","array","reduce","obj","clone_object","copy","constructor","attr","hasOwnProperty","JSON","parse","stringify","timeString24HrToDate","timeString","newDate","setTime","arraysEqual","_arr1","_arr2","arr1","sort","arr2","replace","c","random","toString","getIsEquivalent","b","aProps","getOwnPropertyNames","bProps","propName","upperCaseFirstLetterInString","str","toLowerCase","split","word","toUpperCase","substr","join","setAcceleratingInterval","factor","initialRate","times","minRate","timeoutRef","tick","counter","internalCallback","newRate","clearTimeout","operator","logger","getLotTemplate","axios","method","url","apiIPAddress","headers","data","dataJson","debug","request","deleteLotTemplate","postLotTemplate","lotTemplate","putLotTemplate","setLevel","GET","LOT_TEMPLATE","lotTemplates","lotTemplatesObj","LOT_TEMPLATES","createdLotTemplate","POST","DELETE","PUT","setSelectedLotTemplate","SET","SELECTED","dropdownCss","valueCss","BarsContainer","columnCss","columnCss3","reactDropdownSelectCss","descriptionCss","DashboardButton","viewBox","preserveAspectRatio","CUSTOM_CHARGE_TASK_ID","CUSTOM_IDLE_TASK_ID","CUSTOM_IDLE_TASK_NAME","ROUTE_TYPES","PUSH","PULL","defaultTask","timeout","ClickOutside","container","createRef","handleClick","event","target","onClickOutside","contains","this","capture","passive","ClickOutsideComponent","Component","DefaultClickOutsideComponent","LabelComponent","DefaultLabelComponent","sz5","valueExistInSelected","val","getByPath","debounce","fn","timerId","delay","isEqual","object","path","acc","getProp","defaultValue","normalizedPath","undefined","LIB_NAME","Option","methods","OptionComponent","DefaultOptionComponent","optionRenderer","role","direction","labelField","removeItem","closeOnSelect","handlePlaceHolder","addPlaceholder","searchable","noValues","hasValues","Input","onBlur","stopPropagation","dropdown","focus","blur","handleKeyPress","create","search","createNew","prevProps","autoFocus","inputRenderer","inputRef","tabIndex","onFocus","size","getInputSize","readOnly","dropDown","onKeyPress","setSearch","filled","DefaultInputComponent","Content","ContentComponent","multi","contentRenderer","OptionsContainer","showSelectedBox","valueField","Value","DefaultContentComponent","NoData","NoDataComponent","noDataRenderer","noDataLabel","DefaultNoDataComponent","Item","scrollIntoView","behavior","block","inline","ItemComponent","ButtonComponent","TextComponent","onMouseEnter","onMouseLeave","itemRenderer","keepSelectedInList","aria-selected","aria-disabled","aria-label","addItem","disabledLabel","showButton","onDetailsClick","window","cancelBubble","DefaultItemComponent","red","DefaultContentContainer","DefaultButtonComponent","DefaultTextComponent","dropdownPosition","DropdownBoundingClientRect","getSelectRef","dropdownHeight","bottom","dropdownGap","innerHeight","Dropdown","dropdownRef","DropDownComponent","maxDropdownWidth","selectBounds","portal","dropdownRenderer","Fragment","AddNew","createNewLabel","searchResults","DefaultDropDownComponent","alpha","RR","slice","GG","BB","LoadingComponent","Loading","loadingRenderer","ClearComponent","Clear","clearRenderer","clearAll","SeparatorComponent","Separator","separatorRenderer","DropdownHandleComponent","dropdownOpen","DropdownHandle","dropdownHandleRenderer","onKeyDown","DropDownSearch","onDropdownClose","setState","onScroll","closeOnScroll","updateSelectBounds","select","getSelectBounds","action","srcElement","offsetParent","classList","keepOpen","clearOnBlur","clearOnSelect","preventDefault","newValues","onRemoveItem","toggleSelectAll","selectAll","onClearAll","valuesList","onSelectAll","options","areAllSelected","safeString","string","searchFn","regexp","RegExp","test","searchBy","activeCursorItem","handleKeyDown","bind","handleKeyDownFn","escape","enter","arrowUp","arrowDown","tab","shiftKey","shiftTab","currentItem","renderDropdown","ReactDOM","createPortal","dropdownRoot","newValue","onCreateNew","dropdownSize","createElement","appendChild","onDropdownOpen","fillable","fixedHeight","removeChild","debounceDelay","ReactDropdownSelect","paddingBottom","additionalProps","required","opacity","pattern","clearable","separator","dropdownHandle","DefaultReactDropdownSelect","buttonCss","ControlButton","on","ControlsContainer","FILTER_DATE_OPTIONS","LESS_THAN","EQUAL","GREATER_THAN","AdvancedCalendarPlaceholderButton","usable","filterValue","containsLessThan","setContainsLessThan","containsGreaterThan","setContainsGreaterThan","containsEquals","setContainsEquals","borderBottomLeftRadius","borderBottomRightRadius","globStyle","lrgFontSize","medFontSize","smlFontSize","lightBG","darkBG","white","black","grey1","grey2","grey3","grey4","grey5","green","GET_MAPS","GET_MAPS_STARTED","GET_MAPS_SUCCESS","GET_MAPS_FAILURE","GET_MAP","GET_MAP_STARTED","GET_MAP_SUCCESS","GET_MAP_FAILURE","SET_MAP_ATTRIBUTES","SET_CURRENT_MAP","setTotalQuantity","setCount","setTemplateValues","setProcessName","stationName","setStationName","windowSize","setWindowSize","innerWidth","devicesSchema","Entity","idAttribute","processesSchema","soundsSchema","tasksAnalysisSchema","positionsSchema","stationsSchema","processStrategy","GET_SETTINGS","GET_SETTINGS_STARTED","GET_SETTINGS_SUCCESS","GET_SETTINGS_FAILURE","POST_SETTINGS","POST_SETTINGS_STARTED","POST_SETTINGS_SUCCESS","POST_SETTINGS_FAILURE","DEVICE_ENABLED","col","amt","usePound","num","g","round","t","P","store","getState","connected","defaultWidgetPages","DeviceItemTypes","generic","icon","primaryColor","startGradientColor","stopGradientColor","widgetPages","trident","arm","cart","deviceFontSize","data-name","xmlns","rmVision","shelf","GET_STATUS_STARTED","GET_STATUS_SUCCESS","GET_STATUS_FAILURE","POST_STATUS_STARTED","POST_STATUS_SUCCESS","POST_STATUS_FAILURE","LOT_TEMPLATES_RESERVED_FIELD_NAMES","BASIC_FIELD_DEFAULTS","TEXT_FIELD","NUMBER_FIELD","CALENDAR_FIELD","CALENDAR_FIELD_RANGE","DATA_TYPE_DEFAULTS","SET_MODE","SET_ACTION","SET_WIDTH","SET_OPEN","PAGE_DATA_CHANGED","SET_CONFIRM_DELETE","SHOW_LOT_SCAN_MODAL","GET_NOTIFICATIONS_STARTED","GET_NOTIFICATIONS_SUCCESS","GET_NOTIFICATIONS_FAILURE","POST_NOTIFICATIONS_STARTED","POST_NOTIFICATIONS_SUCCESS","POST_NOTIFICATIONS_FAILURE","PUT_NOTIFICATION_STARTED","PUT_NOTIFICATION_SUCCESS","PUT_NOTIFICATION_FAILURE","DELETE_NOTIFICATION_STARTED","DELETE_NOTIFICATION_SUCCESS","DELETE_NOTIFICATION_FAILURE","TOGGLE_NOTIFICATION_TASK_QUEUE","GET_REFRESH_TOKEN","GET_REFRESH_TOKEN_STARTED","GET_REFRESH_TOKEN_SUCCESS","GET_REFRESH_TOKEN_FAILURE","POST_REFRESH_TOKEN","POST_REFRESH_TOKEN_STARTED","POST_REFRESH_TOKEN_SUCCESS","POST_REFRESH_TOKEN_FAILURE","BackSymbol","hovered","BackButton","setHovered","setActive","onMouseDown","onMouseUp","disable","ele","immutableSet","arrCopy","HeaderContainer","getMaps","getMap","setCurrentMap","getObjects","deleteObject","postObject","console","putObject","setSelectedObject","SET_SELECTED_OBJECT","setEditingObject","SET_EDITING_OBJECT","getSounds","getDataStream","getSchedules","postSchedule","schedule","deleteSchedule","scheduleId","putSchedule","createdSchedule","normalizedSchedules","normalize","scheduleSchema","createdSchedules","entities","schedules","SCHEDULE","normalizedSchedule","getSettings","postSettings","newSettings","deviceEnabled","SwitchContainer","SwitchContainerLabel","ToggleMapViewSwitch","checked","switchContainerStyle","SplashScreen","isApiLoaded","apiError","apiAddress","non_local_api_ip","apiIpAddress","setApiIpAddress","localSettingsState","setLocalSettingsState","dispatchPostLocalSettings","handleSubmitApiIpAddress","then","non_local_api","toggleMapViewEnabled","updatedLocalSettings","border","ApiContainer","onGetMaps","maps","onGetStations","onGetPositions","getPositions","onGetDashboards","getDashboards","onGetObjects","GET_OBJECTS_FAILURE","GET_OBJECTS_SUCCESS","GET_OBJECTS_STARTED","objects","normalizedObjects","onGetTasks","getTasks","onGetSounds","sounds","normalizedSounds","dispatchGetDataStream","handleDevicesSuccess","handleDevicesError","handleStatusSuccess","handleStatusError","handleTaskQueueSuccess","handleTaskQueueError","GET_TASK_QUEUE_FAILURE","INCREMENT_GET_DATA_FAILURE_COUNT","GET_TASK_QUEUE_SUCCESS","dataStream","device","normalizedDevices","task_queue","normalizedTaskQueue","taskQueueSchema","onGetProcessCards","getProcessCards","onGetCards","onGetProcesses","onGetSchedules","schedulesSchema","schedulesObj","scheduleIds","SCHEDULES","onGetDevices","getDevices","onGetSettings","onGetLoggers","onPutDevice","putDevices","onPostDashoard","postDashboard","MiRMapEnabled","settingsReducer","currentPage","setCurrentPage","setApiError","pageDataInterval","setPageDataInterval","criticalDataInterval","setCriticalDataInterval","mapDataInterval","setMapDataInterval","loadInitialData","setInterval","loadCriticalData","loadMapData","clearInterval","containsMirCart","device_model","updateCurrentPage","currentPageRouter","setDataInterval","pageParams","pageName","data1","data2","sidebar","widgetPage","loadObjectsData","loadSchedulerData","loadDashboardsData","loadLocationsData","loadTasksData","loadSettingsData","loadCardsData","loadMoreData","loadListViewData","onLoad","getStatus","handleDeviceWithoutADashboard","apiLoaded","getWorkInstructions","newDeviceDashboard","device_name","buttons","newDashboard","dashPromise","alert","splice","NotificationsContainer","overlaping","windowHeight","ClearText","NewNotificationContainer","NotificationContainer","NotificationHeader","NotificationTypeText","NotificationDateTime","NotificationBody","NotificationLabel","NotificationMessage","h5","sz6","Notification","dateTimeFormatter","dayDelta","timeDay","notification","dateTime","timeFormat","handleType","Notifications","notifications","notificationsReducer","RightMenu","showRightMenu","newNotification","overlapStatus","toggle","hiddenNotifications","toggleNotificationTaskQueue","handleClear","deleteTaskQueueAll","handleNewNotification","StatusHeader","LeftContentContainer","RightContentContainer","Logo","windowWidth","widthBreakPoint","LogoIcon","LogoSubtitle","PlayButton","play","good","bad","PlayButtonIcon","NotificationIcon","RightMenuContainer","NotificationText","setNewNotification","statusReducer","displayType","sideBarWidth","sidebarReducer","isSideBarOpen","open","taskQueueOpen","showConfirmDeleteModal","statusBarPath","setStatusBarPath","rightCurvePoint","setRightCurvePoint","setOverlapStatus","prevNotificationRef","onTaskQueueOpen","generatePath","mergeHeight","pageWidth","leftMargin","rightMargin","min","handleNotifications","types","onHideNotifications","handleTogglePlayPause","status_clone","pause_status","postStatus","in","stdDeviation","dx","dy","slope","playButtonClassName","renderRightContent","LoggerContainer","disableAll","trace","redux_logger","enableAll","updateLoggers","existingLoggerNames","level","enabled","getLevel","checkForLoggers","reduxLoggerNames","newLogger","info","addLoggers","loggersCopy","loggerConfig","removeLogger","loggerNames","snapshot","currentReduxLoggerNames","prevReduxLoggerNames","connect","SideBarOpenCloseButton","SidebarWrapper","SideBarButtonWrapper","currentMode","SideBarButtonIcon","gradient","SideBarButtonText","locations","SideBarButton","editingStation","editingPosition","positionsReducer","pageInfoChanged","pageDataChanged","taskEditing","editingTask","processEditing","editingProcess","dispatchLocationEditing","dispatchTaskEditing","tasksActions","dispatchProcessEditing","processesActions","dispatchSetPageDataChanged","confirmDeleteModal","setConfirmDeleteModal","handleConfirmationModal","location","pathname","setShowSideBarPage","flexGrow","SideBarContainer","SideBarSwitcher","dispatchSetSelectedStation","setSelectedStation","dispatchSetSelectedPosition","setSelectedPosition","wrapperRef","useLocation","page","setMode","deselectTask","ul","List","ListItem","isNew","ListItemRect","LocationTypeGraphic","svg","ListItemTitle","ListItemIcon","ListItemIconContainer","ErrorContainer","EditTitle","ClearIcon","DeleteForeverIcon","PlusSymbol","PlusButton","ContentHeader","onClickAdd","onClickSave","onClickBack","onClickClear","saveEnabled","backEnabled","handleTitle","float","stationColor","StationTypes","version","human","ContentList","executeTask","hideHeader","handleCardView","elements","renderLocationTypeIcon","LocationTypes","stroke","onPlus","broken","inQueue","isOnlyHumanTask","text","ContainerComponent","stylel","DefaultTypesContainer","LocationTypeContainer","LocationButtonConatiner","isNotSelected","LocationTypeButton","LocationTypeLabel","LocationButton","handleAddLocation","locationAdded","dragRef","setX","setY","onDrag","ui","deltaX","deltaY","onStop","axis","charAt","PositionsContainer","CardContainer","PositionListItem","CartIcon","MinusSymbol","MinusButton","Card","NewPositionCard","AssociatedPositionCard","positionName","positionType","handleAddPosition","handleDeletePosition","hovering","setHovering","draggable","Positions","handleSetChildPositionToCartCoords","dispatchSetSelectedStationChildrenCopy","positions","setSelectedStationChildrenCopy","selectedStation","currentMapId","selectedPosition","mapReducer","currentMap","selectedStationChildrenCopy","editingIndex","setEditingIndex","setDeletingIndex","deletingPosition","setDeletingPosition","mostRecentPositionId","setMostRecentPositionId","positionTypes","deletePosition","onAddAssociatedPosition","newPositionName","newPositionType","newPosition","addPosition","setStationAttributes","onDeleteAssociatedPosition","textboxContainerStyle","marginLeft","positionActions","LocationDefaultAttributes","EditLocation","selectedLocationRef","selectedStationChildrenCopyRef","dispatchPutStation","putStation","dispatchPostStation","postStation","dispatchDeleteStation","deleteStation","dispatchRemoveStation","removeStation","dispatchPageDataChanged","dispatchAddPosition","pos","dispatchDeletePosition","dispatchPutPosition","putPosition","dispatchPostPosition","postPosition","confirmExitModal","setConfirmExitModal","newName","selectedLocation","copyStation","copyPosition","save","setEditingStation","setEditingPosition","dispatchSetEditingPosition","child","onAddLocation","defaultAttributes","newLocation","addStation","onRemoveTempLocation","removePosition","handleSetPositionToCartCoords","devicePosition","updatedSelectedLocation","orientation","copyPos","updatedPosition","copyOfCopy","locationName","initialTouched","locationSchema","charCode","keyCode","changed","textStyle","LocationContent","dispatchSetEditingStation","onSetSelectedLocation","onEditLocation","editingLocation","locationsSortedAlphabetically","TaskContainer","dark","Icon","RowContainer","LabelHighlight","HelpText","DirectionText","DualSelectionButton","tasksSortedAlphabetically","tasksCopy","aName","bName","DefaultErrorContainerComponent","SwitchField","ErrorContainerComponent","mapOutput","mapInput","themeContext","fieldValue","onColor","default","LoadUnloadFields","fieldParent","isProcess","dispatchSetSelectedTask","setSelectedTask","selectedTask","soundsReducer","humanLocation","isMiRTask","isMiRandHumanTask","MIR_100","marginRight","inputStyle","splitVal","moment","set","format","flexWrap","textAlign","showHour","autocomplete","allowEmpty","defaultOpenValue","time","isString","output","ObjectContainer","ScrollableContainer","HoverContainer","ObjectEditor","onBackClick","onSaveObject","onAddObject","onDeleteObject","onSelectObject","saveDisabled","deleteDisabled","dispatchSetSelectedObject","dispatchSetEditingObject","objectsReducer","editingObject","selectedObject","routeObject","borderColor","paddingLeft","paddingRight","widgetLoaded","WIDGET_LOADED","hoverStationInfo","HOVER_STATION_INFO","textbox","currentValue","setValue","TextboxInput","hexanary","textboxPosition","TextboxBoundingClientRect","textboxHeight","textboxGap","TextBoxComponent","textboxRenderer","DefaultTextBoxComponent","TextBoxSearch","textboxOpen","onTextboxClose","renderTextbox","textboxRoot","onTextboxOpen","ReactTextboxSelect","DefaultReactTextboxSelect","textboxHandle","IconContainerComponent","TextboxSearchField","hasError","ReactDropdownSelectStyle","borderLeft","borderTop","borderRight","borderBottom","errorMessage","TaskField","isTransportTask","isProcessTask","isTaskInProcess","getFieldMeta","setFieldError","onRemove","processType","useChange","routeId","insertIndex","submitDisabled","dispatchSetEditing","dispatchSetSelectedHoveringTask","setSelectedHoveringTask","dispatchPutObject","PUT_OBJECT_FAILURE","updateObject","PUT_OBJECT_SUCCESS","PUT_OBJECT_STARTED","objectCopy","dispatchPostObject","POST_OBJECT_FAILURE","newObject","POST_OBJECT_SUCCESS","POST_OBJECT_STARTED","dispatchDeleteObject","DELETE_OBJECT_FAILURE","DELETE_OBJECT_SUCCESS","DELETE_OBJECT_STARTED","dispatchSetRouteObject","SET_ROUTE_OBJECT","setRouteObject","dispatchSetShowRouteConfirmation","showRouteConfirmation","dispatchDeleteRouteClean","deleteRouteClean","selectedProcess","fixingProcess","selectedHoveringTask","setShowEditor","confirmDeleteObjectModal","setConfirmDeleteObjectModal","needsValidate","setNeedsValidate","didSetHandoff","setDidSetHandoff","showObjectSelector","setShowObjectSelector","objectSaveDisabled","setObjectSaveDisabled","contentType","setContentType","deleteID","previousLoadStationId","usePrevious","getLoadStationId","previousUnloadStationId","getUnloadStationId","routeProcesses","getRouteProcesses","isProcessRoute","loadName","prevLoadName","unloadName","prevUnloadName","prevName","buildDefaultRouteName","route_object","setFixingProcess","showModal","setRouteConfirmationLocation","needsSubmit","modelName","dimensions","firstTask","isNextRouteViable","previousRoute","getPreviousRoute","routeBeforeBreak","unloadStationID","dropdownValues","selectedValue","selectedObjId","selectedRouteId","selectedRoute","renderLoadUnloadFields","toggleEditing","TaskForm","initialVals","remainingProps","dispatchSaveFormRoute","formRoute","saveFormRoute","dispatchRemoveTask","taskActions","onEditing","handleSubmit","handleBackClick","handleDelete","routeSchema","TaskContent","dispatchAddTask","setIsNew","getLoadStationDashboard","shiftCallback","onExecuteTask","getSidebarDeviceType","onHandlePostTaskQueue","fromSideBar","newTask","generateDefaultRoute","SettingsContainer","SettingsSectionsContainer","SettingsLabel","SettingContainer","ChevronIcon","ConnectionIcon","ConnectionButton","ShiftSettingsContainer","SectionsContainer","columnContainer","styles","DeviceIcon","ConnectionText","ToolTip","ScheduleContainer","DayOfTheWeekContainer","DayOfTheWeekText","DayOfTheWeekButton","day","daysOnValue","getMinutesFromMoment","m","minutes","hours","convert12hto24h","time12h","numericTime","modifier","convert24htoEpoch","time24h","convertDateto12h","settingState","timezone","toLocaleString","timeZone","convertDateToLocaleTimeZone","convert24hto12h","getHours","getMinutes","isDateToday","today","setHours","convertShiftDetailsToWorkingTime","shiftDetails","totalBreakTime","breaks","startOfBreak","br","start","duration","asSeconds","end","endOfBreak","startOfShift","endOfShift","DeviceSchedule","selectedDevice","containerSyle","showSecond","use12Hours","boxSizing","remove","newSchedule","deviceSchedule","DeviceEdit","deviceLocationDelete","setDeviceType","mirUpdated","setMirUpdated","dispatchSetSelectedDevice","setSelectedDevice","dispatchPutDevice","dispatchPostStatus","onMirConnection","mir","mir_connection","renderMIRIP","connectionIcon","connectionText","ip_address","renderDeviceMapLocation","onEditDeviceDashboard","deviceID","onSaveDevice","deviceCopy","idle_location","idleButtonExists","newButton","charge_level","chargeEnabled","max","deviceSchema","setValidationSchema","idleLocation","effect","multiline","offset","sharedDeviceCss","DeviceContainer","BatterySvg","BatteryText","BigCircle","DeviceTitle","EditDeviceIcon","StatusContainer","ConnectionStatusContainer","StatusText","MissionText","ConnectionStatusText","DeviceItem","batteryRectWidth","batteryRectRx","deviceName","setStationId","DeviceTypes","handleShowDeviceHil","deviceStatus","state_text","mission_status","handleDeviceStatus","mission_text","xmlnsXlink","y1","gradientUnits","stopColor","battery_percentage","deviceBattery","batteryRectFill","batteryRectStroke","batteryTextColor","toFixed","handleDeviceBattery","DevicesContent","renderExistingDevices","TopContainer","buttonViewCss","buttonGroupContainerCss","buttonViewSelectedCss","DaysContainer","TimeContainerlarge","TimeContainer","TimeTitle","TimeValue","ScheduleListItem","taskName","schedule_on","onSwitchPress","days_on","time_interval","interval_on","stop_time","start_time","next_time","scheduler","selectMultiple","selectedIndexes","NextExecution","TaskListContainer","ListEmptyContainer","ListEmptyTitle","ListEmptyFiller","titleCssSmall","sz7","ScheduleList","selectedScheduleId","setShowScheduleCreator","setSelectedScheduleId","openSchedule","timeToNextScheduled","setTimeToNextScheduled","timeToNextScheduledTemp","setTimeToNextScheduledHours","setTimeToNextScheduledMinutes","nextScheduleName","setNextScheduleName","setId","handleSwitchPress","scheduleItem","submitItem","fullSchedulesArr","minutesPerDay","currentTime","Number","startTime","stopTime","intervalTime","floor","handleNextExecution","stop_time_on","taskIsDeleted","daysOnArr","daysOfTheWeek","renderTasks","quarternary","TextContainer","TextMain","Caption","form","SmallButton","textMain","caption","onCancelClick","onDeleteClick","ButtonGroupField","ButtonView","Button","enableErrorTooltip","ButtonViewStyle","htmlFor","onPress","button_group_style","disabledMinutes","h","FieldLabel","ToggleTextLeft","ToggleTextRight","InputContainer","sz8","SelectContainer","ButtonGroupContainer","sharedTimePickerContainerStyle","TimePickerContainer","TimePickerErrorComponent","StyledTimePickerField","TimePickerField","SwitchLabel","DatePickerLabel","FormButtonsContainer","tiny","CreateScheduleForm","hideScheduleCreator","tasksArr","validate","startMin","stopMin","selectedScheduleItem","nowDate","nowTimeString","newScheduleTemplate","setSeconds","setMinutes","toTimeString","DEFAULT_TASK_ID","getScheduleItemTemplate","getInitialValues","touchedCount","accumulator","ButtonGroupComponents","ErrorComponent","autoComplete","autoCorrect","spellCheck","helpers","SchedulerContent","showScheduleCreator","showDeleteModal","setShowDeleteModal","schedulesReducer","handleSelectTask","DefaultErrorTooltipContainerComponent","edited","disabledCss","ListItemField","ErrorTooltipContainerComponent","onIconClick","onEditClick","onTitleClick","playDisabled","showPlay","unsaved","warn","stylec","AddRoutesContainer","ProcessField","currError","dispatchSetFixingProcess","dispatchAutoAddRoute","autoAddRoute","autoAddRoutes","routeConfirmationLocation","setEditingTask","showExistingTaskWarning","setShowExistingTaskWarning","setProcessRoutes","valuesRef","func","limit","lastFunc","lastRan","context","arguments","now","apply","throttle","setSelectedProcess","dispatchSetSelectedProcess_Throttled","handleAutoAddRoute","handleAddTask","newRoute","remainingRoute","updatedRoutes","isBrokenProcess","fieldMeta","currRouteValue","findIndex","currProcess","updateExistingRoute","remainingValues","cloneRoute","initialValue","newId","routeClone","match","handleTaskBack","handleDeleteRoute","willBreak","willRouteDeleteBreakProcess","handleExecuteProcessTask","routeName","prevObj","autoGenerateRoute","currProcessName","getChildren","showSummary","showStatistics","inProcess","handleIsRouteInProcess","transformOrigin","AddRouteButtonPath","currRouteId","textOverflow","whiteSpace","onAddToEndClick","x1","handleAddRoute","ProcessForm","toggleEditingProcess","dispatchPostProcess","postProcesses","dispatchPutProcess","putProcesses","dispatchSetSelectedProcess","dispatchDeleteProcessClean","deleteProcessClean","remainingInitialValues","handleSave","cleanRoute","mappedRoutes","handleBack","withRoutes","handleDeleteWithRoutes","handleDeleteWithoutRoutes","currRouteItem","objId","handleDefaultObj","handleInitialRoutes","processSchema","buttonType","ProcessesContent","dispatchEditing","currentPath","onCardView","newProcess","BreakContainer","BreakLabel","ChartButton","statistics","ShiftSettings","enableOutput","breaksEnabled","setBreaksEnabled","enabledBreaks","onSubmitShift","expectedOutput","startOfBreak1","endOfBreak1","switch1","startOfBreak2","endOfBreak2","switch2","startOfBreak3","endOfBreak3","switch3","shiftSettings","break1","break2","break3","dispatchPostSettings","renderBreaks","bk","adjustedInd","breakEnabled","breakName","switchName","breakStart","breakEnd","showMinute","throughputSchema","Timezones","Settings","dispatchGetLocalSettings","serverSettings","deviceEnabledSetting","serverSettingsState","setServerSettingsState","mapSettingsState","devicesEnabled","setDevicesEnabled","showShiftSettings","setShowShiftSettings","confirmUnlock","setConfirmUnlock","confirmLock","setConfirmLock","handleUpdateServerSettings","setting","updatedSettings","handleLockUnlockDashboards","handleUpdateLocalSettings","handleSumbitSettings","serverChange","deviceChange","toggleDevOptions","signOut","poolData","UserPoolId","config","ClientId","userPool","AmazonCognitoIdentity","getCurrentUser","authenticated","refreshToken","reload","SignOut","CardMenu","currentProcess","subpage","StationContainerCss","isCollapsed","StationHeader","HeaderRow","QuantityText","LabelContainer","StationTitle","dragEnter","RotationWrapperOuter","RotationWrapperInner","RotatedRouteName","StationContainer","maxHeight","onCardClick","selectedCards","HeaderContent","setSelectedCards","reduxCards","hoveringLotId","cardPageReducer","draggingLotId","dispatchSetDroppingLotId","setDroppingLotId","dispatchSetLotHovering","setLotHovering","dispatchSetDraggingLotId","setDraggingLotId","setDragEnter","lotQuantitySummation","setLotQuantitySummation","numberOfLots","setNumberOfLots","setCards","tempLotQuantitySummation","tempNumberOfLots","isSelectedCardsNotEmpty","setIsSelectedCardsNotEmpty","tempCards","shouldAcceptDrop","sourceContainerOptions","oldProcessId","getSelectedIndex","currLotId","currBinId","getLastSelected","lastSelectedIndex","getLastSelectedIndex","handleDrop","remainingPayload","droppedCard","oldBins","movedBin","remainingOldBins","oldCount","movedCount","existingIndex","DropResult","dragStartParams","dragEndParams","onDragEnter","onDragLeave","onDropReady","leadTime","object_id","isHovering","isLastSelected","glow","isFocused","lastSelectedLotId","selectedIndex","reverse","getBetweenSelected","StationsColumn","setCollapsed","cycle_time","LotQueue","onAddLotClick","setShowCardEditor","showCardEditor","FinishColumn","CardZone","handleCardClick","handleAddLotClick","allCards","draggedLotInfo","droppedLotInfo","draggingBinId","cardsSorted","setCardsSorted","setBins","queue","setQueue","finished","setFinished","deleteStationCycleTime","setDeleteStationCycleTime","deleteGetCycleTimes","getProcessStationsSorted","timespan","workingTime","stationCycleTimes","getStationAnalytics","throughput","throughPut","sum","dataPoint","null","unshift","stationCards","stationSimCards","stationCycleTime","details","convertShiftDetails","stationTimesUntilMove","pStationSimCards","getCardsInBin","qty","Infinity","topCard","minTimeUntilMove","nextCardsToBeMoved","tempStationCards","currSimTime","simStep","cardsToBeMoved","totalSimCards","elem","leadTimeWorkingSecondsOffset","leadTimeSecondsOffset","brStartIdx","isBreak","nowSeconds","cardsWLeadTime","shiftStart","shiftEnd","shiftDuration","leadTimeWorkingSeconds","leadTimeSeconds","brIdx","formattedLeadTime","isNaN","add","prevUnloadStationId","tempBins","tempQueue","tempFinished","tempCardsSorted","cardBins","matchesFilter","entries","binEntry","lotItem","currentObj","existingCards","route_id","cardsArr","ProcessesContainer","ZoneContainer","ProcessName","SummaryZone","selectedProcesses","processIndex","CardZoneContainer","MenuButton","InvisibleItem","TitleContainer","SummaryHeader","greyed","lotsContainerGreyedCss","ContainerWrapper","LoaderWrapper","LotWrapper","lotContainerStyle","Containerrr","DeleteMultipleLotsModal","setShowConfirmDeleteModal","dispatchDeleteCard","deleteCard","onDeleteLots","remainingBins","svgGreyedCss","svgSelectedCss","StationSelectorContainerWrapper","StationSelectorContainer","StationsScrollWrapper","StationsContainer","StationName","StationSvgContainer","StationButton","FooterContent","stationsAttributes","selectedStationId","setSelectedStationId","currStation","locationTypes","ProcessHeader","PreBodyContent","MoveMultipleLotsModal","processBins","setProcessBins","processIds","setProcessIds","processIdsIndex","setProcessIdsIndex","setStationsAttributes","isMoving","setIsMoving","tempProcessBins","tempStationAttributes","getStationAttributes","getProcessName","renderSelectedLots","lotsToRender","onMoveClick","currentProcessId","unchangedProcessBins","isLastProcess","lotWithUpdatedBins","getLotAfterBinMerge","previous","button_2_disabled","SkuEditorModal","withModal","SkuEditor","LotEditorModal","LotEditorContainer","EditorContainer","setSelectedCard","showEditor","selectedLotTemplatesId","lotTemplatesReducer","showSkuEditor","setShowSkuEditor","Cards","onShowCardEditor","showMoveModal","setShowMoveModal","selectedCard","setTitle","setCurrentProcess","isProcessView","setIsProcessView","showMenu","setShowMenu","filteredProcesses","setFilteredProcesses","setZoneSize","setSelectedProcesses","zoneRef","lotsBetween","isControlAndShift","currLotToAdd","currAddingBinId","currAddingLotId","currAddingProcessId","currExistingLot","currExistingLotId","currExistingBinId","currExistingProcessId","tempSelectedCards","isControl","zone","onClearClick","initialProcesses","StationColumnsContainer","ChartsContainer","NameContainer","CollapseIcon","StatisticsContainer","StatisticsSectionsContainer","PlotHeader","SinglePlotContainer","laptopL","PlotContainer","LoadingIcon","NoDataText","PlotTitle","ChartTypeButton","FormIcon","SortDropDown","dropDownSearchStyle","orderEnabled","onChangeOrderDirection","iconName1","iconCss","onStateOne","onStateTwo","LineThroughputChart","isData","isWidget","showForm","setShowForm","Actual","Expected","lineDataConverter","startIndex","convertedData","dataCopy","startEpoch","endEpoch","endIndex","stack","point","pointsAfterShiftEnd","slopeValues","startOfBreaks","nextOutput","inExpected","expOutput","nextExpOutput","yValue","renderResponsiveLine","line","xScale","xFormat","yFormat","yScale","stacked","axisTop","axisRight","axisBottom","axisLeft","orient","tickSize","tickPadding","tickOffset","tickValues","enable","from","anchor","justify","translateX","translateY","itemsSpacing","itemDirection","itemWidth","itemHeight","itemOpacity","symbolSize","symbolShape","symbolBorderColor","effects","itemBackground","ticks","grid","crosshair","strokeDasharray","BarChart","selector","mainTheme","timeSpan","layout","horizontal","enableGridX","enableGridY","fontFamily","domain","legend","legends","labels","markers","lineColor","lineStrokeWidth","dots","strokeOpacity","annotations","outlineWidth","outlineColor","link","outline","symbol","indexBy","animate","labelTextColor","legendOffset","tickRotation","legendPosition","gridYValues","OverviewContainer","PlotsContainer","ReportChart","reportData","isThroughputLoading","reportButtonsArr","reportButtonNames","filteredData","filteredDataColors","reports","currReport","lable","currReportEntries","updatedReport","currButtonId","bar","colorBy","TIME_SPANS","month","DateSelectorIcon","DateSelectorTitle","DaySelector","dateIndex","TimespanButton","TimeSpanSelector","setTimeSpan","timespanDisabled","live","week","year","all","StatisticsOverview","setDelayChartRender","widgetPageLoaded","widgetReducer","reportEventsReducer","reportEvents","throughputData","setThroughputData","setReportData","setDateIndex","setLoading","setTimespanDisabled","parentSortLevel","setParentSortLevel","currReportButtons","getAllData","dataInterval","getReportEvents","device_id","convertedThroughput","convertedTime","getReportData","getReportAnalytics","reportAnalyticsResponse","onTimeSpan","newTimeSpan","newDateIndex","newSortLevel","sort_index","dataPromise","renderDateSelector","date_title","newIndex","pc","loadLineChartData","loadBarChartData","disableTimeSpan","sortLevel","reportDate","ThroughputChart","lotsReducer","showBar","setShowBar","lineData","setLineData","setIsData","chartKeys","setChartKeys","tempChartKeys","tempFilteredData","deletedChartKeys","sortedIds","updatedItem","currEntry","currKey","currVal","currObjectName","onChartKeys","onDeletedKeys","deletedObjKeyIndex","currObject","currObjectNameCapitalized","capitalizeFirstLetter","currObjectDef","StationColumnContainer","StationCollapsedContainer","StationColumnHeader","rotated","StationColumn","setDateTitle","showReport","dataLoading","collapsed","currentStation","onGetAllData","onGetReportData","onGetThroughputData","StationColumns","renderStationColumn","HeaderSection","HeaderLabel","HeaderBar","layoutCss","StatisticsHeader","handleTimeSpan","handleSetShowReport","handleSelectSort","Statistics","setShowReport","setDate","setSortLevel","onSelectSort","processesToRender","renderStationColumns","ScanLotModal","showLotScanModal","SideBar","showSideBar","setShowSideBar","dispatchSetOpen","sideBarOpen","setOpen","dispatchSetWidth","setWidth","dispatchSetConfirmDelete","show","sidebarActions","dispatchShowLotScanModal","setPageWidth","prevWidth","setPrevWidth","prevParams","setPrevParams","barcode","setBarcode","full","setFull","setLotID","showSnoop","setShowSnoop","statId","setStatId","setCardId","binCount","setBinCount","confirmDeleteCallback","showScanLotModal","pageNames","boundToWindowSize","newWidth","disableBrowserBackButton","logKey","substring","splitLot","onScanLot","lotFound","hamburger","querySelector","prevPage","prevSubpage","prevId","handleSideBarOpenCloseButtonClick","dispatchEditingProcess","newSideBarState","dispatchEditingPosition","src","alt","handleClickOutside","MapContainer","MapGroup","MapImage","img","tall","TaskPaths","selectedTaskReducer","stateRef","loadPositionId","getLoadPositionId","unloadPositionId","getUnloadPositionId","mousePos","setX1","setY1","setX2","setY2","clientX","clientY","lockToMouse","setTaskAttributes","exitTaskPath","startPos","endPos","lineLen","sqrt","pow","lineRot","atan2","arrowRot","PI","dashes","secondaryColor","dashColor","strokeLinecap","delta","cos","sin","points","ProcessPaths","loadPosition","unloadPosition","unloadStation","MiR100","imgResolution","RightClickMenu","coords","buttonClicked","dispatchShowSideBar","disbaleStation","onSendCartToPosition","tempSelectedPosition","assign","onAddStation","tempSelectedStation","TaskStatisticsContainer","yPosition","xPosition","TaskText","TaskIcon","getTasksAnalysis","TaskStatistics","onGetTasksAnalysis","GET_","TASKS","ANALYSIS","_FAILURE","tasksAnalysis","_SUCCESS","_STARTED","taskAnalysis","taskAnalysisReducer","handleSingleTask","selectedTaskAnalysis","midX","midY","numerator","abs","denominator","atan","avg_run_time","successes","failures","RouteConfirmation","showRouteConfirm","routeConfirmLocation","showContinue","setShowContinue","processHasRoutes","loc","borderTopLeftRadius","borderTopRightRadius","showWidgetPage","WidgetPageContainer","PageContainer","dispatchSetDashboardKickOffProcesses","kickOffEnabled","setDashboardKickOffProcesses","dispatchSetDashboardFinishProcesses","finishEnabled","setDashboardFinishProcesses","dispatchPutDashboardAttributes","putDashboardAttributes","onUpdateKickoffFinishInfo","firstStationProcesses","lastStationProcesses","lastRouteId","lastRoute","getContainsKickoffButton","kickOffButton","getOperationButton","OPERATION_TYPES","KICK_OFF","getContainsFinishButton","finishButton","DndProvider","backend","HTML5Backend","LeftColumn","RightColumn","ColumnLabel","ObjectName","ObjectLink","styleO","objectLinks","rect","getElementById","ObjectColumns","parsedObjects","setObjectLinks","setLink","locationsReducer","handleObjectLinkPoints","editedLink","currentObject","currentObjectName","el","ObjectsPage","setParsedObjects","handleAssociatedObjects","parsedObjectsReturned","handleParseTaskBasedOnLoadUnload","ChartContainer","StatisticsCharts","StatisticsPage","showOverview","TasksPage","ConnectContainer","DeviceName","LiveText","VideoContainer","video","PlayerWrapper","loaderCss","ErrorText","StreamContainer","myPeerId","streams","getVideoElement","vidEle","srcObject","oldStream","getTracks","track","stop","interval","getVideoPlaybackQuality","droppedVideoFrames","videoElement","pause","resetVideo","autoPlay","playsInline","muted","StreamInfo","outID","peerID","RTCSessionDescription","RTCIceCandidate","default_rtc_configuration","iceServers","urls","iceCandidatePoolSize","asdasdsa","our_id","TestButtons","onStartClick","onCloseClick","ws_port","getOurId","client","ws_url","ViewerPage","streamConnected","setError","setStreams","setIsConnected","showStreamInfo","setShowStreamInfo","showTestButtons","setShowTestButtons","startConnection","closeConnection","peer_id","rtc_config","peer_connection","roomReconnectInterval","peerReconnectInterval","helloInterval","isConnected","reconnectOnClose","messageListeners","stateChangeListeners","remoteTrackListeners","errorListeners","statusListeners","rtc_configuration","WebSocket","onopen","setHelloInterval","call","onmessage","msg","clearHelloInterval","setRoomReconnectInterval","clearRoomReconnectInterval","startsWith","setPeerReconnectInterval","splitted","createCall","generateOffer","SyntaxError","sdp","onIncomingSDP","ice","onIncomingICE","reconnectToPeer","onerror","onclose","closePeerConnection","clearPeerReconnectInterval","RTCPeerConnection","ondatachannel","onDataChannel","ontrack","onRemoteTrack","onicecandidateerror","errorCode","onremovestream","onsignalingstatechange","signalingState","onicegatheringstatechange","iceGatheringState","oniceconnectionstatechange","iceConnectionState","onconnectionstatechange","connectionState","onicecandidate","candidate","send","to","setRemoteDescription","createAnswer","onLocalDescription","catch","desc","setLocalDescription","localDescription","createOffer","addIceCandidate","identity","peerIdentity","handleDataChannelOpen","handleDataChannelMessageReceived","String","textarea","send_channel","handleDataChannelError","handleDataChannelClose","receiveChannel","channel","restartIce","addMessageListener","removeMessageListener","l","onStateChange","getClient","addRemoteTrackListener","addErrorListener","addStatusListener","getError","reconnectingWebRTCSocket","taskQueueOpened","locationID","onWidgetPageLoaded","WIDGET_PAGE_LOADED","DashboardsPage","WidgetButtonButton","switcher","WidgetButtonText","WidgetButtonIcon","WidgetButton","coordinateMove","dispatchWidgetLoaded","dispatchHoverStationInfo","dispatchDashboardOpen","dispatchRemovePosition","onDefaultClick","onCartButtonClick","coordinate","onDashboardClick","defaultDashboard","postedDashboard","handleOnClick","pageID","WidgetLocationContainer","section","WidgetStationName","WidgetButtonContainer","hoverScale","WidgetButtonRow","WidgetButtonWrapper","idx","numItems","radius","theta","getTransformAroundCircle","WidgetBlurContainer","Widgets","hoveringInfo","widgetRadius","onWidgetClose","edit","renderWidgetButtons","Wrapper","getXPos","getYPos","transitionName","transitionAppear","transitionAppearTimeout","WaypointIcon","CartWaypoint","handleRenderWaypoints","handleWidgetHoverCoord","foreignObject","rd3tClassName","widgetInfo","heightWidth","realScale","WorkstationGroup","TranslateGroup","LocationSvg","rotating","shouldGlow","handleMouseEnter","handleMouseLeave","handleMouseDown","handleTranslating","handleRotating","mapApps","dominant-baseline","text-anchor","floodColor","in2","DragEntityProto","handleRotate","handleTranslate","handleDisableDrag","handleEnableDrag","handleTranslateEnd","setRotating","translating","setTranslating","bindDragListener","rotateStart","originalRotation","deltaRotation","translateStart","originalTranslation","deltaTranslation","ringElement","rectElement","drag","angle","sourceEvent","touches","rotate","translation","Station","mouseDown","dispatchSetStationAttributes","dispatchSetTaskAttributes","routeStart","getRouteStart","routeEnd","getRouteEnd","isStationUnloadStation","isStationLoadStation","routeAfterBreak","isStationInRoutes","routeIndex","getRouteIndexInRoutes","previousRouteEnd","nextRoute","highlight","onSetListener","handleWidgetHover","onSetStationTask","Position","positionId","dispatchSetPositionAttributes","setPositionAttributes","hoverLocationID","isPositionAtUnloadStation","isPositionInRoutes","isPositionAtLoadStation","shapeRendering","renderParentLine","onSetPositionTask","HeatSpot","wipRatio","d3Scale","spotSize","HeatMap","stationWIPRatios","setStationWIPRatios","WIPBuildupRatios","pStationId","stationWIPAccumulator","totalProcessWIP","stationWIP","WIPRatio","meanProcessWIP","stopOpacity","RatsnestPaths","RatsNest","mapProcesses","heatmap","ratsnest","enable-background","AppContainer","MapApp","appName","appIcons","MapApps","settingsCopy","app","toggleMapApp","MapView","checkForMapLoad","refreshMap","dispatchGetMap","guid","openLocation","dragNewEntity","draggingChild","validateNewEntity","newChildEntity","bindZoomListener","scaleExtent","resolution","rd3tSvgClassName","rd3tMapClassName","zoom","lastEvent","updatedSelectedStation","dispatchUpdateStations","updatedSelectedPosition","updatedChildrenPositions","dispatchUpdatePositions","dispatchUpdateDevices","initialRender","unbindZoomListener","onDisableDrag","onEnableDrag","onWidgetDisableDrag","widgetDraggable","onWidgetEnableDrag","calculateD3Geometry","mapContainer","mapImage","cHeight","cWidth","iHeight","iWidth","iNatHeight","naturalImageDimensions","iNatWidth","actualDims","handleRightClickMenu","showRightClickMenu","hasStartAndEnd","rd3tLocClassName","rd3tStationClassName","rd3tPosClassName","naturalScale","boundingClientHeight","heigh","getHasStartAndEnd","validateNewLocation","onMouseMove","mc","onContextMenu","onMouseOver","mi","naturalHeight","naturalWidth","zoomable","dispatchSetCurrentMap","updateStations","childrenPositions","updatePositions","deviceActions","HILSuccess","HILModal","onSetHilTimers","timers","onSetActiveHilDashboards","onSetShowModalId","taskQueueItemClicked","localHumanTask","showModalId","showModalID","statusTimerIntervals","setStatusTimerIntervals","deviceDashboard","handleHilsInTaskQueue","device_type","hil_message","renderHIL","taskQuantity","handleHILTimers","hil_start_time","biasedTimer","hil_timeout","timerInterval","dash","CapsIconContainer","CapsIcon","isSignIn","NoteText","loaderCSS","SignInUpPage","configData","signIn","email","password","confirmPassword","errorText","setErrorText","capsLock","setCapsLock","CognitoUserPool","authenticationData","Username","Password","authenticationDetails","AuthenticationDetails","userData","Pool","CognitoUser","authenticateUser","accessToken","username","hostname","onFailure","signUp","signInSchema","signUpSchema","keyEvent","Event","KEY","getModifierState","SignInUpContainer","ForgotPassword","verificationCode","checkPassword","enableValidation","setEnableValidation","resetPasswordVal","setResetPasswordVal","warning","setWarning","verification","forgotPassword","resetPassword","passwordResetSchema","emailSchema","Page","LogoContainer","Authentication","setSignIn","setForgotPassword","handleInitialLoad","cognitoUser","getSession","session","isValid","textDecoration","ListScrollContainer","stylesh","LocationList","onLocationClick","mapId","locationsArr","setLocationsArr","dashboardsArr","setDashboardsArr","tempLocationsArr","currLocation","dashboardName","getDashboardNameFromLocation","SCREENS","LOCATIONS","SETTINGS","DASHBOARDS","ListView","onPostStatus","showDashboards","setShowDashboards","showSettings","setShowSettings","setLocked","lotNum","setLotNum","CURRENT_SCREEN","onClickNHold","userSelect","owner","distance_to_next_target","App","getFailureCount","setLoaded","setApiLoaded","showStopAPIModal","setShowStopAPIModal","handleLoadLocalData","styleMode","apiMode","logMode","isLocalhost","Boolean","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","rootElement","href","origin","fetch","get","ready","unregister","checkValidServiceWorker","lastItemCss","Row","Count","LotSimpleRow","locationsCopy","compareExistingVsIncomingLocations","incomingLocations","existingLocations","existingLocation","incomingLocation","change_key","updateDevices","isRow","showHighlight","onHoverChange","highlightColor","shiftable","DeliTimePicker","popupClassName","StyledTimePicker","TimePicker","TimePickerCss","LOT_DRAGGING","LOT_DROPPING","FIELD_DRAGGING","COLUMN_HOVERING","LOT_HOVERING","SET_SIZE","isTouchEvent","useLongPress","onLongPress","onLongPressEnd","shouldPreventDefault","longPressTriggered","setLongPressTriggered","clear","shouldTriggerClick","onTouchStart","onTouchEnd","errorCss","longPressOptions","NumberField","longPressing","setLongPressing","valueState","setValueState","previousValue","setPreviousValue","focused","setFocused","createLongPressHandler","NUMBER_INPUT_BUTTON_TYPES","PLUS","longPlusPressEvent","longMinusPressEvent","MINUS","isInteger","inputCss","minusDisabled","onInputChange","enteredValue","enteredValueInt","plusDisabled","inputChildren","storeState","nameA","nameB","containsHuman","containsNonHuman","currType","currentRoute","hasStart","hasEnd","processRouteIds","containsStation","AddTaskAlertContainer","AddTaskAlertLabel","AddTaskAlertMessage","TaskAddedAlert","alertColor","ADDING","activeContainerStyle","hoverContainerStyle","focusContainerStyle","disabledContainerStyle","isActive","IconButton","usableCss","notUsableCss","NumberInput","onMinusClick","onPlusClick","inputDisabled","buttonStyle","onWheel","onMouseWheel","currDeviceType","LoaderContainer","DocumentOuterContainer","DocumentContainer","notSelectedCss","glowCss","focusedCss","CardName","LotNumber","FooterContainer","Lot","dispatchPutCardAttributes","putCardAttributes","formatLotNumber","formattedLotNumber","setFormattedLotNumber","popupOpen","renderFlags","contentStyle","arrowStyle","trigger","closeOnDocumentClick","currOption","currColorId","DefaultFieldContentContainer","DefaultFieldDropdownContainer","DropDownSearchField","fieldLabel","FieldContentContainer","FieldDropdownContainer","updatingValue","setUpdatingValue","dashboardIds","getLocationDashboard","getDashboardDisplayName","entry","currValue","availableTasks","idleButton","chargeButton","availableRoutes","getCard","getCardsCount","postCard","activeButtonCss","onButtonCss","hoverButtonCss","basicButtonCss","buttonTheme","CalendarButtonField","CalendarComponent","CalendarField","defaultStartText","defaultEndText","defaultText","RequiredText","UploadButton","FileUploader","inputFile","file","setFile","showFile","setShowFile","click","onOkClick","files","FileUploaderField","warnings","REQUIRED_TEXT","FieldComponentMapper","preview","showName","showErrorStyle","selectRange","onCalendarClick","setFieldDragging","reportEventsObj","current1","REPORT_EVENTS","createdReportEvent","REPORT_EVENT","stationAnalytics","WIDGET_XY_COORDINATES","deleteDashboards","postDashboards","putDashboards","LockContainer","LockIcon","AssignmentOutlinedIcon","moreLots","ls","parsedLocalSettings","hostServerIpAddress","nonLocalIp","subscribe","changedSet","setChanged","setInitialValue","ContainerCss","conditionTextCss","ButtonContainers","SimpleModal","button_1_disabled","category","defineProperty","writable","getCategoryLoggers","categoryLoggers","WrappedComponent","DatesContainer","DateArrow","ContentTitle","CalendarContainer","CalendarPlaceholder","onEndClick","minDate","maxDate","PlaceholderButton","showCalendarPopup","setShowCalendarPopup","rangeIndex","setRangeIndex","setDisplayName","closePopup","tempDisplayName","jsDateToString","renderCalendar","tempCurrVal","cloneElement","onClose","Calendar","CalendarPlaceholderButton","postTaskQueue","taskQueueItem","deleteTaskQueueItem","getWorkInstruction","deleteWorkInstruction","postWorkInstruction","workInstruction","putWorkInstruction","ConditionText","IconContainer","SchemaIcon","overflowTextCss","errorGlow","newGlow","rowContainer","commonIcon","trapezoidCss","SORT_OPTIONS","friday","monday","saturday","sunday","thursday","tuesday","wednesday","ButtonGroup","containerProps","buttonViewProps","buttonProps","innerBorderStyle","lastBorderStyle","underlayColor","selectedTextStyle","selectedButtonStyle","activeOpacity","setOpacityTo","onHideUnderlay","onShowUnderlay","disabledStyle","disabledTextStyle","disabledSelectedStyle","disabledSelectedTextStyle","buttonsLength","isDisabled","RowTitles","cellCss","Filler","NameTitle","StatusMessageTitle","Index","Name","ColumnWrapper","TooltipContainer","StatusMessage","StatusIcon","EditButton","rowCss","InsideTooltipContainer","li","ErrorHeader","ErrorLabel","ErrorKey","ErrorColumn","ErrorValue","FADE_LOADER_COLORS","StatusListItem","resourceCode","resourceMessage","validationCode","validationMessage","showTopBorder","showBottomBorer","onCreateClick","created","displayNames","mappedErrors","setMappedErrors","setHasErrors","mappedWarnings","setMappedWarnings","hasWarnings","setHasWarnings","tempMappedErrors","tempCurrKey","currErrCopy","tempMappedWarnings","renderErrorTooltip","currErr","currErrIndex","currItemIndex","tooltip","StatusListBody","onItemClick","currDatem","validationStatus","resourceStatus","code","StatusListHeader","onCanceleClick","StatusListFooter","onShowMapperClick","onCreateAllClick","StatusList","SectionBreak","hr","TableContainer","Table","FieldNameTab","Receptacle","ReceptacleInner","FieldNamesContainer","SectionTitle","SectionDescription","FieldButton","FieldName","FieldDescription","SelectButton","PasteMapper","onCancel","availableFieldNames","setSelectedFieldNames","onPreviewClick","reset","hidden","table","selectedFieldNames","fieldLabelsIndex","setFieldLabelsIndex","fieldDirection","junk","usedAvailableFieldNames","setUsedAvailableFieldNames","setIsRow","tempFieldLabels","currCol","currColIndex","currFieldName","availableField","availableDisplayName","isEqualCI","tempUsedFieldNames","currField","currAvailableDataType","currAvailableIndex","currAvailableDisplayName","currSelectedIndex","currSelectedDisplayName","trim","removeIndex","updatedTable","trimmedCol","selectedField","behaviour","currDisplayName","isUsed","verticalAlign","currRow","currRowIndex","inputComponent","inputVal","outputVal","mappedOutputVal","destinationField","finalValue","fieldId","existingData","currentFieldData","parsedDate","createPayload","PasteForm","handlePreviewClick","templateMapperSchema","validateSync","abortEarly","inner","currentError","PageSelector","PageSelectorButton","PageSelectorText","SimpleModalText","dispatchPostCard","localSettingsLoaded","lastLotTemplateId","mappedStatus","setMappedStatus","setSelectedIndex","mappedValues","setMappedValues","mappedTouched","setMappedTouched","pasteTable","setPasteTable","disablePasteModal","setDisablePasteModal","resetPasteTable","setResetPasteTable","showPasteMapper","setShowPasteMapper","showSimpleModal","setShowSimpleModal","pasteMapperHidden","setPasteMapperHidden","showStatusList","setShowStatusList","createdLot","setCreatedLot","fieldNameArr","setFieldNameArr","setLotTemplate","lotTemplateName","setLotTemplateId","setCard","collectionCount","setCollectionCount","lazyCreate","setLazyCreate","cardNames","setCardNames","showStatusListLazy","setShowStatusListLazy","previousSelectedIndex","getCount","lotNumberTimer","tempLotTemplateId","tempLotTemplate","createLot","onAddCallback","currMappedValue","currMappedError","currMappedTouched","currMappedStatus","newFieldNameArr","getDisplayName","tempCardNames","onPasteEvent","setPending","previousStatus","cb","validationResult","validateLot","ValidationError","newBins","newProcessId","uniqueNameSchema","lotErrors","errorObj","pathStringToObject","updatedTouched","setNestedObjectValues","previousTouched","editLotSchema","rows","clipboardData","getData","cells","currStatus","tempMappedValues","currMappedLot","currMappedLotIndex","newLot","convertPastePayloadToLot","handlePasteFormCreateClick","onAddClick","onShowCreateStatusClick","disabledAddButton","showCreationStatusButton","showPasteIcon","onPasteIconClick","onValidate","footerContent","CARD","CARDS","WORK_INSTRUCTION","WORK_INSTRUCTIONS","SHOW_EDITOR","SHOW_FORM_EDITOR","LOT","LOTS","PROCESS_CARDS","CARD_HISTORY","DATA_PAGE","DASHBOARD","SHOW_BARCODE_MODAL","QuantityModal","localStorage","getItem","setItem","locStorage","locSettings","defaultLocalSettings","routeID","timeStringRegex","oidRegex","notBrokenRegex","notTaskDeletedRegex","TASK","GET_TASKS","GET_TASKS_STARTED","GET_TASKS_SUCCESS","GET_TASKS_FAILURE","POST_TASK","POST_TASK_STARTED","POST_TASK_SUCCESS","POST_TASK_FAILURE","PUT_TASK","PUT_TASK_STARTED","PUT_TASK_SUCCESS","PUT_TASK_FAILURE","DELETE_TASK","DELETE_TASK_STARTED","DELETE_TASK_SUCCESS","DELETE_TASK_FAILURE","ADD_TASK","SET_TASKS","UPDATE_TASK","UPDATE_TASKS","REMOVE_TASK","REMOVE_TASKS","SET_TASK_ATTRIBUTES","SELECT_TASK","SET_SELECTED_TASK","DESELECT_TASK","EDITING_TASK","SET_SELECTED_HOVERING_TASK","SET_SHOW_ROUTE_CONFIRMATION","SET_ROUTE_CONFIRMATION_LOCATION","AUTO_ADD_ROUTE","postTask","deleteTask","putTask","normalizedTasks","updateTask","taskCopy","dashboardsActions","putRouteClean","postRouteClean","objectId","addTask","removeTask","selectTask","LotSortBar","lotSortOptions","setLotSortOptions","templateFields","getAllTemplateFields","tempLotSortOptions","currTemplateField","defaultTypes","VALUE_MODES","LotFilterBar","lotFilterOptions","setLotFilterOptions","valueMode","setValueMode","tempLotFilterOptions","newFilterOption","newFilterValue","prevOptions","newOptions","optionIndex","lessThanIndex","greaterThanIndex","prevValue","handler","listener","SET_CONDITIONS_API","SET_SCHEDULES_API","SET_STATUS_API","SET_TASK_QUEUE_API","SET_TASKS_API","POST_","DELETE_","PUT_","activeStyle","hoverStyle","BounceButton","ScrollContainer","Divider","setScrolling","threshold","dividerTransition","showDivider","setShowDivider","TextboxContainer","TextboxLabel","TextboxArea","inputAreaComponent","keepFocus","autofocus","ctrlKey","metaKey","HilButtonCss","HilButtonText","HilButton","textCss","unselectable","onselectstart","onmousedown","GET_STATIONS_FAILURE","GET_STATIONS_SUCCESS","GET_STATIONS_STARTED","normalizedStations","POST_STATION_FAILURE","POST_STATION_SUCCESS","POST_STATION_STARTED","stationCopy","onPostStation","newStation","PUT_STATION_FAILURE","PUT_STATION_SUCCESS","PUT_STATION_STARTED","onSaveChildren","updateStation","putStationWithoutSavingChildren","DELETE_STATION_FAILURE","DELETE_STATION_SUCCESS","DELETE_STATION_STARTED","onDeleteStation","ADD_STATION","UPDATE_STATION","UPDATE_STATIONS","onRemoveStation","updatedId","REMOVE_STATION","SET_STATION_ATTRIBUTES","SET_SELECTED_STATION","EDITING_STATION","stationsState","tasksState","deleteDashboard","relevantTask","positionsState","parsedTasks","prop","delimitter","pathItems","pdfjs","GlobalWorkerOptions","workerSrc","require","PdfViewer","numPages","setNumPages","pageNumber","setPageNumber","changePage","prevPageNumber","onLoadSuccess","StyledCalendar","Selector","Text","itemCount","getDebugStyle","REPORT","TYPES","ROUTES","OPERATIONS","FlexibleContainer","LabeledButton","fallback","returnVal","testFilterOption","filterOptions","testValue","toDateString","filterMode","filterDataType","filterFieldName","filterTemplateId","currFilterId","fieldInLot","lotField","getLotField","filterValue1","filterOptions1","filterValue2","filterOptions2","toIntegerOrZero","searchKey","searchValue","flat","minimumIntegerDigits","useGrouping","currBin","currLotTemplate","alreadyExists","currExistingLabel","currExistingDataType","includeNonPreview","customFieldValues","syncWithTemplate","showInPreview","lotToMove","currentBinId","destinationBinId","unchangedLotAttributes","destinationBin","unchangedBins","lotProcess","prevRoute","startBinId","startBin","destinationBinQuantity","startBinQuantity","SectionContainer","TheBody","ProcessFieldContainer","mainCss","containsSelected","normal","iconContainerCss","ObjectInfoContainer","FieldsHeader","ContentValue","fieldValueCss","TemplateButton","PasteIcon","rowCss2","SubHeader","IconRow","HistoryBodyContainer","HistoryItemContainer","textCommon","historyContainerCommon","HistoryDateContainer","HistoryDateText","HistoryUserContainer","HistoryUserText","HistoryInfoContainer","HistoryInfoText","SyncProblem","SyncProblemIcon","Sync","SyncIcon","sync","GET_POSITIONS_FAILURE","GET_POSITIONS_SUCCESS","GET_POSITIONS_STARTED","normalizedPositions","POST_POSITION_FAILURE","POST_POSITION_SUCCESS","POST_POSITION_STARTED","postedPosition","PUT_POSITION_FAILURE","PUT_POSITION_SUCCESS","PUT_POSITION_STARTED","positionCopy","updatePosition","stationDelete","DELETE_POSITION_FAILURE","DELETE_POSITION_SUCCESS","DELETE_POSITION_STARTED","onDeletePosition","ADD_POSITION","UPDATE_POSITIONS","REMOVE_POSITION","SET_POSITION_ATTRIBUTES","SET_SELECTED_POSITION","EDITING_POSITION","SET_SELECTED_STATION_CHILDREN_COPY","devicesState","positionIndex","newChildIndex","newChildInd","relevantDevice","TemplateNameContainer","TemplateLabel","Container2","WorkInstructionsContainer","ValidityIcon","valid","InstructionContainer","VALIDITY_STATUSES","StationWorkInstructions","workInstructions","validityStatus","checkWorkInstructionValue","SkuContextStationWorkInstructions","SkuContext","Consumer","setShowInstructionEditor","showInstructionEditor","ProcessWorkInstructions","stationIds","scrolling","WorkInstructions","FieldsContainer","FieldContainer","InstructionEditor","setStation","formMeta","iterateWorkInstructionFields","iterateWorkInstructions","instructionObjects","processEntry","stationObjs","stationEntry","b64toBlob","b64Data","byteCharacters","atob","byteArrays","byteNumbers","charCodeAt","byteArray","Uint8Array","Blob","getPdf","blobData","postPdf","pdf","responseData","responseDataJson","ChangeDetector","InstructionEditorModal","createContext","dispatchPutLotTemplate","dispatchPostWorkInstruction","dispatchPutWorkInstruction","dispatchPostLotTemplate","reduxWorkInstructions","workInstructionsReducer","setFormMode","editingFields","setEditingFields","confirmDeleteTemplateModal","setConfirmDeleteTemplateModal","pdfs","setPdfs","getFormCustomFields","checkForPdfs","workInstructionId","pdfId","mappedWorkInstructions","formData","FormData","postedPdf","templateWorkInstructions","createdLotTemplateId","iterateWorkInstructionsSync","mappedWorkInstructionObj","mappedField","convertedValue","convertValue","getDefaultWorkInstructions","getInitialWorkInstructions","LotFormSchema","submitPromise","Provider","ProcessOptionsContainer","ProcessOption","ScrollingButtonField","valueKey","labelKey","currLabel","TemplateSelectorSidebar","showFields","onTemplateEditClick","testSize","dispatchSetSelectedLotTemplate","setSmall","currTemplate","currTemplateId","showTemplates","showNew","onTemplateClick","generated","BarcodeModal","barcodeId","JsBarcode","showBarcodeModal","setGenerated","useWarn","FormComponent","setBinId","useCardFields","setUseCardFields","cardFields","dispatchShowBarcodeModal","cardHistory","cardHistories","barcodeModal","processesArray","showTemplateSelector","setShowTemplateSelector","finalProcessOptions","setFinalProcessOptions","templateFieldsChanged","setTemplateFieldsChanged","loadingTemplateValues","showFieldModal","setShowFieldModal","checkedCardAndTemplateFields","setCheckedCardAndTemplateFields","warningValues","setWarningValues","selectedBinName","processStationIds","availableBins","enterListener","handleDeleteClick","selectedBin","cardFieldsWithoutValue","isEquivalent","previousTemplateId","buttonGroupNames","buttonGroupIds","getButtonGroupOptions","renderMoveContent","destinationOptions","renderHistory","events","currEvent","$date","jsDate","currentDate","diffTime","modifiedData","newRouteId","oldRouteId","old","messages","parseMessageFromEvent","currMessage","repeat","renderForm","onSubmitError","formik","LotEditor","onPostCard","onGetCard","setLotNumber","handleGetCard","timer","moveCount","moveLocation","getCardSchema","CARD_SCHEMA_MODES","MOVE_LOT","EDIT_LOT","submissionErrors","selectedProcessId","currentBin","currentBinCount","destinationBinCount","updatedBins","requestResult","providedValues","wobble","WobbleButton","onDuration","offDuration","setWobble","LotFields","isLastRow","dropContainerId","fullFieldName","KICK_OFF_ENABLED","FINISH_ENABLED","workInstructionsObj","createdWorkInstruction","Portal","mountElement","mount","copyProcessRoutes","currentRouteId","currentRouteindex","callOnStations","stationAttributes","isAttributesNotEmpty","currentStationAttributes","currAttribute","currStationIndex","SubmitErrorHandler","lastHandled","setLastHandled","isEdge","userAgent","scroll","setScroll","previousScroll","update","scrollHeight","clientHeight","scrollWidth","clientWidth","scrollTop","percentageY","percentageX","scrollLeft","classNameY","classNameX","percentage","total","sign","ResizeObserver","resizeObserver","contentRect","observe","disconnect","useResizeObserver","throttledUpdate","wait","later","remaining","node","GET_SCHEDULES_STARTED","GET_SCHEDULES_SUCCESS","GET_SCHEDULES_FAILURE","POST_SCHEDULE_STARTED","POST_SCHEDULE_SUCCESS","POST_SCHEDULE_FAILURE","DELETE_SCHEDULE_STARTED","DELETE_SCHEDULE_SUCCESS","DELETE_SCHEDULE_FAILURE","PUT_SCHEDULE_STARTED","PUT_SCHEDULE_SUCCESS","PUT_SCHEDULE_FAILURE","ADD_SCHEDULES","UPDATE_SCHEDULE","DELETE_SCHEDULES","defaultState","pending","GET_SKILLS","GET_SKILLS_STARTED","GET_SKILLS_SUCCESS","GET_SKILLS_FAILURE","POST_SKILLS","POST_SKILLS_STARTED","POST_SKILLS_SUCCESS","POST_SKILLS_FAILURE","PUT_SKILLS","PUT_SKILLS_STARTED","PUT_SKILLS_SUCCESS","PUT_SKILLS_FAILURE","DELETE_SKILLS","DELETE_SKILLS_STARTED","DELETE_SKILLS_SUCCESS","DELETE_SKILLS_FAILURE","skills","currentSkill","skillUpdated","allFieldsFilled","positionsCopy","onUpdatePosition","UPDATE_POSITION","parsedPositions","conditionsApi","schedulesApi","dashboardsApi","skillsApi","dashboardButtonsApi","statusApi","taskQueueApi","tasksApi","CLEAR_ERROR","hilTimer","fromCharCode","ON_BLUR","ON_FOCUS","showKeyboard","GET_SOUNDS","GET_SOUNDS_STARTED","GET_SOUNDS_SUCCESS","GET_SOUNDS_FAILURE","Dashboards","Scheduler","Tasks","Objects","ModelViewer","Api","ReduxLogger","All","enableLogger","muteReducer","apiSim","GET_MODELS","GET_MODELS_STARTED","GET_MODELS_SUCCESS","GET_MODELS_FAILURE","models","GET_SKILL_TEMPLATES","GET_SKILL_TEMPLATES_STARTED","GET_SKILL_TEMPLATES_SUCCESS","GET_SKILL_TEMPLATES_FAILURE","skillTemplates","returnedSkillTemplates","GET_POSES_STARTED","GET_POSES_SUCCESS","GET_POSES_FAILURE","poses","getActionName","actionType","requestStatusReducer","endsWith","reduxZoom","widgetXYCoordinates","devicesClone","currentDevice","setDevices","updatedDevice","priority","newPayload","GET_EVENTS","GET_EVENTS_STARTED","GET_EVENTS_SUCCESS","GET_EVENTS_FAILURE","POST_EVENTS","POST_EVENTS_STARTED","POST_EVENTS_SUCCESS","POST_EVENTS_FAILURE","PUT_EVENTS","PUT_EVENTS_STARTED","PUT_EVENTS_SUCCESS","PUT_EVENTS_FAILURE","DELETE_EVENTS","DELETE_EVENTS_STARTED","DELETE_EVENTS_SUCCESS","DELETE_EVENTS_FAILURE","eventsReducer","eventsClone","currentEvent","cognitoUserSession","processesClone","showFormEditor","isCardDragging","isFieldDragging","isHoveringOverColumn","sizes","combineReducers","apiReducer","updatedReportEvent","unchangedProcessGroups","card_id","oldScheduleId","skillsReducer","skillsClone","s","skillId","stationsCopy","onUpdateStation","updatedStation","parsedStations","hello","objectsCopy","GET_OBJECTS","POST_OBJECT","PUT_OBJECT","DELETE_OBJECT","ADD_OBJECT","UPDATE_OBJECT","UPDATE_OBJECTS","REMOVE_OBJECT","SET_OBJECT_ATTRIBUTES","SELECT_OBJECT","DESELECT_OBJECT","dashboardsCopy","errorReducer","matches","exec","requestName","requestState","GET_TASK_QUEUE_STARTED","POST_TASK_QUEUE_SUCCESS","createdTaskQueueItem","POST_TASK_QUEUE_FAILURE","POST_TASK_QUEUE_STARTED","PUT_TASK_QUEUE_SUCCESS","updatedTaskQ","forceUpdate","PUT_TASK_QUEUE_FAILURE","PUT_TASK_QUEUE_STARTED","TASK_QUEUE_ALL","TASK_QUEUE_ITEM","TASK_QUEUE_OPEN","SET_SHOW_MODAL_ID","keyboardReducer","remainingTasks","ids","currId","modelsReducer","skillTemplatesReducer","posesReducer","currentMapCopy","authenticationReducer","reduxLogger","log_module","createLogger","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","traceLimit","compose","applyMiddleware","thunk","createStore","reducers","okay","Status","BasicListItem","leftContentContainerCss","leftContentContainerProps","leftContent","rightContentContainerCss","rightContentContainerProps","rightContent","contentContainerCss","contentContainerProps","titleCss","titleProps","StyledRemoveIcon","RemoveIcon","Spacer","ItemDiv","TaskQueueListItem","selectedTaskId","setIsSelected","TaskQueueMenu","taskQueueClone","queueItem","queueItemClone","ScaleContainer","ScaleWrapper","setSize","sizeRef","refOffsetHeight","refOffsetWidth","DateItem","DateText","LotDateRangeRow","startDateText","setStartDateText","endDateText","setEndDateText","dateRangeToStrings","tempStartDateText","tempEndDateText","LotDateRow","defaultDateText","dateText","setDateText","LotFlags","currFlagId","rotationTime","STATES","RotateButton","currentState","setCurrentState","setRotate","ObjectLabel","FieldTitle","LotEditorMainContent","ButtonStyle","DashboardSplitButton","alignText","alignContent","DefaultFieldContainer","DefaultInputContainer","TextField","inputStyleFunc","errorTooltipContainerStyle","inputContainerStyle","inputProps","hasWarning","warningMessage","setConfirmDelete","6","TASK_QUEUE","normalizedData","oldTaskQueueItemId","postToQueue","PdfViewerModal","labelSize","LotTemplateEditorSidebar","dispatchSetFieldDragging","overflowY","overflowX","DefaultContainerComponent","FieldComponentContainer","updateColor","DeleteIcon","CheckItems","checkboxCss","CheckItemLabel","Checkbox","CheckboxField","CheckBoxComponent","FieldWrapper","deleted","hoverCss","BottomContainer","DropContainer","onTopDrop","onBottomDrop","onLeftDrop","onRightDrop","onCenterDrop","onDragTopEnter","onDragTopLeave","onDragBottomEnter","onDragBottomLeave","indexPattern","setDraggingRow","clearDraggingRow","setHoveringRow","clearHoveringRow","hoveringRow","draggingFieldId","setDeleted","isThisFieldDragging","setIsThisFieldDragging","hoveringTop","setHoveringTop","hoveringBottom","setHoveringBottom","hoveringLeft","setHoveringLeft","hoveringRight","setHoveringRight","topRowIndex","bottomRowIndex","dropR","dragClass","hoverState","LotFormCreator","draggingRow","findArrLocation","indices","found","newIndices","handleVerticalDrop","payloadId","updatedData","removedImmutable","removedLastItemInRow","getSelected","oldSelected","oldIndexPattern","oldFinalIndex","getUpdate","movingDown","withInsert","handleSideDrop","isRight","finalIndex","patternsAreEqual","didThing","selected_IMMUTABLE","pop","trimmedIndexPattern","listRef","getNested","curr","handleCenterDrop","prevItems","thisIndex","mapContainers","LotCreatorForm","dispatchGetLotTemplate","dispatchDeleteLotTemplate","handleGetLotTemplate","MultiSelectOptions","selectedLotsCount","setSelectedLotsCount","ZoneHeader","currentStartDate","setCurrentStartDate","currentEndDate","setCurrentEndDate","allowPartialRange","lazy","mapValues","number","Yup","startPath","endPath","startDate","createError","convertCardDate","endDate","shape","of","instruction","nullable","hil","pathToArr","mapper","compareItem","reg2","megaIndex","last","parsedIndex","isUnique","list","totalList","currList","currListIndex","Set","rowIdx","sublist","pathToOthers","others","arrPath","parentValues","currParentValue","oneOf","binsSchema","uniqueByPath","lotFieldRequired","notIn","dopeUnique","availableBinItems","maxCount","routeStationSchema","positionSchema","stationSchema","routesSchema","stationNames","notOneOf","input2Path","input1","input2","beg1","end1","beg2","end2","lessThan","when","is","greaterThan","lessThanInt","nonary","denary","radioButton","inactive","hover","basicButton","mobileS","mobileM","desktop","desktopL","finish","ok","operations","delete","funky","cardsObj","createdCard","deleteProcessCards","currentProcessCards","cardID","REVERT_CHILDREN","normalizedDashboards","dashbaordCopy","updateDashboard","removeRouteFromAllDashboards","currDashboard","currButtons","addRouteToDashboards","routeType","newDashboardButton","stationActions","removeRouteFromWrongDashboards","currDashboardButtons","currDashboardIdObj","currStationId","currDashboardId","filteredButtons","currButtonIndex","WarningIcon","StyledInput","ErrorTooltip","setAutoFocus","timer1","delayShow","eventOff","string1","string2","EVENT_NAMES","eventName","msgs","newVal","oldVal","cardDate","newRow","updatedValues","excel","remainingExcel","primaryField","primaryFieldId","extractedPrimaryField","constrcutedValue","currPathIndex","isAscending","itemA","itemB","fieldA","fieldB","valA","valB","trimmed","getUTCMonth","getUTCDate","getUTCFullYear","jsDateToObjDate","startYear","startMonth","startDay","deleteProcess","normalizedProcesses","newProcesses","updateProcesses","cardActions","removeRouteFromAllProcesses"],"mappings":"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","file":"static/js/main.c8384a52.chunk.js","sourcesContent":["// These actions are used for local API calls to local storage\n\nimport {\n  GET_LOGGERS,\n  GET_LOGGERS_STARTED,\n  GET_LOGGERS_SUCCESS,\n  GET_LOGGERS_FAILURE,\n\n  POST_LOGGERS,\n  POST_LOGGERS_STARTED,\n  POST_LOGGERS_SUCCESS,\n  POST_LOGGERS_FAILURE,\n\n  GET_LOCAL_SETTINGS,\n  GET_LOCAL_SETTINGS_STARTED,\n  GET_LOCAL_SETTINGS_SUCCESS,\n  GET_LOCAL_SETTINGS_FAILURE,\n\n  POST_LOCAL_SETTINGS,\n  POST_LOCAL_SETTINGS_STARTED,\n  POST_LOCAL_SETTINGS_SUCCESS,\n  POST_LOCAL_SETTINGS_FAILURE,\n\n  STOP_API_CALLS,\n\n} from '../types/local_types';\n\nimport * as api from '../../api/local_api';\n\n// import logger\nimport log from '../../logger.js';\n\nconst logger = log.getLogger(\"Actions\", \"Redux\");\n\nexport const getLoggers = () => {\n    return async dispatch => {\n        function onStart() {\n            dispatch({ type: GET_LOGGERS_STARTED });\n          }\n          function onSuccess(response) {\n            dispatch({ type: GET_LOGGERS_SUCCESS, payload: response });\n            return response;\n          }\n          function onError(error) {\n            dispatch({ type: GET_LOGGERS_FAILURE, payload: error });\n            return error;\n          }\n\n        try {\n            onStart();\n            const loggers = await api.getLoggers();\n\n            return onSuccess(loggers)\n        } catch(error) {\n            return onError(error)\n        }\n    }\n}\nexport const postLoggers =  (loggers, loaded) => {\n  return async dispatch => {\n        async function onStart() {\n          dispatch({ type: POST_LOGGERS_STARTED });\n        }\n        async function onSuccess(response) {\n          dispatch({ type: POST_LOGGERS_SUCCESS, payload: loggers });\n          return response;\n        }\n        async function onError(error) {\n          dispatch({ type: POST_LOGGERS_FAILURE, payload: error });\n          return error;\n        }\n\n      try {\n          onStart();\n\n          if(loaded) {\n              const newLoggers = await api.postLoggers(loggers);\n              return await onSuccess(newLoggers);\n          } else {\n              return await onSuccess(loggers);\n          }\n\n\n      } catch(error) {\n          return onError(error)\n      }\n  }\n}\n\nexport const getLocalSettings = () => {\n  return async dispatch => {\n      function onStart() {\n          dispatch({ type: GET_LOCAL_SETTINGS_STARTED });\n        }\n        function onSuccess(response) {\n          dispatch({ type: GET_LOCAL_SETTINGS_SUCCESS, payload: response });\n          return response;\n        }\n        function onError(error) {\n          dispatch({ type: GET_LOCAL_SETTINGS_FAILURE, payload: error });\n          return error;\n        }\n\n      try {\n          onStart();\n          const localSettings = await api.getLocalSettings();\n          return onSuccess(localSettings)\n      } catch(error) {\n          return onError(error)\n      }\n  }\n}\n\nexport const postLocalSettings =  (settings) => {\n  return async dispatch => {\n        async function onStart() {\n          dispatch({ type: POST_LOCAL_SETTINGS_STARTED });\n        }\n        async function onSuccess(response) {\n          dispatch({ type: POST_LOCAL_SETTINGS_SUCCESS, payload: settings });\n          return response;\n        }\n        async function onError(error) {\n          dispatch({ type: POST_LOCAL_SETTINGS_FAILURE, payload: error });\n          return error;\n        }\n\n      try {\n          onStart();\n          const localSettings = await api.postLocalSettings(settings);\n          return await onSuccess(localSettings)\n      } catch(error) {\n          return onError(error)\n      }\n  }\n}\n\nexport const stopAPICalls = (bool) => {\n    return { type: STOP_API_CALLS, payload: bool }\n}\n","import {\n    STARTED,\n    SUCCESS,\n    FAILURE\n} from '../types/suffixes';\n\nexport const api_action = async (actionName, callback, dispatch, args) => {\n\n\n    function onStart() {\n      dispatch({ type: actionName + STARTED, payload: args });\n    }\n\n    function onSuccess(payload) {\n      dispatch({ type: actionName + SUCCESS, payload });\n      return payload;\n    }\n\n    function onError(error) {\n      dispatch({ type: actionName + FAILURE, payload: error });\n      return error;\n    }\n\n    try {\n\n      onStart();\n      const payload = await callback();\n      return onSuccess(payload);\n\n    } catch (error) {\n      return onError(error);\n    }\n\n};\n","export const GET_DEVICES = 'GET_DEVICES'\nexport const GET_DEVICES_STARTED = 'GET_DEVICES_STARTED'\nexport const GET_DEVICES_SUCCESS = 'GET_DEVICES_SUCCESS'\nexport const GET_DEVICES_FAILURE = 'GET_DEVICES_FAILURE'\n\nexport const POST_DEVICES = 'POST_DEVICES'\nexport const POST_DEVICES_STARTED = 'POST_DEVICES_STARTED'\nexport const POST_DEVICES_SUCCESS = 'POST_DEVICES_SUCCESS'\nexport const POST_DEVICES_FAILURE = 'POST_DEVICES_FAILURE'\n\nexport const PUT_DEVICES = 'PUT_DEVICES'\nexport const PUT_DEVICES_STARTED = 'PUT_DEVICES_STARTED'\nexport const PUT_DEVICES_SUCCESS = 'PUT_DEVICES_SUCCESS'\nexport const PUT_DEVICES_FAILURE = 'PUT_DEVICES_FAILURE'\n\nexport const DELETE_DEVICES = 'DELETE_DEVICES'\nexport const DELETE_DEVICES_STARTED = 'DELETE_DEVICES_STARTED'\nexport const DELETE_DEVICES_SUCCESS = 'DELETE_DEVICES_SUCCESS'\nexport const DELETE_DEVICES_FAILURE = 'DELETE_DEVICES_FAILURE'\n","import React, { useState, useEffect } from 'react';\n\n// import external functions\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom'\n\n// Import components\nimport TaskAddedAlert from './task_added_alert/task_added_alert'\nimport DashboardsHeader from \"../dashboards_header/dashboards_header\";\nimport DashboardLotList from './dashboard_lot_list/dashboard_lot_list'\nimport DashboardLotPage from './dashboard_lot_page/dashboard_lot_page'\nimport DashboardDevicePage from './dashboard_device_page/dashboard_device_page'\n\n// Import Modals\nimport ReportModal from \"./report_modal/report_modal\";\nimport KickOffModal from \"./kick_off_modal/kick_off_modal\";\nimport FinishModal from \"./finish_modal/finish_modal\";\nimport TaskQueueModal from './task_queue_modal/task_queue_modal'\nimport WarehouseModal from './warehouse_modal/warehouse_modal'\nimport RouteModal from './route_modal/route_modal'\n\n// constants\nimport { ADD_TASK_ALERT_TYPE, PAGES, OPERATION_TYPES } from \"../../../../../constants/dashboard_constants\";\n\n// Import Hooks\nimport useWindowSize from '../../../../../hooks/useWindowSize'\n\n// Import Actions\nimport { handlePostTaskQueue, postTaskQueue, putTaskQueue } from '../../../../../redux/actions/task_queue_actions'\nimport {\n    dashboardOpen,\n    setDashboardKickOffProcesses,\n    putDashboard,\n    putDashboardAttributes\n} from '../../../../../redux/actions/dashboards_actions'\nimport * as localActions from '../../../../../redux/actions/local_actions'\nimport { getProcesses } from \"../../../../../redux/actions/processes_actions\";\nimport { getTasks } from '../../../../../redux/actions/tasks_actions'\n\n// Import styles\nimport * as style from './dashboard_screen.style'\n\n// import logging\nimport log from \"../../../../../logger\";\nimport MergeModal from \"./merge_modal/merge_modal\";\n\n\n\nconst logger = log.getLogger(\"DashboardsPage\");\n\nconst widthBreakPoint = 1026;\n\nconst DashboardScreen = (props) => {\n\n    const params = useParams()\n\n    const {\n        stationID,\n        dashboardID,\n        editing,\n        lotID\n    } = params || {}\n\n    // redux state\n    // const currentDashboard = useSelector(state => { return state.dashboardsReducer.dashboards[dashboardID] })\n    const dashboards = useSelector(state => { return state.dashboardsReducer.dashboards })\n    const tasks = useSelector(state => state.tasksReducer.tasks)\n    const hilResponse = useSelector(state => state.taskQueueReducer.hilResponse)\n    const mapViewEnabled = useSelector(state => state.localReducer.localSettings.mapViewEnabled)\n    const availableKickOffProcesses = useSelector(state => { return state.dashboardsReducer.kickOffEnabledDashboards[dashboardID] })\n    const availableFinishProcesses = useSelector(state => { return state.dashboardsReducer.finishEnabledDashboards[dashboardID] })\n    const stations = useSelector(state => state.stationsReducer.stations)\n    const devices = useSelector(state => state.devicesReducer.devices)\n\n    const currentDashboard = dashboards[dashboardID]\n    // actions\n    const dispatch = useDispatch()\n    const onDashboardOpen = (bol) => dispatch(dashboardOpen(bol))\n    const onHandlePostTaskQueue = (props) => dispatch(handlePostTaskQueue(props))\n    const onHILResponse = (response) => dispatch({ type: 'HIL_RESPONSE', payload: response })\n    const onLocalHumanTask = (bol) => dispatch({ type: 'LOCAL_HUMAN_TASK', payload: bol })\n    const onPutTaskQueue = async (item, id) => await dispatch(putTaskQueue(item, id))\n    const dispatchStopAPICalls = (bool) => dispatch(localActions.stopAPICalls(bool))\n    const dispatchGetProcesses = () => dispatch(getProcesses())\n    const dispatchPutDashboard = async (dashboard, id) => await dispatch(putDashboard(dashboard, id))\n    const dispatchPutDashboardAttributes = async (attributes, id) => await dispatch(putDashboardAttributes(attributes, id))\n    const dispatchGetTasks = async () => await dispatch(getTasks())\n\n    // self contained state\n    const [addTaskAlert, setAddTaskAlert] = useState(null);\n    const [reportModal, setReportModal] = useState({\n        type: null,\n        id: null\n    });\n    const {\n        type: modalType,\n        id: modalButtonId\n    } = reportModal\n    const [dashboardStation, setDashboardStation] = useState({});\n    const [showLotsList, setShowLotsList] = useState(true)\n    const [selectedOperation, setSelectedOperation] = useState(null)\n    const [isDevice, setIsDevice] = useState(false)\n\n    const size = useWindowSize()\n    const windowWidth = size.width\n\n    const mobileMode = windowWidth < widthBreakPoint;\n\n    useEffect(() => {\n        setDashboardStation(stations[stationID] || {})\n    }, [stations, stationID])\n\n    /**\n     * When a dashboard screen is loaded, tell redux that its open\n     * On unmount tell redux that its not loaded\n     *\n     * Used in app.js and widget pages to make dashboard screen full size in mobile mode\n     */\n    useEffect(() => {\n        onDashboardOpen(true)\n\n        if (!!devices[stationID]) {\n            setIsDevice(true)\n        }\n\n        dispatchGetProcesses()\n        return () => {\n            onDashboardOpen(false)\n        }\n    }, [])\n\n    useEffect(() => {\n        if (editing === 'lots') {\n            setShowLotsList(false)\n        }\n        else {\n            setShowLotsList(true)\n        }\n    }, [editing])\n\n    // Commented out for now\n    // Used for unloading human routes\n    // But we removed that ability as of now\n    // // Posts HIL Success to API\n    // const handleHilSuccess = async (item) => {\n\n    //     let newItem = {\n    //         ...item,\n    //         hil_response: true,\n    //         // quantity: quantity,\n    //     }\n\n    //     const ID = deepCopy(item._id)\n\n    //     delete newItem._id\n    //     delete newItem.dashboard\n\n    //     // This is used to make the tap of the HIL button respond quickly\n    //     // TODO: This may not be necessary here\n    //     onHILResponse(ID)\n    //     setTimeout(() => onHILResponse(''), 2000)\n\n    //     await onPutTaskQueue(newItem, ID)\n\n    // }\n\n    const handleToggleLock = async () => {\n\n        if (!!currentDashboard.locked) {\n            setAddTaskAlert({\n                type: ADD_TASK_ALERT_TYPE.TASK_ADDED,\n                label: \"Dashboard has been successfully unlocked!\",\n            })\n        }\n        else {\n            setAddTaskAlert({\n                type: ADD_TASK_ALERT_TYPE.TASK_ADDED,\n                label: \"Dashboard has been successfully locked!\",\n            })\n        }\n\n        const updatedDashboard = {\n            ...currentDashboard,\n            locked: !currentDashboard.locked\n        }\n        dispatchPutDashboard(updatedDashboard, currentDashboard._id?.$oid)\n\n        return setTimeout(() => setAddTaskAlert(null), 2500)\n    }\n\n    const renderModal = () => {\n        switch (selectedOperation) {\n            case 'report':\n                return (\n                    <ReportModal\n                        dashboardButtonId={modalButtonId}\n                        isOpen={!!true}\n                        title={\"Send Report\"}\n                        close={() => setSelectedOperation(null)}\n                        dashboard={currentDashboard}\n                        onSubmit={(name, success) => {\n\n                            // set alert\n                            setAddTaskAlert({\n                                type: success ? ADD_TASK_ALERT_TYPE.REPORT_SEND_SUCCESS : ADD_TASK_ALERT_TYPE.REPORT_SEND_FAILURE,\n                                label: success ? \"Report Sent\" : \"Failed to Send Report\",\n                                message: name ? `\"` + name + `\"` : null\n                            })\n\n                            // clear alert\n                            setTimeout(() => setAddTaskAlert(null), 1800)\n                        }}\n                    />\n                )\n\n            case 'merge': {\n                return <MergeModal\n                    dashboardId={dashboardID}\n                    isOpen={true}\n                    stationId={stationID}\n                    title={\"Merge Lots\"}\n                    close={() => setSelectedOperation(null)}\n                />\n            }\n            case 'kickOff':\n                return (\n                    <KickOffModal\n                        isOpen={true}\n                        stationId={stationID}\n                        title={\"Kick Off\"}\n                        close={() => setSelectedOperation(null)}\n                        dashboard={currentDashboard}\n                        onSubmit={(name, success, quantity, message) => {\n                            // set alert\n                            setAddTaskAlert({\n                                type: success ? ADD_TASK_ALERT_TYPE.KICK_OFF_SUCCESS : ADD_TASK_ALERT_TYPE.KICK_OFF_FAILURE,\n                                label: success ? \"Lot Kick Off Successful\" : \"Lot Kick Off Failed\",\n                                message: message\n                            })\n\n                            // clear alert\n                            setTimeout(() => setAddTaskAlert(null), 1800)\n                        }}\n                    />\n                )\n\n            case 'finish':\n                return (\n                    <FinishModal\n                        isOpen={true}\n                        stationId={stationID}\n                        title={\"Finish\"}\n                        close={() => setSelectedOperation(null)}\n                        dashboard={currentDashboard}\n                        onSubmit={(name, success, quantity, message) => {\n                            // set alert\n                            setAddTaskAlert({\n                                type: success ? ADD_TASK_ALERT_TYPE.FINISH_SUCCESS : ADD_TASK_ALERT_TYPE.FINISH_FAILURE,\n                                label: success ? \"Finish Successful\" : \"Finish Failed\",\n                                message: message\n                            })\n\n                            // clear alert\n                            setTimeout(() => setAddTaskAlert(null), 1800)\n                        }}\n                    />\n                )\n\n            case 'taskQueue':\n                return (\n                    <TaskQueueModal\n                        isOpen={true}\n                        close={() => setSelectedOperation(null)}\n\n                    />\n                )\n\n            case 'warehouse':\n                return (\n                    <WarehouseModal\n                        isOpen={true}\n                        stationId={stationID}\n                        title={\"Warehouse\"}\n                        close={() => setSelectedOperation(null)}\n                        dashboard={currentDashboard}\n                        stationID={stationID}\n                        process={process}\n                        onSubmit={(name, success, quantity, message) => {\n                            // set alert\n                            setAddTaskAlert({\n                                type: success ? ADD_TASK_ALERT_TYPE.KICK_OFF_SUCCESS : ADD_TASK_ALERT_TYPE.KICK_OFF_FAILURE,\n                                label: success ? \"Lot Moved To Station\" : \"Lot Move Failed\",\n                                message: message\n                            })\n\n                            // clear alert\n                            setTimeout(() => setAddTaskAlert(null), 1800)\n                        }}\n                    />\n                )\n\n            case 'route':\n                return (\n                    <RouteModal\n                        isOpen={true}\n                        close={() => setSelectedOperation(null)}\n                        handleTaskAlert={(type, label, message) => {\n                            setAddTaskAlert({\n                                type: type,\n                                label: label,\n                                message: message,\n                            })\n\n                            // clear alert after timeout\n                            return setTimeout(() => setAddTaskAlert(null), 1800)\n                        }}\n                    />\n                )\n\n\n            default:\n                return (\n                    <>\n                    </>\n                )\n        }\n    }\n\n    return (\n        <style.Container>\n\n            {\n                !!selectedOperation && renderModal()\n            }\n\n            <DashboardsHeader\n                showTitle={false}\n                showBackButton={false}\n                handleToggleLock={() => handleToggleLock()}\n                showEditButton={true}\n                currentDashboard={currentDashboard}\n                handleOperationSelected={(op) => {\n                    setSelectedOperation(op)\n                }}\n                handleTaskAlert={() => {\n                    // If a custom task then add custom task key to task q\n                    setAddTaskAlert({\n                        type: ADD_TASK_ALERT_TYPE.TASK_ADDED,\n                        label: \"Task Added to Queue\",\n                        message: '',\n                    })\n\n                    // clear alert after timeout\n                    return setTimeout(() => setAddTaskAlert(null), 1800)\n                }}\n\n            />\n\n            {isDevice ?\n                <DashboardDevicePage\n                    handleTaskAlert={() => {\n\n                    }}\n                />\n                :\n                showLotsList ?\n                    <DashboardLotList />\n                    :\n                    <DashboardLotPage\n                        handleTaskAlert={(type, label, message) => {\n                            setAddTaskAlert({\n                                type: type,\n                                label: label,\n                                message: message,\n                            })\n\n                            // clear alert after timeout\n                            return setTimeout(() => setAddTaskAlert(null), 1800)\n                        }}\n                    />\n            }\n\n            <TaskAddedAlert\n                {...addTaskAlert}\n                visible={!!addTaskAlert}\n            />\n\n\n\n        </style.Container >\n    )\n}\n\nexport default DashboardScreen;\n","import styled from \"styled-components\";\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport {RGB_Linear_Shade, hexToRGBA} from \"../../../../../methods/utils/color_utils\";\n\nexport const Container = styled.div`\n    \n    // flex layout\n    display: flex;\n    flex-direction: column;\n    \n    width: 100%;\n    height: 100%;\n    max-height: 100%;\n    // overflow: hidden;\n    \n    background: ${props => props.theme.bg.secondary};\n    \n`\n\nexport const ButtonContainer = styled.div`\n\n\n`\n\n\nexport const GoBackButton = styled(ArrowBackIosIcon)`\n    color: ${props => props.theme.fg.primary};\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz1};\n    \n    transition: all .25s;\n    &:hover {\n        color: ${props => RGB_Linear_Shade(props.theme.hoverHighlightPer, hexToRGBA(props.theme.fg.primary))};\n        cursor: grab;\n    }\n    margin-left: 1rem;\n    \n`","import React, { useState, useEffect, useRef, useMemo, useCallback } from 'react';\n\n// actions\nimport { putTaskQueue, getTaskQueue } from '../../redux/actions/task_queue_actions'\nimport { setShowModalId } from '../../redux/actions/task_queue_actions'\nimport { getStations } from \"../../redux/actions/stations_actions\";\n\n// api\nimport { putTaskQueueItem } from '../../api/task_queue_api'\n\n// components internal\nimport LotContainer from \"../side_bar/content/cards/lot/lot_container\";\nimport HilButton from \"./hil_button/hil_button\";\nimport NumberField from \"../basic/form/number_field/number_field\";\nimport ScrollContainer from \"../basic/scroll_container/scroll_container\";\n\n// functions external\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useParams, useHistory } from 'react-router-dom'\nimport { Formik } from \"formik\"\nimport { isMobile } from \"react-device-detect\"\n\n// styles\nimport * as styled from './hil_modals.style';\n\n// utils\nimport { deepCopy } from '../../methods/utils/utils'\nimport { getBinQuantity } from \"../../methods/utils/lot_utils\";\nimport FlexibleContainer from \"../basic/flexible_container/flexible_container\";\nimport ScaleWrapper from \"../basic/scale_wrapper/scale_wrapper\";\nimport { getPreviousWarehouseStation } from '../../methods/utils/processes_utils'\nimport { getStationName } from \"../../methods/utils/stations_utils\";\nimport { hilModalSchema } from \"../../methods/utils/form_schemas\";\n\n\nexport const QUANTITY_MODES = {\n    QUANTITY: \"QUANTITY\",\n    FRACTION: \"FRACTION\"\n}\n\nconst CONTENT = {\n    QUANTITY_SELECTOR: \"QUANTITY_SELECTOR\",\n    FRACTION_SELECTOR: \"FRACTION_SELECTOR\",\n    REVIEW: \"REVIEW\",\n    LOT_SELECTOR: \"LOT_SELECTOR\",\n    UNLOAD: \"UNLOAD\",\n}\n\nconst fractionOptions = ['1', '3/4', '1/2', '1/4']\nconst fractionDecimals = [1, 0.75, 0.5, 0.25]\n\nconst HILModals = (props) => {\n    const {\n        hilMessage,\n        taskQueueID,\n        item\n    } = props\n\n    const {\n        dashboard: dashboardId,\n        lot_id: lotId,\n        task_id: taskId\n    } = item || {}\n\n    const params = useParams()\n    const history = useHistory()\n\n    const {\n        stationID,\n        dashboardID,\n        subPage,\n        lotID,\n        warehouse,\n    } = params || {}\n\n    const dispatch = useDispatch()\n    const dispatchTaskQueueItemClicked = (id) => dispatch({ type: 'TASK_QUEUE_ITEM_CLICKED', payload: id })\n    const disptachHILResponse = (response) => dispatch({ type: 'HIL_RESPONSE', payload: response })\n    const disptachPutTaskQueue = async (item, id) => await dispatch(putTaskQueue(item, id))\n    const dispatchSetActiveHilDashboards = (active) => dispatch({ type: 'ACTIVE_HIL_DASHBOARDS', payload: active })\n    const dispatchSetShowModalId = (id) => dispatch(setShowModalId(id))\n    const dispatchGetTaskQueue = () => dispatch(getTaskQueue())\n    const dispatchGetStations = async () => await dispatch(getStations())\n\n    const hilTimers = useSelector(state => { return state.taskQueueReducer.hilTimers })\n    const cards = useSelector(state => { return state.cardsReducer.cards })\n    const tasks = useSelector(state => { return state.tasksReducer.tasks })\n    const activeHilDashboards = useSelector(state => state.taskQueueReducer.activeHilDashboards)\n    const dashboards = useSelector(state => state.dashboardsReducer.dashboards) || {}\n    const stations = useSelector(state => state.stationsReducer.stations) || {}\n\n    const [task, setTask] = useState(null)\n    const {\n        type: hilType,\n        load,\n        unload\n    } = task || {}\n    const {\n        station: unloadStationId\n    } = unload || {}\n    const {\n        station: loadStationId\n    } = load || {}\n\n    const [trackQuantity, setTrackQuantity] = useState(null)\n    const [selectedDashboard, setSelectedDashboard] = useState(null)\n    const {\n        station: stationId\n    } = selectedDashboard || {}\n\n    const [hilLoadUnload, setHilLoadUnload] = useState('')\n    const [dataLoaded, setDataLoaded] = useState(false)\n    const [content, setContent] = useState(CONTENT.QUANTITY_SELECTOR)\n    const [lot, setLot] = useState({})\n    const [modalClosed, setModalClosed] = useState(false)\n    const [maxQuantity, setMaxQuantity] = useState(!!lotId ? !!warehouse ? getBinQuantity(lot, getPreviousWarehouseStation(lot.process_id, stationID)._id) : getBinQuantity(cards[lotId], stationId || loadStationId) : null)\n    const [loadStationName, setLoadStationName] = useState(\"\")\n    const [unloadStationName, setUnloadStationName] = useState(\"\")\n\n    const formRef = useRef(null)\n    const {\n        current: formikProps\n    } = formRef || {}\n    const {\n        values = {},\n        setFieldValue = () => { }\n    } = formikProps || {}\n\n    useEffect(() => {\n        setLot(cards[lotId] || {})\n        return () => {\n\n        };\n    }, [lotId, cards])\n\n    /* default quantity to max when max changes */\n    useEffect(() => {\n        setFieldValue('quantity', maxQuantity)\n        // return () => {};\n    }, [maxQuantity]);\n\n\n    useEffect(() => {\n        const {\n            track_quantity\n        } = task || {}\n\n        if (hilLoadUnload === 'load') {\n            if (track_quantity && content !== CONTENT.QUANTITY_SELECTOR) {\n                setContent(CONTENT.QUANTITY_SELECTOR)\n            }\n            else if (!track_quantity && content !== CONTENT.FRACTION_SELECTOR) {\n                setContent(CONTENT.FRACTION_SELECTOR)\n            }\n        }\n        else {\n            setContent(CONTENT.UNLOAD)\n        }\n\n\n        return () => {\n\n        };\n    }, [task, hilLoadUnload]);\n\n\n\n    // load lot data on load for selecting lot\n    useEffect(() => {\n        // get dashboard info from item\n        const dashboard = dashboards[dashboardId]\n        setSelectedDashboard(dashboard)\n    }, [dashboards])\n\n    // Use Effect for when page loads, handles wether the HIL is a load or unload\n    useEffect(() => {\n        dispatchGetStations()\n\n        const currentTask = tasks[item.task_id]\n        setTask(currentTask)\n\n        // If the task's load location of the task q item matches the item's location then its a load hil, else its unload\n\n\n\n        setDataLoaded(true)\n        // On unmount, set the task q item to none\n        return () => {\n            dispatchTaskQueueItemClicked('')\n\n            // Deletes the dashboard id from active list for the hil that has been responded too\n            const activeHilCopy = deepCopy(activeHilDashboards)\n            delete activeHilCopy[dashboardID]\n            dispatchSetActiveHilDashboards(activeHilCopy)\n        }\n\n    }, [])\n\n    useEffect(() => {\n        if (task?.load?.station === item.hil_station_id || !!item.dashboard) {\n            // load\n            setHilLoadUnload('load')\n        } else {\n            // unload\n            setHilLoadUnload('unload')\n        }\n\n        return () => { };\n    }, [item, task]);\n\n\n    // Posts HIL Success to API\n    const onHilSuccess = async (fraction) => {\n\n        const {\n            quantity,\n        } = values || {}\n\n        dispatchTaskQueueItemClicked('')\n\n        const { _id, dashboard, ...rest } = item || {}\n\n        let newItem = {\n            ...rest,\n            hil_response: true,\n        }\n\n        // If its a load, then add a quantity to the response\n        if (hilLoadUnload === 'load') {\n            // If track quantity then add quantity, or if noLotSelected then use quantity\n            if (!!task.track_quantity || trackQuantity) {\n                newItem.quantity = quantity\n            }\n\n            // Else it's a fraction so tell the fraction amount\n            else {\n                newItem.fraction = fraction\n            }\n        }\n\n        // Deletes the dashboard id from active list for the hil that has been responded too\n        const activeHilCopy = deepCopy(activeHilDashboards)\n        delete activeHilCopy[dashboardID]\n        dispatchSetActiveHilDashboards(activeHilCopy)\n\n        // This is used to make the tap of the HIL button respond quickly\n        disptachHILResponse(hilLoadUnload === 'load' ? 'load' : 'unload')\n        setTimeout(() => disptachHILResponse(''), 2000)\n        // If its a warehouse then go back \n        if (!!warehouse) {\n            history.push(`/locations/${stationID}/dashboards/${dashboardID}`)\n        }\n        await disptachPutTaskQueue(newItem, taskQueueID)\n        await dispatchSetShowModalId(null)\n\n    }\n\n    // Posts HIL Failure to API\n    const onHilFailure = async () => {\n        let newItem = {\n            ...item,\n            hil_response: false\n        }\n        delete newItem._id\n\n        dispatchGetTaskQueue()\n        await putTaskQueueItem(newItem, taskQueueID)\n        dispatchTaskQueueItemClicked('')\n    }\n\n    // updates max quantity\n    useEffect(() => {\n        let newMax\n\n        // If its a warehouse, use the prev station\n        if (!!warehouse) {\n            newMax = getBinQuantity(lot, getPreviousWarehouseStation(lot.process_id, stationID)._id)\n        }\n        else {\n            newMax = getBinQuantity(lot, stationId || loadStationId)\n        }\n\n        if (parseInt(maxQuantity) !== parseInt(newMax)) setMaxQuantity(newMax)\n    }, [lot, stationId, loadStationId, maxQuantity]);\n\n    useEffect(() => {\n        setUnloadStationName(getStationName(unloadStationId))\n    }, [unloadStationId, stations])\n\n    useEffect(() => {\n        setLoadStationName(getStationName(loadStationId))\n    }, [loadStationId, stations])\n\n\n    const renderUnloadContent = useCallback(() => {\n        const {\n            quantity,\n            fraction\n        } = item || {}\n\n        const {\n            track_quantity: trackQuantity\n        } = task || {}\n\n        const unloadQuantity = trackQuantity ? quantity : Math.ceil(maxQuantity * fraction)\n\n        return (\n            <div style={{ alignSelf: \"center\", display: \"flex\", flexDirection: \"row\", minHeight: \"15rem\", alignItems: \"center\" }}>\n                <styled.InfoText>{`Unload `}</styled.InfoText>\n                <styled.InfoText emphasize={true}>{` ${unloadQuantity} `}</styled.InfoText>\n                <styled.InfoText>{` item${unloadQuantity > 1 ? 's' : ''} from `}</styled.InfoText>\n                <styled.InfoText emphasize={true}>{` ${loadStationName} `}</styled.InfoText>\n                <styled.InfoText>{` to `}</styled.InfoText>\n                <styled.InfoText emphasize={true}>{` ${unloadStationName}`}</styled.InfoText>\n            </div>\n        )\n    }, [item, loadStationName, unloadStationName, task])\n\n    const renderFractionOptions = useCallback(() => {\n        return (\n            <div style={{ alignSelf: \"stretch\", display: \"flex\", flexDirection: \"column\", overflow: \"hidden\", minHeight: \"15rem\" }}>\n                <styled.SubtitleContainer>\n                    <styled.HilSubtitleMessage>Select Fraction</styled.HilSubtitleMessage>\n                </styled.SubtitleContainer>\n\n                <ScrollContainer>\n                    {fractionOptions.map((value, ind) => {\n                        const decimal = fractionDecimals[ind]\n                        return (\n                            <HilButton\n                                containerCss={styled.fractionButtonCss}\n                                key={value}\n                                color={'#90eaa8'}\n                                label={`${value} (Quantity ${Math.ceil(maxQuantity * decimal)})`}\n                                filter={Math.cbrt(eval(value))}\n                                onClick={() => {\n                                    onHilSuccess(decimal)\n                                }}\n                            />\n                        )\n                    })}\n                </ScrollContainer>\n            </div>\n        )\n    }, [maxQuantity]);\n\n    const renderQuantitySelector = useCallback(() => {\n\n        return (\n            <div\n                style={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    alignItems: \"center\"\n                }}\n            >\n                <styled.SubtitleContainer>\n                    <styled.HilSubtitleMessage>Enter Quantity</styled.HilSubtitleMessage>\n                </styled.SubtitleContainer>\n\n                <NumberField\n                    minValue={1}\n                    maxValue={maxQuantity}\n                    name={`quantity`}\n                />\n\n                {!!lotId &&\n                    <FlexibleContainer>\n                        <styled.InfoText style={{ marginBottom: \"1rem\" }}>{`There are ${maxQuantity} items available in the current lot.`}</styled.InfoText>\n                    </FlexibleContainer>\n                }\n            </div>\n        )\n    }, [maxQuantity])\n\n    if (dataLoaded && modalClosed !== true) {\n        const {\n            _id: lotId,\n            process_id: processId\n        } = lot || {}\n\n        const {\n            quantity,\n            fraction\n        } = item || {}\n\n        const {\n            track_quantity: trackQuantity\n        } = task || {}\n\n        const unloadQuantity = trackQuantity ? quantity : Math.ceil(maxQuantity * fraction)\n\n        return (\n            <Formik\n                validationSchema={hilModalSchema}\n                innerRef={formRef}\n                initialValues={{\n                    quantity: !!maxQuantity ? maxQuantity : 0,\n                    fraction: null\n                }}\n                validateOnChange={true}\n                validateOnBlur={true}\n            >\n                <styled.ModalContainer\n                    isOpen={true}\n                    style={{\n                        overlay: {\n                            zIndex: 5000,\n                            backgroundColor: 'rgba(0, 0, 0, 0.6)',\n                            backdropFilter: 'blur(5px)',\n                            transition: 'backdrop-filter 3s ease',\n                        },\n                        content: {\n                            zIndex: 5000,\n                        },\n                    }}\n                >\n\n                    <styled.Header>\n                        <styled.ColumnContainer>\n                            <styled.HilMessage>{hilMessage}</styled.HilMessage>\n                            <styled.HilTimer\n                                visible={!!hilTimers[item._id] && hilLoadUnload === 'load'}\n                            >{!!hilTimers[item._id] && hilLoadUnload === 'load' ? hilTimers[item._id] : \"\"}</styled.HilTimer>\n                        </styled.ColumnContainer>\n                    </styled.Header>\n\n\n                    <styled.Body>\n                        <styled.InnerContentContainer>\n                            <div\n                                style={{\n                                    display: \"flex\",\n                                    flexDirection: \"column\",\n                                    alignItems: \"center\",\n                                    alignSelf: \"stretch\",\n                                    overflow: \"auto\",\n                                    paddingTop: \"1rem\",\n                                    justifyContent: \"space-between\",\n                                    flex: 1\n                                }}\n                            >\n                                {!!lotId &&\n                                    // Only render this info if there is a lot\n                                    <styled.LotInfoContainer>\n                                        <styled.SubtitleContainer>\n                                            <styled.HilSubtitleMessage>Current Lot</styled.HilSubtitleMessage>\n                                        </styled.SubtitleContainer>\n\n                                        <ScaleWrapper\n                                            scaleFactor={isMobile ? 0.75 : 1}\n                                        >\n                                            <LotContainer\n                                                showCustomFields={false}\n                                                lotId={lotId}\n                                                quantity={hilLoadUnload === 'unload' ? unloadQuantity : null}\n                                                binId={\n                                                    // If its a warehouse, the bin is going to be the previous station\n                                                    !!warehouse ?\n                                                        getPreviousWarehouseStation(processId, stationID)._id\n                                                        :\n                                                        hilLoadUnload === 'load' ?\n                                                            stationId || loadStationId\n                                                            :\n                                                            unloadStationId\n\n                                                }\n                                                processId={processId}\n                                                containerStyle={{ margin: 0, padding: 0, width: \"30rem\" }}\n                                            />\n                                        </ScaleWrapper>\n                                    </styled.LotInfoContainer>\n                                }\n\n                                {\n                                    {\n                                        [CONTENT.QUANTITY_SELECTOR]: renderQuantitySelector(),\n                                        [CONTENT.FRACTION_SELECTOR]: renderFractionOptions(),\n                                        [CONTENT.UNLOAD]: renderUnloadContent(),\n                                    }[content] ||\n                                    null\n                                }\n                            </div>\n                        </styled.InnerContentContainer>\n\n                        <styled.HilButtonContainer>\n                            {\n                                {\n                                    [CONTENT.QUANTITY_SELECTOR]:\n                                        <>\n                                            <HilButton\n                                                label={\"Continue\"}\n                                                color={'#90eaa8'}\n                                                iconName={'fas fa-check'}\n                                                iconColor={'#1c933c'}\n                                                textColor={'#1c933c'}\n                                                onClick={() => {\n                                                    onHilSuccess()\n                                                }}\n                                            />\n                                            <HilButton\n                                                label={\"Cancel\"}\n                                                onClick={() => {\n                                                    onHilFailure()\n                                                    dispatchSetShowModalId(null)\n                                                    setModalClosed(true)\n                                                }}\n                                                iconName={'fas fa-times'}\n                                                color={'#ff9898'}\n                                                textColor={'#1c933c'}\n                                            />\n                                        </>,\n                                    [CONTENT.FRACTION_SELECTOR]:\n                                        <>\n                                            <HilButton\n                                                label={\"Cancel\"}\n                                                onClick={() => {\n                                                    onHilFailure()\n                                                    dispatchSetShowModalId(null)\n                                                    setModalClosed(true)\n                                                }}\n                                                iconName={'fas fa-times'}\n                                                color={'#ff9898'}\n                                                textColor={'#1c933c'}\n                                            />\n                                        </>,\n                                    [CONTENT.UNLOAD]:\n                                        <>\n                                            <FlexibleContainer>\n                                                <HilButton\n                                                    containerCss={styled.unloadButtonCss}\n                                                    iconName='fas fa-check'\n                                                    color={'#90eaa8'}\n                                                    onClick={() => {\n                                                        onHilSuccess()\n                                                        dispatchSetShowModalId(null)\n                                                    }}\n                                                />\n                                            </FlexibleContainer>\n                                        </>,\n                                }[content] ||\n                                null\n                            }\n                        </styled.HilButtonContainer>\n                    </styled.Body>\n                </styled.ModalContainer>\n            </Formik >\n        )\n    }\n    else {\n        return null\n    }\n}\n\nHILModals.propTypes = {\n\n};\n\nHILModals.defaultProps = {\n\n};\n\nexport default HILModals\n","export const GET_LOGGERS = 'GET_LOGGERS'\nexport const GET_LOGGERS_STARTED = 'GET_LOGGERS_STARTED'\nexport const GET_LOGGERS_SUCCESS = 'GET_LOGGERS_SUCCESS'\nexport const GET_LOGGERS_FAILURE = 'GET_LOGGERS_FAILURE'\n\nexport const POST_LOGGERS = 'POST_LOGGERS'\nexport const POST_LOGGERS_STARTED = 'POST_LOGGERS_STARTED'\nexport const POST_LOGGERS_SUCCESS = 'POST_LOGGERS_SUCCESS'\nexport const POST_LOGGERS_FAILURE = 'POST_LOGGERS_FAILURE'\n\nexport const PUT_LOGGERS = 'PUT_LOGGERS'\nexport const PUT_LOGGERS_STARTED = 'PUT_LOGGERS_STARTED'\nexport const PUT_LOGGERS_SUCCESS = 'PUT_LOGGERS_SUCCESS'\nexport const PUT_LOGGERS_FAILURE = 'PUT_LOGGERS_FAILURE'\n\nexport const DELETE_LOGGERS = 'DELETE_LOGGERS'\nexport const DELETE_LOGGERS_STARTED = 'DELETE_LOGGERS_STARTED'\nexport const DELETE_LOGGERS_SUCCESS = 'DELETE_LOGGERS_SUCCESS'\nexport const DELETE_LOGGERS_FAILURE = 'DELETE_LOGGERS_FAILURE'\n\nexport const GET_LOCAL_SETTINGS = 'GET_LOCAL_SETTINGS'\nexport const GET_LOCAL_SETTINGS_STARTED = 'GET_LOCAL_SETTINGS_STARTED'\nexport const GET_LOCAL_SETTINGS_SUCCESS = 'GET_LOCAL_SETTINGS_SUCCESS'\nexport const GET_LOCAL_SETTINGS_FAILURE = 'GET_LOCAL_SETTINGS_FAILURE'\n\nexport const POST_LOCAL_SETTINGS = 'POST_LOCAL_SETTINGS'\nexport const POST_LOCAL_SETTINGS_STARTED = 'POST_LOCAL_SETTINGS_STARTED'\nexport const POST_LOCAL_SETTINGS_SUCCESS = 'POST_LOCAL_SETTINGS_SUCCESS'\nexport const POST_LOCAL_SETTINGS_FAILURE = 'POST_LOCAL_SETTINGS_FAILURE'\n\nexport const STOP_API_CALLS = 'STOP_API_CALLS'\n","import styled, {css} from 'styled-components'\nimport Modal from 'react-modal';\nimport {Form} from \"formik\";\nimport {LightenDarkenColor} from \"../../../../../../methods/utils/color_utils\";\n\n\nconst borderGlowCss = css`\n    --border-width: .1rem;\n    background: none;\n\n    @keyframes moveGradient {\n        50% {\n          background-position: 100% 50%;\n        }\n      }\n\n    border-radius: var(--border-width);\n\n    &::after {\n    position: absolute;\n    content: \"\";\n    top: calc(-1 * var(--border-width));\n    left: calc(-1 * var(--border-width));\n    z-index: -1;\n    width: calc(100% + var(--border-width) * 2);\n    height: calc(100% + var(--border-width) * 2);\n    background: linear-gradient(\n        60deg,\n        /* hsl(224, 85%, 66%), */\n        /* hsl(269, 85%, 66%), */\n        /* hsl(314, 85%, 66%), */\n        /* hsl(359, 85%, 66%), */\n        hsl(44, 85%, 66%),\n        hsl(89, 85%, 66%),\n        hsl(134, 85%, 66%),\n        hsl(179, 85%, 66%)\n    );\n    background-size: 300% 300%;\n    background-position: 0 50%;\n    border-radius: calc(2 * var(--border-width));\n    animation: moveGradient 4s alternate infinite;\n}\n`\n\nexport const TextboxDiv = styled.div`\n    background-color: ${props => props.theme.bg.quinary};\n    border: none;\n    font-size: ${props => props.theme.fontSize.sz4};\n    font-family: ${props => props.theme.font.primary};\n    font-weight: 500;\n    min-height: 2rem;\n    display: flex;\n    flex-grow: 1;\n    color: ${props => props.theme.bg.octonary};\n    padding: .5rem;\n    border-radius: .5rem;\n\n    box-shadow: 0 0.1rem 0.2rem 0rem rgba(0,0,0,0.1) !important;\n    border-bottom: 2px solid ${props => props.theme.bg.quinary};\n\n    &:focus {\n        background-color: ${props => LightenDarkenColor(props.theme.bg.quinary, 10)};\n        border-bottom: 2px solid ${props => !!props.schema ? props.theme.schema[props.schema].solid : props.theme.fg.primary};\n        color: ${props => props.theme.bg.octonary};\n        outline: none !important;\n    }\n\n    &::placeholder {\n        font-family: ${props => props.theme.font.secondary};\n        color: ${props => props.theme.bg.senary};\n    }\n\n`;\n\nexport const Container = styled(Modal)`\n\toutline: none !important;\n\toutline-offset: none !important;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translate(-50%, -50%);\n\tright: auto;\n\tbottom: auto;\n\t\n\tposition: absolute;\n    display: flex;\n    justify-content: center;\n\t\n\tz-index: 50;\n\t\n\tmin-width: 95%;\n\tmax-width: 95%;\n\tmax-height: 95%;\n\t// height: 95%;\n\t\n\tcolor: ${props => props.theme.bg.octonary};\n\t\n\tdisplay: flex;\n\tflex-direction: column;\n    box-shadow: ${props => props.theme.cardShadow};\n\t\n\tcolor: ${props => props.theme.bg.octonary};\n\tborder-radius: 1rem;\n\toverflow: hidden;\n`;\n\nexport const HeaderContainer = styled.div`\n\twidth: 100%;\n\tdisplay: flex;\n\tflex-direction: column;\n\tborder-width: 0;\n\tborder-bottom-width: thin;\n\tborder-color: black;\n\tborder-style: solid;\n\tmargin-bottom: 2rem;\n`;\n\nexport const Header = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\tpadding: 0;\n\tmargin: 0;\n\theight: 3rem;\n\tbackground: ${props => props.theme.bg.secondary};\n\t\n`\nexport const Label = styled.span`\n\tpadding-left: 1rem;\n\tfont-size: ${props => props.theme.fontSize.sz3};\n\tmargin-bottom: .25rem;\n`\n\nexport const StyledForm = styled(Form)`\n    display: flex;\n    flex: 1;\n    flex-direction: column;\n    width: 100%;\n    max-width: 100%;\n    position: relative;\n    overflow: scroll;\n`;\n\nexport const Title = styled.h2`\n\tflex: 2;\n\theight: 100%;\n\tmin-height: 100%;\n\tmargin: 0;\n\tpadding: 0;\n\ttext-align: center;\n\tdisplay: inline-flex;\n\tjustify-content: center;\n\talign-items: center;\n\t\n\tfont-size: ${props => props.theme.fontSize.sz2};\n\tfont-weight: ${props => props.theme.fontWeight.bold};\n`;\n\nexport const TextContainer = styled.div`\n\twidth: 100%;\n\tdisplay: flex;\n\tflex-direction: column;\n\tmargin-bottom: 1.5rem;\n`;\n\nexport const BodyContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tpadding: 1rem;\n\tflex: 1;\n\tjustify-content: space-between;\n\toverflow: hidden;\n\t\n\tbackground: ${props => props.theme.bg.primary};\n`\n\nexport const ButtonForm = styled.div`\n\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: center;\n\tmin-height: fit-content;\n`;\n\nexport const IconSelectorContainer = styled.div`\n\tbackground: ${props => props.theme.bg.quinary};\n\toverflow: auto;\n\tmin-height: 2rem;\n\twidth: 100%;\n\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tflex-wrap: wrap;\n\tborder-radius: .5rem;\n`\n\nexport const ContentContainer = styled.div`\n\tbackground: ${props => props.theme.bg.secondary};\n\tborder-radius: 1rem;\n\tdisplay: flex;\n\tflex-direction: column;\n\toverflow: hidden;\n\tmargin-bottom: 1rem;\n\talign-items: center;\n`\n\nexport const ReportButtonsContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: stretch;\n\tflex-wrap: nowrap;\n\toverflow: auto;\n\tmin-height: 5rem;\n  \tflex: 1;\n\twidth: 100%;\n\tpadding: 0 1rem;\n`\n\nexport const ButtonWidthContainer = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n  height: fit-content;\n  min-height: fit-content;\n  \t\n`\n\nexport const ConditionText = styled.span`\n\tfont: ${props => props.theme.font.primary};\n\tfont-size: ${props => props.theme.fontSize.sz3};\n\tmax-width: 100%;\n\toverflow: hidden;\n\ttext-overflow: ellipsis;\n`\n\nexport const RightContentContainer = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: ${props => props.theme.bg.senary};\n    width: 4rem;\n    border-left: 1px solid ${props => props.theme.bg.secondary};\n    height: 100%;\n    // background-color: ${props => props.theme.bg.septenary};\n    \n    // padding-left: 1rem;\n    // border-top-right-radius: 0.6rem;\n    // border-bottom-right-radius: 0.6rem;\n    \n    \n`\n\nexport const ButtonContainer = styled.button`\n  position: relative;\n  user-select: none;\n  \n  // flex layout\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  // flex-grow: 1;\n  width: 90%;\n  overflow: hidden;\n  height: 4rem;\n  min-height: 4rem;\n  line-height: 3rem;\n  min-width: 80%;\n\t\n  background: ${props => `linear-gradient(180deg, \n                            ${LightenDarkenColor(props.background, 20)} 0%, \n                            ${props.background} 50%, \n                            ${LightenDarkenColor(props.background, -20)} 100%)`};\n  border-radius: 0.6rem;\n  padding: 0;\n\t\n\t\n  // margins\n  margin: .5rem 0 .5rem 0;\n\t\n  // padding\n  // padding: 0.5rem 1rem 0.5rem 1rem;\n  \n  outline: none;\n  &:focus {\n    outline: none;\n  }\n\n  letter-spacing: 1.5px;\n  border: none;\n  box-shadow: ${props => props.clickable ? 'none' : `2px 2px 2px rgba(0, 0, 0, 0.5)`};\n  transition: all 0.1s ease 0s;\n  cursor: pointer;\n  outline: none;\n    \n  &:hover {\n    ${props => props.hoverable && !props.clickable &&\n\t{\n\t\tboxShadow: \"3px 3px 3px rgba(0, 0, 0, 0.5)\",\n\t\ttransform: \"translateY(-1px)\",\n\t}\n}\n  }\n\n  ${props => props.clickable && !props.disabled &&\n\t`&:active {\n      background: ${`linear-gradient(180deg, \n          ${LightenDarkenColor(props.background, -20)} 0%, \n          ${props.background} 50%, \n          ${LightenDarkenColor(props.background, 20)} 100%)`\n\t}\n    }`\n}\n  \n  ${props => props.disabled &&\n\t{\n\t\tcolor: props.theme.bg.quaternary,\n\t\tbackground: `linear-gradient(180deg, rgba(255,255,255,0.4) 0%, rgba(255,255,255,0.4) 100%), ${LightenDarkenColor(props.background, -60)}`,\n\t\tpointerEvents: \"none\",\n\t}\n}\n\n    // --border-width: 3px;\n    ${props => props.borderGlow &&\n\tborderGlowCss\n}\n\n${props => props.css};\n\n`\n\nexport const AddNewButtonContainer = styled.div`\n\tdisplay: flex;\n\tjustify-content: center;\n  align-items: center;\n\twidth: 100%;\n\tpadding: 0 1rem;\n`\n\nexport const ColorFieldContainer = styled.div`\n\tposition: relative;\n\t\n`\n\n\nexport const Icon = styled.i`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin: auto auto;\n    color: green;\n    fill: green;\n    font-size: 7rem;\n    width: 14rem;\n    &:hover {\n        cursor: pointer;\n    }\n\n    &:active{\n        filter: brightness(85%)\n    }\n`","import styled from \"styled-components\";\n\nexport const ButtonWidthContainer = styled.div`\n    display: flex;\n    align-items: center;\n    align-self: stretch;\n    flex: 1;\n    justify-content: center;\n    height: fit-content;\n    min-height: fit-content;\n`\n\nexport const EditIcon = styled.i`\n    color: ${props => props.theme.textColor};\n    font-size: ${props => props.theme.fontSize.sz3};\n    \n    :hover {\n        cursor: pointer;\n    }\n`","import React from 'react'\n\n// components internal\nimport DashboardButton from \"../../../dashboard_buttons/dashboard_button/dashboard_button\"\n\n// functions external\nimport PropTypes from 'prop-types'\n\n// styles\nimport * as styled from \"./report_button.style\"\n\nconst ReportButton = (props) => {\n\n\tconst {\n\t\tid,\n\t\tlabel,\n\t\ticonClassName,\n\t\tcolor,\n\t\tonClick,\n\t\tclassName,\n\t\tinvert,\n\t\tediting\n\t} = props\n\n\treturn (\n\t\t<styled.ButtonWidthContainer key={id} className={className}\n\t\t\t\t\t\t\t\t\t onClick={onClick}\n\t\t>\n\t\t\t{editing &&\n\t\t\t\t<styled.EditIcon className=\"fas fa-edit\"></styled.EditIcon>\n\t\t\t}\n\t\t\t<DashboardButton\n\t\t\t\tinvert={invert}\n\t\t\t\ttitle={label}\n\t\t\t\tkey={id}\n\t\t\t\ttype={null}\n\t\t\t\ticonClassName={iconClassName}\n\t\t\t\ticonColor={color}\n\n\t\t\t\tcontainerStyle={{\n\t\t\t\t\theight: '4rem',\n\t\t\t\t\tminHeight: \"4rem\",\n\t\t\t\t\tlineHeight: '3rem',\n\t\t\t\t\tmargin: '0.5rem auto',\n\t\t\t\t\tflex: 1,\n\t\t\t\t\twidth: \"unset\",\n\t\t\t\t\tminWidth: \"unset\",\n\t\t\t\t\tmaxWidth: \"50rem\",\n\t\t\t\t}}\n\t\t\t\thoverable={false}\n\t\t\t\ttaskID={null}\n\t\t\t\tcolor={color}\n\t\t\t\tdisabled={false}\n\t\t\t>\n\t\t\t</DashboardButton>\n\t\t</styled.ButtonWidthContainer>\n\t)\n}\n\nReportButton.propTypes = {\n\tid: PropTypes.string,\n\tlabel: PropTypes.string,\n\ticonClassName: PropTypes.string,\n\tcolor: PropTypes.string,\n\tonClick: PropTypes.func,\n\tclassName: PropTypes.string,\n\tinvert: PropTypes.bool,\n\tediting: PropTypes.bool,\n};\n\nReportButton.defaultProps = {\n\tid: \"\",\n\tlabel: \"\",\n\ticonClassName: \"\",\n\tcolor: \"\",\n\tonClick: () => {},\n\tclassName: \"\",\n\tinvert: false,\n\tediting: false,\n}\n\nexport default React.memo(ReportButton)\n","import React, {useCallback, useEffect, useState} from 'react'\nimport PropTypes from 'prop-types'\nimport {isObject} from \"../../../../../../../methods/utils/object_utils\"\nimport ReportButton from \"./report_button\"\n\n// wraps ReportButton component for automatically getting props from id\nconst ReportButtonContainer = (props) => {\n\tconst {\n\t\treportButtons,\n\t\tid,\n\t\tonClick\n\t} = props\n\n\tconst [reportButton, setReportButton] = useState(null)\n\tconst {\n\t\tdescription = \"\",\n\t\tlabel = \"\",\n\t\ticonClassName = \"\",\n\t\tcolor = \"\",\n\t\t_id = \"\"\n\t} = reportButton || {}\n\n\tuseEffect(() => {\n\t\tsetReportButton(reportButtons.find((currItem) => currItem._id === id) || {})\n\t}, [id, reportButtons])\n\n\tconst onClickWrapped = useCallback(\n\t\t() => {\n\t\t\tonClick(reportButton)\n\t\t},\n\t\t[reportButton],\n\t)\n\n\n\treturn (\n\t\t<ReportButton\n\t\t\tid={_id}\n\t\t\tlabel={label}\n\t\t\ticonClassName={iconClassName}\n\t\t\tcolor={color}\n\t\t\tdescription={description}\n\t\t\tonClick={onClickWrapped}\n\t\t/>\n\t)\n}\n\nReportButtonContainer.propTypes = {\n\treportButtons: PropTypes.array,\n\tid: PropTypes.string,\n\tonClick: PropTypes.func\n}\n\nReportButtonContainer.defaultProps = {\n\treportButtons: [],\n\tid: \"\",\n\tonClick: () => {}\n}\n\nexport default React.memo(ReportButtonContainer)\n","import React, {useCallback} from 'react'\n\n// components external\nimport {Draggable} from \"react-smooth-dnd\"\n\n// components internal\nimport ReportButtonContainer from \"../report_button/report_button_container\"\n\n// constants\nimport {DRAGGING_GHOST_HIDDEN} from \"../../../../../../../constants/class_name_constants\"\n\n// functions external\nimport PropTypes from 'prop-types'\nimport ReportButton from \"../report_button/report_button\";\n\nconst ReportModalButtons = ((props) => {\n\tconst {\n\t\tbuttonsIds,\n\t\tdragging,\n\t\tonClick,\n\t\treportButtons,\n\t\tediting\n\t} = props\n\n\tconst renderButtons = useCallback(\n\t\t() => {\n\t\t\treturn reportButtons.map((button, index) => {\n\t\t\t\tconst {\n\t\t\t\t\t_id: buttonId,\n\t\t\t\t\tdescription = \"\",\n\t\t\t\t\tlabel = \"\",\n\t\t\t\t\ticonClassName = \"\",\n\t\t\t\t\tcolor = \"\",\n\t\t\t\t} = button || {}\n\n\n\t\t\t\tconst isDragging = dragging === button\n\n\t\t\t\tif(editing) {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Draggable key={buttonId} className={isDragging ? DRAGGING_GHOST_HIDDEN : null} index={index}>\n\t\t\t\t\t\t\t<ReportButton\n\t\t\t\t\t\t\t\tediting={true}\n\t\t\t\t\t\t\t\tid={buttonId}\n\t\t\t\t\t\t\t\tlabel={label}\n\t\t\t\t\t\t\t\ticonClassName={iconClassName}\n\t\t\t\t\t\t\t\tcolor={color}\n\t\t\t\t\t\t\t\tdescription={description}\n\t\t\t\t\t\t\t\tonClick={() => onClick(button)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Draggable>\n\t\t\t\t\t)\n\t\t\t\t}\n\n\t\t\t\telse {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<ReportButton\n\t\t\t\t\t\t\tid={buttonId}\n\t\t\t\t\t\t\tlabel={label}\n\t\t\t\t\t\t\ticonClassName={iconClassName}\n\t\t\t\t\t\t\tcolor={color}\n\t\t\t\t\t\t\tdescription={description}\n\t\t\t\t\t\t\tonClick={() => onClick(button)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t})\n\t\t},\n\t\t[reportButtons, dragging, onClick],\n\t);\n\n\treturn renderButtons()\n\n})\n\nReportModalButtons.propTypes = {\n\tbuttonsIds: PropTypes.array,\n\tdragging: PropTypes.string,\n\tonClick: PropTypes.func,\n\treport_buttons: PropTypes.array,\n\tediting: PropTypes.bool,\n}\n\nReportModalButtons.defaultProps = {\n\tbuttonsIds: [],\n\tdragging: \"\",\n\tonClick: () => {},\n\treport_buttons: [],\n\tediting: false\n}\n\nexport default React.memo(ReportModalButtons)\n","export const DRAGGING_GHOST_HIDDEN = \"dragging-ghost-hidden\"","import styled from 'styled-components';\nimport {TwitterPicker} from \"react-color\";\n// import \"./color_field.css\"\n\nexport const DefaultContainer = styled.div`\n\tposition: absolute;\n\tz-index: 0;\n`\n\n// ===== Color Selector ===== //\nexport const ColorPicker = styled.div`\n    display: flex;\n\tflex-grow: 1;\n\t\n\tposition: absolute;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translate(-50%, -50%);\n\n`\n\nexport const StyledTwitterPicker = styled.div`\n\t&& .twitter-picker {\n\t\tbackground: ${props => props.theme.bg.quinary} !important;\n\t\tborder-radius: 1rem;\n\t}\n\t\n\t.twitter-picker span {\n\t}\n\t\n\t.twitter-picker div {\n\t\tborder-radius: .5rem;\n\t}\n\t\n\tdiv {\n\t\tborder-radius: .5rem;\n\t}\n\t\n\ttwitter-picker {\n\t}\n`\n\n\nexport const ColorButton = styled.button`\n    color: black;\n\tbackground: white;\n\n`\n\nexport const DropdownMenu = styled.div`\n`\n\nexport const ColorOption = styled.button`\n    &:hover {\n      background: ${props => props.color};\n\t}\n\n`\n","import React from \"react\";\n\n// external functions\nimport PropTypes from 'prop-types';\nimport { useField, useFormikContext } from \"formik\";\n// external components\nimport { TwitterPicker } from 'react-color'\n\n// internal components\nimport ErrorTooltip from '../error_tooltip/error_tooltip';\n\n// styles\nimport * as styled from './color_field.style'\n\nconst ColorField = (props) => {\n\n\tconst {\n\t\tContainer,\n\t\ttype,\n\t\tmode,\n\t\tcolors,\n\t\tcontainerStyle,\n\t\t...rest\n\t} = props\n\n\t// formik related\n\tconst { setFieldValue, setFieldTouched, validateOnChange, validateOnBlur, validateField, validateForm, ...context } = useFormikContext();\n\tconst [field, meta] = useField(props);\n\tconst hasError = meta.touched && meta.error;\n\n\n\treturn (\n\t\t<Container style={containerStyle}>\n\n\t\t\t{mode === \"twitter\" ?\n\t\t\t\t<styled.StyledTwitterPicker>\n\t\t\t\t<TwitterPicker\n\t\t\t\t\tcolor={ field.value }\n\t\t\t\t\tonChangeComplete={(color)=>{\n\t\t\t\t\t\tsetFieldValue(field.name, color.hex);\n\t\t\t\t\t}}\n\t\t\t\t\tonChange={(color)=>{\n\t\t\t\t\t\t// setFieldValue(field.name, color.hex);\n\t\t\t\t\t}}\n\t\t\t\t\tstyle={{zIndex: 10}}\n\t\t\t\t\tcolors={colors.map(currColor => currColor.hex)}\n\t\t\t\t\t{...rest}\n\t\t\t\t\ttriangle={\"hide\"}\n\t\t\t\t/>\n\t\t\t\t</styled.StyledTwitterPicker>\n\n\t\t\t\t:\n\t\t\t\t<styled.ColorPicker>\n\t\t\t\t\t<div className=\"dropdown show\" style={{zIndex: '1'}}>\n\t\t\t\t\t\t<styled.ColorButton className=\"btn dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n\t\t\t\t\t\t\tColor\n\t\t\t\t\t\t</styled.ColorButton>\n\n\t\t\t\t\t\t<styled.DropdownMenu className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n\t\t\t\t\t\t\t{colors.map((currColor) => {\n\t\t\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\t\t\thex,\n\t\t\t\t\t\t\t\t\tlabel\n\t\t\t\t\t\t\t\t} = currColor\n\n\t\t\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t\t\t<styled.ColorOption type={type} className=\"dropdown-item\" color={hex} onClick={() => setFieldValue(field.name, hex)}>{label}</styled.ColorOption>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</styled.DropdownMenu>\n\t\t\t\t\t</div>\n\t\t\t\t</styled.ColorPicker>\n\n\t\t\t}\n\n\n\n\n\t\t\t\n\t\t</Container>\n\t);\n};\n\n\n// Specifies propTypes\nColorField.propTypes = {\n\tContainer: PropTypes.elementType,\n\tmode: PropTypes.string,\n\tcolors: PropTypes.arrayOf(PropTypes.string),\n};\n\n// Specifies the default values for props:\nColorField.defaultProps = {\n\tContainer: styled.DefaultContainer,\n\tmode: null,\n\tcolors: [\n\t\t{\n\t\t\thex: '#FF4B4B',\n\t\t\tlabel: \"Red\"\n\t\t},\n\t\t{\n\t\t\thex: '#56d5f5',\n\t\t\tlabel: \"Blue\"\n\t\t},\n\t\t{\n\t\t\thex: '#50de76',\n\t\t\tlabel: \"Green\"\n\t\t},\n\t\t{\n\t\t\thex: '#f2ae41',\n\t\t\tlabel: \"Orange\"\n\t\t},\n\t\t{\n\t\t\thex: '#c7a0fa',\n\t\t\tlabel: \"Purple\"\n\t\t}\n\t]\n};\n\nexport default ColorField;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {useDispatch} from \"react-redux\";\nimport {putDashboard} from \"../../../../../../../redux/actions/dashboards_actions\";\nimport {FORM_MODES} from \"../../../../../../../constants/scheduler_constants\";\nimport {immutableDelete, immutableReplace} from \"../../../../../../../methods/utils/array_utils\";\nimport {Formik} from \"formik\";\nimport uuid from 'uuid'\nimport {reportEventSchema} from \"../../../../../../../methods/utils/form_schemas\";\nimport * as styled from \"../report_modal.style\";\nimport DashboardButton from \"../../../dashboard_buttons/dashboard_button/dashboard_button\";\nimport TextField from \"../../../../../../basic/form/text_field/text_field\";\nimport Textbox from \"../../../../../../basic/textbox/textbox\";\nimport ColorField from \"../../../../../../basic/form/color_field/color_field\";\nimport {DASHBOARD_BUTTON_COLORS} from \"../../../../../../../constants/dashboard_constants\";\nimport Button from \"../../../../../../basic/button/button\";\n\nconst NewButtonForm = (props) => {\n\n    const {\n        cancel,\n        dashboard,\n        dashboardButtonId,\n        reportButtonId,\n        editing,\n        setFieldValue\n    } = props\n\n    const report_buttons = dashboard?.report_buttons || []\n\n\n    const dispatch = useDispatch()\n    const dispatchPutDashboard = (dashboardCopy, dashboardId) => dispatch(putDashboard(dashboardCopy, dashboardId))\n\n    const editingButton = report_buttons.find((currButton) => currButton._id === reportButtonId)\n    const _id = editingButton?._id\n    const description = editingButton?.description\n    const iconClassName = editingButton?.iconClassName\n    const color = editingButton?.color\n    const label = editingButton?.label\n\n    const formMode = _id ? FORM_MODES.UPDATE : FORM_MODES.CREATE\n\n    const onSubmit = (values, formMode) => {\n\n        // extract values and default values\n        const description = values?.description || \"\"\n        const iconClassName = values?.iconClassName\n        const color = values?.color || \"#ff4b4b\"\n        const label = values?.label || \"\"\n        const old_report_buttons = dashboard?.report_buttons || []\n\n        // handle logic for editing buttons\n        if (editing) {\n\n            // update existing button\n            if (formMode === FORM_MODES.UPDATE) {\n\n                const updatedDashboard = {\n                    ...dashboard,\n                    report_buttons: old_report_buttons.map((currButton) => {\n\n                        // if this is the button being updating, update values\n                        if (currButton._id === _id) {\n                            return {\n                                ...currButton,\n                                description,\n                                iconClassName,\n                                color,\n                                label\n                            }\n                        }\n\n                        // if not current button being editing, return original\n                        return currButton\n                    })\n                }\n\n                // update dashboard\n                dispatchPutDashboard(updatedDashboard, dashboard._id.$oid)\n            }\n\n            // create new button\n            else if (formMode === FORM_MODES.CREATE) {\n\n                const newReportButton = {\n                    _id: uuid.v4(),\n                    description,\n                    iconClassName,\n                    color,\n                    label\n                }\n\n                const updatedDashboard = {\n                    ...dashboard,\n                    report_buttons: [\n                        // spread original buttons and add new one with form values\n                        ...old_report_buttons,\n                        newReportButton\n                    ],\n                }\n\n                // update dashboard\n                dispatchPutDashboard(updatedDashboard, dashboard._id.$oid)\n            }\n\n            // close form\n            cancel()\n        }\n\n        // handle submit logic for sending report\n        else {\n\n        }\n    }\n\n    const onDelete = () => {\n        const oldReportButtons = dashboard?.report_buttons || []\n\n        // update dashboard by filtering out id of button to be removed\n        const updatedDashboard = {\n            ...dashboard,\n            report_buttons: oldReportButtons.filter((currButton) => {\n                return currButton?._id !== reportButtonId\n            })\n        }\n\n        // update dashboard\n        dispatchPutDashboard(updatedDashboard, dashboard._id.$oid)\n\n        // close form\n        cancel()\n    }\n\n    return (\n        <Formik\n            initialValues={{\n                label: label ? label : \"\",\n                description: description ? description : \"\",\n                iconClassName: iconClassName ? iconClassName : null,\n                color: color ? color : \"#ff4b4b\"\n            }}\n\n            // validation control\n            validationSchema={reportEventSchema}\n            validateOnChange={true}\n            validateOnMount={false} // leave false, if set to true it will generate a form error when new data is fetched\n            validateOnBlur={true}\n            enableReinitialize={true} // leave false, otherwise values will be reset when new data is fetched for editing an existing item\n            onSubmit={async (values, { setSubmitting, setTouched, resetForm }) => {\n                // set submitting to true, handle submit, then set submitting to false\n                // the submitting property is useful for eg. displaying a loading indicator\n                setSubmitting(true)\n                await onSubmit(values, formMode)\n                setTouched({}) // after submitting, set touched to empty to reflect that there are currently no new changes to save\n                setSubmitting(false)\n                resetForm()\n            }}\n        >\n            {formikProps => {\n                const {\n                    values,\n                    setFieldValue\n                } = formikProps\n\n                const {\n                    color,\n                    label,\n                    iconClassName\n                } = values\n\n                return (\n                    <styled.StyledForm>\n                        {editing &&\n                        <DashboardButton\n                            title={label}\n                            type={\"button\"}\n                            iconClassName={iconClassName}\n                            iconColor={color}\n                            containerStyle={{ height: '4rem', minHeight: \"4rem\", lineHeight: '3rem', width: '80%', alignSelf: \"center\", marginBottom: \"1rem\" }}\n                            hoverable={false}\n                            color={color}\n                            disabled={false}\n                        />\n                        }\n\n                        <div style={{ marginBottom: \"1rem\" }}>\n                            <styled.Label>Label</styled.Label>\n                            {editing &&\n                            <TextField\n                                name=\"label\"\n                                type=\"text\"\n                                placeholder=\"Label...\"\n                                InputComponent={Textbox}\n                                style={{ borderRadius: \".5rem\" }}\n                            />\n                            }\n                        </div>\n\n                        {editing ?\n                            <div\n                                style={{\n                                    marginBottom: \"1rem\"\n                                }}\n                            >\n                                <styled.Label>Description</styled.Label>\n                                <TextField\n                                    name=\"description\"\n                                    type=\"text\"\n                                    placeholder=\"Description...\"\n                                    InputComponent={Textbox}\n                                    lines={2}\n                                    style={{ borderRadius: \"0.5rem\" }}\n                                />\n                            </div>\n                            :\n                            description ?\n                                <div\n                                    style={{\n                                        marginBottom: \"1rem\"\n                                    }}\n                                >\n                                    <styled.Label>Description</styled.Label>\n                                    <styled.TextboxDiv\n                                        name=\"description\"\n                                        type=\"text\"\n                                        placeholder=\"Description...\"\n                                        readonly\n                                    >\n                                        {description}\n                                    </styled.TextboxDiv>\n                                </div>\n                                :\n                                null\n                        }\n\n                        {editing &&\n                        <div\n                            style={{\n                                marginBottom: \"1rem\"\n                            }}\n                        >\n                            <styled.Label>Color</styled.Label>\n                            <ColorField\n                                name={\"color\"}\n                                Container={styled.ColorFieldContainer}\n                                type={\"button\"}\n                                mode={\"twitter\"}\n                                colors={DASHBOARD_BUTTON_COLORS}\n                            />\n                        </div>\n                        }\n                        <styled.ButtonForm>\n                            <Button\n                                secondary\n                                schema={\"dashboards\"}\n                                onClick={onDelete}\n                                label={\"Delete\"}\n                                type=\"button\"\n                            />\n\n                            <Button\n                                primary\n                                schema={\"dashboards\"}\n                                label={editing ? \"Save\" : \"Send\"}\n                                type=\"submit\"\n                            />\n                        </styled.ButtonForm>\n                    </styled.StyledForm>\n                )\n            }}\n        </Formik>\n    )\n};\n\nNewButtonForm.propTypes = {\n\n};\n\nexport default NewButtonForm;\n","import React, {useCallback, useContext, useEffect, useRef, useState} from \"react\";\n\n// external components\nimport { Formik } from \"formik\";\nimport Modal from 'react-modal';\nimport { useDispatch } from \"react-redux\";\n\nimport { Container, Draggable } from 'react-smooth-dnd';\n\n// internal components\nimport Button from \"../../../../../basic/button/button\";\n\n// utils\n\n// actions\nimport { putDashboard } from \"../../../../../../redux/actions/dashboards_actions\";\n\n// styles\nimport * as styled from './report_modal.style'\nimport { postReportEvent } from \"../../../../../../redux/actions/report_event_actions\";\nimport {isNonEmptyArray} from \"../../../../../../methods/utils/array_utils\";\nimport arrayMove from \"array-move\";\nimport ReportModalEditButtons from \"./report_modal_edit_buttons/report_modal_edit_buttons\";\nimport NewButtonForm from \"./new_button_form/new_button_form\";\nimport {checkPermission} from \"../../../../../../methods/utils/permission_utils\";\nimport {\n    CREATE_REPORT_BUTTONS_REQUEST,\n    EDIT_REPORT_BUTTONS_REQUEST,\n} from \"../../../../../../constants/permission_contants\";\nimport ReportButton from \"./report_button/report_button\";\nimport {ThemeContext} from \"styled-components\";\nimport ScrollContainer from \"../../../../../basic/scroll_container/scroll_container\";\n\nModal.setAppElement('body');\n\nconst ReportModal = (props) => {\n\n    const {\n        isOpen,\n        title,\n        close,\n        dashboard,\n        onSubmit\n    } = props\n\n    const theme = useContext(ThemeContext);\n\n    const dispatch = useDispatch()\n    const dispatchPutDashboard = async (dashboardCopy, dashboardId) => await dispatch(putDashboard(dashboardCopy, dashboardId))\n    const onPostReportEvent = (reportEvent) => dispatch(postReportEvent(reportEvent))\n\n    const [noButtons, setNoButtons] = useState(true)\n    const [addingNew, setAddingNew] = useState(false) // edit button form\n    const [editing, setEditing] = useState(false)  // default editing to true if there are currently no buttons\n    const [sending, setSending] = useState(false) // sending report\n    const [reportButtons, setReportButtons] = useState(null) // sending report\n    const [reportButtonId, setReportButtonId] = useState(null) // button being edited\n    const [submitting, setSubmitting] = useState(false)\n    const [dragging, setDragging] = useState(null)\n\n    const formRef = useRef(null)\t// gets access to form state\n    const {\n        current\n    } = formRef || {}\n\n    const {\n        values = {},\n        touched = {},\n        errors = {},\n        status = {},\n        setValues = () => { },\n        setErrors = () => { },\n        resetForm = () => { },\n        setTouched = () => { },\n        setFieldValue = () => { },\n        setStatus = () => { },\n    } = current || {}\n\n    useEffect(() => {\n        setNoButtons(!isNonEmptyArray(dashboard?.report_buttons))\n        setReportButtons(dashboard?.report_buttons || [])\n    }, [dashboard])\n\n    const sendReport = async (button) => {\n        setSubmitting(true)\n        const {\n            _id,\n            iconClassName,\n            color,\n            ...rest\n        } = button\n\n        const reportEvent = {\n            // save identifying info\n            dashboard_id: dashboard._id.$oid,\n            station_id: dashboard.station,\n            report_button_id: _id,\n            date: new Date().getTime(),\n\n            // spread rest of buttons data - commented out for now, get remaining data from actual report button when its needed\n            // ...rest\n        }\n\n        // post reportEvent\n        const result = await onPostReportEvent(reportEvent)\n\n        // handle request failed\n        if (result instanceof Error) {\n\n            onSubmit(button.label, false)\n        }\n\n        // handle request success\n        else {\n            onSubmit(button.label, true)\n        }\n        setSubmitting(false)\n        close()\n    }\n\n    const onDragStart = ({isSource, payload, willAcceptDrop}) => {\n        setDragging(payload)\n    }\n    const handleDragEnd = () => {\n        setDragging(null)\n    }\n\n    const handleDrop = (dropResult) => {\n        const { removedIndex, addedIndex, payload, element } = dropResult || {}\n\n        setDragging(payload)\n\n        if (payload === null) { //  No new button, only reorder\n\n        } else {\n            if (addedIndex !== null && removedIndex !== null) {\n                const shiftedButtons = arrayMove(reportButtons, removedIndex, addedIndex)\n                setFieldValue(\"reportButtons\",shiftedButtons)\n\n                const updatedDashboard = {\n                    ...dashboard,\n                    report_buttons: shiftedButtons\n                }\n\n                // update dashboard\n                dispatchPutDashboard(updatedDashboard, dashboard._id.$oid)\n            }\n        }\n\n        setDragging(null)\n    }\n\n    const handleButtonClick = useCallback((button) => {\n        const {\n            _id\n        } = button\n\n        if (editing) {\n            setAddingNew(true)\n            setReportButtonId(_id)\n        }\n        else {\n            sendReport(button)\n        }\n    }, [editing])\n\n    return (\n        <styled.Container\n            isOpen={isOpen}\n            onRequestClose={close}\n            style={{\n                overlay: {\n                    zIndex: 200,\n                    backgroundColor: 'rgba(0, 0, 0, 0.6)',\n                    backdropFilter: 'blur(5px)',\n                    transition: 'backdrop-filter 3s ease',\n                },\n                content: {\n                    zIndex: 200,\n                },\n            }}\n        >\n            <styled.Header>\n                <styled.Title>{editing ? \"Edit Report\" : \"Send Report\"}</styled.Title>\n\n                <Button\n                    onClick={close}\n                    schema={'dashboards'}\n                >\n                    <i className=\"fa fa-times\" aria-hidden=\"true\" />\n                </Button>\n            </styled.Header>\n\n            <styled.BodyContainer>\n                {(addingNew || sending) ?\n                    <NewButtonForm\n                        cancel={() => {\n                            setAddingNew(false)\n                            setSending(false)\n                            setReportButtonId(null)\n                        }}\n                        dashboard={dashboard}\n                        reportButtonId={reportButtonId}\n                        editing={true}\n                    />\n                    :\n                    <div style={{ display: \"flex\", flexDirection: \"column\", overflow: \"hidden\" }}>\n                        <styled.ContentContainer>\n                            <styled.AddNewButtonContainer\n                                showBorder={!noButtons}\n                            >\n                                <ReportButton\n                                    label={\"Add Report Button\"}\n                                    invert={true}\n                                    iconClassName={null}\n                                    color={theme.schema.report.solid}\n                                    onClick={() => setAddingNew(true)}\n                                    className={null}\n                                />\n\n                            </styled.AddNewButtonContainer>\n\n                            {!noButtons &&\n                                    <ScrollContainer>\n                                    {editing ?\n                                        <Formik\n                                            innerRef={formRef}\n                                            enableReinitialize={true}\n                                            initialValues={{\n                                                reportButtons: reportButtons\n                                            }}\n                                        >\n                                        <Container\n                                            onDragStart={onDragStart}\n                                            onDragEnd={handleDragEnd}\n                                            onDrop={handleDrop}\n                                            groupName=\"report-buttons\"\n                                            getChildPayload={index => values.reportButtons[index]}\n                                            style={{\n                                                alignSelf: \"stretch\",\n                                                alignItems: \"stretch\",\n                                                display: \"flex\",\n                                                flexDirection: \"column\",\n                                                minHeight: \"fit-content\",\n                                                justifyContent: \"flex-start\"\n                                            }}\n                                            getGhostParent={()=>document.body}\n                                            lockAxis={\"y\"}\n                                        >\n                                            <ReportModalEditButtons\n                                                dragging={dragging}\n                                                reportButtons={dashboard?.report_buttons}\n                                                onClick={handleButtonClick}\n                                                editing={editing}\n                                            />\n                                        </Container>\n                                        </Formik>\n                                        :\n                                        <ReportModalEditButtons\n                                            dragging={dragging}\n                                            reportButtons={reportButtons}\n                                            onClick={handleButtonClick}\n                                            editing={editing}\n                                        />\n                                    }\n                                    </ScrollContainer>\n                            }\n                        </styled.ContentContainer>\n\n                        <styled.ButtonForm>\n                            <Button\n                                tertiary\n                                schema={\"dashboards\"}\n                                onClick={close}\n                                label={\"Close\"}\n                                type=\"button\"\n                            />\n\n                            {\n                                checkPermission(null, EDIT_REPORT_BUTTONS_REQUEST) &&\n                                <Button\n                                    primary\n                                    schema={\"dashboards\"}\n                                    onClick={() => setEditing(!editing)}\n                                    label={editing ? \"Done\" : \"Edit\"}\n                                    type=\"button\"\n                                />\n                            }\n\n                        </styled.ButtonForm>\n                    </div>\n                }\n            </styled.BodyContainer>\n        </styled.Container>\n    );\n};\n\nexport default ReportModal\n","import {\n    isMobile\n} from \"react-device-detect\";\n\nexport const checkPermission = (userPermissions, request) => {\n    return !isMobile\n}","import styled from \"styled-components\";\nimport * as commonCss from '../../../../../../common_css/common_css'\n\n\nexport const LotContainer = styled.div`\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    height: 100%;\n    flex-grow: 1;\n    overflow: auto;\n`\n\nexport const LotHeader = styled.div`\n    ${commonCss.rowContainer}\n    align-items: center;\n    text-align: center;\n    justify-content: center;    \n    height: fit-content;\n`\n\nexport const LotTitle = styled.p`\n    color: ${props => props.theme.bg.octonary};\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz1};\n\n    /* margin-bottom: 0;\n    position: absolute;\n    text-align: center;\n    left: 0; \n    right: 0; \n    margin-left: auto; \n    margin-right: auto;  */\n\n`\n\n\n\nexport const LotButtonContainer = styled.div`\n    /* position: absolute; */\n    /* bottom: 0; */\n    /* left: 0; */\n    /* margin-bottom: auto; */\n    width: 100%;\n    padding-top: .5rem;\n\n    height: fit-content;\n    display: flex;\n    justify-content: center;\n    background: ${props => props.theme.bg.secondary};\n    box-shadow: 0px 0px 6px 1px rgba(0,0,0,0.2);\n    height: fit-content;\n    /* flex: 3; */\n\n\n`\n\nexport const LotBodyContainer = styled.div`\n    overflow-y: auto;\n    display: flex;\n    flex-direction: column;\n    /* flex: 6; */\n    flex-grow: 1;\n    padding: 0rem 1rem;\n    z-index: 1;\n`\n\n","import styled from \"styled-components\";\n\nexport const LotFieldsContainer = styled.div`\n    height: fit-content;\n    width: 100%;\n    max-width: 50rem;\n    background: ${props => props.theme.bg.primary};\n    box-shadow: ${props => props.theme.cardShadow};\n\n    padding: 1rem;\n    border-radius: .5rem;\n    align-self: center;\n\n    margin-bottom: 2rem;\n`","import React, { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\n\n// Import Styles\nimport * as styled from './dashboard_lot_fields.style'\n\n// Import Components\nimport LotDateRangeRow from '../../../../../../side_bar/content/cards/lot/lot_date_range_row/lot_date_range_row'\nimport LotSimpleRow from '../../../../../../side_bar/content/cards/lot/lot_simple_row/lot_simple_row'\nimport LotDateRow from '../../../../../../side_bar/content/cards/lot/lot_date_row/lot_date_row'\n\n// Import Constants\nimport { FIELD_DATA_TYPES } from \"../../../../../../../constants/lot_contants\"\n\n// Import Utils\nimport { getCustomFields, getLotTotalQuantity, getBinQuantity } from '../../../../../../../methods/utils/lot_utils'\nimport { getPreviousWarehouseStation } from '../../../../../../../methods/utils/processes_utils'\n\n\nconst DashboardLotFields = (props) => {\n\n    const {\n        currentLot,\n        stationID,\n        warehouse,\n    } = props || {}\n\n    const processes = useSelector(state => state.processesReducer.processes)\n\n    // If its a warehouse then use station before this one\n    const count = !!warehouse ? getBinQuantity(currentLot, getPreviousWarehouseStation(currentLot.process_id, stationID)._id) : getBinQuantity(currentLot, stationID)\n\n    const totalQuantity = getLotTotalQuantity(currentLot)\n    const processName = processes[currentLot.process_id]?.name\n\n    const renderLotFields = useMemo(() => {\n        const fields = getCustomFields(currentLot.lotTemplateId, currentLot)\n        return fields.map((field, currIndex, arr) => {\n            const {\n                dataType,\n                fieldName,\n                value,\n            } = field\n\n            const key = `${fieldName}+dataType`\n            const isLast = currIndex === arr.length - 1\n\n\n            switch (dataType) {\n                case FIELD_DATA_TYPES.STRING: {\n                    return (\n                        <LotSimpleRow\n                            key={key}\n                            label={fieldName}\n                            value={value}\n                            isLast={isLast}\n                            labelStyle={{ fontSize: '1.25rem' }}\n                            countStyle={{ fontSize: '1.25rem' }}\n                        />\n                    )\n                }\n                case FIELD_DATA_TYPES.EMAIL: {\n                    return (\n                        <LotSimpleRow\n                            key={key}\n                            label={fieldName}\n                            value={value}\n                            isLast={isLast}\n                            labelStyle={{ fontSize: '1.25rem' }}\n                            countStyle={{ fontSize: '1.25rem' }}\n                        />\n                    )\n                }\n                case FIELD_DATA_TYPES.DATE: {\n                    return (\n                        <LotDateRow\n                            key={key}\n                            label={fieldName}\n                            isLast={isLast}\n                            date={value}\n                            labelStyle={{ fontSize: '1.25rem' }}\n                            dateStyle={{ fontSize: '1.25rem' }}\n                        />\n\n                    )\n                }\n                case FIELD_DATA_TYPES.DATE_RANGE: {\n                    return (\n                        <LotDateRangeRow\n                            key={key}\n                            label={fieldName}\n                            isLast={isLast}\n                            dateRange={value}\n                            labelStyle={{ fontSize: '1.25rem' }}\n                            dateStyle={{ fontSize: '1.25rem' }}\n                        />\n                    )\n                }\n                case FIELD_DATA_TYPES.URL: {\n                    return (\n                        <LotSimpleRow\n                            key={key}\n                            label={fieldName}\n                            value={value}\n                            isLast={isLast}\n                            labelStyle={{ fontSize: '1.25rem' }}\n                            countStyle={{ fontSize: '1.25rem' }}\n                        />\n                    )\n                }\n                case FIELD_DATA_TYPES.INTEGER: {\n                    return (\n                        <LotSimpleRow\n                            key={key}\n                            label={fieldName}\n                            isLast={isLast}\n                            value={value}\n                            labelStyle={{ fontSize: '1.25rem' }}\n                            countStyle={{ fontSize: '1.25rem' }}\n                        />\n                    )\n                }\n            }\n        })\n\n    }, [currentLot])\n\n\n    return (\n        <styled.LotFieldsContainer>\n            <LotSimpleRow\n                label={\"Quantity\"}\n                value={`${count}/${totalQuantity}`}\n                labelStyle={{ fontSize: '1.25rem' }}\n                countStyle={{ fontSize: '1.25rem' }}\n            />\n\n            {processName &&\n                <LotSimpleRow\n                    label={\"Process\"}\n                    value={processName}\n                    labelStyle={{ fontSize: '1.25rem' }}\n                    countStyle={{ fontSize: '1.25rem' }}\n                />\n            }\n            {renderLotFields}\n        </styled.LotFieldsContainer>\n    )\n}\n\nexport default DashboardLotFields","import styled from \"styled-components\";\n\n\nexport const ButtonContainer = styled.div`\n\n    width: 95%;\n    max-width: 50rem;\n    align-self: center;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n`\n\nexport const Button = styled.div`\n    max-width: 50rem;\n    width: 100%;\n\n    min-height: 5rem;\n    max-height: 15rem;\n    background-color: ${props => props.color};\n\n    border-radius: .5rem;\n\n    margin: 1rem;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: row;\n\n    box-shadow: ${props => props.theme.cardShadow};\n\n`\n\nexport const ButtonText = styled.p`\n    margin-bottom: 0rem;\n    margin-right: 1rem;\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz2};\n    font-weight: bold;\n\n`\n\nexport const ButtonIcon = styled.i`\n    font-size: ${props => props.theme.fontSize.sz2};\n\n\n`","import React, { useState, useEffect, useContext, useRef, useMemo } from 'react'\n\n\n// Import Styles\nimport * as styled from './dashboard_lot_buttons.style'\nimport { theme } from \"../../../../../../../theme\";\n\n// Import Components\nimport DashboardButton from '../../../dashboard_buttons/dashboard_button/dashboard_button'\nimport DashboardSplitButton from '../../../dashboard_buttons/dashboard_split_button/dashboard_split_button'\n\n// Import Constants\nimport { DEVICE_CONSTANTS } from '../../../../../../../constants/device_constants'\n\n// Renders that buttons at the footer of the dashboard screen\n// IE:\n// Move\n// Scrap\n// Rework\nconst DashboardLotButtons = (props) => {\n\n    const {\n        handleMove,\n        handleCancel,\n        handleScrap,\n        isDeviceRoute,\n        isFinish,\n        handleFinish,\n    } = props\n\n    const renderMoveButton = () => {\n        const iconClassName = 'fas fa-play'\n        const color = '#90eaa8'\n        const textColor = '#1c933c'\n        const iconColor = theme.main.bg.octonary\n\n        const error = null\n        const buttonId = ''\n        if (isDeviceRoute) {\n            return (\n                <DashboardSplitButton\n                    color={color}\n                    containerStyle={{ background: color }}\n                    titleStyle={{ color: textColor }}\n                    iconColor={iconColor}\n\n                    title={'Move'}\n                    iconClassName={iconClassName}\n                    clickable={true}\n                    onClick={(props) => {\n                        handleMove(props)\n                    }}\n                    hoverable={false}\n                    // taskID={taskID}\n                    // disabled={disabled}\n                    // containerCss={style.ButtonContainerCss}\n                    error={error}\n                />\n            )\n        }\n        else {\n            return (\n                <DashboardButton\n                    color={color}\n                    containerStyle={{ background: color }}\n                    titleStyle={{ color: textColor }}\n                    iconColor={iconColor}\n\n                    title={'Move'}\n                    iconColor={\"black\"}\n                    iconClassName={iconClassName}\n                    onClick={() => handleMove(DEVICE_CONSTANTS.HUMAN)}\n\n                    hoverable={false}\n                    // taskID={taskID}\n                    disabled={false}\n                    // containerCss={style.ButtonContainerCss}\n                    error={error}\n                />\n            )\n        }\n    }\n\n    const renderFinishButton = () => {\n        const iconClassName = \"fas fa-flag-checkered\"\n        const color = '#90eaa8'\n        const textColor = '#1c933c'\n\n        return (\n            <DashboardButton\n                title={'Finish'}\n                iconColor={\"black\"}\n                iconClassName={iconClassName}\n                onClick={handleFinish}\n                containerStyle={{ background: color }}\n                hoverable={false}\n                color={color}\n                titleStyle={{ color: textColor }}\n            />\n        )\n    }\n\n    const renderCancelButton = () => {\n        const iconClassName = \"fas fa-times\"\n\n\n        const color = '#ff9898'\n        const textColor = '#ff1818'\n        return (\n            <DashboardButton\n                title={'Cancel'}\n                iconColor={\"black\"}\n                iconClassName={iconClassName}\n                onClick={handleCancel}\n                containerStyle={{ background: color }}\n                hoverable={false}\n                color={color}\n                titleStyle={{ color: textColor }}\n            />\n        )\n    }\n\n\n    return (\n        <styled.ButtonContainer>\n            {isFinish ?\n                renderFinishButton()\n                :\n                renderMoveButton()\n            }\n            {renderCancelButton()}\n        </styled.ButtonContainer>\n    )\n}\n\nexport default DashboardLotButtons","import styled from \"styled-components\";\nimport { FieldArray, Form, Formik } from 'formik'\n\n\nexport const Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    max-width: 50rem;\n\n    height: fit-content;\n    min-height: 10rem;\n\n    background: ${props => props.theme.bg.primary};\n    box-shadow: ${props => props.theme.cardShadow};\n\n    padding: .5rem;\n    border-radius: .5rem;\n\n    align-self: center;\n\n    margin-bottom: 1rem;\n\n`\n\nexport const Title = styled.h3`\n    font-size: 1.25rem;\n    font-weight: 600;\n    margin-right: 0.5rem;\n    color:  ${props => props.theme.bg.septenary};\n    font-family: ${props => props.theme.font.primary};\n`\n\nexport const InputForm = styled(Form)`\n    display: flex;\n    justify-content:center;\n    flex-direction: column;\n`","import React, { useMemo, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { FieldArray, Form, Formik } from 'formik'\n\n// Import Style\nimport * as styled from './dashboard_lot_input_box.style'\n\n// Import Components\nimport TextField from '../../../../../../basic/form/text_field/text_field'\nimport Button from '../../../../../../basic/button/button'\nimport Textbox from '../../../../../../basic/textbox/textbox'\n\n// Import Constants\nimport { FIELD_COMPONENT_NAMES } from \"../../../../../../../constants/lot_contants\"\n\n// Import Utils\nimport { deepCopy } from '../../../../../../../methods/utils/utils'\n\n// Import Actions\nimport { putCard } from '../../../../../../../redux/actions/card_actions'\n\n\nconst DashboardLotInputBox = (props) => {\n\n    const {\n        currentLot,\n    } = props\n\n    useEffect(() => {\n    }, [])\n\n    const dispatch = useDispatch()\n    const dispatchPutCard = async (currentLot, ID) => await dispatch(putCard(currentLot, ID))\n\n\n    // Since fields are nested arrays, you need to reference the location of the field in each array\n    // That is also how the name of the formik component works: inputBox.firstIndex.secondIndex.input\n    const onInitialValues = () => {\n        let initialValues = {}\n        currentLot.fields.forEach((field, ind1) => {\n            field.forEach((subField, ind2) => {\n                if (subField?.component === FIELD_COMPONENT_NAMES.INPUT_BOX) {\n                    initialValues = {\n                        ...initialValues,\n                        [ind1]: {\n                            ...initialValues.ind1,\n                            [ind2]: { input: subField.value }\n                        }\n                    }\n                }\n            })\n        })\n\n        initialValues = { inputBox: initialValues }\n\n        return initialValues\n    }\n\n    const onSave = (values) => {\n        let lotCopy = deepCopy(currentLot)\n        const fieldValues = values.inputBox\n        Object.keys(fieldValues).forEach((ind1) => {\n            const subFieldValues = fieldValues[ind1]\n            Object.keys(subFieldValues).forEach((ind2) => {\n                const inputValue = subFieldValues[ind2].input\n                lotCopy.fields[ind1][ind2].value = inputValue\n            })\n        })\n        dispatchPutCard(lotCopy, lotCopy._id)\n    }\n\n\n    const renderLotInputBoxes = () => {\n\n        return currentLot.fields.map((field, ind1) => {\n            return field.map((subField, ind2) => {\n                if (subField?.component === FIELD_COMPONENT_NAMES.INPUT_BOX) {\n\n                    return (\n                        <styled.Container key={`${ind1}.container.${ind2}`}>\n                            <styled.Title>{subField.fieldName}</styled.Title>\n                            <TextField\n                                name={`inputBox.${ind1}.${ind2}.input`}\n                                InputComponent={Textbox}\n                                lines={5}\n                                placeholder='Schedule Name'\n\n                            />\n                            <Button\n                                schema={'dashboards'}\n                                type={'submit'}\n                                style={{width:'10rem', alignSelf:'center', marginTop:'.5rem'}}\n                            >\n                                Save\n                            </Button>\n                        </styled.Container>\n                    )\n                }\n            })\n        })\n    }\n\n    return (\n        <Formik\n            onSubmit={values => {\n                onSave(values)\n            }}\n            initialValues={\n                onInitialValues()\n            }\n        >\n            <styled.InputForm>\n                <FieldArray\n                    name={'inputBox'}\n                    // validateOnChange={true}\n                    render={arrayHelpers => (\n                        <>\n                            {renderLotInputBoxes()}\n                        </>\n                    )\n\n                    }\n                />\n            </styled.InputForm>\n        </Formik>\n    )\n\n}\n\nexport default DashboardLotInputBox","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useParams, useHistory } from 'react-router-dom'\n\n// Import styles\nimport * as styled from './dashboard_lot_page.style'\n\n// Import Basic Components\n\n// Import Components\nimport DashboardLotFields from './dashboard_lot_fields/dashboard_lot_fields'\nimport DashboardLotButtons from './dashboard_lot_buttons/dashboard_lot_buttons'\nimport QuantityModal from '../../../../../basic/modals/quantity_modal/quantity_modal'\nimport LotFlags from '../../../../../side_bar/content/cards/lot/lot_flags/lot_flags'\nimport DashboardLotInputBox from './dashboard_lot_input_box/dashboard_lot_input_box'\n\n// constants\nimport { ADD_TASK_ALERT_TYPE, PAGES } from \"../../../../../../constants/dashboard_constants\";\nimport { DEVICE_CONSTANTS } from \"../../../../../../constants/device_constants\";\nimport { FIELD_COMPONENT_NAMES } from \"../../../../../../constants/lot_contants\"\nimport { CUSTOM_TASK_ID } from \"../../../../../../constants/route_constants\";\n\n// Import Utils\nimport { getBinQuantity, getCurrentRouteForLot, getPreviousRouteForLot } from '../../../../../../methods/utils/lot_utils'\nimport { isDeviceConnected } from \"../../../../../../methods/utils/device_utils\";\nimport { isRouteInQueue } from \"../../../../../../methods/utils/task_queue_utils\";\nimport { getProcessStations } from '../../../../../../methods/utils/processes_utils'\nimport { quantityOneSchema } from \"../../../../../../methods/utils/form_schemas\";\nimport { deepCopy } from '../../../../../../methods/utils/utils'\n\n// Import Actions\nimport { handlePostTaskQueue, putTaskQueue } from '../../../../../../redux/actions/task_queue_actions'\nimport { isObject } from \"../../../../../../methods/utils/object_utils\";\nimport { putCard, getCards } from '../../../../../../redux/actions/card_actions'\n\nconst DashboardLotPage = (props) => {\n\n    const {\n        handleTaskAlert,\n    } = props\n\n    const tasks = useSelector(state => state.tasksReducer.tasks)\n    const cards = useSelector(state => state.cardsReducer.cards)\n    const taskQueue = useSelector(state => state.taskQueueReducer.taskQueue)\n    const routes = useSelector(state => state.tasksReducer.tasks)\n    const processes = useSelector(state => state.processesReducer.processes)\n\n    const params = useParams()\n    const history = useHistory()\n    const dispatch = useDispatch()\n\n    const {\n        stationID,\n        dashboardID,\n        subPage,\n        lotID,\n        warehouse,\n    } = params || {}\n\n    // Have to use Sate for current lot because when the history is pushed, the current lot goes to undefined\n    // but dashboard lot page is still mounted\n    const [currentLot, setCurrentLot] = useState(cards[lotID])\n    const [currentTask, setCurrentTask] = useState(null)\n    const [isFinish, setIsFinish] = useState(false)\n    const [showFinish, setShowFinish] = useState(false)\n    const [lotContainsInput, setLotContainsInput] = useState(false)\n\n    const onPutCard = async (currentLot, ID) => await dispatch(putCard(currentLot, ID))\n    const dispatchPostTaskQueue = (props) => dispatch(handlePostTaskQueue(props))\n    const disptachPutTaskQueue = async (item, id) => await dispatch(putTaskQueue(item, id))\n    const dispatchGetCards = () => dispatch(getCards())\n\n\n\n    // Used to show dashboard input\n    useEffect(() => {\n        let containsInput = false\n        currentLot.fields.forEach((field) => {\n            field.forEach((subField) => {\n                if (subField?.component === FIELD_COMPONENT_NAMES.INPUT_BOX) {\n                    containsInput = true\n                }\n            })\n        })\n\n        setLotContainsInput(containsInput)\n    }, [currentLot])\n\n    useEffect(() => {\n        if (lotID) {\n            const lot = cards[lotID]\n            setCurrentLot(lot)\n            const processStations = Object.keys(getProcessStations(processes[currentLot.process_id], routes))\n\n            // If its the last station in the process, then the only option is to finish the lot\n            if (processStations[processStations.length - 1] === stationID && !warehouse) {\n                setIsFinish(true)\n            }\n            // If the URL has warehouse, then the task is the previous route (the route that goes from warehouse to current station)\n            else if (!!warehouse) {\n                const returnedRoute = getPreviousRouteForLot(currentLot, stationID)\n                setCurrentTask(returnedRoute)\n            }\n            else {\n                const returnedRoute = getCurrentRouteForLot(currentLot, stationID)\n                setCurrentTask(returnedRoute)\n            }\n\n            // go back if lot has no items at this station (ex. just moved them all). \n            // Dont go back though if the prevStation was a warehouse\n            // Doesn't make sense to stay on this screen\n            if (isObject(lot) && isObject(lot?.bins)) {\n                const quantity = getBinQuantity(lot, stationID)\n                if ((!quantity || (quantity <= 0)) && !warehouse) {\n                    onBack()\n                }\n            }\n        }\n\n        return () => {\n\n        }\n    }, [lotID, cards])\n\n\n    const onBack = () => {\n        history.push(`/locations/${stationID}/dashboards/${dashboardID}`)\n    }\n\n    // Handles moving lot to next station\n    const onMove = (deviceType) => {\n        const {\n            name,\n            custom,\n        } = currentTask || {}\n\n        const Id = currentTask._id\n\n        // If a custom task then add custom task key to task q\n        if (Id === 'custom_task') {\n            handleTaskAlert(\n                ADD_TASK_ALERT_TYPE.TASK_ADDED,\n                \"Task Added to Queue\",\n                name\n            )\n        }\n\n        const connectedDeviceExists = isDeviceConnected()\n\n        if (!connectedDeviceExists && deviceType !== DEVICE_CONSTANTS.HUMAN) {\n            // display alert notifying user that task is already in queue\n            handleTaskAlert(\n                ADD_TASK_ALERT_TYPE.TASK_EXISTS,\n                \"Alert! No device is currently connected to run this route\",\n                `'${name}' not added`,\n            )\n        }\n\n        let inQueue = isRouteInQueue(Id, deviceType)\n\n        // add alert to notify task has been added\n        if (inQueue) {\n            // display alert notifying user that task is already in queue\n            handleTaskAlert(\n                ADD_TASK_ALERT_TYPE.TASK_EXISTS,\n                \"Alert! Task Already in Queue\",\n                `'${name}' not added`,\n            )\n\n        }\n        else {\n            dispatchPostTaskQueue({ dashboardID, tasks, deviceType, taskQueue, lotID, Id, name, custom })\n\n            if (deviceType !== DEVICE_CONSTANTS.HUMAN) {\n                handleTaskAlert(\n                    ADD_TASK_ALERT_TYPE.TASK_ADDED,\n                    \"Task Added to Queue\",\n                    name\n                )\n            }\n        }\n\n    }\n\n    const renderFinishQuantity = () => {\n        const lotCount = currentLot?.bins[stationID]?.count\n\n        return (\n            <QuantityModal\n                validationSchema={quantityOneSchema}\n                maxValue={lotCount}\n                minValue={1}\n                infoText={`${lotCount} items available.`}\n                isOpen={true}\n                title={\"Select Quantity\"}\n                onRequestClose={() => setShowFinish(false)}\n                onCloseButtonClick={() => setShowFinish(false)}\n                handleOnClick2={(quantity) => {\n                    setShowFinish(false)\n                    onFinish(quantity)\n                }}\n                handleOnClick1={() => {\n                    setShowFinish(false)\n                }}\n                button_2_text={\"Confirm\"}\n                button_1_text={\"Cancel\"}\n            />\n        )\n    }\n\n    const onFinish = async (quantity) => {\n\n        let requestSuccessStatus = false\n        let message\n\n        // extract lot attributes\n        const {\n            name: cardName,\n            _id: lotId,\n        } = currentLot\n\n        if (quantity && quantity > 0) {\n\n            // moving lot is handled through custom task\n            const custom = {\n                load: {\n                    station: stationID,\n                    instructions: \"\",\n                    position: null,\n                    sound: null,\n                },\n                unload: {\n                    station: \"FINISH\",\n                    instructions: \"\",\n                    position: null,\n                    sound: null,\n                },\n                handoff: true,\n                hil_response: null,\n                quantity: 1\n            }\n\n            // first, post task queue\n            const result = await dispatchPostTaskQueue({ hil_response: null, tasks, deviceType: DEVICE_CONSTANTS.HUMAN, taskQueue, Id: CUSTOM_TASK_ID, custom })\n\n            // check if request was successful\n            if (!(result instanceof Error)) {\n\n                const {\n                    _id,\n                    dashboardID,\n                    dashboard,\n                    ...rest\n                } = result || {}\n\n                // now must update task queue item to move the lot\n                setTimeout(async () => {\n\n                    await disptachPutTaskQueue(\n                        {\n                            ...rest,\n                            hil_response: true,\n                            lot_id: lotId,\n                            quantity\n                        }\n                        , result._id)\n                    await dispatchGetCards()\n                }, 1000)\n\n                requestSuccessStatus = true\n                message = cardName ? `Finished ${quantity} ${quantity > 1 ? \"items\" : \"item\"} from '${cardName}'` : `Finished ${quantity} ${quantity > 1 ? \"items\" : \"item\"}`\n                handleTaskAlert(\n                    ADD_TASK_ALERT_TYPE.FINISH_SUCCESS,\n                    \"Lot Finished\",\n                    message\n                )\n            }\n        }\n\n        else {\n            message = \"Quantity must be greater than 0\"\n            handleTaskAlert(\n                ADD_TASK_ALERT_TYPE.FINISH_FAILURE,\n                \"Lot Failed\",\n                message\n            )\n        }\n    }\n\n    return (\n        <styled.LotContainer>\n            <styled.LotBodyContainer>\n                <styled.LotHeader>\n                    <styled.LotTitle>{currentLot?.name}</styled.LotTitle>\n                </styled.LotHeader>\n                <LotFlags flags={currentLot?.flags} containerStyle={{ alignSelf: 'center' }} />\n\n                <DashboardLotFields\n                    currentLot={currentLot}\n                    stationID={stationID}\n                    warehouse={!!warehouse}\n                />\n                {!!lotContainsInput &&\n                    <DashboardLotInputBox\n                        currentLot={currentLot}\n                    />\n                }\n            </styled.LotBodyContainer>\n            <styled.LotButtonContainer>\n                <DashboardLotButtons\n                    handleMove={(type) => onMove(type)}\n                    handleCancel={() => onBack()}\n                    isDeviceRoute={currentTask?.device_types?.length > 1}\n                    isFinish={isFinish}\n                    handleFinish={() => setShowFinish(true)}\n                    route={currentTask}\n                />\n            </styled.LotButtonContainer>\n            {showFinish &&\n                renderFinishQuantity()\n            }\n        </styled.LotContainer>\n    )\n\n}\n\nexport default DashboardLotPage","import styled, { css } from 'styled-components'\n// import Modal from 'react-modal';\nimport { isMobile } from \"react-device-detect\"\nimport { ModalContainerCSS, BodyContainerCSS } from '../../../../../../common_css/modal_css'\nimport * as commonCss from \"../../../../../../common_css/common_css\";\nimport {commonClickableIcon, iconButtonCss} from \"../../../../../../common_css/common_css\";\n\nexport const Container = styled(ModalContainerCSS)`\n  width: 95%;\n  height: 95%;\n    //justify-content: space-between;\n`\n\nexport const CloseIcon = styled.i`\n    font-size: 1.4rem;\n    margin: 1rem;\n    color: ${props => props.theme.bg.quaternary};\n    cursor: pointer;\n`\n\nexport const LotListContainer = styled.div`\n    ${commonCss.rowContainer};\n    //flex: 1;\n    \n    justify-content: center;\n    \n    overflow-y: auto;\n    overflow-x: hidden;\n    flex-wrap: wrap;\n    position: relative;\n    //padding: 1rem;\n    width: 100%;\n  align-items: stretch;\n    //background: background: rgba(0,0,255,0.1);\n    \n`\n\nexport const HeaderMainContentContainer = styled.div`\n\tdisplay: flex;\n  \tflex-direction: row;\n\tjustify-content: space-between;\n  align-items: center;\n  flex: 1;\n`\n\n// export const BackButton = styled.button`\n//   ${iconButtonCss};\n//     ${commonClickableIcon};\n//     font-s\n// `\n\nexport const Header = styled.div`\n  display: flex;\n    position: relative;\n  //justify-content: space-between;\n  //flex-direction: column;\n  align-items: center;\n  align-content: center;\n  margin: 0;\n  padding: .5rem 1rem;\n  background: ${props => props.theme.bg.primary};\n  box-shadow: 0px 0px 6px 1px rgba(0,0,0,0.2);\n    border-bottom: 1px solid ${props => props.theme.bg.quaternary};\n`\n\nexport const Footer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  //align-items: stretch;\n  align-content: center;\n    align-self: stretch;\n    align-items: center;\n    \n  //margin: 0;\n    border-top: 1px solid ${props => props.theme.bg.quaternary};\n  padding: .5rem 1rem;\n  //  width: 100%;\n  //  height: 20rem;\n  background: ${props => props.theme.bg.primary};\n  //box-shadow: 0px 0px 6px 1px rgba(0,0,0,0.2);\n`\n\nexport const Title = styled.h2`\n  margin: 0;\n  padding: 0;\n  text-align: center;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  font-size: ${props => props.theme.fontSize.sz2};\n  font-weight: ${props => props.theme.fontWeight.bold};\n  margin-bottom: 1rem;\n`;\n\nexport const SubTitle = styled.h3`\n  margin: 0;\n  padding: 0;\n  text-align: center;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  font-size: ${props => props.theme.fontSize.sz2};\n  //margin-bottom: 1rem;\n`;\n\nexport const BodyContainer = styled(BodyContainerCSS)`\n//background: rgba(0,255,0,0.1);\n    position: relative;\n    padding: 0;\n    overflow:hidden;\n    justify-content: flex-start;\n    align-items: center;\n    align-self: stretch;\n    \n    flex: 1;\n`\n\nexport const ButtonsContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: center;\n\tmin-height: fit-content;\n`;\n\nexport const Column = styled.div`\n    display: flex;\n    flex-direction: column;\n`\n\nexport const CloseButton = styled.button`\n  ${iconButtonCss};\n  ${commonClickableIcon};\n  font-size: 2.5rem;\n    position: absolute;\n    right: 1rem;\n    //right: 0;\n`\n\nexport const ContentContainer = styled.div`\n\tbackground: ${props => props.theme.bg.secondary};\n\tborder-radius: 0rem;\n\tdisplay: flex;\n\tflex-direction: column;\n\toverflow: hidden;\n\tmargin-bottom: 1rem;\n\talign-items: center;\n  justify-content: center;\n`\n\nexport const NoButtonsText = styled.span`\n\tfont: ${props => props.theme.font.primary};\n\tfont-size: ${props => props.theme.fontSize.sz3};\n`\n\nexport const FadeLoaderCSS = css`\n \n`;\n\nexport const ReportButtonsContainer = styled.div`\n\talign-items: center;\n\toverflow: auto;\n\tmin-height: 5rem;\n\twidth: 100%;\n  \n  ${props => props.isButtons ? buttonsCss : noButtonsCss}\n`\n\nconst buttonsCss = css`\n`\n\nconst noButtonsCss = css`\n  overflow: auto;\n\tdisplay: flex;\n  flex-drection: column;\n  justify-content: center;\n`\n\n\n\n","import React, {useEffect, useRef} from 'react';\nimport PropTypes from 'prop-types';\n\nconst BoxWrapper = (props) => {\n\n\tconst {\n\t\tchildren,\n\t\tsizeCb,\n\t\tcontainerStyle\n\t} = props\n\n\tconst boxRef = useRef(null)\n\n\tconst {\n\t\toffsetHeight,\n\t\toffsetLeft,\n\t\toffsetTop,\n\t\toffsetWidth\n\t} = boxRef?.current || {}\n\n\n\tuseEffect(() => {\n\t\tlet x, y, width, height\n\n\t\tif(boxRef?.current) {\n\t\t\tconst {x: x2, y:y2, width:width2, height:height2} = boxRef?.current.getBoundingClientRect()\n\n\t\t\tx=x2\n\t\t\ty=y2\n\t\t\theight=height2\n\t\t\twidth=width2\n\t\t}\n\t\tsizeCb({offsetHeight: height, offsetLeft: x, offsetTop: y, offsetWidth: width})\n\n\t\treturn () => {};\n\t}, [offsetHeight, offsetLeft, offsetTop, offsetWidth]);\n\n\treturn (\n\t\t<div ref={boxRef} style={containerStyle}>\n\t\t\t{children}\n\t\t</div>\n\t);\n};\n\nBoxWrapper.propTypes = {\n\tsizeCb: PropTypes.func\n};\n\nBoxWrapper.defaultProps = {\n\tsizeCb: () => null\n};\n\nexport default BoxWrapper;\n","import styled, { css } from 'styled-components'\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n  align-items: center;\n  align-self: stretch;\n  flex: 1;\n  \n`\n\nexport const Column = styled.div`\n\tdisplay: flex;\n  align-self: stretch;\n  flex-direction: column;\n  align-items: center;\n  \n`\n","import React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport LotContainer from \"../../../../../../side_bar/content/cards/lot/lot_container\";\nimport {FINISH_BIN_ID} from \"../../../../../../../constants/lot_contants\";\nimport NumberField from \"../../../../../../basic/form/number_field/number_field\";\nimport {Formik} from \"formik\";\nimport * as styled from './select_lot_quantity.style'\nimport {getBinQuantity} from \"../../../../../../../methods/utils/lot_utils\";\nimport Button from \"../../../../../../basic/button/button\";\nimport PageSelector from \"../../../../../../basic/page_selector/page_selector\";\nimport {selectLotQuantitySchema} from \"../../../../../../../methods/utils/form_schemas\";\n\nimport * as sharedStyles from '../merge_modal.style'\nimport {isEmpty} from \"../../../../../../../methods/utils/object_utils\";\n\nconst SelectLotQuantity = (props) => {\n\n\tconst {\n\t\tselectedLots,\n\t\tstationId,\n\t\tonSubmit,\n\t\tinitialIndex,\n\t\tinitialValues\n\t} = props\n\n\tconst formRef = useRef(null)\n\tconst {\n\t\tsubmitForm,\n\t\terrors,\n\t\tsetFieldValue\n\t} = formRef?.current || {}\n\n\tconst [currentLotIndex, setCurrentLotIndex] = useState(initialIndex ? initialIndex : 0)\n\tconst [currentLot, setCurrentLot] = useState({})\n\tconst [maxQuantity, setMaxQuantity] = useState(0)\n\n\tuseEffect(() => {\n\t\tlet tempCurrentLot = selectedLots[currentLotIndex]\n\t\tsetCurrentLot(tempCurrentLot)\n\n\t\tsetMaxQuantity(getBinQuantity(tempCurrentLot, stationId))\n\t\treturn () => {};\n\t}, [selectedLots, currentLotIndex]);\n\n\treturn (\n\t\t<Formik\n\t\t\tinnerRef={formRef}\n\t\t\tinitialValues={{\n\t\t\t\titems: selectedLots.map(lot => {\n\t\t\t\t\tconst initialOption = initialValues.find(item => item.lotId === lot._id)\n\t\t\t\t\tconst quantity = initialOption?.quantity || 0\n\t\t\t\t\treturn {lotId: lot._id, quantity: quantity}\n\t\t\t\t})\n\t\t\t}}\n\t\t\tvalidationSchema={selectLotQuantitySchema}\n\t\t\tonSubmit={(values, formikHelpers) => {\n\t\t\t\tonSubmit(values.items)\n\t\t\t}}\n\t\t>\n\t\t\t<styled.Container>\n\t\t\t\t<styled.Column>\n\t\t\t\t\t<LotContainer\n\t\t\t\t\t\tlotId={currentLot?._id}\n\t\t\t\t\t\tbinId={stationId}\n\t\t\t\t\t\tenableFlagSelector={false}\n\t\t\t\t\t\tcontainerStyle={{marginBottom: '1rem'}}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tconst maxQuanttiy = getBinQuantity(currentLot, stationId)\n\t\t\t\t\t\t\tsetFieldValue(`items[${currentLotIndex}].quantity`, maxQuanttiy)\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<NumberField\n\t\t\t\t\t\tname={`items[${currentLotIndex}].quantity`}\n\t\t\t\t\t\tmaxValue={maxQuantity}\n\t\t\t\t\t/>\n\t\t\t\t</styled.Column>\n\n\t\t\t\t<sharedStyles.Footer>\n\t\t\t\t{/*<styled.Column>*/}\n\t\t\t\t\t<Button\n\t\t\t\t\t\tdisabled={!isEmpty(errors)}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t submitForm()\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tlabel={'Review'}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<PageSelector\n\t\t\t\t\t\tvalue={currentLotIndex + 1}\n\t\t\t\t\t\tonBack={() => {\n\t\t\t\t\t\t\tif(currentLotIndex > 0) setCurrentLotIndex(currentLotIndex - 1)\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonForward={() => {\n\t\t\t\t\t\t\tif(currentLotIndex < selectedLots.length - 1) setCurrentLotIndex(currentLotIndex + 1)\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tmaxValue={selectedLots.length}\n\t\t\t\t\t/>\n\t\t\t\t{/*</styled.Column>*/}\n\t\t\t\t</sharedStyles.Footer>\n\t\t\t</styled.Container>\n\t\t</Formik>\n\t);\n};\n\nSelectLotQuantity.propTypes = {\n\n};\n\nSelectLotQuantity.defaultProps = {\n\n};\n\nexport default SelectLotQuantity;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport LotContainer from \"../../../../../../side_bar/content/cards/lot/lot_container\";\nimport {FINISH_BIN_ID} from \"../../../../../../../constants/lot_contants\";\nimport Button from \"../../../../../../basic/button/button\";\n\nimport * as styled from './merge_review.style'\nimport * as sharedStyles from '../merge_modal.style'\nconst MergeReview = props => {\n\n\tconst {\n\t\tquantityOptions,\n\t\tonOptionClick,\n\t\tonNext\n\t} = props\n\n\tconst renderOptions = () => {\n\t\treturn quantityOptions.map((option, index) => {\n\n\t\t\tconst {\n\t\t\t\tlotId,\n\t\t\t\tquantity\n\t\t\t} = option\n\n\t\t\treturn(\n\t\t\t\t<LotContainer\n\t\t\t\t\t// showCustomFields={false}\n\t\t\t\t\tlotId={lotId}\n\t\t\t\t\tprocessName={null}\n\t\t\t\t\tquantity={quantity}\n\t\t\t\t\tenableFlagSelector={false}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tonOptionClick(index)\n\t\t\t\t\t}}\n\t\t\t\t\tcontainerStyle={{\n\t\t\t\t\t\tmargin: \".5rem\", alignSelf: 'stretch', height: 'auto',\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t)\n\t\t})\n\t}\n\treturn (\n\t\t<>\n\t\t<sharedStyles.BodyContainer>\n\t\t\t<sharedStyles.LotListContainer>\n\t\t\t\t{renderOptions()}\n\t\t\t</sharedStyles.LotListContainer>\n\n\t\t</sharedStyles.BodyContainer>\n\t\t\t<sharedStyles.Footer>\n\t\t\t\t<Button\n\t\t\t\t\tlabel={'Create New Lot'}\n\t\t\t\t\tonClick={onNext}\n\t\t\t\t/>\n\t\t\t</sharedStyles.Footer>\n\t\t</>\n\t);\n};\n\nMergeReview.propTypes = {\n\n};\n\nMergeReview.defaultProps = {\n\tquantityOptions: [],\n\tonOptionClick: () => {}\n};\n\nexport default MergeReview;\n","import styled, { css } from 'styled-components'\n\nexport const Title = styled.h3`\n\tfont-size: ${props => props.theme.fontSize.sz3};\n`","import React, {useCallback, useEffect, useState} from \"react\";\n\n// external components\nimport Modal from 'react-modal';\nimport {useDispatch, useSelector} from \"react-redux\";\n\n// internal components\nimport Button from \"../../../../../basic/button/button\";\nimport DashboardButton from \"../../dashboard_buttons/dashboard_button/dashboard_button\";\n\n// actions\nimport {getCards, getProcessCards, putCard} from \"../../../../../../redux/actions/card_actions\";\n\n// styles\nimport * as styled from './merge_modal.style'\nimport {FINISH_BIN_ID, LOT_FILTER_OPTIONS, SORT_DIRECTIONS} from \"../../../../../../constants/lot_contants\";\nimport LotEditorContainer from \"../../../../../side_bar/content/cards/editors/card_editor/lot_editor_container\";\nimport LotContainer from \"../../../../../side_bar/content/cards/lot/lot_container\";\nimport BoxWrapper from \"../../../../../basic/box_wrapper/box_wrapper\";\nimport {immutableDelete, immutableInsert, immutableReplace} from \"../../../../../../methods/utils/array_utils\";\nimport SelectLotQuantity from \"./select_lot_quantity/select_lot_quantity\";\nimport MergeReview from \"./merge_review/merge_review\";\nimport LotEditor from \"../../../../../side_bar/content/cards/editors/card_editor/lot_editor\";\nimport BackButton from \"../../../../../basic/back_button/back_button\";\nimport {isShift} from \"../../../../../../methods/utils/event_utils\";\nimport useScrollInfo from \"../../../../../../hooks/useScrollInfo\";\nimport {moveLot} from \"../../../../../../methods/utils/lot_utils\";\n\n// Modal.setAppElement('body');\n\nconst CONTENT_OPTIONS = {\n    SELECTING_LOTS: 'SELECTING_LOTS',\n    SELECTING_LOT_QUANTITIES: 'SELECTING_LOT_QUANTITIES',\n    REVIEW: 'REVIEW',\n    CREATE_NEW_LOT: 'CREATE_NEW_LOT',\n}\n\nconst MergeModal = (props) => {\n\n    const {\n        stationId,\n        dashboardId,\n        close,\n    } = props\n\n    const dispatch = useDispatch()\n    const dispatchPutCard = async (card, ID) => await dispatch(putCard(card, ID))\n\n    const availableFinishProcesses = useSelector(state => { return state.dashboardsReducer.finishEnabledDashboards[dashboardId] })\n    const availableKickOffProcesses = useSelector(state => { return state.dashboardsReducer.kickOffEnabledDashboards[dashboardId] })\n    const processCards = useSelector(state => { return state.cardsReducer.processCards })\n    const cards = useSelector(state => { return state.cardsReducer.cards }) || {}\n\n    const [scrollInfo, setRef] = useScrollInfo()\n    const [availableLots, setAvailableLots] = useState([])\n    const [lotPositions, setLotPositions] = useState([])\n    const [selectedLots, setSelectedLots] = useState([])\n    const [content, setContent] = useState(CONTENT_OPTIONS.SELECTING_LOTS)\n    const [quantityOptions, setQuantityOptions] = useState([])\n    const [optionsInitialIndex, setOptionsInitialIndex] = useState(0)\n    const [subTitle, setSubTitle] = useState('')\n    const [shift, setShift] = useState(false)\n\n    useEffect(() => {\n\n        let tempAvailableCards = []\n        availableFinishProcesses.forEach((finishProcessId) => {\n            const currentCards = processCards[finishProcessId] || {}\n            // console.log('currentCards',currentCards)\n            const finishedCards = Object.values(currentCards).filter((card) => card?.bins[stationId]?.count > 0)\n            tempAvailableCards = tempAvailableCards.concat(finishedCards)\n\n        })\n\n        setAvailableLots(tempAvailableCards)\n\n        return () => {\n        };\n    }, [availableFinishProcesses]);\n\n    const  rectanglesIntersect = ({minX: minAx, minY: minAy, maxX: maxAx, maxY: maxAy}, {minX: minBx, minY: minBy, maxX: maxBx, maxY: maxBy} ) => {\n         const aLeftOfB = maxAx < minBx;\n         const aRightOfB = minAx > maxBx;\n         const aAboveB = minAy > maxBy;\n         const aBelowB = maxAy < minBy;\n\n        return !( aLeftOfB || aRightOfB || aAboveB || aBelowB );\n    }\n\n    const handleSelectionChange = useCallback((box) => {\n        const {\n            height,\n            left,\n            top,\n            width,\n        } = box || {}\n\n        const reformattedBox = {\n            minX: left,\n            minY: top + parseInt(scrollInfo?.y?.value),\n            maxX: left + width,\n            maxY: top + height + parseInt(scrollInfo?.y?.value)\n        }\n\n        let tempSelected = []\n        let firstIsAdd = false\n        lotPositions.forEach(((currPosition, currIndex) => {\n            const {offsetHeight, offsetLeft, offsetTop, offsetWidth} = currPosition || {}\n\n            const reformattedPosition = {\n                minX: offsetLeft,\n                minY: offsetTop,\n                maxX: offsetLeft + offsetWidth,\n                maxY: offsetTop + offsetHeight\n            }\n\n\n            if(rectanglesIntersect(reformattedBox, reformattedPosition)) {\n                let itemIndex = selectedLots.indexOf(currIndex)\n                if(itemIndex !== -1 && currIndex === 0) {\n\n                }\n                else {\n\n                }\n                tempSelected.push(currIndex)\n            }\n        }))\n\n\n        if(shift) {\n\n        }\n        setSelectedLots(prevState => {\n            // if(shift) {\n                return [...prevState.filter(item => tempSelected.indexOf(item) === -1), ...tempSelected]\n            // }\n            // else {\n            //     return tempSelected\n            // }\n        })\n    },[lotPositions, shift, scrollInfo, scrollInfo?.y?.value])\n\n\n    // const { DragSelection } = useCallback(\n    //     useSelectionContainer({\n    //         onSelectionChange: handleSelectionChange,\n    //         onSelectionEnd: (ayo) => {\n    //             console.log('ayo',ayo)\n    //         },\n    //         onSelectionStart: (stuff) => {\n    //             console.log('stuff',stuff)\n    //         },\n    //         selectionProps: {\n    //             style: {\n    //                 border: 'none',\n    //                 borderRadius: 4,\n    //                 backgroundColor: 'red',\n    //                 opacity: 0.5,\n    //                 zIndex: 2000\n    //             },\n    //         }\n    //         // isEnabled,\n    //         // selectionProps,\n    //         // eventsElement,\n    //\n    //     })\n    //     , [])\n\n    // useEffect(() => {\n    //     console.log('DragSelection',DragSelection)\n    //     return () => {\n    //     };\n    // }, [DragSelection]);\n\n    useEffect(() => {\n        switch(content) {\n            case CONTENT_OPTIONS.SELECTING_LOTS: {\n                setSubTitle('Select Lots to Merge')\n                break\n            }\n            case CONTENT_OPTIONS.SELECTING_LOT_QUANTITIES: {\n                setSubTitle('Select Lot Quantities')\n                break\n            }\n            case CONTENT_OPTIONS.REVIEW: {\n                setSubTitle('Review')\n                break\n            }\n            case CONTENT_OPTIONS.CREATE_NEW_LOT: {\n                setSubTitle('Create New Low')\n                break\n            }\n            default: {\n                setSubTitle('')\n                break\n            }\n\n        }\n\n        return () => {};\n    }, [content]);\n\n    const onShift = useCallback((e) => {\n        if(isShift(e)) {\n            setShift(true)\n        }\n        else {\n            setShift(false)\n        }\n\n    }, [])\n\n    useEffect(() => {\n        document.addEventListener(\"mousemove\", onShift);\n\n        // on dismount remove the event pasteListener\n        return () => {\n            document.removeEventListener(\"mousemove\", onShift);\n        };\n    }, [])\n\n\n\n\n\n\n    const handleResize = ({offsetHeight, offsetLeft, offsetTop, offsetWidth}, index) => {\n        setLotPositions((prev) => immutableReplace(prev, {offsetHeight, offsetLeft, offsetTop, offsetWidth}, index))\n    }\n\n    const renderLots = () => {\n        return availableLots.map((lot, ind) => {\n\n            const {\n                _id: lotId,\n            } = lot || {}\n\n            return (\n                <BoxWrapper\n                    containerStyle={{\n                        display: 'flex',\n                        // margin: \".5rem\",\n                        alignSelf: 'stretch',\n                        height: 'auto',\n                        // background: 'rgba(255,0,0,0.2)',\n                        width: '30rem'\n                    }}\n                    sizeCb={(args) => handleResize(args, ind)}\n                >\n                    <LotContainer\n                        selectable={selectedLots.length > 0}\n                        isSelected={selectedLots.includes(ind)}\n                        lotId={lotId}\n                        onClick={() => {\n                            const itemIndex = selectedLots.indexOf(ind)\n                            let updated\n                            if(itemIndex !== -1) {\n                                updated = immutableDelete(selectedLots, itemIndex)\n                            }\n                            else {\n                                updated = immutableInsert(selectedLots, ind, selectedLots.length)\n                            }\n                            setSelectedLots(updated)\n                        }}\n                        binId={stationId}\n                        enableFlagSelector={false}\n                        containerStyle={{\n                            margin: \".5rem\", alignSelf: 'stretch', height: 'auto', width: '100%'\n                        }}\n                    />\n                </BoxWrapper>\n            )\n        })\n    }\n\n    return (\n        <styled.Container\n            isOpen={true}\n            contentLabel=\"Kick Off Modal\"\n            onRequestClose={close}\n            style={{\n                overlay: {\n                    zIndex: 500,\n                    backgroundColor: 'rgba(0, 0, 0, 0.4)'\n                },\n            }}\n        >\n            <styled.Header>\n                {content !== CONTENT_OPTIONS.SELECTING_LOTS &&\n\n                <BackButton\n                    containerStyle={{\n                        position: 'absolute',\n                        margin: 0,\n                        padding: 0\n                    }}\n                    onClick={() => {\n                        switch(content) {\n                            case CONTENT_OPTIONS.SELECTING_LOTS: {\n                                break\n                            }\n                            case CONTENT_OPTIONS.SELECTING_LOT_QUANTITIES: {\n                                setContent(CONTENT_OPTIONS.SELECTING_LOTS)\n                                break\n                            }\n                            case CONTENT_OPTIONS.REVIEW: {\n                                setContent(CONTENT_OPTIONS.SELECTING_LOT_QUANTITIES)\n                                break\n                            }\n                            case CONTENT_OPTIONS.CREATE_NEW_LOT: {\n                                break\n                            }\n                            default: {\n                                break\n                            }\n\n                        }\n                    }}\n                />\n                }\n\n                <styled.Column style={{margin: 'auto'}}>\n                    <styled.Title>Merge Lots</styled.Title>\n                    <styled.SubTitle>{subTitle}</styled.SubTitle>\n                </styled.Column>\n\n                <styled.CloseButton\n                    className={'fas fa-times'}\n                    color={'red'}\n                    onClick={close}\n                />\n\n            </styled.Header>\n\n            <styled.BodyContainer>\n                {\n                    {\n                        [CONTENT_OPTIONS.SELECTING_LOTS]:\n                            <>\n                                {/*<DragSelection/>*/}\n                                <styled.LotListContainer\n                                    ref={setRef}\n                                >\n                                    {renderLots()}\n                                </styled.LotListContainer>\n                            </>,\n                        [CONTENT_OPTIONS.SELECTING_LOT_QUANTITIES]:\n                            <SelectLotQuantity\n                                stationId={stationId}\n                                initialValues={quantityOptions}\n                                initialIndex={optionsInitialIndex}\n                                selectedLots={selectedLots.map(lotIndex => availableLots[lotIndex])}\n                                onSubmit={(values) => {\n                                    setOptionsInitialIndex(0)\n                                    setContent(CONTENT_OPTIONS.REVIEW)\n                                    setQuantityOptions(values)\n                                }}\n                            />,\n                        [CONTENT_OPTIONS.REVIEW]:\n                            <MergeReview\n                                quantityOptions={quantityOptions}\n                                onOptionClick={(index) => {\n                                    setContent(CONTENT_OPTIONS.SELECTING_LOT_QUANTITIES)\n                                    setOptionsInitialIndex(index)\n                                }}\n                                onNext={() => {\n                                    setContent(CONTENT_OPTIONS.CREATE_NEW_LOT)\n                                }}\n                            />,\n                        [CONTENT_OPTIONS.CREATE_NEW_LOT]:\n                            <LotEditorContainer\n                                initialBin={stationId}\n                                binId={stationId}\n                                processOptions={availableKickOffProcesses}\n                                onSubmit={() => {\n                                    quantityOptions.forEach(option => {\n                                        const {lotId, quantity} = option || {}\n                                        const updatedLot = moveLot(cards[lotId], FINISH_BIN_ID, stationId, quantity)\n                                        dispatchPutCard(updatedLot, lotId)\n                                    })\n                                    close()\n                                }}\n                                isOpen={true}\n                                onAfterOpen={null}\n                                cardId={null}\n                                processId={null}\n                                close={()=>{\n                                    setContent(CONTENT_OPTIONS.REVIEW)\n                                }}\n\n                            />,\n\n                    }[content] ||\n                    null\n                }\n\n            </styled.BodyContainer>\n\n            {content === CONTENT_OPTIONS.SELECTING_LOTS &&\n            <styled.Footer>\n                <Button\n                    disabled={!(selectedLots.length > 0)}\n                    onClick={() => {\n                        switch(content) {\n                            case CONTENT_OPTIONS.SELECTING_LOTS: {\n                                setContent(CONTENT_OPTIONS.SELECTING_LOT_QUANTITIES)\n                            }\n                            case CONTENT_OPTIONS.SELECTING_LOT_QUANTITIES: {\n\n                            }\n                        }\n                    }}\n                    label={'Select Quantities'}\n                />\n            </styled.Footer>\n            }\n        </styled.Container>\n    );\n};\n\nMergeModal.propTypes = {\n\n};\n\n// Specifies the default values for props:\nMergeModal.defaultProps = {\n\n};\n\nexport default MergeModal\n","import styled from \"styled-components\";\nimport * as commonCss from '../../../../../common_css/common_css'\n\nexport const MenuContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 90%;\n    max-width: 50rem;\n    height: fit-content;\n    padding: .5rem;\n    box-shadow: ${props => props.theme.cardShadow};\n    background: ${props => props.theme.bg.primary};\n    border-radius: .5rem;\n    z-index: 1000;\n    position: absolute;\n    top: 5rem;\n`","import React, { useRef, useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useParams } from 'react-router-dom'\n\n// Import Styles\nimport * as styled from './dashboard_operations_menu.styled'\nimport { theme } from '../../../../../theme'\n\n// Import Components\nimport DashboardButton from '../dashboard_buttons/dashboard_button/dashboard_button'\n\n// Import Hooks\nimport useOnClickOutside from '../../../../../hooks/useOnClickOutside'\n\n// Import Utils\nimport { getPreviousWarehouseStation } from '../../../../../methods/utils/processes_utils'\nimport { getStationProcesses } from '../../../../../methods/utils/stations_utils'\n\nconst DashboardOperationsMenu = (props) => {\n\n    const {\n        handleCloseMenu,\n        handleOperationSelected,\n    } = props\n\n    const params = useParams()\n\n    const {\n        stationID,\n        dashboardID,\n        editing,\n        lotID\n    } = params || {}\n\n    const availableKickOffProcesses = useSelector(state => { return state.dashboardsReducer.kickOffEnabledDashboards[dashboardID] })\n    const availablFinishProcesses = useSelector(state => { return state.dashboardsReducer.finishEnabledDashboards[dashboardID] })\n    const processes = useSelector(state => state.processesReducer.processes)\n    const [warehouseEnabled, setWarehouseEnabled] = useState(false)\n\n    const mergeEnabled = availablFinishProcesses.length > 0 && availableKickOffProcesses.length > 0\n\n    const ref = useRef() // ref for useOnClickOutside\n    useOnClickOutside(ref, () => { handleCloseMenu() }) // calls onClickOutside when click outside of element\n\n    // Set whether dashboard is warehouse enabled\n    useEffect(() => {\n        const stationProcesses = getStationProcesses(stationID)\n\n        for (let i = 0; i < stationProcesses.length; i++) {\n            const station = getPreviousWarehouseStation(stationProcesses[i], stationID)\n            if (!!station) {\n                setWarehouseEnabled(true)\n                break;\n            }\n        }\n    }, [processes])\n\n    const renderReportButton = () => {\n\n        const schema = theme.main.schema.report\n        const iconClassName = schema?.iconName\n        const iconColor = schema?.solid\n        return (\n            <DashboardButton\n                title={'Reports'}\n                iconColor={\"black\"}\n                iconClassName={iconClassName}\n                onClick={() => handleOperationSelected('report')}\n                containerStyle={{}}\n                hoverable={true}\n                color={iconColor}\n                svgColor={theme.main.bg.secondary}\n            />\n        )\n    }\n\n    const renderTaskQueueButton = () => {\n        const schema = theme.main.schema.taskQueue\n        const iconClassName = schema?.iconName\n        const iconColor = schema?.solid\n        return (\n            <DashboardButton\n                title={'Task Queue'}\n                iconColor={\"black\"}\n                iconClassName={iconClassName}\n                onClick={() => handleOperationSelected('taskQueue')}\n                containerStyle={{}}\n                hoverable={true}\n                color={iconColor}\n                svgColor={theme.main.bg.secondary}\n            />\n        )\n    }\n\n    const renderKickOffButton = () => {\n        const schema = theme.main.schema.kick_off\n        const iconClassName = schema?.iconName\n        const iconColor = schema?.solid\n        return (\n            <DashboardButton\n                title={'Kick Off'}\n                iconColor={\"black\"}\n                iconClassName={iconClassName}\n                onClick={() => handleOperationSelected('kickOff')}\n                containerStyle={{}}\n                hoverable={true}\n                color={iconColor}\n                svgColor={theme.main.bg.secondary}\n            />\n        )\n    }\n\n    const renderFinishButton = () => {\n        const schema = theme.main.schema.finish\n        const iconClassName = schema?.iconName\n        const iconColor = schema?.solid\n        return (\n            <DashboardButton\n                title={'Finish'}\n                iconColor={\"black\"}\n                iconClassName={iconClassName}\n                onClick={() => handleOperationSelected('finish')}\n                containerStyle={{}}\n                hoverable={true}\n                color={iconColor}\n                svgColor={theme.main.bg.secondary}\n            />\n        )\n    }\n\n    const renderWarehouseButton = () => {\n        const schema = theme.main.schema.warehouse\n        const iconClassName = schema?.iconName\n        const iconColor = schema?.solid\n        return (\n            <DashboardButton\n                title={'Warehouse'}\n                iconColor={\"black\"}\n                iconClassName={iconClassName}\n                onClick={() => handleOperationSelected('warehouse')}\n                containerStyle={{}}\n                hoverable={true}\n                color={iconColor}\n                svgColor={theme.main.bg.secondary}\n            />\n        )\n    }\n\n\n    const renderRouteWithoutLotButton = () => {\n        const schema = theme.main.schema.routes\n        const iconClassName = schema?.iconName\n        const iconColor = schema?.solid\n        return (\n            <DashboardButton\n                title={'Run a Route Without Lot'}\n                iconColor={\"black\"}\n                iconClassName={iconClassName}\n                onClick={() => handleOperationSelected('route')}\n                containerStyle={{}}\n                hoverable={true}\n                color={iconColor}\n                svgColor={theme.main.bg.secondary}\n            />\n        )\n    }\n\n    const renderMergeButton = () => {\n        const schema = theme.main.schema.merge\n        const iconClassName = schema?.iconName\n        const iconColor = schema?.solid\n        return (\n            <DashboardButton\n                title={'Merge'}\n                iconColor={\"black\"}\n                iconClassName={iconClassName}\n                onClick={() => handleOperationSelected('merge')}\n                hoverable={true}\n                color={iconColor}\n                svgColor={theme.main.bg.secondary}\n            />\n        )\n    }\n\n    const renderButtons = () => {\n        return (\n            <>\n                {/* {renderReportButton()} */}\n                {renderTaskQueueButton()}\n                {renderRouteWithoutLotButton()}\n                {warehouseEnabled &&\n                    renderWarehouseButton()\n                }\n\n                {mergeEnabled &&\n                    renderMergeButton()\n                }\n\n                {availableKickOffProcesses.length > 0 &&\n                    renderKickOffButton()\n                }\n\n            </>\n\n        )\n    }\n\n\n\n    return (\n        <styled.MenuContainer ref={ref}>\n            {renderButtons()}\n        </styled.MenuContainer>\n    )\n\n}\n\nexport default DashboardOperationsMenu\n\n","import React, { useState, useMemo, useEffect } from 'react';\n\n// functions external\nimport { useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\n// components internal\nimport BackButton from '../../../../basic/back_button/back_button';\nimport Button from '../../../../basic/button/button';\nimport ReactTooltip from \"react-tooltip\";\n\n// Import Components\nimport DashboardOperationsMenu from '../dashboard_operations_menu/dashboard_operations_menu'\n\nimport uuid from 'uuid'\n\n// hooks internal\nimport useWindowSize from '../../../../../hooks/useWindowSize';\n\n// utils\nimport { getBinQuantity, getIsCardAtBin } from \"../../../../../methods/utils/lot_utils\";\n\n// styles\nimport * as styled from './dashboards_header.style';\n\nconst widthBreakPoint = 1000;\n\nconst DashboardsHeader = (props) => {\n\n    const {\n        showBackButton,\n        showSaveButton,\n        currentDashboard,\n        onBack,\n        handleToggleLock,\n        locked,\n        onSave,\n        handleOperationSelected,\n        handleTaskAlert,\n    } = props\n\n    const stations = useSelector(state => state.stationsReducer.stations)\n\n    const [toolTipId,] = useState(`tooltip-${uuid.v4()}`)\n    const [showOperationsMenu, setShowOperationsMenu] = useState(false)\n\n    const [color, setColor] = useState('#5294ff')\n\n    const size = useWindowSize()\n    const windowWidth = size.width\n    const mobileMode = windowWidth < widthBreakPoint;\n\n    const name = currentDashboard.name.length > 0 ? currentDashboard.name : stations[currentDashboard.station].name\n\n    useEffect(() => {\n        return () => {\n\n        }\n    }, [])\n\n    return (\n        <styled.ColumnContainer>\n\n            <styled.Header>\n\n                { /*  {showBackButton &&\n                    <BackButton styled={{ order: '1' }} containerStyle={{}}\n                        onClick={onBack}\n                    />\n                }*/}\n\n                <Button\n                    schema=\"dashboards\"\n                    onClick={() => {\n                        setShowOperationsMenu(true)\n                    }}\n                    disabled={showOperationsMenu}\n                    style={{ height: '3rem', boxShadow: '0px 1px 3px 1px rgba(0,0,0,0.2)' }}\n                >\n                    Operations\n                </Button>\n                <Button\n                    schema=\"delete\"\n                    onClick={() => {\n                        handleOperationSelected('report')\n                        setShowOperationsMenu(false)\n                    }}\n                    disabled={showOperationsMenu}\n                    style={{ \n                        height: '3rem', \n                        boxShadow: '0px 1px 3px 1px rgba(0,0,0,0.2)' ,\n                        display: 'flex',\n                        justifyContent: 'center',\n                        alignItems: 'center',\n                        position: 'absolute',\n                        right: '1rem'\n                        \n                    }}\n                >\n                    Report\n                    {/* <styled.ReportIcon className={'fas fa-exclamation-triangle'} /> */}\n                </Button>\n\n                <styled.Title>{name}</styled.Title>\n                {/* <styled.PaceContainer\n                    color={color}\n                >\n\n                    <styled.PaceText color={color}>89/100</styled.PaceText>\n                </styled.PaceContainer> */}\n\n                {!mobileMode &&\n                    <styled.LockIcon\n                        className={!currentDashboard.locked ? 'fas fa-lock-open' : 'fas fa-lock'}\n                        onClick={handleToggleLock}\n                        locked={locked}\n                        data-tip\n                        data-for={toolTipId}\n                    >\n                        <ReactTooltip id={toolTipId}>\n                            {!currentDashboard.locked ?\n                                <styled.LockContainer>Click to lock the dashboard. This will hide the \"X\" button on the dashsboard screen when in mobile mode</styled.LockContainer>\n                                :\n                                <styled.LockContainer>Click to unlock the dashboard. This will show the \"X\" button on the dashsboard screen when in mobile mode</styled.LockContainer>\n                            }\n\n                        </ReactTooltip>\n                    </styled.LockIcon>\n                }\n\n\n\n                {showOperationsMenu &&\n                    <DashboardOperationsMenu\n                        handleCloseMenu={() => { setShowOperationsMenu(false) }}\n                        handleOperationSelected={(op) => {\n                            handleOperationSelected(op)\n                            setShowOperationsMenu(false)\n                        }}\n                        handleTaskAlert={handleTaskAlert}\n                    />\n                }\n\n                {/* {showEditButton && !mobileMode &&\n                    <Button styled={{ order: '3', position: 'absolute', right: '0', marginRight: '0' }}\n                        onClick={setEditingDashboard}\n                        secondary\n                    >\n                        Edit Dashboard\n                </Button>\n                } */}\n\n                {showSaveButton &&\n                    <>\n                        <Button styled={{ order: '3', minWidth: '10rem' }}\n                            type='submit'\n                            // disabled={saveDisabled}\n                            schema=\"dashboards\"\n                            onClick={onSave}\n                        >\n                            Save\n                        </Button>\n\n                    </>\n                }\n\n            </styled.Header>\n        </styled.ColumnContainer>\n\n    )\n}\n\nexport default withRouter(DashboardsHeader)\n","import styled, { css } from \"styled-components\";\nimport * as commonCss from '../../../../../../common_css/common_css'\n\n\nexport const LotListContainer = styled.div`\n    ${commonCss.rowContainer}\n    justify-content: center;\n    overflow: auto;\n    flex-wrap: wrap;\n    padding: 1rem;\n    width: 100%;\n`","import React, { useState, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useParams, useHistory } from 'react-router-dom'\n\n// Import Styles\nimport * as styled from './dashboard_lot_list.style'\n\n// Import Componenets\nimport LotContainer from \"../../../../../side_bar/content/cards/lot/lot_container\";\nimport SortFilterContainer from '../../../../../side_bar/content/cards/sort_filter_container/sort_filter_container'\n\n// Import Utils\nimport { getIsCardAtBin, getMatchesFilter } from '../../../../../../methods/utils/lot_utils'\nimport { sortBy } from '../../../../../../methods/utils/card_utils'\n\n// Import Constants\nimport { LOT_FILTER_OPTIONS, SORT_DIRECTIONS } from '../../../../../../constants/lot_contants'\n\n\nconst DashboardLotList = () => {\n\n    const params = useParams()\n\n    const {\n        stationID,\n        dashboardID,\n    } = params || {}\n\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    const stations = useSelector(state => state.stationsReducer.stations)\n    const cards = useSelector(state => state.cardsReducer.cards)\n    const devices = useSelector(state => state.devicesReducer.devices)\n    const taskQueue = useSelector(state => state.taskQueueReducer.taskQueue)\n    const routes = useSelector(state => state.tasksReducer.tasks)\n\n    const [lotFilterValue, setLotFilterValue] = useState('')\n    const [sortMode, setSortMode] = useState(LOT_FILTER_OPTIONS.name)\n    const [sortDirection, setSortDirection] = useState(SORT_DIRECTIONS.ASCENDING)\n    const [shouldFocusLotFilter, setShouldFocusLotFilter] = useState(false)\n    const [selectedFilterOption, setSelectedFilterOption] = useState(LOT_FILTER_OPTIONS.name)\n\n    const station = stations[stationID]\n\n    const handleCardClicked = (lotID) => {\n        history.push(`/locations/${stationID}/dashboards/${dashboardID}/lots/${lotID}`)\n    }\n\n    // Handles when lot is currently on the cart\n    const onLotIsCurrentlyAtCart = (lot) => {\n        const currDevice = Object.values(devices)[0]\n\n        // If device has a current task q item\n        if (!!currDevice && !!currDevice.current_task_queue_id && currDevice.current_task_queue_id.length > 0) {\n\n            // Get the corresponding task q\n            const currTaskQueue = taskQueue[currDevice.current_task_queue_id]\n\n            if(!currTaskQueue) return true\n\n            // Get the coresponding route\n            const currRoute = routes[currTaskQueue?.task_id]\n\n            // See if the lot belongs to this task q item\n            const currLotIsInTaskQ = currTaskQueue?.lot_id === lot._id\n\n            // See if the device is at the unload station and unload hil is displaying\n            const deviceAtUnload = !currTaskQueue?.next_position && currRoute?.unload?.station === currTaskQueue.hil_station_id\n\n            // See if the lot already has a quantity at the station\n            // IE the lot is split and already here\n            const quantityAtStation = lot.bins[stationID].count\n            const lotHasQuantityAlreadyAtStation = currTaskQueue?.quantity !== quantityAtStation\n\n            // If lot is in the task, \n            // lot does not have quantity at the station\n            // the device is driving to the next position or the device is at unload, \n            // then dont show card on dashboard\n            if (currLotIsInTaskQ && !lotHasQuantityAlreadyAtStation && (!!currTaskQueue?.next_position || deviceAtUnload)) {\n                return false\n            }\n        }\n        return true\n    }\n\n    const renderLotCards = useMemo(() => {\n\n        let sortedCards = Object.values(cards)\n\n        if (sortMode) {\n            sortBy(sortedCards, sortMode, sortDirection)\n        }\n\n        return sortedCards\n            .filter((card, ind) => {\n                return getIsCardAtBin(card, station?._id)\n            })\n            .filter((currLot) => { return onLotIsCurrentlyAtCart(currLot) })\n            .filter((currLot) => {\n                const {\n                    name: currLotName,\n                    bins = {},\n                } = currLot || {}\n\n                const count = bins[stationID]?.count\n                return getMatchesFilter({\n                    ...currLot,\n                    quantity: count\n                }, lotFilterValue, selectedFilterOption)\n            })\n            .map((card, ind) => {\n\n                const {\n                    _id: currCardId,\n                    process_id: currCardProcessId\n                } = card || {}\n\n                return (\n                    <LotContainer\n                        lotId={currCardId}\n                        binId={stationID}\n                        enableFlagSelector={false}\n                        key={currCardId}\n                        onClick={() => {\n                            handleCardClicked(currCardId)\n                        }}\n                        containerStyle={{\n                            margin: \".5rem\",\n                        }}\n                    />\n                )\n            })\n\n    }, [cards, lotFilterValue, selectedFilterOption, sortMode, sortDirection])\n\n    return (\n        <styled.LotListContainer>\n            <SortFilterContainer\n                lotFilterValue={lotFilterValue}\n                sortMode={sortMode}\n                setSortMode={setSortMode}\n                sortDirection={sortDirection}\n                setSortDirection={setSortDirection}\n                shouldFocusLotFilter={shouldFocusLotFilter}\n                setLotFilterValue={setLotFilterValue}\n                selectedFilterOption={selectedFilterOption}\n                setSelectedFilterOption={setSelectedFilterOption}\n                containerStyle={{ justifyContent: 'center' }}\n            />\n            {renderLotCards}\n        </styled.LotListContainer>\n    )\n\n\n}\n\nexport default DashboardLotList","import styled from \"styled-components\";\n\nexport const ButtonContainer = styled.div`\n    margin-top: 2rem;\n    padding: 1rem;\n    width: 100%;\n    max-width: 50rem;\n    align-self: center;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n`\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useParams, useHistory } from 'react-router-dom'\n\n// Import Styles\nimport * as styled from './dashboard_device_page.style'\nimport { theme } from '../../../../../../theme'\n\n// Import Components\nimport DashboardButton from '../../dashboard_buttons/dashboard_button/dashboard_button'\n\n// Import Actions\nimport { handlePostTaskQueue } from '../../../../../../redux/actions/task_queue_actions'\n\n// Import Utils\nimport { handleDeviceDashboardRoutes } from '../../../../../../methods/utils/dashboards_utils'\n\n\nconst DashboardDevicePage = (props) => {\n\n    const {\n        handleTaskAlert,\n    } = props\n\n    const params = useParams()\n    const dispatch = useDispatch()\n\n    const tasks = useSelector(state => state.tasksReducer.tasks)\n    const taskQueue = useSelector(state => state.taskQueueReducer.taskQueue)\n    const devices = useSelector(state => state.devicesReducer.devices)\n\n    const {\n        stationID,\n        dashboardID,\n        editing,\n        lotID\n    } = params || {}\n\n\n    const dispatchPostTaskQueue = (props) => dispatch(handlePostTaskQueue(props))\n\n    // Custom task for Send to idle and charging operators\n    const onCustomTask = async (props) => {\n\n        const {\n            deviceType,\n        } = props\n\n        const lotID = ''\n        const Id = props.task_id\n        const name = ''\n        const custom = props.custom_task\n\n        await dispatchPostTaskQueue({ dashboardID, tasks, deviceType, taskQueue, lotID, Id, name, custom })\n        handleTaskAlert()\n    }\n\n\n    const renderDeviceButtons = () => {\n        const routes = handleDeviceDashboardRoutes(devices[stationID])\n\n        return routes.map((route, ind) => {\n            const iconClassName = 'fas fa-route'\n            const name = route.name\n            const color = route.color\n\n            return (\n                <DashboardButton\n                    title={name}\n                    iconColor={\"black\"}\n                    iconClassName={iconClassName}\n                    onClick={() => onCustomTask(route)}\n                    containerStyle={{}}\n                    hoverable={true}\n                    color={color}\n                    svgColor={theme.main.bg.primary}\n                    clickable={true}\n                />\n            )\n        })\n\n\n    }\n\n    return (\n        <styled.ButtonContainer>\n            {renderDeviceButtons()}\n        </styled.ButtonContainer>\n    )\n\n}\n\n\nexport default DashboardDevicePage","import styled, { css } from 'styled-components'\n// import Modal from 'react-modal';\nimport { isMobile } from \"react-device-detect\"\nimport { ModalContainerCSS, BodyContainerCSS } from '../../../../../../common_css/modal_css'\n\nexport const Container = styled(ModalContainerCSS)`\n`\n\nexport const CloseIcon = styled.i`\n    font-size: 1.4rem;\n    margin: 1rem;\n    color: ${props => props.theme.bg.quaternary};\n    cursor: pointer;\n`\n\nexport const HeaderMainContentContainer = styled.div`\n\tdisplay: flex;\n  \tflex-direction: row;\n\tjustify-content: space-between;\n  align-items: center;\n  flex: 1;\n`\n\nexport const Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  align-items: stretch;\n  align-content: center;\n  margin: 0;\n  padding: .5rem 1rem;\n  background: ${props => props.theme.bg.primary};\n  box-shadow: 0px 0px 6px 1px rgba(0,0,0,0.2);\n`\n\nexport const Title = styled.h2`\n  height: 100%;\n  min-height: 100%;\n  margin: 0;\n  padding: 0;\n  text-align: center;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  font-size: ${props => props.theme.fontSize.sz2};\n  font-weight: ${props => props.theme.fontWeight.bold};\n  margin-bottom: 1rem;\n  flex-grow: 1;\n`;\n\nexport const BodyContainer = styled(BodyContainerCSS)`\n`\n\nexport const ButtonsContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: center;\n\tmin-height: fit-content;\n`;\n\n\nexport const ContentContainer = styled.div`\n\tbackground: ${props => props.theme.bg.secondary};\n\tborder-radius: 0rem;\n\tdisplay: flex;\n\tflex-direction: column;\n\toverflow: hidden;\n\tmargin-bottom: 1rem;\n\talign-items: center;\n  justify-content: center;\n`\n\nexport const NoButtonsText = styled.span`\n\tfont: ${props => props.theme.font.primary};\n\tfont-size: ${props => props.theme.fontSize.sz3};\n`\n\nexport const FadeLoaderCSS = css`\n \n`;\n\nexport const ReportButtonsContainer = styled.div`\n\talign-items: center;\n\toverflow: auto;\n\tmin-height: 5rem;\n\twidth: 100%;\n  \n  ${props => props.isButtons ? buttonsCss : noButtonsCss}\n`\n\nconst buttonsCss = css`\n`\n\nconst noButtonsCss = css`\n  overflow: auto;\n\tdisplay: flex;\n  flex-drection: column;\n  justify-content: center;\n`\n\n\n\n","import React, {useEffect, useState} from \"react\";\n\n// external components\nimport Modal from 'react-modal';\nimport {useDispatch, useSelector} from \"react-redux\";\n\n// internal components\nimport Button from \"../../../../../basic/button/button\";\nimport DashboardButton from \"../../dashboard_buttons/dashboard_button/dashboard_button\";\n\n// actions\nimport {getCards, getProcessCards, putCard} from \"../../../../../../redux/actions/card_actions\";\n\n// styles\nimport * as styled from './kick_off_modal.style'\nimport {useTheme} from \"styled-components\";\nimport {getProcesses} from \"../../../../../../redux/actions/processes_actions\";\nimport FadeLoader from \"react-spinners/FadeLoader\";\nimport Textbox from \"../../../../../basic/textbox/textbox\";\nimport {SORT_MODES} from \"../../../../../../constants/common_contants\";\nimport {sortBy} from \"../../../../../../methods/utils/card_utils\";\nimport Lot from \"../../../../../side_bar/content/cards/lot/lot\";\nimport {getCustomFields, getLotTotalQuantity, getMatchesFilter} from \"../../../../../../methods/utils/lot_utils\";\nimport Card from \"../../../../../side_bar/content/cards/lot/lot\";\nimport QuantityModal from \"../../../../../basic/modals/quantity_modal/quantity_modal\";\nimport SimpleModal from \"../../../../../basic/modals/simple_modal/simple_modal\";\nimport {quantityOneSchema} from \"../../../../../../methods/utils/form_schemas\";\nimport ZoneHeader from \"../../../../../side_bar/content/cards/zone_header/zone_header\";\nimport LotSortBar from \"../../../../../side_bar/content/cards/lot_sort_bar/lot_sort_bar\";\nimport {LOT_FILTER_OPTIONS, SORT_DIRECTIONS} from \"../../../../../../constants/lot_contants\";\nimport LotFilterBar from \"../../../../../side_bar/content/cards/lot_filter_bar/lot_filter_bar\";\nimport {getLotTemplates} from \"../../../../../../redux/actions/lot_template_actions\";\nimport LotEditorContainer from \"../../../../../side_bar/content/cards/editors/card_editor/lot_editor_container\";\nimport SortFilterContainer from \"../../../../../side_bar/content/cards/sort_filter_container/sort_filter_container\";\n\nModal.setAppElement('body');\n\nconst KickOffModal = (props) => {\n\n    const {\n        isOpen,\n        title,\n        close,\n        dashboard,\n        onSubmit\n    } = props\n\n    // get current buttons, default to empty array\n    const dashboardId = dashboard?._id?.$oid\n\n    const theme = useTheme()\n\n    const dispatch = useDispatch()\n    // const onGetProcessCards = (processId) => dispatch(getProcessCards(processId))\n    const dispatchGetCards = () => dispatch(getCards())\n    const dispatchGetLotTemplates = async () => await dispatch(getLotTemplates())\n    const dispatchGetProcesses = () => dispatch(getProcesses());\n    const onPutCard = async (card, ID) => await dispatch(putCard(card, ID))\n\n    const kickOffEnabledInfo = useSelector(state => { return state.dashboardsReducer.kickOffEnabledDashboards[dashboardId] })\n    const processCards = useSelector(state => { return state.cardsReducer.processCards })\n    const processes = useSelector(state => { return state.processesReducer.processes }) || {}\n    const routes = useSelector(state => { return state.tasksReducer.tasks }) || {}\n\n    const [shouldFocusLotFilter, setShouldFocusLotFilter] = useState(false)\n    const [submitting, setSubmitting] = useState(false)\n    const [showLotEditor, setShowLotEditor] = useState(false)\n    const [didLoadData, setDidLoadData] = useState(false)\n    const [selectedLot, setSelectedLot] = useState(null)\n    const [lotCount, setLotCount] = useState(null)\n    const [showQuantitySelector, setShowQuantitySelector] = useState(false)\n    const [availableKickOffCards, setAvailableKickOffCards] = useState([])\n\n    const [sortMode, setSortMode] = useState(LOT_FILTER_OPTIONS.name)\n    const [sortDirection, setSortDirection] = useState(SORT_DIRECTIONS.ASCENDING)\n    const [lotFilterValue, setLotFilterValue] = useState('')\n    const [ selectedFilterOption, setSelectedFilterOption ] = useState(LOT_FILTER_OPTIONS.name)\n\n    const isButtons = availableKickOffCards.length > 0\n    const stationId = dashboard.station\n\n    const onButtonClick = async (lot) => {\n        setShowQuantitySelector(true)\n\n        // extract card attributes\n        const {\n            bins,\n        } = lot\n\n        // extract first station's bin and queue bin from bins\n        const {\n            [\"QUEUE\"]: queueBin,\n        } = bins || {}\n\n        const queueBinCount = queueBin?.count ? queueBin.count : 0\n\n        setLotCount(queueBinCount)\n        setSelectedLot(lot)\n    }\n\n    /*\n    * handles the logic for when a kick-off button is pressed\n    *\n    * When a kick-off button is pressed, the lot is to be moved from the queue of the current process it resides in\n    * to the first station in the process\n    *\n    * This is done by updating the cards station_id and route_id to those of the first station in the first route\n    * */\n    const moveLot = async (card, quantity) => {\n\n        let requestSuccessStatus = false\n        let message\n\n        // extract lot attributes\n        const {\n            bins,\n            name: cardName,\n            process_id,\n            _id: cardId,\n        } = card\n\n        if(quantity && quantity > 0) {\n\n            // get process of card\n            const cardProcess = processes[process_id]\n\n            // get routes of process\n            const processRoutes = cardProcess.routes\n\n            // get id of first route\n            var firstRouteId = null\n            if(processRoutes && Array.isArray(processRoutes)) firstRouteId = processRoutes[0]\n\n            // get first route\n            const firstRoute = routes[firstRouteId]\n\n            // extract route attributes\n            const {\n                load: {\n                    station: loadStation\n                }\n            } = firstRoute || {}\n\n            // update card\n            if(firstRouteId && firstRoute && loadStation) {\n\n                // extract first station's bin and queue bin from bins\n                const {\n                    [loadStation]: firstStationBin,\n                    [\"QUEUE\"]: queueBin,\n                    ...unalteredBins\n                } = bins || {}\n\n                const queueBinCount = queueBin?.count ? queueBin.count : 0\n                const firstStationCount = firstStationBin?.count ? firstStationBin.count : 0\n\n\n                // updated card will maintain all of the cards previous attributes with the station_id and route_id updated\n                let updatedCard = {\n                    ...card,                                // spread unaltered attributes\n                    bins: {\n                        ...unalteredBins,                   // spread unaltered bins\n                        [loadStation]: {\n                            ...firstStationBin,              // spread unaltered attributes of station bin if it exists\n                            count: parseInt(quantity) + parseInt(firstStationCount)    // increment first station's count by the count of the queue\n                        }\n                    },\n                }\n\n                // need to add queue bin back, but subtract moved quantity\n                if(quantity < queueBinCount) {\n                    updatedCard = {\n                        ...updatedCard,\n                        bins: {\n                            ...updatedCard.bins,\n                            QUEUE:  {\n                                ...queueBin,\n                                count: parseInt(queueBinCount) - parseInt(quantity)\n                            }\n                        }\n                    }\n                }\n\n                // send update action\n                const result = await onPutCard(updatedCard, cardId)\n\n\n\n                // check if request was successful\n                if(!(result instanceof Error)) {\n                    requestSuccessStatus = true\n                    message = cardName ? `Kicked off ${quantity} ${quantity > 1 ? \"items\" : \"item\"} from '${cardName}'` : `Kicked off ${quantity} ${quantity > 1 ? \"items\" : \"item\"}`\n                }\n        }\n        }\n        else {\n           message = \"Quantity must be greater than 0\"\n        }\n\n        onSubmit(cardName, requestSuccessStatus, quantity, message)\n        setSubmitting(false)\n        close()\n    }\n\n\n    /*\n    * renders an array of buttons for each kick off lot\n    * */\n    const renderKickOffButtons = () => {\n        return availableKickOffCards\n            .filter((currLot) => {\n                const {\n                    name: currLotName,\n                    bins = {},\n                } = currLot || {}\n\n                const count = bins[\"QUEUE\"]?.count || 0\n\n                return getMatchesFilter({\n                    ...currLot,\n                    quantity: count\n                }, lotFilterValue, selectedFilterOption)\n            })\n            .map((currCard, cardIndex) => {\n                const {\n                    _id: lotId,\n                    name,\n                    start_date,\n                    end_date,\n                    bins = {},\n                    flags,\n                    lotNumber,\n                    process_id: processId,\n                    lotTemplateId\n                } = currCard\n\n                const process = processes[processId]\n                const {\n                    name: processName\n                } = process || {}\n\n                const count = bins[\"QUEUE\"]?.count || 0\n                const totalQuantity = getLotTotalQuantity({bins})\n                const templateValues = getCustomFields(lotTemplateId, currCard)\n\n                return(\n                        <Lot\n                            templateValues={templateValues}\n                            totalQuantity={totalQuantity}\n                            enableFlagSelector={false}\n                            lotNumber={lotNumber}\n                            processName={processName}\n                            flags={flags || []}\n                            name={name}\n                            start_date={start_date}\n                            end_date={end_date}\n                            count={count}\n                            id={lotId}\n                            index={cardIndex}\n                            onClick={()=>{\n                                onButtonClick(currCard)\n                            }}\n                            containerStyle={{marginBottom: \"0.5rem\", width: \"80%\", margin: '.5rem auto .5rem auto'}}\n                        />\n                )\n        })\n    }\n\n    const loadData = async () => {\n        const cardsResult = await dispatchGetCards()\n        const processesResult = await dispatchGetProcesses()\n        dispatchGetLotTemplates()\n\n        if(!(cardsResult instanceof Error) && !(processesResult instanceof Error)) {\n            setDidLoadData(true)\n        }\n    }\n\n    /**\n     * When modal is opened, get all cards associated with the processes\n     *\n     *\n     */\n    useEffect(() => {\n        loadData()\n    }, [])\n\n    /**\n     * Get the cards actually available for kick off\n     *\n     * For a lot to be available for kick off, it must have at least 1 item in the 'queue' bin\n     *\n     * This function creates a temporary array for storing kick off cards as it checks each lot of each process associated with the station\n     *\n     * This function loops through every lot belonging to a process that the current station is the first station of\n     * Each lot's bins attribute is checked to see if it contains any items in the \"QUEUE\" bin\n     *\n     * if a lot is found to have items in the \"QUEUE\" bin, it is added to the list of kick off cards\n     *\n     * finally, local state variable availableKickOffCards is set to the list of kick off cards for later use\n     *\n     */\n    useEffect(() => {\n        let tempAvailableCards = []\n\n        if(kickOffEnabledInfo && Array.isArray(kickOffEnabledInfo)) kickOffEnabledInfo.forEach((currProcessId) => {\n            const currProcessCards = processCards[currProcessId]\n\n            let filteredCards = []\n            if(currProcessCards) filteredCards = Object.values(currProcessCards).filter((currCard) => {\n                // currCard.station_id === \"QUEUE\"\n                if(currCard.bins && currCard.bins[\"QUEUE\"]) return true\n            }).map((currCard) => {\n                return{\n                    ...currCard,\n                    count: currCard.bins[\"QUEUE\"].count\n                }\n            })\n            tempAvailableCards = tempAvailableCards.concat(filteredCards)\n        })\n\n\n        if(sortMode) {\n            sortBy(tempAvailableCards, sortMode, sortDirection)\n        }\n        setAvailableKickOffCards(tempAvailableCards)\n\n    }, [processCards, sortMode, sortDirection])\n\n    // useEffect(() => {\n    //     let tempAvailableCards = [...availableKickOffCards]\n    //     sortBy(tempAvailableCards, sortMode, sortDirection)\n    //     setAvailableKickOffCards(tempAvailableCards)\n    // }, [, processCards])\n\n    // if number of available lots >= 5, auto focus lot filter text box\n    useEffect(() => {\n        if(availableKickOffCards.length >= 5 ) {\n            setShouldFocusLotFilter(true)\n        }\n    }, [availableKickOffCards.length])\n\n    if(showQuantitySelector) {\n        return(\n            <QuantityModal\n                validationSchema={quantityOneSchema}\n                maxValue={lotCount}\n                minValue={1}\n                infoText={`${lotCount} items available.`}\n                isOpen={true}\n                title={\"Select Quantity\"}\n                onRequestClose={() => setShowQuantitySelector(false)}\n                onCloseButtonClick={() => setShowQuantitySelector(false)}\n                handleOnClick1={(quantity) => {\n                    setShowQuantitySelector(false)\n\n                }}\n                handleOnClick2={(quantity) => {\n                    setShowQuantitySelector(false)\n                    moveLot(selectedLot, quantity)\n                }}\n                button_1_text={\"Cancel\"}\n                button_2_text={\"Confirm\"}\n            />\n        )\n    }\n\n    return (\n        <styled.Container\n            isOpen={isOpen}\n            contentLabel=\"Kick Off Modal\"\n            onRequestClose={close}\n            style={{\n                overlay: {\n                    zIndex: 500,\n                    backgroundColor: 'rgba(0, 0, 0, 0.4)' \n                },\n            }}\n        >\n            {showLotEditor &&\n            <LotEditorContainer\n                isOpen={true}\n                onAfterOpen={null}\n                processOptions={kickOffEnabledInfo}\n                showProcessSelector={true}\n                cardId={null}\n                processId={null}\n                // binId={null}\n                close={()=>{\n                    setShowLotEditor(false)\n                    // setSelectedCard(null)\n                }}\n            />\n            }\n            <styled.Header>\n                <styled.HeaderMainContentContainer>\n                    <styled.Title>{title}</styled.Title>\n                    <styled.CloseIcon className=\"fa fa-times\" aria-hidden=\"true\" onClick={close}/>\n\n                </styled.HeaderMainContentContainer>\n                <SortFilterContainer\n                    lotFilterValue={lotFilterValue}\n                    sortMode={sortMode}\n                    setSortMode={setSortMode}\n                    sortDirection={sortDirection}\n                    setSortDirection={setSortDirection}\n                    shouldFocusLotFilter={shouldFocusLotFilter}\n                    setLotFilterValue={setLotFilterValue}\n                    selectedFilterOption={selectedFilterOption}\n                    setSelectedFilterOption={setSelectedFilterOption}\n                />\n\n\n            </styled.Header>\n\n            <styled.BodyContainer>\n                    <div style={{display: \"flex\", flexDirection: \"column\", overflow: \"hidden\"}}>\n                        <styled.ContentContainer>\n                            <styled.ReportButtonsContainer isButtons={isButtons}>\n                                {isButtons ?\n                                    renderKickOffButtons()\n                                    :\n                                    didLoadData ?\n                                    <styled.NoButtonsText>There are currently no lots in the queue available for kick off.</styled.NoButtonsText>\n                                        :\n                                        <FadeLoader\n                                            css={styled.FadeLoaderCSS}\n                                            height={5}\n                                            width={3}\n                                            loading={true}\n                                        />\n                                }\n\n                            </styled.ReportButtonsContainer>\n                        </styled.ContentContainer>\n\n                        <styled.ButtonsContainer>\n                            {/* <Button\n                                tertiary\n                                schema={\"dashboards\"}\n                                onClick={close}\n                                label={\"Close\"}\n                                type=\"button\"\n                            /> */}\n                            <Button\n                                // tertiary\n                                // secondary\n                                schema={\"dashboards\"}\n                                // onClick={close}\n                                onClick={()=>setShowLotEditor(true)}\n                                label={\"Create New Lot\"}\n                                type=\"button\"\n                                style={{minWidth: '12rem', minHeight: '3rem'}}\n                            />\n                        </styled.ButtonsContainer>\n                    </div>\n            </styled.BodyContainer>\n        </styled.Container>\n    );\n};\n\nexport default KickOffModal\n","import styled, {css} from 'styled-components'\nimport Modal from 'react-modal';\nimport { isMobile } from \"react-device-detect\"\n\nexport const Container = styled(Modal)`\n\toutline: none !important;\n\toutline-offset: none !important;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translate(-50%, -50%);\n\tright: auto;\n\tbottom: auto;\n\tposition: absolute;\n\tz-index: 50;\n\n\n\tmin-width: 30rem;\n    max-width: 95%;\n    width: ${isMobile && \"95%\"};\n\theight: 95%;\n\n\n\tcolor: ${props => props.theme.bg.octonary};\n\tdisplay: flex;\n\tflex-direction: column;\n\tborder-radius: 1rem;\n\toverflow: hidden;\n`\n\nexport const CloseIcon = styled.i`\n    font-size: 1.4rem;\n    margin: 1rem;\n    color: ${props => props.theme.bg.quaternary};\n    cursor: pointer;\n`\n\nexport const HeaderMainContentContainer = styled.div`\n\tdisplay: flex;\n  \tflex-direction: row;\n\tjustify-content: space-between;\n  align-items: center;\n  flex: 1;\n`\n\nexport const Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  align-items: stretch;\n  align-content: center;\n  margin: 0;\n  padding: .5rem 1rem;\n  background: ${props => props.theme.bg.primary};\n  box-shadow: 0px 0px 6px 1px rgba(0,0,0,0.2);\n`\n\nexport const Title = styled.h2`\n  height: 100%;\n  min-height: 100%;\n  margin: 0;\n  padding: 0;\n  text-align: center;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  font-size: ${props => props.theme.fontSize.sz2};\n  font-weight: ${props => props.theme.fontWeight.bold};\n  margin-bottom: 1rem;\n  flex-grow: 1;\n`;\n\nexport const BodyContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tpadding: 1rem;\n\tflex: 1;\n\tjustify-content: space-between;\n\toverflow: hidden;\n\tbackground: ${props => props.theme.bg.secondary};\n`\n\nexport const ButtonsContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: center;\n\tmin-height: fit-content;\n`;\n\n\nexport const ContentContainer = styled.div`\n\tbackground: ${props => props.theme.bg.secondary};\n\tborder-radius: 0rem;\n\tdisplay: flex;\n\tflex-direction: column;\n\toverflow: hidden;\n\tmargin-bottom: 1rem;\n\talign-items: center;\n  justify-content: center;\n`\n\nexport const NoButtonsText = styled.span`\n\tfont: ${props => props.theme.font.primary};\n\tfont-size: ${props => props.theme.fontSize.sz3};\n`\n\nexport const FadeLoaderCSS = css`\n \n`;\n\nexport const ReportButtonsContainer = styled.div`\n\talign-items: center;\n\toverflow: auto;\n\tmin-height: 5rem;\n\twidth: 100%;\n  \n  ${props => props.isButtons ? buttonsCss : noButtonsCss }\n`\n\nconst buttonsCss = css`\n`\n\nconst noButtonsCss = css`\n  overflow: auto;\n\tdisplay: flex;\n  flex-drection: column;\n  justify-content: center;\n`\n\n\n\n","import React, { useEffect, useState } from \"react\";\n\n// external components\nimport Modal from 'react-modal';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from 'react-router-dom'\n\n\n// actions\nimport { getCards, getProcessCards, putCard } from \"../../../../../../redux/actions/card_actions\";\n\n// styles\nimport * as styled from './finish_modal.style'\nimport { useTheme } from \"styled-components\";\nimport { getProcesses } from \"../../../../../../redux/actions/processes_actions\";\nimport Textbox from \"../../../../../basic/textbox/textbox\";\nimport { SORT_MODES } from \"../../../../../../constants/common_contants\";\nimport { sortBy } from \"../../../../../../methods/utils/card_utils\";\nimport Lot from \"../../../../../side_bar/content/cards/lot/lot\";\nimport {getCustomFields, getLotTotalQuantity, getMatchesFilter} from \"../../../../../../methods/utils/lot_utils\";\nimport Card from \"../../../../../side_bar/content/cards/lot/lot\";\nimport QuantityModal from \"../../../../../basic/modals/quantity_modal/quantity_modal\";\nimport { quantityOneSchema } from \"../../../../../../methods/utils/form_schemas\";\nimport { getLotTemplates } from \"../../../../../../redux/actions/lot_template_actions\";\nimport LotSortBar from \"../../../../../side_bar/content/cards/lot_sort_bar/lot_sort_bar\";\nimport LotFilterBar from \"../../../../../side_bar/content/cards/lot_filter_bar/lot_filter_bar\";\nimport { LOT_FILTER_OPTIONS, SORT_DIRECTIONS } from \"../../../../../../constants/lot_contants\";\nimport SortFilterContainer from \"../../../../../side_bar/content/cards/sort_filter_container/sort_filter_container\";\nimport * as taskQueueActions from \"../../../../../../redux/actions/task_queue_actions\";\nimport {DEVICE_CONSTANTS} from \"../../../../../../constants/device_constants\";\nimport {CUSTOM_TASK_ID} from \"../../../../../../constants/route_constants\";\nimport {deepCopy} from \"../../../../../../methods/utils/utils\";\nimport {putTaskQueue} from \"../../../../../../redux/actions/task_queue_actions\";\n\nModal.setAppElement('body');\n\nconst FinishModal = (props) => {\n\n    const {\n        isOpen,\n        title,\n        close,\n        dashboard,\n        onSubmit,\n\n        // If there is already a lot selected, then dont show selection screen\n        lotSelected,\n    } = props\n\n    // get current buttons, default to empty array\n    const dashboardId = dashboard?._id?.$oid\n\n    const params = useParams()\n    const theme = useTheme()\n\n    const {\n        stationID,\n        dashboardID,\n        subPage,\n        lotID\n    } = params || {}\n\n    const dispatch = useDispatch()\n    // const onGetProcessCards = (processId) => dispatch(getProcessCards(processId))\n    const dispatchGetCards = () => dispatch(getCards())\n    const dispatchGetProcesses = () => dispatch(getProcesses())\n    const dispatchGetLotTemplates = async () => await dispatch(getLotTemplates())\n    const onPutCard = async (card, ID) => await dispatch(putCard(card, ID))\n    const dispatchHandlePostTaskQueue = async (props) => await dispatch(taskQueueActions.handlePostTaskQueue(props))\n    const disptachPutTaskQueue = async (item, id) => await dispatch(putTaskQueue(item, id))\n\n    const finishEnabledDashboard = useSelector(state => { return state.dashboardsReducer.finishEnabledDashboards[dashboardId] })\n    const processCards = useSelector(state => { return state.cardsReducer.processCards })\n    const processes = useSelector(state => { return state.processesReducer.processes }) || {}\n    const routes = useSelector(state => { return state.tasksReducer.tasks }) || {}\n    const tasks = useSelector(state => state.tasksReducer.tasks)\n    const taskQueue = useSelector(state => state.taskQueueReducer.taskQueue)\n\n\n    const [selectedLot, setSelectedLot] = useState(lotSelected ? processCards[lotID] : null)\n    const [lotCount, setLotCount] = useState(null)\n    const [shouldFocusLotFilter, setShouldFocusLotFilter] = useState(false)\n    const [showQuantitySelector, setShowQuantitySelector] = useState(lotSelected)\n    const [submitting, setSubmitting] = useState(false)\n    const [availableKickOffCards, setAvailableKickOffCards] = useState([])\n\n    const [sortMode, setSortMode] = useState(LOT_FILTER_OPTIONS.name)\n    const [sortDirection, setSortDirection] = useState(SORT_DIRECTIONS.ASCENDING)\n    const [lotFilterValue, setLotFilterValue] = useState('')\n    const [selectedFilterOption, setSelectedFilterOption] = useState(LOT_FILTER_OPTIONS.name)\n\n    const isButtons = availableKickOffCards.length > 0\n\n    const stationId = dashboard.station\n\n    const onButtonClick = async (lot) => {\n        setShowQuantitySelector(true)\n\n        // extract card attributes\n        const {\n            bins,\n        } = lot\n\n        // extract first station's bin and queue bin from bins\n        const {\n            [stationId]: currentStationBin,\n        } = bins || {}\n\n        const currentStationBinCount = currentStationBin?.count ? currentStationBin.count : 0\n\n        setLotCount(currentStationBinCount)\n        setSelectedLot(lot)\n    }\n\n    /*\n    * handles the logic for when a kick-off button is pressed\n    *\n    * When a kick-off button is pressed, the lot is to be moved from the queue of the current process it resides in\n    * to the first station in the process\n    *\n    * This is done by updating the cards station_id and route_id to those of the first station in the first route\n    * */\n    const moveLot = async (card, quantity) => {\n\n        let requestSuccessStatus = false\n        let message\n\n        // extract lot attributes\n        const {\n            name: cardName,\n            _id: lotId,\n        } = card\n\n        if(quantity && quantity > 0) {\n\n            // moving lot is handled through custom task\n            const custom = {\n                load: {\n                    station: stationId,\n                    instructions: \"\",\n                    position: null,\n                    sound: null,\n                },\n                unload: {\n                    station: \"FINISH\",\n                    instructions: \"\",\n                    position: null,\n                    sound: null,\n                },\n                handoff: true,\n                hil_response: null,\n                quantity: 1\n            }\n\n            // first, post task queue\n            const result = await dispatchHandlePostTaskQueue({ hil_response: null, tasks, deviceType: DEVICE_CONSTANTS.HUMAN, taskQueue, Id: CUSTOM_TASK_ID, custom })\n\n            // check if request was successful\n            if(!(result instanceof Error)) {\n\n                const {\n                    _id,\n                    dashboardID,\n                    dashboard,\n                    ...rest\n                } = result || {}\n\n                // now must update task queue item to move the lot\n                setTimeout(async () =>  {\n\n                    await disptachPutTaskQueue(\n                        {\n                            ...rest,\n                            hil_response: true,\n                            lot_id: lotId,\n                            quantity\n                        }\n                        , result._id)\n                    await dispatchGetCards()\n                }, 1000)\n\n                requestSuccessStatus = true\n                message = cardName ? `Finished ${quantity} ${quantity > 1 ? \"items\" : \"item\"} from '${cardName}'` : `Finished ${quantity} ${quantity > 1 ? \"items\" : \"item\"}`\n            }\n        }\n\n        else {\n            message = \"Quantity must be greater than 0\"\n        }\n\n        onSubmit(cardName, requestSuccessStatus, quantity, message)\n        setSubmitting(false)\n        close()\n    }\n\n\n    /*\n    * renders an array of buttons for each kick off lot\n    * */\n    const renderKickOffButtons = () => {\n        return availableKickOffCards\n            .filter((currLot) => {\n                const {\n                    name: currLotName,\n                    bins = {},\n                } = currLot || {}\n\n                const count = bins[stationId]?.count\n                return getMatchesFilter({\n                    ...currLot,\n                    quantity: count\n                }, lotFilterValue, selectedFilterOption)\n            })\n            .map((currCard, cardIndex) => {\n                const {\n                    _id: lotId,\n                    // count = 0,\n                    name,\n                    start_date,\n                    end_date,\n                    flags,\n                    lotNumber,\n                    bins = {},\n                    process_id: processId = \"\",\n                    lotTemplateId\n                } = currCard\n\n                const process = processes[processId]\n                const {\n                    name: processName\n                } = process || {}\n\n                const count = bins[stationId]?.count\n                const totalQuantity = getLotTotalQuantity({bins})\n                const templateValues = getCustomFields(lotTemplateId, currCard)\n\n                return (\n                    <Lot\n                        totalQuantity={totalQuantity}\n                        templateValues={templateValues}\n                        flags={flags || []}\n                        processName={processName}\n                        lotNumber={lotNumber}\n                        enableFlagSelector={false}\n                        name={name}\n                        start_date={start_date}\n                        end_date={end_date}\n                        // objectName={objectName}\n                        count={count}\n                        id={lotId}\n                        index={cardIndex}\n                        onClick={() => {\n                            onButtonClick(currCard)\n                        }}\n                        containerStyle={{ marginBottom: \"0.5rem\", width: \"80%\", margin: '.5rem auto .5rem auto' }}\n                    />\n                )\n            })\n    }\n\n    /**\n     * When modal is opened, get all cards associated with the processes\n     *\n     *\n     */\n    useEffect(() => {\n        dispatchGetCards()\n        dispatchGetProcesses()\n        dispatchGetLotTemplates()\n    }, [])\n\n    /**\n     * Get the cards actually available for kick off\n     *\n     * For a lot to be available for kick off, it must have at least 1 item in the 'queue' bin\n     *\n     * This function creates a temporary array for storing kick off cards as it checks each lot of each process associated with the station\n     *\n     * This function loops through every lot belonging to a process that the current station is the first station of\n     * Each lot's bins attribute is checked to see if it contains any items in the \"QUEUE\" bin\n     *\n     * if a lot is found to have items in the \"QUEUE\" bin, it is added to the list of kick off cards\n     *\n     * finally, local state variable availableKickOffCards is set to the list of kick off cards for later use\n     *\n     */\n    useEffect(() => {\n        var tempAvailableCards = []\n\n        if (finishEnabledDashboard && Array.isArray(finishEnabledDashboard)) finishEnabledDashboard.forEach((currProcessId) => {\n            const currProcessCards = processCards[currProcessId]\n\n            var filteredCards = []\n            if (currProcessCards) filteredCards = Object.values(currProcessCards).filter((currCard) => {\n                if (currCard.bins && currCard.bins[stationId]) return true\n            })\n                .map((currCard) => {\n                    return {\n                        ...currCard,\n                        count: currCard.bins[stationId].count\n                    }\n                })\n            tempAvailableCards = tempAvailableCards.concat(filteredCards)\n        })\n\n        if (sortMode) {\n            sortBy(tempAvailableCards, sortMode, sortDirection)\n        }\n\n        setAvailableKickOffCards(tempAvailableCards)\n\n    }, [processCards, sortMode, sortDirection])\n\n    // if number of available lots >= 5, auto focus lot filter text box\n    useEffect(() => {\n        if (availableKickOffCards.length >= 5) {\n            setShouldFocusLotFilter(true)\n        }\n    }, [availableKickOffCards.length])\n\n    if (showQuantitySelector) {\n        return (\n            <QuantityModal\n                validationSchema={quantityOneSchema}\n                maxValue={lotCount}\n                minValue={1}\n                infoText={`${lotCount} items available.`}\n                isOpen={true}\n                title={\"Select Quantity\"}\n                onRequestClose={() => setShowQuantitySelector(false)}\n                onCloseButtonClick={() => setShowQuantitySelector(false)}\n                handleOnClick2={(quantity) => {\n                    setShowQuantitySelector(false)\n                    moveLot(selectedLot, quantity)\n                }}\n                handleOnClick1={() => {\n                    setShowQuantitySelector(false)\n                }}\n                button_2_text={\"Confirm\"}\n                button_1_text={\"Cancel\"}\n            />\n        )\n    }\n\n    return (\n        <styled.Container\n            isOpen={isOpen}\n            contentLabel=\"Kick Off Modal\"\n            onRequestClose={close}\n            style={{\n                overlay: {\n                    zIndex: 500,\n                    backgroundColor: 'rgba(0, 0, 0, 0.4)'\n                },\n                content: {\n\n                }\n            }}\n        >\n            <styled.Header>\n                <styled.HeaderMainContentContainer>\n                    <styled.Title>{title}</styled.Title>\n                    <styled.CloseIcon className=\"fa fa-times\" aria-hidden=\"true\" onClick={close} />\n                </styled.HeaderMainContentContainer>\n\n                <SortFilterContainer\n                    lotFilterValue={lotFilterValue}\n                    sortMode={sortMode}\n                    setSortMode={setSortMode}\n                    sortDirection={sortDirection}\n                    setSortDirection={setSortDirection}\n                    shouldFocusLotFilter={shouldFocusLotFilter}\n                    setLotFilterValue={setLotFilterValue}\n                    selectedFilterOption={selectedFilterOption}\n                    setSelectedFilterOption={setSelectedFilterOption}\n                />\n            </styled.Header>\n\n            <styled.BodyContainer>\n                <div style={{ display: \"flex\", flexDirection: \"column\", overflow: \"hidden\" }}>\n                    <styled.ContentContainer>\n                        <styled.ReportButtonsContainer isButtons={isButtons}>\n                            {isButtons ?\n                                renderKickOffButtons()\n                                :\n                                <styled.NoButtonsText>No available lots.</styled.NoButtonsText>\n                            }\n\n                        </styled.ReportButtonsContainer>\n                    </styled.ContentContainer>\n                </div>\n            </styled.BodyContainer>\n        </styled.Container>\n    );\n};\n\nFinishModal.defaultProps = {\n    lotSelected: false,\n}\n\nexport default FinishModal\n","import styled from \"styled-components\";\nimport { ModalContainerCSS, BodyContainerCSS } from '../../../../../../common_css/modal_css'\n\nexport const Container = styled(ModalContainerCSS)`\n`\n\nexport const BodyContainer = styled(BodyContainerCSS)`\n`\n\nexport const Title = styled.h1`\n    font-family: ${props => props.theme.font.primary};\n    font-size: 2rem;\n    font-weight: 500;\n    color: ${props => props.theme.schema[props.schema].solid};\n`\n\nexport const CloseButton = styled.i`\n    position: absolute;\n    top: 0rem;\n    right: 1rem;\n    font-size: 1.5rem;\n    margin: 1rem;\n    color: ${props => props.theme.bg.senary};\n`\n","import React, { Component, useState, useEffect } from 'react';\n\n// Import Style\nimport * as styled from './task_queue_modal.style'\n\n// Import Components\nimport TaskQueue from '../../../../../task_queue/task_queue'\n\n\nconst TaskQueueModal = (props) => {\n\n    const {\n        isOpen,\n        close,\n    } = props\n\n    return (\n        <styled.Container\n            isOpen={isOpen}\n            contentLabel=\"Kick Off Modal\"\n            onRequestClose={close}\n            style={{\n                overlay: {\n                    zIndex: 500,\n                    backgroundColor: 'rgba(0, 0, 0, 0.4)'\n                },\n            }}\n        >\n            <styled.BodyContainer>\n                <styled.Title schema={'taskQueue'}>Task Queue</styled.Title>\n                <styled.CloseButton\n                    className={'fas fa-times'}\n                    onClick={() => {close()}}\n                    style={{ cursor: 'pointer' }}\n                />\n\n\n                <TaskQueue />\n            </styled.BodyContainer>\n        </styled.Container>\n    )\n}\n\nexport default TaskQueueModal","import styled, { css } from 'styled-components'\nimport { ModalContainerCSS, BodyContainerCSS } from '../../../../../../common_css/modal_css'\n\nexport const Container = styled(ModalContainerCSS)`\n`\n\nexport const CloseIcon = styled.i`\n    font-size: 1.4rem;\n    margin: 1rem;\n    color: ${props => props.theme.bg.quaternary};\n    cursor: pointer;\n`\n\nexport const HeaderMainContentContainer = styled.div`\n\tdisplay: flex;\n  \tflex-direction: row;\n\tjustify-content: space-between;\n  align-items: center;\n  flex: 1;\n`\n\nexport const Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  align-items: stretch;\n  align-content: center;\n  margin: 0;\n  padding: .5rem 1rem;\n  background: ${props => props.theme.bg.primary};\n  box-shadow: 0px 0px 6px 1px rgba(0,0,0,0.2);\n`\n\nexport const Title = styled.h2`\n  height: 100%;\n  min-height: 100%;\n  margin: 0;\n  padding: 0;\n  text-align: center;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  font-size: ${props => props.theme.fontSize.sz2};\n  font-weight: ${props => props.theme.fontWeight.bold};\n  margin-bottom: 1rem;\n  flex-grow: 1;\n`;\n\nexport const ContentContainer = styled.div`\n\tbackground: ${props => props.theme.bg.secondary};\n    height: 100%;\n\tborder-radius: 0rem;\n\tdisplay: flex;\n\tflex-direction: column;\n\toverflow-y: auto;\n\talign-items: center;\n`","import React, { useEffect, useState, useMemo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams, useHistory } from 'react-router-dom'\n\n// Import Styles\nimport * as styled from './warehouse_modal.style'\n\n// Import Components\nimport Modal from 'react-modal';\nimport Lot from \"../../../../../side_bar/content/cards/lot/lot\";\nimport QuantityModal from \"../../../../../basic/modals/quantity_modal/quantity_modal\";\nimport SortFilterContainer from \"../../../../../side_bar/content/cards/sort_filter_container/sort_filter_container\";\n\n// Import Utils\nimport { getPreviousWarehouseStation } from '../../../../../../methods/utils/processes_utils'\nimport { sortBy } from \"../../../../../../methods/utils/card_utils\";\nimport { getCustomFields, getLotTotalQuantity, getMatchesFilter, getIsCardAtBin } from \"../../../../../../methods/utils/lot_utils\";\nimport { getStationProcesses } from '../../../../../../methods/utils/stations_utils'\nimport { quantityOneSchema } from \"../../../../../../methods/utils/form_schemas\";\n\n// Import Constants\nimport { LOT_FILTER_OPTIONS, SORT_DIRECTIONS } from \"../../../../../../constants/lot_contants\";\nimport { SORT_MODES } from \"../../../../../../constants/common_contants\";\n\n// Import Actions\nimport { getLotTemplates } from \"../../../../../../redux/actions/lot_template_actions\";\nimport { getCards, getProcessCards, putCard } from \"../../../../../../redux/actions/card_actions\";\nimport { getProcesses } from \"../../../../../../redux/actions/processes_actions\";\n\nModal.setAppElement('body');\n\nconst WarehouseModal = (props) => {\n\n    const {\n        isOpen,\n        title,\n        close,\n        dashboard,\n        onSubmit,\n        stationID\n    } = props\n\n    const params = useParams()\n    const {\n        dashboardID,\n        subPage,\n    } = params || {}\n\n    const history = useHistory()\n\n    const dispatch = useDispatch()\n\n    const processes = useSelector(state => { return state.processesReducer.processes }) || {}\n    const cards = useSelector(state => state.cardsReducer.cards)\n\n    const [shouldFocusLotFilter, setShouldFocusLotFilter] = useState(false)\n\n    const [sortMode, setSortMode] = useState(LOT_FILTER_OPTIONS.name)\n    const [sortDirection, setSortDirection] = useState(SORT_DIRECTIONS.ASCENDING)\n    const [lotFilterValue, setLotFilterValue] = useState('')\n    const [selectedFilterOption, setSelectedFilterOption] = useState(LOT_FILTER_OPTIONS.name)\n\n    // Add warehouse to URL\n    // The reason why you need to do this is that there is no other way to tell if the lot is at a warehouse\n    // IE: you refresh the page and only the lotID is there, but the lot is split into the current station and the warehouse before\n    // There would be no way to tell which one is which\n    const handleCardClicked = (lotID) => {\n        history.push(`/locations/${stationID}/dashboards/${dashboardID}/lots/${lotID}/warehouse`)\n        close()\n    }\n\n    /*\n* renders an array of buttons for each kick off lot\n* */\n    const renderAvailableLots = useMemo(() => {\n\n        const stationProcesses = getStationProcesses(stationID)\n\n        const warehouseStations = []\n        stationProcesses.forEach((processID) => {\n            const station = getPreviousWarehouseStation(processID, stationID)\n            if (!!station) warehouseStations.push(station)\n        })\n\n        let sortedCards = Object.values(cards)\n\n        if (sortMode) {\n            sortBy(sortedCards, sortMode, sortDirection)\n        }\n\n\n        // This array is all the IDs of the cards being shown\n        // This fixes an issue with 2 processes going from the same warehouse into the same station (this would show all those cards twice)\n        let warehouseCards = []\n\n        // Goes through each warehouse that is infront to the station and renders cards\n        return warehouseStations.map((warehouse) => {\n            const warehouseID = warehouse?._id\n            return sortedCards\n                .filter((card, ind) =>\n                    getIsCardAtBin(card, warehouseID)\n                )\n                .filter((currLot) => {\n                    const {\n                        name: currLotName,\n                        bins = {},\n                    } = currLot || {}\n\n                    const count = bins[warehouseID]?.count\n                    return getMatchesFilter({\n                        ...currLot,\n                        quantity: count\n                    }, lotFilterValue, selectedFilterOption)\n                })\n                .map((currCard, cardIndex) => {\n                    const {\n                        _id: lotId,\n                        name,\n                        start_date,\n                        end_date,\n                        bins = {},\n                        flags,\n                        lotNumber,\n                        process_id: processId,\n                        lotTemplateId\n                    } = currCard\n\n                    // If the card is alwready being displayed, then dont show\n                    if (warehouseCards.includes(lotId)) {\n                        return\n                    } else {\n                        warehouseCards.push(lotId)\n                    }\n\n                    const process = processes[processId]\n                    const {\n                        name: processName\n                    } = process || {}\n\n                    const count = bins[warehouseID]?.count || 0\n                    const totalQuantity = getLotTotalQuantity({ bins })\n                    const templateValues = getCustomFields(lotTemplateId, currCard)\n\n                    return (\n                        <Lot\n                            templateValues={templateValues}\n                            totalQuantity={totalQuantity}\n                            enableFlagSelector={false}\n                            lotNumber={lotNumber}\n                            processName={processName}\n                            flags={flags || []}\n                            name={name}\n                            start_date={start_date}\n                            end_date={end_date}\n                            count={count}\n                            id={lotId}\n                            index={cardIndex}\n                            onClick={() => {\n                                handleCardClicked(lotId)\n                            }}\n                            containerStyle={{ marginBottom: \"0.5rem\", width: \"80%\", margin: '.5rem auto .5rem auto' }}\n                        />\n                    )\n                })\n\n        })\n\n\n    }, [cards])\n\n\n    return (\n        <styled.Container\n            isOpen={isOpen}\n            contentLabel=\"Kick Off Modal\"\n            onRequestClose={close}\n            style={{\n                overlay: {\n                    zIndex: 500,\n                    backgroundColor: 'rgba(0, 0, 0, 0.4)'\n                },\n            }}\n        >\n            <styled.Header>\n                <styled.HeaderMainContentContainer>\n                    <styled.Title>{title}</styled.Title>\n                    <styled.CloseIcon className=\"fa fa-times\" aria-hidden=\"true\" onClick={close} />\n\n                </styled.HeaderMainContentContainer>\n                <SortFilterContainer\n                    lotFilterValue={lotFilterValue}\n                    sortMode={sortMode}\n                    setSortMode={setSortMode}\n                    sortDirection={sortDirection}\n                    setSortDirection={setSortDirection}\n                    shouldFocusLotFilter={shouldFocusLotFilter}\n                    setLotFilterValue={setLotFilterValue}\n                    selectedFilterOption={selectedFilterOption}\n                    setSelectedFilterOption={setSelectedFilterOption}\n                />\n\n\n            </styled.Header>\n\n            <styled.ContentContainer>\n                {renderAvailableLots}\n            </styled.ContentContainer>\n\n        </styled.Container>\n    )\n}\n\nexport default WarehouseModal","export const GET_DASHBOARDS = 'GET_DASHBOARDS'\nexport const GET_DASHBOARDS_STARTED = 'GET_DASHBOARDS_STARTED'\nexport const GET_DASHBOARDS_SUCCESS = 'GET_DASHBOARDS_SUCCESS'\nexport const GET_DASHBOARDS_FAILURE = 'GET_DASHBOARDS_FAILURE'\n\nexport const POST_DASHBOARD = 'POST_DASHBOARD'\nexport const POST_DASHBOARD_STARTED = 'POST_DASHBOARD_STARTED'\nexport const POST_DASHBOARD_SUCCESS = 'POST_DASHBOARD_SUCCESS'\nexport const POST_DASHBOARD_FAILURE = 'POST_DASHBOARD_FAILURE'\n\nexport const PUT_DASHBOARD = 'PUT_DASHBOARD'\nexport const PUT_DASHBOARD_STARTED = 'PUT_DASHBOARD_STARTED'\nexport const PUT_DASHBOARD_SUCCESS = 'PUT_DASHBOARD_SUCCESS'\nexport const PUT_DASHBOARD_FAILURE = 'PUT_DASHBOARD_FAILURE'\n\nexport const DELETE_DASHBOARD = 'DELETE_DASHBOARD'\nexport const DELETE_DASHBOARD_STARTED = 'DELETE_DASHBOARD_STARTED'\nexport const DELETE_DASHBOARD_SUCCESS = 'DELETE_DASHBOARD_SUCCESS'\nexport const DELETE_DASHBOARD_FAILURE = 'DELETE_DASHBOARD_FAILURE'\n\nexport const DASHBOARD_OPEN = 'DASHBOARD_OPEN'","import styled from \"styled-components\";\nimport { ModalContainerCSS, BodyContainerCSS } from '../../../../../../common_css/modal_css'\nimport {css} from 'styled-components'\n\nexport const Container = styled(ModalContainerCSS)`\n    width: 95%;\n    max-width: 75rem;\n`\n\nexport const BodyContainer = styled(BodyContainerCSS)`\n`\n\nexport const RouteListContainer = styled.div`\n    height: 100%;\n    margin-top: 2rem;\n`\n\nexport const Title = styled.h1`\n    font-family: ${props => props.theme.font.primary};\n    font-size: 2rem;\n    font-weight: 500;\n    color: ${props => props.theme.schema[props.schema].solid};\n`\n\nexport const CloseButton = styled.i`\n    position: absolute;\n    top: 0rem;\n    right: 1rem;\n    font-size: 1.5rem;\n    margin: 1rem;\n    color: ${props => props.theme.bg.senary};\n`\n\n// overwrite dashboard button container style\nexport  const ButtonContainerCss = css`\n\t// large screen style\n\n\t@media (min-width: ${props => props.theme.widthBreakpoint.mobileL}){\n\t\twidth: 100%;\n\t\tmax-width: 100%;\n    }\n\n    @media (min-width: ${props => props.theme.widthBreakpoint.tablet}){\n\t\twidth: 45%;\n\t\tmargin-left: .5rem;\n\t\tmargin-right: .5rem;\n    }\n\n`","import React, { useEffect, useState, useMemo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams, useHistory } from 'react-router-dom'\n\n// Import Styles\nimport * as styled from './route_modal.style'\nimport { theme } from \"../../../../../../theme\";\n\n// Import Utils\nimport { handleAvailableTasks } from '../../../../../../methods/utils/dashboards_utils'\nimport { isDeviceConnected } from \"../../../../../../methods/utils/device_utils\";\nimport { isRouteInQueue } from \"../../../../../../methods/utils/task_queue_utils\";\n\n// Import Components\nimport DashboardButton from '../../dashboard_buttons/dashboard_button/dashboard_button'\nimport DashboardSplitButton from '../../dashboard_buttons/dashboard_split_button/dashboard_split_button'\n\n// Import Constants\nimport { DEVICE_CONSTANTS } from '../../../../../../constants/device_constants'\nimport { ADD_TASK_ALERT_TYPE, PAGES } from \"../../../../../../constants/dashboard_constants\";\n\n// Import Actions\nimport { handlePostTaskQueue, putTaskQueue } from '../../../../../../redux/actions/task_queue_actions'\n\n\n\nconst RouteModal = (props) => {\n\n    const {\n        isOpen,\n        close,\n        handleTaskAlert\n    } = props\n\n    const params = useParams()\n    const {\n        dashboardID,\n        subPage,\n        stationID,\n        lotID,\n    } = params || {}\n\n    const dispatch = useDispatch()\n    const dispatchPostTaskQueue = (props) => dispatch(handlePostTaskQueue(props))\n\n    const stations = useSelector(state => state.stationsReducer.stations)\n    const routes = useSelector(state => { return state.tasksReducer.tasks }) || {}\n    const taskQueue = useSelector(state => state.taskQueueReducer.taskQueue)\n\n    const [error, setError] = useState(null)\n\n    // Handles moving lot to next station\n    const onMove = (deviceType, route) => {\n        close()\n        const {\n            name,\n            custom,\n        } = route || {}\n\n        const Id = route._id\n\n        // If a custom task then add custom task key to task q\n        if (Id === 'custom_task') {\n            handleTaskAlert(\n                ADD_TASK_ALERT_TYPE.TASK_ADDED,\n                \"Task Added to Queue\",\n                name\n            )\n        }\n\n        const connectedDeviceExists = isDeviceConnected()\n\n        if (!connectedDeviceExists && deviceType !== DEVICE_CONSTANTS.HUMAN) {\n            // display alert notifying user that task is already in queue\n            handleTaskAlert(\n                ADD_TASK_ALERT_TYPE.TASK_EXISTS,\n                \"Alert! No device is currently connected to run this route\",\n                `'${name}' not added`,\n            )\n        }\n\n        let inQueue = isRouteInQueue(Id, deviceType)\n\n        // add alert to notify task has been added\n        if (inQueue) {\n            // display alert notifying user that task is already in queue\n            handleTaskAlert(\n                ADD_TASK_ALERT_TYPE.TASK_EXISTS,\n                \"Alert! Task Already in Queue\",\n                `'${name}' not added`,\n            )\n\n        }\n        else {\n            dispatchPostTaskQueue({ dashboardID, routes, deviceType, taskQueue, lotID, Id, name, custom })\n\n            if (deviceType !== DEVICE_CONSTANTS.HUMAN) {\n                handleTaskAlert(\n                    ADD_TASK_ALERT_TYPE.TASK_ADDED,\n                    \"Task Added to Queue\",\n                    name\n                )\n            }\n        }\n\n    }\n\n    const renderRouteButtons = () => {\n        const stationRoutes = handleAvailableTasks(routes, stations[stationID])\n\n        return stationRoutes.map((route, ind) => {\n            const isDeviceRoute = route?.device_types.length > 1\n            const name = route.name\n            const taskID = route._id\n\n            const color = '#90eaa8'\n            const textColor = '#1c933c'\n            const iconColor = theme.main.bg.octonary\n            const iconClassName = 'fas fa-play'\n\n            if (isDeviceRoute) {\n                return (\n                    <DashboardSplitButton\n                        color={color}\n                        containerStyle={{ background: color }}\n                        titleStyle={{ color: textColor }}\n                        iconColor={iconColor}\n\n                        title={name}\n                        iconClassName={iconClassName}\n                        clickable={true}\n                        onClick={(props) => {\n                            onMove(props, route)\n                        }}\n                        hoverable={false}\n                        taskID={taskID}\n                        error={error}\n                        key={`routeButton-${ind}`}\n                    />\n                )\n            }\n            else {\n                return (\n                    <DashboardButton\n                        color={color}\n                        containerStyle={{ background: color }}\n                        titleStyle={{ color: textColor }}\n                        iconColor={iconColor}\n\n                        title={name}\n                        iconColor={\"black\"}\n                        iconClassName={iconClassName}\n                        onClick={() => onMove(DEVICE_CONSTANTS.HUMAN, route)}\n\n                        hoverable={false}\n                        taskID={taskID}\n                        disabled={false}\n                        error={error}\n                        key={`routeButton-${ind}`}\n                    />\n                )\n            }\n        })\n    }\n\n    return (\n        <styled.Container\n            isOpen={isOpen}\n            contentLabel=\"Kick Off Modal\"\n            onRequestClose={close}\n            style={{\n                overlay: {\n                    zIndex: 500,\n                    backgroundColor: 'rgba(0, 0, 0, 0.4)'\n                },\n            }}\n        >\n            <styled.BodyContainer>\n                <styled.Title schema={'routes'}>Available Routes</styled.Title>\n                <styled.CloseButton\n                    className={'fas fa-times'}\n                    onClick={() => { close() }}\n                    style={{ cursor: 'pointer' }}\n                />\n\n                <styled.RouteListContainer>\n                    {renderRouteButtons()}\n                </styled.RouteListContainer>\n\n            </styled.BodyContainer>\n        </styled.Container>\n    )\n}\n\nexport default RouteModal","export const GET_PROCESSES = 'GET_PROCESSES'\nexport const GET_PROCESSES_STARTED = 'GET_PROCESSES_STARTED'\nexport const GET_PROCESSES_SUCCESS = 'GET_PROCESSES_SUCCESS'\nexport const GET_PROCESSES_FAILURE = 'GET_PROCESSES_FAILURE'\n\nexport const POST_PROCESSES = 'POST_PROCESSES'\nexport const POST_PROCESSES_STARTED = 'POST_PROCESSES_STARTED'\nexport const POST_PROCESSES_SUCCESS = 'POST_PROCESSES_SUCCESS'\nexport const POST_PROCESSES_FAILURE = 'POST_PROCESSES_FAILURE'\n\nexport const PUT_PROCESSES = 'PUT_PROCESSES'\nexport const PUT_PROCESSES_STARTED = 'PUT_PROCESSES_STARTED'\nexport const PUT_PROCESSES_SUCCESS = 'PUT_PROCESSES_SUCCESS'\nexport const PUT_PROCESSES_FAILURE = 'PUT_PROCESSES_FAILURE'\n\nexport const DELETE_PROCESSES = 'DELETE_PROCESSES'\nexport const DELETE_PROCESSES_STARTED = 'DELETE_PROCESSES_STARTED'\nexport const DELETE_PROCESSES_SUCCESS = 'DELETE_PROCESSES_SUCCESS'\nexport const DELETE_PROCESSES_FAILURE = 'DELETE_PROCESSES_FAILURE'\nexport const EDITING_PROCESS = 'EDITING_PROCESS'\n","import { uuidv4 } from \"../methods/utils/utils\";\n\nexport const QUEUE_BIN_ID = \"QUEUE\"\nexport const FINISH_BIN_ID = \"FINISH\"\n\nexport const QUEUE_BIN_DISPLAY_NAME = \"Queue\"\nexport const FINISH_BIN_DISPLAY_NAME = \"Finish\"\n\nexport const BIN_IDS = {\n    QUEUE: QUEUE_BIN_ID,\n    FINISH: FINISH_BIN_ID\n}\n\nexport const QUEUE_THEME = {\n    ICON: \"fas fa-ellipsis-h\",\n    COLOR: \"#b642f5\",\n    ID: QUEUE_BIN_ID,\n    DISPLAY_NAME: QUEUE_BIN_DISPLAY_NAME\n\n}\nexport const FINISH_THEME = {\n    ICON: \"fas fa-box\",\n    COLOR: \"#ff8605\",\n    ID: FINISH_BIN_ID,\n    DISPLAY_NAME: FINISH_BIN_DISPLAY_NAME,\n}\n\nexport const BIN_THEMES = {\n    QUEUE: QUEUE_THEME,\n    FINISH: FINISH_THEME\n}\n\nexport const FIELD_COMPONENT_NAMES = {\n\tTEXT_BOX: \"TEXT_BOX\",\n\tTEXT_BOX_BIG: \"TEXT_BOX_BIG\",\n\tINPUT_BOX: 'INPUT_BOX',\n\tNUMBER_INPUT: \"NUMBER_INPUT\",\n\tCALENDAR_SINGLE: \"CALENDAR_SINGLE\",\n\tCALENDAR_START_END: \"CALENDAR_START_END\",\n\tTIME_SELECTOR: \"TIME_SELECTOR\",\n\tIMAGE_SELECTOR: \"IMAGE_SELECTOR\",\n\tPDF_SELECTOR: \"PDF_SELECTOR\",\n}\n\nexport const FIELD_DATA_TYPES = {\n\tSTRING: \"STRING\",\n\tEMAIL: \"EMAIL\",\n\tDATE: \"DATE\",\n\tDATE_RANGE: \"DATE_RANGE\",\n\tURL: \"URL\",\n\tINTEGER: \"INTEGER\",\n\tMOMENT: \"MOMENT\",\n\tIMAGE: \"IMAGE\",\n\tPDF: \"PDF\",\n}\n\nexport const FIELD_COMPONENT_DATA_TYPES = {\n\t[FIELD_COMPONENT_NAMES.TEXT_BOX]: FIELD_DATA_TYPES.STRING,\n\t[FIELD_COMPONENT_NAMES.TEXT_BOX_BIG]: FIELD_DATA_TYPES.STRING,\n\t[FIELD_COMPONENT_NAMES.NUMBER_INPUT]: FIELD_DATA_TYPES.INTEGER,\n\t[FIELD_COMPONENT_NAMES.CALENDAR_SINGLE]: FIELD_DATA_TYPES.DATE,\n\t[FIELD_COMPONENT_NAMES.CALENDAR_START_END]: FIELD_DATA_TYPES.DATE_RANGE,\n\t[FIELD_COMPONENT_NAMES.TIME_SELECTOR]: FIELD_DATA_TYPES.MOMENT,\n\t[FIELD_COMPONENT_NAMES.IMAGE_SELECTOR]: FIELD_DATA_TYPES.IMAGE,\n\t[FIELD_COMPONENT_NAMES.PDF_SELECTOR]: FIELD_DATA_TYPES.PDF,\n\n}\n\nexport const CONTENT = {\n    HISTORY: \"HISTORY\",\n    CALENDAR: \"CALENDAR\",\n    MOVE: \"MOVE\"\n}\n\nexport const FORM_BUTTON_TYPES = {\n    SAVE: \"SAVE\",\n    ADD: \"ADD\",\n    ADD_AND_NEXT: \"ADD_AND_NEXT\",\n    MOVE_OK: \"MOVE_OK\"\n}\n\nexport const BASIC_LOT_TEMPLATE_ID = \"BASIC_LOT_TEMPLATE\"\n\n\n\nexport const EDITOR_SIDEBAR_TYPES = {\n    FIELDS: {\n        name: \"Fields\",\n        iconName: \"fas fa-route\",\n    }\n}\n\n\n\nexport const LOT_EDITOR_SIDEBAR_OPTIONS = {\n    TEXT_BOX: {\n        component: FIELD_COMPONENT_NAMES.TEXT_BOX,\n        dataType: FIELD_DATA_TYPES.STRING\n    },\n    TEXT_BOX_BIG: {\n        component: FIELD_COMPONENT_NAMES.TEXT_BOX_BIG,\n        dataType: FIELD_DATA_TYPES.STRING\n    },\n    INPUT_BOX: {\n        component: FIELD_COMPONENT_NAMES.INPUT_BOX,\n        dataType: FIELD_DATA_TYPES.STRING\n    },\n    NUMBER_INPUT: {\n        component: FIELD_COMPONENT_NAMES.NUMBER_INPUT,\n        dataType: FIELD_DATA_TYPES.INTEGER\n    },\n    CALENDAR_SINGLE: {\n        component: FIELD_COMPONENT_NAMES.CALENDAR_SINGLE,\n        dataType: FIELD_DATA_TYPES.DATE\n    },\n    CALENDAR_START_END: {\n        component: FIELD_COMPONENT_NAMES.CALENDAR_START_END,\n        dataType: FIELD_DATA_TYPES.DATE_RANGE\n    },\n}\n\n\n\nexport const SIDE_BAR_MODES = {\n    FIELDS: {\n        name: \"Fields\",\n        iconName: \"fas fa-edit\",\n        color: \"red\"\n    },\n    TEMPLATES: {\n        name: \"Templates\",\n        iconName: \"fas fa-file-invoice\",\n        color: \"cyan\"\n    }\n}\n\nexport const TEMPLATE_FIELD_KEYS = {\n    FIELD_NAME: \"fieldName\",\n    REQUIRED: \"required\",\n    SHOW_IN_PREVIEW: \"showInPreview\"\n}\n\nexport const DEFAULT_DESCRIPTION_FIELD_ID = \"DEFAULT_DESCRIPTION_FIELD_ID\"\nexport const DEFAULT_DATES_FIELD_ID = \"DEFAULT_DATES_FIELD_ID\"\n\n\nexport const BASIC_DEFAULT_DESCIPTION_FIELD = {\n    _id: DEFAULT_DESCRIPTION_FIELD_ID,\n    ...LOT_EDITOR_SIDEBAR_OPTIONS.TEXT_BOX_BIG,\n    [TEMPLATE_FIELD_KEYS.FIELD_NAME]: \"description\",\n    [TEMPLATE_FIELD_KEYS.REQUIRED]: false,\n    [TEMPLATE_FIELD_KEYS.SHOW_IN_PREVIEW]: false,\n    key: 0,\n    showInPreview: true\n}\n\nexport const IGNORE_LOT_SYNC_WARNING = \"ignoreLotSyncWarning\"\n\nexport const BASIC_DEFAULT_DATES_FIELD = {\n    _id: DEFAULT_DATES_FIELD_ID,\n    ...LOT_EDITOR_SIDEBAR_OPTIONS.CALENDAR_START_END,\n    [TEMPLATE_FIELD_KEYS.FIELD_NAME]: \"dates\",\n    [TEMPLATE_FIELD_KEYS.REQUIRED]: false,\n    [TEMPLATE_FIELD_KEYS.SHOW_IN_PREVIEW]: false,\n    key: 1,\n    showInPreview: true\n}\n\nexport const EMPTY_DEFAULT_FIELDS = [\n    [BASIC_DEFAULT_DESCIPTION_FIELD],\n    [BASIC_DEFAULT_DATES_FIELD]\n]\n\n// same as EMPTY_DEFAULT_FIELDS, but creates new id for each field. Necessary for new templates to distinguish from basic template\nexport const getDefaultFields = () => {\n    return [\n        [{ ...BASIC_DEFAULT_DESCIPTION_FIELD, _id: uuidv4() }],\n        [{ ...BASIC_DEFAULT_DATES_FIELD, _id: uuidv4() }]\n    ]\n}\n\nexport const BASIC_LOT_TEMPLATE = {\n    fields: EMPTY_DEFAULT_FIELDS,\n    name: \"Basic\",\n    _id: BASIC_LOT_TEMPLATE_ID\n}\n\nexport const DEFAULT_NAME_DISPLAY_NAME = \"Name\"\nexport const DEFAULT_COUNT_DISPLAY_NAME = \"Quantity\"\n\nexport const DEFAULT_DISPLAY_NAMES = {\n    name: DEFAULT_NAME_DISPLAY_NAME,\n    count: DEFAULT_COUNT_DISPLAY_NAME\n}\n\nexport const NAME_FIELD_ID = \"NAME_FIELD_ID\"\nexport const COUNT_FIELD_ID = \"COUNT_FIELD_ID\"\nexport const LOT_PRIMARY_FIELD_IDS = [NAME_FIELD_ID, COUNT_FIELD_ID]\n\n\nexport const NAME_FIELD = { fieldName: \"name\", _id: NAME_FIELD_ID, dataType: FIELD_DATA_TYPES.STRING, displayName: DEFAULT_NAME_DISPLAY_NAME, label: \"Name\" }\nexport const COUNT_FIELD = { fieldName: \"bins\", _id: COUNT_FIELD_ID, fieldPath: [\"QUEUE\", \"count\"], dataType: FIELD_DATA_TYPES.INTEGER, displayName: DEFAULT_COUNT_DISPLAY_NAME, label: \"Quantity\" }\nexport const LOT_NUMBER_FIELD = { fieldName: \"lotNumber\", dataType: FIELD_DATA_TYPES.INTEGER, label: \"Lot Number\" }\n\n\nexport const REQUIRED_FIELDS = [NAME_FIELD, COUNT_FIELD]\n\nexport const FORM_STATUS = {\n    VALIDATION_START: 1,\n    VALIDATION_SUCCESS: 2,\n    VALIDATION_ERROR: 3,\n    CREATE_START: 4,\n    CREATE_SUCCESS: 5,\n    CREATE_ERROR: 6,\n    WAITING: 7,\n    CANCELLED: 8,\n    NOT_STARTED: 9,\n}\n\n\nexport const defaultBins = {\n    \"QUEUE\": {\n        count: 0\n    },\n}\n\nexport const createBin = (binId) => {\n\treturn {\n\t\t[binId]: {\n\t\t\tcount: 0\n\t\t}\n\t}\n}\n\nexport const getDefaultBins = (initialBin) => {\n\treturn initialBin ? {\n\t\t...createBin(initialBin)\n\t} : {\n\t\t...createBin(QUEUE_BIN_ID)\n\t}\n}\n\nexport const FLAG_OPTIONS = {\n    0: {\n        color: \"#876CDD\",\n        id: 0\n    },\n    1: {\n        color: \"#6ca6dd\",\n        id: 1\n    },\n    2: {\n        color: \"#53e690\",\n        id: 2\n    },\n    3: {\n        color: \"#fff047\",\n        id: 3\n    },\n    4: {\n        color: \"#ff9e54\",\n        id: 4\n    },\n    5: {\n        color: \"#ff5454\",\n        id: 5\n    },\n}\n\nexport const SORT_DIRECTIONS = {\n    ASCENDING: {\n        color: \"#db2100\",\n        id: 0,\n        iconClassName: \"fas fa-arrow-up\"\n    },\n    DESCENDING: {\n        color: \"#1a00c2\",\n        id: 1,\n        iconClassName: \"fas fa-arrow-down\"\n    }\n}\n\n\n\nexport const LOT_FILTER_OPTIONS = {\n    name: { ...NAME_FIELD, primary: true },\n    flags: {\n        label: \"Flags\", primary: true\n    },\n    lotNumber: { ...LOT_NUMBER_FIELD, primary: true }\n}\n\nexport const LOT_SORT_OPTIONS = {\n    name: { ...NAME_FIELD, primary: true },\n    quantity: { ...COUNT_FIELD, primary: true, fieldName: \"count\" },\n    lotNumber: { ...LOT_NUMBER_FIELD, primary: true }\n}\n","import styled, { css } from 'styled-components'\nimport * as commonCss from \"../../common_css/common_css\";\nimport {iconButtonCss} from \"../../common_css/common_css\";\nimport Modal from 'react-modal';\nimport { isMobile } from \"react-device-detect\"\n\n// Modal.setAppElement('document');\n\nexport const containerCss = `\n  position: absolute;\n    transition: backdrop-filter 3s ease;\n    //width: 98%;\n  \twidth: ${isMobile ? '98%' : 'auto'};\n    height: ${isMobile ? '98%' : 'auto'};\n    max-height: 98%;\n    max-width: 98%;\n    //min-height: 50rem;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%,-50%);\n  outline: none !important;\n\n    z-index: 5000;\n    border-radius: 1rem;\n    box-shadow: 0 0.2rem 0.4rem 0rem #303030;\n    display: flex;\n    /* flex-flow: row; */\n    flex-direction: column;\n    //background-color: white;\n\n    //overflow-y: scroll;\n     overflow: hidden;\n\n    ::-webkit-scrollbar {\n        display: none;  /* Safari and Chrome */\n    }\n`\nexport const ModalContainer = styled(Modal)`\n    ${containerCss};\n`\n\n\n\n\nexport const HilButtonContainer = styled.div`\n    \n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    justify-content: center;\n    align-items: center;\n    padding: 1rem 2rem;\n  \n    div:not(:first-child) {\n        margin: 0 0rem 0 2rem;\n    }\n  \n    @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n        flex-direction: column;\n        div:not(:first-child) {\n          margin-top: .5rem;\n          margin: .5rem 0rem 0 0rem;\n        }\n    }\n`\n\nexport const InnerHeader = styled.div`\n    align-self: stretch;\n    display: flex;\n    justify-content: flex-end;\n    margin: .5rem 0;\n    padding: 0 1rem;\n`\n\n\nexport const Body = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    flex: 1;\n\n    width: 100%;\n\n    overflow: hidden;\n    \n    background: ${props => props.theme.bg.secondary};\n    \n    \n`\n\nexport const LotInfoContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  align-self: stretch;\n  margin: 0 2rem 1rem 2rem;\n  \n`\n\nexport const InnerContentContainer = styled.div`\n    display: flex;\n    position: relative;\n    flex-direction: column;\n    align-self: stretch;\n    flex: 1;\n    overflow: hidden;\n    align-items: center;\n    margin: 0 1rem 0rem 1rem;\n    border: 1px solid #cacaca;\n    justify-content: space-between;\n    border-radius: 2rem;\n    background: ${props => props.theme.bg.primary};\n  //padding-top: 1rem;\n`\n\n\n\nexport const SubtitleContainer = styled.div`\n    display: flex;\n    width: 100%;\n    justify-content: center;\n  \tmargin-bottom: 1rem;\n    //padding-bottom: 1rem;\n    \n`\n\nexport const HilMessage = styled.h3`\n    display: flex;\n    font-family: ${props => props.theme.font.primary};\n    justify-content: center;\n    align-self: center;\n\n    //padding-top: 1rem;\n    //margin-top: 3rem;\n    padding: 0;\n    margin: 0;\n    font-size: ${props => props.theme.fontSize.sz1};\n    text-align: center;\n    // white-space: nowrap;\n    // width: 80rem;\n`\n\nexport const fractionButtonCss = css`\n    margin: 1rem 0;\n    height: 5rem;\n    max-width: 50rem;\n`\n\nexport const unloadButtonCss = css`\n\theight: 5rem;\n\tmax-width: 25rem;\n  align-self: center;\n\twidth: 25rem;\n  //align-self: stretch;\n  //flex: 1;\n\tjustify-content: center;\n`\n\nexport const HilSubtitleMessage = styled.h4`\n    display: flex;\n    font-family: ${props => props.theme.font.primary};\n    justify-content: center;\n    margin-bottom: 1.5rem;\n    //margin-top: 3rem;\n    padding: 0;\n    margin: 0;\n    font-size: 1.6rem;\n    text-align: center;\n`\n\nconst emphasisCss = css`\n\tfont-weight: bold;\n  font-style: oblique;\n  \n`\n\nexport const InfoText = styled.span`\n  white-space: pre-wrap;\n    display: flex;\n    font-family: ${props => props.theme.font.primary};\n    justify-content: center;\n    font-size: ${props => props.theme.fontSize.sz3};\n    color: ${props => props.theme.textColor};\n    text-align: center;\n  \n  ${props => props.emphasize && emphasisCss};\n  \n  \n  \t//max-width: 80%;\n  //margin-top: 1rem;\n`\n\nexport const HilTimer = styled.p`\n    padding: 0;\n    margin: 0;\n    display: flex;\n    justify-content: center;\n    font-family: ${props => props.theme.font.primary};\n    font-weight: bold;\n    font-size: ${props => props.theme.fontSize.sz2};\n    color: ${props => props.theme.fg.primary};\n  opacity: ${props => props.visible ? 1 : 0};\n`\n\n\nexport const ColumnContainer = styled.div`\n  display: flex;\n    flex-direction: column;\n`\n\nexport const Header = styled.div`\n    display:flex;\n    flex-direction: row;\n    width: 100%;\n    background: ${props => props.theme.bg.secondary};\n    //box-shadow: ${props => props.theme.cardShadow};\n    align-items: center;\n    justify-content: space-around;\n    align-items: center;\n    padding: .5rem 1rem;\n`\n\n\nexport const HilIcon = styled.i`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    //margin: auto auto;\n    color:  ${props => props.color};\n    fill: green;\n    font-size: 2.5rem;\n    margin-right: 1rem;\n    &:hover {\n        cursor: pointer;\n    }\n\n    &:active{\n        filter: brightness(85%)\n    }\n`\n\n","export const getMessageFromError = (err) => {\n    if(err) {\n\n        // err is array\n        if( Array.isArray(err) ) {\n            const firstErr = err[0] // get first item from arr and call recursively\n            return getMessageFromError(firstErr)\n\n        }\n\n        // err is object\n        if(typeof(err) === \"object\") {\n            const firstErr = Object.values(err) // convert to arr and call recursively\n            return getMessageFromError(firstErr)\n        }\n\n        // err is string - return\n        if(typeof(err) === \"string\") {\n            return err;\n        }\n    }\n\n    // default message\n    return null\n}\n\nexport const getSubmitDisabled = ({errors, touched, isSubmitting, submitCount}) => {\n    const errorCount = Object.keys(errors).length > 0 // get number of field errors\n    const touchedCount = Object.values(touched).length // number of touched fields\n    return ((errorCount > 0)  )\n}","import styled, {css} from 'styled-components'\nimport Modal from 'react-modal';\nimport {LightenDarkenColor} from \"../../../../methods/utils/color_utils\";\n\n\nconst borderGlowCss = css`\n    --border-width: .1rem;\n    background: none;\n\n    @keyframes moveGradient {\n        50% {\n          background-position: 100% 50%;\n        }\n      }\n\n    border-radius: var(--border-width);\n\n    &::after {\n    position: absolute;\n    content: \"\";\n    top: calc(-1 * var(--border-width));\n    left: calc(-1 * var(--border-width));\n    z-index: -1;\n    width: calc(100% + var(--border-width) * 2);\n    height: calc(100% + var(--border-width) * 2);\n    background: linear-gradient(\n        60deg,\n        /* hsl(224, 85%, 66%), */\n        /* hsl(269, 85%, 66%), */\n        /* hsl(314, 85%, 66%), */\n        /* hsl(359, 85%, 66%), */\n        hsl(44, 85%, 66%),\n        hsl(89, 85%, 66%),\n        hsl(134, 85%, 66%),\n        hsl(179, 85%, 66%)\n    );\n    background-size: 300% 300%;\n    background-position: 0 50%;\n    border-radius: calc(2 * var(--border-width));\n    animation: moveGradient 4s alternate infinite;\n}\n`\n\n\nexport const TextboxDiv = styled.div`\n    background-color: ${props => props.theme.bg.primary};\n    border: none;\n    font-size: ${props => props.theme.fontSize.sz4};\n    font-family: ${props => props.theme.font.primary};\n    font-weight: 500;\n    min-height: 2rem;\n    display: flex;\n    flex-grow: 1;\n    color: ${props => props.theme.bg.octonary};\n    padding: .5rem;\n    border-radius: .5rem;\n\n    box-shadow: 0 0.1rem 0.2rem 0rem rgba(0,0,0,0.1) !important;\n    border-bottom: 2px solid ${props => props.theme.bg.quinary};\n\n    &:focus {\n        // background-color: ${props => LightenDarkenColor(props.theme.bg.quinary, 10)};\n        border-bottom: 2px solid ${props => !!props.schema ? props.theme.schema[props.schema].solid : props.theme.fg.primary};\n        color: ${props => props.theme.bg.octonary};\n        outline: none !important;\n    }\n\n    &::placeholder {\n        font-family: ${props => props.theme.font.secondary};\n        color: ${props => props.theme.bg.senary};\n    }\n`;\n\nexport const Container = styled(Modal)`\n\toutline: none !important;\n\toutline-offset: none !important;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translate(-50%, -50%);\n\tright: auto;\n\tbottom: auto;\n\n\tposition: absolute;\n\n\tz-index: 50;\n\n\tmin-width: 30rem;\n    max-width: 95%;\n    min-height: 10rem;\n    max-height: 95%;\n\n\tbackground: ${props => props.theme.bg.primary};\n\n\tdisplay: flex;\n\tflex-direction: column;\n\n\tcolor: ${props => props.theme.bg.octonary};\n\tborder-radius: 0.4rem;\n\toverflow: hidden;\n`;\n\nexport const HeaderContainer = styled.div`\n\twidth: 100%;\n\tdisplay: flex;\n\tflex-direction: column;\n\tborder-width: 0;\n\tborder-bottom: 2px solid ${props => props.theme.bg.quinary};\n\tmargin-bottom: 2rem;\n`;\n\nexport const Header = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\tpadding: 0;\n\tmargin: 0;\n\tmax-height: 5rem;\n\tbackground: ${props => props.theme.bg.primary};\n    border-bottom: 2px solid ${props => props.theme.bg.secondary};\n\n`\nexport const Label = styled.span`\n\tpadding-left: 1rem;\n\tfont-size: ${props => props.theme.fontSize.sz3};\n\tmargin-bottom: .25rem;\n`\nexport const CloseIcon = styled.i`\n    font-size: 1.4rem;\n    margin: 1rem;\n    color: ${props => props.theme.bg.quaternary};\n    cursor: pointer;\n`\n\nexport const Title = styled.h2`\n\tflex: 2;\n\theight: 100%;\n\tmin-height: 100%;\n\tmargin: 1rem;\n\tpadding: 0;\n\ttext-align: left;\n\tdisplay: inline-flex;\n\tjustify-content: flex-start;\n\talign-items: center;\n\n\tfont-size: ${props => props.theme.fontSize.sz2};\n\tfont-weight: ${props => props.theme.fontWeight.bold};\n`;\n\nexport const TextContainer = styled.div`\n\twidth: 100%;\n\tdisplay: flex;\n\tflex-direction: column;\n\tmargin-bottom: 1.5rem;\n`;\n\nexport const BodyContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tpadding: 1rem;\n\tflex: 1;\n\tjustify-content: space-between;\n    text-align: center;\n\toverflow: hidden;\n\n\tbackground: ${props => props.theme.bg.primary};\n`\n\nexport const ButtonForm = styled.div`\n\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: center;\n\tmin-height: fit-content;\n\n    margin-top: 2rem;\n`;\n\nexport const IconSelectorContainer = styled.div`\n\tbackground: ${props => props.theme.bg.primary};\n\toverflow: auto;\n\tmin-height: 2rem;\n\twidth: 100%;\n\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tflex-wrap: wrap;\n\tborder-radius: .5rem;\n`\n\nexport const ContentContainer = styled.div`\n\tbackground: ${props => props.theme.bg.primary};\n\t// border-radius: 1rem;\n\tdisplay: flex;\n\tflex-direction: column;\n\toverflow: hidden;\n\tmargin-bottom: 1rem;\n\talign-items: center;\n`\nexport const ReportButtonsContainer = styled.div`\n\tdisplay: flex;\n\n\tflex-direction: column;\n\talign-items: center;\n\t// justify-content: center;\n\tflex-wrap: nowrap;\n\toverflow: auto;\n\tmin-height: 5rem;\n\twidth: 100%;\n`\n\nexport const ConditionText = styled.span`\n\tfont: ${props => props.theme.font.primary};\n\tfont-size: ${props => props.theme.fontSize.sz3};\n\tmax-width: 100 %;\n\toverflow: hidden;\n\ttext-overflow: ellipsis;\n`\n\nexport const RightContentContainer = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: ${props => props.theme.bg.primary};\n    width: 4rem;\n    border-left: 1px solid ${props => props.theme.bg.secondary};\n    height: 100%;\n    // background-color: ${props => props.theme.bg.septenary};\n\n    // padding-left: 1rem;\n    // border-top-right-radius: 0.6rem;\n    // border-bottom-right-radius: 0.6rem;\n\n\n`\n\nexport const ButtonContainer = styled.button`\n  position: relative;\n  user-select: none;\n\n  // flex layout\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  // flex-grow: 1;\n  width: 90%;\n  overflow: hidden;\n  height: 4rem;\n  min-height: 4rem;\n  line-height: 3rem;\n  min-width: 80%;\n\n  background: ${props => `linear-gradient(180deg,\n                            ${LightenDarkenColor(props.background, 20)} 0%,\n                            ${props.background} 50%,\n                            ${LightenDarkenColor(props.background, -20)} 100%)`};\n  border-radius: 0.6rem;\n  padding: 0;\n\n\n  // margins\n  margin: .5rem 0 .5rem 0;\n\n  // padding\n  // padding: 0.5rem 1rem 0.5rem 1rem;\n\n  outline: none;\n  &:focus {\n    outline: none;\n  }\n\n  letter-spacing: 1.5px;\n  border: none;\n  box-shadow: ${props => props.clickable ? 'none' : `2px 2px 2px rgba(0, 0, 0, 0.5)`};\n  transition: all 0.1s ease 0s;\n  cursor: pointer;\n  outline: none;\n\n  &:hover {\n    ${props => props.hoverable && !props.clickable &&\n\t{\n\t\tboxShadow: \"3px 3px 3px rgba(0, 0, 0, 0.5)\",\n\t\ttransform: \"translateY(-1px)\",\n\t}\n}\n  }\n\n  ${props => props.clickable && !props.disabled &&\n\t`&:active {\n      background: ${`linear-gradient(180deg,\n          ${LightenDarkenColor(props.background, -20)} 0%,\n          ${props.background} 50%,\n          ${LightenDarkenColor(props.background, 20)} 100%)`\n\t}\n    }`\n}\n\n  ${props => props.disabled &&\n\t{\n\t\tcolor: props.theme.bg.quaternary,\n\t\tbackground: `linear-gradient(180deg, rgba(255,255,255,0.4) 0%, rgba(255,255,255,0.4) 100%), ${LightenDarkenColor(props.background, -60)}`,\n\t\tpointerEvents: \"none\",\n\t}\n}\n\n    // --border-width: 3px;\n    ${props => props.borderGlow &&\n\tborderGlowCss\n}\n\n${props => props.css};\n\n`\n\nexport const AddNewButtonContainer = styled.div`\n\tdisplay: flex;\n\tjustify-content: center;\n\twidth: 100%;\n\tborder-bottom:  ${props => props.showBorder && `1px solid` + props.theme.bg.secondary};\n`\n\nexport const ColorFieldContainer = styled.div`\n\tposition: relative;\n\n`\n\n\nexport const Icon = styled.i`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin: auto auto;\n    color: green;\n    fill: green;\n    font-size: 7rem;\n    width: 14rem;\n    &:hover {\n        cursor: pointer;\n    }\n\n    &:active{\n        filter: brightness(85%)\n    }\n`\n","import React, {useEffect, useState} from \"react\";\nimport Modal from 'react-modal';\nimport {useDispatch, useSelector} from \"react-redux\";\n\n\nimport Button from \"../../../basic/button/button\";\nimport Textbox from \"../../../basic/textbox/textbox\";\n\n// actions\n\n// styles\nimport * as styled from './confirm_delete_modal.style'\n\nconst ConfirmDeleteModal = (props) => {\n\n    const {\n        isOpen,\n        title,\n        close,\n        dashboard,\n        onSubmit,\n        handleClose,\n        handleOnClick1,\n        handleOnClick2,\n        button_1_text,\n        button_2_text,\n        children\n    } = props\n\n    return (\n        <styled.Container\n            isOpen={isOpen}\n            contentLabel=\"Confirm Delete Modal\"\n            onRequestClose={close}\n            style={{\n                overlay: {\n                    zIndex: 500,\n                    backgroundColor: 'rgba(0, 0, 0, 0.4)'\n                },\n                content: {\n\n                }\n            }}\n        >\n            <styled.Header>\n                <styled.Title>{title}</styled.Title>\n\n                <styled.CloseIcon className=\"fa fa-times\" aria-hidden=\"true\" onClick={handleClose}/>\n            </styled.Header>\n            <styled.BodyContainer>\n                <styled.ContentContainer>\n                    {children}\n                </styled.ContentContainer>\n\n                This action cannot be undone\n\n                <styled.ButtonForm>\n\n                    <Button\n                        tertiary\n                        style={{minWidth: '10rem'}}\n                        schema={\"delete\"}\n                        onClick={handleOnClick2}\n                        label={button_2_text}\n                        type=\"button\"\n                    />\n                    <Button\n                        secondary\n                        style={{minWidth: '10rem'}}\n                        schema={\"delete\"}\n                        onClick={handleOnClick1}\n                        label={button_1_text}\n                        type=\"button\"\n                    />\n\n                </styled.ButtonForm>\n\n            </styled.BodyContainer>\n        </styled.Container>\n    );\n};\n\nexport default ConfirmDeleteModal\n","import styled, {css} from 'styled-components'\n\nexport const containerLayout = css`\n\tdisplay: flex;\n  \tflex-direction: column;\n  \tflex: 1;\n  \talign-self: stretch;\n`\n\nexport const columnRowLayout = css`\n\talign-self: stretch;\n`\n\nexport const bodyStyle = css`\n  background: ${props => props.theme.bg.primary};\n`\n\nexport const headerStyle = css`\nz-index: 10;\n  background: ${props => props.theme.bg.secondary};\n  box-shadow: 0px 0px 6px 1px rgba(0,0,0,0.2);\n`\n\nexport const footerStyle = css`\n  background: ${props => props.theme.bg.secondary};\n`\n\nexport const textSpanStyle = css`\n  margin: 0;\n  padding: 0;\n  text-align: center;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  \n`","import React from 'react'\nimport uuid from 'uuid'\n\nconst positionColor = '#2adba6';\n\nexport const PositionTypes = {\n\n    /**\n     * Heads up, currently there are 2 different svg rectangles being used\n     * One thats width is 200 and height is 320\n     * One thats width is 378 and height 236\n     *\n     * Need to unify this and make all of them standard\n     * Probably use the 200 by 320 since you don't need to add a 'y' offset to the svg\n     *\n     *  */\n\n    shelf_position: {\n        svgPath:\n            <svg>\n                <rect fill='transparent' x=\"100\" y=\"40\" width=\"200\" height=\"320\" rx=\"30\" transform=\"translate(400 0) rotate(90)\" strokeMiterlimit=\"10\" strokeWidth=\"20\" />\n                <g y=\"65\" transform=\"scale(0.87) translate(35, 100)\">\n                    <path d=\"M263.53,56.31l33,47a10,10,0,0,1-8.18,15.74h-66a10,10,0,0,1-8.19-15.74l33-47A10,10,0,0,1,263.53,56.31Z\" />\n                    <path d=\"M142.71,56.31l33,47a10,10,0,0,1-8.19,15.74h-66a10,10,0,0,1-8.18-15.74l33-47A10,10,0,0,1,142.71,56.31Z\" />\n                \n                    <circle cx=\"255.44\" cy=\"146.56\" r=\"12.5\" />\n                    <circle cx=\"255.44\" cy=\"181.56\" r=\"7.5\" />\n                    <circle cx=\"134.44\" cy=\"146.56\" r=\"12.5\" />\n                    <circle cx=\"134.44\" cy=\"181.56\" r=\"7.5\" />\n                </g>\n            </svg>,\n        attributes:\n        {\n            schema: 'position',\n            type: 'shelf_position',\n            parent: null,\n            new: true,\n        },\n        color: positionColor,\n\n    },\n\n    charger_position: {\n        svgPath:\n            <svg>\n                <path d=\"M344.75,131.18l-47,33A10,10,0,0,1,282,156V90a10,10,0,0,1,15.75-8.18l47,33A10,10,0,0,1,344.75,131.18Z\" />\n                <rect fill='none' strokeMiterlimit='10' strokeWidth='20px' x=\"5\" y=\"5\" width=\"378\" height=\"236\" rx=\"30\" />\n                <path d=\"M251,171.13c-2.45,3.47-4.09,3.9-8.1,2.12l-73.27-32.63c-.72-.32-1.45-.61-2.47-1v3.15q0,12.9,0,25.81c0,4.89-3,6.91-7.46,5L31.14,118.34c-2.83-1.22-4.08-3.12-3.65-5.47s2.19-3.61,5.09-3.91q29.51-3,59-6c9-.91,17.93-1.86,26.91-2.63,1.81-.15,2.1-.82,2.06-2.38-.09-3.65,0-7.29,0-10.94,0-4.26,1.43-5.77,5.64-6.1q32.61-2.53,65.23-5.1c17.69-1.36,35.38-2.65,53.06-4.08,2.93-.23,5.1.52,6.54,3.12Z\" />\n                <rect fill='transparent' strokeMiterlimit='10' strokeWidth='20px' x=\"10\" y=\"10\" width=\"378\" height=\"236\" rx=\"30\" />\n            </svg>,\n        color: '#fbd34e',\n\n    },\n\n    cart_position: {\n        svgPath:\n            <>\n                <rect fill='transparent' x=\"100\" y=\"40\" width=\"200\" height=\"320\" rx=\"30\" transform=\"translate(400 0) rotate(90)\" strokeMiterlimit=\"10\" strokeWidth=\"20\" />\n                <path d=\"M315.5,200.87l-64,36.95A1,1,0,0,1,250,237v-73.9a1,1,0,0,1,1.5-.87l64,36.95A1,1,0,0,1,315.5,200.87Z\" strokeMiterlimit=\"10\" strokeWidth=\"10\" />\n                <circle cx=\"200\" cy=\"200\" r=\"15\" />\n                <circle cx=\"150\" cy=\"200\" r=\"10\" />\n                <circle cx=\"102.5\" cy=\"200\" r=\"7.5\" />\n            </>,\n        attributes:\n        {\n            schema: 'position',\n            type: 'cart_position',\n            parent: null,\n            new: true,\n        },\n        color: positionColor,\n    },\n\n    temporary_cart_position: {\n        svgPath:\n            <>\n                <rect fill='transparent' x=\"100\" y=\"40\" width=\"200\" height=\"320\" rx=\"30\" transform=\"translate(400 0) rotate(90)\" strokeMiterlimit=\"10\" strokeWidth=\"20\" />\n                <path d=\"M315.5,200.87l-64,36.95A1,1,0,0,1,250,237v-73.9a1,1,0,0,1,1.5-.87l64,36.95A1,1,0,0,1,315.5,200.87Z\" strokeMiterlimit=\"10\" strokeWidth=\"10\" />\n                <circle cx=\"200\" cy=\"200\" r=\"15\" />\n                <circle cx=\"150\" cy=\"200\" r=\"10\" />\n                <circle cx=\"102.5\" cy=\"200\" r=\"7.5\" />\n            </>,\n        attributes:\n        {\n            schema: 'temporary_position',\n            type: 'cart_position',\n            parent: null,\n            new: true,\n        },\n        color: '#6283f0',\n    },\n\n    // human_position: {\n    //     svgPath:\n    //         // <svg y=\"70\">\n    //         //     <rect fill='transparent' strokeMiterlimit='10' strokeWidth='20px' x=\"10\" y=\"10\" width=\"378\" height=\"236\" rx=\"30\" />\n    //         //     <path d=\"M194,123a49.63,49.63,0,1,0-49.62-49.63A49.62,49.62,0,0,0,194,123Zm34.74,12.41h-6.48a67.51,67.51,0,0,1-56.52,0h-6.48a52.12,52.12,0,0,0-52.1,52.1v16.13a18.61,18.61,0,0,0,18.61,18.61H262.23a18.61,18.61,0,0,0,18.61-18.61V187.51A52.12,52.12,0,0,0,228.74,135.41Z\" />\n    //         // </svg>,\n    //         <svg y=\"50\" x='50'>\n    //             <rect width=\"300\" height=\"300\" rx=\"30\" />\n    //             <path fill='#3B3C43' d=\"M150,150A56.07,56.07,0,1,0,93.94,93.94,56.05,56.05,0,0,0,150,150Zm39.24,14h-7.31a76.32,76.32,0,0,1-63.86,0h-7.31a58.88,58.88,0,0,0-58.87,58.86V241.1a21,21,0,0,0,21,21H227.09a21,21,0,0,0,21-21V222.88A58.88,58.88,0,0,0,189.24,164Z\" />\n    //         </svg>,\n    //     attributes:\n    //     {\n    //         schema: 'station',\n    //         type: 'human',\n    //         parent: null,\n    //         new: true,\n    //     },\n    //     color: '#5eec33',\n    // },\n\n}\n\nexport const newPositionTemplate = (name, type, parent, map_id) => {\n\n    return {\n        name: name,\n        schema: 'position',\n        type: type,\n        temp: true,\n        new: true,\n        pos_x: 0,\n        pos_y: 0,\n        rotation: 0,\n        x: 0,\n        y: 0,\n        parent: parent,\n        _id: uuid.v4(),\n        map_id: map_id,\n    }\n}\n","export const convertD3ToReal = ([x, y], d3) => {\n\n    const pos_x = d3.mapResolution * (x - d3.translate[0]) / d3.scale\n    const pos_y = d3.mapResolution * -(((y - d3.translate[1]) / d3.scale) - d3.naturalDims.height)\n\n    return [pos_x, pos_y]\n}\n\nexport const convertRealToD3 = ([pos_x, pos_y], d3) => {\n    const x = d3.translate[0] + d3.scale * pos_x / (d3.mapResolution)\n    const y = d3.translate[1] + d3.scale * (d3.naturalDims.height - (pos_y / d3.mapResolution))\n\n    return [x, y]\n}\n","import styled, { css } from \"styled-components\";\nimport {commonClickableIcon, iconButtonCss} from \"../../../../../common_css/common_css\";\n\n// the margin bottom is needed for items in a flex-wrap container in order to maintain spacing when wrapped.\n// don't change unless you adjust everything else accordingly...\nconst flexItemCss = css`\n  margin-bottom: 1rem;\n`\n\n// the margin bottom is necessary for spacing when wrapped. Don't change unless you know what you're doing...\nconst flexContainerCss = css`\n\tmargin-bottom: -1rem;\n\tflex-wrap: wrap;\n`\n\nconst scrollCss = css`\n::-webkit-scrollbar {\n        width: 10px;\n        height: 5px;\n        margin: 1rem;\n        background: transparent;\n    }\n\n    /* Track */\n    ::-webkit-scrollbar-track {\n        background: rgba(175,175,175,0.75);\n    }\n\n    ::-webkit-scrollbar-track:hover {\n        background: rgba(175,175,175,0.6);\n    }\n\n    /* Handle */\n    ::-webkit-scrollbar-thumb {\n        background: #27272b;\n        border-radius: .5rem;\n    }\n\n    /* Handle on hover */\n    ::-webkit-scrollbar-thumb:hover {\n        background: #555;\n\n    }\n`\n\nexport const SortFilterContainer = styled.div`\n\tflex: 1;\n\tdisplay: flex;\n\tflex-wrap: wrap;\n`\n\nexport const Container = styled.div`\n  ${flexContainerCss}; // uses flex-wrap. Don't change unless you know what you're doing...\n  display: flex;\n  justify-content: space-between;\n  flex-grow: 1;\n  z-index: 20;\n  position: relative;\n  flex-direction: row;\n  align-items: flex-end;\n`\n\nexport const ColumnContainer = styled.div`\n  display: flex;\n  margin-right: 1rem;\n  align-items: flex-start;\n  justify-content: space-between;\n  flex-direction: column;\n  background: ${props => props.theme.bg.secondary};\n  padding: .25rem 1rem 0 1rem;\n  border-radius: .4rem;\n  \n  height: fit-content;\n  \n  \n  \n  margin-bottom: 1rem;\n  \n`\n\nexport const ExpandContractIcon = styled.button`\n\t${iconButtonCss};\n  margin-right: .5rem;\n  color: ${props => props.theme.textColor};\n`\n\nexport const Description = styled.span`\n  color: ${props => props.theme.textColor};\n  white-space: nowrap;\n  ${props => props.css && props.css};\n  font-size: ${props => props.theme.fontSize.sz4};\n  //margin-bottom: .25rem;\n`\n\nexport const ContentContainer = styled.div`\n  display: flex;\n  position: relative;\n  height: fit-content;\n  align-items: center;\n  flex: 1;\n  align-self: stretch;\n  margin-top: .25rem;\n  margin-bottom: -1rem;\n`\n\n\n\nexport const OptionContainer = styled.div`\n\t${flexItemCss};\t// this element is used in flex-wrap containers - don't remove unless you adjust everything else accordingly...\n\talign-self: stretch;\n\tdisplay: flex;\n\talign-items: center;\n`\n\n// the margin bottom is needed for flex-wrap spacing. Don't change unless you adjust everything else accordingly...\nexport const ItemContainer = styled.div`\n\t${flexItemCss};\t// this element is used in flex-wrap containers - don't remove unless you adjust everything else accordingly...\n\tdisplay: flex;\n\talign-items: center;\n  flex: 1;\n\t\n\t@media (max-width: ${props => props.theme.widthBreakpoint.laptop}) {\n\t\tflex-wrap: wrap;\n\t}\n  \n  \n`\n\nexport const FlagsContainer = styled.div`\n\tdisplay: flex;\n  overflow-x: auto;\n  flex: 1;\n  \n  ${scrollCss};\n`\n\nexport const rotateButtonContainerCss = css`\n  border-top-right-radius: 0.2rem;\n  border-bottom-right-radius: 0.2rem;\n  box-shadow: 0 0.1rem 0.2rem 0rem rgba(0,0,0,0.1);\n  background: ${props => props.theme.bg.tertiary};\n`\n\nexport const rotateButtonIconCss = css`\n`\n\nexport const ArrowContainer = styled.div`\n\tdisplay: flex;\n\tflex: 4;\n\tjustify-content: center;\n\talign-items: center;\n`\n\nexport const Spacer = styled.div`\n\tflex: 1;\n`\n\nconst selectedCss = css`\n\tbackground: ${props => props.theme.bg.secondary};\n`\n\nexport const FlagButton = styled.button`\n\t${iconButtonCss};\n\t${commonClickableIcon};\t\n\t${props => props.selected && selectedCss};\n`\n\nexport const ArrowButton = styled.button`\n\t${iconButtonCss};\n\t${commonClickableIcon};\t\n\t${props => props.selected && selectedCss};\n`\n\n","import styled from 'styled-components'\nimport CloseOutlinedIcon from '@material-ui/icons/CloseOutlined';\nimport {RGB_Linear_Shade, hexToRGBA, LightenDarkenColor} from \"../../../../../../../methods/utils/color_utils\";\nimport * as pageStyle from \"../../../../../../widgets/widget_pages/dashboards_page/dashboards_header/dashboards_header.style\"\nimport {glow, goodGlow} from \"../../../../../../../common_css/common_css\";\n\n\nexport const FooterContainer = styled.div`\n\twidth: 100%;\n\tdisplay: flex;\n\toverflow-x: scroll;\n\toverflow-y: hidden;\n\tpadding: 1rem;\n\tborder-top: 1px solid ${props => props.theme.bg.quaternary};\n\tbackground: ${props => props.theme.bg.tertiary};\n`\n\n// export const\n\nexport const Title = styled(pageStyle.Title)`\n    margin: 0;\n    padding: 0;\n    \n    font-size: ${props => props.isSmall && props.theme.fontSize.sz2};\n    \n    \n`\nexport const Header = styled(pageStyle.Header)`\n    justify-content: center;\n`\n\nexport const TitleText = styled.h1`\n  font-family: ${props => props.theme.font.primary};\n  color: ${props => props.theme.bg.octonary};\n  font-size: 1.2rem;\n  margin-top: 1.5rem;\n`\n\nexport const Container = styled.div`\n\n    \n    display: flex;\n    flex-direction: column;\n    flex-grow: 1;\n    align-items: center;\n    z-index: 1;\n    overflow: hidden;\n    flex: 1;\n    background: ${props => LightenDarkenColor(props.theme.bg.quaternary, 80)};\n  padding: 0;\n    \n`\n\nexport const Footer = styled.div`\n    align-self: stretch;\n    background: ${props => props.theme.bg.quinary};\n    display: flex;\n    justify-content: center;\n    border-top: 1px solid black;\n    padding: .25rem 0;\n`\n\n\n\nexport const CloseButton = styled(CloseOutlinedIcon)`\n\tz-index: 5;\n`\n\nexport const LotTemplateButton = styled.div`\n\n  display: flex;\n  align-items: center;\n  width: auto;\n  height: 3rem;\n  text-overflow: ellipsis;\n  justify-content:  flex-start;\n  background: transparent;\n  padding: 0rem 1rem;\n\n  border-radius: 0.5rem;\n  border: ${props =>  props.error ? '0.1rem solid red' : 'none'};\n\n  box-shadow: ${props => props.theme.cardShadow};\n  cursor: pointer;\n\n  background: ${props => props.isSelected ? props.theme.schema.lots.solid : props.theme.bg.primary};\n\n  margin-bottom: 1rem;\n`\nexport const TemplateIcon = styled.div`\n\tfont-size: 1.6rem;\n  \tposition: relative;\n  \tcolor: ${props => props.isSelected ? props.theme.bg.primary : props.theme.bg.octonary};\n    margin-right: 1rem;\n  \n`\nexport const EditTemplateIcon = styled.button`\n  color: ${props => props.theme.bg.tertiary};\n\tbackground: none;\n\toutline: none !important;\n\tfont-size: 1.6rem;\n\tright: 1rem;\n\tborder: none;\n`\n\nexport const Row = styled.div`\n\tdisplay: flex;\n`\n\nexport const TemplateName = styled.span`\n\tfont-size: 1.5rem;\n  align-self: center;\n  color: ${props => props.isSelected ? props.theme.bg.primary : props.theme.bg.octonary};\n  flex-grow: 1;\n  user-select: none;\n  \n\t//color: black;\n  //position: absolute;\n  //top: 50%;\n  //left: 50%;\n  //transform: translate(-50%, -50%);\n`\n\nexport const ListContainer = styled.div`\n\n  position: relative;\n  padding: 1rem;\n  vertical-align: middle;\n  display: inline-block;\n  \n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n\n  overflow-y: auto;\n  overflow-x: hidden;\n  //z-index: 1;\n  \n  background: ${props => props.theme.bg.primary};\n  \n  // hide scroll bar\n  ::-webkit-scrollbar {\n      width: 0px;  /* Remove scrollbar space */\n      background: transparent;  /* Optional: just make scrollbar invisible */\n  }\n  ::-webkit-scrollbar-thumb {\n      background: transparent;\n  }\n    \n`\n\n// adds padding to handle to make it easier to click\nexport const HandleContainer = styled.div`\n    padding: .75rem;\n    position: absolute;\n    right: -2rem;\n    top: 50%;\n    transform: translateY(-50%);\n  \n    &:hover {\n        cursor: grab;\n    }\n    z-index:3;\n`\n\nexport const HandleIcon = styled.div`\n    width: 10px;\n    background: ${props => props.theme.bg.septenary};\n    height: 3rem;\n     border-radius: .25rem;\n`\n\n// NEW SIDEBAR STUFF\nexport const SidebarWrapper = styled.div`\n    position: relative;\n    display: flex;\n    align-items: stretch;\n    flex-flow: row nowrap;\n    flex-direction: row;\n    width: ${props => props.width};\n    flex-grow: 0;\n    z-index: 1;\n    align-self: stretch;\n    overflow: hidden;\n    // box-shadow: 2px 0px 6px 2px rgba(0,0,0,0.4);\n`\n\nexport const SidebarContent = styled.div`\n    display: flex;\n    align-self: stretch;\n\n    // background: ${props => props.theme.bg.primary};\n    z-index: 1;\n\n    // border-right: 8px solid ${props => LightenDarkenColor(props.theme.bg.quinary,20)};\n    overflow: hidden;\n`\n\nexport const ResizeBar = styled.div`\n    cursor: ew-resize;\n    width: 8px;\n    // margin-right: -8px;\n    background: transparent;\n    background: ${props => props.theme.bg.tertiary};\n    display: flex;\n    z-index: 20;\n    align-items: center ;\n    align-content: center ;\n    justify-content: center;\n`\n\nexport const ResizeHandle = styled.div`\n    cursor: ew-resize;\n    width: 4px;\n    height: 30px;\n    background: ${props => props.theme.fg.primary};\n    border-radius: 8px;\n    text-align: center;\n    z-index: 2;\n    overflow: hidden;\n    display: flex;\n    align-items: center ;\n\n`","import { TEMP_NEW_SCHEDULE_ID, DEFAULT_TASK_ID } from '../../constants/scheduler_constants';\n\nexport function timeout(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport function mapArrayToObjById(arr) {\n    var obj = {};\n\n    for (let i = 0; i < arr.length; i++) {\n        obj[arr[i].id] = arr[i];\n    }\n\n    return obj;\n}\n\nexport const convertArrayToObject = (array, key) => {\n    const initialValue = {};\n    return array.reduce((obj, item) => {\n        return {\n            ...obj,\n            [item[key]]: item,\n        };\n    }, initialValue);\n};\n\nexport function clone_object(obj) {\n    if (null == obj || \"object\" != typeof obj) return obj;\n    var copy = obj.constructor();\n    for (var attr in obj) {\n        if (obj.hasOwnProperty(attr)) copy[attr] = obj[attr];\n    }\n    return copy;\n}\n\nexport function deepCopy(obj) {\n    return JSON.parse(JSON.stringify(obj));\n}\n\nexport function timeString24HrToDate(timeString) {\n    if (timeString) {\n        var date = Date.parse(\"2019-01-01T\" + timeString);\n        var newDate = new Date();\n        newDate.setTime(date)\n        return newDate\n    } else {\n        return null;\n    }\n\n}\n\nexport function arraysEqual(_arr1, _arr2) {\n\n    if (!Array.isArray(_arr1) || !Array.isArray(_arr2) || _arr1.length !== _arr2.length)\n        return false;\n\n    var arr1 = _arr1.concat().sort();\n    var arr2 = _arr2.concat().sort();\n\n    for (var i = 0; i < arr1.length; i++) {\n\n        if (arr1[i] !== arr2[i])\n            return false;\n\n    }\n\n    return true;\n\n}\n\n// checks if x is a subset of y\nexport function objectIsSubet(x, y) {\n    console.log('inside objectIsSubet')\n    if (x === y) return true;\n    // if both x and y are null or undefined and exactly the same\n\n    // failure point 1\n    // if they are not strictly equal, they both need to be Objects\n    if (!(x instanceof Object) || !(y instanceof Object)) {\n        console.log('objectIsSubet: failed at 1')\n        return false;\n    }\n\n    // failure point 2\n    // they must have the exact same prototype chain, the closest we can do is\n    // test there constructor.\n    if (x.constructor !== y.constructor) {\n        console.log('objectIsSubet: failed at 2')\n        return false;\n    }\n\n\n    for (var p in x) {\n        console.log('var p in x', x)\n        if (!x.hasOwnProperty(p)) continue;\n        // other properties were tested using x.constructor === y.constructor\n\n        // failure point 3\n        // allows to compare x[ p ] and y[ p ] when set to undefined\n        if (!y.hasOwnProperty(p)) {\n            console.log('objectIsSubet: failed at 3')\n            return false;\n        }\n\n\n        if (x[p] === y[p]) continue;\n        // if they have the same strict value or identity then they are equal\n\n        // failure point 4\n        if (typeof (x[p]) !== \"object\") {\n            console.log('objectIsSubet: failure point 4:', p)\n            console.log('objectIsSubet: failure point 4:', x[p])\n            console.log('objectIsSubet: failure point 4:', typeof (x[p]))\n            console.log('objectIsSubet: failed at 4')\n            return false;\n        }\n        // Numbers, Strings, Functions, Booleans must be strictly equal\n\n        // failure point 5\n        if (!objectIsSubet(x[p], y[p])) {\n            console.log('objectIsSubet: failed at 5')\n            return false;\n        }\n        // Objects and Arrays must be tested recursively\n    }\n\n    //for ( p in y ) {\n    //if ( y.hasOwnProperty( p ) && ! x.hasOwnProperty( p ) ) return false;\n    // allows x[ p ] to be set to undefined\n    //}\n    return true;\n}\n\n\n\nexport function uuidv4() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n        return v.toString(16);\n    });\n}\n\nexport function LightenDarkenColor(col, amt) {\n    var usePound = false;\n    if (col[0] == \"#\") {\n        col = col.slice(1);\n        usePound = true;\n    }\n\n    var num = parseInt(col, 16);\n\n    var r = (num >> 16) + amt;\n\n    if (r > 255) r = 255;\n    else if (r < 0) r = 0;\n\n    var b = ((num >> 8) & 0x00FF) + amt;\n\n    if (b > 255) b = 255;\n    else if (b < 0) b = 0;\n\n    var g = (num & 0x0000FF) + amt;\n\n    if (g > 255) g = 255;\n    else if (g < 0) g = 0;\n\n    return (usePound ? \"#\" : \"\") + (g | (b << 8) | (r << 16)).toString(16);\n}\n\nexport function getIsEquivalent(a, b) {\n    // Create arrays of property names\n    if (typeof a !== 'object' || typeof b !== 'object' || a === null || b === null) {\n        return a === b;\n    }\n\n    var aProps = Object.getOwnPropertyNames(a);\n    var bProps = Object.getOwnPropertyNames(b);\n\n    // If number of properties is different,\n    // objects are not equivalent\n    if (aProps.length != bProps.length) {\n        return false;\n    }\n\n    for (var i = 0; i < aProps.length; i++) {\n        var propName = aProps[i];\n\n        // If values of same property are not equal,\n        // objects are not equivalent\n        if (!getIsEquivalent(a[propName], b[propName])) {\n            return false;\n        }\n    }\n\n    // If we made it this far, objects\n    // are considered equivalent\n    return true;\n}\n\n// export const doubleArrObjEquiv = (a,b) => {\n//     let isEquiv = true\n//\n//     for(const row of a) {\n//         for(const item of row) {\n//\n//             for()\n//\n//         }\n//     }\n// }\n\nexport function randomHash() {\n    var hash = '';\n    var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for (var i = 0; i < 16; i++) {\n        hash += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return hash;\n}\n\nexport const upperCaseFirstLetterInString = (str) => {\n    return str\n        .toLowerCase()\n        .split(' ')\n        .map(function (word) {\n            return word[0].toUpperCase() + word.substr(1);\n        })\n        .join(' ');\n}\n\n// Returns name of day ('Mon', 'Tues', etc...)\nexport const getDateName = (date) => {\n    return date.toLocaleDateString(undefined, { weekday: 'short' });\n}\n\n// Returns date from string, this assumes the date is the first word in the string\nexport const getDateFromString = (str) => {\n    const dateStr = deepCopy(str).replace(/ .*/, '').split('-');\n    return new Date(dateStr[0], dateStr[1] - 1, dateStr[2]);\n}\n\nexport const setAcceleratingInterval = (callback, factor, initialRate, times, minRate, timeoutRef) => {\n    let internalCallback = function(tick, counter) {\n\n        return () => {\n            if (--tick >= 0) {\n                const newRate = (initialRate) - (++counter * factor)\n                timeoutRef.current && clearTimeout(timeoutRef.current)\n                timeoutRef.current = setTimeout(internalCallback, (newRate > minRate) ? newRate : minRate);\n                callback();\n            }\n\n        }\n    }(times, 0);\n\n    timeoutRef.current = setTimeout(internalCallback, factor)\n}","import axios from 'axios';\n// import * as log from 'loglevel';\n\nimport logger from '../logger'\n\nimport { apiIPAddress } from '../settings/settings'\nconst operator = 'cards/templates'\nconst log = logger.getLogger('Api')\n\nexport async function getLotTemplate(id) {\n    try {\n        const response = await axios({\n            method: 'get',\n            url: apiIPAddress() + operator + \"/\" + id,\n            headers: {\n                'X-API-Key': '123456',\n                'Access-Control-Allow-Origin': '*'\n            }\n        });\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n\n}\n\nexport async function getLotTemplates() {\n    try {\n        const response = await axios({\n            method: 'get',\n            url: apiIPAddress() + operator,\n            headers: {\n                'X-API-Key': '123456',\n                'Access-Control-Allow-Origin': '*'\n            }\n        });\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n\n}\n\nexport async function deleteLotTemplate(ID) {\n    try {\n        const response = await axios({\n            method: 'DELETE',\n            url: apiIPAddress() + operator + '/' + ID,\n            headers: {\n                'Accept': 'application/json',\n                'X-API-Key': '123456',\n                'Access-Control-Allow-Origin': '*'\n            },\n        });\n\n        // Success 🎉\n        // log.debug('response',response);\n        // const data = response.data;\n        // const dataJson = JSON.parse(data)\n        return response;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}\n\nexport async function postLotTemplate(lotTemplate) {\n    try {\n        const response = await axios({\n            method: 'POST',\n            url: apiIPAddress() + operator,\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n                'X-API-Key': '123456',\n                'Access-Control-Allow-Origin': '*'\n            },\n            data: lotTemplate\n        });\n\n        // Success 🎉\n        // log.debug('response',response);\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        // log.debug('response data json',dataJson);\n\n\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}\n\nexport async function putLotTemplate(lotTemplate, ID) {\n    try {\n        const response = await axios({\n            method: 'PUT',\n            url: apiIPAddress() + operator + '/' + ID,\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'text/html',\n                'X-API-Key': '123456',\n                'Access-Control-Allow-Origin': '*'\n            },\n            data: JSON.stringify(lotTemplate)\n        });\n\n        // Success 🎉\n        // log.debug('response',response);\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}\n","import { normalize } from 'normalizr';\n\n// import types\nimport {\n    GET,\n    POST,\n    DELETE,\n    PUT, SET\n} from '../types/prefixes';\n\nimport {\n   LOT_TEMPLATES,\n    LOT_TEMPLATE\n} from '../types/data_types';\n\nimport { api_action } from './index';\nimport * as api from '../../api/lot_templates'\n\n// import schema\nimport { scheduleSchema, schedulesSchema } from '../../normalizr/schedules_schema';\n\nimport log from \"../../logger\"\nimport {convertArrayToObject} from \"../../methods/utils/utils\";\nimport {SELECTED} from \"../types/suffixes\";\n\nconst logger = log.getLogger(\"Cards\", \"Redux\")\nlogger.setLevel(\"debug\")\n// get\n// ******************************\nexport const getLotTemplate = (id) =>  async (dispatch) => {\n\n    /*\n        Invoked in api_action()\n        Whatever is returned from this function is the payload\n        that will be dispatched to redux (if successful)\n    */\n    const callback = async () => {\n\n        // make request\n        const lotTemplate = await api.getLotTemplate(id);\n\n        // return payload for redux\n        return {\n            lotTemplate,\n        };\n    }\n\n    const actionName = GET + LOT_TEMPLATE;\n\n    // payload is returned back\n    const payload = await api_action(actionName, callback, dispatch, {id});\n\n    return payload;\n\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// get\n// ******************************\nexport const getLotTemplates = () =>  async (dispatch) => {\n\n    /*\n        Invoked in api_action()\n        Whatever is returned from this function is the payload\n        that will be dispatched to redux (if successful)\n    */\n    const callback = async () => {\n\n        // make request\n        const lotTemplates = await api.getLotTemplates();\n\n        const lotTemplatesObj = convertArrayToObject(lotTemplates, \"_id\")\n\n        // return payload for redux\n        return {\n            lotTemplates: lotTemplatesObj,\n        };\n    }\n\n    const actionName = GET + LOT_TEMPLATES;\n\n    // payload is returned back\n    const payload = await api_action(actionName, callback, dispatch);\n\n    return payload;\n\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n\n// create\n// ******************************\nexport const postLotTemplate = (lotTemplate) =>  async dispatch => {\n\n    const callback = async () => {\n        const createdLotTemplate = await api.postLotTemplate(lotTemplate);\n\n        return {\n            lotTemplate: createdLotTemplate,\n        };\n    }\n    //\n    const actionName = POST + LOT_TEMPLATE;\n\n    const payload = await api_action(actionName, callback, dispatch, {lotTemplate});\n\n    return payload\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// delete\n// ******************************\nexport const deleteLotTemplate = (id) => async (dispatch) => {\n\n    const callback = async () => {\n        await api.deleteLotTemplate(id);\n\n        return {\n            id\n        };\n    }\n    //\n    const actionName = DELETE + LOT_TEMPLATE;\n    const payload = await api_action(actionName, callback, dispatch, {id});\n    return payload;\n\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// update\n// ******************************\nexport const putLotTemplate = (lotTemplate, id) => async dispatch => {\n\n    const callback = async () => {\n        const response = await api.putLotTemplate(lotTemplate, id);\n\n        return {\n            lotTemplate: response,\n        };\n    }\n\n    const actionName = PUT + LOT_TEMPLATE;\n    const payload = await api_action(actionName, callback, dispatch, {lotTemplate, id});\n    return payload;\n};\n\n// selected\n// ******************************\nexport const setSelectedLotTemplate = (lotTemplateId) => async dispatch => {\n     dispatch({ type: SET + LOT_TEMPLATE + SELECTED, payload: lotTemplateId })\n};\n","import styled, { css } from \"styled-components\";\n\nexport const dropdownCss = css`\n\t//min-width: fit-content;\n  z-index: 5000;\n`\n\nexport const valueCss = css`\n  ::-webkit-scrollbar {\n    display: none;\n  }\n  \n  overflow-x: auto;\n  @media (max-width: ${props => props.theme.widthBreakpoint.laptop}) {\n\tfont-size: ${props => props.theme.fontSize.sz4};\n  }\n\n  word-break: break-all;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`\n\nexport const BarsContainer = styled.div`\n  display: flex;\n  //justify-content: space-around;\n  flex-direction: row;\n  margin-bottom: -1rem;\n  max-width: 100%;\n  flex-wrap: wrap;\n  align-items: center;\n  \n  width: 100%;\n`\n\nexport const columnCss = css`\n  //border: 1px solid black;\n  flex-direction: row;\n  align-items: center;\n  \n  \n  //max-width: 40%;\n  @media (max-width: ${props => props.theme.widthBreakpoint.laptop}) {\n    max-width: auto;\n    margin: .5rem 0;\n    align-self: stretch;\n  }\n\n  @media (min-width: ${props => props.theme.widthBreakpoint.laptop}) {\n    max-width: 40%;\n    margin: 0 .5rem;\n  }\n\n  \n`\n\nexport const columnCss3 = css`\n  //border: 1px solid black;\n  flex-direction: row;\n  align-items: center;\n  \n  \n  //max-width: 40%;\n  @media (max-width: ${props => props.theme.widthBreakpoint.laptop}) {\n    max-width: auto;\n    margin: .5rem 0;\n    align-self: stretch;\n  }\n\n  @media (min-width: ${props => props.theme.widthBreakpoint.laptop}) {\n    max-width: 30%;\n    margin: 0 .5rem;\n  }\n\n  \n`\n\nexport const containerCss = css`\n  //max-width: 30%;\n  overflow: hidden;\n  flex: 1;\n  //width: 0;\n  max-width: auto;\n  width: auto;\n  min-width: auto;\n`\n\n\n\nexport const reactDropdownSelectCss = css`\n  //max-width: 100%;\n  @media (max-width: ${props => props.theme.widthBreakpoint.laptop}) {\n    //max-width: 5rem;\n  }\n  \n  \n  \n`\n\nexport const descriptionCss = css`\n   color: black;\n  // margin: \"0 1rem 0 0\",\n\twhite-space: nowrap;\n\tmin-width: 6rem;\n\tmax-width: 6rem;\n`","import React, { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\n// import components\nimport ErrorTooltip from \"../../../../../basic/form/error_tooltip/error_tooltip\";\n\n// Import Styles\nimport * as style from './dashboard_button.style';\nimport * as dashboard_buttons_style from '../dashboard_buttons.style';\nimport { ThemeContext } from \"styled-components\";\n\n// import logging\nimport log from '../../../../../../logger'\nimport { DEVICE_CONSTANTS } from \"../../../../../../constants/device_constants\";\n\nconst logger = log.getLogger(\"Dashboards\", \"EditDashboard\");\n\nconst DashboardButton = (props => {\n\n    const {\n        color,\n        title,\n        children,\n        onClick,\n        deviceType,\n        taskID,\n        disabled,\n        width,\n        height,\n        clickable,\n        hoverable,\n        titleStyle,\n        containerStyle,\n        containerCss,\n        error,\n        type = \"\",\n        iconColor,\n        iconClassName,\n        svgColor,\n        invert,\n    } = props\n\n    const theme = useContext(ThemeContext);\n\n    return (\n        <style.Container\n            invert={invert}\n            type={\"button\"}\n            disabled={disabled}\n            width={width}\n            height={height}\n            background={color}\n            onClick={clickable ? () => onClick(taskID, deviceType) : null}\n            borderGlow={taskID === 'hil_success'}\n            clickable={clickable}\n            hoverable={hoverable}\n            style={containerStyle}\n            css={containerCss}\n        >\n            {/* <div style={{display: \"flex\", alignItems: \"center\", border: '1px solid red'}}> */}\n            <style.ConditionText style={titleStyle}>{title}</style.ConditionText>\n\n\n\n            {(iconColor && iconClassName) &&\n                <>\n                    <svg viewBox=\"0 0 300 67\" fill={!!svgColor ? svgColor : theme.bg.primary} height='100%' width=\"12rem\" preserveAspectRatio=\"none\">\n                        <path d=\"M300,8v51c0,4.4-3.6,8-8,8H8.8L63.5,0H292C296.4,0,300,3.6,300,8z\" />\n                    </svg>\n                    <style.IconContainer>\n                        <style.SchemaIcon className={iconClassName} color={color ? color : iconColor}/>\n                    </style.IconContainer>\n                </>\n            }\n\n            {/* {children && children}\n                <ErrorTooltip\n                    visible={error}\n                    text={error}\n                    ContainerComponent={dashboard_buttons_style.ErrorContainerComponent}\n                /> */}\n            {/* </div> */}\n\n\n\n\n        </style.Container>\n    )\n\n})\n\n// Specifies propTypes\nDashboardButton.propTypes = {\n    clickable: PropTypes.bool,\n    hoverable: PropTypes.bool,\n    title: PropTypes.string,\n    taskID: PropTypes.string,\n    onClick: PropTypes.func,\n    disabled: PropTypes.bool,\n    invert: PropTypes.bool,\n};\n\n// Specifies the default values for props:\nDashboardButton.defaultProps = {\n    clickable: true,\n    hoverable: true,\n    title: \"\",\n    taskID: \"\",\n    onClick: () => { },\n    disabled: false,\n    invert: false,\n\n};\n\nexport default (DashboardButton)\n","import {DEVICE_CONSTANTS} from \"./device_constants\";\nimport uuid from 'uuid'\n\nexport const CUSTOM_TASK_ID = \"custom_task\"\nexport const CUSTOM_CHARGE_TASK_ID = \"custom_task_charge\"\nexport const CUSTOM_IDLE_TASK_ID = \"custom_task_idle\"\nexport const CUSTOM_IDLE_TASK_NAME = \"Send to Idle Location\"\n\n\n\nexport const ROUTE_TYPES = {\n    PUSH: \"push\",\n    PULL: \"pull\"\n}\n\n\n/*\n* NOTE: DO NOT GENERATE ID HERE, OTHERWISE IT WILL ONLY BE GENERATED ONCE ON LOAD AND NEW TASKS WILL ALL HAVE THE SAME ID\n* */\nexport const defaultTask = {\n    name: '',\n    obj: null,\n    type: ROUTE_TYPES.PUSH,\n    quantity: 1,\n    device_types: [],\n    handoff: true,\n    track_quantity: true,\n    map_id: null,\n    new: true,\n    processes: [],\n    load: {\n        position: null,\n        station: null,\n        sound: null,\n        instructions: 'Move',\n        timeout: '09:00'\n    },\n    unload: {\n        position: null,\n        station: null,\n        sound: null,\n        instructions: 'Unload'\n    },\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport PropTypes from 'prop-types';\n\nclass ClickOutside extends React.Component {\n  container = React.createRef();\n\n  componentDidMount() {\n    document.addEventListener('click', this.handleClick,{capture:true, passive:true});\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('click', this.handleClick, true);\n  }\n\n  handleClick = (event) => {\n    const container = this.container.current;\n    const { target } = event;\n    const { onClickOutside } = this.props;\n\n    if ((container && container === target) || (container && !container.contains(target))) {\n      onClickOutside(event);\n    }\n  };\n\n  render() {\n    const { className, children, ClickOutsideComponent } = this.props;\n\n    return (\n      <ClickOutsideComponent className={className} ref={this.container}>\n        {children}\n      </ClickOutsideComponent>\n    );\n  }\n}\n\nconst DefaultClickOutsideComponent = styled.div`\n\n`;\n\nClickOutside.propTypes = {\n  onClickOutside: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string\n};\n\nClickOutside.defaultProps = {\n  ClickOutsideComponent: DefaultClickOutsideComponent\n};\n\n\nexport default ClickOutside;\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport styled from 'styled-components'\n\nimport { LightenDarkenColor } from '../../../../methods/utils/color_utils'\n\nfunction Label(props) {\n    return (\n        <props.LabelComponent>\n            {props.label}\n        </props.LabelComponent>\n    )\n}\n\nconst DefaultLabelComponent = styled.div`\n    width: 100%;\n    text-align: center;\n    font-weight: 200;\n\n    background: ${props => LightenDarkenColor(props.theme.bg.secondary, -10)};\n    color: ${props => props.theme.bg.quinary};\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz5};\n`\n\nLabel.propTypes = {\n    LabelComponent: PropTypes.elementType,\n    label: PropTypes.string,\n}\n\nLabel.defaultProps = {\n    LabelComponent: DefaultLabelComponent,\n    label: '',\n}\n\nexport default Label\n\n","export const valueExistInSelected = (value, values, props) =>\n  !!values.find((val) => getByPath(val, props['valueField']) === value);\n\nexport const hexToRGBA = (hex, alpha) => {\n  const RR = parseInt(hex.slice(1, 3), 16);\n  const GG = parseInt(hex.slice(3, 5), 16);\n  const BB = parseInt(hex.slice(5, 7), 16);\n\n  return `rgba(${RR}, ${GG}, ${BB}${alpha && `, ${alpha}`})`;\n};\n\nexport const debounce = (fn, delay = 0) => {\n  let timerId;\n\n  return (...args) => {\n    if (timerId) {\n      clearTimeout(timerId);\n    }\n    timerId = setTimeout(() => {\n      fn(...args);\n      timerId = null;\n    }, delay);\n  };\n};\n\nexport const isEqual = (a, b) => JSON.stringify(a) === JSON.stringify(b);\n\nexport const getByPath = (object, path) => {\n  // console.log('getByPath: {object, path}', {object, path})\n\n  let new_path = path.split('.')\n  // console.log('getByPath: new_path', {new_path})\n\n  if (!path) {\n    return;\n  }\n\n  return path.split('.').reduce((acc, value) => acc[value], object)\n};\n\nexport const getProp = (object, path, defaultValue) => {\n  if (!path) {\n    return object;\n  }\n\n  const normalizedPath = Array.isArray(path) ? path : path.split('.').filter((item) => item.length);\n\n  if (!normalizedPath.length) {\n    return object === undefined ? defaultValue : object;\n  }\n\n  return getProp(object[normalizedPath.shift()], normalizedPath, defaultValue);\n};\n","export const LIB_NAME = 'react-dropdown-select';\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport {getByPath} from '../util';\nimport { LIB_NAME } from '../constants';\n\nconst Option = ({ item, props, state, methods }) => {\n\n    const OptionComponent = props.OptionComponent ? props.OptionComponent : DefaultOptionComponent\n    return(\n        item && props.optionRenderer ? (\n          props.optionRenderer({ item, props, state, methods })\n        ) : (\n          <OptionComponent\n            role=\"listitem\"\n            disabled={props.disabled}\n            direction={props.direction}\n            className={`${LIB_NAME}-option`}\n            color={props.color}>\n            <span className={`${LIB_NAME}-option-label`}>{getByPath(item, props.labelField)}</span>\n            <span\n              className={`${LIB_NAME}-option-remove`}\n              onClick={(event) => methods.removeItem(event, item, props.closeOnSelect)}>\n              &times;\n            </span>\n          </OptionComponent>\n        )\n    );\n\n}\n\nexport const DefaultOptionComponent = styled.span`\n\n  padding: 0 5px;\n  border-radius: 2px;\n  line-height: 21px;\n  margin: 3px 0 3px 5px;\n  background: ${({ color }) => color};\n  color: #fff;\n  display: inline-flex;\n  flex-direction: ${({ direction }) => direction === 'rtl' ? 'row-reverse' : 'row'};\n  width: auto;\n  white-space: nowrap ;\n  \n  \n  .${LIB_NAME}-option-label {\n    width: auto;\n  }\n\n\n  .${LIB_NAME}-option-remove {\n    cursor: pointer;\n    width: 22px;\n    height: 22px;\n    display: inline-block;\n    text-align: center;\n    margin: 0 -5px 0 0px;\n    border-radius: 0 3px 3px 0;\n\n    :hover {\n      color: tomato;\n    }\n  }\n\n  :hover,\n  :hover > span {\n    opacity: 0.9;\n  }\n\n`;\n\n\n// Specifies the default values for props:\nOption.defaultProps = {\n    OptionComponent: DefaultOptionComponent,\n};\n\nexport default Option;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { valueExistInSelected } from '../util';\nimport * as PropTypes from 'prop-types';\nimport { LIB_NAME } from '../constants';\n\nconst handlePlaceHolder = (props, state) => {\n  const { addPlaceholder, searchable, placeholder } = props;\n  const noValues = state.values && state.values.length === 0;\n  const hasValues = state.values && state.values.length > 0;\n\n  if (hasValues && addPlaceholder && searchable) {\n    return addPlaceholder;\n  }\n\n  if (noValues) {\n    return placeholder;\n  }\n\n  if (hasValues && !searchable) {\n    return '';\n  }\n\n  return '';\n};\n\nclass Input extends Component {\n  input = React.createRef();\n\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.state.dropdown || (prevProps.state.dropdown !== this.props.state.dropdown && this.props.state.dropdown) ||\n      this.props.props.autoFocus\n    ) {\n      this.input.current.focus();\n    }\n\n    if (prevProps.state.dropdown !== this.props.state.dropdown && !this.props.state.dropdown) {\n       this.input.current.blur();\n    }\n  }\n\n  onBlur = (event) => {\n    event.stopPropagation();\n    if (!this.props.state.dropdown) {\n      return this.input.current.blur();\n    }\n\n    return this.input.current.focus();\n  };\n\n  handleKeyPress = (event) => {\n    const { props, state, methods } = this.props;\n\n    return (\n      props.create &&\n      event.key === 'Enter' &&\n      !valueExistInSelected(state.search, state.values, this.props) &&\n      state.search &&\n      state.cursor === null &&\n      methods.createNew(state.search)\n    );\n  };\n\n  render() {\n    const { props, state, methods, InputComponent } = this.props;\n\n    if (props.inputRenderer) {\n      return props.inputRenderer({ props, state, methods, inputRef: this.input });\n    }\n\n    return (\n      <InputComponent\n        ref={this.input}\n        tabIndex=\"-1\"\n        onFocus={(event) => event.stopPropagation()}\n        className={`${LIB_NAME}-input`}\n        size={methods.getInputSize()}\n        value={state.search}\n        readOnly={!props.searchable}\n        onClick={() => methods.dropDown('open')}\n        onKeyPress={this.handleKeyPress}\n        onChange={methods.setSearch}\n        onBlur={this.onBlur}\n        placeholder={handlePlaceHolder(props, state)}\n        disabled={props.disabled}\n        filled={props.filled}\n      />\n    );\n  }\n}\n\nexport const DefaultInputComponent = styled.input`\n    cursor: pointer;\n    line-height: inherit;\n\n    // width: ${props => props.filled ? `calc(${props.size}ch + 5px)` : `100%`};\n    width: ${props => `calc(${props.size}ch + 5px)`};\n\n    border: none;\n    margin-left: 5px;\n    background: transparent;\n    font-size: smaller;\n    ${({ readOnly }) => readOnly && 'cursor: pointer;'}\n    :focus {\n      outline: none;\n    }\n\n    vertical-align: middle;\n    line-height: 2rem;\n    height: 2rem;\n    \n    &::placeholder {\n      color: ${props => props.theme.bg.senary};\n    }\n    `;\n\nInput.propTypes = {\n    props: PropTypes.object,\n    state: PropTypes.object,\n    methods: PropTypes.object\n};\n\nInput.defaultProps = {\n    InputComponent: DefaultInputComponent\n};\n\nexport default Input;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport Option from './Option';\nimport Input from './Input';\nimport { LIB_NAME } from '../constants';\nimport { getByPath } from '../util';\n\nconst Content = ({ props, state, methods, ContentComponent, InputComponent }) => {\n  return (\n    <ContentComponent\n      className={`${LIB_NAME}-content ${\n        props.multi ? `${LIB_NAME}-type-multi` : `${LIB_NAME}-type-single`\n      }`}\n      onClick={(event) => {\n        event.stopPropagation();\n        methods.dropDown('open');\n      }}>\n      {props.contentRenderer ? (\n        props.contentRenderer({ props, state, methods })\n      ) : (\n        \n        <OptionsContainer multi={props.multi}>\n          {(props.multi || props.showSelectedBox)\n            ? state.values &&\n              state.values.map((item) => (\n                <Option\n                  key={`${getByPath(item, props.valueField)}${getByPath(item, props.labelField)}`}\n                  item={item}\n                  state={state}\n                  props={props}\n                  methods={methods}\n                />\n              ))\n            : state.values &&\n              state.values.length > 0 && <Value valueCss={props.valueCss}>{getByPath(state.values[0], props.labelField)}</Value>\n            }\n          <Input  InputComponent={InputComponent} props={{...props, filled:state.values.length}} methods={methods} state={state} />\n        </OptionsContainer>\n      )}\n    </ContentComponent>\n  );\n    return (\n        <ContentComponent\n            className={`${LIB_NAME}-content ${props.multi ? `${LIB_NAME}-type-multi` : `${LIB_NAME}-type-single`\n                }`}\n            onClick={(event) => {\n                event.stopPropagation();\n                methods.dropDown('open');\n            }}>\n            {props.contentRenderer ? (\n                props.contentRenderer({ props, state, methods })\n            ) : (\n\n                    <React.Fragment>\n                        {(props.multi || props.showSelectedBox)\n                            ? state.values &&\n                            state.values.map((item, ind) => (\n                                <Option\n                                    // Fix for keys that have the same name\n                                    // key={`${getByPath(item, props.valueField)}${getByPath(item, props.labelField)}`}\n                                    key={ind}\n                                    item={item}\n                                    state={state}\n                                    props={props}\n                                    methods={methods}\n                                />\n                            ))\n                            : state.values &&\n                            state.values.length > 0 && <Value>{getByPath(state.values[0], props.labelField)}</Value>\n                        }\n                        <Input InputComponent={InputComponent} props={{ ...props, filled: state.values.length }} methods={methods} state={state} />\n                    </React.Fragment>\n                )}\n        </ContentComponent>\n    );\n};\n\nexport const Value = styled.div`\n  margin-left: 0.3rem;\n  margin-right: 0.2rem;\n  line-height: 1.8rem;\n  font-size: ${props => props.theme.fontSize.sz3};\n  width: 100%;\n    \n${props => props.valueCss && props.valueCss};\n`\n\nexport const OptionsContainer = styled.div`\n    width: auto;\n    height: 100%;\n    margin-right: 1rem;\n    display: inline-flex;\n    align-items: center;\n    overflow-y: hidden;\n    overflow-x: ${props => props.multi ? \"auto\" : \"hidden\"};\n    \n    word-break: ${props => !props.multi && \"break-all\"};\n    white-space: ${props => !props.multi && \"nowrap\"};\n    text-overflow: ${props => !props.multi && \"ellipsis\"};\n\n    ::-webkit-scrollbar {\n        display: none;\n    }\n    \n`\n\nexport const DefaultContentComponent = styled.div`\n  position: relative;\n  \n  display: flex;\n  flex-grow: 1;\n  // flex-wrap: nowrap;\n\n  overflow: hidden;\n  \n  .${LIB_NAME}-type-multi {\n    overflow-x: auto;\n  }\n  \n  word-break: break-all;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`;\n\n// Specifies the default values for props:\nContent.defaultProps = {\n    ContentComponent: DefaultContentComponent,\n};\n\nexport default Content;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { LIB_NAME } from '../constants';\n\nimport {globStyle} from '../../../../global_style'\n\nconst NoData = ({ props, state, methods, NoDataComponent }) =>\n  props.noDataRenderer ? (\n    props.noDataRenderer({ props, state, methods })\n  ) : (\n    <NoDataComponent id={'bob5'} className={`${LIB_NAME}-no-data`} color={props.color}>\n      {props.noDataLabel}\n    </NoDataComponent>\n  );\n\nconst DefaultNoDataComponent = styled.div`\n  padding: 10px;\n  text-align: center;\n  font-size: 1rem;\n  color: #FF4B4B;\n  background-color: #f5f5fa;\n\n`;\n\nNoData.defaultProps = {\n  NoDataComponent: DefaultNoDataComponent\n};\n\nexport default NoData;\n","import React, { Component } from 'react';\nimport styled from 'styled-components'\nimport { getByPath } from '../util';\nimport * as PropTypes from 'prop-types';\nimport { LIB_NAME } from '../constants';\n\nimport { LightenDarkenColor, hexToRGBA } from '../../../../methods/utils/color_utils'\n\nclass Item extends Component {\n  item = React.createRef();\n\n  componentDidUpdate() {\n    if (this.props.state.cursor === this.props.itemIndex) {\n      this.item.current &&\n        this.item.current.scrollIntoView({ behavior: 'smooth', block: 'nearest', inline: 'start' });\n    }\n  }\n\n  render() {\n    // console.log('Item render this.props',this.props)\n    const { props, state, methods, item, itemIndex, ItemComponent, ContentContainer, ButtonComponent, TextComponent, onMouseEnter, onMouseLeave } = this.props;\n\n    if (props.itemRenderer) {\n      return props.itemRenderer({ item, itemIndex, props, state, methods });\n    }\n\n    if (!props.keepSelectedInList && methods.isSelected(item)) {\n      return null;\n    }\n\n    // console.log('item ItemComponent', ItemComponent)\n    //const { ItemComponent } = this.props;\n\n    return (\n      <ItemComponent\n        role=\"option\"\n        ref={this.item}\n        aria-selected={methods.isSelected(item)}\n        aria-disabled={item.disabled}\n        disabled={item.disabled}\n        aria-label={getByPath(item, props.labelField)}\n        key={`${getByPath(item, props.valueField)}${getByPath(item, props.labelField)}`}\n        tabIndex=\"-1\"\n        className={`${LIB_NAME}-item ${\n          methods.isSelected(item) ? `${LIB_NAME}-item-selected` : ''\n        } ${state.cursor === itemIndex ? `${LIB_NAME}-item-active` : ''} ${\n          item.disabled ? `${LIB_NAME}-item-disabled` : ''\n        }`}\n        onKeyPress={item.disabled ? undefined : () => methods.addItem(item)}\n        onClick={item.disabled ? undefined : () => methods.addItem(item)}\n        color={props.color}\n        schema={props.schema}\n        onMouseEnter = {() => {\n          if(!!props.onMouseEnter){\n          props.onMouseEnter(item)\n        }\n        }}\n        onMouseLeave = {() => {\n          if(!!props.onMouseLeave){\n          props.onMouseLeave(item)\n        }\n        }}        >\n\n            <TextComponent\n            >\n              {getByPath(item, props.labelField)} {item.disabled && <ins>{props.disabledLabel}</ins>}\n            </TextComponent>\n\n            {props.showButton && !!props.onDetailsClick &&\n              <ButtonComponent className='fas fa-ellipsis-h'\n                  onClick={(e) => {\n                    if (!e) var e = window.event;\n                    e.cancelBubble = true;\n                    if (e.stopPropagation) e.stopPropagation();\n                    props.onDetailsClick(item.id);\n                  }}>\n              </ButtonComponent>\n            }\n\n      </ItemComponent>\n    );\n  }\n}\n\nItem.propTypes = {\n  props: PropTypes.any,\n  state: PropTypes.any,\n  methods: PropTypes.any,\n  item: PropTypes.any,\n  itemIndex: PropTypes.any,\n  showButton: PropTypes.bool,\n};\n\nexport const DefaultItemComponent = styled.span`\n\n  padding: .5rem 1rem .5rem calc(1rem - 5px);\n  cursor: pointer;\n  white-space: nowrap;\n  display: flex;\n  justify-content: space-between;\n  font-family: ${props => props.theme.font.primary};\n  font-size: ${props => props.theme.fontSize.sz3};\n\n  border-left: 5px solid transparent;\n\n  // &.${LIB_NAME}-item-active {\n  //   ${({ disabled, color }) => !disabled && color && `background: green;`}\n  // }\n\n  :hover,\n  :focus {\n    background: ${props => !!props.schema ? hexToRGBA(props.theme.schema[props.schema].solid, 0.1) : hexToRGBA(props.theme.fg.red, 0.1)};\n    outline: none;\n  }\n\n\n  &.${LIB_NAME}-item-selected {\n    ${props => props.disabled ? `\n      background: ${!!props.schema ? hexToRGBA(props.theme.schema[props.schema].solid, 0.2) : hexToRGBA(props.theme.fg.red, 0.2)};\n    `\n    : `\n      background: ${!!props.schema ? hexToRGBA(props.theme.schema[props.schema].solid, 0.2) : hexToRGBA(props.theme.fg.red, 0.2)};\n      border-color: ${!!props.schema ? props.theme.schema[props.schema].solid : props.theme.fg.red};\n    `}\n  }\n\n  ${({ disabled }) =>\n    disabled\n      ? `\n    background: ${props => props.theme.bg.quinary};\n    color: ${props => props.theme.bg.primary};\n\n    ins {\n      text-decoration: none;\n      border:1px solid #ccc;\n      border-radius: 2px;\n      padding: 0px 3px;\n      font-size: x-small;\n      text-transform: uppercase;\n    }\n    `\n      : ''}\n\n`;\n\nconst DefaultContentContainer = styled.div`\n  display: flex;\n  flex: 1;\n  justify-content: space-between;\n  padding: 0;\n  overflow: hidden;\n  white-space: nowrap;\n`;\n\nconst DefaultButtonComponent = styled.i`\n    display: flex;\n    color: grey;\n    font-size: 1rem;\n    &:hover {\n        cursor: pointer;\n    }\n    line-height: 2rem;\n    text-align: center;\n`\n\nconst DefaultTextComponent = styled.span`\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`;\n\n// Specifies the default values for props:\nItem.defaultProps = {\n    ItemComponent: DefaultItemComponent,\n    ContentContainer: DefaultContentContainer,\n    ButtonComponent: DefaultButtonComponent,\n    TextComponent: DefaultTextComponent,\n    onMouseEnter: () => {},\n    onMouseLeave: () => {}\n};\n\nexport default Item;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { LIB_NAME } from '../constants';\nimport NoData from '../components/NoData';\nimport Item from '../components/Item';\nimport Label from '../components/Label';\n\nimport { valueExistInSelected, hexToRGBA } from '../util';\n\nconst dropdownPosition = (props, methods) => {\n    const DropdownBoundingClientRect = methods.getSelectRef().getBoundingClientRect();\n    const dropdownHeight =\n        DropdownBoundingClientRect.bottom + parseInt(props.dropdownHeight, 10) + parseInt(props.dropdownGap, 10);\n\n    if (props.dropdownPosition !== 'auto') {\n        return props.dropdownPosition;\n    }\n\n    if (dropdownHeight > window.innerHeight && dropdownHeight > DropdownBoundingClientRect.top) {\n        return 'top';\n    }\n\n    return 'bottom';\n};\n\nconst Dropdown = ({ ItemComponent, props, dropdownRef, DropDownComponent, state, methods, onMouseEnter, onMouseLeave, onClick, TextComponent }) => {\n    // console.log('Dropdown props', props)\n    // console.log('Dropdown ItemComponent', ItemComponent)\n    return (\n        <DropDownComponent\n            css={props.dropdownCss}\n            ref={dropdownRef}\n            maxWidth={props.maxDropdownWidth}\n            tabIndex=\"-1\"\n            aria-expanded=\"true\"\n            role=\"list\"\n            dropdownPosition={dropdownPosition(props, methods)}\n            selectBounds={state.selectBounds}\n            portal={props.portal}\n            dropdownGap={props.dropdownGap}\n            dropdownHeight={props.dropdownHeight}\n            className={`${LIB_NAME}-dropdown ${LIB_NAME}-dropdown-position-${dropdownPosition(\n                props,\n                methods\n            )}`}>\n            {props.dropdownRenderer ? (\n                props.dropdownRenderer({ props, state, methods })\n            ) : (\n                    <React.Fragment>\n                        {props.create && state.search && !valueExistInSelected(state.search, state.values, props) && (\n                            <AddNew\n                                className={`${LIB_NAME}-dropdown-add-new`}\n                                color={props.color}\n                                onClick={() => methods.createNew(state.search)}\n                                >\n                                {props.createNewLabel.replace('{search}', `\"${state.search}\"`)}\n                            </AddNew>\n                        )}\n                        <Label LabelComponent={props.LabelComponent} label={props.label}></Label>\n                        {methods.searchResults().length === 0 ? (\n                            <NoData\n                                className={`${LIB_NAME}-no-data`}\n                                state={state}\n                                props={props}\n                                methods={methods}\n                                NoDataComponent={props.NoDataComponent}\n                            />\n                        ) : (\n                                methods\n                                    .searchResults()\n                                    .map((item, itemIndex) => (\n                                        <Item\n                                            ItemComponent={ItemComponent}\n                                            TextComponent={TextComponent}\n                                            //   Fix for dropdown search error for elements with matching keys\n                                            //   key={item[props.valueField]}\n                                            key={itemIndex}\n                                            item={item}\n                                            itemIndex={itemIndex}\n                                            state={state}\n                                            props={props}\n                                            methods={methods}\n                                            onMouseEnter = {(item) => onMouseEnter(item)}\n                                            onMouseLeave = {(item) => onMouseLeave(item)}\n                                        />\n                                    ))\n                            )}\n                    </React.Fragment>\n                )}\n        </DropDownComponent>\n    );\n}\n\nexport const DefaultDropDownComponent = styled.div`\n  position: absolute;\n  ${({ selectBounds, dropdownGap, dropdownPosition }) =>\n        dropdownPosition === 'top'\n            ? `bottom: ${selectBounds.height + 2 + dropdownGap}px`\n            : `top: ${selectBounds.height + 2 + dropdownGap}px`};\n\n  ${({ selectBounds, dropdownGap, portal }) =>\n        portal\n            ? `\n      position: fixed;\n      top: ${selectBounds.bottom + dropdownGap}px;\n      left: ${selectBounds.left - 1}px;`\n            : 'left: -1px;'};\n  width: 100%;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n  background: ${props => props.theme.bg.secondary};\n  border-radius: 2px;\n  box-shadow: 0px 0px 10px 3px rgba(0,0,0,0.1);\n  max-height: ${({ dropdownHeight }) => dropdownHeight};\n  overflow: auto;\n  z-index: 100;\n\n    ${props => props.css && props.css};\n\n  border-radius: 0.2rem;\n\n  :focus {\n    outline: none;\n  }\n\n  /* Let's get this party started */\n  ::-webkit-scrollbar {\n      width: 6px;\n  }\n  /* Track */\n  ::-webkit-scrollbar-track {\n      -webkit-background: rgba(0,0,0,0.1);\n      -webkit-border-radius: 10px;\n      border-radius: 10px;\n  }\n  /* Handle */\n  ::-webkit-scrollbar-thumb {\n      -webkit-border-radius: 10px;\n      border-radius: 10px;\n      -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.5);\n      background: rgba(255,255,255,0.4);\n  }\n  ::-webkit-scrollbar-thumb:window-inactive {\n    background: rgba(255,255,255,0.2);\n  }\n\n    max-width: ${props => props.maxWidth && props.maxWidth};\n\n}\n`;\n\nconst AddNew = styled.div`\n  color: ${({ color }) => color};\n  padding: 5px 10px;\n  background: white;\n  color: blue;\n\n  :hover {\n    background: ${({ color }) => color && hexToRGBA(color, 0.1)};\n    outline: none;\n    cursor: pointer;\n  }\n`;\n\nDropdown.defaultProps = {\n    DropDownComponent: DefaultDropDownComponent\n};\n\nexport default Dropdown;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { LIB_NAME } from '../constants';\n\nconst Loading = ({ props }) =>\n  props.loadingRenderer ? (\n    props.loadingRenderer({ props })\n  ) : (\n    <LoadingComponent className={`${LIB_NAME}-loading`} color={props.color} />\n  );\n\nconst LoadingComponent = styled.div`\n  @keyframes dual-ring-spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(180deg);\n    }\n  }\n\n  padding: 0 5px;\n  display: block;\n  width: auto;\n  height: auto;\n\n  :after {\n    content: ' ';\n    display: block;\n    width: 16px;\n    height: 16px;\n    border-radius: 50%;\n    border-width: 1px;\n    border-style: solid;\n    border-color: ${({ color }) => color} transparent;\n    animation: dual-ring-spin 0.7s ease-in-out infinite;\n    margin: 0 0 0 -10px;\n  }\n`;\n\nexport default Loading;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { LIB_NAME } from '../constants';\n\nconst Clear = ({ props, state, methods }) =>\n  props.clearRenderer ? (\n    props.clearRenderer({ props, state, methods })\n  ) : (\n    <ClearComponent\n      className={`${LIB_NAME}-clear`}\n      tabIndex=\"-1\"\n      onClick={() => methods.clearAll()}\n      onKeyPress={() => methods.clearAll()}>\n      &times;\n    </ClearComponent>\n  );\n\nconst ClearComponent = styled.div`\n  line-height: 25px;\n  margin: 0 10px;\n  cursor: pointer;\n\n  :focus {\n    outline: none;\n  }\n\n  :hover {\n    color: tomato;\n  }\n`;\n\nexport default Clear;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { LIB_NAME } from '../constants';\n\nconst Separator = ({ props, state, methods }) =>\n  props.separatorRenderer ? (\n    props.separatorRenderer({ props, state, methods })\n  ) : (\n    <SeparatorComponent className={`${LIB_NAME}-separator`} />\n  );\n\nconst SeparatorComponent = styled.div`\n  border-left: 1px solid #ccc;\n  width: 1px;\n  height: 25px;\n  display: block;\n`;\n\nexport default Separator;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { LIB_NAME } from '../constants';\n\nconst DropdownHandle = ({ props, state, methods }) =>\n  props.dropdownHandleRenderer ? (\n    props.dropdownHandleRenderer({ props, state, methods })\n  ) : (\n    <DropdownHandleComponent\n      tabIndex=\"-1\"\n      onClick={(event) => methods.dropDown(state.dropdown ? 'close': 'open', event)}\n      dropdownOpen={state.dropdown}\n      onKeyPress={(event) => methods.dropDown('toggle', event)}\n      onKeyDown={(event) => methods.dropDown('toggle', event)}\n      className={`${LIB_NAME}-dropdown-handle`}\n      color={props.color}>\n      <svg fill=\"currentColor\" viewBox=\"0 0 40 40\"><path d=\"M31 26.4q0 .3-.2.5l-1.1 1.2q-.3.2-.6.2t-.5-.2l-8.7-8.8-8.8 8.8q-.2.2-.5.2t-.5-.2l-1.2-1.2q-.2-.2-.2-.5t.2-.5l10.4-10.4q.3-.2.6-.2t.5.2l10.4 10.4q.2.2.2.5z\"/></svg>\n    </DropdownHandleComponent>\n  );\n\nconst DropdownHandleComponent = styled.div`\n  text-align: center;\n\n  ${({ dropdownOpen }) =>\n    dropdownOpen\n      ? `\n      pointer-events: all;\n      transform: rotate(0deg);\n      margin: 0px 0 -3px 5px;\n      `\n      : `\n      pointer-events: none;\n      margin: 0 0 0 5px;\n      transform: rotate(180deg);\n      `};\n  cursor: pointer;\n\n  text-align: center;\n  vertical-align: middle;\n  line-height: 2rem;\n  height: 2rem;\n  position: absolute;\n  right: .25rem;\n\n  svg {\n    width: 16px;\n    height: 16px;\n  }\n\n  :hover {\n    path {\n      stroke: ${({ color }) => color};\n    }\n  }\n\n  :focus {\n    outline: none;\n\n    path {\n      stroke: ${({ color }) => color};\n    }\n  }\n\n`;\n\nexport default DropdownHandle;\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components'\nimport ClickOutside from './components/ClickOutside';\n\nimport { globStyle } from '../../../global_style'\nimport { LightenDarkenColor } from '../../../methods/utils/color_utils'\n\n\nimport Label from './components/Label';\nimport Content from './components/Content';\nimport Dropdown from './components/Dropdown';\nimport Loading from './components/Loading';\nimport Clear from './components/Clear';\nimport Separator from './components/Separator';\nimport DropdownHandle from './components/DropdownHandle';\n\nimport { debounce, hexToRGBA, isEqual, getByPath, getProp, valueExistInSelected } from './util';\nimport { LIB_NAME } from './constants';\n\nimport theme from '../../../theme.js'\n\nexport class DropDownSearch extends Component {\n  static propTypes = {\n    onChange: PropTypes.func.isRequired,\n    onDropdownClose: PropTypes.func,\n    onDropdownOpen: PropTypes.func,\n    onClearAll: PropTypes.func,\n    onSelectAll: PropTypes.func,\n    values: PropTypes.array,\n    options: PropTypes.array.isRequired,\n    keepOpen: PropTypes.bool,\n    showSelectedBox: PropTypes.bool,\n    fixedHeight: PropTypes.bool,\n    dropdownGap: PropTypes.number,\n    multi: PropTypes.bool,\n    placeholder: PropTypes.string,\n    addPlaceholder: PropTypes.string,\n    disabled: PropTypes.bool,\n    className: PropTypes.string,\n    loading: PropTypes.bool,\n    clearable: PropTypes.bool,\n    searchable: PropTypes.bool,\n    separator: PropTypes.bool,\n    dropdownHandle: PropTypes.bool,\n    searchBy: PropTypes.string,\n    sortBy: PropTypes.string,\n    closeOnScroll: PropTypes.bool,\n    openOnTop: PropTypes.bool,\n    style: PropTypes.object,\n    contentRenderer: PropTypes.func,\n    dropdownRenderer: PropTypes.func,\n    itemRenderer: PropTypes.func,\n    noDataRenderer: PropTypes.func,\n    optionRenderer: PropTypes.func,\n    inputRenderer: PropTypes.func,\n    loadingRenderer: PropTypes.func,\n    clearRenderer: PropTypes.func,\n    separatorRenderer: PropTypes.func,\n    dropdownHandleRenderer: PropTypes.func,\n    direction: PropTypes.string,\n    required: PropTypes.bool,\n    pattern: PropTypes.string,\n    // The pattern attribute specifies a regular expression that the <input> element's value is checked against on form submission\n    // set to null to bypass\n    name: PropTypes.string,\n    className: PropTypes.string,\n    schema: PropTypes.string,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dropdown: false,\n      values: props.values,\n      search: '',\n      selectBounds: {},\n      cursor: null,\n      dropdownSize: {\n        offsetWidth: 0,\n        offsetHeight: 0,\n        offsetLeft: 0,\n        offsetTop: 0,\n      }\n    };\n\n    this.methods = {\n      removeItem: this.removeItem,\n      dropDown: this.dropDown,\n      addItem: this.addItem,\n      setSearch: this.setSearch,\n      getInputSize: this.getInputSize,\n      toggleSelectAll: this.toggleSelectAll,\n      clearAll: this.clearAll,\n      selectAll: this.selectAll,\n      searchResults: this.searchResults,\n      getSelectRef: this.getSelectRef,\n      isSelected: this.isSelected,\n      getSelectBounds: this.getSelectBounds,\n      areAllSelected: this.areAllSelected,\n      handleKeyDown: this.handleKeyDown,\n      activeCursorItem: this.activeCursorItem,\n      createNew: this.createNew,\n      sortBy: this.sortBy,\n      safeString: this.safeString\n    };\n\n    this.select = React.createRef();\n    this.dropdownRef = React.createRef()\n    this.dropdownRoot = typeof document !== 'undefined' && document.createElement('div');\n  }\n\n  componentDidMount() {\n    this.props.portal && this.props.portal.appendChild(this.dropdownRoot);\n    window.addEventListener('resize', debounce(this.updateSelectBounds), {passive:true});\n    window.addEventListener('scroll', debounce(this.onScroll), {passive:true});\n\n    this.dropDown('close');\n\n    if (this.select) {\n      this.updateSelectBounds();\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      !isEqual(prevProps.values, this.props.values) &&\n      isEqual(prevProps.values, prevState.values)\n    ) {\n      this.setState({ values: this.props.values }, () => {\n        this.props.onChange(this.props.values);\n      });\n    }\n\n    if (prevState.values !== this.state.values) {\n      if (this.state.values.length) { this.props.onChange(this.state.values) };\n      this.updateSelectBounds();\n    }\n\n    if (prevState.search !== this.state.search) {\n      this.updateSelectBounds();\n    }\n\n    if (prevState.values !== this.state.values && this.props.closeOnSelect) {\n      this.dropDown('close');\n    }\n\n    if (prevProps.multi !== this.props.multi) {\n      this.updateSelectBounds();\n    }\n\n    if (prevState.dropdown && prevState.dropdown !== this.state.dropdown) {\n      this.onDropdownClose();\n    }\n\n    if (!prevState.dropdown && prevState.dropdown !== this.state.dropdown) {\n      this.props.onDropdownOpen();\n    }\n\n    if (prevState.values !== this.state.values && !this.props.fillable && this.state.values.length) {\n      this.clearAll();\n    }\n\n    // if dropdown ref has current value\n    if(this.dropdownRef.current && !this.props.fixedHeight) {\n      // get height\n      let offsetHeight = this.dropdownRef.current.offsetHeight;\n\n      // check if state offsetHeight does not match current offsetHeight\n      if(offsetHeight !== this.state.dropdownSize.offsetHeight) {\n        let offsetWidth  = this.dropdownRef.current.offsetWidth;\n        let offsetTop  = this.dropdownRef.current.offsetTop;\n        let offsetLeft  = this.dropdownRef.current.offsetLeft;\n\n        // update state\n        this.setState({\n          dropdownSize: {\n            offsetWidth,\n            offsetHeight,\n            offsetLeft,\n            offsetTop,\n          },\n        });\n      }\n    }\n    // if dropdownRef doesn't have current value, and offsetHeight isn't already 0, set it to zero\n    else if(this.state.dropdownSize.offsetHeight !== 0 ) {\n      // update state\n      this.setState({\n        dropdownSize: {\n          offsetWidth: 0,\n          offsetHeight: 0,\n          offsetLeft: 0,\n          offsetTop: 0,\n        },\n      });\n    }\n  }\n\n\n\n  componentWillUnmount() {\n    this.props.portal && this.props.portal.removeChild(this.dropdownRoot);\n    window.removeEventListener(\n      'resize',\n      debounce(this.updateSelectBounds, this.props.debounceDelay), {passive:true}\n    );\n    window.removeEventListener('scroll', debounce(this.onScroll, this.props.debounceDelay), {passive:true});\n  }\n\n  onDropdownClose = () => {\n    this.setState({ cursor: null });\n    this.props.onDropdownClose();\n  };\n\n  onScroll = () => {\n    if (this.props.closeOnScroll) {\n      this.dropDown('close');\n    }\n\n    this.updateSelectBounds();\n  };\n\n  updateSelectBounds = () =>\n    this.select.current &&\n    this.setState({\n      selectBounds: this.select.current.getBoundingClientRect()\n    });\n\n  getSelectBounds = () => this.state.selectBounds;\n\n  dropDown = (action = 'toggle', event) => {\n    const target = (event && event.target) || (event && event.srcElement);\n\n    if (\n      this.props.portal &&\n      !this.props.closeOnScroll &&\n      !this.props.closeOnSelect &&\n      event &&\n      target &&\n      target.offsetParent &&\n      target.offsetParent.classList.contains('react-dropdown-select-dropdown')\n    ) {\n      return;\n    }\n\n    if (this.props.keepOpen) {\n      return this.setState({ dropdown: true });\n    }\n\n    if (action === 'close' && this.state.dropdown) {\n      this.select.current.blur();\n\n      return this.setState({\n        dropdown: false,\n        search: this.props.clearOnBlur ? '' : this.state.search\n      });\n    }\n\n    if (action === 'open' && !this.state.dropdown) {\n      return this.setState({ dropdown: true });\n    }\n\n    if (action === 'toggle') {\n      this.select.current.focus();\n      return this.setState({ dropdown: !this.state.dropdown });\n    }\n\n    return false;\n  };\n\n  getSelectRef = () => this.select.current;\n\n  addItem = (item) => {\n    if (this.props.multi) {\n      if (\n        valueExistInSelected(getByPath(item, this.props.valueField), this.state.values, this.props)\n      ) {\n        return this.removeItem(null, item, false);\n      }\n\n      this.setState({\n        values: [...this.state.values, item]\n      });\n    } else {\n      this.setState({\n        values: [item],\n        dropdown: false\n      });\n    }\n\n    this.props.clearOnSelect && this.setState({ search: '' });\n\n    return true;\n  };\n\n  removeItem = (event, item, close = false) => {\n    if (event && close) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.dropDown('close');\n    }\n\n    let newValues = this.state.values.filter(\n        (values) =>\n            getByPath(values, this.props.valueField) !== getByPath(item, this.props.valueField)\n    )\n\n    this.setState({\n      values: newValues\n    });\n\n    this.props.onRemoveItem && this.props.onRemoveItem(newValues)\n  };\n\n  setSearch = (event) => {\n    this.setState({\n      cursor: null\n    });\n\n    this.setState({\n      search: event.target.value\n    });\n  };\n\n  getInputSize = () => {\n    if (this.state.values && this.state.values.length) {\n      return 0;\n    } else {\n      return this.props.placeholder.length;\n    }\n  };\n\n  toggleSelectAll = () => {\n    return this.setState({\n      values: this.state.values.length === 0 ? this.selectAll() : this.clearAll()\n    });\n  };\n\n  clearAll = () => {\n    this.props.onClearAll();\n    this.setState({\n      values: []\n    });\n  };\n\n  selectAll = (valuesList = []) => {\n    this.props.onSelectAll();\n    const values = valuesList.length > 0\n      ? valuesList\n      : this.props.options.filter((option) => !option.disabled);\n\n    this.setState({ values });\n  };\n\n  isSelected = (option) =>\n    !!this.state.values.find(\n      (value) =>\n        getByPath(value, this.props.valueField) === getByPath(option, this.props.valueField)\n    );\n\n  areAllSelected = () =>\n    this.state.values.length === this.props.options.filter((option) => !option.disabled).length;\n\n  safeString = (string) => string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n\n  sortBy = () => {\n    const { sortBy, options } = this.props;\n\n    if (!sortBy) {\n      return options;\n    }\n\n    options.sort((a, b) => {\n      if (getProp(a, sortBy) < getProp(b, sortBy)) {\n        return -1;\n      } else if (getProp(a, sortBy) > getProp(b, sortBy)) {\n        return 1;\n      } else {\n        return 0;\n      }\n    });\n\n    return options;\n  };\n\n  searchFn = ({ state, methods }) => {\n    const regexp = new RegExp(methods.safeString(state.search), 'i');\n\n    return methods\n      .sortBy()\n      .filter((item) =>\n        regexp.test(getByPath(item, this.props.searchBy) || getByPath(item, this.props.valueField))\n      );\n  };\n\n  searchResults = () => {\n    const args = { state: this.state, props: this.props, methods: this.methods };\n\n    return this.props.searchFn(args) || this.searchFn(args);\n  };\n\n  activeCursorItem = (activeCursorItem) =>\n    this.setState({\n      activeCursorItem\n    });\n\n  handleKeyDown = (event) => {\n    const args = {\n      event,\n      state: this.state,\n      props: this.props,\n      methods: this.methods,\n      setState: this.setState.bind(this)\n    };\n\n    return this.props.handleKeyDownFn(args) || this.handleKeyDownFn(args);\n  };\n\n  handleKeyDownFn = ({ event, state, props, methods, setState }) => {\n    const { cursor } = state;\n    const escape = event.key === 'Escape';\n    const enter = event.key === 'Enter';\n    const arrowUp = event.key === 'ArrowUp';\n    const arrowDown = event.key === 'ArrowDown';\n    const tab = event.key === 'Tab' && !event.shiftKey;\n    const shiftTab = event.shiftKey && event.key === 'Tab';\n\n    if ((arrowDown || tab) && cursor === null) {\n      return setState({\n        cursor: 0\n      });\n    }\n\n    if (arrowUp || arrowDown || shiftTab || tab) {\n      event.preventDefault();\n    }\n\n    if (escape) {\n      this.dropDown('close');\n    }\n\n    if (enter) {\n      const currentItem = methods.searchResults()[cursor];\n      if (currentItem && !currentItem.disabled) {\n        if (props.create && valueExistInSelected(state.search, state.values, props)) {\n          return null;\n        }\n\n        methods.addItem(currentItem);\n      }\n    }\n\n    if ((arrowDown || tab) && methods.searchResults().length === cursor) {\n      return setState({\n        cursor: 0\n      });\n    }\n\n    if (arrowDown || tab) {\n      setState((prevState) => ({\n        cursor: prevState.cursor + 1\n      }));\n    }\n\n    if ((arrowUp || shiftTab) && cursor > 0) {\n      setState((prevState) => ({\n        cursor: prevState.cursor - 1\n      }));\n    }\n\n    if ((arrowUp || shiftTab) && cursor === 0) {\n      setState({\n        cursor: methods.searchResults().length\n      });\n    }\n  };\n\n  renderDropdown = (ItemComponent) =>\n    this.props.portal ? (\n      ReactDOM.createPortal(\n        <Dropdown dropdownRef={this.dropdownRef} ItemComponent={ItemComponent} DropDownComponent={this.props.DropDownComponent}\n        props={this.props} state={this.state} methods={this.methods} onMouseEnter = {(item) => this.props.onMouseEnter(item)} onMouseLeave = {(item) => this.props.onMouseLeave(item)}\n         />,\n        this.dropdownRoot\n      )\n    ) : (\n        <Dropdown dropdownRef={this.dropdownRef} ItemComponent={ItemComponent} TextComponent={this.props.TextComponent} DropDownComponent={this.props.DropDownComponent}\n         props={this.props} state={this.state} methods={this.methods} onMouseEnter = {(item) => this.props.onMouseEnter}\n         onMouseLeave = {(item) => this.props.onMouseLeave} />\n      );\n\n  createNew = (item) => {\n    const newValue = {\n      [this.props.labelField]: item,\n      [this.props.valueField]: item\n    };\n\n    this.addItem(newValue);\n    this.props.onCreateNew(newValue);\n    this.setState({ search: '' });\n  };\n\n  render() {\n\n    const { ItemComponent, ReactDropdownSelect, Container } = this.props;\n\n    return (\n      <Container css={this.props.containerCss} className={this.props.className} style={!this.props.fixedHeight ? {...this.props.containerStyle, paddingBottom: this.state.dropdownSize.offsetHeight} : this.props.containerStyle}>\n        <ClickOutside ClickOutsideComponent={this.props.ClickOutsideComponent} onClickOutside={(event) => this.dropDown('close', event)}>\n          <ReactDropdownSelect\n            css={this.props.reactDropdownSelectCss}\n            onKeyDown={this.handleKeyDown}\n            onClick={(event) => this.dropDown('open', event)}\n            // onFocus={(event) => this.dropDown('open', event)}\n            tabIndex={this.props.disabled ? '-1' : '0'}\n            direction={this.props.direction}\n            style={this.props.style}\n            ref={this.select}\n            disabled={this.props.disabled}\n            className={`${LIB_NAME} ${this.props.className}`}\n            color={this.props.color}\n            {...this.props.additionalProps}\n            schema={this.props.schema}>\n\n            <Content InputComponent={this.props.InputComponent} ContentComponent={this.props.ContentComponent} props={this.props} state={this.state} methods={this.methods} />\n\n            {(this.props.name || this.props.required) && (\n              <input\n                tabIndex={-1}\n                onChange={this.methods.setSearch}\n                style={{ opacity: 0, width: 0, position: 'absolute' }}\n                name={this.props.name}\n                required={this.props.required}\n                pattern={this.props.pattern}\n                value={this.state.values.map(value => value[this.props.labelField]).toString() || []}\n                disabled={this.props.disabled}\n              />\n            )}\n\n            {this.props.loading && <Loading props={this.props} />}\n\n            {this.props.clearable && (\n              <Clear props={this.props} state={this.state} methods={this.methods} />\n            )}\n\n            {this.props.separator && (\n              <Separator props={this.props} state={this.state} methods={this.methods} />\n            )}\n\n            {this.props.dropdownHandle && (\n              <DropdownHandle\n                onClick={() => this.select.current.focus()}\n                props={this.props}\n                state={this.state}\n                methods={this.methods}\n              />\n            )}\n\n            {this.state.dropdown && !this.props.disabled && this.renderDropdown(ItemComponent)}\n          </ReactDropdownSelect>\n        </ClickOutside>\n      </Container>\n    );\n  }\n}\n\nexport const DefaultReactDropdownSelect = styled.div`\n\n    background-color: ${props => props.theme.bg.secondary};\n    box-shadow: 0 0.1rem 0.2rem 0rem rgba(0,0,0,0.1) !important;\n    color: ${props => props.theme.bg.octonary};\n\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz3};\n\n    position: relative;\n    display: flex;\n\n    vertical-align: middle;\n    line-height: 1.6rem;\n    height: 1.6rem;\n    width: 100%;\n    padding: 2px 5px;\n    direction: ${({ direction }) => direction};\n    cursor: pointer;\n    min-height: 36px;\n    ${({ disabled }) =>\n    disabled ? 'cursor: not-allowed;pointer-events: none;opacity: 0.3;' : 'pointer-events: all;'}\n\n    border-bottom: 2px solid transparent;\n    border-radius: 0.2rem;\n\n    :focus, :focus-within {\n        color: ${props => props.theme.bg.octonary};\n        background-color: ${props => props.theme.bg.secondary};\n        box-shadow: none;\n        border-bottom: 2px solid ${props => !!props.schema ? props.theme.schema[props.schema].solid : props.theme.bg.octonary};\n    }\n\n  ${props => props.css && props.css};\n\n\n`;\n\nconst DefaultContainer = styled.div`\n  ${props => props.css && props.css};\n`;\n\nDropDownSearch.defaultProps = {\n  addPlaceholder: '',\n  placeholder: 'Select...',\n  values: [],\n  options: [],\n  multi: false,\n  showSelectedBox: false,\n  disabled: false,\n  searchBy: 'label',\n  sortBy: null,\n  clearable: false,\n  searchable: true,\n  fixedHeight: true,\n  dropdownHandle: true,\n  separator: false,\n  keepOpen: undefined,\n  noDataLabel: 'No data',\n  createNewLabel: 'add {search}',\n  disabledLabel: 'disabled',\n  dropdownGap: 2,\n  closeOnScroll: false,\n  debounceDelay: 0,\n  labelField: 'label',\n  valueField: 'value',\n  color: '#0074D9',\n  keepSelectedInList: true,\n  closeOnSelect: false,\n  clearOnBlur: true,\n  clearOnSelect: true,\n  dropdownPosition: 'bottom',\n  dropdownHeight: '300px',\n  autoFocus: false,\n  portal: null,\n  create: false,\n  direction: 'ltr',\n  name: null,\n  required: false,\n  pattern: '',\n  onChange: () => undefined,\n  onDropdownOpen: () => undefined,\n  onDropdownClose: () => undefined,\n  onClearAll: () => undefined,\n  onSelectAll: () => undefined,\n  onCreateNew: () => undefined,\n  searchFn: () => undefined,\n  handleKeyDownFn: () => undefined,\n  additionalProps: null,\n  showButton: true,\n  ReactDropdownSelect: DefaultReactDropdownSelect,\n  Container: DefaultContainer,\n  fillable: true,\n  schema: null,\n  onMouseEnter: () => {},\n  onMouseLeave: () => {},\n};\n\n\n\nexport default DropDownSearch;\n","import styled from \"styled-components\"\nimport * as buttonCss from \"../../../../common_css/button_css\";\n\nexport const Container = styled.button`\n\t${buttonCss.buttonCss}\n\tbackground: ${props => props.theme.bg.tertiary};\n\tpadding: .1rem .5rem;\n\tborder-radius: .4rem;\n\tmargin: 0 1rem;\n  border: 1px solid rgba(0,0,0,0);\n  \n  color: ${props => props.theme.textColor};\n`\n\nexport const Content = styled.span`\n\t\n`\n","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\n\nimport * as styled from \"./control_button.style\"\n\nconst ControlButton = props => {\n\n\tconst {\n\t\tcontent,\n\t\ton,\n\t\tonClick,\n\t\tschema\n\t} = props\n\n\treturn (\n\t\t<styled.Container\n\t\t\ton={on}\n\t\t\tonClick={onClick}\n\t\t\tschema={schema}\n\t\t>\n\t\t\t<styled.Content\n\t\t\t\tschema={schema}\n\t\t\t>{content}</styled.Content>\n\t\t</styled.Container>\n\t);\n};\n\nControlButton.propTypes = {\n\tcontent: PropTypes.string\n};\n\nControlButton.defaultProps = {\n\tcontent: \"\"\n};\n\n\nexport default ControlButton;\n","import styled from \"styled-components\"\nimport * as buttonCss  from \"../../../common_css/button_css\";\n\nexport const Container = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n  \n`\n\n\nexport const ControlsContainer = styled.div`\n\tdisplay: flex;\n\tborder-bottom-left-radius: .2rem;\n\tborder-bottom-right-radius: .2rem;\n\tpadding: .25rem .5rem;\n\tbackground: ${ props => props.theme.bg.quaternary};\n`\n\n","import React, {useEffect, useState} from 'react';\n\n// functions external\nimport PropTypes from 'prop-types';\n\n// components internal\nimport ControlButton from \"./control_button/control_button\";\nimport CalendarPlaceholderButton from \"../calendar_placeholder_button/calendar_placeholder_button\";\n\n// styles\nimport * as styled from \"./advanced_calendar_placeholder_button.style\"\nimport {isNonEmptyArray} from \"../../../methods/utils/array_utils\";\n\nexport const FILTER_DATE_OPTIONS = {\n\tLESS_THAN: \"LESS_THAN\",\n\tEQUAL: \"EQUAL\",\n\tGREATER_THAN: \"GREATER_THAN\"\n}\n\nconst AdvancedCalendarPlaceholderButton = (props) => {\n\n\tconst {\n\t\tusable,\n\t\tonClick,\n\t\tlabel,\n\t\tonOptionClick,\n\t\tindex,\n\t\tfilterValue,\n\t\tschema\n\t} = props\n\n\tconst [containsLessThan, setContainsLessThan] = useState(false)\n\tconst [containsGreaterThan, setContainsGreaterThan] = useState(false)\n\tconst [containsEquals, setContainsEquals] = useState(false)\n\n\tuseEffect(() => {\n\n\t\tif(isNonEmptyArray(filterValue)) {\n\t\t\tconst {\n\t\t\t\toptions = []\n\t\t\t} = filterValue[index] || {}\n\n\t\t\tsetContainsLessThan(options.includes(FILTER_DATE_OPTIONS.LESS_THAN))\n\t\t\tsetContainsGreaterThan(options.includes(FILTER_DATE_OPTIONS.GREATER_THAN))\n\t\t\tsetContainsEquals(options.includes(FILTER_DATE_OPTIONS.EQUAL))\n\t\t}\n\t\telse {\n\t\t\tconst {\n\t\t\t\toptions = []\n\t\t\t} = filterValue || {}\n\n\t\t\tsetContainsLessThan(options.includes(FILTER_DATE_OPTIONS.LESS_THAN))\n\t\t\tsetContainsGreaterThan(options.includes(FILTER_DATE_OPTIONS.GREATER_THAN))\n\t\t\tsetContainsEquals(options.includes(FILTER_DATE_OPTIONS.EQUAL))\n\t\t}\n\n\t\treturn () => {\n\n\t\t};\n\t}, [filterValue, index]);\n\n\treturn (\n\t\t<styled.Container>\n\t\t\t<CalendarPlaceholderButton\n\t\t\t\tusable={usable}\n\t\t\t\tonClick={onClick}\n\t\t\t\tlabel={label}\n\t\t\t\tcontainerStyle={{\n\t\t\t\t\talignSelf: \"stretch\",\n\t\t\t\t\tminWidth: \"fit-content\",\n\t\t\t\t\twidth: \"unset\",\n\t\t\t\t\tborderBottomLeftRadius: 0,\n\t\t\t\t\tborderBottomRightRadius: 0,\n\t\t\t\t}}\n\t\t\t/>\n\n\t\t\t<styled.ControlsContainer>\n\t\t\t\t<ControlButton\n\t\t\t\t\tschema={schema}\n\t\t\t\t\ton={containsLessThan}\n\t\t\t\t\tcontent={\"<\"}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tonOptionClick(index, FILTER_DATE_OPTIONS.LESS_THAN)\n\t\t\t\t\t}}\n\t\t\t\t/>\n\n\t\t\t\t<ControlButton\n\t\t\t\t\tschema={schema}\n\t\t\t\t\ton={containsEquals}\n\t\t\t\t\tcontent={\"=\"}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tonOptionClick(index, FILTER_DATE_OPTIONS.EQUAL)\n\t\t\t\t\t}}\n\t\t\t\t/>\n\n\t\t\t\t<ControlButton\n\t\t\t\t\tschema={schema}\n\t\t\t\t\ton={containsGreaterThan}\n\t\t\t\t\tcontent={\">\"}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tonOptionClick(index, FILTER_DATE_OPTIONS.GREATER_THAN)\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</styled.ControlsContainer>\n\t\t</styled.Container>\n\t);\n};\n\nAdvancedCalendarPlaceholderButton.propTypes = {\n\tonOptionClick: PropTypes.func,\n};\n\nAdvancedCalendarPlaceholderButton.defaultProps = {\n\tonOptionClick: () => {},\n\tfilterValue: []\n};\n\n\n\nexport default AdvancedCalendarPlaceholderButton;\n","export var globStyle = {\n\n    lrgFontSize : '1.5rem',\n    medFontSize : '1.2rem',\n    smlFontSize : '1rem',\n\n    font : 'Montserrat',\n\n    lightBG : '#FFFFFF',\n    darkBG : '#3D3D3D',\n\n    white : '#FFFFFF',\n    black : '#000000',\n\n    grey1 : '#202020',\n    grey2 : '#3D3D3D',\n    grey3 : '#5D5D5D',\n    grey4 : '#BCBCBC',\n    grey5 : '#E9E9E9',\n\n    red : '#FF4B4B',\n    green : '#52B853'\n\n}\n","export const GET_MAPS = 'GET_MAPS'\nexport const GET_MAPS_STARTED = 'GET_MAPS_STARTED'\nexport const GET_MAPS_SUCCESS = 'GET_MAPS_SUCCESS'\nexport const GET_MAPS_FAILURE = 'GET_MAPS_FAILURE'\n\nexport const GET_MAP = 'GET_MAP'\nexport const GET_MAP_STARTED = 'GET_MAP_STARTED'\nexport const GET_MAP_SUCCESS = 'GET_MAP_SUCCESS'\nexport const GET_MAP_FAILURE = 'GET_MAP_FAILURE'\n\nexport const SET_MAP_ATTRIBUTES = 'SET_MAP_ATTRIBUTES'\nexport const SET_CURRENT_MAP = 'SET_CURRENT_MAP'\n","import React, { useEffect, useState } from 'react'\n\n// components internal\nimport Lot from \"./lot\"\n\n// functions external\nimport PropTypes from 'prop-types'\n\nimport { useSelector } from \"react-redux\"\n\n// utils\nimport { getBinQuantity, getCustomFields, getLotTotalQuantity } from \"../../../../../methods/utils/lot_utils\"\n\nconst LotContainer = (props) => {\n\n    const {\n        lotId,\n        binId,\n        enableFlagSelector,\n        containerStyle,\n        quantity,\n        ...rest\n    } = props\n\n    const lot = useSelector(state => { return state.cardsReducer.cards[lotId] }) || {}\n    const {\n        bins,\n        lotNumber,\n        lotTemplateId,\n        name,\n        flags,\n        process_id: processId\n    } = lot || {}\n    const process = useSelector(state => { return state.processesReducer.processes[processId] }) || {}\n    const station = useSelector(state => { return state.stationsReducer.stations[binId] }) || {}\n\n    const [totalQuantity, setTotalQuantity] = useState(0)\n    const [count, setCount] = useState(0)\n    const [templateValues, setTemplateValues] = useState([])\n    const [processName, setProcessName] = useState(\"\")\n    const [stationName, setStationName] = useState(\"\")\n\n    useEffect(() => {\n        setProcessName(process.name)\n    }, [process])\n\n    useEffect(() => {\n        setStationName(station.name)\n    }, [station])\n\n    useEffect(() => {\n        setTemplateValues(getCustomFields(lotTemplateId, lot))\n    }, [lotTemplateId, lot])\n\n    useEffect(() => {\n        setTotalQuantity(getLotTotalQuantity({ bins }))\n    }, [bins])\n\n    useEffect(() => {\n        setCount(getBinQuantity({ bins }, binId))\n    }, [bins, binId])\n\n\n    return (\n        <Lot\n            stationName={stationName}\n            templateValues={templateValues}\n            totalQuantity={totalQuantity}\n            lotNumber={lotNumber}\n            processName={processName}\n            flags={flags || []}\n            enableFlagSelector={enableFlagSelector}\n            name={name}\n            count={quantity ? quantity : count}\n            id={lotId}\n            isSelected={false}\n            selectable={false}\n            onClick={() => {\n\n            }}\n\n            {...rest}\n            containerStyle={{ width: '80%', margin: '.5rem auto .5rem auto', ...containerStyle }}\n        />\n    )\n}\n\nLotContainer.propTypes = {\n    lotId: PropTypes.string,\n    binId: PropTypes.string\n}\n\nLotContainer.defaultProps = {\n    lotId: \"\",\n    binId: \"\",\n    enableFlagSelector: false,\n}\n\nexport default LotContainer\n","import { useState, useEffect } from 'react';\n\n// Usage\n// function App() {\n//   const size = useWindowSize();\n\n//   return (\n//     <div>\n//       {size.width}px / {size.height}px\n//     </div>\n//   );\n// }\n\n// Hook\nfunction useWindowSize() {\n    // Initialize state with undefined width/height so server and client renders match\n    // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n    const [windowSize, setWindowSize] = useState({\n        width: undefined,\n        height: undefined,\n    });\n\n    // let windowSize = {\n    //     width: undefined,\n    //     height: undefined,\n    // }\n\n    useEffect(() => {\n        // Handler to call on window resize\n        function handleResize() {\n            // Set window width/height to state\n            setWindowSize({\n                width: window.innerWidth,\n                height: window.innerHeight,\n            });\n\n            // windowSize = {\n            //     width: window.innerWidth,\n            //     height: window.innerHeight,\n            // }\n        }\n\n        // Add event listener\n        window.addEventListener(\"resize\", handleResize, {passive:true});\n\n        // Call handler right away so state gets updated with initial window size\n        handleResize();\n\n        // Remove event listener on cleanup\n        return () => window.removeEventListener(\"resize\", handleResize);\n    }, []); // Empty array ensures that effect is only run on mount\n\n    return windowSize;\n}\n\nexport default useWindowSize\n","import { denormalize, schema } from 'normalizr';\nimport { uuidv4 } from '../methods/utils/utils';\n// condition schema - NOT CURRENTLY USED - condtions should probably have an id attribute / some unique identifier...\n\n\n// schedule schema\nexport const dashboardSchema = new schema.Entity(\n    // key\n    'dashboards',\n    // definition\n    {\n        //condition: conditionSchema\n    },\n    // options\n    {\n        idAttribute: (value, parent, key) => {\n            return value._id.$oid\n        },\n\n    },\n\n);\n\n// schema for list of schedules\nexport const dashboardsSchema = [dashboardSchema]\n\n// schedule schema\nexport const deviceSchema = new schema.Entity(\n    // key\n    'devices',\n    // definition\n    {\n        //condition: conditionSchema\n    },\n    // options\n    {\n        idAttribute: (value, parent, key) => {\n            return value._id\n        },\n\n    },\n\n);\n\n// schema for list of schedules\nexport const devicesSchema = [deviceSchema]\n\nexport const locationsSchema = new schema.Entity(\n    // key\n    'locations',\n    // definition\n    {},\n    // options\n    {\n        idAttribute: (value, parent, key) => {\n            return value._id.$oid\n        }\n    }\n)\n\n// Schema for events\nexport const eventsSchema = new schema.Entity(\n    // key\n    'events',\n    // definition\n    {},\n    // options\n    {\n        idAttribute: (value, parent, key) => {\n            return value._id.$oid\n        }\n    }\n)\n\n\n// process schema\nexport const processSchema = new schema.Entity(\n    // key\n    'processes',\n    // definition\n    {\n        //condition: conditionSchema\n    },\n    // options\n    {\n        idAttribute: (value, parent, key) => {\n            return value._id\n        },\n\n    },\n\n);\n\nexport const processesSchema = [processSchema]\n\n\n// sounds schema\nexport const soundSchema = new schema.Entity(\n    // key\n    'sounds',\n    // definition\n    {\n        //condition: conditionSchema\n    },\n    // options\n    {\n        idAttribute: (value, parent, key) => {\n            return value._id\n        },\n\n    },\n\n);\n\nexport const soundsSchema = [soundSchema]\n\n\n// sounds schema\nexport const taskAnalysisSchema = new schema.Entity(\n    // key\n    'taskAnalysis',\n    // definition\n    {\n        //condition: conditionSchema\n    },\n    // options\n    {\n        idAttribute: (value, parent, key) => {\n            return value.task_id\n        },\n\n    },\n\n);\n\nexport const tasksAnalysisSchema = [taskAnalysisSchema]\n\n\n// positions schema\nexport const positionSchema = new schema.Entity(\n    // key\n    'positions',\n    // definition\n    {\n        //condition: conditionSchema\n    },\n    // options\n    {\n        idAttribute: (value, parent, key) => {\n            return value._id\n        },\n\n    },\n\n);\n\nexport const positionsSchema = [positionSchema]\n\n\n// positions schema\nexport const stationSchema = new schema.Entity(\n    // key\n    'stations',\n    // definition\n    {},\n    // options\n    {\n        idAttribute: (value, parent, key) => {\n            return value._id\n        },\n\n    },\n\n);\n\nexport const stationsSchema = [stationSchema]\n\n// status schema\nexport const statusSchema = new schema.Entity(\n    // key\n    'status',\n    // definition\n    {\n        //condition: conditionSchema\n    },\n    // options\n    {\n        idAttribute: (value, parent, key) => {\n            return value._id.$oid\n        },\n\n        // processStrategy\n        processStrategy: (value, parent, key) => {\n            return value\n        }\n    },\n\n);\n\n// schema for list of status\nexport const statusesSchema = [statusSchema]","export const GET_SETTINGS = 'GET_SETTINGS'\nexport const GET_SETTINGS_STARTED = 'GET_SETTINGS_STARTED'\nexport const GET_SETTINGS_SUCCESS = 'GET_SETTINGS_SUCCESS'\nexport const GET_SETTINGS_FAILURE = 'GET_SETTINGS_FAILURE'\n\nexport const POST_SETTINGS = 'POST_SETTINGS'\nexport const POST_SETTINGS_STARTED = 'POST_SETTINGS_STARTED'\nexport const POST_SETTINGS_SUCCESS = 'POST_SETTINGS_SUCCESS'\nexport const POST_SETTINGS_FAILURE = 'POST_SETTINGS_FAILURE'\n\nexport const PUT_SETTINGS = 'PUT_SETTINGS'\nexport const PUT_SETTINGS_STARTED = 'PUT_SETTINGS_STARTED'\nexport const PUT_SETTINGS_SUCCESS = 'PUT_SETTINGS_SUCCESS'\nexport const PUT_SETTINGS_FAILURE = 'PUT_SETTINGS_FAILURE'\n\nexport const DELETE_SETTINGS = 'DELETE_SETTINGS'\nexport const DELETE_SETTINGS_STARTED = 'DELETE_SETTINGS_STARTED'\nexport const DELETE_SETTINGS_SUCCESS = 'DELETE_SETTINGS_SUCCESS'\nexport const DELETE_SETTINGS_FAILURE = 'DELETE_SETTINGS_FAILURE'\n\nexport const POST_TASK_QUEUE = 'POST_TASK_QUEUE'\nexport const POST_TASK_QUEUE_STARTED = 'POST_TASK_QUEUE_STARTED'\nexport const POST_TASK_QUEUE_SUCCESS = 'POST_TASK_QUEUE_SUCCESS'\nexport const POST_TASK_QUEUE_FAILURE = 'POST_TASK_QUEUE_FAILURE'\nexport const DEVICE_ENABLED = 'DEVICE_ENABLED'\n","export const hexToRGBA = (hex, alpha) => {\n  const RR = parseInt(hex.slice(1, 3), 16);\n  const GG = parseInt(hex.slice(3, 5), 16);\n  const BB = parseInt(hex.slice(5, 7), 16);\n\n  return `rgba(${RR}, ${GG}, ${BB}${alpha && `, ${alpha}`})`;\n};\n\nexport const intToRGB = (i) => {\n    var c = (i & 0x00FFFFFF)\n        .toString(16)\n        .toUpperCase();\n\n    return \"00000\".substring(0, 6 - c.length) + c;\n}\n\nexport function LightenDarkenColor(col,amt) {\n    var usePound = false;\n    if ( col[0] === \"#\" ) {\n        col = col.slice(1);\n        usePound = true;\n    }\n\n    var num = parseInt(col,16);\n\n    var r = (num >> 16) + amt;\n\n    if ( r > 255 ) r = 255;\n    else if  (r < 0) r = 0;\n\n    var b = ((num >> 8) & 0x00FF) + amt;\n\n    if ( b > 255 ) b = 255;\n    else if  (b < 0) b = 0;\n\n    var g = (num & 0x0000FF) + amt;\n\n    if ( g > 255 ) g = 255;\n    else if  ( g < 0 ) g = 0;\n\n    return (usePound?\"#\":\"\") + (g | (b << 8) | (r << 16)).toString(16);\n}\n\n// export function pSBC(p,c0,c1,l){\n//     let r,g,b,P,f,t,h,i=parseInt,m=Math.round,a=typeof(c1)==\"string\";\n//     if(typeof(p)!=\"number\"||p<-1||p>1||typeof(c0)!=\"string\"||(c0[0]!='r'&&c0[0]!='#')||(c1&&!a))return null;\n//     if(!this.pSBCr)this.pSBCr=(d)=>{\n//         let n=d.length,x={};\n//         if(n>9){\n//             [r,g,b,a]=d=d.split(\",\"),n=d.length;\n//             if(n<3||n>4)return null;\n//             x.r=i(r[3]==\"a\"?r.slice(5):r.slice(4)),x.g=i(g),x.b=i(b),x.a=a?parseFloat(a):-1\n//         }else{\n//             if(n==8||n==6||n<4)return null;\n//             if(n<6)d=\"#\"+d[1]+d[1]+d[2]+d[2]+d[3]+d[3]+(n>4?d[4]+d[4]:\"\");\n//             d=i(d.slice(1),16);\n//             if(n==9||n==5)x.r=d>>24&255,x.g=d>>16&255,x.b=d>>8&255,x.a=m((d&255)/0.255)/1000;\n//             else x.r=d>>16,x.g=d>>8&255,x.b=d&255,x.a=-1\n//         }return x};\n//     h=c0.length>9,h=a?c1.length>9?true:c1==\"c\"?!h:false:h,f=this.pSBCr(c0),P=p<0,t=c1&&c1!=\"c\"?this.pSBCr(c1):P?{r:0,g:0,b:0,a:-1}:{r:255,g:255,b:255,a:-1},p=P?p*-1:p,P=1-p;\n//     if(!f||!t)return null;\n//     if(l)r=m(P*f.r+p*t.r),g=m(P*f.g+p*t.g),b=m(P*f.b+p*t.b);\n//     else r=m((P*f.r**2+p*t.r**2)**0.5),g=m((P*f.g**2+p*t.g**2)**0.5),b=m((P*f.b**2+p*t.b**2)**0.5);\n//     a=f.a,t=t.a,f=a>=0||t>=0,a=f?a<0?t:t<0?a:a*P+t*p:0;\n//     if(h)return\"rgb\"+(f?\"a(\":\"(\")+r+\",\"+g+\",\"+b+(f?\",\"+m(a*1000)/1000:\"\")+\")\";\n//     else return\"#\"+(4294967296+r*16777216+g*65536+b*256+(f?m(a*255):0)).toString(16).slice(1,f?undefined:-2)\n// }\n\nexport const RGB_Linear_Blend=(p,c0,c1)=>{\n    var i=parseInt,r=Math.round,P=1-p,[a,b,c,d]=c0.split(\",\"),[e,f,g,h]=c1.split(\",\"),x=d||h,j=x?\",\"+(!d?h:!h?d:r((parseFloat(d)*P+parseFloat(h)*p)*1000)/1000+\")\"):\")\";\n    return\"rgb\"+(x?\"a(\":\"(\")+r(i(a[3]===\"a\"?a.slice(5):a.slice(4))*P+i(e[3]==\"a\"?e.slice(5):e.slice(4))*p)+\",\"+r(i(b)*P+i(f)*p)+\",\"+r(i(c)*P+i(g)*p)+j;\n}\n\nexport const RGB_Linear_Shade=(p,c)=>{\n    var i=parseInt,r=Math.round,[a,b,c,d]=c.split(\",\"),P=p<0,t=P?0:255*p,P=P?1+p:1-p;\n    return\"rgb\"+(d?\"a(\":\"(\")+r(i(a[3]===\"a\"?a.slice(5):a.slice(4))*P+t)+\",\"+r(i(b)*P+t)+\",\"+r(i(c)*P+t)+(d?\",\"+d:\")\");\n}\n\nexport const RGB_Log_Blend=(p,c0,c1)=>{\n    var i=parseInt,r=Math.round,P=1-p,[a,b,c,d]=c0.split(\",\"),[e,f,g,h]=c1.split(\",\"),x=d||h,j=x?\",\"+(!d?h:!h?d:r((parseFloat(d)*P+parseFloat(h)*p)*1000)/1000+\")\"):\")\";\n    return\"rgb\"+(x?\"a(\":\"(\")+r((P*i(a[3]===\"a\"?a.slice(5):a.slice(4))**2+p*i(e[3]==\"a\"?e.slice(5):e.slice(4))**2)**0.5)+\",\"+r((P*i(b)**2+p*i(f)**2)**0.5)+\",\"+r((P*i(c)**2+p*i(g)**2)**0.5)+j;\n}\n\nexport const RGB_Log_Shade=(p,c)=>{\n    var i=parseInt,r=Math.round,[a,b,c,d]=c.split(\",\"),P=p<0,t=P?0:p*255**2,P=P?1+p:1-p;\n    return\"rgb\"+(d?\"a(\":\"(\")+r((P*i(a[3]===\"a\"?a.slice(5):a.slice(4))**2+t)**0.5)+\",\"+r((P*i(b)**2+t)**0.5)+\",\"+r((P*i(c)**2+t)**0.5)+(d?\",\"+d:\")\");\n}\n","import React from 'react'\nimport store from \"../../redux/store\";\n\nexport const isDeviceConnected = () => {\n\tconst devices = store.getState().devicesReducer.devices || {}\n\n\tfor(const device of Object.values(devices)) {\n\t\tconst {\n\t\t\tconnected\n\t\t} = device || {}\n\t\tif(connected) return true\n\t}\n\n\treturn false\n}\n\nconst defaultWidgetPages = ['dashboards']\n\nexport const DeviceItemTypes = {\n\n\tgeneric: {\n\t\ticon: 'icon-rmLogo',\n\t\tprimaryColor: '#FF4B4B',\n\t\tstartGradientColor: '#FF4B4B',\n\t\tstopGradientColor: '#ff2424',\n\t\tsvgPath: 'M195.33,232.27c1.06,1.43.51,2.6-1.24,2.6H172a7.18,7.18,0,0,1-5.09-2.6l-58.8-79.35h35.12a29.27,29.27,0,1,0,0-58.53H96.36V234.87H73V71h70.24a52.68,52.68,0,0,1,10,104.4ZM263.64,71.13,214.18,120.6l-14-14a1.35,1.35,0,0,0-.83-.29l-.21,0a1.29,1.29,0,0,0-1.09,1.28,1.1,1.1,0,0,0,0,.26s0,.09,0,.13a57.16,57.16,0,0,1,.65,28.85l0,.13a1.1,1.1,0,0,0,0,.26,1.33,1.33,0,0,0,.29.83,1.45,1.45,0,0,0,.18.17l.6.6,8.15,8.16h0l6.27,6.27,16.32-16.31,33.15-33.15V235h23.41V71.13Z',\n\t\twidgetPages: defaultWidgetPages,\n\t},\n\n\ttrident: {\n\t\ticon: 'icon-trident',\n\t\tprimaryColor: '#d7841e',\n\t\tstartGradientColor: '#d7a31e',\n\t\tstopGradientColor: '#d7841e',\n\t\tsvgPath: \"M171.27,213.07c-2.27-1-3-2.87-2.94-5.29.06-12.66,0-25.33,0-38v-2.61c-6,2.49-11.87,4.64-17.47,7.29a98.76,98.76,0,0,0-10.57,6.33c-1.52,1-3,1.62-4.73.73s-2.06-2.35-2.18-4.09c-1.64-23.93-5.32-47.51-12.67-70.41-4.15-13-9.45-25.4-17.78-36.34A56.17,56.17,0,0,0,90.15,58.17a15.14,15.14,0,0,1-2-1.55,3.57,3.57,0,0,1-.94-4,3.4,3.4,0,0,1,3.59-2.53,91.1,91.1,0,0,1,11.31,1.47,67.94,67.94,0,0,1,37.43,22.22c1.29,1.48,2.14,3,1.3,4.92s-2.53,2.45-4.49,2.37a10.46,10.46,0,0,0-1.11.06c7.69,22,14.86,44.08,17.35,67.37l15.7-5.31V73.57a43.06,43.06,0,0,0-4.71,2.35c-2.11,1.37-3.8,1.61-5.32.39s-1.91-2.94-.87-5.24q9.39-20.74,18.8-41.49a4,4,0,0,1,3.76-2.65,4,4,0,0,1,3.9,2.72Q193.19,50.32,202.57,71c1.08,2.39.75,4.12-.89,5.39s-3.17.91-5.32-.49a43.24,43.24,0,0,0-4.67-2.32V143.2l15.69,5.3c2.5-23.14,9.63-45.25,17.41-67.43-.78,0-1.37,0-1.95,0a3.8,3.8,0,0,1-3.72-2.42,3.89,3.89,0,0,1,.79-4.22A68.45,68.45,0,0,1,240,58.15a69.71,69.71,0,0,1,27.48-8.07c2.46-.2,4.39.37,5.61,2.64V54.9a27.37,27.37,0,0,1-3.28,3.27,59.26,59.26,0,0,0-12.89,12.7c-8.23,10.85-13.49,23.18-17.61,36-7.36,22.88-11,46.46-12.7,70.39-.12,1.79-.45,3.38-2.2,4.26s-3.32.15-4.89-.84c-3.41-2.18-6.82-4.39-10.4-6.28a89.42,89.42,0,0,0-17.47-6.79v2.17c0,12.66,0,25.32,0,38,0,2.42-.66,4.24-2.93,5.29Z\",\n\t\twidgetPages: [...defaultWidgetPages, 'statistics'],\n\t},\n\tarm: {\n\t\ticon: 'icon-arm',\n\t\tprimaryColor: '#1e9cd7',\n\t\tstartGradientColor: '#1e9cd7',\n\t\tstopGradientColor: '#005b97',\n\t\tsvgPath: 'M173.7,172.2a22.64,22.64,0,1,1-22.64,22.64A22.64,22.64,0,0,1,173.7,172.2Zm.08-4L125.61,65.38A22.53,22.53,0,0,1,103.37,75.8l48.17,102.84a22.53,22.53,0,0,1,22.24-10.42ZM82,49.35a22.64,22.64,0,1,0,22.64-22.63A22.64,22.64,0,0,0,82,49.35ZM240.43,25,127.3,34.91a22.5,22.5,0,0,1,2.14,24.46l113.13-9.9A22.55,22.55,0,0,1,240.43,25Zm1.43,10.68a13.21,13.21,0,1,0,13.21-13.21A13.22,13.22,0,0,0,241.86,35.69ZM250,81.74a57.78,57.78,0,0,0,4.17,13.78,3.78,3.78,0,0,0,.17.35l8.11-1.42-2.61-14.76,6.92-1.22,2.61,14.75,8.1-1.42c0-.14,0-.27,0-.4A57.9,57.9,0,0,0,276.7,77a57.32,57.32,0,0,0-4.18-13.78l-2.61-14.83-23.34,4.12,2.62,14.83A57.43,57.43,0,0,0,250,81.74Zm11.36-.88,5.47,31,2.45,7.46,2.17-.39-.25-7.84-5.46-31Z',\n\t\twidgetPages: [...defaultWidgetPages, 'statistics'],\n\t},\n\tcart: {\n\t\ticon: 'icon-cart',\n\t\tdeviceFontSize: '2.5rem',\n\t\tprimaryColor: '#03ffa3',\n\t\tstartGradientColor: '#03ffa3',\n\t\tstopGradientColor: '#00b673',\n\t\tsvgPath:\n\t\t\t<svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 400 400\">\n\t\t\t\t<path d=\"M285,90a35,35,0,0,1-35-35,39.83,39.83,0,0,1,2.05-11.22A2.67,2.67,0,0,0,249.37,40H150.63A2.67,2.67,0,0,0,148,43.78,39.83,39.83,0,0,1,150,55a35,35,0,0,1-35,35,39.83,39.83,0,0,1-11.22-2A2.67,2.67,0,0,0,100,90.63V309.37a2.67,2.67,0,0,0,3.78,2.68A39.83,39.83,0,0,1,115,310a35,35,0,0,1,35,35A39.83,39.83,0,0,1,148,356.22a2.67,2.67,0,0,0,2.68,3.78h98.74a2.67,2.67,0,0,0,2.68-3.78A39.83,39.83,0,0,1,250,345a35,35,0,0,1,35-35,39.83,39.83,0,0,1,11.22,2.05,2.67,2.67,0,0,0,3.78-2.68V90.63A2.67,2.67,0,0,0,296.22,88,39.83,39.83,0,0,1,285,90ZM159.38,167a12.9,12.9,0,0,1,2.61-6.38l36.69-45.94a16.33,16.33,0,0,1,4.83-4.13c1.27-.55,5,2.41,6.42,4.13l36.69,45.94a12.9,12.9,0,0,1,2.61,6.38c.07,1.78-5,3.24-7.24,3.24H166.62C164.42,170.19,159.32,168.73,159.38,167ZM250,248.06a13,13,0,0,1-6.61,1.94H168a13,13,0,0,1-6.61-1.94c-1.44-1.07.6-6,2-7.69l36.69-45.93a16.64,16.64,0,0,1,4.82-4.14c1.28-.55,5.05,2.42,6.43,4.14L248,240.37C249.39,242.09,251.43,247,250,248.06Z\" />\n\t\t\t\t<circle cx=\"115\" cy=\"55\" r=\"30\" />\n\t\t\t\t<circle cx=\"285\" cy=\"55\" r=\"30\" />\n\t\t\t\t<circle cx=\"115\" cy=\"345\" r=\"30\" />\n\t\t\t\t<circle cx=\"285\" cy=\"345\" r=\"30\" />\n\t\t\t</svg>,\n\n\t\twidgetPages: defaultWidgetPages,\n\t},\n\trmVision: {\n\t\ticon: 'icon-rmVision',\n\t\tprimaryColor: '#eb008a',\n\t\tstartGradientColor: '#eb008a',\n\t\tstopGradientColor: '#9e005d',\n\t\tsvgPath: \"M306.33,121.46a54.29,54.29,0,0,1-3.68,6.06c-17.81,22.3-38.44,41.43-63.28,55.73-16.35,9.41-33.78,15.74-52.75,17a105.48,105.48,0,0,1-44.93-7.08c-21.83-8.29-40.59-21.41-57.72-37a239.89,239.89,0,0,1-27.6-29.84c-3.59-4.6-3.61-8.11,0-12.69,17.93-22.74,38.79-42.24,64-56.77,19.78-11.41,40.89-18.3,64.05-17.27a112.79,112.79,0,0,1,45.15,12c29.9,14.68,53.82,36.52,74.31,62.41a31.48,31.48,0,0,1,2.47,4.5ZM72.5,119.81c.93,1.1,1.56,2,2.29,2.71,7.68,7.88,15,16.13,23.16,23.53C113.61,160.33,131,172,151.3,178.87a86,86,0,0,0,37.38,4.47c16.4-1.8,31.28-7.88,45.3-16.28,18.21-10.92,33.79-25,47.92-40.72,1.85-2.06,3.61-4.2,5.59-6.51-4.85-5.25-9.4-10.44-14.24-15.35C257,88,239,73.8,217.53,64.5A95,95,0,0,0,184,56.26c-17.93-.84-34.42,4.16-50.12,12.28-17.55,9.07-32.74,21.32-46.56,35.31C82.25,109,77.49,114.41,72.5,119.81Z M229.92,120.19c-.2,27.69-22.78,50-50.26,49.71a49.92,49.92,0,1,1,50.26-49.71Zm-16.65-.12A33.29,33.29,0,1,0,180,153.29,33.33,33.33,0,0,0,213.27,120.07Z M176.11,135.28h-4.3V141c0,1.28-.18,1.46-1.44,1.46h-5.2c0,.84,0,1.63,0,2.41,0,.13.21.28.35.38A2.37,2.37,0,1,1,162,148a2.33,2.33,0,0,1,1-2.71.76.76,0,0,0,.37-.77c0-.85,0-1.71,0-2.56s.26-1.24,1.27-1.25H170v-5.44h-4.24c-.71,0-1-.33-1-1,0-1.19,0-2.38,0-3.56V130h-5.4c0,.22,0,.43,0,.65v4.75c0,.91-.29,1.19-1.2,1.2h-1.63a2.2,2.2,0,0,0-2.14.79,2.23,2.23,0,0,1-3.37-.11,2.36,2.36,0,0,1,.32-3.43,2.29,2.29,0,0,1,3.35.49,1,1,0,0,0,1.08.52c.59,0,1.38.14,1.72-.17s.11-1.1.12-1.68c0-1.23,0-2.45,0-3.68,0-.85.28-1.12,1.14-1.12h6v-4.26a4.22,4.22,0,0,0-.49,0h-8.74a.76.76,0,0,0-.76.39,2.29,2.29,0,0,1-2.65,1,2.37,2.37,0,0,1,0-4.54,2.4,2.4,0,0,1,2.73,1,.76.76,0,0,0,.49.35c3.12,0,6.25,0,9.37,0,0,0,0,0,.09-.06v-4.19h-.51c-2.92,0-5.83,0-8.75,0a.75.75,0,0,0-.74.4,2.3,2.3,0,0,1-2.67,1,2.36,2.36,0,0,1,0-4.51,2.3,2.3,0,0,1,2.68.94.86.86,0,0,0,.85.45h9.16V111.8H164c-1.75,0-3.5,0-5.25,0-.94,0-1.2-.25-1.2-1.18,0-1.6,0-3.21,0-4.81,0-.52-.15-.72-.67-.66a3.66,3.66,0,0,1-.81,0,1.55,1.55,0,0,0-1.61.7,2.28,2.28,0,0,1-3.42.1,2.36,2.36,0,0,1,.09-3.41,2.31,2.31,0,0,1,3.42.29,1.25,1.25,0,0,0,1.23.59c.79,0,1.58,0,2.37,0s1.13.3,1.13,1.14c0,1.58,0,3.16,0,4.75V110h5.44v-3.35c0-1.91,0-1.91,1.91-1.91h3.19a.54.54,0,0,0,.16,0V99.31h-5.39c-.93,0-1.2-.27-1.21-1.18s0-1.8,0-2.69a1,1,0,0,0-.37-.67A2.46,2.46,0,0,1,162,92a2.4,2.4,0,0,1,2.28-1.64,2.36,2.36,0,0,1,2.25,1.67,2.41,2.41,0,0,1-1,2.72.81.81,0,0,0-.36.5c0,.72,0,1.45,0,2.24.27,0,.49,0,.71,0h4.68c1,0,1.25.24,1.26,1.26v5.9h4.27c0-.21,0-.41,0-.61,0-2.86,0-5.71,0-8.56a.86.86,0,0,0-.45-.85,2.28,2.28,0,0,1-1-2.62,2.36,2.36,0,0,1,4.53,0,2.41,2.41,0,0,1-1,2.69.93.93,0,0,0-.4.59q0,4.56,0,9.12c0,.08,0,.16,0,.27h4.24v-1.08c0-2.7,0-5.41,0-8.12a.8.8,0,0,0-.41-.8,2.3,2.3,0,0,1-1-2.67A2.39,2.39,0,0,1,183,90.38a2.36,2.36,0,0,1,2.29,1.7,2.43,2.43,0,0,1-1,2.68.94.94,0,0,0-.39.6c0,3,0,6.09,0,9.13a1.31,1.31,0,0,0,0,.22h4.23c0-.21,0-.43,0-.64V98.75c0-.93.26-1.19,1.2-1.19,1.56,0,3.12,0,4.68,0h.76c0-.83,0-1.6,0-2.36,0-.18-.27-.37-.46-.51a2.37,2.37,0,0,1,1.22-4.31,2.36,2.36,0,0,1,2.32,1.47,2.32,2.32,0,0,1-.89,2.86.8.8,0,0,0-.42.8c0,.87,0,1.75,0,2.62s-.29,1.17-1.16,1.17H190c0,.22-.05.36-.05.5v4.94c1,0,2,0,2.91,0,2.51,0,2.43-.1,2.4,2.43,0,.93,0,1.86,0,2.83h5.4c0-.23,0-.45,0-.67v-4.68c0-1,.27-1.25,1.27-1.25.8,0,1.59,0,2.38,0a1,1,0,0,0,1-.49A2.3,2.3,0,0,1,208,102a2.38,2.38,0,0,1,0,4.51,2.33,2.33,0,0,1-2.72-1,.76.76,0,0,0-.75-.41c-.66,0-1.33,0-2,0,0,.28,0,.5,0,.72v4.69c0,1-.25,1.23-1.22,1.23-1.75,0-3.5,0-5.25,0h-.69v4.28l.56,0h8.63a.8.8,0,0,0,.8-.41,2.29,2.29,0,0,1,2.66-1,2.37,2.37,0,0,1,0,4.54,2.41,2.41,0,0,1-2.69-1c-.12-.17-.35-.39-.54-.39-3.12,0-6.24,0-9.41,0v4.23c.16,0,.33,0,.51,0h8.69a.81.81,0,0,0,.79-.43,2.32,2.32,0,0,1,2.68-.95,2.37,2.37,0,0,1,0,4.52,2.28,2.28,0,0,1-2.63-.92,1,1,0,0,0-1-.49c-2.79,0-5.58,0-8.37,0h-.71v4.31H201c1.35,0,1.49.15,1.49,1.53v5.12c.84,0,1.6,0,2.37,0,.18,0,.36-.29.5-.48a2.37,2.37,0,0,1,4.31,1.24,2.39,2.39,0,0,1-1.48,2.32,2.3,2.3,0,0,1-2.81-.85.92.92,0,0,0-.91-.47c-.88,0-1.75,0-2.63,0s-1.09-.31-1.1-1.11c0-1.58,0-3.17,0-4.75V130h-5.44v3.93c0,1.08-.24,1.32-1.32,1.32h-4v5.41l.7,0h4.74c.89,0,1.17.28,1.18,1.15s0,1.8,0,2.69a1,1,0,0,0,.36.68,2.47,2.47,0,0,1,1,2.74,2.41,2.41,0,0,1-2.26,1.66,2.36,2.36,0,0,1-2.26-1.65,2.31,2.31,0,0,1,1-2.71.75.75,0,0,0,.39-.76c0-.66,0-1.32,0-2.06h-5.25c-1.19,0-1.4-.2-1.4-1.37v-5.78h-4.3v.58q0,4.29,0,8.56a.86.86,0,0,0,.44.86,2.3,2.3,0,0,1,1,2.67,2.37,2.37,0,0,1-4.52,0,2.41,2.41,0,0,1,.94-2.7c.19-.14.42-.39.42-.59,0-3.08,0-6.16,0-9.24a.68.68,0,0,0,0-.15h-4.19c0,.19,0,.37,0,.55,0,2.87,0,5.75,0,8.62a.87.87,0,0,0,.45.85,2.3,2.3,0,0,1,.95,2.63,2.37,2.37,0,0,1-4.52.05,2.27,2.27,0,0,1,.88-2.64,1,1,0,0,0,.51-1C176.1,141.34,176.11,138.34,176.11,135.28Zm17.34-1.81V106.55H166.53v26.92Zm-29.3-40h.27c.16-.23.41-.44.46-.69a.5.5,0,0,0-.59-.61.84.84,0,0,0-.57.57C163.7,93,164,93.22,164.15,93.46Zm13.72-.76c-.44-.26-.7-.55-.94-.53s-.49.37-.53.6a.49.49,0,0,0,.62.57C177.27,93.29,177.47,93,177.87,92.7Zm5.13-.82c-.28.4-.6.66-.56.85a1,1,0,0,0,.6.61.5.5,0,0,0,.57-.63C183.55,92.46,183.29,92.26,183,91.88Zm12.54,1.58h.27c.17-.22.5-.47.47-.66s-.36-.45-.57-.67c-.2.19-.55.37-.57.58S195.39,93.21,195.54,93.46ZM152.62,105h.27c.16-.23.48-.49.44-.67a.92.92,0,0,0-.6-.6c-.16,0-.54.35-.56.56S152.45,104.76,152.62,105Zm55.33-.53v-.3c-.24-.16-.49-.46-.72-.45a.81.81,0,0,0-.57.56.79.79,0,0,0,.53.58C207.43,104.88,207.7,104.61,208,104.47Zm-55.26,13.41c.32-.41.6-.6.65-.85a.49.49,0,0,0-.56-.63.84.84,0,0,0-.6.52C152.15,117.16,152.43,117.43,152.69,117.88Zm55.43-.87c-.38-.29-.57-.56-.82-.62a.5.5,0,0,0-.64.56.94.94,0,0,0,.6.61C207.45,117.6,207.71,117.29,208.12,117Zm-54.66,6.18v-.29c-.24-.17-.49-.47-.73-.46a.78.78,0,0,0-.56.56c0,.2.31.56.52.59S153.2,123.34,153.46,123.19Zm53.66.54h.27c.16-.23.48-.5.43-.68s-.38-.43-.6-.64c-.19.2-.54.4-.55.61S207,123.49,207.12,123.73Zm-53.67,12.16v-.28c-.21-.17-.41-.43-.65-.49a.5.5,0,0,0-.65.55.89.89,0,0,0,.53.61C152.93,136.3,153.2,136,153.45,135.89Zm53.67.53h.26c.16-.23.42-.44.46-.69a.49.49,0,0,0-.6-.59c-.24.05-.57.36-.57.56S207,136.17,207.12,136.42ZM165,147.4l0-.28c-.24-.16-.48-.46-.71-.45s-.6.39-.57.55a1,1,0,0,0,.59.61C164.49,147.87,164.76,147.55,165,147.4Zm12.14-.87h-.27c-.16.23-.41.43-.46.68a.51.51,0,0,0,.58.62.89.89,0,0,0,.59-.57C177.58,147,177.28,146.78,177.12,146.53Zm6.76.71c-.39-.28-.64-.61-.83-.57s-.44.37-.65.58c.22.21.41.53.66.58S183.5,147.53,183.88,147.24Zm12.53.13v-.26c-.24-.16-.5-.45-.73-.44s-.5.35-.55.58a.49.49,0,0,0,.6.59C196,147.8,196.18,147.54,196.41,147.37Z M179.94,130.75H170.5c-1,0-1.25-.26-1.25-1.26v-19c0-1,.26-1.25,1.26-1.25h19c1,0,1.26.26,1.26,1.26v19c0,1-.27,1.26-1.26,1.26ZM171,129H189V111H171Z M187.75,118c0,.77,0,1.54,0,2.31s-.32,1-.85,1-.9-.35-.9-1c0-1.53,0-3.07,0-4.6,0-.64.32-1,.85-1s.89.36.9,1S187.75,117.18,187.75,118Z\",\n\t\twidgetPages: [...defaultWidgetPages, 'view'],\n\t},\n\n\tshelf: {\n\t\tprimaryColor: '#fb7c4e',\n\t\tsvgPath:\n\t\t\t<>\n\t\t\t\t<rect x=\"358.42\" width=\"28\" height=\"71\" rx=\"10\" />\n\t\t\t\t<rect x=\"0.42\" width=\"28\" height=\"71\" rx=\"10\" />\n\t\t\t\t<rect y=\"216.99\" width=\"28\" height=\"71\" rx=\"10\" />\n\t\t\t\t<rect x=\"358.42\" y=\"217\" width=\"28\" height=\"71\" rx=\"10\" />\n\t\t\t\t<path d=\"M371.72,85.5h-5.89a20.71,20.71,0,0,1-20.71-20.7V36.7A10.7,10.7,0,0,0,334.42,26H52.84a10.7,10.7,0,0,0-10.7,10.7V64.8A20.71,20.71,0,0,1,21.43,85.5H15.12A10.7,10.7,0,0,0,4.42,96.2v95.58a10.7,10.7,0,0,0,10.7,10.71H21a20.71,20.71,0,0,1,20.71,20.7V251.3A10.7,10.7,0,0,0,52.42,262H334a10.7,10.7,0,0,0,10.7-10.7V223.2a20.71,20.71,0,0,1,20.71-20.7h6.31a10.7,10.7,0,0,0,10.7-10.7V96.2A10.7,10.7,0,0,0,371.72,85.5ZM166,177.5H100a10,10,0,0,1-8.19-15.74l33-47a10,10,0,0,1,16.37,0l33,47A10,10,0,0,1,166,177.5Zm120.82,0h-66a10,10,0,0,1-8.18-15.74l33-47a10,10,0,0,1,16.37,0l33,47A10,10,0,0,1,286.83,177.5Z\" />\n\t\t\t</>\n\n\n\t}\n\n\n}\n\n","// status types\n\n// get\n// ***************\nexport const GET_STATUS = 'GET_STATUS'\nexport const GET_STATUS_STARTED = 'GET_STATUS_STARTED'\nexport const GET_STATUS_SUCCESS = 'GET_STATUS_SUCCESS'\nexport const GET_STATUS_FAILURE = 'GET_STATUS_FAILURE'\n// ~~~~~~~~~~~~~~~\n\n// post\n// ***************\nexport const POST_STATUS = 'POST_STATUS'\nexport const POST_STATUS_STARTED = 'POST_STATUS_STARTED'\nexport const POST_STATUS_SUCCESS = 'POST_STATUS_SUCCESS'\nexport const POST_STATUS_FAILURE = 'POST_STATUS_FAILURE'\n// ~~~~~~~~~~~~~~~\n","import {FIELD_DATA_TYPES} from \"./lot_contants\";\n\nexport const LOT_TEMPLATES_RESERVED_FIELD_NAMES = {\n}\n\n\nexport const BASIC_FIELD_DEFAULTS = {\n\tTEXT_FIELD: \"\",\n\tNUMBER_FIELD: 0,\n\tCALENDAR_FIELD: null,\n\tCALENDAR_FIELD_RANGE: [null, null]\n}\n\nexport const DATA_TYPE_DEFAULTS = {\n\t[FIELD_DATA_TYPES.STRING]: \"\",\n\t[FIELD_DATA_TYPES.INTEGER]: 0,\n\t[FIELD_DATA_TYPES.DATE_RANGE]: [null, null],\n\t[FIELD_DATA_TYPES.DATE]: null,\n\t[FIELD_DATA_TYPES.EMAIL] : null,\n\t[FIELD_DATA_TYPES.URL] : null,\n}","export const SET_MODE = 'SET_MODE'\nexport const SET_ACTION = 'SET_ACTION'\nexport const SET_WIDTH = 'SET_WIDTH'\nexport const SET_OPEN = 'SET_OPEN'\nexport const PAGE_DATA_CHANGED = 'PAGE_DATA_CHANGED'\nexport const SET_CONFIRM_DELETE = 'SET_CONFIRM_DELETE'\nexport const SHOW_LOT_SCAN_MODAL = \"SHOW_LOT_SCAN_MODAL\"\n","export const GET_NOTIFICATIONS = 'GET_NOTIFICATIONS'\nexport const GET_NOTIFICATIONS_STARTED = 'GET_NOTIFICATIONS_STARTED'\nexport const GET_NOTIFICATIONS_SUCCESS = 'GET_NOTIFICATIONS_SUCCESS'\nexport const GET_NOTIFICATIONS_FAILURE = 'GET_NOTIFICATIONS_FAILURE'\n\nexport const POST_NOTIFICATIONS = 'POST_NOTIFICATIONS'\nexport const POST_NOTIFICATIONS_STARTED = 'POST_NOTIFICATIONS_STARTED'\nexport const POST_NOTIFICATIONS_SUCCESS = 'POST_NOTIFICATIONS_SUCCESS'\nexport const POST_NOTIFICATIONS_FAILURE = 'POST_NOTIFICATIONS_FAILURE'\n\nexport const PUT_NOTIFICATION = 'PUT_NOTIFICATIONS'\nexport const PUT_NOTIFICATION_STARTED = 'PUT_NOTIFICATIONS_STARTED'\nexport const PUT_NOTIFICATION_SUCCESS = 'PUT_NOTIFICATIONS_SUCCESS'\nexport const PUT_NOTIFICATION_FAILURE = 'PUT_NOTIFICATIONS_FAILURE'\n\nexport const DELETE_NOTIFICATIONS = 'DELETE_NOTIFICATIONS'\nexport const DELETE_NOTIFICATIONS_STARTED = 'DELETE_NOTIFICATIONS_STARTED'\nexport const DELETE_NOTIFICATIONS_SUCCESS = 'DELETE_NOTIFICATIONS_SUCCESS'\nexport const DELETE_NOTIFICATIONS_FAILURE = 'DELETE_NOTIFICATIONS_FAILURE'\n\nexport const DELETE_NOTIFICATION = 'DELETE_NOTIFICATIONS'\nexport const DELETE_NOTIFICATION_STARTED = 'DELETE_NOTIFICATIONS_STARTED'\nexport const DELETE_NOTIFICATION_SUCCESS = 'DELETE_NOTIFICATIONS_SUCCESS'\nexport const DELETE_NOTIFICATION_FAILURE = 'DELETE_NOTIFICATIONS_FAILURE'\n\n\nexport const TOGGLE_NOTIFICATION_TASK_QUEUE = 'TOGGLE_NOTIFICATION_TASK_QUEUE'\n","export const GET_REFRESH_TOKEN = 'GET_REFRESH_TOKEN'\nexport const GET_REFRESH_TOKEN_STARTED = 'GET_REFRESH_TOKEN_STARTED'\nexport const GET_REFRESH_TOKEN_SUCCESS = 'GET_REFRESH_TOKEN_SUCCESS'\nexport const GET_REFRESH_TOKEN_FAILURE = 'GET_REFRESH_TOKEN_FAILURE'\n\nexport const POST_REFRESH_TOKEN = 'POST_REFRESH_TOKEN'\nexport const POST_REFRESH_TOKEN_STARTED = 'POST_REFRESH_TOKEN_STARTED'\nexport const POST_REFRESH_TOKEN_SUCCESS = 'POST_REFRESH_TOKEN_SUCCESS'\nexport const POST_REFRESH_TOKEN_FAILURE = 'POST_REFRESH_TOKEN_FAILURE'","import styled from 'styled-components'\n\nexport const BackSymbol = styled.i`\n\n    font-size: 1.2rem;\n    font-weight: 800;\n\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n\n    color: ${props => {\n      if (props.active) {\n        return props.theme.bg.secondary\n      } else if (props.hovered) {\n        return !!props.schema ? props.theme.schema[props.schema].solid : props.theme.fg.primary\n      } else {\n        return !!props.schema ? props.theme.schema[props.schema].solid : props.theme.fg.primary\n      }\n    }}\n`;\n\nexport const BackButton = styled.button`\n    width: 2rem;\n    min-width: 2rem;\n    height: 2rem;\n    min-height: 2rem;\n    \n    margin: 0.3rem 0.5rem 0.3rem 0.5rem;\n    padding: 0;\n    border-radius: 0.35rem;\n    background-color: transparent;\n\n    position: relative;\n\n    border: 0.1rem solid ${props => props.theme.bg.octonary};\n    box-sizing: content-box;\n\n    :focus {\n      outline: 0;\n    }\n\n    border: 0.1rem solid ${props => props.hovered ? (!!props.schema ? props.theme.schema[props.schema].solid : props.theme.fg.primary) : props.theme.bg.octonary};\n    &:active {\n      background: ${props => !!props.schema ? props.theme.schema[props.schema].solid : props.theme.fg.primary};\n    }\n\n    ${props => {\n      if (props.active) {\n        return `\n          border: 0.1rem solid transparent;\n          background: ${!!props.schema ? props.theme.schema[props.schema].solid : props.theme.fg.primary};\n        `\n      } else if (props.hovered) {\n        return `\n          border: 0.1rem solid ${!!props.schema ? props.theme.schema[props.schema].solid : props.theme.fg.primary};\n          background: transparent;\n        `\n      } else {\n        return `\n          border: 0.1rem solid ${!!props.schema ? props.theme.schema[props.schema].solid : props.theme.fg.primary};\n          background: transparent;\n        `\n      }\n    }}\n`;\n","import React, { useState } from 'react';\nimport * as style from './back_button.style'\nimport {globStyle} from '../../../global_style'\n\nconst BackButton = (props) => {\n\n    const [hovered, setHovered] = useState(false)\n    const [active, setActive] = useState(false)\n\n\n    return (\n        <style.BackButton\n            hovered={props.hovered}\n            active={props.active}\n            onClick={props.onClick}\n            schema={props.schema}\n            style={{...props.containerStyle}}\n            type = {props.type}\n\n            onMouseEnter={() => setHovered(true)}\n            onMouseLeave={() => setHovered(false)}\n            onMouseDown={() => setActive(true)}\n            onMouseUp={() => setActive(false)}\n        >\n            <style.BackSymbol\n                hovered={props.hovered}\n                active={props.active}\n                style={{...props.style}}\n\n                disable={props.disabled}\n                schema={props.schema}\n                className=\"fa fa-chevron-left\"\n            />\n\n        </style.BackButton>\n    )\n}\n\nBackButton.defaultProps = {\n    type: \"button\"\n};\n\nexport default BackButton;\n","import { SORT_MODES } from \"../../constants/common_contants\";\nimport { convertCardDate } from \"./card_utils\";\nimport { deepCopy } from \"./utils\";\n\n\nexport const isArray = (arr) => {\n    return ((typeof arr !== 'undefined') && Array.isArray(arr))\n}\n\nexport const removeArrayIndices = (arr, indices) => {\n    let arrCopy = [...arr]\n\n    for (var i = indices.length - 1; i >= 0; i--)\n        arrCopy.splice(indices[i], 1);\n\n    return arrCopy\n}\n\nfunction arraysEqual(a, b) {\n    if (a === b) return true;\n    if (a == null || b == null) return false;\n    if (a.length !== b.length) return false;\n\n    for (var i = 0; i < a.length; ++i) {\n        if (a[i] !== b[i]) return false;\n    }\n    return true;\n}\n\nexport const isNonEmptyArray = (arr) => {\n    return isArray(arr) && arr.length > 0\n}\n\nexport const immutableInsert = (arr, ele, index) => {\n    return [...arr.slice(0, index), ele, ...arr.slice(index, arr.length)]\n}\n\nexport const immutableDelete = (arr, index) => {\n    return [...arr.slice(0, index), ...arr.slice(index + 1, arr.length)]\n}\n\nexport const immutableReplace = (arr, ele, index) => {\n    return [...arr.slice(0, index), ele, ...arr.slice(index + 1, arr.length)]\n}\n\nexport const immutableSet = (arr, ele, index) => {\n    let arrCopy = [...arr]\n    for(let i = 0; i < index; i++) {\n        if(!arrCopy[i]) arrCopy[i] = null\n    }\n    arrCopy[index] = ele\n\n    return arrCopy\n}\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n    width: 100%;\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    position: relative;\n\n    overscroll-behavior: contain;\n`\n\nexport const ContentContainer = styled.div`\n    width: 100%;\n    height: 100%;\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n\n    overscroll-behavior: contain;\n\n`\n\nexport const HeaderContainer = styled.div`\n`\n\nexport const BodyContainer = styled.div`\n    position: relative;\n\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    overflow: auto;\n    \n`\n","import axios from 'axios';\n\nimport {apiIPAddress} from '../settings/settings';\n\nimport log from '../logger';\n\nconst logger = log.getLogger('Map_Api', \"Map\");\n\nconst operator = 'site_maps';\n\nexport async function getMaps() {\n  try {\n    const response = await axios({\n      method: 'GET',\n      url: apiIPAddress() + operator,\n      headers: {\n        'X-API-Key': '123456',\n        'Access-Control-Allow-Origin': '*'\n    }\n    });\n\n    // Success 🎉\n    // log.debug('res',response);\n\n    const data = response.data;\n    const dataJson = JSON.parse(data);\n\n    return dataJson;\n\n\n} catch (error) {\n\n    // Error 😨\n    if (error.response) {\n        /*\n         * The request was made and the server responded with a\n         * status code that falls out of the range of 2xx\n         */\n        logger.debug('error.response.data', error.response.data);\n        logger.debug('error.response.status',error.response.status);\n        logger.debug('error.response.headers',error.response.headers);\n    } else if (error.request) {\n        /*\n         * The request was made but no response was received, `error.request`\n         * is an instance of XMLHttpRequest in the browser and an instance\n         * of http.ClientRequest in Node.js\n         */\n        logger.debug('error.request', error.request);\n    } else {\n        // Something happened in setting up the request and triggered an Error\n        logger.debug('error.message', error.message);\n    }\n\n    logger.debug('error', error);\n    throw error;\n  }\n\n\n}\n\nexport async function getMap(map_id) {\n  try {\n    const response = await axios({\n      method: 'GET',\n      url: apiIPAddress() + operator + '/' + map_id,\n      headers: {\n        'Accept': 'application/json',\n        'X-API-Key': '123456',\n      },\n  });\n\n  // Success 🎉\n  logger.debug('getMap: response',response);\n\n  const data = response.data;\n  const dataJson = JSON.parse(data)\n  return dataJson;\n\n\n  } catch (error) {\n\n      // Error 😨\n      if (error.response) {\n          /*\n           * The request was made and the server responded with a\n           * status code that falls out of the range of 2xx\n           */\n          logger.debug('error.response.data', error.response.data);\n          logger.debug('error.response.status',error.response.status);\n          logger.debug('error.response.headers',error.response.headers);\n      } else if (error.request) {\n          /*\n           * The request was made but no response was received, `error.request`\n           * is an instance of XMLHttpRequest in the browser and an instance\n           * of http.ClientRequest in Node.js\n           */\n          logger.debug('error.request', error.request);\n      } else {\n          // Something happened in setting up the request and triggered an Error\n          logger.debug('error.message', error.message);\n      }\n      logger.debug('error', error);\n    }\n}\n","import {\n    GET_MAPS,\n    GET_MAPS_STARTED,\n    GET_MAPS_SUCCESS,\n    GET_MAPS_FAILURE,\n\n    GET_MAP,\n    GET_MAP_STARTED,\n    GET_MAP_SUCCESS,\n    GET_MAP_FAILURE,\n\n    SET_MAP_ATTRIBUTES,\n    SET_CURRENT_MAP,\n    SET_MAP_ZOOM\n} from '../types/map_types'\n\n\nimport * as api from '../../api/map_api'\n\n// get all maps\n// ******************************\nexport const getMaps = () => {\n  return async dispatch => {\n\n    function onStart() {\n      dispatch({ type: GET_MAPS_STARTED });\n    }\n    function onSuccess(response) {\n      dispatch({ type: GET_MAPS_SUCCESS, payload: response });\n      return response;\n    }\n    function onError(error) {\n      dispatch({ type: GET_MAPS_FAILURE, payload: error });\n      return error;\n    }\n\n    try {\n      onStart();\n      const maps = await api.getMaps();\n      return onSuccess(maps);\n    } catch (error) {\n      return onError(error);\n    }\n  };\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// get map details\n// ******************************\nexport const getMap = (map_id) => {\n    return async dispatch => {\n\n      function onStart() {\n        dispatch({ type: GET_MAP_STARTED });\n      }\n      function onSuccess(response) {\n        dispatch({ type: GET_MAP_SUCCESS, payload: response });\n        return response;\n      }\n      function onError(error) {\n        dispatch({ type: GET_MAP_FAILURE, payload: error });\n        return error;\n      }\n\n      try {\n        onStart();\n        const map = await api.getMap(map_id);\n        return onSuccess(map);\n      } catch (error) {\n        return onError(error);\n      }\n    };\n  };\n  // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// update map details\n// ******************************\n\nexport const setMapAttributes = (attr) => {\n    return dispatch => {\n      try {\n        dispatch({ type: SET_MAP_ATTRIBUTES, payload: {attr: attr}})\n        return true\n      } catch (error) {\n        return error\n      }\n    }\n}\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// update map details\n// ******************************\n\nexport const setCurrentMap = (map) => {\n    return dispatch => {\n        try {\n            dispatch({ type: SET_CURRENT_MAP, payload: map})\n            return true\n        } catch (error) {\n            return error\n        }\n    }\n}\n\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n","import axios from 'axios';\nimport * as log from 'loglevel';\n\nimport {apiIPAddress} from '../settings/settings'\nconst operator = 'objects'\n\nconst logger = log.getLogger('Objects_Api', \"Object\");\n\nexport async function getObjects() {\n  try {\n    const response = await axios({\n      method: 'get',\n      url: apiIPAddress() + operator,\n      headers: {\n        'X-API-Key': '123456',\n        'Access-Control-Allow-Origin': '*'\n    }\n    });\n    // Success 🎉\n    const data = response.data;\n    const dataJson = JSON.parse(data)\n    return dataJson;\n\n\n} catch (error) {\n\n    // Error 😨\n    if (error.response) {\n        /*\n         * The request was made and the server responded with a\n         * status code that falls out of the range of 2xx\n         */\n        log.debug('error.response.data', error.response.data);\n        log.debug('error.response.status',error.response.status);\n        log.debug('error.response.headers',error.response.headers);\n    } else if (error.request) {\n        /*\n         * The request was made but no response was received, `error.request`\n         * is an instance of XMLHttpRequest in the browser and an instance\n         * of http.ClientRequest in Node.js\n         */\n        log.debug('error.request', error.request);\n    } else {\n        // Something happened in setting up the request and triggered an Error\n        log.debug('error.message', error.message);\n    }\n    throw error\n  }\n\n\n}\n\nexport async function deleteObject(ID) {\n  try {\n    const response = await axios({\n      method: 'DELETE',\n      url: apiIPAddress() + operator + '/' + ID,\n      headers: {\n        'Accept': 'application/json',\n        'X-API-Key': '123456',\n        'Access-Control-Allow-Origin': '*'\n      },\n  });\n\n  // Success 🎉\n  const data = response.data;\n  const dataJson = JSON.parse(data)\n\n  } catch (error) {\n\n      // Error 😨\n      if (error.response) {\n          /*\n           * The request was made and the server responded with a\n           * status code that falls out of the range of 2xx\n           */\n          log.debug('error.response.data', error.response.data);\n          log.debug('error.response.status',error.response.status);\n          log.debug('error.response.headers',error.response.headers);\n      } else if (error.request) {\n          /*\n           * The request was made but no response was received, `error.request`\n           * is an instance of XMLHttpRequest in the browser and an instance\n           * of http.ClientRequest in Node.js\n           */\n          log.debug('error.request', error.request);\n      } else {\n          // Something happened in setting up the request and triggered an Error\n          log.debug('error.message', error.message);\n      }\n      log.debug('error', error);\n    }\n} \n\n\nexport async function postObject(object) {\n\n  console.log(\"postObject object\", object)\n\n  try {\n    const response = await axios({  \n      method: 'POST',\n      url: apiIPAddress() + operator,\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'X-API-Key': '123456',\n        'Access-Control-Allow-Origin': '*'\n      },\n      data: JSON.stringify(object)\n  });\n\n  // Success 🎉\n  const data = response.data;\n  const dataJson = JSON.parse(data)\n\n  return dataJson;\n\n\n  } catch (error) {\n\n      // Error 😨\n      if (error.response) {\n          /*\n           * The request was made and the server responded with a\n           * status code that falls out of the range of 2xx\n           */\n          log.debug('error.response.data', error.response.data);\n          log.debug('error.response.status',error.response.status);\n          log.debug('error.response.headers',error.response.headers);\n      } else if (error.request) {\n          /*\n           * The request was made but no response was received, `error.request`\n           * is an instance of XMLHttpRequest in the browser and an instance\n           * of http.ClientRequest in Node.js\n           */\n          log.debug('error.request', error.request);\n      } else {\n          // Something happened in setting up the request and triggered an Error\n          log.debug('error.message', error.message);\n      }\n      log.debug('error', error);\n    }\n}\n\nexport async function putObject(object, ID) {\n    console.log(\"putObject object\", object)\n  try {\n    const response = await axios({\n      method: 'PUT',\n      url: apiIPAddress() + operator + '/' + ID,\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'text/html',\n        'X-API-Key': '123456',\n        'Access-Control-Allow-Origin': '*'\n      },\n      data: object\n  });\n\n  // Success 🎉\n  const data = response.data;\n  const dataJson = JSON.parse(data)\n  \n  return dataJson;\n\n\n  } catch (error) {\n\n      // Error 😨\n      if (error.response) {\n          /*\n           * The request was made and the server responded with a\n           * status code that falls out of the range of 2xx\n           */\n          log.debug('error.response.data', error.response.data);\n          log.debug('error.response.status',error.response.status);\n          log.debug('error.response.headers',error.response.headers);\n      } else if (error.request) {\n          /*\n           * The request was made but no response was received, `error.request`\n           * is an instance of XMLHttpRequest in the browser and an instance\n           * of http.ClientRequest in Node.js\n           */\n          log.debug('error.request', error.request);\n      } else {\n          // Something happened in setting up the request and triggered an Error\n          log.debug('error.message', error.message);\n      }\n      log.debug('error', error);\n    }\n}\n\n","import {\n    GET_OBJECTS,\n    GET_OBJECTS_STARTED,\n    GET_OBJECTS_SUCCESS,\n    GET_OBJECTS_FAILURE,\n\n    GET_OBJECT,\n    GET_OBJECT_STARTED,\n    GET_OBJECT_SUCCESS,\n    GET_OBJECT_FAILURE,\n\n    POST_OBJECT,\n    POST_OBJECT_STARTED,\n    POST_OBJECT_SUCCESS,\n    POST_OBJECT_FAILURE,\n\n    PUT_OBJECT,\n    PUT_OBJECT_STARTED,\n    PUT_OBJECT_SUCCESS,\n    PUT_OBJECT_FAILURE,\n\n    DELETE_OBJECT,\n    DELETE_OBJECT_STARTED,\n    DELETE_OBJECT_SUCCESS,\n    DELETE_OBJECT_FAILURE,\n\n    ADD_OBJECT,\n    UPDATE_OBJECT,\n    UPDATE_OBJECTS,\n    REMOVE_OBJECT,\n    SET_OBJECT_ATTRIBUTES,\n    VALIDATE_OBJECT,\n    SELECT_OBJECT,\n    SET_SELECTED_OBJECT,\n    SET_ROUTE_OBJECT,\n    DESELECT_OBJECT,\n    SET_EDITING_OBJECT,\n} from '../types/objects_types'\n\nimport { mapArrayToObjById, deepCopy } from '../../methods/utils/utils';\nimport { formatScheduleItem } from '../../methods/utils/data_utils';\n\nimport * as api from '../../api/objects_api'\n\n// get\n// ******************************\nexport const getObjects = () => {\n    return async dispatch => {\n\n        function onStart() {\n            dispatch({ type: GET_OBJECTS_STARTED });\n        }\n        function onSuccess(response) {\n            dispatch({ type: GET_OBJECTS_SUCCESS, payload: response });\n            return response;\n        }\n        function onError(error) {\n            dispatch({ type: GET_OBJECTS_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const objects = await api.getObjects();\n\n            const normalizedObjects = {}\n            objects.map((object) => {\n                normalizedObjects[object._id] = object\n            })\n\n            return onSuccess(normalizedObjects);\n        } catch (error) {\n            return onError(error);\n        }\n    };\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// get object details\n// ******************************\n// export const getObject = (object_id) => {\n//   return async dispatch => {\n\n//     function onStart() {\n//       dispatch({ type: GET_OBJECT_STARTED });\n//     }\n//     function onSuccess(response) {\n//       dispatch({ type: GET_OBJECT_SUCCESS, payload: response });\n//       return response;\n//     }\n//     function onError(error) {\n//       dispatch({ type: GET_OBJECT_FAILURE, payload: error });\n//       return error;\n//     }\n\n//     try {\n//       onStart();\n//       const object_details = await api.getObject(object_id);\n//       return onSuccess(object_details);\n//     } catch (error) {\n//       return onError(error);\n//     }\n//   };\n// };\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// post\n// ******************************\nexport const postObject = (object) => {\n    return async dispatch => {\n\n        function onStart() {\n            dispatch({ type: POST_OBJECT_STARTED });\n        }\n        function onSuccess(newObject) {\n            dispatch({ type: POST_OBJECT_SUCCESS, payload: newObject });\n            return newObject;\n        }\n        function onError(error) {\n            dispatch({ type: POST_OBJECT_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const newObject = await api.postObject(object);\n            return onSuccess(newObject);\n        } catch (error) {\n            return onError(error);\n        }\n    };\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// put\n// ******************************\nexport const putObject = (object, ID) => {\n    return async dispatch => {\n        function onStart() {\n            dispatch({ type: PUT_OBJECT_STARTED });\n        }\n        function onSuccess(updateObject) {\n            dispatch({ type: PUT_OBJECT_SUCCESS, payload: updateObject });\n            return updateObject;\n        }\n        function onError(error) {\n            dispatch({ type: PUT_OBJECT_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            let objectCopy = deepCopy(object)\n            const updateObject = await api.putObject(objectCopy, ID);\n            return onSuccess(updateObject)\n        } catch (error) {\n            return onError(error)\n        }\n    }\n}\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// delete\n// ******************************\nexport const deleteObject = (ID) => {\n    return async dispatch => {\n        function onStart() {\n            dispatch({ type: DELETE_OBJECT_STARTED });\n        }\n        function onSuccess(response) {\n            dispatch({ type: DELETE_OBJECT_SUCCESS, payload: ID });\n            return response;\n        }\n        function onError(error) {\n            dispatch({ type: DELETE_OBJECT_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const removeObject = await api.deleteObject(ID);\n            return onSuccess(ID)\n        } catch (error) {\n            return onError(error)\n        }\n    }\n}\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nexport const addObject = (object) => {\n    return { type: ADD_OBJECT, payload: { object } }\n}\n\nexport const updateObject = (object) => {\n    return { type: UPDATE_OBJECT, payload: { object } }\n}\n\nexport const updateObjects = (objects) => {\n    return { type: UPDATE_OBJECTS, payload: { objects } }\n}\n\nexport const removeObject = (id) => {\n    return { type: REMOVE_OBJECT, payload: { id } }\n}\n\nexport const setObjectAttributes = (attr) => {\n    return { type: SET_OBJECT_ATTRIBUTES, payload: attr  }\n}\n\nexport const selectObject = (id) => {\n    return { type: SELECT_OBJECT, payload: { id } }\n}\n\nexport const deselectObject = () => {\n    return { type: DESELECT_OBJECT }\n}\n\nexport const setSelectedObject = (object) => {\n    return { type: SET_SELECTED_OBJECT, payload: { object }}\n}\n\nexport const setRouteObject = (object) => {\n    return { type: SET_ROUTE_OBJECT, payload: { object }}\n}\n\nexport const setEditingObject = (bool) => {\n    return { type: SET_EDITING_OBJECT, payload: { bool }}\n}\n","import axios from 'axios';\nimport * as log from 'loglevel';\n\nimport {apiIPAddress} from '../settings/settings'\nconst operator = 'sounds'\n\nexport async function getSounds() {\n  try {\n    const response = await axios({\n      method: 'get',\n      url: apiIPAddress() + operator,\n      headers: {\n        'X-API-Key': '123456',\n        'Access-Control-Allow-Origin': '*'\n    }\n    });\n    // Success 🎉\n    // log.debug('res',response);\n    const data = response.data;\n    const dataJson = JSON.parse(data)\n\n    return dataJson;\n\n\n} catch (error) {\n\n    // Error 😨\n    if (error.response) {\n        /*\n         * The request was made and the server responded with a\n         * status code that falls out of the range of 2xx\n         */\n        log.debug('error.response.data', error.response.data);\n        log.debug('error.response.status',error.response.status);\n        log.debug('error.response.headers',error.response.headers);\n    } else if (error.request) {\n\n        /*\n         * The request was made but no response was received, `error.request`\n         * is an instance of XMLHttpRequest in the browser and an instance\n         * of http.ClientRequest in Node.js\n         */\n        log.debug('error.request', error.request);\n    } else {\n        // Something happened in setting up the request and triggered an Error\n        log.debug('error.message', error.message);\n    }\n    log.debug('error', error);\n  }\n}\n","import { normalize, schema } from 'normalizr';\n\nimport { soundsSchema } from '../../normalizr/schema';\nimport * as api from '../../api/sounds_api'\n\nlet GET_SOUNDS = 'GET_SOUNDS';\nlet GET_SOUNDS_STARTED = 'GET_SOUNDS_STARTED';\nlet GET_SOUNDS_SUCCESS = 'GET_SOUNDS_SUCCESS';\nlet GET_SOUNDS_FAILURE = 'GET_SOUNDS_FAILURE';\n\n// get\n// ******************************\nexport const getSounds = () => {\n    return async dispatch => {\n\n        function onStart() {\n            dispatch({ type: GET_SOUNDS_STARTED });\n        }\n        function onSuccess(response) {\n            dispatch({ type: GET_SOUNDS_SUCCESS, payload: response });\n            return response;\n        }\n        function onError(error) {\n            dispatch({ type: GET_SOUNDS_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const sounds = await api.getSounds();\n\n            const normalizedSounds = normalize(sounds, soundsSchema)\n\n            if (normalizedSounds.entities.sounds === undefined) {\n                return onSuccess(normalizedSounds.entities)\n            }\n            else {\n                return onSuccess(normalizedSounds.entities.sounds)\n            }\n\n            return onSuccess(sounds);\n        } catch (error) {\n            return onError(error);\n        }\n    };\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n","import axios from 'axios';\nimport * as log from 'loglevel';\n\nimport { apiIPAddress } from '../settings/settings'\n\nconst operator = 'data_stream'\n\nexport async function getDataStream() {\n    try {\n        const response = await axios({\n            method: 'GET',\n            url: apiIPAddress() + operator,\n            headers: {\n                'X-API-Key': '123456',\n                'Access-Control-Allow-Origin': '*'\n            },\n            timeout: 3000\n        });\n\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        return dataJson;\n    } catch (error) {\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        throw error\n    }\n\n\n}\n","import { TEMP_NEW_SCHEDULE_ID, DEFAULT_TASK_ID } from '../constants/scheduler_constants';\nimport axios from 'axios';\nimport * as log from 'loglevel';\n\nimport {apiIPAddress} from '../settings/settings'\nconst operator = 'schedules'\n\nexport async function getSchedules() {\n  try {\n    const response = await axios({\n      method: 'get',\n      url: apiIPAddress() + operator,\n      headers: {\n        'X-API-Key': '123456',\n        'Access-Control-Allow-Origin': '*'\n    }\n    });\n    // Success 🎉\n    // log.debug('res',response);\n    const data = response.data;\n    const dataJson = JSON.parse(data)\n    // log.debug('dataJson', dataJson)\n    // log.debug('getSchedulesdataJson', dataJson[0]._id.$oid)\n    return dataJson;\n\n\n} catch (error) {\n\n    // Error 😨\n    if (error.response) {\n        /*\n         * The request was made and the server responded with a\n         * status code that falls out of the range of 2xx\n         */\n        log.debug('error.response.data', error.response.data);\n        log.debug('error.response.status',error.response.status);\n        log.debug('error.response.headers',error.response.headers);\n    } else if (error.request) {\n        /*\n         * The request was made but no response was received, `error.request`\n         * is an instance of XMLHttpRequest in the browser and an instance\n         * of http.ClientRequest in Node.js\n         */\n        log.debug('error.request', error.request);\n    } else {\n        // Something happened in setting up the request and triggered an Error\n        log.debug('error.message', error.message);\n    }\n    throw error\n    log.debug('error', error);\n  }\n\n\n}\n\nexport async function getSchedule(scheduleId) {\n  try {\n    const response = await axios({\n      method: 'get',\n      url: apiIPAddress() + operator + '/' + scheduleId,\n      headers:{\n        'X-API-Key': '123456',\n      }\n    });\n    // Success 🎉\n    // log.debug('res',response);\n    const data = response.data;\n    const dataJson = JSON.parse(data)\n    // log.debug('dataJson', dataJson)\n    // log.debug('getSchedulesdataJson', dataJson[0]._id.$oid)\n    return dataJson;\n\n\n} catch (error) {\n\n    // Error 😨\n    if (error.response) {\n        /*\n         * The request was made and the server responded with a\n         * status code that falls out of the range of 2xx\n         */\n        log.debug('error.response.data', error.response.data);\n        log.debug('error.response.status',error.response.status);\n        log.debug('error.response.headers',error.response.headers);\n    } else if (error.request) {\n        /*\n         * The request was made but no response was received, `error.request`\n         * is an instance of XMLHttpRequest in the browser and an instance\n         * of http.ClientRequest in Node.js\n         */\n        log.debug('error.request', error.request);\n    } else {\n        // Something happened in setting up the request and triggered an Error\n        log.debug('error.message', error.message);\n    }\n    throw error\n    log.debug('error', error);\n  }\n\n\n}\n\nexport async function postSchedule(schedule) {\n  // log.debug('createSchedule start:',schedule)\n  try {\n    const response = await axios({\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'X-API-Key': '123456',\n      },\n      url: apiIPAddress() + operator,\n      data: schedule\n    });\n\n    // Success 🎉\n    // log.debug('createSchedule: response',response);\n    const data = response.data;\n    const dataJson = JSON.parse(data)\n    // log.debug('createSchedule: dataJson', dataJson)\n\n    return dataJson;\n\n} catch (error) {\n\n    // Error 😨\n    if (error.response) {\n        /*\n         * The request was made and the server responded with a\n         * status code that falls out of the range of 2xx\n         */\n        log.debug('error.response.data', error.response.data);\n        log.debug('error.response.status',error.response.status);\n        log.debug('error.response.headers',error.response.headers);\n    } else if (error.request) {\n        /*\n         * The request was made but no response was received, `error.request`\n         * is an instance of XMLHttpRequest in the browser and an instance\n         * of http.ClientRequest in Node.js\n         */\n        log.debug('error.request', error.request);\n    } else {\n        // Something happened in setting up the request and triggered an Error\n        log.debug('error.message', error.message);\n    }\n    throw error\n    log.debug('error', error);\n  }\n\n\n}\n\nexport async function deleteSchedule(scheduleId) {\n  // log.debug('deleteSchedule start:',scheduleId)\n\n  try {\n    const response = await axios({\n      method: 'delete',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'X-API-Key': '123456',\n      },\n      url: apiIPAddress() + operator + '/' + scheduleId\n    });\n\n    // Success 🎉\n    // log.debug('deleteSchedule: response',response);\n    const data = response.data;\n\n    return response;\n\n} catch (error) {\n\n    // Error 😨\n    if (error.response) {\n        /*\n         * The request was made and the server responded with a\n         * status code that falls out of the range of 2xx\n         */\n        log.debug('error.response.data', error.response.data);\n        log.debug('error.response.status',error.response.status);\n        log.debug('error.response.headers',error.response.headers);\n    } else if (error.request) {\n        /*\n         * The request was made but no response was received, `error.request`\n         * is an instance of XMLHttpRequest in the browser and an instance\n         * of http.ClientRequest in Node.js\n         */\n        log.debug('error.request', error.request);\n    } else {\n        // Something happened in setting up the request and triggered an Error\n        log.debug('error.message', error.message);\n    }\n    throw error\n    log.debug('error', error);\n  }\n\n\n}\n\nexport async function putSchedule(scheduleId, schedule) {\n  // log.debug('updateSchedule start:',scheduleId, schedule)\n\n  try {\n    const response = await axios({\n      method: 'put',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-API-Key': '123456',\n      },\n      url: apiIPAddress() + operator + '/' + scheduleId,\n      data: JSON.stringify(schedule)\n    });\n\n    // Success 🎉\n    // log.debug('updateSchedule: response',response);\n    const data = response.data;\n    const dataJson = JSON.parse(data)\n    // log.debug('getSchedulesdataJson', dataJson._id.$oid)\n    return dataJson;\n\n    //return response;\n\n} catch (error) {\n\n    // Error 😨\n    if (error.response) {\n        /*\n         * The request was made and the server responded with a\n         * status code that falls out of the range of 2xx\n         */\n        log.debug('error.response.data', error.response.data);\n        log.debug('error.response.status',error.response.status);\n        log.debug('error.response.headers',error.response.headers);\n    } else if (error.request) {\n        /*\n         * The request was made but no response was received, `error.request`\n         * is an instance of XMLHttpRequest in the browser and an instance\n         * of http.ClientRequest in Node.js\n         */\n        log.debug('error.request', error.request);\n    } else {\n        // Something happened in setting up the request and triggered an Error\n        log.debug('error.message', error.message);\n    }\n    throw error\n    log.debug('error', error);\n  }\n\n\n}\n","import { normalize } from 'normalizr';\n\n// import types\nimport {\n    GET,\n    POST,\n    DELETE,\n    PUT\n} from '../types/prefixes';\n\nimport {\n    SCHEDULES,\n    SCHEDULE\n} from '../types/data_types';\n\nimport { api_action } from './index';\nimport * as api from '../../api/schedules_api'\n\n// import schema\nimport { scheduleSchema, schedulesSchema } from '../../normalizr/schedules_schema';\n\nimport log from \"../../logger\"\n\nconst logger = log.getLogger(\"Schedules\", \"Redux\")\n\n// get\n// ******************************\nexport const getSchedules = () =>  async (dispatch) => {\n\n    /*\n        Invoked in api_action()\n        Whatever is returned from this function is the payload\n        that will be dispatched to redux (if successful)\n    */\n    const callback = async () => {\n\n        // make request\n        const schedules = await api.getSchedules();\n\n        // format response\n        const normalizedSchedules = normalize(schedules, schedulesSchema);\n\n        // return payload for redux\n        return {\n            schedulesObj: normalizedSchedules.entities.schedules,\n            scheduleIds: normalizedSchedules.result\n        };\n    }\n\n    const actionName = GET + SCHEDULES;\n\n    // payload is returned back\n    const payload = await api_action(actionName, callback, dispatch);\n\n    return payload.schedulesObj;\n\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n\n// create\n// ******************************\nexport const postSchedule = (schedule) =>  async dispatch => {\n\n    const callback = async () => {\n        const createdSchedule = await api.postSchedule(schedule);\n        const normalizedSchedules = normalize(createdSchedule, scheduleSchema);\n\n        return {\n            createdSchedules:normalizedSchedules.entities.schedules,\n        };\n    }\n\n    const actionName = POST + SCHEDULE;\n\n    const payload = await api_action(actionName, callback, dispatch, schedule);\n\n    return Object.values(payload.createdSchedules)[0];\n\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// delete\n// ******************************\nexport const deleteSchedule = (scheduleId) => async (dispatch) => {\n\n    const callback = async () => {\n        await api.deleteSchedule(scheduleId);\n\n        return {\n            scheduleId\n        };\n    }\n\n    const actionName = DELETE + SCHEDULE;\n    const payload = await api_action(actionName, callback, dispatch, scheduleId);\n    return payload;\n\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// update\n// ******************************\nexport const putSchedule = (scheduleId, schedule) => async dispatch => {\n\n    logger.log(\"action_putSchedule: scheduleId:\",scheduleId)\n    logger.log(\"action_putSchedule: schedule:\",schedule)\n\n    const callback = async () => {\n        const response = await api.putSchedule(scheduleId, schedule);\n        const normalizedSchedule = normalize(response, scheduleSchema);\n\n        return {\n            scheduleId,\n            schedules: normalizedSchedule.entities.schedules\n        };\n    }\n\n    const actionName = PUT + SCHEDULE;\n    const payload = await api_action(actionName, callback, dispatch, {scheduleId, schedule});\n    return payload.scheduleId;\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n\n// add edited schedules (temp storage for unsaved schedules, so no api call)\n// ******************************\nexport const addUnsavedSchedules = (schedules) => {\n  return async dispatch => {\n      const payload = schedules;\n      dispatch({ type: \"ADD_SCHEDULES_UNSAVED\", payload });\n      return schedules;\n  };\n\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nexport function addSchedules(schedules) {\n  return {\n    type: \"ADD_SCHEDULES\",\n    schedules\n  };\n}\n","import axios from 'axios';\n// import * as log from 'loglevel';\nimport logger from '../logger'\n\nimport { apiIPAddress } from '../settings/settings'\n\nconst operator = 'settings'\n\nconst log = logger.getLogger('Api')\n\nexport async function getSettings() {\n    try {\n        const response = await axios({\n            method: 'get',\n            url: apiIPAddress() + operator,\n            headers:{\n                'X-API-Key': '123456',\n                'Access-Control-Allow-Origin': '*'\n            }\n            // token: token.username\n        });\n        // Success 🎉\n        log.debug('getSettings response', response);\n        const data = response.data;\n\n        const dataJson = JSON.parse(data)\n        log.debug('getSettings dataJson', dataJson);\n        return dataJson;\n\n        // const settings = {\n        //   mir_ip: '10.1.12.136',\n        //   idle_task: 'Bring me beer',\n        //   charge_location: 'Station'\n        // }\n        // return settings;\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n\n}\n\nexport async function postSettings(settings) {\n    try {\n        const response = await axios({\n            method: 'POST',\n            url: apiIPAddress() + operator,\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'application/json',\n                'Access-Control-Allow-Origin': '*'\n            },\n            data: settings\n        });\n\n        // Success 🎉\n        log.debug('response', response);\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        log.debug('response data json', dataJson);\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n\n        }\n        log.debug('error', error);\n    }\n}\n","import {\n    GET_SETTINGS,\n    GET_SETTINGS_STARTED,\n    GET_SETTINGS_SUCCESS,\n    GET_SETTINGS_FAILURE,\n\n    POST_SETTINGS,\n    POST_SETTINGS_STARTED,\n    POST_SETTINGS_SUCCESS,\n    POST_SETTINGS_FAILURE,\n    DEVICE_ENABLED,\n} from '../types/setting_types'\n\nimport * as api from '../../api/settings_api'\n\nexport const getSettings = () => {\n    return async dispatch => {\n        function onStart() {\n            dispatch({ type: GET_SETTINGS_STARTED });\n        }\n        function onSuccess(response) {\n            dispatch({ type: GET_SETTINGS_SUCCESS, payload: response });\n\n            return response;\n        }\n        function onError(error) {\n            dispatch({ type: GET_SETTINGS_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const settings = await api.getSettings();\n\n            // Uncomment when you want to make SETTINGS an object\n            // const normalizedSETTINGS = normalize(SETTINGS, SETTINGSSchema);\n\n            // return onSuccess(normalizedSETTINGS.entities.SETTINGS)\n\n            return onSuccess(settings)\n        } catch (error) {\n            return onError(error)\n        }\n    }\n}\nexport const postSettings = (settings) => {\n    return async dispatch => {\n        function onStart() {\n            dispatch({ type: POST_SETTINGS_STARTED });\n        }\n        function onSuccess(response) {\n            dispatch({ type: POST_SETTINGS_SUCCESS, payload: settings });\n            return response;\n        }\n        function onError(error) {\n            dispatch({ type: POST_SETTINGS_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            delete settings._id\n            const newSettings = await api.postSettings(settings);\n            return onSuccess(newSettings)\n        } catch (error) {\n            return onError(error)\n        }\n    }\n}\n\nexport const deviceEnabled = (state) => {\n    return { type: DEVICE_ENABLED, payload: state}\n}\n","import styled from 'styled-components'\n\nexport const SwitchContainer = styled.div`\n    display: flex;\n    alignItems: center;\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz4};\n`\n\nexport const SwitchContainerLabel = styled.span`\n    padding: 0;\n    margin: 0;\n    align-self: center;\n`","// import external dependencies\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\n// components\nimport Switch from 'react-ios-switch'\nimport Textbox from '../../basic/textbox/textbox'\nimport Button from '../../basic/button/button'\n\n// styles\nimport * as styled from \"./splash_screen.style\"\n\n// import logger\nimport logger from '../../../logger.js';\nimport { postLocalSettings, getLocalSettings } from \"../../../redux/actions/local_actions\";\n\n\n\nconst ToggleMapViewSwitch = (props) => {\n    const {\n        checked,\n        onChange,\n        switchContainerStyle\n    } = props\n\n    return (\n        <styled.SwitchContainer style={switchContainerStyle}>\n            <styled.SwitchContainerLabel>Show List View</styled.SwitchContainerLabel>\n            <Switch\n                checked={checked}\n                onChange={onChange}\n                style={{ margin: \"0 2rem 0 2rem\" }}\n            />\n            <styled.SwitchContainerLabel>Show Map View</styled.SwitchContainerLabel>\n        </styled.SwitchContainer>\n    )\n}\n\nconst SplashScreen = (props) => {\n    const {\n        isApiLoaded,\n        apiError\n    } = props\n\n\n    const dispatch = useDispatch()\n    const localSettings = useSelector(state => state.localReducer.localSettings)\n    const apiAddress = localSettings.non_local_api_ip\n\n    const [apiIpAddress, setApiIpAddress] = useState(apiAddress)\n    const [localSettingsState, setLocalSettingsState] = useState({})\n\n    const dispatchPostLocalSettings = (settings) => dispatch(postLocalSettings(settings))\n    const dispatchGetLocalSettings = () => dispatch(getLocalSettings())\n\n    useEffect(() => {\n      setLocalSettingsState(localSettings)\n    }, [])\n    /**\n     * Submit API address to local storage\n     */\n    const handleSubmitApiIpAddress = async () => {\n        console.log(\"submitting\")\n\n        const localSettingsPromise = dispatchGetLocalSettings()\n        localSettingsPromise.then(response =>{\n          dispatchPostLocalSettings({\n              ...response,\n              non_local_api_ip: apiIpAddress,\n              non_local_api: true,\n          })\n        })\n\n        //window.location.reload(false);\n    }\n\n    /*\n    * toggle mapViewEnabled\n    * */\n    const toggleMapViewEnabled = async () => {\n        const updatedLocalSettings = {\n          ...localSettingsState,\n          mapViewEnabled: !localSettingsState.mapViewEnabled,\n        }\n        await dispatchPostLocalSettings(updatedLocalSettings)\n    }\n\n    return (\n        <>\n            {/* When loading show an RM logo, if no api info, then show input to enter */}\n            {!isApiLoaded ? apiError ?\n                <div style={{ width: '100%', height: '100%', paddingTop: '15%', display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\n                    <i className={'icon-rmLogo'} style={{ fontSize: '10rem', marginBottom: '5rem', color: '#FF4B4B' }} />\n\n                    <div style={{ width: '50%', minWidth: '20rem', display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\n                        < p > Please Enter API IP</p>\n                        <form onSubmit={handleSubmitApiIpAddress}>\n                            <Textbox\n                                placeholder=\"API IP Address\"\n                                onChange={(event) => {\n                                    setApiIpAddress(event.target.value)\n                                }}\n                                style={{ width: '100%' }}\n                            // type = 'submit'\n                            />\n                            <Button schema={'scheduler'} style={{ color: 'red', border: '0.1rem solid red' }} type='submit'>Submit</Button>\n                        </form>\n\n\n\n                        <ToggleMapViewSwitch\n                            switchContainerStyle={{\n                                bottom: \"1rem\",\n                                transform: \"translateY(-50%)\",\n                                position: \"absolute\"\n                            }}\n                            checked={localSettingsState.mapViewEnabled}\n                            onChange={toggleMapViewEnabled}\n                        />\n                    </div>\n                </div>\n\n                :\n                <div style={{ width: '100%', height: '100%', display: 'flex', justifyContent: 'center', alignItems: \"center\", flexDirection: \"column\" }}>\n                    <i className={'icon-rmLogo'} style={{ fontSize: '10rem', margin: \"3rem\", color: '#FF4B4B' }} />\n\n                    {/* <ToggleMapViewSwitch\n                        checked={localSettings.localSettings.mapViewEnabled}\n                        onChange={toggleMapViewEnabled}\n                    /> */}\n\n                </div>\n                :\n                <>\n                </>\n            }\n        </>\n    )\n}\n\nexport default SplashScreen;\n","// import external dependencies\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from \"react-router-dom\";\n\n// Import Actions\nimport { getMaps } from '../../redux/actions/map_actions'\nimport { getTaskQueue, deleteTaskQueueItem } from '../../redux/actions/task_queue_actions'\nimport { getObjects } from '../../redux/actions/objects_actions'\nimport { getTasks, deleteTask, putTask } from '../../redux/actions/tasks_actions'\nimport { getDashboards, deleteDashboard, postDashboard } from '../../redux/actions/dashboards_actions'\nimport { getSounds } from '../../redux/actions/sounds_actions'\nimport { getProcesses, putProcesses } from '../../redux/actions/processes_actions'\nimport { getDataStream } from '../../redux/actions/data_stream_actions'\n\nimport { getSchedules } from '../../redux/actions/schedule_actions';\nimport { getDevices, putDevices } from '../../redux/actions/devices_actions'\nimport { getStatus } from '../../redux/actions/status_actions'\n\nimport { getSettings } from '../../redux/actions/settings_actions'\nimport { getLocalSettings } from '../../redux/actions/local_actions'\nimport { postDevSettings } from '../../api/local_api'\n\nimport { getLoggers } from '../../redux/actions/local_actions';\nimport { getRefreshToken } from '../../redux/actions/authentication_actions'\n\nimport { getPositions, deletePosition, putPosition } from '../../redux/actions/positions_actions'\nimport { getStations, putStation, deleteStation } from '../../redux/actions/stations_actions'\n\nimport { postLocalSettings } from '../../redux/actions/local_actions'\nimport * as localActions from '../../redux/actions/local_actions'\n\n// Import components\nimport SplashScreen from \"../../components/misc/splash_screen/splash_screen\";\n\n// import utils\nimport { getIsEquivalent, deepCopy } from '../../methods/utils/utils'\n\n// import logger\nimport logger from '../../logger.js';\nimport { getMap } from '../../api/map_api';\nimport localReducer from \"../../redux/reducers/local_reducer\";\nimport { getCards, getProcessCards } from \"../../redux/actions/card_actions\";\nimport { getReportEvents } from \"../../redux/actions/report_event_actions\";\nimport {getWorkInstructions} from \"../../redux/actions/work_instructions_actions\";\n\nconst ApiContainer = (props) => {\n\n    // Dispatches\n    const dispatch = useDispatch()\n    const onGetMaps = async () => await dispatch(getMaps())\n    const onGetStations = async () => await dispatch(getStations())\n    const onGetPositions = () => dispatch(getPositions())\n    const onGetDashboards = async () => await dispatch(getDashboards())\n    const onGetObjects = () => dispatch(getObjects())\n    const onGetTasks = async () => await dispatch(getTasks())\n    const onGetSounds = (api) => dispatch(getSounds(api))\n    const onGetTaskQueue = () => dispatch(getTaskQueue())\n\n    const dispatchGetDataStream = () => dispatch(getDataStream())\n\n    const onGetProcessCards = (processId) => dispatch(getProcessCards(processId))\n    // const dispatchGetLots = () => dispatch(getLots())\n    const onGetCards = () => dispatch(getCards())\n    const onGetWorkInstructions = () => dispatch(getWorkInstructions())\n\n    const onGetProcesses = () => dispatch(getProcesses());\n\n    const onGetSchedules = () => dispatch(getSchedules())\n    const onGetDevices = async () => await dispatch(getDevices())\n    const onGetStatus = () => dispatch(getStatus())\n\n    const onGetSettings = () => dispatch(getSettings())\n    const onGetLocalSettings = () => dispatch(getLocalSettings())\n    const onPostLocalSettings = (settings) => dispatch(postLocalSettings(settings))\n\n    const onGetLoggers = () => dispatch(getLoggers())\n\n    const onDeleteTask = (ID) => dispatch(deleteTask(ID))\n    const onDeleteDashboard = (ID) => dispatch(deleteDashboard(ID))\n    const onDeletePosition = (position, ID) => dispatch(deletePosition(position))\n    const onDeleteStation = async (ID) => await dispatch(deleteStation(ID))\n    const onDeleteTaskQItem = async (ID) => await dispatch(deleteTaskQueueItem(ID))\n\n    const onPutDevice = async (device, ID) => await dispatch(putDevices(device, ID))\n    const onPutPosition = (position, ID) => dispatch(putPosition(position, ID))\n    const onPutProcess = (process) => dispatch(putProcesses(process))\n    const onPutStation = async (station, ID) => await dispatch(putStation(station, ID))\n    const dispatchPutTask = async (task, ID) => await dispatch(putTask(task, ID))\n\n    const onPostDashoard = (dashboard) => dispatch(postDashboard(dashboard))\n\n    // Selectors\n    const devices = Object.values(useSelector(state => { return state.devicesReducer })?.devices || {})\n    const localReducer = useSelector(state => state.localReducer)\n    const MiRMapEnabled = localReducer?.localSettings?.MiRMapEnabled\n    const stopAPICalls = useSelector(state => state.localReducer.stopAPICalls)\n    const mapViewEnabled = useSelector(state => state.localReducer.localSettings.mapViewEnabled)\n    const localSettings = useSelector(state => state.localReducer.localSettings)\n    const deviceEnabled = useSelector(state => state.settingsReducer.settings.deviceEnabled)\n\n\n    // States\n    const [currentPage, setCurrentPage] = useState('')\n    const [apiError, setApiError] = useState(false)\n    const [pageDataInterval, setPageDataInterval] = useState(null)\n    const [criticalDataInterval, setCriticalDataInterval] = useState(null)\n    const [localDataInterval, setLocalDataInterval] = useState(null)\n    const [mapDataInterval, setMapDataInterval] = useState(null)\n\n    const params = useParams()\n\n    useEffect(() => {\n        loadInitialData() // initial call to load data when app opens\n\n        // this interval is always on\n        // loads essential info used on every page such as status and taskQueue\n        setCriticalDataInterval(setInterval(() => loadCriticalData(), 500));\n\n\n        if (!!mapViewEnabled) {\n            setMapDataInterval(setInterval(() => loadMapData(), 10000));\n        }\n\n\n        return () => {\n            // clear intervals\n            clearInterval(pageDataInterval);\n            clearInterval(criticalDataInterval);\n            //clearInterval(mapDataInterval)\n        }\n    }, [])\n\n\n    useEffect(() => {\n        if (stopAPICalls === true) {\n            clearInterval(criticalDataInterval);\n            clearInterval(pageDataInterval);\n            clearInterval(mapDataInterval);\n            //dispatchStopAPICalls(false)\n        }\n    }, [stopAPICalls])\n\n\n    useEffect(() => {\n\n\n        // once MiR map is enabled, it's always enabled, so only need to do check if it isn't enabled\n        if (!MiRMapEnabled) {\n            let containsMirCart = false\n            // check each device\n            // in order for MiR mode to be enabled, there must be at least one device of MiR type\n            Object.values(devices).forEach((currDevice, index) => {\n                const device_model = currDevice?.device_model ? currDevice?.device_model : \"\"\n                // const x = currDevice?.position?.x\n                // const y = currDevice?.position?.y\n                if (\n                    device_model === \"MiR100\"\n                ) containsMirCart = true\n            })\n\n            // only update if MiRMapEnabled isn't currently set or MiRMapEnabled needs to be updated because it isn't equal to containsMirCart\n            if ((MiRMapEnabled === undefined) || (MiRMapEnabled !== containsMirCart)) {\n\n                const updatedLocalSettings = {\n                    ...localReducer.localSettings,\n                    MiRMapEnabled: containsMirCart,\n                }\n\n                onPostLocalSettings(updatedLocalSettings)\n            }\n        }\n\n    }, [devices, MiRMapEnabled])\n\n    useEffect(() => {\n\n        if (stopAPICalls !== true) {\n            updateCurrentPage();\n        }\n\n    })\n\n    const updateCurrentPage = () => {\n\n        // let pathname = this.props.location.pathname;\n\n        const currentPageRouter = params\n        // const currentPageRouter = getPageNameFromPath(pathname);\n        // this.logger.debug(\"api_container currentPage\", currentPage);\n        // this.logger.debug(\"api_container currentPageRouter\", currentPageRouter);\n\n\n        // If the current page state and actual current page are different, then the page has changed so the data interval should change\n        if (!getIsEquivalent(currentPageRouter, currentPage)) {\n            // page changed\n\n            // update state\n            setCurrentPage(currentPageRouter)\n\n            // update data interval to get data for new currentPage\n            setDataInterval(currentPageRouter);\n        }\n\n\n    }\n\n\n    /**\n     * Handles data interval based on page\n     */\n\n    const setDataInterval = (pageParams) => {\n        let pageName = ''\n        const {\n            data1,\n            data2\n        } = pageParams\n\n        if (Object.keys(pageParams)[0] === 'sidebar') {\n            pageName = pageParams.sidebar\n\n\n        } else if (Object.keys(pageParams)[0] === 'stationID') {\n\n            // Not the best way to do this, but if the params have a locationId and it's undefined\n            // then it's url is just locations and not a widget page\n            // This happens in app.js file in the route path.\n            if (pageParams.widgetPage === undefined) {\n                pageName = 'locations'\n\n            } else {\n                pageName = pageParams.widgetPage\n\n            }\n\n        }\n\n        // clear current interval\n        clearInterval(pageDataInterval);\n\n        // set new interval for specific page\n        switch (pageName) {\n\n            case 'objects':\n                setPageDataInterval(setInterval(() => loadObjectsData(), 10000))\n                break;\n\n            case 'scheduler':\n                setPageDataInterval(setInterval(() => loadSchedulerData(), 10000000))\n                break;\n\n            case 'dashboards':\n                setPageDataInterval(setInterval(() => loadDashboardsData(), 3000))\n                break;\n\n            case 'locations':\n                setPageDataInterval(setInterval(() => loadLocationsData(), 5000))\n                break\n\n            case 'tasks':\n                setPageDataInterval(setInterval(() => loadTasksData(), 10000))\n                break;\n\n            case 'settings':\n                setPageDataInterval(setInterval(() => loadSettingsData(), 10000))\n                break;\n\n            case 'lots':\n                setPageDataInterval(setInterval(() => loadCardsData(), 10000))\n                break\n\n            case 'processes':\n                if (data2 === \"lots\") {\n                    loadCardsData(data1) // initial call\n                    setPageDataInterval(setInterval(() => loadCardsData(data1), 10000))\n                }\n                else if (data1 === \"timeline\") {\n                    loadCardsData() // initial call\n                    setPageDataInterval(setInterval(() => loadCardsData(), 10000))\n                }\n                else if (data1 === \"summary\") {\n                    loadCardsData() // initial call\n                    setPageDataInterval(setInterval(() => loadCardsData(), 10000))\n                }\n                else {\n                    setPageDataInterval(setInterval(() => loadTasksData(), 10000))\n                }\n\n                break\n\n            case 'more':\n                setPageDataInterval(setInterval(() => loadMoreData(), 10000))\n                // pageDataInterval = ;\n                break;\n\n            default:\n                if(!mapViewEnabled) {\n                    setPageDataInterval(setInterval(() => loadListViewData(), 5000))\n                }\n                break;\n        }\n\n    }\n\n    const loadInitialData = async () => {\n        // Local Settings must stay on top of initial data so that the correct API address is seleceted\n        //const localSettings = await onGetLocalSettings()\n        const settings = await onGetSettings();\n        //await postSettings(settings)\n        // const refreshToken = await onGetRefreshToken()\n        const devices = await onGetDevices()\n        const maps = await onGetMaps()\n\n        if (maps.length === undefined) {\n            props.onLoad()\n            setApiError(true)\n            return\n        }\n\n        const stations = await onGetStations()\n        const positions = await onGetPositions()\n        const dashboards = await onGetDashboards()\n        const objects = await onGetObjects()\n        const sounds = await onGetSounds()\n        const tasks = await onGetTasks()\n        const taskQueue = await onGetTaskQueue()\n        const processes = await onGetProcesses()\n        const cards = onGetCards()\n\n        const status = await onGetStatus()\n        const getSchedules = await onGetSchedules()\n\n        const loggers = await onGetLoggers()\n\n        // Data Update Functions\n        // const dataUpdate = await onUpdateTaskData(tasks)\n\n        // Cleaner Functions\n        if (!!mapViewEnabled && !!deviceEnabled) {\n\n            await handleDeviceWithoutADashboard(devices, dashboards)\n            // const funtion1 = await handleTasksWithBrokenPositions(tasks, stations, positions)\n            // const funtion2 = await handlePositionsWithBrokenParents(stations, positions)\n            // const funtion3 = await handleDevicesWithBrokenStations(devices, stations)\n            // const funtion4 = await handleStationsWithBrokenDevices(devices, stations)\n            // const funtion5 = await handleDashboardsWithBrokenStations(dashboards, stations)\n            // const funtion6 = await handleStationsWithBrokenChildren(stations, positions)\n            // const funtion7 = await handleTasksWithBrokenProcess(processes, tasks)\n            // const funtion8 = await handleProcessesWithBrokenRoutes(processes, tasks)\n        }\n\n        // Commented out for now. Was causing an issue when sending a cart to a location using simple move. Since its just a one off task, the task is never added to the backend so if the page was refreshed, the task q item would be deleted\n        // const funtion9 = await handleTaskQueueWithBrokenTasks(taskQueue, tasks)\n\n        props.apiLoaded()\n        props.onLoad()\n\n    }\n\n    //  DATA LOADERS SECTION BEGIN\n    //  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n    /*\n        Loads critical data used on every page\n\n        required data:\n        status, taskQueue, devices\n    */\n\n    const loadCriticalData = async () => {\n        const dataStream = dispatchGetDataStream()\n    }\n\n    const loadLocalData = async () => {\n        const localSettings = await onGetLocalSettings()\n    }\n\n\n\n    /*\n        Loads data pertinent to Objects page\n\n        required data:\n        objects, poses, models\n    */\n    const loadObjectsData = async () => {\n        const objects = await onGetObjects();\n        // const poses = await this.props.getPoses();\n        // const models = await this.props.getModels();\n    }\n\n    /*\n        Loads data pertinent to Tasks page\n\n        required data:\n        tasks\n    */\n    const loadTasksData = async () => {\n        const tasks = await onGetTasks()\n        const processes = await onGetProcesses()\n        const objects = await onGetObjects()\n    }\n\n    const loadLocationsData = async () => {\n        await onGetStations()\n        await onGetTasks()\n        await onGetDashboards()\n\n    }\n\n    const loadListViewData = () => {\n        onGetStations()\n        onGetDashboards()\n    }\n\n    /*\n        Loads data pertinent to Scheduler page\n\n        required data:\n        schedules, tasks\n    */\n    const loadSchedulerData = async () => {\n        const schedules = await onGetSchedules();\n        const tasks = await onGetTasks();\n\n    }\n\n    /*\n        Loads data pertinent to Dashboards page\n\n        required data:\n        dashboards\n    */\n    const loadDashboardsData = async () => {\n        await onGetStations()\n        await onGetTasks()\n        await onGetDashboards();\n        await onGetCards()\n        await onGetProcesses()\n\n        /*\n        * For now, this MUST come last.\n        *\n        * If this is made first, the dashboards page will do updates without the other data updated first,\n        * which may include incorrectly removing buttons.\n        * */\n        await onGetDashboards()\n\n    }\n\n    /*\n      Loads data pertinent to Objects page\n\n      required data:\n      tasks, skills, objects, locations, dashboards, sounds\n    */\n    const loadMapData = async () => {\n        const stations = await onGetStations();\n        const positions = await onGetPositions();\n        const dashboards = await onGetDashboards();\n\n    }\n\n    /*\n        Loads data pertinent to Settings page\n\n        required data:\n        settings, loggers\n    */\n    const loadSettingsData = async () => {\n        const settings = await onGetSettings();\n        //const localSettings = await onGetLocalSettings()\n        const loggers = await onGetLoggers();\n    }\n\n    /*\n        Loads data pertinent to process card view\n\n        required data:\n        cards\n    */\n    const loadCardsData = async (processId) => {\n        if (processId) {\n            await onGetProcessCards(processId)\n\n        } else {\n            onGetCards()\n        }\n        onGetWorkInstructions()\n        onGetProcesses()\n        onGetTasks()\n    }\n\n    /*\n        Loads data pertinent to More page\n    */\n    const loadMoreData = async () => {\n\n    }\n\n    //  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    //  DATA LOADERS SECTION END\n\n\n    //  DATA CONVERSION\n    //  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n    const onUpdateTaskData = async (tasks) => {\n        Object.values(tasks).map(async (task) => {\n            console.log('QQQQ Task', task)\n        })\n\n    }\n\n\n    //  API DATA CLEAN UP (Ideally these functions should not exist... but it's not an ideal world...)\n    //  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n    /**\n     * Not the best place but it should still work\n     * This will either make a dashboard for the device or replace a lost dashboard\n     */\n    const handleDeviceWithoutADashboard = async (devices, dashboards) => {\n        Object.values(devices).map(async (device) => {\n            // if the device does not have a dashboard, add one\n            if (!device.dashboards || device.dashboards.length === 0) {\n\n                console.log('QQQQ Device does not have a dashboard', deepCopy(device))\n                // alert('Device does not have a dashboard')\n\n                const newDeviceDashboard = {\n                    name: `${device.device_name} Dashboard`,\n                    buttons: [],\n                    device: device._id,\n                }\n\n                const newDashboard = onPostDashoard(newDeviceDashboard)\n\n                return newDashboard.then(async (dashPromise) => {\n                    console.log(dashPromise)\n                    if(dashPromise?._id?.$oid) {\n                        device.dashboards = [dashPromise._id.$oid]\n                        await onPutDevice(device, device._id)\n                    }\n\n                })\n\n\n            }\n\n            device.dashboards.map((dashboard) => {\n                if (!dashboards[dashboard]) {\n                    console.log('QQQQ Dashboard has dissapeared for some reason', dashboard)\n                    alert('Devices dashboard has been deleted, recreating')\n\n                    const newDeviceDashboard = {\n                        name: `${device.device_name} Dashboard`,\n                        buttons: [],\n                        device: device._id,\n                    }\n\n                    const newDashboard = onPostDashoard(newDeviceDashboard)\n\n                    return newDashboard.then(async (dashPromise) => {\n                        if (dashPromise._id !== undefined) {\n                            // Add new dashboard\n                            device.dashboards.push(dashPromise._id.$oid)\n\n                            // Delete old dashboard\n                            const index = device.dashboards.indexOf(dashboard)\n                            device.dashboards.splice(index, 1)\n                        }\n\n                        await onPutDevice(device, device._id)\n                    })\n\n\n                }\n            })\n        })\n    }\n\n    /**\n     * The dashboard is tied to a device that does not exist anymore, so delete the dashboard\n     * @param {*} devices\n     * @param {*} dashboards\n     */\n    const handleDashboardsWithBrokenDevice = (devices, dashboards) => {\n\n    }\n\n\n    /**\n     * This deletes tasks that have broken positions/stations\n     * A broken position/station can be:\n     * a deleted position/station\n     * a position thats parent station has been deleted\n     *  */\n    const handleTasksWithBrokenPositions = async (tasks, stations, positions) => {\n\n        if (tasks === undefined || stations === undefined || positions === undefined) return\n\n        Object.values(tasks).map(async (task) => {\n            // console.log('QQQQ Task', positions[task.load.position], positions[task.unload.position])\n\n            // Deletes the task if the load/unload position/station has been deleted from the positon list\n            if ((!positions[task.load.position] && !stations[task.load.position]) || (!positions[task.unload.position]) && !stations[task.unload.position]) {\n                console.log('QQQQ Position doesnt exist in positions, DELETE TASK', task._id)\n                alert('Position doesnt exist in positions, DELETE TASK')\n                await onDeleteTask(task._id)\n                return\n            }\n\n            // Deletes the task if the load/unload position has a change_key 'deleted'. This means the back end has not deleted the position yet\n            if ((!!positions[task.load.position] && !!positions[task.load.position].change_key && positions[task.load.position].change_key === 'deleted') ||\n                (!!positions[task.unload.position] && !!positions[task.unload.position].change_key && positions[task.unload.position].change_key === 'deleted')) {\n                console.log('QQQQ Position is deleted, waiting on back end, DELETE TASK')\n                alert('Position is deleted, waiting on back end, DELETE TASK')\n                await onDeleteTask(task._id)\n                return\n            }\n\n            // Commented out for the AMR demo\n            // Deletes the task if the load/unload position has a parent, but that parent does not exist in stations (parent has been deleted)\n            // Also should delete the position as well\n            // if ((!!positions[task.load.position].parent && !Object.keys(stations).includes(positions[task.load.position].parent)) ||\n            //     (!!positions[task.unload.position].parent && !Object.keys(stations).includes(positions[task.load.position].parent))) {\n            //     console.log('QQQQ Position parent has been deleted, DELETE TASK AND POSITION')\n            //     await onDeleteTask(task._id)\n            //     return\n            // }\n        })\n    }\n\n    /**\n     * This deletes positions that have parents that are broken\n     * A broken parent is a parent that has been deleted\n     * @param {*} locations\n     */\n    const handlePositionsWithBrokenParents = async (stations, positions) => {\n\n        if (stations === undefined || positions === undefined) return\n\n        Object.values(positions).map(async (position) => {\n\n            if (!!position.parent && !Object.keys(stations).includes(position.parent && position.change_key !== 'deleted')) {\n                console.log('QQQQ This position should be deleted', position)\n                alert('This position should be deleted')\n                onDeletePosition(position)\n            }\n\n        })\n    }\n\n    /**\n     * 1) This finds positions that have become disassociated with their parent stations and reassociates them\n     * 2) Also finds stations that have children positions that have been deleted. Deletes those positions from the stations\n     * This happens because it happens... I have no idea why this happens....\n     * @param {*} locations\n     */\n    const handleStationsWithBrokenChildren = (stations, positions) => {\n\n        if (stations === undefined || positions === undefined) return\n\n        Object.values(stations).map((station) => {\n\n            // if(station.children === undefined) onDeleteStation(station._id)\n\n            station.children.map(async (position, ind) => {\n                if (!!positions[position] && positions[position].parent === null) {\n\n                    const brokenPosition = positions[position]\n                    console.log('QQQQ Stations with broken position', brokenPosition)\n                    alert('Stations with broken position')\n\n                    brokenPosition.parent = station._id\n\n                    onPutPosition(brokenPosition, brokenPosition._id)\n\n                }\n\n                else if (!positions[position]) {\n                    let brokenStation = deepCopy(station)\n                    console.log('QQQQ Stations with deleted position', deepCopy(brokenStation), deepCopy(positions))\n                    alert('Stations with deleted position')\n\n                    brokenStation.children.splice(ind, 1)\n                    await onPutStation(brokenStation, brokenStation._id)\n                }\n            })\n        })\n\n    }\n\n    /**\n     * This deletes device station if the station is broken\n     * A broken station would happen when a station has been deleted\n     * @param {*} devices\n     * @param {*} locations\n     */\n    const handleDevicesWithBrokenStations = async (devices, stations) => {\n\n        if (devices === undefined || stations === undefined) return\n\n        Object.values(devices).map(async (device) => {\n            if (!!device.station_id && !Object.keys(stations).includes(device.station_id)) {\n                console.log('QQQQ Device has a station ID that needs to be deleted', device)\n                alert('Device has a station ID that needs to be deleted')\n                delete device.station_id\n                onPutDevice(device, device._id)\n            }\n        })\n\n    }\n\n    /**\n     * This adds station to device if the station has a device ID and the device does not have a station ID\n     * Why this happens is unkown atm, but this fixes when a device comes back without a station ID but should have one\n     *\n     * It also deletes stations that should be associated with a device, but the device either does not exist or ID has changed\n     *\n     * @param {*} devices\n     * @param {*} locations\n     */\n    const handleStationsWithBrokenDevices = (devices, stations) => {\n\n        if (devices === undefined || stations === undefined) return\n\n        Object.values(stations).map((station) => {\n\n            // Delete station\n            if (!!station.device_id && devices[station.device_id] === undefined) {\n                console.log('QQQQ Station has a device that is deleted')\n                alert('Station has a device that is deleted')\n\n                onDeleteStation(station._id)\n            }\n\n            // Add station to device\n            else if (!!station.device_id && !devices[station.device_id].station_id) {\n                console.log('QQQQ Station has a broken device')\n                alert('Station has a broken device')\n\n                const device = devices[station.device_id]\n                device.station_id = station._id\n                onPutDevice(device, device._id)\n\n            }\n        })\n\n    }\n\n    /**\n     * This deletes dashboards that belong to stations that don't exist\n     * @param {*} dashboards\n     * @param {*} locations\n     */\n    const handleDashboardsWithBrokenStations = (dashboards, stations) => {\n\n        if (dashboards === undefined || stations === undefined) return\n\n        Object.values(dashboards).map((dashboard) => {\n            if (!!dashboard.location && !dashboard.device && !stations[dashboard.location]) {\n                console.log('QQQQ dashboard belongs to a station that does not exist', dashboard)\n                alert('Dashboard belongs to a station that does not exist')\n                onDeleteDashboard(dashboard._id.$oid)\n            }\n        })\n\n\n    }\n\n    /**\n     * This handles broken Processes\n     * 1) A broken process would happen if a route/task that has been deleted but the process has not been updated\n     * 2) Also, a route could have been added to a process, but the process was never added to the route\n     * @param {*} processes\n     * @param {*} tasks\n     */\n    const handleProcessesWithBrokenRoutes = async (processes, tasks) => {\n        if (processes === undefined || tasks === undefined) return\n\n        Object.values(processes).map((process) => {\n\n            // Object.keys(process.routes).map(async (station) => {\n\n            process.routes.map(async (route) => {\n\n                // If the route does not exist anymore in tasks then delete the route from the process\n                if (!tasks[route]) {\n                    // Removes the task from the array of routes\n                    let processRoutes = deepCopy(process.routes)\n                    const index = processRoutes.indexOf(route)\n                    processRoutes.splice(index, 1)\n                    const updatedProcess = {\n                        ...process,\n                        routes: [...processRoutes]\n                    }\n                    console.log('QQQQ route does not exist in anymore, delete from process', deepCopy(updatedProcess))\n                    alert('Route does not exist in anymore, delete from process')\n\n                    await onPutProcess(updatedProcess)\n                }\n\n                // Else the task does exist, see if the task contains the process\n                // else {\n                //     if (!tasks[route].processes.includes(process._id)) {\n                //         console.log('QQQQ Process containes a route, but the route does not contain the process, adding process to route', tasks[route])\n                //         alert('Process containes a route, but the route does not contain the process, adding process to route')\n                //\n                //         let taskCopy = deepCopy(tasks[route])\n                //         taskCopy.processes.push(process._id)\n                //         dispatchPutTask(taskCopy, taskCopy._id)\n                //\n                //     }\n                // }\n            })\n        })\n\n        // })\n    }\n\n    /**\n     * This handles tasks that belong to broken process\n     * 1) the process has been deleted and the task have not\n     * 2) The task was created but the process was never saved\n     * 3) The task has a new tag\n     * @param {*} processes\n     * @param {*} tasks\n     */\n    const handleTasksWithBrokenProcess = async (processes, tasks) => {\n        if (processes === undefined || tasks === undefined) return\n\n        Object.values(tasks).map(async (task) => {\n\n            if (!!task.new) {\n                console.log('QQQQ Task still has a new tag', deepCopy(task))\n                alert('Task still has a new tag, deleting task')\n                onDeleteTask(task._id)\n            }\n\n            if (task.processes.length > 0) {\n                task.processes.map((process) => {\n\n                    // If processes does no contain the process, then the process was deleted so remove it from the task\n                    if (!processes[process]) {\n                        const index = task.processes.indexOf(process)\n                        task.processes.splice(index, 1)\n\n                        console.log('QQQQ Process does not exist anymore, removing from task', task)\n                        alert('Process does not exist anymore, removing from task')\n                        dispatchPutTask(task, task._id)\n\n                    }\n\n                    else if (!processes[process].routes.includes(task._id)) {\n                        console.log('QQQQ Task is associated with a process that is not associated with the task anymore', task, process)\n                        alert('Task is associated with a process that is not associated with the task anymore, adding back to process')\n\n                        const index = task.processes.indexOf(process)\n                        task.processes.splice(index, 1)\n                        dispatchPutTask(task, task._id)\n\n                    }\n\n                })\n            }\n\n        })\n\n    }\n\n    /**\n     * This handles task queue items that belong to a broken task\n     * A task would be broken because it has been deleted\n     * @param {*} taskQueue\n     * @param {*} tasks\n     */\n    const handleTaskQueueWithBrokenTasks = async (taskQueue, tasks) => {\n        if (taskQueue === undefined) return\n\n        Object.values(taskQueue).map(async (Q, i) => {\n            if (tasks[Q.task_id] === undefined) {\n                console.log('QQQQ TaskQ associated task has been deleted')\n                alert('TaskQ associated task has been deleted')\n                await onDeleteTaskQItem(Q._id)\n            }\n        })\n    }\n\n    //  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    //  API DATA CLEAN UP\n\n\n    //  API LOGIN\n    //  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n    return (\n        <SplashScreen\n            isApiLoaded={props.isApiLoaded}\n            apiError={apiError}\n        />\n    )\n}\n\nexport default ApiContainer;\n","import { normalize, schema } from 'normalizr';\n\nimport {\n    GET_DEVICES_SUCCESS,\n    GET_DEVICES_FAILURE\n} from '../types/devices_types'\n\nimport {\n    GET_STATUS_SUCCESS,\n    GET_STATUS_FAILURE\n} from '../types/status_types';\n\nimport {\n    GET_TASK_QUEUE_SUCCESS,\n    GET_TASK_QUEUE_FAILURE,\n    INCREMENT_GET_DATA_FAILURE_COUNT\n} from '../types/task_queue_types';\n\nimport * as api from '../../api/data_stream_api'\nimport { devicesSchema } from '../../normalizr/schema';\nimport { statusesSchema } from '../../normalizr/status_schema'\nimport { taskQueueSchema } from '../../normalizr/task_queue_schema'\n\n\nexport const getDataStream = () => {\n    return async dispatch => {\n\n        function handleDevicesSuccess(response) {\n            dispatch({ type: GET_DEVICES_SUCCESS, payload: response });\n            return response;\n        }\n        function handleDevicesError(error) {\n            dispatch({ type: GET_DEVICES_FAILURE, payload: error });\n            return error;\n        }\n\n        function handleStatusSuccess(response) {\n            dispatch({ type: GET_STATUS_SUCCESS, payload: response });\n            return response;\n        }\n        function handleStatusError(error) {\n            dispatch({ type: GET_STATUS_FAILURE, payload: error });\n            return error;\n        }\n\n        function handleTaskQueueSuccess(response) {\n            dispatch({ type: GET_TASK_QUEUE_SUCCESS, payload: response });\n            return response;\n        }\n        function handleTaskQueueError(error) {\n\n            dispatch({ type: GET_TASK_QUEUE_FAILURE, payload: error });\n            dispatch({ type: INCREMENT_GET_DATA_FAILURE_COUNT, payload: null })\n            return error;\n        }\n\n        try {\n\n            const dataStream = await api.getDataStream();\n\n            // Devices\n            try {\n                let devices = dataStream.devices\n                devices.forEach((device, ind) => {\n                    if (!(device.position === undefined)) {\n                        devices[ind].position.pos_x = device.position.x\n                        devices[ind].position.pos_y = device.position.y\n                    }\n                })\n\n                const normalizedDevices = normalize(devices, devicesSchema);\n                handleDevicesSuccess(normalizedDevices.entities.devices)\n            } catch (error) {\n                handleDevicesError(error)\n            }\n\n\n            // Status\n            try {\n                let status = dataStream.status\n                handleStatusSuccess(status);\n            } catch (error) {\n                handleStatusError(error)\n            }\n\n\n            // Task Queue\n            try {\n                const taskQueue = dataStream.task_queue\n                const normalizedTaskQueue = normalize(taskQueue, taskQueueSchema);\n                return handleTaskQueueSuccess(normalizedTaskQueue.entities.taskQueue);\n            } catch (error) {\n                return handleTaskQueueError(error)\n            }\n\n\n\n        } catch (error) {\n        }\n    }\n}\n","import React, { Text } from 'react'\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { deepCopy } from './utils'\n\n/**\n * inserts \\n chars to split a string at a certain length (while not splitting words)\n * \n * @param {string} str \n * @param {int} maxWidth \n */\nfunction wrapText(str, maxWidth) {\n    function testWhite(x) {\n        var white = new RegExp(/^\\s$/);\n        return white.test(x.charAt(0));\n    };\n\n    let newLineStr = \"\\n\"; \n    let done = false; \n    let res = '';\n    while (str.length > maxWidth) {                 \n        let found = false;\n        // Inserts new line at first whitespace of the line\n        for (let i = maxWidth - 1; i >= 0; i--) {\n            if (testWhite(str.charAt(i))) {\n                res = res + [str.slice(0, i), newLineStr].join('');\n                str = str.slice(i + 1);\n                found = true;\n                break;\n            }\n        }\n        // Inserts new line at maxWidth position, the word is too long to wrap\n        if (!found) {\n            res += [str.slice(0, maxWidth), newLineStr].join('');\n            str = str.slice(maxWidth);\n        }\n\n    }\n\n    return res + str;\n}\n\n/**\n * Generates a string-based summary of the condition\n * \n * @param {object} condition skill's condition - differs in the case of condition templates\n * @param {object} skill \n * @param {array} skills \n * @param {array} objects \n * @param {array} locations \n * @param {boolean} bound maximum length of a line\n * @param {boolean} embolden should the string have bold text\n */\nexport const conditionSummary = (condition, skill, skills, objects, locations, bound, embolden) => {\n    \n    let summary\n    switch (condition.type) {\n        case 'object_at_location':\n\n            let location = ''\n            try {\n                if (condition.location == 'cart'){\n                    location = 'Cart'\n                }else {\n                    location = locations.filter(location => location._id == condition.location);\n                    if (location.length) {location = location[0].name}\n                    else {location = ''}\n                }\n            } catch (error) {\n                location = ''\n            }\n\n\n            let object, quantity;\n            if (condition.object == 'cart') {\n                object = 'Cart';\n                quantity = '';\n            } else {\n                object = objects.filter(object => object._id.$oid == condition.object);\n                if (object.length) {object = object[0].name}\n                else {object = ''}\n                quantity = condition.quantity;\n            }\n            \n            if (embolden != false) {\n                summary = `${quantity ? '<b>' + quantity + '</b> x ' : ''}` + '<b>' + object + '</b> at <b>' + location + '</b>'\n            } else{\n                summary = `${quantity ? quantity + ' x ' : ''}` + object + ' at ' + location\n            }\n\n            if (bound != false) {\n                return wrapText(summary, 56) // Wrapping at specific point allows Tree/Links to know how many lines the summary is\n            } else {\n                return summary + '\\n'\n            }\n            \n\n        case 'hil_complete':\n            let name;\n            if (!!skills) {\n                if (!!skill.skill_id) {\n                    name = skills.filter(s => s._id.$oid == skill.skill_id.$oid);\n                    if (name.length) {name = name[0].name}\n                    else {name = ''}\n                } else {\n                    name = 'New HIL'\n                }\n            } else {\n                name = skill.name;\n            }\n\n            if (embolden != false) {\n                summary = 'HIL <b>' + name + '</b> complete'\n            } else {\n                summary = 'HIL ' + name + ' complete'\n            }\n            \n            if (bound != false) {\n                return wrapText(summary, 56) // Wrapping at specific point allows Tree/Links to know how many lines the summary is\n            } else {\n                return summary + '\\n'\n            }return wrapText(summary, 56) // Wrapping at specific point allows Tree/Links to know how many lines the summary is\n    }\n  };\n\n\nexport function getHILSkills(skills) {\n    let postcond;\n    let hils = [];\n\n    for (var i=0; i<skills.length; i++) {\n        try {\n            if (!!skills[i].template && skills[i].template == 'human_in_the_loop') {\n                hils.push(skills[i]);\n            }\n        } catch (error) {\n            \n        }\n\n    }\n\n    return hils;\n}\n\nexport function methodLabel(method, verbose=false) {\n    switch (method) {\n        case \"null\":\n            return \"Goal\"\n        case \"move_cart_to_x\":\n            return \"Drive\"\n        case \"human_in_the_loop\":\n            if (verbose) {\n                return \"Human in the Loop\"\n            } else {\n                return \"HIL\"\n            }            \n        case \"pick_object\":\n            return \"Pick\"\n        case \"place_object\":\n            return \"Place\"\n        case \"load\":\n            return \"Load\"\n        case \"unload\":\n            return \"Unload\"\n        case \"human_load\":\n            return \"Human Load\"\n        case \"human_unload\":\n            return \"Human Unload\"\n        case \"robot_load\":\n            return \"Autonomous Load\"\n        case \"robot_unload\":\n            return \"Autonomous Unload\"\n        default:\n            return \"Auto\"\n    }\n}\n\nexport function skillName(skill, locations, skills) {\n\n    let filteredSkills = skills.filter(skillz => skillz._id.$oid == skill.skill_id.$oid)\n    let skillName = !!filteredSkills[0] && filteredSkills[0].name\n    return skillName;\n}\n\nexport function parseCondition(cond, skills) {\n    var desc = cond.type + \" \"\n    Object.entries(cond).forEach((entry, index, entries) => {\n        if(entry[0] != \"type\" && entry[0] != \"id\") {\n            desc += '[' + entry[0] + ': ' + entry[1] + ']';\n        }\n    });\n    switch (cond.type) {\n        case \"object_at_location\":\n            if (cond.object == 'cart') { desc = 'Cart at \\''+cond.location+'\\'';}\n            else if (cond.location == 'hand') { desc = '\\''+cond.object+'\\' in Hand';}\n            else { desc = '\\''+cond.object+'\\' at \\''+cond.location+'\\''}\n            break;\n        case \"stack_complete\":\n            desc = \"Skill '\"+cond.name+\"' complete\";\n            break;\n        case \"hil_complete\":\n            desc = \"HIL '\"+cond.name+\"' complete\";\n            break;\n    }\n    return desc\n}\n\nexport const getCurrentSkill = (skills, skillID) => {\n\n\n    const skillIndex = skills.findIndex(d => {\n        return d._id.$oid == skillID\n    })\n\n    return deepCopy(skills[skillIndex])\n}","import styled from 'styled-components';\n\nimport { hexToRGBA } from '../../methods/utils/color_utils'\n\nexport const NotificationsContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n\n    position: absolute;\n    top: 4rem;\n    right: 0;\n\n    padding: 0.5rem;\n    padding-top: 0rem;\n\n    align-items: center;\n\n    width: ${props => props.overlaping ?  '13.75rem' : '20rem'} ;\n    height: auto;\n    max-height: ${props => props.windowHeight};\n    /* max-height: 10rem; */\n\n    box-shadow: -1px 2.5px 2.5px 0px rgba(0,0,0,0.1);\n\n    background: ${props => hexToRGBA(props.theme.bg.secondary, 0.97)};\n\n    border-radius: 0 0 0 1rem;\n\n    z-index: 1;\n\n    overflow-y: scroll;\n\n    ::-webkit-scrollbar{\n        display: none;\n    }\n\n`\n\nexport const ClearText = styled.p`\n    color: ${props => props.theme.bg.quaternary};\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz3};\n    margin-bottom: 0rem;\n    user-select: none; /* Standard */\n    &:hover {\n        cursor: pointer;\n    }\n`\n\nexport const NotificationTypeTitle = styled.p`\n    color: ${props => props.theme.bg.senary};\n    font-weight: 600;\n    font-size: 1.3rem;\n    font-family: ${props => props.theme.font.primary};\n    user-select: none; /* Standard */\n\n`\n\nexport const NotificationTypeContainer = styled.div`\n    width: 100%;\n    padding-left: 1rem;\n    position: relative;\n`\n\nexport const NotificationMinimizeIcon = styled.i`\n    position: absolute;\n    right: 1rem;\n    top: 0rem;\n    color: ${props => props.theme.bg.octonary};\n\n    &:hover {\n        cursor: pointer;\n    }\n`\n\nexport const NotificationDisplayContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n`\n\nexport const NewNotificationContainer = styled.div`\n    display: flex;\n    position: absolute;\n    top: 5rem;\n    right: .5rem;\n`\n\nexport const ToggleContainer =styled.div`\n    display: flex;\n    width: 100%;\n    justify-content: center;\n\n    margin: .5rem .5rem;\n`\n\nexport const ToggleButton = styled.div`\n    width: 50%;\n    display: flex;\n    justify-content: center;\n    color: ${props => props.theme.fg.primary};\n    font-size: 1rem;\n\n    user-select: none; /* Standard */\n    background-color: ${props => props.selected == props.type ? props.theme.bg.senary : props.theme.bg.septenary};\n    color: ${props => props.selected == props.type ? props.theme.bg.septenary : props.theme.bg.quaternary};\n\n    height: 1.8rem;\n    line-height: 1.9rem;\n\n    &:hover{\n        cursor: pointer;\n    }\n`\n\nexport const Title = styled.h1`\n    margin-top: 1rem;\n    font-size: ${props => props.theme.fontSize.sz3};\n    font-family: ${props => props.theme.font.primary};\n`\n","import styled from \"styled-components\";\n\nimport { LightenDarkenColor } from '../../../methods/utils/color_utils'\n\nexport const NotificationContainer = styled.div`\n    width: 19rem;\n    background: ${props => LightenDarkenColor(props.theme.bg.senary, 45)};\n    margin-bottom: 1rem;\n    border-radius: 0.35rem;\n    \n    position: relative;\n    display: flex;\n    flex-direction: column;\n\n    &:hover {\n        cursor: pointer;\n    }\n`;\n\nexport const NotificationHeader = styled.div`\n    height: 1.4rem;\n    width: 100%;\n\n    display: flex;\n    flex-direction: row;\n\n    background: ${props => LightenDarkenColor(props.theme.bg.senary,25)};\n\n    border-radius: 0.35rem 0.35rem 0 0;\n`\n\nexport const NotificationTypeText = styled.h3`\n    color: ${props => props.theme.bg.quaternary};\n    font-weight: 600;\n    font-size: ${props => props.theme.fontSize.sz5};\n    font-family: ${props => props.theme.font.primary};\n    user-select: none; /* Standard */\n\n    line-height: 1.4rem;\n    padding-left: 0.5rem;\n\n    flex-grow: 1;\n`\n\nexport const NotificationDateTime = styled.h4`\n    color: ${props => props.theme.bg.quaternary};\n    font-weight: 400;\n    font-size: ${props => props.theme.fontSize.sz5};\n    font-family: ${props => props.theme.font.primary};\n\n    line-height: 1.4rem;\n    padding-right: 0.5rem;\n`\n\nexport const NotificationBody = styled.div`\n    flex-grow: 1;\n    padding: 0.5rem;\n`\n\nexport const NotificationLabel = styled.h4`\n    color: ${props => props.theme.bg.secondary};\n    font-weight: 550;\n    font-size: ${props => props.theme.fontSize.sz5};\n    font-family: ${props => props.theme.font.primary};\n    user-select: none; /* Standard */\n`\n\nexport const NotificationMessage = styled.h5`\n    color: ${props => props.theme.bg.quaternary};\n    font-size: ${props => props.theme.fontSize.sz6};\n    font-family: ${props => props.theme.font.primary};\n    user-select: none; /* Standard */\n`\n\nexport const ClearNotification = styled.i`\n    /* position: absolute; */\n    right: 0.5rem;\n    top: 1.5rem;\n    font-size: ${(props) => props.theme.fontSize.sz2};\n\n    display: flex;\n    flex-grow: 1;\n\n    &:hover {\n        cursor: pointer;\n    }\n`;","import React, { useState, useMemo, useRef, useEffect } from \"react\";\n\nimport { useHistory } from 'react-router-dom'\n\nimport * as styled from \"./notification.style\";\nimport { timeFormat } from 'd3-time-format'\nimport { timeDay } from 'd3-time'\n\nconst Notification = (props) => {\n    // const { message, type, ind, id } = props;\n\n    const history = useHistory()\n\n    const dayDelta = timeDay.count(props.notification.dateTime, new Date)\n    let dateTimeFormatter\n    if (dayDelta < 1) {\n        dateTimeFormatter = timeFormat(\"%I:%M %p\")\n    } else if (dayDelta < 7) {\n        dateTimeFormatter = timeFormat(\"%A %I:%M %p\")\n    } else {\n        dateTimeFormatter = timeFormat(\"%b %d\")\n    }\n\n    // const handleNotificationClicked = () => {\n    //     // history.push('/locations/' + id )\n    // }\n\n    const { notification, ind } = props\n\n    const handleType = () => {\n        switch (notification.type) {\n            case \"station_alert\":\n                return \"STATION\"\n            case \"device_alert\":\n                return \"DEVICE\"\n        }\n    }\n\n    return (\n        <styled.NotificationContainer key={ind}>\n            <styled.NotificationHeader>\n                <styled.NotificationTypeText>{handleType()}</styled.NotificationTypeText>\n                <styled.NotificationDateTime>{dateTimeFormatter(props.notification.dateTime)}</styled.NotificationDateTime>\n            </styled.NotificationHeader>\n            \n            <styled.NotificationBody>\n                <styled.NotificationLabel>{notification.label}</styled.NotificationLabel>\n                <styled.NotificationMessage>{notification.message}</styled.NotificationMessage>\n            </styled.NotificationBody>\n        </styled.NotificationContainer>\n    );\n};\n\nexport default Notification;\n","import React, { useState, useMemo, useRef, useEffect } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport * as styled from './notifications.style'\n\nimport Notification from './notification/notification'\n\nconst Notifications = () => {\n    const notifications = useSelector(state => state.notificationsReducer.notifications)\n\n    const handleNotifications = () => {\n        return (\n            <>{\n                notifications.sort((a, b) => b.dateTime - a.dateTime).map((notification, ind) =>\n                    <Notification\n                        key={`notification-${ind}`}\n                        ind={ind}\n                        notification={notification}\n                    />\n                )\n            }</>\n        )\n    }\n\n    return (\n        <>\n            {handleNotifications()}\n        </>\n    )\n}\n\nexport default Notifications","import React, { useState, useMemo, useRef, useEffect } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport * as styled from \"./right_menu.style\";\n\n// Import Components\nimport TaskQueue from '../../components/task_queue/task_queue'\nimport Notifications from \"../../components/notifications/notifications\";\nimport Notification from \"../../components/notifications/notification/notification\";\n\n// Import actions\nimport { deleteTaskQueueAll } from '../../redux/actions/task_queue_actions'\nimport { toggleNotificationTaskQueue } from '../../redux/actions/notifications_actions'\n\nimport useWindowSize from \"../../hooks/useWindowSize\";\n\n\nimport {\n    deepCopy,\n    upperCaseFirstLetterInString,\n} from \"../../methods/utils/utils\";\n\nconst RightMenu = (props) => {\n\n    // This values are defined in Status Header\n    const { showRightMenu, newNotification, overlapStatus } = props;\n\n    const size = useWindowSize();\n\n    const dispatch = useDispatch()\n    const onHideNotifications = (displayType) => dispatch({ type: 'HIDDEN_NOTIFICATIONS', payload: displayType })\n    const onDeleteTaskQueueAll = () => dispatch(deleteTaskQueueAll())\n    const setToggle = (toggle) => dispatch(toggleNotificationTaskQueue(toggle))\n\n\n    const displayType = useSelector(state => state.notificationsReducer.hiddenNotifications)\n    const toggle = useSelector(state => state.notificationsReducer.toggleNotificationTaskQueue)\n\n    const [types, setTypes] = useState({});\n\n    /**\n     * When a new notification comes in, overlay on the map\n     */\n    const handleNewNotification = () => {\n        const notification = {\n            message: \"Station 69 takt time is 420s slower then normal\",\n            type: \"station_alert\",\n            id: \"1234\",\n        };\n\n        return (\n            <styled.NewNotificationContainer>\n                <Notification\n                    message={notification.message}\n                    type={notification.type}\n                    id={notification.id}\n                    onClick={() => {\n                        console.log(\"QQQQ Clicked ID\");\n                    }}\n                />\n            </styled.NewNotificationContainer>\n        );\n    };\n\n    /**\n     * This handles clearing of either the task q or notifications\n     */\n    const handleClear = () => {\n        if (toggle === 'taskQueue') {\n            onDeleteTaskQueueAll()\n        } else if (toggle === 'notifications'){\n            console.log('Clearing Notifications')\n        }\n    }\n\n    return (\n        <>\n            {showRightMenu && (\n\n                <styled.NotificationsContainer\n                    windowHeight={size.height + \"px\"}\n                    overlaping = {overlapStatus}\n                >\n\n                    {/* Commented out for the time being. As of Aug 31 2020 notifications have not been impleneted */}\n                    {/* <styled.ToggleContainer>\n                        <styled.ToggleButton selected={toggle} type={'notifications'} onClick={() => setToggle('notifications')} style={{ borderTopLeftRadius: '0.25rem', borderBottomLeftRadius: '0.25rem' }}>Notifications</styled.ToggleButton>\n                        <styled.ToggleButton selected={toggle} type={'taskQueue'} onClick={() => setToggle('taskQueue')} style={{ borderTopRightRadius: '0.25rem', borderBottomRightRadius: '0.25rem' }}>Task Queue</styled.ToggleButton>\n                    </styled.ToggleContainer> */}\n\n                    <styled.Title>Task Queue</styled.Title>\n\n                    <styled.ClearText\n                        onClick={() => {\n                            handleClear();\n                        }}\n                    >\n                        Clear All\n                    </styled.ClearText>\n                    {toggle === 'notifications' &&\n                        <Notifications />\n                    }\n\n                    {toggle === 'taskQueue' &&\n                        <TaskQueue />\n                    }\n                </styled.NotificationsContainer>\n            )}\n\n            {newNotification && handleNewNotification()}\n        </>\n    );\n};\n\nexport default RightMenu;\n","import styled from 'styled-components';\n\nimport { globStyle } from '../../global_style';\nimport { hexToRGBA, LightenDarkenColor, RGB_Linear_Shade } from '../../methods/utils/color_utils';\n\nexport const StatusHeader = styled.div`\n    position: fixed;\n    width: 100%;\n    height: 4rem;\n\n    display: flex;\n    flex-direction: row;\n    pointer-events: none;\n\n    z-index: 2;\n`\n\nexport const LeftContentContainer = styled.div`\n    flex-grow: 1;\n    z-index: 2;\n    margin-left: 4.5rem;\n    pointer-events: auto;\n\n    display: flex;\n\n`\n\nexport const RightContentContainer = styled.div`\n    flex-grow: 1;\n    z-index: 2;\n    pointer-events: auto;\n\n    display: flex;\n    align-items: right;\n    justify-content: flex-end;\n\n`\n\n\n// logo\n// ************************************\n// ************************************\nexport const Logo = styled.div`\n    display: flex;\n    align-items: center;\n    margin-left: ${props => props.windowWidth > props.widthBreakPoint ? '1rem' : '.4rem'};\n`;\n\nexport const LogoIcon = styled.i`\n    font-size: 2.5rem;\n    margin-top: -.5rem;\n    margin-right: .1rem;\n    color: ${props => props.theme.fg.secondary};\n`\n\nexport const LogoSubtitle = styled.h2`\n    color: ${props => props.theme.bg.senary};\n    font-family: 'Montserrat';\n    font-size: 1rem;\n    font-weight: 600;\n    margin-bottom: -1.3rem;\n    margin-left: 0.2rem;\n`;\n\n\n// ************************************\n// ************************************\n\n// play button\n// ************************************\n// ************************************\nexport const PlayButton = styled.button`\n    //color:  ${props => props.play ? props.theme.good : props.theme.bad};\n    background: transparent;\n    // border: 0.2rem solid ${props => props.play ? props.theme.good : props.theme.bad};\n    border: none;\n    border-radius: 0.3rem;\n    height: 4rem;\n    padding: .25rem;\n    outline: none !important;\n    outlineOffset: none !important;\n    &:hover {\n        color: ${props => props.play ? RGB_Linear_Shade(.3, props.theme.good) : RGB_Linear_Shade(.3, props.theme.bad)};\n        border-color: ${props => props.play ? RGB_Linear_Shade(.3, props.theme.good) : RGB_Linear_Shade(.3, props.theme.bad)};\n    }\n\n    margin-right: 1.5rem;\n    margin-left: 0;\n\n    @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n        margin-right: 1rem;\n    }\n\n\n`;\n\nexport const PlayButtonIcon = styled.i`\n  color:  ${props => props.play ? props.theme.good : props.theme.bad};\n  font-size: 2rem;\n  // outline: 'none !important',\n  // outlineOffset: 'none !important',\n  line-height: 1.7rem;\n  text-align: center;\n  &:hover {\n    color: ${props => props.play ? RGB_Linear_Shade(.3, props.theme.good) : RGB_Linear_Shade(.3, props.theme.bad)};\n  }\n`;\n\n// ************************************\n// ************************************\n\n// Notifications\n// ************************************\n// ************************************\n\nexport const NotificationIcon = styled.i`\n    font-size: 2.2rem;\n    /* font-size: ${props => props.theme.fontSize.sz3}; */\n    color: ${props => props.theme.fg.red};\n    margin-left: .2rem;\n    margin-right: .2rem;\n    margin-bottom: 0.4rem;\n`\n\nexport const RightMenuContainer = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    width: 3.6rem;\n    height: 3.2rem;\n    margin-top: 0.4rem;\n\n    border-radius: .5rem;\n    // border: .2em solid;\n\n\n    &:hover {\n        cursor: pointer;\n    }\n\n\n    ${props => props.checked && `\n        box-shadow: inset 2px 2px 4px 0px rgba(0, 0, 0, 0.25), inset -2px -2px 3px 0px rgba(255, 255, 255, 0.6);\n        background: rgba(0,0,0,0.05);\n    `}\n\n    margin-left: 0;\n    margin-right: 2rem;\n\n    @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n        margin-right: 1rem;\n    }\n\n`\n\nexport const NotificationText = styled.p`\n    height: 1.4rem;\n    width: 1.4rem;\n    user-select: none;\n\n    position: absolute;\n    transform: translate(0.9rem, 0.6rem);\n\n    background-color: ${props => props.theme.bg.septenary};\n    border: 0.1rem solid ${props => props.theme.fg.primary};\n    border-radius: 0.7rem;\n\n    font-size: 1rem;\n    font-weight: 600;\n    color: ${props => props.theme.fg.red};\n    margin: 0;\n    padding: 0;\n\n    line-height: 1.4rem;\n    text-align: center\n`\n","// import external dependencies\nimport React, { useState, useMemo, useRef, useEffect, useContext } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams, useHistory } from 'react-router-dom'\n\n// import methods\nimport { getBatteryClassName } from '../../methods/utils/class_name_utils';\nimport { uuidv4, deepCopy } from '../../methods/utils/utils';\nimport { parseCondition } from '../../methods/utils/skills_utils.js'\nimport { hexToRGBA, LightenDarkenColor, RGB_Linear_Shade } from '../../methods/utils/color_utils';\n\n// import actions\nimport { postStatus } from '../../redux/actions/status_actions'\nimport * as taskQueueActions from '../../redux/actions/task_queue_actions'\nimport { setWidth, setOpen} from \"../../redux/actions/sidebar_actions\";\n\n// import components\nimport RightMenu from '../right_menu/right_menu'\n\n// import hooks\nimport useWindowSize from '../../hooks/useWindowSize'\n\n// import logger\nimport log, { disableAll } from '../../logger.js';\n\n// import styles\nimport * as styled from './status_header.style'\nimport { render } from '@testing-library/react';\nimport { ThemeContext } from 'styled-components'\n\n\nconst StatusHeader = (props) => {\n\n    // this.logger = log.getLogger(this.constructor.name);\n\n    //const [showRightMenu, setShowRightMenu] = useState(false)\n    const [newNotification, setNewNotification] = useState(false)\n\n    const status = useSelector(state => state.statusReducer.status)\n    const displayType = useSelector(state => state.notificationsReducer.hiddenNotifications)\n    const notifications = useSelector(state => state.notificationsReducer.notifications)\n\n    const sideBarWidth = useSelector(state => state.sidebarReducer.width)\n    const toggle = useSelector(state => state.notificationsReducer.toggleNotificationTaskQueue)\n    const isSideBarOpen = useSelector(state => state.sidebarReducer.open)\n    const taskQueueOpen = useSelector(state => state.taskQueueReducer.taskQueueOpen)\n    const showConfirmDeleteModal = useSelector(state => state.sidebarReducer.showConfirmDeleteModal)\n    const MiRMapEnabled = useSelector(state => state.localReducer.localSettings.MiRMapEnabled)\n    const serverSettings = useSelector(state => state.settingsReducer.settings)\n    const deviceEnabled = serverSettings.deviceEnabled\n    const [initialRender, setInitialRender] = useState (null)\n    const [statusBarPath, setStatusBarPath] = useState(``)\n    const [rightCurvePoint, setRightCurvePoint] = useState(``)\n    const [overlapStatus, setOverlapStatus] = useState('')\n\n    const prevNotificationRef = useRef()\n\n\n    let params = useParams()\n    const widgetPage = params.widgetPage\n\n\n    const theme = useContext(ThemeContext)\n    const widthBreakPoint = 1025\n\n    const dispatch = useDispatch()\n    const onHideNotifications = (displayType) => dispatch({ type: 'HIDDEN_NOTIFICATIONS', payload: displayType })\n    const onTaskQueueOpen = (props) => dispatch(taskQueueActions.taskQueueOpen(props))\n    const onSetWidth = (props) => dispatch (setWidth(props))\n    const onSetOpen = (props) => dispatch (setOpen(props))\n\n\n\n\n    // Used for determining break point of header\n    const size = useWindowSize()\n    const windowWidth = size.width\n\n\n    const generatePath = () => {\n\n        const pageWidth = window.innerWidth\n        const windowWidth = size.width\n\n        if (windowWidth < 800 && isSideBarOpen && taskQueueOpen) {\n            setRightCurvePoint(220)\n            setOverlapStatus(true)\n        }\n        else {\n            setRightCurvePoint(320)\n            setOverlapStatus(false)\n        }\n\n\n        let x, mergeHeight\n        let leftMargin = 200\n\n        let rightMargin = 200\n        if (window.innerWidth < widthBreakPoint) {\n            x = 60\n            mergeHeight = 2\n            leftMargin = 80\n            rightMargin = !!params.widgetPage ? 80 : 160\n        } else if (!taskQueueOpen && sideBarWidth + 120 > pageWidth - 320) { // No notifications, overlaping containers\n            x = (pageWidth - sideBarWidth - 200) / 2\n            mergeHeight = 5 + (sideBarWidth - pageWidth + 440) * 35 / 120\n        } else if (taskQueueOpen && sideBarWidth + 120 > pageWidth - 440) { // W/ notifications, overlapping containers\n            x = (pageWidth - sideBarWidth - 320) / 2\n            mergeHeight = 5 + (sideBarWidth - pageWidth + 560) * 35 / 220\n        } else {\n            x = 120\n            mergeHeight = 5\n        }\n\n        const path = `\n                M0,0\n                L0,40\n                L${isSideBarOpen && !widgetPage ? sideBarWidth : leftMargin},40\n                C${isSideBarOpen && !widgetPage ? sideBarWidth + x / 2 : leftMargin + x / 2},40 ${isSideBarOpen && !widgetPage ? sideBarWidth + x / 2 : leftMargin + x / 2},${Math.min(mergeHeight, 40)} ${isSideBarOpen && !widgetPage ? sideBarWidth + x : leftMargin + x},${Math.min(mergeHeight, 40)}\n                L${pageWidth - (taskQueueOpen ? rightCurvePoint : rightMargin) - x},${Math.min(mergeHeight, 40)}\n                C${pageWidth - (taskQueueOpen ? rightCurvePoint : rightMargin) - x / 2},${Math.min(mergeHeight, 40)} ${taskQueueOpen ? `${pageWidth - rightCurvePoint},${Math.min(mergeHeight, 40)}` : `${pageWidth - rightMargin - x / 2},40`} ${pageWidth - (taskQueueOpen ? rightCurvePoint : rightMargin)},40\n                L${pageWidth},40\n                L${pageWidth},0\n                Z\n            `\n\n\n        setStatusBarPath(path)\n\n    }\n\n    /**\n     * This handles new notifications\n     * Sets the prev notification state to prevNotificationRef which is used to see if there's any new notifications\n     */\n\n    useEffect(() => {\n        prevNotificationRef.current = notifications\n        handleNotifications()\n    })\n\n\n    // useeffect is used like componentdidmount\n    useEffect(() => {\n        /**\n         * This maps through all the notifications and groups them into types.\n         * Grouping into types allows the ability to give notification type titles and be\n         * able to sort notifications by their types\n         *\n         * Also use displayType to minimize those type groups\n         */\n\n        let types = {}\n        notifications.map((notification) => {\n            // If notification types does not include the specific notification type than add it to types\n            if (types[notification.type] === undefined) {\n                const type = notification.type;\n\n                displayType[type] = true;\n\n                onHideNotifications(displayType)\n\n                types[notification.type] = [notification];\n\n            }\n        });\n        window.addEventListener('resize', generatePath)\n\n        return () => {\n            window.removeEventListener('resize', generatePath)\n        }\n    }, []);\n\n    useEffect(() => {\n        generatePath()\n    })\n    //This should work but the header path isn't updating on windowResize with these conditions...\n    // [sideBarWidth, isSideBarOpen, taskQueueOpen, window.onresize, window.innerWidth, params.widgetPage, windowWidth, sidebarOpenPath]\n\n    // Handles the play pause button\n    const handleTogglePlayPause = async () => {\n\n        //Flip the status to the opposite of the current value when the button is pressed\n        var status_clone = deepCopy(status);\n        const pause_status = !status_clone.pause_status;\n\n        //Post the status to the API\n        await dispatch(postStatus({ pause_status: pause_status }));\n    }\n\n\n    // Renders the left side of the header\n    const renderLeftHeader = useMemo(() => {\n\n        return (\n            <styled.LeftContentContainer\n                windowWidth={windowWidth}\n                widthBreakPoint={widthBreakPoint}\n            >\n                {/* <Link to='/Dashboards' style={{textDecoration:'none'}}> */}\n\n                {/* Hides the logo on mobile mode */}\n\n\n\n            </styled.LeftContentContainer>\n        )\n\n    }, [windowWidth])\n\n    /**\n     * Renders the right side of the header which contains:\n     *\n     * Play Pause Button: Used to start or stop the task queue\n     * Notifications: Used for to display notifications such as device issues, HILs, etc...\n     *\n     */\n    const renderRightContent = () => {\n        let pause_status = ''\n\n        // If there's no status available then set to blank object.\n        try {\n            pause_status = status.pause_status;\n        } catch (e) {\n            pause_status = false;\n        }\n\n        // Handles the icon type being displayed based on the pause_status in status\n        var playButtonClassName = \"fas fa-\";\n        pause_status ? playButtonClassName += 'play' : playButtonClassName += 'pause';\n\n        return (\n            <styled.RightContentContainer>\n\n                {/* Hide play pause button if it's not MirMapEnabled */}\n                {deviceEnabled &&\n                    <styled.PlayButton\n                        play={pause_status}\n                        windowWidth={windowWidth}\n                        widthBreakPoint={widthBreakPoint}\n                    >\n                        <styled.PlayButtonIcon play={pause_status} className={playButtonClassName} onClick={handleTogglePlayPause}></styled.PlayButtonIcon>\n                    </styled.PlayButton>\n                }\n\n                {/* This hides the right menu container if the screen size is below a set point and widgets are open (params.widgetPage) */}\n                {(windowWidth < widthBreakPoint && !params.widgetPage) &&\n                    <>\n                        <styled.RightMenuContainer checked={taskQueueOpen} onClick={() => {\n                            onTaskQueueOpen(!taskQueueOpen)\n                        }}>\n\n                            {toggle === 'notifications' ?\n                                <>\n                                    <styled.NotificationText>2</styled.NotificationText>\n                                    <styled.NotificationIcon className='far fa-bell' />\n                                </>\n                                :\n                                <styled.NotificationIcon className='fa fa-tasks' style={{ marginBottom: '0rem' }} />\n\n                            }\n\n\n                        </styled.RightMenuContainer>\n\n                        {(taskQueueOpen || newNotification) &&\n                            <>\n                                <RightMenu showRightMenu={taskQueueOpen} newNotification={newNotification} overlapStatus={overlapStatus} />\n                            </>\n                        }\n                    </>\n\n                }\n\n                {/* Always renders if page is greater then break point */}\n                {windowWidth > widthBreakPoint &&\n                    <>\n                        <styled.RightMenuContainer checked={taskQueueOpen} onClick={() =>\n                            onTaskQueueOpen(!taskQueueOpen)\n                        }>\n\n                            {toggle === 'notifications' ?\n                                <>\n                                    <styled.NotificationText>2</styled.NotificationText>\n                                    <styled.NotificationIcon className='far fa-bell' />\n                                </>\n                                :\n                                <styled.NotificationIcon className='fa fa-tasks' style={{ marginBottom: '0rem' }} />\n\n                            }\n\n                        </styled.RightMenuContainer>\n\n                        {(taskQueueOpen || newNotification) &&\n                            <>\n                                <RightMenu showRightMenu={taskQueueOpen} newNotification={newNotification} />\n                            </>\n                        }\n                    </>\n                }\n\n            </styled.RightContentContainer>\n        )\n    }\n\n    /**\n     * Handles New Notifications as well as hidding new notifications pop up when the notification panel is open\n     */\n    const handleNotifications = () => {\n\n        const prevNotifications = prevNotificationRef.current\n\n        // If prev state of notifications doesnt match the current state of notifications then a new notification must have been added\n        if (prevNotifications != notifications) {\n\n            setNewNotification(true)\n\n            setTimeout(() => {\n                setNewNotification(false)\n            }, 3000);\n\n        }\n        // If newNotification is true and showRightMenu is clicked, hide the new notifcation pop up\n        else if (taskQueueOpen && newNotification) {\n            setNewNotification(false)\n        }\n    }\n\n    return (\n\n        <styled.StatusHeader>\n            <div\n                style={{\n                    position: 'absolute',\n                    left: '0',\n                    top: '0',\n                    right: '0',\n                    height: '5rem',\n                    zIndex: '1',\n                }}>\n                <svg\n                    fill={hexToRGBA(theme.bg.secondary, 0.97)}\n                    viewBox={`0 0 ${window.innerWidth} 50`}\n                    width='100%' height='100%' preserveAspectRatio=\"none\"\n                >\n                    <filter id=\"dropshadow\" height=\"130%\">\n                        <feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"1.5\"/>\n                        <feOffset dx=\"0\" dy=\"1\" result=\"offsetblur\"/>\n                        <feComponentTransfer>\n                            <feFuncA type=\"linear\" slope=\"0.3\"/>\n                        </feComponentTransfer>\n                        <feMerge>\n                            <feMergeNode/>\n                            <feMergeNode in=\"SourceGraphic\"/>\n                        </feMerge>\n                    </filter>\n                    <path style={{ backdropFilter: 'blur(3px)', filter:'url(#dropshadow)' }} d={statusBarPath} />\n                </svg>\n\n            </div>\n\n            <styled.LeftContentContainer>\n                {windowWidth > widthBreakPoint &&\n                    <styled.Logo\n                        windowWidth={windowWidth}\n                        widthBreakPoint={widthBreakPoint}\n                    >\n                        <styled.LogoIcon className='icon-rmLogo' />\n                        <styled.LogoSubtitle> Studio</styled.LogoSubtitle>\n                    </styled.Logo>\n                }\n            </styled.LeftContentContainer>\n\n            {renderRightContent()}\n        </styled.StatusHeader>\n\n\n    );\n}\n\nexport default StatusHeader;\n","/*\nREAD-ME\n\nDO ALL CONTROLLING OF LOG LEVELS IN THIS CONTAINER, NEVER ANYWHERE ELSE\n\nInstructions of creating a new logger:\n=====================================\n\n1. import logger from src/logger.js'\n\n2. create a new logger\n    this.logger = logger.getLogger(~ENTER LOGGER NAME HERE~)\n\n3. use logger\n    this.logger.info('Here is a message', hereIsAVariable);\n\n*/\n\n// import external dependencies\nimport React, {Component} from 'react';\nimport { connect } from 'react-redux';\n\n// import actions\nimport { getLoggers, postLoggers } from '../../redux/actions/local_actions';\n\n// import methods\nimport { deepCopy, arraysEqual } from '../../methods/utils/utils'\n\n// import logger\nimport log from '../../logger.js';\n\nclass LoggerContainer extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n          //loggers: log.getLoggers(),\n          disableAll: false,\n          enableAll: false,\n        }\n\n        this.logger = log.getLogger(this.constructor.name);\n\n    }\n\n    componentDidMount() {\n        // initial call to check for loggers\n        this.checkForLoggers();\n\n        // check for new loggers on interval\n        // doesn't appear to be necessary at the moment\n        // this.checkLoggersInterval = setInterval(() => this.checkForLoggers(), 10000);\n\n    }\n\n    componentWillUnmount() {\n        // clearInterval(this.checkLoggersInterval);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        // const currentReduxLoggers = this.props.loggers;\n        // const prevReduxLoggers = prevProps.loggers;\n\n        const currentReduxLoggerNames = Object.keys(this.props.loggers);\n        const prevReduxLoggerNames = Object.keys(prevProps.loggers);\n\n        const loggersChanged = !arraysEqual(currentReduxLoggerNames, prevReduxLoggerNames);\n\n        if(loggersChanged) {\n            // this.checkForLoggers();\n        }\n\n\n\n    }\n\n\n    /*\n        This function disables all loggers\n    */\n    disableAll = () => {\n      this.logger.trace('disableAll called')\n      //Object.values(log.getLoggers()).forEach((logger, index) => {\n      //  logger.setLevel(5);\n      //})\n\n      Object.values(this.props.loggers).forEach((redux_logger, index) => {\n\n          let logger = log.getLogger(redux_logger.name);\n          logger.setLevel(5);\n\n      })\n\n      log.disableAll();\n      this.setState({disableAll: true, enableAll: false});\n    }\n\n    /*\n        This function enables all loggers\n    */\n    enableAll = () => {\n      //Object.values(log.getLoggers()).forEach((logger, index) => {\n      //  logger.setLevel(0);\n      //})\n\n      Object.values(this.props.loggers).forEach((redux_logger, index) => {\n          let logger = log.getLogger(redux_logger.name);\n          logger.setLevel(0);\n      })\n      log.enableAll();\n      this.setState({enableAll: true, disableAll: false});\n    }\n\n\n\n    /*\n        This function updates the actual logger settings to match the config in redux\n    */\n    updateLoggers = () => {\n\n        const existingLoggerNames = Object.values(log.getLoggers()).map((logger, index) => logger.name);\n\n        //If disableAll all is true\n        if(this.props.disableAll && !this.state.disableAll){\n          this.disableAll();\n        }\n\n        if(!this.props.disableAll && this.state.disableAll){\n          this.setState({disableAll: false});\n        }\n\n        //If mute all is false\n        if(this.props.enableAll && !this.state.enableAll){\n          this.enableAll();\n        }\n\n        if(!this.props.enableAll && this.state.enableAll){\n          this.setState({enableAll: false});\n        }\n\n        // only perform the logger updates if neither disableAll nor enableAll are true\n        if(!this.props.disableAll && !this.props.enableAll) {\n\n          // for each logger in redux:\n          //    get the actual logger\n          //    set the level to match the redux config\n          Object.values(this.props.loggers).forEach((redux_logger, index) => {\n\n            if(existingLoggerNames.includes(redux_logger.name)) {\n                let logger = log.getLogger(redux_logger.name);\n\n                let level = redux_logger.level;\n                let enabled = redux_logger.enabled;\n\n                // if logger isn't enabled and isn't already set to silent,\n                // set it to silent\n                if(!enabled && (logger.getLevel() !== 5)) {\n                  logger.setLevel(5);\n                }\n\n                // if the logger is enabled, and the actual level doesn't\n                // match the level config in redux, update it\n                if(enabled && (logger.getLevel() !== level)) {\n                  logger.setLevel(level);\n                }\n            }\n\n          });\n        }\n\n    }\n\n\n\n\n    /*\n        This function checks if any loggers exist that do not exist in the redux store\n        If a logger is found that isn't in the store, it will add a new logger object to the store\n    */\n    checkForLoggers = async () => {\n        // true if the redux store has read the logger config\n        // false otherwise\n        const { loaded } = this.props;\n\n        // only perform the check if the saved settings have been loaded\n        if(true) {\n\n          // get all loggers\n          const loggers = Object.values(log.getLoggers());\n          const loggerNames = loggers.map((logger) => logger.name);\n\n          // get name of loggers in redux\n          const reduxLoggerNames = Object.values(this.props.loggers).map((logger, index) => {\n            return logger.name;\n          });\n\n          // for each logger\n          //    check if the redux store contains a logger with the same name\n          //    if a logger isn't found, create a new one\n          let newLoggers = [];\n          loggers.forEach( async (logger, index) => {\n\n              let name = logger.name;\n              let level = logger.getLevel();\n\n              // if level is equal to 5 (silent), enabled is false, and true otherwise\n              let enabled = level === 5 ? false : true;\n\n              if(!reduxLoggerNames.includes(name)) {\n\n                  let newLogger = {\n                    name,\n                    level,\n                    enabled\n                  };\n\n                  this.logger.info('Adding new logger', newLogger)\n\n                  newLoggers.push(newLogger);\n              }\n          });\n\n          await this.addLoggers(newLoggers);\n\n\n          // this block will remove loggers from redux that don't actually exist\n          // this will be necessary for loggers that have been deleted from code\n          // but still have local saved settings\n\n          /*\n          let removeLoggers = [];\n          // delete\n          reduxLoggerNames.forEach( (reduxLoggerName, index) => {\n              if(!loggerNames.includes(reduxLoggerName)) {\n                this.logger.info(\"Adding logger to list to be removed\", reduxLoggerName);\n                removeLoggers.push(reduxLoggerName);\n              }\n          });\n\n          this.logger.info('About to remove loggers', removeLoggers)\n          if(removeLoggers.length > 0) {\n              //  await this.removeLogger(removeLoggers);\n\n          }\n          */\n\n\n        }\n    }\n\n    /*\n        This function adds a new logger to the redux store\n    */\n    addLoggers = async (newLoggers) => {\n        const { loggers, enableAll, disableAll, loaded } = this.props;\n\n        // copy loggers (don't directly modify state)\n        let loggersCopy = deepCopy(loggers);\n\n        newLoggers.forEach((newLogger, index) => {\n            // add newLogger to loggers copy\n            loggersCopy[newLogger.name] = newLogger;\n        })\n\n\n        // create logger config\n        var loggerConfig = {};\n        loggerConfig['loggers'] = loggersCopy;\n        loggerConfig['enableAll'] = enableAll;\n        loggerConfig['disableAll'] = disableAll;\n\n        await this.props.postLoggers(loggerConfig, loaded);\n    }\n\n    /*\n        This function removes logger from the redux store\n    */\n    removeLogger = async (loggerNames) => {\n        const { loggers, enableAll, disableAll } = this.props;\n\n        this.logger.debug(\"removeLogger: loggerNames\", loggerNames);\n        this.logger.debug(\"removeLogger: loggers\", loggers)\n\n        // copy loggers (don't directly modify state)\n        let loggersCopy = deepCopy(loggers);\n\n        loggerNames.forEach((name, index) => {\n          // delete logger\n          delete loggersCopy[name];\n        })\n\n\n        this.logger.debug(\"removeLogger: loggersCopy after removal\", loggersCopy)\n\n        // create logger config\n        var loggerConfig = {};\n        loggerConfig['loggers'] = loggersCopy;\n        loggerConfig['enableAll'] = enableAll;\n        loggerConfig['disableAll'] = disableAll;\n\n        await this.props.postLoggers(loggerConfig);\n    }\n\n    /*\n    printLoggers = () => {\n      let loggers = Object.values(log.getLoggers());\n      console.log('printLoggers')\n\n      loggers.forEach((logger, index) => {\n\n        console.log(logger.name)\n        console.log(logger.getLevel())\n        console.log(logger)\n      })\n\n\n    }\n    */\n\n    /*\n    printReduxLoggers = () => {\n      let loggers = Object.values(this.props.loggers);\n      console.log('printReduxLoggers')\n\n      loggers.forEach((logger, index) => {\n\n        console.log(logger.name)\n        console.log(logger.level)\n        console.log(logger.enabled)\n      })\n\n\n    }\n    */\n\n    render(){\n\n      this.updateLoggers();\n\n      //this.printLoggers()\n      //this.printReduxLoggers()\n\n\n      return(\n        <>\n        </>\n      );\n    }\n}\n\nconst mapStateToProps = function(state) {\n  return {\n    loggers: state.localReducer.loggers,\n    enableAll: state.localReducer.enableAll,\n    disableAll: state.localReducer.disableAll,\n    loaded: state.localReducer.loaded,\n  };\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    postLoggers: (loggerConfig) => dispatch(postLoggers(loggerConfig))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoggerContainer);\n","import styled from 'styled-components'\nimport { hexToRGBA } from '../../methods/utils/color_utils';\n\nexport const SideBarOpenCloseButton = styled.button`\n    position: absolute;\n    top: 0rem;\n    z-index: 101;\n    height: 3.2rem;\n    width: 3.2rem;\n    margin-top: 0.4rem;\n    margin-left: 1rem;\n\n    border-radius: .5rem;\n\n    box-shadow: 0 0 4px 1.5px rgba(0, 0, 0, 0.1);\n    background-color: ${props => hexToRGBA(props.theme.bg.primary, 0.97)};\n    \n    transition: background-color 0.25s ease, box-shadow 0.1s ease;\n\n    &:focus{\n        outline: 0 !important;\n    }\n\n    &:active{\n        box-shadow: none;\n    }\n\n    &:hover{\n    }\n\n    // @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n    //     width: 3.5rem;\n    //     height: 3.5rem;\n    //     margin-left: .5rem;\n\n    // }\n\n`\n\n// export const HamburgerInner = styled.span`\n//     &:before\n// `\n\nexport const SidebarWrapper = styled.div`\n    position: absolute;\n    top: 4rem;\n    bottom: 0rem;\n\n    display: flex;\n    align-items: stretch;\n    flex-flow: row nowrap;\n    flex-direction: row;\n    flex: 1;\n    // width: auto;\n    // flex-grow: 0;\n\n    background-color: ${props => hexToRGBA(props.theme.bg.secondary, 0.97)};\n    overflow: hidden !important;\n`\n\nexport const SidebarContent = styled.div`\n    display: flex;\n    align-self: stretch;\n    flex: 1;\n\n    // background: ${props => props.theme.bg.primary};\n    z-index: 1;\n    backdrop-filter: blur(3px);\n\n    border-radius: 0 0 8px 0;\n    // border-right: 8px solid ${props => props.theme.bg.quinary};\n\n    background-color: ${props => hexToRGBA(props.theme.bg.primary, 0.97)};\n    overflow-x: hidden;\n    overflow-y: auto;\n\n`\n\nexport const ResizeBar = styled.div`\n\tbackground-color: ${props => hexToRGBA(props.theme.bg.secondary, 0.97)};\n    cursor: ew-resize;\n    width: 8px;\n    min-width: 8px;\n    display: flex;\n    z-index: 10;\n    align-items: center ;\n    align-content: center ;\n    justify-content: center;\n\n`\n\nexport const ResizeHandle = styled.div`\n    cursor: ew-resize;\n    width: 4px;\n    height: 30px;\n    background: ${props => props.theme.schema[props.content].solid};\n    border-radius: 8px;\n    text-align: center;\n    z-index: 10;\n    overflow: hidden;\n    display: flex;\n    align-items: center ;\n\n`\n","import styled from 'styled-components';\nimport { hexToRGBA, LightenDarkenColor } from '../../../methods/utils/color_utils';\n\nexport const SideBarButtonWrapper = styled.div`\n\n    // background-color: ${props => props.mode == props.currentMode && props.theme.bg.primary};\n    // box-shadow: ${props => props.mode == props.currentMode && '0px 5px 15px 8px rgba(0,0,0,0.05)'};\n\n    width: 5rem;\n    height: 5rem;\n    border-radius: 2.5rem;\n\n    margin-top: 0.6rem;\n`\n\nexport const SideBarButtonIcon = styled.i`\n    font-size: 1.8rem;\n    padding: 1rem;\n    cursor: pointer;\n    display: flex;\n    flex-direction:column;\n    align-items: center;\n\n    /* THIS METHOD OF USING GRADIENTS DOES NOT WORK ON SAFARI */\n    // You cant stack a color on a gradient, but you CAN stack a gradient on a gradient\n    /* background: ${props => props.mode == props.currentMode ?\n        props.theme.schema[props.mode].solid\n        :\n        props.theme.bg.quaternary};\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent; */\n\n\n    color: ${props => props.mode == props.currentMode ?\n        props.theme.schema[props.mode].solid\n        :\n        props.theme.bg.quaternary};;\n\n    transition: color 0.15s ease;\n\n    &:hover{\n        /* background: ${props => `linear-gradient(rgba(255,255,255,0.2),rgba(255,255,255,0.2)), ` + props.theme.schema[props.mode].gradient}; */\n        /* -webkit-background-clip: text; */\n        /* -webkit-text-fill-color: transparent; */\n        color:${props => props.theme.schema[props.mode].solid};\n    }\n\n    @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n        font-size: 2rem;\n        padding: 1rem;\n\n\n    }\n`\nexport const SideBarButtonText = styled.h1`\n  padding-top:.3rem;\n  font-family: ${props => props.theme.font.primary};\n  font-weight: 500;\n  font-size: 0.8rem;\n  color: ${props => props.theme.schema.locations};\n  text-align: center;\n\n  @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n      font-size: .7rem;\n\n`\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport * as style from './side_bar_button.style'\n\nimport * as locationActions from '../../../redux/actions/locations_actions'\nimport * as tasksActions from '../../../redux/actions/tasks_actions'\nimport * as processesActions from '../../../redux/actions/processes_actions'\n\nimport { pageDataChanged } from '../../../redux/actions/sidebar_actions'\n\n\nimport ConfirmDeleteModal from '../../basic/modals/confirm_delete_modal/confirm_delete_modal'\n\n\nconst SideBarButton = (props) => {\n\n    const {\n        mode,\n        currentMode\n    } = props\n    const history = useHistory()\n\n    const editingStation = useSelector(state => state.stationsReducer.editingStation)\n    const editingPosition = useSelector(state => state.positionsReducer.editingPosition)\n    const pageInfoChanged = useSelector(state => state.sidebarReducer.pageDataChanged)\n    const taskEditing = useSelector(state => state.tasksReducer.editingTask)\n    const processEditing = useSelector(state => state.processesReducer.editingProcess)\n\n    const dispatch = useDispatch()\n    const dispatchLocationEditing = (props) => dispatch(locationActions.editing(props))\n    const dispatchTaskEditing = (props) => dispatch(tasksActions.editingTask(props))\n    const dispatchProcessEditing = (props) => dispatch(processesActions.editingProcess(props))\n    const dispatchSetPageDataChanged = (bool) => dispatch(pageDataChanged(bool))\n\n\n    const [confirmDeleteModal, setConfirmDeleteModal] = useState(false);\n\n    const locationEditing = !!editingStation ? editingStation : editingPosition\n\n    useEffect(() => {\n        if (taskEditing !== true && processEditing !== true) {\n            dispatchSetPageDataChanged(false)\n        }\n    }, [processEditing, taskEditing, editingStation, editingPosition])\n\n    const handleConfirmationModal = () => {\n        return (\n            <ConfirmDeleteModal\n                isOpen={!!confirmDeleteModal}\n                title={\"Are you sure you want to leave this page? Any changes will not be saved\"}\n                button_1_text={\"Yes\"}\n                button_2_text={\"No\"}\n                handleClose={() => setConfirmDeleteModal(null)}\n                handleOnClick1={() => {\n                    if (props.mode === 'lots') {\n                        const currentPath = history.location.pathname\n                        history.push('/lots/summary')\n\n                        setConfirmDeleteModal(null)\n                        dispatchLocationEditing(false)\n                        dispatchTaskEditing(false)\n                        dispatchProcessEditing(false)\n                        dispatchSetPageDataChanged(false)\n                    }\n                    else {\n                        props.setShowSideBarPage(props.mode)\n                        setConfirmDeleteModal(null)\n                        dispatchLocationEditing(false)\n                        dispatchTaskEditing(false)\n                        dispatchProcessEditing(false)\n                        dispatchSetPageDataChanged(false)\n                    }\n\n                }}\n                handleOnClick2={() => {\n                    setConfirmDeleteModal(null)\n                }}\n            />\n        )\n    }\n\n\n\n    if (mode === 'locations') {\n\n        return (\n            <>\n                {handleConfirmationModal()}\n                <style.SideBarButtonWrapper\n                    currentMode={currentMode}\n                    mode={mode}\n                >\n                    <style.SideBarButtonIcon\n                        className='fas fa-map-marker-alt'\n                        onClick={() => {\n                            if (currentMode === 'lots') {\n                                props.setShowSideBarPage(mode)\n                                dispatchSetPageDataChanged(false)\n                            }\n\n                            else if (pageInfoChanged) {\n                                setConfirmDeleteModal(true)\n                            }\n                            else { props.setShowSideBarPage(mode) }\n                        }}\n                        currentMode={currentMode}\n                        mode={mode}\n                    >\n                        <style.SideBarButtonText>Locations</style.SideBarButtonText>\n                    </style.SideBarButtonIcon>\n                </style.SideBarButtonWrapper>\n            </>\n        )\n    }\n\n    else if (mode === 'devices') {\n        return (\n            <>\n                {handleConfirmationModal()}\n                <style.SideBarButtonWrapper\n                    currentMode={currentMode}\n                    mode={mode}\n                >\n                    <style.SideBarButtonIcon\n                        className={'icon-rmLogo'}\n                        onClick={() => {\n                            if (currentMode === 'lots') {\n                                props.setShowSideBarPage(mode)\n                                dispatchSetPageDataChanged(false)\n                            }\n\n                            else if (pageInfoChanged) {\n                                setConfirmDeleteModal(true)\n                            }\n                            else { props.setShowSideBarPage(mode) }\n                        }}\n                        currentMode={currentMode}\n                        mode={mode}\n                    >\n                        <style.SideBarButtonText>Devices</style.SideBarButtonText>\n                    </style.SideBarButtonIcon>\n                </style.SideBarButtonWrapper>\n            </>\n        )\n    }\n\n    else if (mode === 'lots') {\n        return (\n            <>\n                {handleConfirmationModal()}\n                <style.SideBarButtonWrapper\n                    currentMode={currentMode}\n                    mode={mode}\n                >\n                    <style.SideBarButtonIcon\n                        className={'fas fa-layer-group'}\n                        onClick={() => {\n                            if (currentMode === 'lots') {\n                                props.setShowSideBarPage(mode)\n                                dispatchSetPageDataChanged(false)\n                            }\n\n                            else if (pageInfoChanged) {\n                                setConfirmDeleteModal(true)\n                            }\n                            else {\n                                const currentPath = history.location.pathname\n                                history.push('/lots/summary')\n                            }\n                        }}\n                        currentMode={currentMode}\n                        mode={mode}\n                    >\n                        <style.SideBarButtonText>Lots</style.SideBarButtonText>\n                    </style.SideBarButtonIcon>\n                </style.SideBarButtonWrapper>\n            </>\n        )\n    }\n\n    else if (mode === 'statistics') {\n        return (\n            <>\n                {handleConfirmationModal()}\n                <style.SideBarButtonWrapper\n                    currentMode={currentMode}\n                    mode={mode}\n                >\n                    <style.SideBarButtonIcon\n                        className={'icon-statistics'}\n                        onClick={() => {\n                            if (currentMode === 'statisticcs') {\n                                props.setShowSideBarPage(mode)\n                                dispatchSetPageDataChanged(false)\n                            }\n\n                            else if (pageInfoChanged) {\n                                setConfirmDeleteModal(true)\n                            }\n                            else {\n                                const currentPath = history.location.pathname\n                                history.push('/statistics/summary')\n                            }\n                        }}\n                        currentMode={currentMode}\n                        mode={mode}\n                    >\n                        <style.SideBarButtonText>Statistics</style.SideBarButtonText>\n                    </style.SideBarButtonIcon>\n                </style.SideBarButtonWrapper>\n            </>\n        )\n    }\n\n\n    else if (mode === 'processes') {\n        return (\n            <>\n                {handleConfirmationModal()}\n                <style.SideBarButtonWrapper\n                    currentMode={currentMode}\n                    mode={mode}\n                >\n                    <style.SideBarButtonIcon\n                        className={'fas fa-route'}\n                        onClick={() => {\n                            if (currentMode === 'lots') {\n                                props.setShowSideBarPage(mode)\n                                dispatchSetPageDataChanged(false)\n                            }\n\n                            else if (pageInfoChanged) {\n                                setConfirmDeleteModal(true)\n                            }\n                            else { props.setShowSideBarPage(mode) }\n                        }}\n                        currentMode={currentMode}\n                        mode={mode}\n                    >\n                        <style.SideBarButtonText>Processes</style.SideBarButtonText>\n                    </style.SideBarButtonIcon>\n                </style.SideBarButtonWrapper>\n            </>\n        )\n    }\n\n    else if (mode === 'scheduler') {\n        return (\n            <>\n                <style.SideBarButtonWrapper\n                    currentMode={currentMode}\n                    mode={mode}\n                >\n                    <style.SideBarButtonIcon\n                        className={'far fa-calendar-alt'}\n                        onClick={() => {\n                            if (currentMode === 'lots') {\n                                props.setShowSideBarPage(mode)\n                                dispatchSetPageDataChanged(false)\n                            }\n\n                            else if (pageInfoChanged) {\n                                setConfirmDeleteModal(true)\n                            }\n                            else { props.setShowSideBarPage(mode) }\n                        }}\n                        currentMode={currentMode}\n                        mode={mode}\n                    >\n                        <style.SideBarButtonText>Schedules</style.SideBarButtonText>\n                    </style.SideBarButtonIcon>\n                </style.SideBarButtonWrapper>\n            </>\n        )\n    }\n\n    else if (mode === 'tasks') {\n        return (\n            <>\n                {handleConfirmationModal()}\n                <style.SideBarButtonWrapper\n                    currentMode={currentMode}\n                    mode={mode}\n                >\n                    <style.SideBarButtonIcon\n                        className={'fa fa-tasks'}\n                        onClick={() => {\n                            if (currentMode === 'lots') {\n                                props.setShowSideBarPage(mode)\n                                dispatchSetPageDataChanged(false)\n                            }\n\n                            else if (pageInfoChanged) {\n                                setConfirmDeleteModal(true)\n                            }\n                            else { props.setShowSideBarPage(mode) }\n                        }}\n                        currentMode={currentMode}\n                        mode={mode}\n                    >\n                        <style.SideBarButtonText>Routes</style.SideBarButtonText>\n                    </style.SideBarButtonIcon>\n                </style.SideBarButtonWrapper>\n            </>\n        )\n    }\n\n    else if (mode === 'settings') {\n        return (\n            <>\n                {handleConfirmationModal()}\n                <div style={{ justifyContent: 'flex-end', flexGrow: '1' }} />\n                <style.SideBarButtonWrapper\n                    currentMode={currentMode}\n                    mode={mode}\n                >\n                    <style.SideBarButtonIcon\n\n                        className={'fas fa-cog'}\n                        onClick={() => {\n                            if (currentMode === 'lots') {\n                                props.setShowSideBarPage(mode)\n                                dispatchSetPageDataChanged(false)\n                            }\n\n                            else if (pageInfoChanged) {\n                                setConfirmDeleteModal(true)\n                            }\n                            else { props.setShowSideBarPage(mode) }\n                        }}\n                        currentMode={currentMode}\n                        mode={mode}\n\n                    >\n                        <style.SideBarButtonText>Settings</style.SideBarButtonText>\n                    </style.SideBarButtonIcon>\n                </style.SideBarButtonWrapper>\n            </>\n        )\n    }\n\n    else {\n        return (\n            <style.SideBarButtonIcon\n                className={\"icon-\" + mode}\n                onClick={() => {\n                    props.setShowSideBarPage(mode)\n                }}\n                currentMode={currentMode}\n                mode={mode}\n            />\n        )\n    }\n\n}\n\nexport default SideBarButton\n","import { useDispatch, useSelector } from 'react-redux'\n\nimport {\n    SELECT_LOCATION,\n    SET_SELECTED_LOCATION,\n    SET_SELECTED_LOCATION_COPY,\n    SET_SELECTED_LOCATION_CHILDREN_COPY,\n    DESELECT_LOCATION,\n    EDITING_LOCATION,\n} from '../types/locations_types'\n\nimport * as stationActions from './stations_actions.js'\nimport { deleteStation } from './stations_actions.js'\nimport * as positionActions from './positions_actions.js'\nimport { deletePosition } from './positions_actions.js'\nimport { setSelectedDevice, putDevices } from './devices_actions'\nimport { deleteDashboard } from './dashboards_actions'\nimport { deleteTask } from './tasks_actions'\nimport { putProcesses } from './processes_actions'\n\nimport { deepCopy } from '../../methods/utils/utils';\nimport uuid from 'uuid';\n\n\n// // get\n// // ******************************\n// export const getLocations = () => {\n//     return async dispatch => {\n//         const stations = await dispatch(stationActions.getStations())\n//         const positions = await dispatch(positionActions.getPositions())\n//         return ({ stations: stations, positions: positions })\n//     }\n// }\n// // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// // post\n// // ******************************\n// export const postLocation = (location) => {\n//     return async dispatch => {\n//         if (location.schema == 'station') {\n//             return dispatch(stationActions.postStation(location))\n//         } else if (location.schema == 'position') {\n//             return dispatch(positionActions.postPosition(location))\n//         }\n//     }\n// };\n// // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// // put\n// // ******************************\n// export const putLocation = (location, ID) => {\n//     return async dispatch => {\n//         if (location.schema == 'station') {\n//             return dispatch(stationActions.putStation(location, ID))\n//         } else if (location.schema == 'position') {\n//             return dispatch(positionActions.putPosition(location, ID))\n//         }\n//     }\n// }\n// // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// // delete\n// // ******************************\n// export const deleteLocation = (id) => {\n//     return async dispatch => {\n//         dispatch(stationActions.deleteStation(id))\n//         // TODO: Why is this here? Is this a catch because it may either be a position or location?\n//         // dispatch(positionActions.deletePosition(id))\n//     }\n// }\n// // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// export const addLocation = (location) => {\n//     return async dispatch => {\n//         if (location.schema == 'station') {\n//             dispatch(stationActions.addStation(location))\n//         } else if (location.schema == 'position') {\n//             dispatch(positionActions.addPosition(location))\n//         }\n//     }\n// }\n\n// export const updateLocation = (location) => {\n//     return async dispatch => {\n//         if (location.schema == 'station') {\n//             dispatch(stationActions.updateStation(location))\n//         } else if (location.schema == 'position') {\n//             dispatch(positionActions.updatePosition(location))\n//         }\n\n//     }\n// }\n\n// export const updateChildren = (location) => {\n//     return async dispatch => {\n\n\n\n//         dispatch(stationActions.updateStation(location))\n//         dispatch(positionActions.updatePosition(location))\n\n//     }\n// }\n\n\n// export const updateLocations = (locations) => {\n//     return async dispatch => {\n//         Object.values(locations).forEach(location => {\n//             if (location.schema == 'station') {\n//                 dispatch(stationActions.updateStation(location))\n//             } else if (location.schema == 'position') {\n//                 dispatch(positionActions.updatePosition(location))\n//             }\n//         })\n//     }\n// }\n\n// export const removeLocation = (location) => {\n\n//     const {\n//         _id,\n//         children\n//     } = location\n\n//     if (location.schema === 'station') {\n\n//         return async dispatch => {\n//             dispatch(stationActions.removeStation(_id))\n\n//             children.forEach((child) => {\n//                 dispatch(positionActions.removePosition(child))\n//             })\n//         }\n//     }\n\n//     else if (location.schema === 'position') {\n//         return async dispatch => {\n//             dispatch(positionActions.removePosition(_id))\n//         }\n//     }\n// }\n\n// export const setLocationAttributes = (id, attr) => {\n//     return async dispatch => {\n//         dispatch(stationActions.setStationAttributes(id, attr))\n//         dispatch(positionActions.setPositionAttributes(id, attr))\n//     }\n// }\n\n// export const selectLocation = (id) => {\n//     return { type: SELECT_LOCATION, payload: { id } }\n// }\n\n// export const setSelectedLocation = (location) => {\n//     return { type: SET_SELECTED_LOCATION, payload: { location } }\n// }\n\n// export const deselectLocation = () => {\n//     return { type: DESELECT_LOCATION }\n// }\n\n// export const setSelectedLocationCopy = (location) => {\n//     return { type: SET_SELECTED_LOCATION_COPY, payload: location }\n// }\n\n// export const setSelectedLocationChildrenCopy = (locationChildren) => {\n//     return { type: SET_SELECTED_LOCATION_CHILDREN_COPY, payload: locationChildren }\n// }\n\n\nexport const editing = (bool) => {\n    return { type: EDITING_LOCATION, payload: bool }\n}\n\n\n// ======================================== //\n//                                          //\n//  Back, Delete, Save Location Functions   //\n//                                          //\n// ======================================== //\n\n\n/**\n * This handles when the back button is pressed on either devices or locations\n * If the location is new, it is deleted;\n * otherwise, it is reverted to the state it was when editing begun.\n * @param {*} props\n */\n\nexport const sideBarBack = (props) => {\n    \n}\n\n\n\n\n\n/**\n* Called when the delete button is pressed. Deletes the location, its children, its dashboards,\n* and any tasks associated with the location\n*/\nexport const deleteLocationProcess = (props) => {\n\n}\n","export const SELECT_LOCATION = 'SELECT_LOCATION'\nexport const DESELECT_LOCATION = 'DESELECT_LOCATION'\nexport const SET_SELECTED_LOCATION = 'SET_SELECTED_LOCATION'\nexport const SET_SELECTED_LOCATION_COPY = 'SET_SELECTED_LOCATION_COPY'\nexport const SET_SELECTED_LOCATION_CHILDREN_COPY = 'SET_SELECTED_LOCATION_CHILDREN_COPY'\nexport const EDITING_LOCATION = 'EDITING_LOCATION'\n","import styled from 'styled-components'\n\nexport const SideBarContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 6rem;\n    margin-top: 0rem;\n\n    transition: width 0.25s ease-in-out;\n\n    @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n        width: 4.5rem;\n\n    }\n`","import React, { useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory, useLocation } from 'react-router-dom'\n\nimport SideBarButton from '../side_bar_buttons/side_bar_button';\n\nimport * as styled from './side_bar_switcher.style'\nimport { setMode } from '../../../redux/actions/sidebar_actions'\n\nimport { setSelectedStation } from '../../../redux/actions/stations_actions'\nimport { setSelectedPosition } from '../../../redux/actions/positions_actions'\nimport { deselectTask } from '../../../redux/actions/tasks_actions'\nimport { editingTask } from '../../../redux/actions/tasks_actions'\nimport { editingProcess } from '../../../redux/actions/processes_actions'\n\n\n\nconst SideBarSwitcher = (props) => {\n\n    const dispatch = useDispatch()\n    const dispatchSetSelectedStation = (station) => dispatch(setSelectedStation(station))\n    const dispatchSetSelectedPosition = (position) => dispatch(setSelectedPosition(position))\n\n    const dispatchTaskEditing = (props) => dispatch(editingTask(props))\n    const dispatchProcessEditing = (props) => dispatch(editingProcess(props))\n\n    const MiRMapEnabled = useSelector(state => state.localReducer.localSettings.MiRMapEnabled)\n    const mode = useSelector(state => state.sidebarReducer.mode)\n    const serverSettings = useSelector(state => state.settingsReducer.settings)\n    const deviceEnabled = serverSettings.deviceEnabled\n    const wrapperRef = useRef(null)\n\n    const history = useHistory()\n    const url = useLocation().pathname.split('/')[1]\n\n    return (\n        <styled.SideBarContainer ref={wrapperRef}>\n\n            <SideBarButton\n                mode={'locations'}\n                setShowSideBarPage={(page) => {\n                    dispatch(setMode(page));\n                    history.push(`/${page}`)\n                    dispatchTaskEditing(false)\n                    dispatchProcessEditing(false)\n                }}\n                currentMode={url}\n            />\n\n          {/*  <SideBarButton\n                mode={'tasks'}\n                setShowSideBarPage={(page) => {\n                    dispatch(setMode(page));\n                    history.push(`/${page}`)\n                    dispatchSetSelectedStation(null)\n                    dispatchSetSelectedPosition(null)\n                    dispatch(deselectTask())\n                    dispatchProcessEditing(false)\n                    dispatchTaskEditing(false)\n                }}\n                currentMode={url}\n            /> */}\n\n            <SideBarButton\n                mode={'processes'}\n                setShowSideBarPage={(page) => {\n                    dispatch(setMode(page));\n                    history.push(`/${page}`)\n                    dispatchSetSelectedStation(null)\n                    dispatchSetSelectedPosition(null)\n                    dispatch(deselectTask())\n                    dispatchTaskEditing(false)\n                    dispatchProcessEditing(false)\n                }}\n                currentMode={url}\n            />\n\n            {/* Commented out for now, probably going to delete */}\n            {/* <SideBarButton\n                mode={'objects'}\n                setShowSideBarPage={(page) => {\n                    dispatch(setMode(page));\n                    history.push(`/${page}`)\n                    dispatchSetSelectedStation(null)\n                    dispatchSetSelectedPosition(null)\n                    dispatch(deselectTask())\n                }}\n                currentMode={url}\n            /> */}\n            {/* {MiRMapEnabled &&\n              <SideBarButton\n                  mode={'scheduler'}\n                  setShowSideBarPage={(page) => {\n                      dispatch(setMode(page));\n                      history.push(`/${page}`)\n                    dispatchSetSelectedStation(null)\n                    dispatchSetSelectedPosition(null)\n                      dispatch(deselectTask())\n                  }}\n                  currentMode={url}\n              />\n            } */}\n\n            <SideBarButton\n                mode={'lots'}\n                setShowSideBarPage={(page) => {\n                    dispatch(setMode(page));\n                    dispatchTaskEditing(false)\n                }}\n                currentMode={url}\n            />\n\n            <SideBarButton\n                mode={'statistics'}\n                setShowSideBarPage={(page) => {\n                    dispatch(setMode(page));\n                    dispatchTaskEditing(false)\n                }}\n                currentMode={url}\n            />\n\n            {!!deviceEnabled &&\n                <SideBarButton\n                    mode={'devices'}\n                    setShowSideBarPage={(page) => {\n                        dispatch(setMode(page));\n                        history.push(`/${page}`)\n                        dispatchTaskEditing(false)\n                    }}\n                    currentMode={url}\n                />\n            }\n\n            <SideBarButton\n                mode={'settings'}\n                setShowSideBarPage={(page) => {\n                    dispatch(setMode(page));\n                    history.push(`/${page}`)\n                    dispatchSetSelectedStation(null)\n                    dispatchSetSelectedPosition(null)\n                    dispatch(deselectTask())\n                    dispatchTaskEditing(false)\n                }}\n                currentMode={url}\n            />\n\n\n        </styled.SideBarContainer>\n    )\n\n}\n\nexport default SideBarSwitcher\n","import styled from 'styled-components'\nimport { RGB_Linear_Shade, hexToRGBA } from '../../../../methods/utils/color_utils'\n\n\n// ========== Content ========== //\nexport const ContentContainer = styled.div`\n    flex-grow: 1;\n    padding: 1rem;\n    padding-top: 1.5rem;\n\n    display: flex;\n    flex-direction: column;\n\n`\n\nexport const ContentHeader = styled.div`\n    display: flex;\n    flex-direction: row;\n`\n\nexport const ContentTitle = styled.h1`\n    font-family: ${props => props.theme.font.primary};\n    font-size: 2rem;\n    font-weight: 500;\n    color: ${props => props.theme.schema.locations};\n    flex-grow: 1;\n`\n\n// ========== Location List ========== //\n\nexport const LocationList = styled.ul`\n    flex-grow: 1;\n    padding: 0;\n`\n\nexport const LocationItem = styled.div`\n    width: auto;\n    height: 2rem;\n    box-sizing: content-box;\n\n    text-align: center;\n\n    background: transparent;\n    border-radius: 0.5rem;\n    margin-bottom: 0.4rem;\n\n    border: 0.1rem solid white;\n    box-sizing: border-box;\n\n    cursor: pointer;\n    user-select: none;\n\n    &:hover {\n        background: ${props => props.theme.bg.octonary};\n    }\n`\n\nexport const LocationText = styled.span`\n    height: 2rem;\n    line-height: 2rem;\n    box-sizing: content-box;\n\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz4};\n    font-weight: 500;\n    color: ${props => props.theme.bg.octonary};\n\n    ${props => props.selected && `\n        background: ${props.theme.schema.locations};\n        -webkit-text-fill-color: transparent;\n        -webkit-background-clip: text;\n        display:block;\n    `}\n`\n\n// ========== Type Buttons & Containers ========== //\n\n\n\nexport const CustomTypesContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n\n    margin: 0.5rem 0 0.5rem 0;\n    justify-content: center;\n`\n\nexport const Label = styled.h3`\n    font-family: ${props => props.theme.font.primary};\n    font-size: 1.5rem;\n    font-weight: 500;\n    color: ${props => props.theme.schema[props.schema].solid};\n    user-select: none;\n    text-align: center;\n`\n","import styled from 'styled-components'\nimport { RGB_Linear_Shade, hexToRGBA } from '../../../../methods/utils/color_utils'\nimport * as commonCss from \"../../../../common_css/common_css\";\n\n\n// ========== Content ========== //\nexport const Container = styled.div`\n    flex-grow: 1;\n    padding: 1rem;\n    padding-top: 1.5rem;\n    display: flex;\n    flex-direction: column;\n    overflow-x: hidden;\n    margin-right: .5rem;\n\n\n`\n\nexport const Header = styled.div`\n    display: flex;\n    flex-direction: row;\n\n`\n\nexport const Title = styled.h1`\n    font-family: ${props => props.theme.font.primary};\n    font-size: 2rem;\n    font-weight: 500;\n    color: ${props => props.theme.schema[props.schema].solid};\n    flex-grow: 1;\n    user-select: none;\n`\n\n// ========== List ========== //\n\nexport const List = styled.ul`\n    flex-grow: 1;\n    padding: 0;\n`\n\nexport const ListItem = styled.div`\n    display: flex;\n    align-items: center;\n    width: auto;\n    height: 3rem;\n    text-overflow: ellipsis;\n    justify-content: space-between;\n    background: transparent;\n    padding: 0rem 1rem;\n\n    border-radius: 0.5rem;\n    border: 0.1rem solid;\n    border-color: ${props => props.error ? 'red' : 'white'};\n\n    box-shadow: ${props => props.theme.cardShadow};\n    // cursor: pointer;\n\n  ${props => props.isNew &&  commonCss.newGlow};\n\n    margin-bottom: 1rem;\n\n\n`\n\nexport const ListItemRect = styled.div`\n    height: 100%;\n    width: 100%;\n\n    border-radius: 0.5rem;\n    text-align: center;\n    padding-right:0.5rem;\n    cursor: pointer;\n    user-select: none;\n\n    border: 0.1rem solid white;\n    box-sizing: border-box;\n\n    &:hover {\n        background: ${props => props.theme.bg.octonary};\n    }\n\n`\nexport const LocationTypeGraphic = styled.svg`\n    height: 2rem;\n`\nexport const ListItemTitle = styled.h1`\n\n    font-family: ${props => props.theme.font.primary};\n    /* font-size: ${props => props.theme.fontSize.sz3}; */\n    font-size: 1rem;\n    font-weight: 500;\n    color: ${props => props.theme.bg.octonary};\n    user-select: none;\n\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    margin-right:0.5rem;\n    margin-bottom: 0rem;\n    width: 75%;\n\n    flex-grow: 1;\n    margin-left: 1rem;\n`\n\nexport const ListItemIcon = styled.i`\n\n    font-size: 1.3rem;\n    color: lightgreen;\n\n    &:hover {\n        cursor: pointer;\n        color:green;\n    }\n`\n\nexport const ListItemIconContainer = styled.div`\n    position: relative;\n    display: flex;\n\n    flex-grow: 0;\n`\n\nexport const ErrorContainer = styled.div`\n\tposition: relative;\n`\n","import styled from 'styled-components'\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\n\nexport const Header = styled.div`\n    display: flex;\n    flex-direction: row;\n    width: 100%;\n    justify-content: space-between;\n    margin-bottom: 1rem;\n\n    font-family: ${props => props.theme.font.primary};\n    /* font-size: ${props => props.theme.fontSize.sz3}; */\n    font-size: 1.2rem;\n    font-weight: 500;\n    color: ${props => props.theme.bg.octonary};\n\n    align-items: center;\n`\n\nexport const Title = styled.h1`\n    font-family: ${props => props.theme.font.primary};\n    font-size: 2rem;\n    font-weight: 500;\n    color: ${props => props.theme.schema[props.schema].solid};\n    user-select: none;\n`\n\nexport const EditTitle = styled.h1`\n    font-family: ${props => props.theme.font.primary};\n    font-size: 1.4rem;\n    font-weight: 500;\n    color: ${props => props.theme.schema[props.schema].solid};\n    user-select: none;\n\n    text-align: left;\n    flex-grow: 1;\n\n    padding-right: 4rem;\n    padding-left: 1rem;\n`\n\nexport const ClearIcon = styled(DeleteForeverIcon)`\n\n`\n","import styled from 'styled-components'\nimport {globStyle} from '../../../global_style'\n\nexport const PlusSymbol = styled.i`\n    display: flex;\n    flex-direction: row;\n    flex-basis: 5rem;\n    flex-shrink: 0;\n\n    color: ${props => props.disabled ? props.theme.bg.senary : props.theme.bg.octonary};\n    height: 2rem;\n    width: 2rem;\n    margin: none;\n    padding: none;\n    font-size: 2rem;\n    font-weight: 400;\n    text-align: center;\n    vertical-align: middle;\n    line-height: 2rem;\n\n    transform: translate(-0.52rem, -0.16rem);\n`;\n\nexport const PlusButton = styled.button`\n    width: 2rem;\n    height: 2rem;\n    margin: 0.25rem;\n    margin-top: 0.2rem;\n    background-color: transparent;\n    border: none;\n    text-align: center;\n    box-sizing: border-box;\n\n    :focus {\n      outline: 0;\n    }\n\n`;\n","import React from 'react';\nimport * as style from './plus_button.style'\n\nconst PlusButton = (props) => (\n    <style.PlusButton onClick={props.onClick}>\n        <style.PlusSymbol\n            style={{...props.style}}\n            className={\"far fa-plus-square\"}\n            disabled={props.disabled}\n            schema={props.schema}\n        >\n        </style.PlusSymbol>\n    </style.PlusButton>\n);\n\nexport default PlusButton;\n","import React from 'react'\n\n// Import styles\nimport * as styled from './contnet_header.style'\nimport theme from '../../../../theme'\n\n// Import Utils\nimport { upperCaseFirstLetterInString } from '../../../../methods/utils/utils'\n\n// Import Components\nimport PlusButton from '../../../basic/plus_button/plus_button'\nimport Button from '../../../basic/button/button'\nimport BackButton from '../../../basic/back_button/back_button'\nimport BounceButton from '../../../basic/bounce_button/bounce_button'\n\nconst ContentHeader = (props) => {\n\n    const {\n        content,\n        onClickAdd,\n        onClickSave,\n        onClickBack,\n        onClickClear,\n        mode,\n        disabled,\n        saveEnabled,\n        backEnabled,\n    } = props\n\n    // Handles the title\n    const handleTitle = () => {\n\n        if (content === 'scheduler') {\n            return 'Schedules'\n        }\n\n        else if (content === 'taskQueue') {\n            return 'Task Queue'\n        }\n\n        else if (content === 'tasks') {\n            return 'Routes'\n        }\n\n        else {\n            return upperCaseFirstLetterInString(content)\n        }\n    }\n\n    // If the side bar is show a list of itemts, then have the title and add button\n    if (mode === 'list') {\n        return (\n            <styled.Header>\n                <styled.Title schema={content}>{handleTitle()}</styled.Title>\n\n                {content === 'taskQueue' ?\n                    <BounceButton\n                        color={\"red\"}\n                        onClick={onClickClear}\n                        disabled={disabled}\n                    >\n                        <styled.ClearIcon\n                            fontSize={\"medium\"}\n                        />\n                    </BounceButton>\n                    :\n                    <PlusButton\n                        style={{color: theme.main.schema[content].solid}}\n                        onClick={onClickAdd}\n                    />\n                }\n\n            </styled.Header>\n        )\n    }\n\n    // If the side bar is in create mode then have a back button and a save button\n    else if (mode === 'create') {\n        return (\n            <styled.Header>\n\n                <BackButton schema={content} type = {\"button\"} style={{ display: 'inline-block'}}\n                    onClick={onClickBack}\n                />\n                <styled.EditTitle style = {{marginTop: \".5rem\"}}  schema={content}>{handleTitle()}</styled.EditTitle>\n            </styled.Header>\n\n        )\n    }\n\n    // If the side bar is in add mode then have a back button and a add button\n    else if (mode === 'add') {\n        return (\n            <styled.Header>\n\n                <BackButton schema={content} style={{ display: 'inline-block' }}\n                    onClick={onClickBack}\n                />\n            </styled.Header>\n\n        )\n    }\n\n    // If the side bar is in title mode then have a back button and if save is enabled then add a save button\n    else if (mode === 'title') {\n        return (\n            <styled.Header>\n            {content===\"settings\" || content===\"devices\"?\n              <styled.Title schema={content}>{handleTitle()}</styled.Title>\n              :\n              <styled.EditTitle schema={content}>{handleTitle()}</styled.EditTitle>\n            }\n\n\n                {saveEnabled &&\n\n                    <Button schema={content} style={{ display: 'inline-block', float: 'right' }}\n                        onClick={onClickSave} disabled={disabled}\n                    >\n                        Save\n                    </Button>\n                }\n\n                {backEnabled &&\n                    <BackButton schema={content} style={{ display: 'inline-block' }}\n                        onClick={onClickBack}\n                    />\n                }\n            </styled.Header>\n\n\n        )\n    }\n\n}\n\nContentHeader.defaultProps = {\n    mode: 'list'\n}\n\nexport default ContentHeader\n","import React from 'react'\n\nimport theme from '../theme';\n\nexport const stationColor = theme.main.schema.locations.solid\n\nexport const StationTypes = {\n\n    /**\n     * Heads up, currently there are 2 different svg rectangles being used\n     * One thats width is 200 and height is 320\n     * One thats width is 378 and height 236\n     * \n     * Need to unify this and make all of them standard\n     * Probably use the 200 by 320 since you don't need to add a 'y' offset to the svg\n     * \n     *  */\n\n    warehouse: {\n        svgPath:\n        <svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\"\n                viewBox=\"0 0 400 400\">\n            <path style={{fill:'none',strokeWidth:15,strokeMiterlimit:10}} d=\"M334.6,357.6h-260c-16.5,0-30-13.5-30-30v-260c0-16.5,13.5-30,30-30h260c16.5,0,30,13.5,30,30v260\n                C364.6,344.1,351.1,357.6,334.6,357.6z\"/>\n            <g>\n                <path d=\"M224,127c5.1-2.2,9.2-3.9,9.2-3.9s4.1,1.8,9.1,4.1l24.9,11.1c5,2.2,13.3,2.5,18.5,0.6l24.6-9.2\n                    c5.1-1.9,5.2-5.1,0-7l-96.5-36.2c-5.1-1.9-13.6-1.9-18.7,0l-96.5,36.2c-5.1,1.9-5.1,5.1,0,7l96.5,36.2c5.1,1.9,13.6,1.9,18.7,0\n                    l24.4-9.2c5.1-1.9,5.2-5.2,0.1-7.3l-24.6-10.2c-5.1-2.1-9.2-3.8-9.2-3.8c0,0,4.1-1.8,9.2-3.9L224,127z\"/>\n            </g>\n            <g>\n                <path d=\"M98.5,144c-5.1-1.9-9.4,1-9.4,6.5v109.7c0,5.5,4.2,11.6,9.4,13.5l89.3,33.5c5.1,1.9,9.4-1,9.4-6.5V191\n                    c0-5.5-4.2-11.6-9.4-13.5L98.5,144z M146.8,263c0,4.2-4.2,6.1-9.4,4.2l-10.1-3.8c-5.1-1.9-9.4-7-9.4-11.2s4.2-6.1,9.4-4.2\n                    l10.1,3.8C142.5,253.7,146.8,258.7,146.8,263z\"/>\n            </g>\n            <g>\n                <path d=\"M285.8,153.2c-5.1,1.9-9.4,8-9.4,13.5v16.1c0,5.5-4.2,11.6-9.4,13.5l-10.1,3.8c-5.1,1.9-9.4-1-9.4-6.5\n                    v-16.1c0-5.5-4.2-8.4-9.4-6.5l-17.3,6.5c-5.1,1.9-9.4,8-9.4,13.5v109.7c0,5.5,4.2,8.4,9.4,6.5l89.3-33.5c5.1-1.9,9.4-8,9.4-13.5\n                    V150.5c0-5.5-4.2-8.4-9.4-6.5L285.8,153.2z\"/>\n            </g>\n        </svg>,\n\n        attributes:\n        {\n            schema: 'station',\n            type: 'warehouse',\n            children: [],\n            dashboards: [],\n            new: true,\n        },\n        color: stationColor\n    },\n\n    human: {\n        svgPath:\n        <svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\"\n                viewBox=\"0 0 400 400\">\n            <path style={{fill:'transparent',strokeWidth:15,strokeMiterlimit:10}} d=\"M334.6,357.6h-260c-16.5,0-30-13.5-30-30v-260c0-16.5,13.5-30,30-30h260c16.5,0,30,13.5,30,30v260\n            C364.6,344.1,351.1,357.6,334.6,357.6z\"/>\n            <path d=\"M205.9,200.2c32.7,0,59.3-26.3,59.3-58.7s-26.5-58.7-59.3-58.7s-59.3,26.3-59.3,58.7S173.1,200.2,205.9,200.2z\n                M247.4,214.9h-7.7c-10.3,4.7-21.7,7.3-33.8,7.3c-12,0-23.4-2.7-33.8-7.3h-7.7c-34.4,0-62.3,27.6-62.3,61.7v19.1\n                c0,12.2,10,22,22.2,22h163c12.3,0,22.2-9.9,22.2-22v-19.1C309.6,242.5,281.7,214.9,247.4,214.9z\"/>\n        </svg>,\n        attributes:\n        {\n            schema: 'station',\n            type: 'human',\n            children: [],\n            dashboards: [],\n            new: true,\n        },\n        color: stationColor,\n    },\n\n}","import React, { useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\n// Import Styles\nimport * as styled from './content_list.style'\nimport theme from '../../../../theme'\n\n// Import Components\nimport ContentHeader from '../content_header/content_header'\nimport ErrorTooltip from '../../../basic/form/error_tooltip/error_tooltip'\n\n// Import Utils\nimport { deepCopy } from '../../../../methods/utils/utils'\n\n// Import Constants\nimport { StationTypes } from '../../../../constants/station_constants'\nimport { PositionTypes } from '../../../../constants/position_constants'\nimport {isOnlyHumanTask} from \"../../../../methods/utils/route_utils\";\n\n\nexport default function ContentList(props) {\n\n    const {\n        executeTask,\n        hideHeader,\n        handleCardView,\n        elements,\n    } = props\n\n    let taskQueue = useSelector(state => state.taskQueueReducer.taskQueue)\n\n\n    const renderLocationTypeIcon = (element) => {\n\n        const LocationTypes ={\n            ...StationTypes,\n            ...PositionTypes,\n        }\n\n        switch (element.type) {\n\n            case 'charger_position':\n                return (\n                    <styled.LocationTypeGraphic fill={LocationTypes['shelf_position'].color} stroke={LocationTypes['shelf_position'].color} id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 400 400\">\n                        {LocationTypes['charger_position'].svgPath}\n                    </styled.LocationTypeGraphic>\n                )\n\n            case 'shelf_position':\n                return (\n                    <styled.LocationTypeGraphic fill={LocationTypes['shelf_position'].color} stroke={LocationTypes['shelf_position'].color} id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 400 400\">\n                        {LocationTypes['shelf_position'].svgPath}\n                    </styled.LocationTypeGraphic>\n                )\n\n            case 'warehouse':\n                return (\n                    <styled.LocationTypeGraphic fill={LocationTypes['warehouse'].color} stroke={LocationTypes['warehouse'].color} id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 400 400\">\n                        {LocationTypes['warehouse'].svgPath}\n                    </styled.LocationTypeGraphic>\n                )\n\n            case 'human':\n                return (\n                    <styled.LocationTypeGraphic fill={LocationTypes['human'].color} stroke={LocationTypes['human'].color} id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 400 400\">\n                        {LocationTypes['human'].svgPath}\n                    </styled.LocationTypeGraphic>\n                )\n\n            case 'cart_position':\n                return (\n                    <styled.LocationTypeGraphic fill={LocationTypes['cart_position'].color} stroke={LocationTypes['cart_position'].color} id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 400 400\">\n                        {LocationTypes['cart_position'].svgPath}\n                    </styled.LocationTypeGraphic>\n                )\n        }\n    }\n\n\n    return (\n        <styled.Container>\n\n            {!hideHeader &&\n                <ContentHeader content={props.schema} onClickAdd={props.onPlus} />\n            }\n\n            <styled.List>\n                {elements.map((element, ind) => {\n                    const error = (props.schema === 'processes' && element.broken) ? true : false\n                    let inQueue = false\n                    Object.values(taskQueue).forEach((item) => {\n\n                    if((item.task_id == element._id) && (props.schema === 'tasks')){\n                        if(isOnlyHumanTask(element) && element.handoff === true) {\n                            inQueue = false\n                        }\n                        else {\n                            inQueue = true\n                        }\n                    }\n                    })\n\n                    return (\n                        <>\n                            <styled.ListItem\n                                key={`li-${ind}`}\n                                error={error}\n                                onMouseEnter={() => props.onMouseEnter(element)}\n                                onMouseLeave={() => props.onMouseLeave(element)}\n                            >\n                                <styled.ListItemIconContainer style = {{paddingTop: element.type === \"charger_position\" ? '0.6rem': '0rem'}}>\n\n                                    {props.schema === 'locations' &&\n                                        <>\n                                            {renderLocationTypeIcon(element)}\n                                        </>\n                                    }\n\n\n                                    {props.schema === 'tasks' &&\n\n                                        <styled.ListItemIcon\n                                            style = {{color: inQueue === true ? 'grey' : 'lightGreen' }}\n                                            className='fas fa-play'\n                                            onClick={() => {\n                                                !inQueue && executeTask()\n                                            }}\n                                        />\n                                    }\n\n                                    {props.schema === 'processes' ? error ?\n                                        <div\n                                            onClick={() => props.onClick(element)}\n                                        >\n                                            <ErrorTooltip\n                                                visible={true}\n                                                text={'Process is broken, click to fix'}\n                                                ContainerComponent={styled.ErrorContainer}\n                                            />\n                                        </div>\n                                        :\n                                        <styled.ListItemIcon\n                                            className='fas fa-clone'\n                                            style={{ color: '#ffb62e' }}\n                                            onClick={() => {\n                                                handleCardView(element)\n                                            }}\n                                        />\n                                        :\n                                        <>\n                                        </>\n                                    }\n\n                                </styled.ListItemIconContainer>\n\n\n                                <styled.ListItemTitle schema={props.schema}>{element.name}</styled.ListItemTitle>\n\n\n\n                                <styled.ListItemIconContainer>\n\n                                    <styled.ListItemIcon\n                                        className='fas fa-edit'\n                                        onClick={() => props.onClick(element)}\n                                        style={{ color: theme.main.bg.quaternary }}\n                                    />\n\n\n                                </styled.ListItemIconContainer>\n\n                            </styled.ListItem>\n                        </>\n                    )\n                })}\n            </styled.List>\n        </styled.Container>\n\n    )\n}\n","import styled from 'styled-components'\n\nimport * as stylel from '../locations_content.style'\n\nexport const ContentContainer = styled(stylel.ContentContainer)`\n\n`\n\nexport const Label = styled(stylel.Label)`\n`\n\nexport const DefaultTypesContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    flex-wrap: wrap;\n    border-bottom: 0.15rem solid ${props => props.theme.bg.tertiary};\n    justify-content: center;\n    align-items: center;\n\n    margin-top: 1.5rem;\n    padding-bottom: 1.5rem;\n    margin-bottom: 0.5rem;\n`\n\nexport const LocationTypeContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 8rem;\n\n`\n\nexport const LocationButtonConatiner = styled.div`\n    display: flex;\n    flex-direction: row;\n`\n\nexport const LocationButtonSubtitleContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    width:8rem;\n    margin-right: 5rem;\n`\n\nexport const Subtitle = styled.h1`\n    font-family: ${props => props.theme.font.primary};\n    flex-grow: 1;\n    font-size: 1rem;\n    font-weight: 500;\n    color: black;\n    margin-right: 1rem;\n    justify-content: center;\n`\n","import styled from 'styled-components'\n\nexport const LocationTypeGraphic = styled.svg`\n    height: 4.5rem;\n\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, calc(-50% + 0.3rem));\n\n    fill: ${props => props.isNotSelected && 'gray'};\n    stroke: ${props => props.isNotSelected && 'gray'};\n`\n\nexport const LocationTypeButton = styled.div`\n    height: ${props => props.schema == 'position' ? '4.5rem' : '6rem'};\n    width: 6rem;\n    border-radius: 0.5rem;\n\n    background: ${props => props.isSelected ? `transparent` : props.isNotSelected ? 'lightgray' : props.theme.bg.secondary};\n\n    margin: 0.5rem;\n    position: relative;\n    opacity: 0.999;\n    z-index:  ${props => props.isSelected && 10};\n\n    box-shadow: ${props => props.isSelected ? `none` : `0 0.2rem 0.3rem 0rem rgba(0,0,0,0.3)`};\n\n    ${props => !props.isSelected &&\n    `    cursor: url(https://ssl.gstatic.com/ui/v1/icons/mail/images/2/openhand.cur), grab;\n\n        &:active {\n            cursor: grabbing;\n            cursor: -moz-grabbing;\n            cursor: -webkit-grabbing;\n        }\n    `\n    }\n\n`\n\nexport const LocationTypeLabel = styled.p`\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz4};\n    color: ${props => props.theme.bg.quaternary};\n    margin-bottom: auto;\n    user-select: none;\n    text-align: center;\n`\n","import React, { useRef, useState } from 'react'\nimport * as styled from './location_button.style'\n\nimport { StationTypes } from '../../../../../../constants/station_constants'\nimport { PositionTypes } from '../../../../../../constants/position_constants'\n\nimport Draggable from 'react-draggable';\n\nconst LocationButton = (props) => {\n\n    const {\n        type,\n        isSelected,\n        handleAddLocation,\n        schema,\n        locationAdded,\n    } = props\n\n    const LocationTypes = {\n        ...StationTypes,\n        ...PositionTypes\n    }\n\n    const dragRef = useRef(null);\n    // const translateRef = useRef({x: 0, y: 0});\n    const [x, setX] = useState(0)\n    const [y, setY] = useState(0)\n\n    function formatString(string) {\n        if (string === 'cart_position') {\n            string = 'cart'\n        } else if (string === 'shelf_position') {\n            string = 'shelf'\n        } else if (string === 'human') {\n            string = 'Work Station'\n        } else if (string === 'charger_position') {\n            string = 'Charger'\n        }\n\n\n        string = string.replace('_', ' ')\n        return string.charAt(0).toUpperCase() + string.slice(1);\n    }\n\n    function handleDrag(e, ui) {\n        setX(x + ui.deltaX)\n        setY(y + ui.deltaY)\n    }\n\n    const handleDragStop = () => {\n        setX(0)\n        setY(0)\n    }\n\n    return (\n        <Draggable disabled={!!locationAdded} ref={dragRef} key={`location-button-drag-ref-${type}`} onStart={() => handleAddLocation(type)} onDrag={handleDrag} onStop={handleDragStop} axis=\"none\" position={{x, y}}>\n            <styled.LocationTypeButton\n                isSelected={!!isSelected && isSelected === type}\n                isNotSelected={!!isSelected && isSelected !== type}\n                id={`location-type-button-${type}`}\n                isSelected={isSelected}\n                schema={schema}\n            >\n                <styled.LocationTypeLabel>{formatString(type)}</styled.LocationTypeLabel>\n                    <styled.LocationTypeGraphic\n\n                        fill={LocationTypes[type].color}\n                        isNotSelected={!!isSelected && isSelected !== type}\n                        stroke={LocationTypes[type].color}\n                        id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 400 400\"\n                    >\n                        {LocationTypes[type].svgPath}\n                    </styled.LocationTypeGraphic>\n            </styled.LocationTypeButton>\n        </Draggable>\n\n    )\n\n}\n\nexport default LocationButton\n","import styled from 'styled-components'\n\nexport const PositionsContainer = styled.div`\n    position: relative;\n    display: flex;\n    flex-direction: column;\n\n    user-select: none;\n    justify-content: flex-start;\n    align-content: flex-start;\n    flex-grow: 1;\n`\n\nexport const Label = styled.h1`\n    font-family: ${props => props.theme.font.primary};\n    font-size: 1.5rem;\n    font-weight: 500;\n    color: ${props => props.theme.bg.septenary};\n    text-align: center;\n    user-select: none;\n`\n\nexport const LocationTypeGraphic = styled.svg`\n    height: 4.5rem;\n\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, calc(-50% + 0.3rem));\n\n    fill: ${props => props.isNotSelected && 'gray'};\n    stroke: ${props => props.isNotSelected && 'gray'};\n`\n\nexport const LocationTypeLabel = styled.p`\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz4};\n    color: ${props => props.theme.bg.quaternary};\n    margin-bottom: auto;\n    user-select: none;\n    text-align: center;\n`\n\nexport const Card = styled.div`\n    height: 4.5rem;\n    width: 6rem;\n    position: relative;\n    margin: 0rem 1rem;\n`\n\nexport const CardContainer = styled.div`\n    margin-top: 1.5rem;\n    margin-bottom: 2rem;\n\n    display: flex;\n    flex-grow: 1;\n    flex-direction: row;\n\n    justify-content: center;\n    align-content: center;\n    align-items: center;\n\n`\n\nexport const NewPositionCard = styled.div`\n\n    max-height: 4.5rem;\n    max-width: 6rem;\n\n    height: 100%;\n    width: 100%;\n\n    border-radius: 0.5rem;\n\n    background: ${props => props.theme.bg.secondary};\n    opacity: 0.999;\n\n    position: absolute;\n    left: calc(50% - 3rem);\n\n    box-shadow: 0 0.2rem 0.3rem 0rem rgba(0,0,0,0.3);\n\n    text-align: center;\n    justify-content: center;\n    align-items: flex-end;\n\n    cursor: grab;\n    &:active {\n        cursor: grabbing;\n        background: transparent;\n    }\n\n    cursor: url(https://ssl.gstatic.com/ui/v1/icons/mail/images/2/openhand.cur), grab;\n`\n\nexport const ListContainer = styled.div`\n    flex: 1;\n`\n\nexport const PositionList = styled.div`\n    width: 100%;\n`\n\nexport const PositionListItem = styled.div`\n    border-radius: 0.5rem;\n    box-shadow: 0px 0px 6px 1px rgba(0,0,0,0.1);\n\n    padding: .25rem;\n    padding-top: .35rem;\n\n    margin: .5rem 0rem;\n\n    display: flex;\n    flex-direction: row;\n    flex-grow: 1;\n    padding-bottom: 0.4rem;\n    align-items:center;\n\n`\n\nexport const SortIcon = styled.i`\n    font-size: 1.2rem;\n    color: ${props => props.theme.bg.octonary};\n\n    margin: 0.4rem;\n    margin-left: 0.6rem;\n    padding: 0;\n    background-color: transparent;\n    border: none;\n    text-align: center;\n    box-sizing: border-box;\n\n    &:hover{\n        cursor: ns-resize;\n    }\n    &:active{\n        cursor: grabbing;\n    }\n\n`\n\n\nexport const CartIcon = styled.i`\n    font-size: .8rem;\n    // color: ${props => props.theme.bg.octonary};\n\n    margin: 0.4rem;\n    margin-left: 0.6rem;\n    padding: 0;\n    background-color: transparent;\n    border: none;\n    text-align: center;\n    box-sizing: border-box;\n\n    &:hover{\n        cursor: pointer;\n    }\n\n`\n","import styled from 'styled-components'\n\nexport const MinusSymbol = styled.i`\n\n    color: ${props => props.disabled ? props.theme.bg.senary : props.theme.bg.octonary};\n    height: 1.6rem;\n    width: 1.6rem;\n    margin: none;\n    padding: none;\n    font-size: 1.6rem;\n    vertical-align: middle;\n    line-height: 1.6rem;\n`;\n\nexport const MinusButton = styled.button`\n    width: 1.6rem;\n    height: 1.6rem;\n    margin: 0.2rem;\n    padding: 0;\n    background-color: transparent;\n    border: none;\n    text-align: center;\n    box-sizing: border-box;\n\n    :focus {\n      outline: 0;\n    }\n`;\n","import React from 'react';\nimport * as style from './minus_button.style'\nimport {globStyle} from '../../../global_style'\n\nconst MinusButton = (props) => {\n\n    const {\n      onClick,\n      type,\n      disabled,\n      schema,\n    } = props\n\n    return (\n      <style.MinusButton onClick={onClick} type = {type}>\n          <style.MinusSymbol\n              style={{...props.style}}\n              className={\"far fa-minus-square\"}\n              disabled={disabled}\n              schema={schema}\n          >\n          </style.MinusSymbol>\n      </style.MinusButton>\n    )\n};\n\nMinusButton.defaultProps = {\n    disabled : false,\n    type: 'button'\n};\n\nexport default MinusButton;\n","import styled from 'styled-components'\n\nexport const LocationTypeGraphic = styled.svg`\nheight: 4.5rem;\n\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, calc(-50% + 0.3rem));\n\nfill: ${props => props.isNotSelected && 'gray'};\nstroke: ${props => props.isNotSelected && 'gray'};\n`\n\nexport const LocationTypeLabel = styled.p`\nfont-family: ${props => props.theme.font.primary};\nfont-size: ${props => props.theme.fontSize.sz4};\ncolor: ${props => props.theme.bg.quaternary};\nmargin-bottom: auto;\nuser-select: none;\ntext-align: center;\n`\n\nexport const Card = styled.div`\nheight: 4.5rem;\nwidth: 6rem;\nposition: relative;\nmargin: 0rem 1rem;\n`\n\nexport const NewPositionCard = styled.div`\n\n    max-height: 4.5rem;\n    max-width: 6rem;\n\n    height: 100%;\n    width: 100%;\n\n    border-radius: 0.5rem;\n\n    background: ${props => props.theme.bg.secondary};\n    opacity: 0.999;\n\n    position: absolute;\n    left: calc(50% - 3rem);\n\n    box-shadow: 0 0.2rem 0.3rem 0rem rgba(0,0,0,0.3);\n\n    text-align: center;\n    justify-content: center;\n    align-items: flex-end;\n\n    cursor: grab;\n    &:active {\n        cursor: grabbing;\n    }\n\n    // ${props => props.isDragging && 'background: transparent; box-shadow: none;'}\n\n    cursor: url(https://ssl.gstatic.com/ui/v1/icons/mail/images/2/openhand.cur), grab;\n`","import React, { useState, useRef } from 'react';\n\nimport * as styled from './associated_position_card.style';\n\nimport Draggable from 'react-draggable';\n\n// Import Constants\nimport { PositionTypes, newPositionTemplate } from '../../../../../../../constants/position_constants'\n\nconst AssociatedPositionCard = (props) => {\n\n    const {\n        positionType,\n        handleAddPosition,\n        handleDeletePosition\n    } = props\n    \n\n    const dragRef = useRef(null);\n    const [x, setX] = useState(0);\n    const [y, setY] = useState(0);\n    const [dragging, setDragging] = useState(false)\n    const [hovering, setHovering] = useState(false)\n\n    let positionName\n    // Sets of vairables based on position type\n    if (positionType === 'cart_position') {\n        positionName = 'Cart'\n    }\n    if (positionType === 'shelf_position') {\n        positionName = 'Shelf'\n    }\n\n    function handleDrag(e, ui) {\n        setX(x + ui.deltaX)\n        setY(y + ui.deltaY)\n        setDragging(true);\n    }\n\n    const handleDragStop = () => {\n        setX(0)\n        setY(0)\n        setDragging(false);\n        if (hovering) {\n            handleDeletePosition();\n        }\n    }\n\n    return (\n        \n            <styled.Card>\n\n                <styled.NewPositionCard style={{ transform: 'translate(-0.4rem, 0.4rem)' }} />\n                <styled.NewPositionCard style={{ transform: 'translate(-0.2rem, 0.2rem)' }}>\n                        <styled.LocationTypeLabel>\n                            {positionName}\n                        </styled.LocationTypeLabel>\n\n                        <styled.LocationTypeGraphic fill={PositionTypes[positionType].color} stroke={PositionTypes[positionType].color} id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 400 400\">\n                            {PositionTypes[positionType].svgPath}\n                        </styled.LocationTypeGraphic>\n                    </styled.NewPositionCard>\n                <Draggable ref={dragRef} key={`location-button-drag-ref-${positionType}`} onStart={() => handleAddPosition(positionType)} onDrag={handleDrag} onStop={handleDragStop} axis=\"none\" position={{x, y}}>\n                    <styled.NewPositionCard draggable={false} isDragging={dragging} onMouseEnter={() => setHovering(true)} onMouseLeave={() => {setHovering(false)}}>\n\n                        <styled.LocationTypeLabel>\n                            {positionName}\n                        </styled.LocationTypeLabel>\n\n                        <styled.LocationTypeGraphic fill={PositionTypes[positionType].color} stroke={PositionTypes[positionType].color} id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 400 400\">\n                            {PositionTypes[positionType].svgPath}\n                        </styled.LocationTypeGraphic>\n\n                    </styled.NewPositionCard>\n                </Draggable>\n            </styled.Card>\n    )\n}\n\nexport default AssociatedPositionCard;","import React, { useState, useEffect, useMemo } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport * as styled from './associated_positions.style'\n\nimport { sortableElement, sortableHandle } from 'react-sortable-hoc';\n\n// Import Components\nimport MinusButton from '../../../../../basic/minus_button/minus_button'\nimport Textbox from '../../../../../basic/textbox/textbox'\nimport ConfirmDeleteModal from '../../../../../basic/modals/confirm_delete_modal/confirm_delete_modal'\nimport AssociatedPositionCard from './associated_position_card/associated_position_card'\n\nimport arrayMove from 'array-move';\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\n\n// Import Actions\nimport { setStationAttributes } from '../../../../../../redux/actions/stations_actions'\nimport { setPositionAttributes, deletePosition, addPosition, postPosition, setSelectedStationChildrenCopy } from '../../../../../../redux/actions/positions_actions'\nimport * as positionActions from '../../../../../../redux/actions/positions_actions'\nimport { deleteTask } from '../../../../../../redux/actions/tasks_actions'\nimport { pageDataChanged } from '../../../../../../redux/actions/sidebar_actions'\nimport { deepCopy } from '../../../../../../methods/utils/utils'\n\n// Import Constants\nimport { PositionTypes, newPositionTemplate } from '../../../../../../constants/position_constants'\nimport { setSelectedStation } from '../../../../../../redux/actions/stations_actions';\n\nexport default function Positions(props) {\n\n    const {\n        handleSetChildPositionToCartCoords,\n    } = props\n\n    const dispatch = useDispatch()\n    const dispatchSetPositionAttributes = (id, attr) => dispatch(setPositionAttributes(id, attr))\n    const dispatchDeletePosition = (id) => dispatch(deletePosition(id))\n    const dispatchAddPosition = (position) => dispatch(addPosition(position))\n    const disptachPostPosition = (position) => dispatch(postPosition(position))\n    const dispatchSetSelectedStationChildrenCopy = (positions) => dispatch(setSelectedStationChildrenCopy(positions))\n    const dispatchPageDataChanged = (bool) => dispatch(pageDataChanged(true))\n    const dispatchSetStationAttributes = (id, attr) => dispatch(setStationAttributes(id, attr))\n\n    const positions = useSelector(state => state.positionsReducer.positions)\n    const selectedStation = useSelector(state => state.stationsReducer.selectedStation)\n    const selectedPosition = useSelector(state => state.positionsReducer.selectedPosition)\n    const tasks = useSelector(state => state.tasksReducer.tasks)\n    const currentMapId = useSelector(state => state.settingsReducer.settings.currentMapId)\n    const maps = useSelector(state => state.mapReducer.maps)\n    const currentMap = Object.values(maps).find(map => map._id === currentMapId)\n    const MiRMapEnabled = useSelector(state => state.localReducer.localSettings.MiRMapEnabled)\n    const selectedStationChildrenCopy = useSelector(state => state.positionsReducer.selectedStationChildrenCopy)\n    const serverSettings = useSelector(state => state.settingsReducer.settings)\n    const deviceEnabled = serverSettings.deviceEnabled\n\n    const [editingIndex, setEditingIndex] = useState(null)\n    const [confirmDeleteModal, setConfirmDeleteModal] = useState(false);\n    const [deletingIndex, setDeletingIndex] = useState()\n    const [deletingPosition, setDeletingPosition] = useState()\n    const [mostRecentPositionId, setMostRecentPositionId] = useState(null)\n\n    const positionTypes = !!MiRMapEnabled ? ['cart_position', 'shelf_position',] : []\n\n    /**\n     * Handles deleting positions\n     * Does some different things based on if the position is new or not (see comments bellow)\n     * TODO: FIX THIS SHIT!\n     * @param {*} position\n     */\n    const onDelete = (position) => {\n        dispatchDeletePosition(position._id)\n    }\n\n    const renderAssociatedPositions = () => {\n        return positionTypes.map((positionType) => {\n            return Object.values(selectedStationChildrenCopy).map((position, i) => {\n                if (position.type === positionType) {\n                    return (\n                        <styled.PositionListItem key={`associatecd_pos_${i}`}>\n\n\n                            <MinusButton\n                                onClick={() => {\n                                    setConfirmDeleteModal(true)\n                                    setDeletingIndex(i)\n                                    setDeletingPosition(position)\n                                }}\n                                style={{color: PositionTypes[positionType].color}}\n                            />\n                            <Textbox\n                                style={{ flex: '1' }}\n                                textboxContainerStyle={{flex: '1', marginLeft: '0.3rem'}}\n                                schema=\"locations\"\n                                focus={i == editingIndex}\n                                // defaultValue={position.name}\n                                value={position.name}\n                                onChange={(e) => {\n                                    setEditingIndex(i)\n                                    dispatchPageDataChanged(true)\n                                    dispatch(positionActions.setPositionAttributes(position._id, { name: e.target.value }))\n                                }}\n\n                            />\n\n\n                            {/* If not a human position, then add ability to use cart location */}\n                            {position.type !== 'human_position' &&\n                                <styled.CartIcon className='icon-cart' onClick={() => handleSetChildPositionToCartCoords(position)} style={{color: PositionTypes[positionType].color}}/>\n                            }\n\n                            {/* Commenting out for now, not working with constent updating */}\n                            {/* <DragHandle></DragHandle> */}\n\n\n                        </styled.PositionListItem>\n                    )\n                }\n            })\n        })\n\n\n\n    }\n\n    // TODO: Comment\n    const onAddAssociatedPosition = async (type) => {\n\n        // const newPositionName = selectedStation.name + ' ' + (selectedStation.children.filter((position) => positions[position].type === type).length + 1)\n        const newPositionName = `${type === 'cart_position' ? 'Cart Position' : 'Shelf Position'}` + ' ' + (selectedStation.children.filter((position) => positions[position].type === type).length + 1)\n\n        const newPositionType = type\n\n        const newPosition = newPositionTemplate(newPositionName, newPositionType, selectedStation._id, currentMap._id)\n\n        await dispatchSetSelectedStationChildrenCopy({\n            ...selectedStationChildrenCopy,\n            [newPosition._id]: newPosition\n        })\n\n\n        await dispatchAddPosition(newPosition)\n\n        let { children } = selectedStation\n        children.push(newPosition._id)\n\n        setMostRecentPositionId(newPosition._id)\n        dispatchSetStationAttributes(selectedStation._id, { children })\n    }\n\n    const onDeleteAssociatedPosition = async () => {\n        await onDelete(deletingPosition)\n        setConfirmDeleteModal(null)\n    }\n\n    const renderPositionCards = () => {\n\n        return positionTypes.map((positionType) =>\n            <AssociatedPositionCard\n                positionType={positionType}\n                handleAddPosition={onAddAssociatedPosition}\n                handleDeletePosition={() => {\n                    onDelete(selectedStationChildrenCopy[mostRecentPositionId])\n                }}\n            />\n        )\n    }\n\n    return (\n\n        <styled.PositionsContainer>\n\n            <ConfirmDeleteModal\n                isOpen={!!confirmDeleteModal}\n                title={\"Are you sure you want to delete this Position?\"}\n                button_1_text={\"Yes\"}\n                handleOnClick1={async () => {\n                    await onDeleteAssociatedPosition()\n                }}\n                button_2_text={\"No\"}\n                handleOnClick2={() => setConfirmDeleteModal(null)}\n                handleClose={() => setConfirmDeleteModal(null)}\n            />\n\n\n            {/* Cards for dragging a new position onto the map */}\n\n            {!!deviceEnabled &&\n                <>\n                    <styled.CardContainer>\n                        {renderPositionCards()}\n                    </styled.CardContainer>\n\n                    <styled.Label>Associated Positions</styled.Label>\n                </>\n\n            }\n\n\n            <styled.ListContainer>\n                {!!selectedStationChildrenCopy &&\n                    renderAssociatedPositions()\n                }\n            </styled.ListContainer>\n        </styled.PositionsContainer>\n    )\n}\n","export const LocationDefaultAttributes = {\n    name: null,\n    schema: null,\n    type: null,\n    pos_x: 0,\n    pos_y: 0,\n    rotation: 0,\n    x: 0,\n    y: 0,\n    _id: '',\n    map_id: null,\n    temp: true\n}","import React, { useState, useEffect, useRef } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport uuid from 'uuid'\n\nimport * as styled from './edit_location.style'\nimport { Formik, Form } from 'formik'\n\n// Import Components\nimport LocationButton from './location_button/location_button'\nimport ContentHeader from '../../content_header/content_header'\nimport ConfirmDeleteModal from '../../../../basic/modals/confirm_delete_modal/confirm_delete_modal'\nimport AssociatedPositions from './associated_positions/associated_positions'\n\n// Import Basic Components\nimport Textbox from '../../../../basic/textbox/textbox.js'\nimport TextField from '../../../../basic/form/text_field/text_field.js'\nimport Button from '../../../../basic/button/button'\n\n\n// Import Constants\nimport { StationTypes } from '../../../../../constants/station_constants'\nimport { PositionTypes } from '../../../../../constants/position_constants'\nimport { LocationDefaultAttributes } from '../../../../../constants/location_constants'\n\n// Import utils\nimport { deepCopy } from '../../../../../methods/utils/utils'\nimport { locationSchema } from '../../../../../methods/utils/form_schemas'\n\n\n// Import actions\nimport { setSelectedPosition, setPositionAttributes, addPosition, deletePosition, setEditingPosition, putPosition, postPosition, setSelectedStationChildrenCopy, removePosition } from '../../../../../redux/actions/positions_actions'\nimport { setSelectedStation, setStationAttributes, addStation, deleteStation, setEditingStation, putStation, postStation, removeStation } from '../../../../../redux/actions/stations_actions'\nimport { pageDataChanged } from '../../../../../redux/actions/sidebar_actions'\n\nconst EditLocation = (props) => {\n    const dispatch = useDispatch()\n    let selectedLocationRef = useRef()\n    let selectedStationChildrenCopyRef = useRef()\n    const formRef = useRef(null)\t// gets access to form state\n\n    const {\n        current\n    } = formRef || {}\n\n    const {\n        values = {},\n        initialValues = {}\n    } = current || {}\n\n    // Station Dispatches\n    const dispatchSetSelectedStation = (station) => dispatch(setSelectedStation(station))\n    const dispatchSetEditingStation = (bool) => dispatch(setEditingStation(bool))\n    const dispatchSetStationAttributes = (id, attr) => dispatch(setStationAttributes(id, attr))\n    const dispatchAddStation = (station) => dispatch(addStation(station))\n    const dispatchSetSelectedStationChildrenCopy = (children) => dispatch(setSelectedStationChildrenCopy(children))\n    const dispatchPutStation = async (station) => await dispatch(putStation(station))\n    const dispatchPostStation = async (station) => await dispatch(postStation(station))\n    const dispatchDeleteStation = async (id) => await dispatch(deleteStation(id))\n    const dispatchRemoveStation = (id) => dispatch(removeStation(id))\n    const dispatchPageDataChanged = (bool) => dispatch(pageDataChanged(bool))\n\n\n    // Position Dispatches\n    const dispatchSetSelectedPosition = async (position) => await dispatch(setSelectedPosition(position))\n    const dispatchAddPosition = async (pos) => await dispatch(addPosition(pos))\n    const dispatchSetPositionAttributes = (id, attr) => dispatch(setPositionAttributes(id, attr))\n    const dispatchSetEditingPosition = (bool) => dispatch(setEditingPosition(bool))\n    const dispatchDeletePosition = async (id) => dispatch(deletePosition(id))\n    const dispatchPutPosition = async (position) => await dispatch(putPosition(position))\n    const dispatchPostPosition = async (position) => await dispatch(postPosition(position))\n    const dispatchRemovePosition = (id) => dispatch(removePosition(id))\n\n    const stations = useSelector(state => state.stationsReducer.stations)\n    const selectedStation = useSelector(state => state.stationsReducer.selectedStation)\n    const selectedPosition = useSelector(state => state.positionsReducer.selectedPosition)\n    const selectedStationChildrenCopy = useSelector(state => state.positionsReducer.selectedStationChildrenCopy)\n    const pageInfoChanged = useSelector(state => state.sidebarReducer.pageDataChanged)\n    const positions = useSelector(state => state.positionsReducer.positions)\n\n    const devices = useSelector(state => state.devicesReducer.devices)\n    const currentMapId = useSelector(state => state.settingsReducer.settings.currentMapId)\n    const maps = useSelector(state => state.mapReducer.maps)\n    const currentMap = Object.values(maps).find(map => map._id === currentMapId)\n    const serverSettings = useSelector(state => state.settingsReducer.settings)\n    const deviceEnabled = serverSettings.deviceEnabled\n\n    const [confirmDeleteModal, setConfirmDeleteModal] = useState(false);\n    const [confirmExitModal, setConfirmExitModal] = useState(false);\n    const [isLocationDragging, setIsLocationDragging] = useState(false)\n\n    const [newName, setNewName] = useState('')\n    const selectedLocation = !!selectedStation ? selectedStation : selectedPosition\n    const locations = { ...stations, ...positions }\n    const LocationTypes = {\n        ...StationTypes,\n        ...PositionTypes,\n    }\n\n    useEffect(() => {\n        return () => {\n            onBack()\n            // dispatchSetEditingStation(false)\n            // dispatchSetEditingPosition(false)\n            // dispatchSetSelectedPosition(null)\n            // dispatchSetSelectedStation(null)\n            // dispatchSetSelectedStationChildrenCopy(null)\n        }\n    }, [])\n\n\n    // These 2 useEffects use refs for onBack()\n    // Since onback is called in the return statement of the usseffect that runs when the component mounts, it keeps in memory the current state on load (redux, useState, etc...)\n    // So this ref will pass in the actual state vs the old state that the useEffect has\n    useEffect(() => {\n        selectedLocationRef.current = selectedLocation\n    }, [selectedLocation])\n    useEffect(() => {\n        selectedStationChildrenCopyRef.current = selectedStationChildrenCopy\n    }, [selectedStationChildrenCopy])\n\n    useEffect(() => {\n      if(JSON.stringify(initialValues)!==JSON.stringify(values)){\n        dispatchPageDataChanged(true)\n      }\n      else{\n        dispatchPageDataChanged(false)\n      }\n    }, [values])\n\n    /**\n     * This function is called when the save button is pressed. The location is POSTED or PUT to the backend.\n     * If the location is new and is a station, this function also handles posting the default dashboard and\n     * tieing it to this location. Each child position for a station is also either POSTED or PUT.\n     */\n    const onSave = async (name) => {\n        // Station\n        if (!!selectedStation) {\n            const copyStation = deepCopy(selectedStation)\n            copyStation.name = name\n            // Post\n            if (!!copyStation.new) {\n                await dispatchPostStation(copyStation)\n            }\n            // Put\n            else {\n                await dispatchPutStation(copyStation)\n            }\n        }\n\n        // Position\n        else if (!!selectedPosition) {\n            const copyPosition = deepCopy(selectedPosition)\n            copyPosition.name = name\n            // Post\n            if (!!copyPosition.new) {\n                await dispatchPostPosition(copyPosition)\n\n                // Add dashboard\n            }\n            // Put\n            else {\n                await dispatchPutPosition(copyPosition)\n            }\n\n        }\n\n        else {\n            throw ('You son of a bitch Trebech')\n        }\n\n        onBack(true)\n    }\n\n    /**\n     * Deletes the selected location\n     * The whole delete process can be found in each locations respected actions\n     */\n    const onDelete = async () => {\n\n        // Station\n        if (!!selectedLocation) {\n            if (selectedLocation.schema === 'station') {\n                await dispatchDeleteStation(selectedStation._id)\n            }\n\n            // Position\n            else {\n                await dispatchDeletePosition(selectedPosition._id)\n            }\n        }\n\n        // Adding true to save even though you arent saving\n        // Since deleting location, there is no need to remove location in onBack (see use of save in onBack function)\n        onBack(true)\n    }\n\n    /**\n     * Handles Back\n     * Sets editing to false\n     * Removes Station if new and not a save\n     * Sets selected Location to null\n     */\n    const onBack = (save) => {\n\n        // The order of these functions matter\n        dispatchSetEditingStation(false)\n        dispatchSetEditingPosition(false)\n\n        // If theres a children copy check the children\n        if (!!selectedStationChildrenCopyRef.current) {\n            Object.values(selectedStationChildrenCopyRef.current).forEach(child => {\n                // If it's a new child remove the position\n                if (!!child.new) {\n                    dispatchDeletePosition(child._id)\n                }\n            })\n        }\n        dispatchSetSelectedStationChildrenCopy(null)\n\n        // If there's a selected location and its new without saving, then delete\n        if (!!selectedLocationRef.current && !!selectedLocationRef.current.new && !save) {\n            if (selectedLocationRef.current.schema === 'station') {\n                dispatchRemoveStation(selectedLocationRef.current._id)\n            }\n\n            else if (selectedLocationRef.current.schema === 'position') {\n                dispatchDeletePosition(selectedLocationRef.current._id)\n            }\n        }\n\n        dispatchSetSelectedPosition(null)\n        dispatchSetSelectedStation(null)\n    }\n\n\n    /**\n     * The X and Y here are set in map view view dragNewEntity\n     */\n    const onAddLocation = async (type) => {\n        dispatchPageDataChanged(true)\n        // TODO: Stick this into Constants\n        const defaultAttributes = deepCopy(LocationDefaultAttributes)\n\n        defaultAttributes['name'] = newName\n        defaultAttributes['map_id'] = currentMap._id\n        defaultAttributes['_id'] = uuid.v4()\n        defaultAttributes['temp'] = true\n\n        const attributes = deepCopy(LocationTypes[type].attributes)\n\n        const newLocation = {\n            ...defaultAttributes,\n            ...attributes\n        }\n\n\n        // Handle Station addition\n        if (attributes.schema === 'station') {\n            dispatchSetSelectedStationChildrenCopy({})\n            await dispatchAddStation(newLocation)\n            await dispatchSetSelectedStation(newLocation)\n        }\n\n        else if (attributes.schema === 'position') {\n            await dispatchAddPosition(newLocation)\n            await dispatchSetSelectedPosition(newLocation)\n        }\n\n        else {\n            throw ('Schema Does Not exist')\n        }\n    }\n\n    const onRemoveTempLocation = async () => {\n\n        console.log(\"deleteLoc\")\n\n        // Station\n        if (!!selectedLocation && selectedLocation.temp) {\n            if (selectedLocation.schema === 'station') {\n                await dispatchRemoveStation(selectedStation._id)\n            }\n\n            // Position\n            else {\n                await dispatchRemovePosition(selectedPosition._id)\n            }\n\n            dispatchSetSelectedStationChildrenCopy(null)\n            dispatchSetSelectedPosition(null)\n            dispatchSetSelectedStation(null)\n        }\n    }\n\n    const onLocationNameChange = (e) => {\n        if (!!selectedStation) {\n            dispatchSetStationAttributes(selectedStation._id, { name: e.target.value })\n        }\n        else if (!!selectedPosition) {\n            dispatchSetPositionAttributes(selectedPosition._id, { name: e.target.value })\n        }\n\n        // Location Type has not been defined yet\n        else {\n            setNewName(e.target.value)\n        }\n    }\n\n    const handleSetPositionToCartCoords = async () => {\n\n        Object.values(devices).map(async (device, ind) => {\n            if (device.device_model === 'MiR100') {\n                const devicePosition = device.position\n\n                const updatedSelectedLocation = {\n                    ...selectedLocation,\n                    pos_x: devicePosition.pos_x,\n                    pos_y: devicePosition.pos_y,\n                    x: devicePosition.x,\n                    y: devicePosition.y,\n                    rotation: devicePosition.orientation,\n                }\n\n                // Not sure why onSetSelectedLocation is not working, should be the same as a normal dispatch...\n                await dispatchAddPosition(updatedSelectedLocation)\n                await dispatchSetSelectedPosition(updatedSelectedLocation)\n            }\n        })\n    }\n\n    const handlePageDataChange = () => {\n        dispatchPageDataChanged(true)\n    }\n\n    const handleSetChildPositionToCartCoords = (position) => {\n        Object.values(devices).map(async (device, ind) => {\n            if (device.device_model === 'MiR100') {\n                const devicePosition = device.position\n                const copyPos = deepCopy(position)\n                const updatedPosition = {\n                    ...copyPos,\n                    pos_x: devicePosition.pos_x,\n                    pos_y: devicePosition.pos_y,\n                    x: devicePosition.x,\n                    y: devicePosition.y,\n                    rotation: devicePosition.orientation,\n                }\n\n                if (updatedPosition._id in selectedStationChildrenCopy) {\n                    let copyOfCopy = deepCopy(selectedStationChildrenCopy)\n                    copyOfCopy = {\n                        ...copyOfCopy,\n                        [updatedPosition._id]: updatedPosition,\n                    }\n                    dispatchSetSelectedStationChildrenCopy(copyOfCopy)\n                }\n\n                else {\n                    setSelectedPosition(updatedPosition)\n                }\n\n\n            }\n        })\n    }\n\n\n    const renderStationButtons = () => {\n        // If there is a type selected and its not the button type, that means this type has not been selected so gray everything out\n        const types = ['human', 'warehouse']\n\n        return types.map((type, i) => {\n            const isSelected = (!!selectedStation && selectedStation.type !== null && selectedStation.type === type) ? selectedStation.type : false;\n            return (\n                <LocationButton key={`stat_button_${i}`} schema={'station'} type={type} isSelected={isSelected} handleAddLocation={onAddLocation} />\n            )\n        })\n\n    }\n\n    const renderPositionButtons = () => {\n        const types = ['cart_position', 'shelf_position']\n\n        return types.map((type, i) => {\n            const isSelected = (!!selectedPosition && selectedPosition.type !== null && selectedPosition.type === type) ? selectedPosition.type : false;\n            return (\n                <LocationButton key={`pos_button_${i}`} schema={'position'} type={type} isSelected={isSelected} handleAddLocation={onAddLocation} />\n            )\n        })\n    }\n\n    return (\n        <>\n            <styled.ContentContainer style={{ padding: '0' }}>\n\n                <ConfirmDeleteModal\n                    isOpen={!!confirmDeleteModal}\n                    title={\"Are you sure you want to delete this Location?\"}\n                    button_1_text={\"Yes\"}\n                    handleOnClick1={() => {\n                        onDelete()\n                        setConfirmDeleteModal(null)\n                    }}\n                    button_2_text={\"No\"}\n                    handleOnClick2={() => setConfirmDeleteModal(null)}\n                    handleClose={() => setConfirmDeleteModal(null)}\n                />\n\n                <ConfirmDeleteModal\n                    isOpen={!!confirmExitModal}\n                    title={\"Are you sure you want to go back? Any progress will not be saved\"}\n                    button_1_text={\"Yes\"}\n                    handleOnClick1={() => {\n                        onBack()\n                        setConfirmExitModal(null)\n                        dispatchPageDataChanged(false)\n                    }}\n                    button_2_text={\"No\"}\n                    handleOnClick2={() => setConfirmExitModal(null)}\n                    handleClose={() => setConfirmExitModal(null)}\n                />\n\n                <Formik\n\n                    initialValues={{\n                        locationName: !!selectedLocation ? selectedLocation.name : '',\n\n                    }}\n                    initialTouched={{\n                        locationName: false,\n\n                    }}\n                    validateOnChange={true}\n                    validateOnMount={true}\n                    validateOnBlur={true}\n                    innerRef = {formRef}\n                    // Chooses what schema to use based on whether it's a sign in or sign up\n                    // TODO: The schemas are not 100% working as of 9/14/2020. Need to figure out regex for passwords\n                    validationSchema={locationSchema(stations, selectedLocation)}\n                    onSubmit={async (values, { setSubmitting }) => {\n                        setSubmitting(true)\n                        await onSave(deepCopy(values.locationName))\n                        setSubmitting(false)\n                    }}\n                >\n                    {formikProps => {\n                        const {\n                            submitForm,\n                            errors,\n                            initialValues,\n                            values\n                        } = formikProps\n\n                        return (\n                            <Form\n                                onKeyDown={(e) => {\n\n                                   if ((e.charCode || e.keyCode) === 13) {\n                                      e.preventDefault();\n                                  }\n                                }}\n                                style={{ flex: '1', margin: '0' }}\n                            >\n                                <styled.ContentContainer style={{ height: '100%' }}>\n\n                                    <div style={{ marginBottom: '1rem' }}>\n                                        <ContentHeader\n                                            content={'locations'}\n                                            disabled={selectedLocation === null}\n                                            mode={'create'}\n                                            onClickBack={pageInfoChanged ? () => setConfirmExitModal(true) : () => onBack()}\n                                        />\n                                    </div>\n\n                                    <TextField\n                                        name={\"locationName\"}\n                                        changed={() => handlePageDataChange()}\n                                        textStyle={{ fontWeight: 'Bold', 'fontSize': '3rem' }}\n                                        placeholder='Enter Location Name'\n                                        type='text'\n                                        label='Location Name'\n                                        schema='locations'\n                                        InputComponent={Textbox}\n                                        style={{\n                                            'fontSize': '1.2rem',\n                                            'fontWeight': '600',\n                                            'marginBottom': '.5rem',\n                                            'marginTop': '0',\n                                        }}\n                                    />\n\n                                    {/* Location Type */}\n                                    <styled.DefaultTypesContainer>\n\n                                        {!selectedLocation || selectedLocation.temp ?\n                                            <>\n                                                <styled.LocationTypeContainer onMouseUp={onRemoveTempLocation}>\n                                                    <styled.Label schema={'locations'}>Stations</styled.Label>\n                                                    <styled.LocationButtonConatiner>\n                                                        {renderStationButtons()}\n                                                    </styled.LocationButtonConatiner>\n                                                </styled.LocationTypeContainer>\n\n                                                {deviceEnabled &&\n                                                    <styled.LocationTypeContainer onMouseUp={onRemoveTempLocation}>\n                                                        <styled.Label schema={'locations'} style={{ marginTop: '1rem' }}>Positions</styled.Label>\n                                                        <styled.LocationButtonConatiner>\n                                                            {renderPositionButtons()}\n                                                        </styled.LocationButtonConatiner>\n\n                                                        {/* <styled.LocationButtonSubtitleContainer style={{ marginRight: '1.1rem' }}>\n                                                    <styled.Subtitle schema={'locations'} style={{ marginRight: '4.5rem' }}>Cart</styled.Subtitle>\n                                                    <styled.Subtitle schema={'locations'}>Shelf</styled.Subtitle>\n                                                </styled.LocationButtonSubtitleContainer> */}\n\n                                                    </styled.LocationTypeContainer>\n                                                }\n                                            </>\n\n                                            :\n                                            <LocationButton\n                                                type={selectedLocation['type']}\n                                                isSelected={(!!selectedLocation && selectedLocation.type !== null) ? selectedLocation.type : false}\n                                                locationAdded={true}\n                                                handleAddLocation={() => null}\n\n                                            />\n\n                                        }\n\n                                    </styled.DefaultTypesContainer>\n\n                                    {(!!selectedLocation && selectedLocation.schema === 'station' && !selectedLocation.temp) &&\n\n                                        <AssociatedPositions handleSetChildPositionToCartCoords={handleSetChildPositionToCartCoords} />\n                                    }\n\n                                    {(!!selectedLocation && selectedLocation.schema === 'position' && !selectedLocation.temp) &&\n\n                                        <Button\n                                            schema={'locations'}\n                                            secondary\n                                            onClick={() => {\n                                                handleSetPositionToCartCoords()\n                                                dispatchPageDataChanged(true)\n                                            }}\n                                            style={{ marginBottom: '1rem' }}\n                                        >\n                                            Use Cart Location\n                                        </Button>\n                                    }\n\n                                    <div style={{ height: \"100%\" }}></div>\n\n\n                                    {/* Delete Location Button */}\n                                    <Button type={'button'} schema={'locations'} onClick={() => onSave(deepCopy(values.locationName))} >Save Location</Button>\n                                    <Button schema={'locations'} secondary disabled={selectedLocation === null || !!selectedLocation.new} onClick={() => setConfirmDeleteModal(true)} >Delete</Button>\n                                </styled.ContentContainer>\n                            </Form>\n                        )\n                    }}\n\n                </Formik>\n            </styled.ContentContainer>\n\n        </>\n    )\n}\n\nexport default EditLocation\n","import React, { useState, useEffect, useMemo } from 'react'\nimport * as styled from './locations_content.style'\nimport { useSelector, useDispatch } from 'react-redux'\n\n// Import components\nimport ContentList from '../content_list/content_list'\nimport EditLocation from './edit_location/edit_location'\n\n// Import actions\nimport { setEditingPosition, setSelectedPosition, setSelectedStationChildrenCopy } from '../../../../redux/actions/positions_actions'\nimport { setEditingStation, setSelectedStation } from '../../../../redux/actions/stations_actions'\n\n// Import Constants\nimport { StationTypes } from '../../../../constants/station_constants'\n\n// Import Utils\nimport { locationsSortedAlphabetically } from '../../../../methods/utils/locations_utils'\n\n\n// This adds a location selected info to the reducer\nexport default function LocationContent() {\n\n    const dispatch = useDispatch()\n\n    const dispatchSetEditingPosition = (bool) => dispatch(setEditingPosition(bool))\n    const dispatchSetSelectedPosition = (position) => dispatch(setSelectedPosition(position))\n\n    const dispatchSetEditingStation = (bool) => dispatch(setEditingStation(bool))\n    const dispatchSetSelectedStation = (position) => dispatch(setSelectedStation(position))\n    const dispatchSetSelectedStationChildrenCopy = (positions) => dispatch(setSelectedStationChildrenCopy(positions))\n\n    const stations = useSelector(state => state.stationsReducer.stations)\n    const selectedStation = useSelector(state => state.stationsReducer.selectedStation)\n    const selectedPosition = useSelector(state => state.positionsReducer.selectedPosition)\n    const positions = useSelector(state => state.positionsReducer.positions)\n\n    const editingStation = useSelector(state => state.stationsReducer.editingStation)\n    const editingPosition = useSelector(state => state.positionsReducer.editingPosition)\n\n    const tasks = useSelector(state => state.tasksReducer.tasks)\n    const devices = useSelector(state => state.devicesReducer.devices)\n    const currentMapId = useSelector(state => state.settingsReducer.settings.currentMapId)\n    const maps = useSelector(state => state.mapReducer.maps)\n    const currentMap = Object.values(maps).find(map => map._id === currentMapId)\n    const MiRMapEnabled = useSelector(state => state.localReducer.localSettings.MiRMapEnabled)\n    const processes = useSelector(state => state.processesReducer.processes)\n\n    const [mergeStation, setMergeStation] = useState(false)\n    const [confirmDeleteModal, setConfirmDeleteModal] = useState(false);\n\n    const selectedLocation = !!selectedStation ? selectedStation : selectedPosition\n    const locations = {\n        ...stations,\n        ...positions\n    }\n\n\n    useEffect(() => {\n        return () => {\n\n        }\n    }, [])\n\n    const onSetSelectedLocation = (id) => {\n        if (id in stations) {\n            dispatchSetSelectedStation(stations[id])\n        }\n\n        else if (id in positions) {\n            dispatchSetSelectedPosition(positions[id])\n        }\n\n        else if (id === null) {\n            dispatchSetSelectedStation(null)\n            dispatchSetSelectedPosition(null)\n\n        }\n    }\n\n    /**\n     * Tells what location is being edited\n     * Handles whether location is a station or a position\n     * @param {*} id\n     */\n    const onEditLocation = (id) => {\n        const editingLocation = locations[id]\n\n        // If a station\n        if (editingLocation.schema === 'station') {\n            dispatchSetEditingStation(true)\n            dispatchSetSelectedStation(editingLocation)\n\n            // Copy Children\n            if (editingLocation.children.length > 0) {\n                let copy = {}\n\n                editingLocation.children.forEach(child => {\n                    copy[child] = positions[child]\n                })\n\n                dispatchSetSelectedStationChildrenCopy(copy)\n            }\n        }\n\n        // Else its a position\n        else {\n            dispatchSetEditingPosition(true)\n            dispatchSetSelectedPosition(editingLocation)\n        }\n    }\n\n    return (\n        (editingPosition || editingStation) ?\n            <EditLocation />\n\n            :\n            <ContentList\n                title={'Locations'}\n                schema={'locations'}\n                // Filters out devices from being displayed in locations\n                elements={\n                    locationsSortedAlphabetically(Object.values(locations))\n                        // Filters out devices, entry positions, other positions and right click to move positions\n                        .filter(location => !location.parent && location.type !== 'device' && location.type !== 'cart_entry_position' && location.type !== 'shelf_entry_position' && location.type !== 'charger_entry_position' && location.type !== 'other' && location.schema !== 'temporary_position' && (location.map_id === currentMap._id))\n                }\n                // elements={Object.values(locations)}\n                onMouseEnter={(location) => {\n                  if(selectedLocation===null){\n                    onSetSelectedLocation(location._id)\n                  }\n                }}\n                onMouseLeave={() => {\n                  if(selectedLocation?.schema!==\"temporary_position\")\n                  onSetSelectedLocation(null)\n                }}\n                onClick={(location) => {\n                    console.log('QQQQ Editing Location', location)\n                    onEditLocation(location._id)\n                }}\n                onPlus={() => {\n                    dispatchSetEditingStation(true)\n                }}\n            />\n    )\n}\n","import styled from 'styled-components'\nimport { LightenDarkenColor } from '../../../../methods/utils/color_utils'\n\nexport const ContentContainer = styled.div`\n    flex-grow: 1;\n    padding: 1rem 1rem 0rem 1rem;\n    display: flex;\n    flex-direction: column;\n\n`\nexport const ObjectContainerBackground = styled.div`\n    width: 100%\n    padding: 1rem;\n    padding-top: 1.5rem;\n\n    display: flex;\n    flex-direction: column;\n    background-color: #26ab76\n\n`\nexport const ListItemIcon = styled.i`\n    font-size: 1.3rem;\n    color: ${props => props.theme.bg.primary};\n\n    &:hover {\n        cursor: pointer;\n    }\n\n`\nexport const Title = styled.h1`\n    font-family: ${props => props.theme.font.primary};\n    font-size: 1.1rem;\n    font-weight: 500;\n    color: ${props => props.theme.bg.septenary};\n    user-select: none;\n`\n\nexport const TaskContainer = styled.div`\n    background-color: ${props => props.theme.bg.secondary};\n    border-radius: 0.4rem;\n    overflow: auto;\n    // box-shadow: 0px 0px 6px 1px rgba(0,0,0,0.1);\n    scrollbar-width: thin;\n    height: 100%;\n`\n\nexport const Card = styled.div`\n    background: ${props => props.dark ? props.theme.bg.tertiary : props.theme.bg.secondary};\n    // box-shadow: 0px 0px 6px 1px rgba(0,0,0,0.1);\n    padding: 0.5rem;\n    border-radius: 0.4rem;\n\n    margin-bottom: 0.5rem;\n    margin-top: 0.5rem\n`\n\nexport const ItemContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    width: 100%;\n    height: 100%;\n    align-items: center;\n\n    padding: 0.8rem;\n\n\n`\n\nexport const Icon = styled.i`\n    font-size: 1.4rem;\n    color: ${props => props.theme.textColor};\n\n    &:hover {\n        cursor: pointer;\n    }\n`\nexport const ListItem = styled.div`\n    display: flex;\n    align-items: center;\n    width: auto;\n    height: 2.5rem;\n    text-overflow: ellipsis;\n    justify-content: space-between;\n    background: ${props => props.theme.schema['tasks'].solid};\n\n    margin-bottom: 0.5rem;\n    border-radius: 0.5rem;\n    border: 0.1rem solid;\n\n    border-color: ${props => props.error ? props.theme.error : 'transparent'};\n\n\n`\nexport const ListItemTitle = styled.h1`\n\n    font-family: ${props => props.theme.font.primary};\n    /* font-size: ${props => props.theme.fontSize.sz3}; */\n    font-size: 1rem;\n    font-weight: 500;\n    color: ${props => props.theme.bg.octonary};\n    user-select: none;\n    width: 10rem;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    margin-left: 0.5rem;\n    margin-bottom: 0rem;\n\n`\nexport const RowContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: center;\n`\n\nexport const Header = styled.h1`\n    font-size: ${props => props.theme.fontSize.sz2};\n    font-family: ${props => props.theme.font.primary};\n    color: ${props => props.theme.textColor};\n    margin-top: 1rem;\n`\n\nexport const Label = styled.h2`\n    font-size: 0.9rem;\n    font-family: ${props => props.theme.font.primary};\n    color: ${props => props.theme.textColor};\n    margin-right: 1rem;\n    line-height: 2rem;\n`\n\nexport const LabelHighlight = styled.span`\n    font-size: 1.2rem;\n    font-family: ${props => props.theme.font.primary};\n    color: ${props => props.theme.schema.tasks.solid};\n    line-height: 2rem;\n    font-weight: bold;\n\n`\n\nexport const HelpText = styled.h3`\n    font-size: ${props => props.theme.fontSize.sz4};\n    font-family: ${props => props.theme.font.primary};\n    color: ${props => props.theme.bg.quinary};\n    text-align: center;\n`\nexport const ObjectEditorText = styled.h3`\n    font-size: ${props => props.theme.fontSize.sz4};\n    font-family: ${props => props.theme.font.primary};\n    color: ${props => props.theme.textColor};\n    text-align: center;\n\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n\n    font-size: 1.2rem;\n    padding-top: 0.4rem;\n\n`\n\nexport const DirectionText = styled.h3`\n    font-size: 1rem;\n    font-family: ${props => props.theme.font.primary};\n    color: ${props => props.theme.bg.septenary};\n    text-align: center;\n`\n\nexport const DualSelectionButton = styled.button`\n    font-size: 1rem;\n    width: 50%;\n    border: none;\n    font-family: ${props => props.theme.font.primary};\n\n    color: ${props => props.selected ? props.theme.bg.octonary : props.theme.bg.quinary};\n\n    background-color: ${props => props.selected ? props.theme.schema.tasks.solid : props.theme.bg.tertiary};\n\n    transition: background-color 0.25s ease, box-shadow 0.1s ease;\n\n    &:focus{\n        outline: 0 !important\n    }\n\n    &:active{\n        box-shadow: none;\n    }\n\n    &:hover{\n        //background-color: ${props => props.theme.bg.quaternary};\n    }\n`\n","// Import utils\nimport { deepCopy } from './utils'\n\nexport const tasksSortedAlphabetically = (tasks) => {\n    const tasksCopy = deepCopy(tasks)\n\n    tasksCopy.sort((a,b) => {\n        const aName = a.name\n        const bName = b.name\n\n        if(aName < bName) return -1\n        if(aName > bName) return 1\n        return 0\n    })\n\n    return tasksCopy\n}","import uuid from 'uuid'\n\nconst RouteTask = {\n    name: '',\n    obj: null,\n    type: 'push',\n    quantity: 1,\n    // device_type: !!MiRMapEnabled ? 'MiR_100' : 'human',\n    handoff: true,\n    track_quantity: true,\n    // map_id: currentMap._id,\n    new: true,\n    process: false,\n    load: {\n        position: null,\n        station: null,\n        sound: null,\n        instructions: 'Load',\n        timeout: '01:00'\n    },\n    unload: {\n        position: null,\n        station: null,\n        sound: null,\n        instructions: 'Unload'\n    },\n    _id: uuid.v4(),\n}\n\nexport default RouteTask","import styled from \"styled-components\";\n\nexport const DefaultContainer = styled.div`\n\tposition: relative;\n`;\n\nexport const DefaultErrorContainerComponent = styled.div`\n    width: auto;\n    height: auto;\n    position: absolute;\n    top: 50%;\n    right: 2rem;\n    transform: translateY(-50%);\n    margin: 0;\n    padding: 0;\n    z-index: 500;\n`;","import React, { useContext } from \"react\";\nimport { useField, useFormikContext } from \"formik\";\nimport Switch from 'react-ios-switch';\nimport ErrorTooltip from \"../error_tooltip/error_tooltip\";\nimport PropTypes from \"prop-types\";\nimport * as styled from \"./switch_field.style\";\nimport {getMessageFromError} from \"../../../../methods/utils/form_utils\";\nimport { ThemeContext } from \"styled-components\";\n\nconst SwitchField = (props) => {\n\n    const {\n        Container,\n        containerStyle,\n        ErrorContainerComponent,\n        style,\n        onChange,\n        mapOutput,\n        mapInput,\n        schema,\n        ...rest\n    } = props\n\n    const { setFieldValue, setFieldTouched } = useFormikContext();\n    const [field, meta] = useField(props);\n\n    const themeContext = useContext(ThemeContext);\n\n    const {\n        value: fieldValue,\n        name: fieldName\n    } = field\n\n    const {\n        touched,\n        error\n    } = meta\n\n    const hasError = touched && error;\n    const errorMessage = getMessageFromError(error);\n\n    return (\n        <Container\n            style={{...containerStyle, transform: 'scale(0.9)'}}\n        >\n            <Switch\n                checked={mapInput(fieldValue)}\n                onColor={!!schema && !!themeContext.schema[schema] ? themeContext.schema[schema].solid : themeContext.schema.default.solid}\n                {...rest}\n                onChange={val => {\n                    if(!touched) setFieldTouched(fieldName, true);\n                    setFieldValue(fieldName, mapOutput(val))\n\n                    onChange && onChange(val)\n                }}\n                style={{...style}}\n            />\n            {/*<ErrorTooltip*/}\n            {/*    visible={hasError}*/}\n            {/*    text={errorMessage}*/}\n            {/*    ContainerComponent={ErrorContainerComponent}*/}\n            {/*/>*/}\n\n        </Container>\n    );\n};\n\n// Specifies propTypes\nSwitchField.propTypes = {\n    Container: PropTypes.elementType,\n    ErrorContainerComponent: PropTypes.elementType,\n    containerStyle: PropTypes.object,\n    style: PropTypes.object,\n    onChange: PropTypes.func,\n    mapInput: PropTypes.func,\n    mapOutput: PropTypes.func,\n};\n\n// Specifies the default values for props:\nSwitchField.defaultProps = {\n    Container: styled.DefaultContainer,\n    ErrorContainerComponent: styled.DefaultErrorContainerComponent,\n    containerStyle: {},\n    style: {},\n    onChange: () => {},\n    mapInput: (val) => val,\n    mapOutput: (val) => val\n};\n\nexport default SwitchField;\n","import React, { useEffect, useContext } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\n// Import Styles\nimport * as styled from '../../tasks_content.style'\n\n// Import basic components\nimport Switch from 'react-ios-switch';\nimport moment from 'moment';\nimport TimePicker from 'rc-time-picker';\nimport DropDownSearch from '../../../../../basic/drop_down_search_v2/drop_down_search'\nimport Textbox from '../../../../../basic/textbox/textbox.js'\n\n// Import actions\nimport { setSelectedTask, setTaskAttributes } from '../../../../../../redux/actions/tasks_actions'\nimport { isHumanTask, isMiRandHumanTask, isMiRTask, isOnlyHumanTask } from \"../../../../../../methods/utils/route_utils\";\nimport { DEVICE_CONSTANTS } from \"../../../../../../constants/device_constants\";\nimport SwitchField from \"../../../../../basic/form/switch_field/switch_field\";\nimport TimePickerField from \"../../../../../basic/form/time_picker_field/time_picker_field\";\nimport TextField from \"../../../../../basic/form/text_field/text_field\";\nimport DropDownSearchField from \"../../../../../basic/form/drop_down_search_field/drop_down_search_field\";\nimport { isArray } from \"../../../../../../methods/utils/array_utils\";\nimport { isString } from \"../../../../../../methods/utils/string_utils\";\nimport { isObject } from \"../../../../../../methods/utils/object_utils\";\nimport { ThemeContext } from 'styled-components';\n\nconst LoadUnloadFields = (props) => {\n\n    const {\n        fieldParent,\n        setFieldValue,\n        values,\n        isProcess\n    } = props\n    const dispatch = useDispatch()\n    const dispatchSetSelectedTask = (task) => dispatch(setSelectedTask(task))\n    const dispatchSetTaskAttributes = (id, attr) => dispatch(setTaskAttributes(id, attr))\n\n    let selectedTask = useSelector(state => state.tasksReducer.selectedTask)\n    const sounds = useSelector(state => state.soundsReducer.sounds)\n    const stations = useSelector(state => state.stationsReducer.stations)\n\n    const themeContext = useContext(ThemeContext)\n\n    // This handles if any position of a route is a human position, then it cant be done by a robot\n    let humanLocation = false\n    const mirEnabled = isMiRTask(selectedTask)\n\n    if ((!!stations[selectedTask.load.position] && stations[selectedTask.load.position].type === 'human') || (!!stations[selectedTask.unload.position] && stations[selectedTask.unload.position].type === 'human')) {\n        humanLocation = true\n\n        if (!isOnlyHumanTask(selectedTask)) {\n            dispatchSetSelectedTask({\n                ...selectedTask,\n                device_types: [DEVICE_CONSTANTS.HUMAN],\n            })\n        }\n    }\n    else if (!isMiRandHumanTask(selectedTask)) {\n        dispatchSetSelectedTask({\n            ...selectedTask,\n            device_types: [DEVICE_CONSTANTS.HUMAN, DEVICE_CONSTANTS.MIR_100],\n        })\n    }\n\n    return (\n        <>\n            {/*{!humanLocation &&*/}\n            {/*    <>*/}\n            {/*        <styled.RowContainer>*/}\n            {/*            <styled.Header>Robot Enabled</styled.Header>*/}\n            {/*            <SwitchField*/}\n            {/*                name={fieldParent ? `${fieldParent}.device_types` : \"device_types\"}*/}\n            {/*                // checked={mirEnabled}*/}\n            {/*                mapInput={(devices)=> {*/}\n            {/*                    if(devices.includes(DEVICE_CONSTANTS.MIR_100) && devices.includes(DEVICE_CONSTANTS.HUMAN)) {*/}\n            {/*                        return true*/}\n            {/*                    }*/}\n            {/*                    else {*/}\n            {/*                        return false*/}\n            {/*                    }*/}\n            {/*                }}*/}\n            {/*                mapOutput={(enable) => {*/}\n            {/*                    if(enable) {*/}\n            {/*                        return([DEVICE_CONSTANTS.MIR_100, DEVICE_CONSTANTS.HUMAN])*/}\n            {/*                    }*/}\n            {/*                    else {*/}\n            {/*                        return([DEVICE_CONSTANTS.HUMAN])*/}\n            {/*                    }*/}\n            {/*                }}*/}\n            {/*                onColor='red'*/}\n            {/*                style={{ marginRight: '1rem' }}*/}\n            {/*            />*/}\n\n            {/*        </styled.RowContainer>*/}\n            {/*        <styled.HelpText>Do you want a robot to perform this task? If selected, there will be an option for a person to take over the task when the button is placed onto the dashboard.</styled.HelpText>*/}\n            {/*    </>*/}\n            {/*}*/}\n\n            <styled.Card dark={isProcess}>\n\n                <styled.RowContainer>\n\n                    <styled.Header style={{ marginTop: '0rem', marginRight: \".5rem\", fontSize: '1.2rem' }}>Load</styled.Header>\n\n                </styled.RowContainer>\n\n                <TextField\n                    name={fieldParent ? `${fieldParent}.load.instructions` : \"load.instructions\"}\n                    schema={'tasks'}\n                    focus={!!selectedTask && selectedTask.type == null}\n                    lines={2}\n                    InputComponent={Textbox}\n                    inputStyle={!isProcess ? { background: themeContext.bg.primary } : {}}\n                />\n\n                {!humanLocation &&\n\n                    <div style={{ display: \"flex\", flexDirection: \"row\", marginTop: \"0.5rem\" }}>\n                        <styled.Label style={{ width: \"70%\" }}>Timeout (mm:ss): </styled.Label>\n\n                        <TimePickerField\n                            mapInput={(value) => {\n                                if (value) {\n                                    const splitVal = value.split(':')\n                                    return moment().set({ 'minute': splitVal[0], 'second': splitVal[1] })\n                                }\n                            }}\n                            mapOutput={(value) => {\n                                return value.format(\"mm:ss\")\n                            }}\n                            name={fieldParent ? `${fieldParent}.load.timeout` : \"load.timeout\"}\n                            style={{ flex: '0 0 7rem', display: 'flex', flexWrap: 'wrap', textAlign: 'center', backgroundColor: '#6c6e78' }}\n                            showHour={false}\n                            schema={'tasks'}\n                            className=\"xxx\"\n                            autocomplete={\"off\"}\n                            allowEmpty={false}\n                            defaultOpenValue={!!selectedTask.load.timeout ? moment().set({ 'minute': selectedTask.load.timeout.split(':')[0], 'second': selectedTask.load.timeout.split(':')[1] }) : moment().set({ 'minute': 1, 'second': 0 })}\n                            defaultValue={!!selectedTask.load.timeout ? moment().set({ 'minute': selectedTask.load.timeout.split(':')[0], 'second': selectedTask.load.timeout.split(':')[1] }) : moment().set({ 'minute': 1, 'second': 0 })}\n                            onChange={(time) => {\n                                dispatchSetSelectedTask({\n                                    ...selectedTask,\n                                    load: {\n                                        ...selectedTask.load,\n                                        timeout: time.format(\"mm:ss\")\n                                    }\n                                })\n                            }}\n                        />\n                    </div>\n                }\n\n                {!isOnlyHumanTask(selectedTask) &&\n                    <div style={{ display: \"flex\", flexDirection: \"row\", marginTop: \"0rem\" }}>\n                        <styled.Label>Sound: </styled.Label>\n                        <DropDownSearchField\n                            name={fieldParent ? `${fieldParent}.load.sound` : \"load.sound\"}\n                            placeholder=\"Select Sound\"\n                            label=\"Sound to be played upon arrival\"\n                            labelField=\"name\"\n                            valueField=\"name\"\n                            options={Object.values(sounds)}\n                            mapInput={(val) => {\n                                if (isString(val) && isObject(sounds[val])) return [sounds[val]]\n                                return []\n                            }}\n                            mapOutput={(val) => {\n                                let output = null\n                                if (isArray(val) && val.length > 0) {\n                                    output = val[0]?._id || null\n                                }\n                                return output\n                            }}\n                            // values={!!selectedTask.load.sound ? [sounds[selectedTask.load.sound]] : []}\n                            dropdownGap={2}\n                            style={!isProcess ? { background: themeContext.bg.primary } : {}}\n                            noDataLabel=\"No matches found\"\n                            closeOnSelect=\"true\"\n                            className=\"w-100\"\n                            schema=\"tasks\" />\n                    </div>\n                }\n\n            </styled.Card>\n\n            {/* <styled.Card dark={isProcess}> */}\n                {/* If its a human task, then the task can also be defined as a handoff.\n                    A handoff does not require unload confirmation.\n                    COMMENTED OUT ON 05/11/2021\n                    Moving to lot dashboard and no customers use this feature\n                */}\n                {/* {isHumanTask(selectedTask) &&\n                    <styled.ContentContainer style={{ padding: '0rem 0.3rem 0rem 0.3rem' }}>\n                        <styled.RowContainer style={{ justifyContent: \"space-between\" }}>\n                            <styled.Label style={{ marginBottom: '0rem' }}>\n                                {\"Confirm Unload\"}\n                            </styled.Label>\n\n                            <SwitchField\n                                mapInput={(val) => !val}\n                                mapOutput={(val) => !val}\n                                name={fieldParent ? `${fieldParent}.handoff` : \"handoff\"}\n                                onColor='red'\n                                containerStyle={{ marginRight: '0rem' }}\n                            />\n                        </styled.RowContainer>\n                        <styled.HelpText style={{ fontSize: \"0.8rem\", paddingTop: \"1rem\" }}>\n                            Tracks transit time by requiring button to be pressed at unload location\n                        </styled.HelpText>\n\n                        {isMiRTask(selectedTask) &&\n                            <styled.HelpText>\n                                (Not used when executed by a robot)\n                            </styled.HelpText>\n                        }\n\n                    </styled.ContentContainer>\n                } */}\n            {/* </styled.Card> */}\n\n            {/* Hides the unload field if its a handoff task */}\n            {(isMiRTask(selectedTask)) &&\n\n                <styled.Card dark={isProcess}>\n                    <styled.Header style={{ marginTop: '0rem', marginRight: \".5rem\", fontSize: '1.2rem' }}>Unload</styled.Header>\n                    <TextField\n                        name={fieldParent ? `${fieldParent}.unload.instructions` : \"unload.instructions\"}\n                        schema={'tasks'}\n                        focus={!!selectedTask && selectedTask.type == null}\n                        lines={2}\n                        InputComponent={Textbox}\n                        inputStyle={!isProcess ? { background: themeContext.bg.primary } : {}}\n                    />\n\n                    {/* If its a human task, then you shouldnt require people to make noises. I personally would though...  */}\n                    {!isOnlyHumanTask(selectedTask) &&\n\n                        <div style={{ display: \"flex\", flexDirection: \"row\", marginTop: \"0.5rem\" }}>\n                            <styled.Label>Sound </styled.Label>\n                            <DropDownSearchField\n                                name={fieldParent ? `${fieldParent}.unload.sound` : \"unload.sound\"}\n                                placeholder=\"Select Sound\"\n                                label=\"Sound to be played upon arrival\"\n                                labelField=\"name\"\n                                valueField=\"name\"\n                                options={Object.values(sounds)}\n                                dropdownGap={2}\n                                noDataLabel=\"No matches found\"\n                                closeOnSelect=\"true\"\n                                mapInput={(val) => {\n                                    if (isString(val) && isObject(sounds[val])) return [sounds[val]]\n                                    return []\n                                }}\n                                mapOutput={(val) => {\n                                    let output = null\n                                    if (isArray(val) && val.length > 0) {\n                                        output = val[0]?._id || null\n                                    }\n                                    return output\n                                }}\n                                className=\"w-100\"\n                                schema=\"tasks\"\n                                style={!isProcess ? { background: themeContext.bg.primary } : {}}\n                            />\n                        </div>\n                    }\n                </styled.Card>\n            }\n\n\n\n\n\n            {/* {selectedTask.device_type === 'MiR_100' &&\n                    <>\n                        <styled.Header>Idle Location</styled.Header>\n                        <DropDownSearch\n                            placeholder=\"Select Location\"\n                            label=\"Idle Location for MiR Cart\"\n                            labelField=\"name\"\n                            valueField=\"name\"\n                            options={Object.values(positions)}\n                            values={!!selectedTask.idle_location ? [positions[selectedTask.idle_location]] : []}\n                            dropdownGap={2}\n                            noDataLabel=\"No matches found\"\n                            closeOnSelect=\"true\"\n                            onChange={values => {\n\n                                const idleLocation = values[0]._id\n\n                                dispatchSetSelectedTask({\n                                    ...selectedTask,\n                                    idle_location: idleLocation,\n                                })\n                            }}\n                            className=\"w-100\"\n                            schema=\"tasks\"\n                        />\n                    </>\n                } */}\n\n\n        </>\n    )\n};\n\nexport default LoadUnloadFields\n","import styled, { css } from 'styled-components'\nimport { LightenDarkenColor } from '../../../../../methods/utils/color_utils'\n\nexport const ListItem = styled.div`\n    display: flex;\n    align-items: center;\n    width: auto;\n    height: 2.5rem;\n    text-overflow: ellipsis;\n    justify-content: space-between;\n    background: ${props => props.theme.schema['objects'].solid};\n\n    &:hover {\n        background: ${props => LightenDarkenColor(props.theme.schema['objects'].solid, 10)};\n    }\n\n    margin-left: .5rem;\n    margin-right: .5rem;\n    margin-top: 0rem;\n    margin-bottom: 0.5rem;\n    border-radius: 0.5rem;\n    border: 0.1rem solid;\n\n    border-color: ${props => props.error ? props.theme.error : 'transparent'};\n\n\n\n`\nexport const ObjectContainer = styled.div`\n    display: flex;\n    flex-grow: .5rem;\n\n    flex-direction: column;\n    margin-top: 0rem;\n    margin-bottom: 1rem;\n    padding-top: .2rem;\n    background-color: ${props => props.theme.bg.primary};\n    border-radius: 0.5rem;\n\n    box-shadow: 0px 0px 6px 1px rgba(0,0,0,0.1);\n`\nexport const QuantityInput = styled.input`\n    margin-top: 1rem;\n    align-self: flex-start;\n    background-color: #6c6e78;\n    color: white;\n    border-radius: .5rem;\n    text-align: center;\n    max-width: 4rem;\n    height: 2rem;\n    font-size: 1rem;\n    -webkit-appearance: none !important;\n    &:focus{\n        outline: 0 !important;\n        border-color: #26ab76;\n    }\n\n    ::placeholder{\n      color: ${props => props.theme.bg.senary};\n    }\n`\n\nexport const ScrollableContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    overflow: auto;\n    width: 100%;\n    max-height: 15rem;\n\n    ::-webkit-scrollbar {\n    }\n    ::-webkit-scrollbar-thumb {\n    }\n\n`\n\nexport const CountInput = styled.input`\n\twidth: fit-content;\n`\n\nexport const ListItemTitle = styled.h1`\n\n    font-family: ${props => props.theme.font.primary};\n    /* font-size: ${props => props.theme.fontSize.sz3}; */\n    font-size: 1rem;\n    font-weight: 500;\n    color: ${props => props.theme.bg.octonary};\n    user-select: none;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    margin-left: 0.5rem;\n    margin-right: 1rem;\n    margin-bottom: 0rem;\n\n    text-align: center;\n\n`\n\nexport const ListItemIcon = styled.i`\n\n    font-size: 1.3rem;\n    color: ${props => props.theme.bg.primary};\n    padding-left: 0.8rem;\n\n    &:hover {\n        cursor: pointer;\n    }\n`\nexport const RowContainer = styled.div`\n    display: flex;\n    flex: 1;\n    justify-content: space-between;\n    flex-direction: row;\n    margin-bottom: .5rem;\n    align-items: center;\n`\nexport const HoverContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    width: 80%;\n    height: 100%;\n    padding-top: .5rem;\n\n    &:hover {\n        cursor: pointer;\n    }\n\n`\nexport const ColumnContainer = styled.div`\n    width: 100%\n    justify-content: center;\n    margin-bottom: .5rem;\n\n`\n","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useLocation, useParams } from 'react-router-dom'\n\n\nimport BackButton from '../../../../basic/back_button/back_button'\nimport Button from '../../../../basic/button/button'\nimport TextField from '../../../../basic/form/text_field/text_field'\nimport Textbox from '../../../../basic/textbox/textbox'\nimport PlusButton from '../../../../basic/plus_button/plus_button'\n\n// Import actions\nimport { setSelectedStation } from '../../../../../redux/actions/stations_actions'\nimport { handlePostTaskQueue } from '../../../../../redux/actions/task_queue_actions'\nimport {setSelectedObject, setRouteObject, setEditingObject} from '../../../../../redux/actions/objects_actions'\n\n// Import styles\nimport * as styled from './object_editor.style'\nimport theme from '../../../../../theme'\n\nconst ObjectEditor = (props) => {\n\n  const {\n    onBackClick,\n    name,\n    description,\n    focus,\n    onSaveObject,\n    onAddObject,\n    onDeleteObject,\n    onSelectObject,\n    disabled,\n    saveDisabled,\n    deleteDisabled,\n  } = props\n\n    const dispatch = useDispatch()\n    const dispatchSetSelectedStation = (station) => dispatch(setSelectedStation(station))\n    const dispatchSetSelectedObject = (object) => dispatch(setSelectedObject(object))\n    const dispatchSetEditingObject = (bool)=>dispatch(setEditingObject(bool))\n\n    const stations = useSelector(state => state.stationsReducer.stations)\n    const objects = useSelector(state => state.objectsReducer.objects)\n    const selectedTask = useSelector(state => state.tasksReducer.selectedTask)\n    const editingObject = useSelector(state=> state.objectsReducer.editingObject)\n    const selectedObject = useSelector(state => state.objectsReducer.selectedObject)\n    const routeObject = useSelector(state=>state.objectsReducer.routeObject)\n    const [pageName, setPageName] = useState('')\n    const url = useLocation().pathname\n\n      return (\n          <styled.ObjectContainer>\n            <styled.RowContainer>\n                <BackButton\n                  style = {{ color: theme.main.schema['objects'].solid, marginBottom:'2rem'}}\n                  containerStyle={{borderColor: theme.main.schema['objects'].solid }}\n                  schema = {'objects'}\n                  onClick = {onBackClick}\n\n                />\n                {!editingObject ?\n                  <styled.ListItemTitle style = {{fontSize:'1.2rem', paddingLeft:'.5rem', width: '75%', textAlign: \"start\"}}>Pick Object</styled.ListItemTitle>\n                  :\n                  <styled.ListItemTitle style = {{fontSize:'1.2rem', paddingLeft:'.5rem', width: '75%', textAlign: \"start\"}}>Editing Object</styled.ListItemTitle>\n\n                }\n                {!editingObject ?\n                  <PlusButton\n                    style={{marginTop: '0.2rem', color: theme.main.schema['objects'].solid}}\n                    onClick = {()=>{\n                      dispatchSetEditingObject(true)\n                      onAddObject()\n                    }}\n                  />\n                  :\n                  <div\n                    style = {{width: \"2.5rem\"}}\n                  />\n                }\n\n              </styled.RowContainer>\n\n              {!editingObject ?\n              <styled.ScrollableContainer>\n              {Object.values(objects).map((object) => {\n\n                return (\n                  <>\n                    <styled.ListItem\n                      onMouseEnter = {()=>dispatchSetSelectedObject(object)}\n                      onMouseLeave = {()=>dispatchSetSelectedObject(null)}\n\n                    >\n                    <styled.HoverContainer onClick = {onSelectObject}>\n                        <styled.ListItemIcon\n                            className='fas fa-box'\n                        />\n                        <styled.ListItemTitle>{object.name}</styled.ListItemTitle>\n                      </styled.HoverContainer>\n                      <styled.ListItemIcon\n                          className='fas fa-edit'\n                          style={{ color: 'white', marginRight: '0.5rem' }}\n                          onClick = {()=>dispatchSetEditingObject(true)}\n                      />\n                    </styled.ListItem>\n                  </>\n                )\n              })}\n            </styled.ScrollableContainer>\n            :\n            <>\n                  <styled.ListItemTitle style = {{marginBottom: '0.2rem', textAlign: \"start\", paddingLeft: \"0.2rem\"}}>Name</styled.ListItemTitle>\n\n                  <styled.RowContainer style = {{paddingLeft:'0.5rem', paddingRight: '0.5rem'}}>\n                    <TextField\n                        autoFocus\n                        InputComponent={Textbox}\n                        name={name}\n                        placeholder={\"Object Name\"}\n                        schema={'objects'}\n                        focus={focus}\n                        style={{ fontSize: '1.2rem', fontWeight: '600'}}\n                    />\n                  </styled.RowContainer>\n\n                  <styled.ListItemTitle style = {{marginBottom: '0.2rem', marginTop: '0.5rem', textAlign: \"start\", paddingLeft: \"0.2rem\"}}>Description</styled.ListItemTitle>\n\n                  <styled.RowContainer style = {{paddingLeft:'0.5rem', paddingRight: '0.5rem'}}>\n                    <TextField\n                        InputComponent={Textbox}\n                        name={description}\n                        placeholder={\"Add a Description...\"}\n                        schema={'objects'}\n                        //focus={focus}\n                        style={{ fontSize: '0.9rem', fontWeight: '600'}}\n                        lines = {2}\n                    />\n                  </styled.RowContainer>\n\n                  <styled.RowContainer style = {{marginTop: '0.5rem'}}>\n                    <Button\n                        schema={'objects'}\n                        style = {{width: '50%'}}\n                        secondary\n                        disabled = {saveDisabled}\n                        onClick= {()=>{\n                          onSaveObject()\n\n                        }}\n\n                    >\n                        Save\n                    </Button>\n                    <Button\n                        schema={'error'}\n                        style = {{width: '50%'}}\n                        secondary\n                        disabled = {deleteDisabled}\n                        onClick={() => {\n                          onDeleteObject()\n                          dispatchSetEditingObject(false)\n                        }}\n                    >\n                        Delete\n                    </Button>\n                </styled.RowContainer>\n            </>\n          }\n\n\n            </styled.ObjectContainer>\n          )\n    }\n\n\nexport default ObjectEditor\n","import {\n  WIDGET_PAGE_LOADED,\n  WIDGET_XY_COORDINATES,\n  WIDGET_LOADED,\n  HOVER_STATION_INFO,\n\n} from '../types/widget_types'\n\nexport const widgetPageLoaded = (state) => {\n    return { type: WIDGET_PAGE_LOADED, payload: state}\n}\n\nexport const widgetXYCoordinates = (state) => {\n    return { type: WIDGET_XY_COORDINATES, payload: state}\n}\n\nexport const widgetLoaded = (state) => {\n    return { type: WIDGET_LOADED, payload: state}\n}\n\nexport const hoverStationInfo = (info) => {\n    return { type: HOVER_STATION_INFO, payload: { info } }\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport PropTypes from 'prop-types';\n\nclass ClickOutside extends React.Component {\n  container = React.createRef();\n\n  componentDidMount() {\n    document.addEventListener('click', this.handleClick, {capture:true, passive:true});\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('click', this.handleClick, {capture:true, passive:true});\n  }\n\n  handleClick = (event) => {\n    const container = this.container.current;\n    const { target } = event;\n    const { onClickOutside } = this.props;\n\n    if ((container && container === target) || (container && !container.contains(target))) {\n      onClickOutside(event);\n    }\n  };\n\n  render() {\n    const { className, children, ClickOutsideComponent } = this.props;\n\n    return (\n      <ClickOutsideComponent className={className} ref={this.container}>\n        {children}\n      </ClickOutsideComponent>\n    );\n  }\n}\n\nconst DefaultClickOutsideComponent = styled.div`\n\n`;\n\nClickOutside.propTypes = {\n  onClickOutside: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string\n};\n\nClickOutside.defaultProps = {\n  ClickOutsideComponent: DefaultClickOutsideComponent\n};\n\n\nexport default ClickOutside;\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport styled from 'styled-components'\n\nimport { LightenDarkenColor } from '../../../../methods/utils/color_utils'\n\nfunction Label(props) {\n    return (\n        <props.LabelComponent schema={props.schema}>\n            {props.label}\n        </props.LabelComponent>\n    )\n}\n\nconst DefaultLabelComponent = styled.div`\n    width: 100%;\n\n    font-family: ${props => props.theme.font.primary};\n\n    text-align: center;\n    font-weight: 200;\n    color: ${props => !!props.schema ? props.theme.schema[props.schema].solid : props.theme.fg.primary};\n    font-size: ${props => props.theme.fontSize.sz5};\n    background: ${props => LightenDarkenColor(props.theme.bg.quinary, -10)};\n    cursor: default;\n`\n\nLabel.propTypes = {\n    LabelComponent: PropTypes.elementType,\n    label: PropTypes.string,\n}\n\nLabel.defaultProps = {\n    LabelComponent: DefaultLabelComponent,\n    label: '',\n}\n\nexport default Label\n\n","export const valueExistInSelected = (value, values, props) =>\n  !!values.find((val) => getByPath(val, props['valueField']) === value);\n\nexport const hexToRGBA = (hex, alpha) => {\n  const RR = parseInt(hex.slice(1, 3), 16);\n  const GG = parseInt(hex.slice(3, 5), 16);\n  const BB = parseInt(hex.slice(5, 7), 16);\n\n  return `rgba(${RR}, ${GG}, ${BB}${alpha && `, ${alpha}`})`;\n};\n\nexport const debounce = (fn, delay = 0) => {\n  let timerId;\n\n  return (...args) => {\n    if (timerId) {\n      clearTimeout(timerId);\n    }\n    timerId = setTimeout(() => {\n      fn(...args);\n      timerId = null;\n    }, delay);\n  };\n};\n\nexport const isEqual = (a, b) => JSON.stringify(a) === JSON.stringify(b);\n\nexport const getByPath = (object, path) => {\n  // console.log('getByPath: {object, path}', {object, path})\n\n  let new_path = path.split('.')\n  // console.log('getByPath: new_path', {new_path})\n\n  if (!path) {\n    return;\n  }\n\n  return path.split('.').reduce((acc, value) => acc[value], object)\n};\n\nexport const getProp = (object, path, defaultValue) => {\n  if (!path) {\n    return object;\n  }\n\n  const normalizedPath = Array.isArray(path) ? path : path.split('.').filter((item) => item.length);\n\n  if (!normalizedPath.length) {\n    return object === undefined ? defaultValue : object;\n  }\n\n  return getProp(object[normalizedPath.shift()], normalizedPath, defaultValue);\n};\n","export const LIB_NAME = 'react-dropdown-select';\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport {getByPath} from '../util';\nimport { LIB_NAME } from '../constants';\n\nconst Option = ({ item, props, state, methods }) => {\n\n    const OptionComponent = props.OptionComponent ? props.OptionComponent : DefaultOptionComponent\n    return(\n        item && props.optionRenderer ? (\n          props.optionRenderer({ item, props, state, methods })\n        ) : (\n          <OptionComponent\n            role=\"listitem\"\n            disabled={props.disabled}\n            direction={props.direction}\n            className={`${LIB_NAME}-option`}\n            color={props.color}>\n            <span className={`${LIB_NAME}-option-label`}>{getByPath(item, props.labelField)}</span>\n            <span\n              className={`${LIB_NAME}-option-remove`}\n              onClick={(event) => methods.removeItem(event, item, props.closeOnSelect)}>\n              &times;\n            </span>\n          </OptionComponent>\n        )\n    );\n\n}\n\nexport const DefaultOptionComponent = styled.span`\n\n  padding: 0 5px;\n  border-radius: 2px;\n  line-height: 21px;\n  margin: 3px 0 3px 5px;\n  background: ${({ color }) => color};\n  color: #fff;\n  display: flex;\n  flex-direction: ${({ direction }) => direction === 'rtl' ? 'row-reverse' : 'row'};\n\n\n  .${LIB_NAME}-option-remove {\n    cursor: pointer;\n    width: 22px;\n    height: 22px;\n    display: inline-block;\n    text-align: center;\n    margin: 0 -5px 0 0px;\n    border-radius: 0 3px 3px 0;\n\n    :hover {\n      color: tomato;\n    }\n  }\n\n  :hover,\n  :hover > span {\n    opacity: 0.9;\n  }\n\n`;\n\n\n// Specifies the default values for props:\nOption.defaultProps = {\n    OptionComponent: DefaultOptionComponent,\n};\n\nexport default Option;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { valueExistInSelected } from '../util';\nimport * as PropTypes from 'prop-types';\nimport { LIB_NAME } from '../constants';\n\nimport { LightenDarkenColor } from '../../../../methods/utils/color_utils'\n\nconst handlePlaceHolder = (props, state) => {\n  const { addPlaceholder, searchable, placeholder } = props;\n  const noValues = state.values && state.values.length === 0;\n  const hasValues = state.values && state.values.length > 0;\n\n  if (hasValues && addPlaceholder && searchable) {\n    return addPlaceholder;\n  }\n\n  if (noValues) {\n    return placeholder;\n  }\n\n  if (hasValues && !searchable) {\n    return '';\n  }\n\n  return '';\n};\n\nclass Input extends Component {\n  input = React.createRef();\n\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.state.textbox || (prevProps.state.textbox !== this.props.state.textbox && this.props.state.textbox) ||\n      this.props.props.autoFocus\n    ) {\n      this.input.current.focus();\n    }\n\n    if (prevProps.state.textbox !== this.props.state.textbox && !this.props.state.textbox) {\n       this.input.current.blur();\n    }\n  }\n\n  onBlur = (event) => {\n    event.stopPropagation();\n    if (!this.props.state.textbox) {\n      return this.input.current.blur();\n    }\n\n    return this.input.current.focus();\n  };\n\n  handleKeyPress = (event) => {\n    const { props, state, methods } = this.props;\n\n    return (\n      props.create &&\n      event.key === 'Enter' &&\n      !valueExistInSelected(state.search, state.values, this.props) &&\n      state.search &&\n      state.cursor === null &&\n      methods.createNew(state.search)\n    );\n  };\n\n  render() {\n    const { props, state, methods, InputComponent } = this.props;\n\n    if (props.inputRenderer) {\n      return props.inputRenderer({ props, state, methods, inputRef: this.input });\n    }\n\n    return (\n      <InputComponent\n        ref={this.input}\n        tabIndex=\"-1\"\n        onFocus={(event) => {\n          event.stopPropagation()\n          methods.setSearch({target: {value: !!state.currentValue ? state.currentValue : ''}})\n        }}\n        className={`${LIB_NAME}-input`}\n        size={methods.getInputSize()}\n        value={state.currentValue}\n        readOnly={!props.searchable}\n        onClick={() => methods.dropDown('open')}\n        onKeyPress={this.handleKeyPress}\n        onChange={(e) => {\n          methods.setSearch(e)\n          methods.setValue(e.target.value)\n          props.onChange([{name: e.target.value}])\n        }}\n        onBlur={this.onBlur}\n        placeholder={handlePlaceHolder(props, state)}\n        disabled={props.disabled}\n        filled={props.filled}\n      />\n    );\n  }\n}\n\nexport const TextboxInput = styled.input`\n    background-color: white;\n    border: none;\n    font-size: 1.2rem;\n    font-family: ${props => props.theme.font.primary};\n    font-weight: 500;\n    display: flex;\n    flex-grow: 1;\n    font-color: black;\n\n    margin: 0 0.5rem 0 0.5rem;\n\n    &:focus {\n      outline: none !important;\n  }\n\n    &::placeholder {\n        font-size: ${props => props.theme.fontSize.sz4};\n        font-family: ${props => props.theme.font.secondary};\n        color: ${props => props.theme.bg.hexanary};\n    }\n`;\n\n// export const DefaultInputComponent = styled.input`\n//     cursor: pointer;\n//     line-height: inherit;\n\n//     // width: ${props => props.filled ? `calc(${props.size}ch + 5px)` : `100%`};\n//     width: ${props => `calc(${props.size}ch + 5px)`};\n\n//     border: none;\n//     margin-left: 5px;\n//     background: transparent;\n//     font-size: smaller;\n//     ${({ readOnly }) => readOnly && 'cursor: pointer;'}\n//     :focus {\n//       outline: none;\n//     }\n\n//     vertical-align: middle;\n//     line-height: 2rem;\n//     height: 2rem;\n\n//     &::placeholder {\n//       color: ${props => props.theme.bg.senary};\n//     }\n//     `;\n\nInput.propTypes = {\n    props: PropTypes.object,\n    state: PropTypes.object,\n    methods: PropTypes.object\n};\n\nInput.defaultProps = {\n    InputComponent: TextboxInput\n};\n\nexport default Input;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport Option from './Option';\nimport Input from './Input';\nimport { LIB_NAME } from '../constants';\nimport {getByPath} from '../util';\n\nconst Content = ({ props, state, methods, ContentComponent, InputComponent }) => {\n  return (\n    <ContentComponent\n      className={`${LIB_NAME}-content ${\n        props.multi ? `${LIB_NAME}-type-multi` : `${LIB_NAME}-type-single`\n      }`}\n      onClick={(event) => {\n        event.stopPropagation();\n        methods.dropDown('open');\n      }}>\n      {props.contentRenderer ? (\n        props.contentRenderer({ props, state, methods })\n      ) : (\n\n        <React.Fragment>\n          <Input InputComponent={InputComponent} props={props} methods={methods} state={state} />\n        </React.Fragment>\n      )}\n    </ContentComponent>\n  );\n};\n\nexport const Value = styled.div`\n  margin-left: 0.3rem;\n  margin-right: 0.2rem;\n  line-height: 1.8rem;\n  font-size: ${props => props.theme.fontSize.sz3};\n  width: 100%;\n`\n\nexport const DefaultContentComponent = styled.div`\n  position: relative;\n  background: white;\n\n  display: flex;\n  flex-grow: 1;\n  // flex-wrap: nowrap;\n\n  overflow: hidden;\n  word-break: break-all;\n  // white-space: nowrap;\n  text-overflow: ellipsis;\n`;\n\n// Specifies the default values for props:\nContent.defaultProps = {\n    ContentComponent: DefaultContentComponent,\n};\n\nexport default Content;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { LIB_NAME } from '../constants';\n\nimport { LightenDarkenColor } from '../../../../methods/utils/color_utils'\n\nconst NoData = ({ props, state, methods, NoDataComponent }) =>\n\n  props.noDataRenderer ? (\n    props.noDataRenderer({ props, state, methods })\n  ) : (\n    <NoDataComponent id={'bob5'} className={`${LIB_NAME}-no-data`} color={props.color} schema={props.schema}>\n      {props.noDataLabel}\n    </NoDataComponent>\n  );\n\nconst DefaultNoDataComponent = styled.div`\n  text-align: center;\n  font-weight: 200;\n  color: ${props => !!props.schema ? props.theme.schema[props.schema].solid : props.theme.fg.primary};\n  font-size: ${props => props.theme.fontSize.sz5};\n  background: ${props => LightenDarkenColor(props.theme.bg.quinary, -10)};\n  cursor: default;\n`;\n\nNoData.defaultProps = {\n  NoDataComponent: DefaultNoDataComponent\n};\n\nexport default NoData;\n","import React, { Component } from 'react';\nimport styled from 'styled-components'\nimport { getByPath } from '../util';\nimport * as PropTypes from 'prop-types';\nimport { LIB_NAME } from '../constants';\n\nimport { LightenDarkenColor, hexToRGBA } from '../../../../methods/utils/color_utils'\n\nclass Item extends Component {\n  item = React.createRef();\n\n  componentDidUpdate() {\n    if (this.props.state.cursor === this.props.itemIndex) {\n      this.item.current &&\n        this.item.current.scrollIntoView({ behavior: 'smooth', block: 'nearest', inline: 'start' });\n    }\n  }\n\n  render() {\n    // console.log('Item render this.props',this.props)\n    const { props, state, methods, item, itemIndex, ItemComponent, ContentContainer, ButtonComponent, TextComponent } = this.props;\n\n    if (props.itemRenderer) {\n      return props.itemRenderer({ item, itemIndex, props, state, methods });\n    }\n\n    if (!props.keepSelectedInList && methods.isSelected(item)) {\n      return null;\n    }\n\n    // console.log('item ItemComponent', ItemComponent)\n    //const { ItemComponent } = this.props;\n\n    return (\n      <ItemComponent\n        role=\"option\"\n        ref={this.item}\n        aria-selected={methods.isSelected(item)}\n        aria-disabled={item.disabled}\n        disabled={item.disabled}\n        aria-label={getByPath(item, props.labelField)}\n        key={`${getByPath(item, props.valueField)}${getByPath(item, props.labelField)}`}\n        tabIndex=\"-1\"\n        className={`${LIB_NAME}-item ${\n          methods.isSelected(item) ? `${LIB_NAME}-item-selected` : ''\n        } ${state.cursor === itemIndex ? `${LIB_NAME}-item-active` : ''} ${\n          item.disabled ? `${LIB_NAME}-item-disabled` : ''\n        }`}\n        onClick={item.disabled ? undefined : () => {console.log(item); methods.addItem(item); methods.setValue(item.name)}}\n        onKeyPress={item.disabled ? undefined : () => methods.addItem(item)}\n        color={props.color}\n        schema={props.schema}>\n\n            <TextComponent>\n              {getByPath(item, props.labelField)} {item.disabled && <ins>{props.disabledLabel}</ins>}\n            </TextComponent>\n\n\n\n            {props.showButton && !!props.onDetailsClick &&\n              <ButtonComponent className='fas fa-ellipsis-h'\n                  onClick={(e) => {\n                    if (!e) var e = window.event;\n                    e.cancelBubble = true;\n                    if (e.stopPropagation) e.stopPropagation();\n                    props.onDetailsClick(item.id);\n                  }}>\n              </ButtonComponent>\n            }\n\n      </ItemComponent>\n    );\n  }\n}\n\nItem.propTypes = {\n  props: PropTypes.any,\n  state: PropTypes.any,\n  methods: PropTypes.any,\n  item: PropTypes.any,\n  itemIndex: PropTypes.any,\n  showButton: PropTypes.bool,\n};\n\nexport const DefaultItemComponent = styled.span`\n\n  padding: .5rem 1rem .5rem calc(1rem - 5px);\n  margin-top: 1rem;\n  cursor: pointer;\n  white-space: nowrap;\n  display: flex;\n  justify-content: space-between;\n  font-family: ${props => props.theme.font.primary};\n  font-size: ${props => props.theme.fontSize.sz3};\n  background-color: white;\n  color: black;\n\n  border-left: 5px solid transparent;\n\n  // &.${LIB_NAME}-item-active {\n  //   ${({ disabled, color }) => !disabled && color && `background: green;`}\n  // }\n\n  :hover,\n  :focus {\n    background: #D3D3D3;\n    outline: none;\n  }\n\n\n  &.${LIB_NAME}-item-selected {\n    ${props => props.disabled ? `\n      background: rgba(0,0,0,0.01);\n      color: ${props.theme.bg.primary};\n    `\n    : `\n      background: ${!!props.schema ? hexToRGBA(props.theme.schema[props.schema].solid, 0.1) : hexToRGBA(props.theme.bg.senary, 0.1)};\n      color: ${!!props.schema ? props.theme.schema[props.schema].solid : props.theme.bg.primary};\n      border-color: ${!!props.schema ? props.theme.schema[props.schema].solid : props.theme.bg.senary};\n    `}\n  }\n\n  ${({ disabled }) =>\n    disabled\n      ? `\n    background: ${props => props.theme.bg.tertiary};\n    color: ${props => props.theme.bg.secondary};\n\n    ins {\n      text-decoration: none;\n      border:1px solid #ccc;\n      border-radius: 2px;\n      padding: 0px 3px;\n      font-size: x-small;\n      text-transform: uppercase;\n    }\n    `\n      : ''}\n\n`;\n\nconst DefaultContentContainer = styled.div`\n  display: flex;\n  flex: 1;\n  justify-content: space-between;\n  background: red;\n  padding: 0;\n  overflow: hidden;\n  white-space: nowrap;\n`;\n\nconst DefaultButtonComponent = styled.i`\n    display: flex;\n    color: grey;\n    font-size: 1rem;\n    &:hover {\n        cursor: pointer;\n    }\n    line-height: 2rem;\n    text-align: center;\n`\n\nconst DefaultTextComponent = styled.span`\n  overflow: hidden;\n  white-space: nowrap;\n  flex: 1;\n  text-overflow: ellipsis;\n  // white-space: normal;\n  // word-wrap: break-word;\n  // word-break: break-all;\n`;\n\n// Specifies the default values for props:\nItem.defaultProps = {\n    ItemComponent: DefaultItemComponent,\n    ContentContainer: DefaultContentContainer,\n    ButtonComponent: DefaultButtonComponent,\n    TextComponent: DefaultTextComponent,\n};\n\nexport default Item;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { LIB_NAME } from '../constants';\nimport NoData from './NoData';\nimport Item from './Item';\nimport Label from './Label';\n\nimport { valueExistInSelected, hexToRGBA } from '../util';\n\nconst textboxPosition = (props, methods) => {\n  const TextboxBoundingClientRect = methods.getSelectRef().getBoundingClientRect();\n  const textboxHeight =\n    TextboxBoundingClientRect.bottom + parseInt(props.textboxHeight, 10) + parseInt(props.textboxGap, 10);\n\n  if (props.textboxPosition !== 'auto') {\n    return props.textboxPosition;\n  }\n\n  if (textboxHeight > window.innerHeight && textboxHeight > TextboxBoundingClientRect.top) {\n    return 'top';\n  }\n\n  return 'bottom';\n};\n\nconst Textbox = ({ ItemComponent, props, TextBoxComponent, state, methods, TextComponent }) => {\n  // console.log('Textbox props', props)\n  // console.log('Textbox ItemComponent', ItemComponent)\n\n  return(\n    <TextBoxComponent\n      tabIndex=\"-1\"\n      aria-expanded=\"true\"\n      role=\"list\"\n      textboxPosition={textboxPosition(props, methods)}\n      selectBounds={state.selectBounds}\n      portal={props.portal}\n      textboxGap={props.textboxGap}\n      textboxHeight={props.textboxHeight}\n      className={`${LIB_NAME}-textbox ${LIB_NAME}-textbox-position-${textboxPosition(\n        props,\n        methods\n      )}`}>\n      {props.textboxRenderer ? (\n        props.textboxRenderer({ props, state, methods })\n      ) : (\n        <React.Fragment>\n          {props.create && state.search && !valueExistInSelected(state.search, state.values, props) && (\n            <AddNew\n\n              className={`${LIB_NAME}-textbox-add-new`}\n              color={props.color}\n              onClick={() => methods.createNew(state.search)}>\n              {props.createNewLabel.replace('{search}', `\"${state.search}\"`)}\n            </AddNew>\n          )}\n          {state.currentValue.length > 0 &&\n            <Label LabelComponent={props.LabelComponent} label={props.label} schema={props.schema}></Label>\n          }\n          {methods.searchResults().length > 0 && (\n            methods\n              .searchResults()\n              .map((item, itemIndex) => (\n                <Item\n                  ItemComponent={ItemComponent}\n                  TextComponent={TextComponent}\n                  key={item[props.valueField]}\n                  item={item}\n                  itemIndex={itemIndex}\n                  state={state}\n                  props={props}\n                  methods={methods}\n                />\n              ))\n          )}\n        </React.Fragment>\n      )}\n    </TextBoxComponent>\n  );\n}\n\nexport const DefaultTextBoxComponent = styled.div`\n  position: absolute;\n  ${({ selectBounds, textboxGap, textboxPosition }) =>\n    textboxPosition === 'top'\n      ? `bottom: ${selectBounds.height + 2 + textboxGap}px`\n      : `top: ${selectBounds.height + 2 + textboxGap}px`};\n\n  ${({ selectBounds, textboxGap, portal }) =>\n    portal\n      ? `\n      position: fixed;\n      top: ${selectBounds.bottom + textboxGap}px;\n      left: ${selectBounds.left - 1}px;`\n      : 'left: -1px;'};\n  width: ${({ selectBounds }) => selectBounds.width}px;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n  background: '#26ab76';\n  border-radius: 2px;\n  max-height: ${({ textboxHeight }) => textboxHeight};\n  overflow: auto;\n  z-index: 1;\n\n  border-radius: 0.2rem;\n\n  :focus {\n    outline: none;\n  }\n\n  /* Let's get this party started */\n  ::-webkit-scrollbar {\n      width: 6px;\n  }\n  /* Track */\n  ::-webkit-scrollbar-track {\n      -webkit-background: rgba(0,0,0,0.1);\n      -webkit-border-radius: 10px;\n      border-radius: 10px;\n  }\n  /* Handle */\n  ::-webkit-scrollbar-thumb {\n      -webkit-border-radius: 10px;\n      border-radius: 10px;\n      -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.5);\n      background: rgba(255,255,255,0.4);\n  }\n  ::-webkit-scrollbar-thumb:window-inactive {\n    background: rgba(255,255,255,0.2);\n  }\n\n}\n`;\n\nconst AddNew = styled.div`\n  color: ${({ color }) => color};\n  padding: 5px 10px;\n  background: white;\n  color: blue;\n\n  :hover {\n    background: ${({ color }) => color && hexToRGBA(color, 0.1)};\n    outline: none;\n    cursor: pointer;\n  }\n`;\n\nTextbox.defaultProps = {\n  TextBoxComponent: DefaultTextBoxComponent\n};\n\nexport default Textbox;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { LIB_NAME } from '../constants';\n\nconst Loading = ({ props }) =>\n  props.loadingRenderer ? (\n    props.loadingRenderer({ props })\n  ) : (\n    <LoadingComponent className={`${LIB_NAME}-loading`} color={props.color} />\n  );\n\nconst LoadingComponent = styled.div`\n  @keyframes dual-ring-spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(180deg);\n    }\n  }\n\n  padding: 0 5px;\n  display: block;\n  width: auto;\n  height: auto;\n\n  :after {\n    content: ' ';\n    display: block;\n    width: 16px;\n    height: 16px;\n    border-radius: 50%;\n    border-width: 1px;\n    border-style: solid;\n    border-color: ${({ color }) => color} transparent;\n    animation: dual-ring-spin 0.7s ease-in-out infinite;\n    margin: 0 0 0 -10px;\n  }\n`;\n\nexport default Loading;\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components'\nimport ClickOutside from './components/ClickOutside';\n\nimport { globStyle } from '../../../global_style'\nimport { LightenDarkenColor } from '../../../methods/utils/color_utils'\n\n\nimport Label from './components/Label';\nimport Content from './components/Content';\nimport Textbox from './components/Dropdown';\nimport Loading from './components/Loading';\nimport Clear from './components/Clear';\nimport Separator from './components/Separator';\nimport TextboxHandle from './components/DropdownHandle';\n\nimport { debounce, hexToRGBA, isEqual, getByPath, getProp, valueExistInSelected } from './util';\nimport { LIB_NAME } from './constants';\n\nimport theme from '../../../theme.js'\n\nexport class TextBoxSearch extends Component {\n  static propTypes = {\n    onChange: PropTypes.func.isRequired,\n    onBlur: PropTypes.func,\n    onTextboxClose: PropTypes.func,\n    onTextboxOpen: PropTypes.func,\n    onClearAll: PropTypes.func,\n    onSelectAll: PropTypes.func,\n    values: PropTypes.array,\n    options: PropTypes.array.isRequired,\n    keepOpen: PropTypes.bool,\n    showSelectedBox: PropTypes.bool,\n    textboxGap: PropTypes.number,\n    multi: PropTypes.bool,\n    placeholder: PropTypes.string,\n    addPlaceholder: PropTypes.string,\n    disabled: PropTypes.bool,\n    className: PropTypes.string,\n    loading: PropTypes.bool,\n    clearable: PropTypes.bool,\n    searchable: PropTypes.bool,\n    separator: PropTypes.bool,\n    textboxHandle: PropTypes.bool,\n    searchBy: PropTypes.string,\n    sortBy: PropTypes.string,\n    closeOnScroll: PropTypes.bool,\n    openOnTop: PropTypes.bool,\n    style: PropTypes.object,\n    contentRenderer: PropTypes.func,\n    textboxRenderer: PropTypes.func,\n    itemRenderer: PropTypes.func,\n    noDataRenderer: PropTypes.func,\n    optionRenderer: PropTypes.func,\n    inputRenderer: PropTypes.func,\n    loadingRenderer: PropTypes.func,\n    clearRenderer: PropTypes.func,\n    separatorRenderer: PropTypes.func,\n    textboxHandleRenderer: PropTypes.func,\n    direction: PropTypes.string,\n    required: PropTypes.bool,\n    pattern: PropTypes.string,\n    // The pattern attribute specifies a regular expression that the <input> element's value is checked against on form submission\n    // set to null to bypass\n    name: PropTypes.string,\n    className: PropTypes.string,\n    schema: PropTypes.string,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      textbox: false,\n      values: props.values,\n      search: '',\n      selectBounds: {},\n      cursor: null,\n\n      currentValue: ''\n    };\n\n    this.methods = {\n      removeItem: this.removeItem,\n      dropDown: this.dropDown,\n      addItem: this.addItem,\n      setSearch: this.setSearch,\n      getInputSize: this.getInputSize,\n      toggleSelectAll: this.toggleSelectAll,\n      clearAll: this.clearAll,\n      selectAll: this.selectAll,\n      searchResults: this.searchResults,\n      getSelectRef: this.getSelectRef,\n      isSelected: this.isSelected,\n      getSelectBounds: this.getSelectBounds,\n      areAllSelected: this.areAllSelected,\n      handleKeyDown: this.handleKeyDown,\n      activeCursorItem: this.activeCursorItem,\n      createNew: this.createNew,\n      sortBy: this.sortBy,\n      safeString: this.safeString,\n\n      setValue: this.setValue,\n      setValues: this.setValues,\n    };\n\n    this.select = React.createRef();\n    this.textboxRoot = typeof document !== 'undefined' && document.createElement('div');\n  }\n\n  componentDidMount() {\n\n    this.props.portal && this.props.portal.appendChild(this.textboxRoot);\n    window.addEventListener('resize', debounce(this.updateSelectBounds), {passive:true});\n    window.addEventListener('scroll', debounce(this.onScroll), {passive:true});\n\n    this.dropDown('open');\n\n    if (this.select) {\n      this.updateSelectBounds();\n    }\n\n    if (!!this.props.defaultValue) {\n      this.addItem(this.props.defaultValue)\n      this.setValue(this.props.defaultValue.name)\n      this.setState({currentValue : this.props.defaultValue.name})\n      this.setSearch({target: {value: this.props.defaultValue.name}})\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      !isEqual(prevProps.values, this.props.values) &&\n      isEqual(prevProps.values, prevState.values)\n    ) {\n      this.setState({ values: this.props.values }, () => {\n        this.props.onChange(this.props.values);\n      });\n    }\n\n    if (prevState.values !== this.state.values) {\n      if (this.state.values.length) { this.props.onChange(this.state.values) };\n      this.updateSelectBounds();\n    }\n\n    if (prevState.search !== this.state.search) {\n      this.updateSelectBounds();\n    }\n\n    if (prevState.values !== this.state.values && this.props.closeOnSelect) {\n      this.dropDown('close');\n    }\n\n    if (prevProps.multi !== this.props.multi) {\n      this.updateSelectBounds();\n    }\n\n    if (prevState.textbox && prevState.textbox !== this.state.textbox) {\n      this.onTextboxClose();\n    }\n\n    if (!prevState.textbox && prevState.textbox !== this.state.textbox) {\n      this.props.onTextboxOpen();\n    }\n\n    if (prevState.values !== this.state.values && !this.props.fillable && this.state.values.length) {\n      this.clearAll();\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.portal && this.props.portal.removeChild(this.textboxRoot);\n    window.removeEventListener(\n      'resize',\n      debounce(this.updateSelectBounds, this.props.debounceDelay)\n    );\n    window.removeEventListener('scroll', debounce(this.onScroll, this.props.debounceDelay));\n  }\n\n  onTextboxClose = () => {\n    this.setState({ cursor: null });\n    this.props.onTextboxClose();\n  };\n\n  onScroll = () => {\n    if (this.props.closeOnScroll) {\n      this.dropDown('close');\n    }\n\n    this.updateSelectBounds();\n  };\n\n  updateSelectBounds = () =>\n    this.select.current &&\n    this.setState({\n      selectBounds: this.select.current.getBoundingClientRect()\n    });\n\n  getSelectBounds = () => this.state.selectBounds;\n\n  dropDown = (action = 'toggle', event) => {\n    const target = (event && event.target) || (event && event.srcElement);\n\n    if (\n      this.props.portal &&\n      !this.props.closeOnScroll &&\n      !this.props.closeOnSelect &&\n      event &&\n      target &&\n      target.offsetParent &&\n      target.offsetParent.classList.contains('react-textbox-select-dropdown')\n    ) {\n      return;\n    }\n\n    if (this.props.keepOpen) {\n      return this.setState({ textbox: true });\n    }\n\n    if (action === 'close' && this.state.textbox) {\n      this.select.current.blur();\n\n      return this.setState({\n        textbox: false,\n        search: this.props.clearOnBlur ? '' : this.state.search\n      });\n    }\n\n    if (action === 'open' && !this.state.textbox) {\n      return this.setState({ textbox: true });\n    }\n\n    if (action === 'toggle') {\n      this.select.current.focus();\n      return this.setState({ textbox: !this.state.textbox });\n    }\n\n    return false;\n  };\n\n  getSelectRef = () => this.select.current;\n\n  setValue = (value) => {\n    this.setState({currentValue : value})\n  }\n\n  setValues = (values) => {\n    this.setState({values: [values]})\n  }\n\n  addItem = (item) => {\n    if (this.props.multi) {\n      if (this.state.textbox && !this.props.disabled &&\n        valueExistInSelected(getByPath(item, this.props.valueField), this.state.values, this.props)\n      ) {\n        return this.removeItem(null, item, false);\n      }\n\n      this.setState({\n        values: [...this.state.values, item]\n      });\n    } else {\n      this.setState({\n        values: [item],\n        textbox: false\n      });\n    }\n\n    this.props.clearOnSelect && this.setState({ search: '' });\n\n    return true;\n  };\n\n  removeItem = (event, item, close = false) => {\n    if (event && close) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.dropDown('close');\n    }\n\n    this.setState({\n      values: this.state.values.filter(\n        (values) =>\n          getByPath(values, this.props.valueField) !== getByPath(item, this.props.valueField)\n      )\n    });\n  };\n\n  setSearch = (event) => {\n    this.setState({\n      cursor: null\n    });\n\n    this.setState({\n      search: event.target.value\n    });\n  };\n\n  getInputSize = () => {\n    if (this.state.values && this.state.values.length) {\n      return 0;\n    } else {\n      return this.props.placeholder.length;\n    }\n  };\n\n  toggleSelectAll = () => {\n    return this.setState({\n      values: this.state.values.length === 0 ? this.selectAll() : this.clearAll()\n    });\n  };\n\n  clearAll = () => {\n    this.props.onClearAll();\n    this.setState({\n      values: []\n    });\n  };\n\n  selectAll = (valuesList = []) => {\n    this.props.onSelectAll();\n    const values = valuesList.length > 0\n      ? valuesList\n      : this.props.options.filter((option) => !option.disabled);\n\n    this.setState({ values });\n  };\n\n  isSelected = (option) =>\n    this.state.currentValue == option[this.props.labelField]\n\n  areAllSelected = () =>\n    this.state.values.length === this.props.options.filter((option) => !option.disabled).length;\n\n  safeString = (string) => string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n\n  sortBy = () => {\n    const { sortBy, options } = this.props;\n\n    if (!sortBy) {\n      return options;\n    }\n\n    options.sort((a, b) => {\n      if (getProp(a, sortBy) < getProp(b, sortBy)) {\n        return -1;\n      } else if (getProp(a, sortBy) > getProp(b, sortBy)) {\n        return 1;\n      } else {\n        return 0;\n      }\n    });\n\n    return options;\n  };\n\n  searchFn = ({ state, methods }) => {\n    const regexp = new RegExp(methods.safeString(state.search), 'i');\n\n    return methods\n      .sortBy()\n      .filter((item) =>\n        regexp.test(getByPath(item, this.props.searchBy) || getByPath(item, this.props.valueField))\n      );\n  };\n\n  searchResults = () => {\n    const args = { state: this.state, props: this.props, methods: this.methods };\n\n    return this.props.searchFn(args) || this.searchFn(args);\n  };\n\n  activeCursorItem = (activeCursorItem) =>\n    this.setState({\n      activeCursorItem\n    });\n\n  handleKeyDown = (event) => {\n    const args = {\n      event,\n      state: this.state,\n      props: this.props,\n      methods: this.methods,\n      setState: this.setState.bind(this)\n    };\n\n    return this.props.handleKeyDownFn(args) || this.handleKeyDownFn(args);\n  };\n\n  handleKeyDownFn = ({ event, state, props, methods, setState }) => {\n    const { cursor } = state;\n    const escape = event.key === 'Escape';\n    const enter = event.key === 'Enter';\n    const arrowUp = event.key === 'ArrowUp';\n    const arrowDown = event.key === 'ArrowDown';\n    const tab = event.key === 'Tab' && !event.shiftKey;\n    const shiftTab = event.shiftKey && event.key === 'Tab';\n\n    if ((arrowDown || tab) && cursor === null) {\n      return setState({\n        cursor: 0\n      });\n    }\n\n    if (arrowUp || arrowDown || shiftTab || tab) {\n      event.preventDefault();\n    }\n\n    if (escape) {\n      this.dropDown('close');\n    }\n\n    if (enter) {\n      const currentItem = methods.searchResults()[cursor];\n      if (currentItem && !currentItem.disabled) {\n        if (props.create && valueExistInSelected(state.search, state.values, props)) {\n          return null;\n        }\n\n        methods.addItem(currentItem);\n      }\n      this.dropDown('close');\n    }\n\n    if ((arrowDown || tab) && methods.searchResults().length === cursor) {\n      return setState({\n        cursor: 0\n      });\n    }\n\n    if (arrowDown || tab) {\n      setState((prevState) => ({\n        cursor: prevState.cursor + 1\n      }));\n    }\n\n    if ((arrowUp || shiftTab) && cursor > 0) {\n      setState((prevState) => ({\n        cursor: prevState.cursor - 1\n      }));\n    }\n\n    if ((arrowUp || shiftTab) && cursor === 0) {\n      setState({\n        cursor: methods.searchResults().length\n      });\n    }\n  };\n\n  renderTextbox = (ItemComponent) =>\n    this.props.portal ? (\n      ReactDOM.createPortal(\n        <Textbox ItemComponent={ItemComponent} TextBoxComponent={this.props.TextBoxComponent} props={this.props} state={this.state} methods={this.methods} />,\n        this.textboxRoot\n      )\n    ) : (\n        <Textbox ItemComponent={ItemComponent} TextComponent={this.props.TextComponent} TextBoxComponent={this.props.TextBoxComponent} props={this.props} state={this.state} methods={this.methods} />\n      );\n\n  createNew = (item) => {\n    const newValue = {\n      [this.props.labelField]: item,\n      [this.props.valueField]: item\n    };\n\n    this.addItem(newValue);\n    this.props.onCreateNew(newValue);\n    this.setState({ search: '' });\n  };\n\n  render() {\n\n    const { ItemComponent, ReactTextboxSelect, Container } = this.props;\n\n    return (\n      <Container className={this.props.className}>\n        <ClickOutside ClickOutsideComponent={this.props.ClickOutsideComponent} onClickOutside={(event) => this.dropDown('close', event)}>\n          <ReactTextboxSelect\n            onKeyDown={this.handleKeyDown}\n            onClick={(event) => this.dropDown('open', event)}\n            // onFocus={(event) => this.dropDown('open', event)}\n            tabIndex={this.props.disabled ? '-1' : '0'}\n            direction={this.props.direction}\n            style={this.props.style}\n            ref={this.select}\n            disabled={this.props.disabled}\n            className={`${LIB_NAME} ${this.props.className}`}\n            color={this.props.color}\n            {...this.props.additionalProps}\n            schema={this.props.schema}>\n\n            <Content InputComponent={this.props.InputComponent} ContentComponent={this.props.ContentComponent} props={this.props} state={this.state} methods={this.methods} />\n\n            {this.props.loading && <Loading props={this.props} />}\n\n            {this.state.textbox && !this.props.disabled && this.renderTextbox(ItemComponent)}\n          </ReactTextboxSelect>\n        </ClickOutside>\n      </Container>\n    );\n  }\n}\n\nexport const DefaultReactTextboxSelect = styled.div`\n\n    background-color: white;\n    color: ${props => props.theme.bg.octonary};\n\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz3};\n\n    position: relative;\n    display: flex;\n\n    vertical-align: middle;\n    line-height: 1.6rem;\n    height: 1.6rem;\n    width: 100%;\n    padding: 2px 5px;\n    direction: ${({ direction }) => direction};\n    cursor: pointer;\n    min-height: 36px;\n    ${({ disabled }) =>\n    disabled ? 'cursor: not-allowed;pointer-events: none;opacity: 0.3;' : 'pointer-events: all;'}\n\n    border-bottom: 2px solid transparent;\n    border-radius: 0.2rem;\n\n    :focus\n    :focus-within {\n        color: ${props => props.theme.bg.octonary};\n        background-color: ${props => LightenDarkenColor(props.theme.bg.quinary, 10)};\n        box-shadow: none;\n        border-bottom: 2px solid ${props => !!props.schema ? props.theme.schema[props.schema].solid : props.theme.bg.octonary};\n    }\n`;\n\nconst DefaultContainer = styled.div`\n\n`;\n\nTextBoxSearch.defaultProps = {\n  addPlaceholder: '',\n  placeholder: 'Select...',\n  values: [],\n  options: [],\n  multi: false,\n  showSelectedBox: false,\n  disabled: false,\n  searchBy: 'label',\n  sortBy: null,\n  clearable: false,\n  searchable: true,\n  textboxHandle: true,\n  separator: false,\n  keepOpen: undefined,\n  noDataLabel: 'No data',\n  createNewLabel: 'add {search}',\n  disabledLabel: 'disabled',\n  textboxGap: 5,\n  closeOnScroll: false,\n  debounceDelay: 0,\n  labelField: 'label',\n  valueField: 'value',\n  color: '#0074D9',\n  keepSelectedInList: true,\n  closeOnSelect: false,\n  clearOnBlur: true,\n  clearOnSelect: true,\n  textboxPosition: 'bottom',\n  textboxHeight: '300px',\n  autoFocus: false,\n  portal: null,\n  create: false,\n  direction: 'ltr',\n  name: null,\n  required: false,\n  pattern: '',\n  onChange: () => undefined,\n  onTextboxOpen: () => undefined,\n  onTextboxClose: () => undefined,\n  onClearAll: () => undefined,\n  onSelectAll: () => undefined,\n  onCreateNew: () => undefined,\n  searchFn: () => undefined,\n  handleKeyDownFn: () => undefined,\n  additionalProps: null,\n  showButton: true,\n  ReactTextboxSelect: DefaultReactTextboxSelect,\n  Container: DefaultContainer,\n  fillable: true,\n  schema: null,\n};\n\n\n\nexport default TextBoxSearch;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { LIB_NAME } from '../constants';\n\nconst Clear = ({ props, state, methods }) =>\n  props.clearRenderer ? (\n    props.clearRenderer({ props, state, methods })\n  ) : (\n    <ClearComponent\n      className={`${LIB_NAME}-clear`}\n      tabIndex=\"-1\"\n      onClick={() => methods.clearAll()}\n      onKeyPress={() => methods.clearAll()}>\n      &times;\n    </ClearComponent>\n  );\n\nconst ClearComponent = styled.div`\n  line-height: 25px;\n  margin: 0 10px;\n  cursor: pointer;\n\n  :focus {\n    outline: none;\n  }\n\n  :hover {\n    color: tomato;\n  }\n`;\n\nexport default Clear;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { LIB_NAME } from '../constants';\n\nconst Separator = ({ props, state, methods }) =>\n  props.separatorRenderer ? (\n    props.separatorRenderer({ props, state, methods })\n  ) : (\n    <SeparatorComponent className={`${LIB_NAME}-separator`} />\n  );\n\nconst SeparatorComponent = styled.div`\n  border-left: 1px solid #ccc;\n  width: 1px;\n  height: 25px;\n  display: block;\n`;\n\nexport default Separator;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { LIB_NAME } from '../constants';\n\nconst TextboxHandle = ({ props, state, methods }) =>\n  props.textboxHandleRenderer ? (\n    props.textboxHandleRenderer({ props, state, methods })\n  ) : (\n    <TextboxHandleComponent\n      tabIndex=\"-1\"\n      onClick={(event) => methods.textBox(state.textbox ? 'close': 'open', event)}\n      textboxOpen={state.textbox}\n      onKeyPress={(event) => methods.textBox('toggle', event)}\n      onKeyDown={(event) => methods.textBox('toggle', event)}\n      className={`${LIB_NAME}-textbox-handle`}\n      color={props.color}>\n      <svg fill=\"currentColor\" viewBox=\"0 0 40 40\"><path d=\"M31 26.4q0 .3-.2.5l-1.1 1.2q-.3.2-.6.2t-.5-.2l-8.7-8.8-8.8 8.8q-.2.2-.5.2t-.5-.2l-1.2-1.2q-.2-.2-.2-.5t.2-.5l10.4-10.4q.3-.2.6-.2t.5.2l10.4 10.4q.2.2.2.5z\"/></svg>\n    </TextboxHandleComponent>\n  );\n\nconst TextboxHandleComponent = styled.div`\n  text-align: center;\n\n  ${({ textboxOpen }) =>\n    textboxOpen\n      ? `\n      pointer-events: all;\n      transform: rotate(0deg);\n      margin: 0px 0 -3px 5px;\n      `\n      : `\n      pointer-events: none;\n      margin: 0 0 0 5px;\n      transform: rotate(180deg);\n      `};\n  cursor: pointer;\n\n  text-align: center;\n  vertical-align: middle;\n  line-height: 2rem;\n  height: 2rem;\n  position: absolute;\n  right: .25rem;\n\n  svg {\n    width: 16px;\n    height: 16px;\n  }\n\n  :hover {\n    path {\n      stroke: ${({ color }) => color};\n    }\n  }\n\n  :focus {\n    outline: none;\n\n    path {\n      stroke: ${({ color }) => color};\n    }\n  }\n\n`;\n\nexport default TextboxHandle;\n","import styled from 'styled-components'\n\nexport const DefaultContainer = styled.div`\n\tposition: relative;\n`;\n\nexport const IconContainerComponent = styled.div`\n    width: auto;\n    height: auto;\n    position: absolute;\n    top: 50%;\n    right: 2rem;\n    transform: translateY(-50%);\n    margin: 0;\n    padding: 0;\n    z-index: 500;\n`;\n","import React, {Component, useEffect, useState} from 'react';\n\n// external functions\nimport PropTypes from 'prop-types';\nimport { useField, useFormikContext } from \"formik\";\n\n// internal functions\nimport { getMessageFromError } from \"../../../../methods/utils/form_utils\";\n\n// internal components\nimport ErrorTooltip from \"../error_tooltip/error_tooltip\";\nimport TextBoxSearch from \"../../textbox_search/textbox_search\";\n\n// styles\nimport * as styled from './textbox_search_field.style'\n\nconst TextboxSearchField = ({\n\t\t\t\t\t\t\t\tonTextboxClose,\n\t\t\t\t\t\t\t\tonChange,\n\t\t\t\t\t\t\t\tContainer,\n\t\t\t\t\t\t\t\tstyle,\n\t\t\t\t\t\t\t\tcontainerStyle,\n\t\t\t\t\t\t\t\tlabelField,\n\t\t\t\t\t\t\t\tvalueField,\n\t\t\t\t\t\t\t\tmulti,\n\t\t\t\t\t\t\t\tmapInput,\n\t\t\t\t\t\t\t\tmapOutput,\n\t\t\t\t\t\t\t\t...props\n\t\t\t\t\t\t\t}) => {\n\n\tconst { setFieldValue, setFieldTouched } = useFormikContext();\n\tconst [field, meta] = useField(props);\n\n\tconst {\n\t\tvalue: fieldValue,\n\t\tname: fieldName\n\t} = field\n\n\tconst {\n\t\ttouched,\n\t\terror\n\t} = meta\n\n\tconst hasError = touched && error;\n\n\n\tlet ReactDropdownSelectStyle = {\n\t\tborderLeft: hasError ? '1px solid red' : \"1px solid transparent\",\n\t\tborderTop: hasError ? '1px solid red' : \"1px solid transparent\",\n\t\tborderRight: hasError ? '1px solid red' : \"1px solid transparent\",\n\t\tborderBottom: hasError && '1px solid red',\n\t\tboxShadow: hasError && `0 0 5px red`,\n\t\ttransition: \"all .5s ease-in-out\",\n\t}\n\n\tconst errorMessage = getMessageFromError(meta.error);\n\n\treturn (\n\t\t<Container\n\t\t\tstyle={containerStyle}\n\t\t>\n\t\t\t<TextBoxSearch\n\t\t\t\t// value={\"adaw\"}\n\t\t\t\t// values={mapInput(fieldValue)}\n\t\t\t\tonTextboxClose={() => {\n\t\t\t\t\t// set this field to touched if not already\n\t\t\t\t\tconst isTouched = meta.touched;\n\t\t\t\t\tif(!isTouched) {\n\t\t\t\t\t\tsetFieldTouched(fieldName,true)\n\t\t\t\t\t}\n\t\t\t\t\t// call any additional function that was passed as prop\n\t\t\t\t\tonTextboxClose && onTextboxClose();\n\t\t\t\t}}\n\t\t\t\tonBlur={() => {\n\t\t\t\t\tsetFieldTouched(true)\n\t\t\t\t}}\n\t\t\t\tlabelField={labelField}\n\t\t\t\tvalueField={valueField}\n\t\t\t\tmulti={multi}\n\t\t\t\tstyle={{...ReactDropdownSelectStyle, ...style}}\n\t\t\t\t{...field}\n\t\t\t\t{...props}\n\t\t\t\tonChange={values => {\n\t\t\t\t\tif(!touched) {\n\t\t\t\t\t\tsetFieldTouched(fieldName, \"true\")\n\t\t\t\t\t}\n\n\t\t\t\t\tif(values.length === 1) {\n\t\t\t\t\t\tif(values[0].name === \"\") {\n\t\t\t\t\t\t\tsetFieldValue(fieldName, null)\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tsetFieldValue(fieldName, values[0])\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telse {\n\t\t\t\t\t\tif(multi) {\n\t\t\t\t\t\t\tsetFieldValue(fieldName, values)\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tsetFieldValue(fieldName, values[0])\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tonChange && onChange(values)\n\t\t\t\t}}\n\t\t\t/>\n\n\t\t\t<ErrorTooltip\n\t\t\t\tvisible={hasError}\n\t\t\t\ttext={errorMessage}\n\t\t\t\tContainerComponent={styled.IconContainerComponent}\n\t\t\t/>\n\t\t</Container>\n\t);\n};\n\n// Specifies propTypes\nTextboxSearchField.propTypes = {\n\tContainer: PropTypes.elementType,\n\tonTextboxClose: PropTypes.func,\n\tonChange: PropTypes.func,\n\tmapInput: PropTypes.func,\n\tmapOutput: PropTypes.func,\n\tstyle: PropTypes.object,\n\tcontainerStyle: PropTypes.object,\n\tlabelField: PropTypes.string,\n\tvalueField: PropTypes.string,\n\tmulti: PropTypes.bool\n};\n\n// Specifies the default values for props:\nTextboxSearchField.defaultProps = {\n\tContainer: styled.DefaultContainer,\n\tonTextboxClose: () => {},\n\tonChange: () => {},\n\tstyle: {},\n\tcontainerStyle: {},\n\tlabelField: \"\",\n\tvalueField: \"\",\n\tmulti: false,\n\tmapInput: val => val,\n\tmapOutput: val => val,\n};\n\nexport default TextboxSearchField;\n","import React, { useState, useEffect, useContext } from 'react'\nimport * as styled from '../tasks_content.style'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useLocation, useParams } from 'react-router-dom'\nimport { ThemeContext } from 'styled-components'\n\nimport Portal from '../../../../../higher_order_components/portal'\n/*\n*\n* Should track quantity / fraction option only display if there is an obj? in master it always displays\n*\n* When creating new process\n*   when adding route, should click add create the route in mongo, or should this wait until the process is made as well\n*       If we don't wait till the process is saved, if you leave the page / refresh / cancel, the route will already be made without the process. I think wait - Justin\n*\n* */\n\n\n// Import Basic Components\nimport ContentHeader from '../../content_header/content_header'\nimport Textbox from '../../../../basic/textbox/textbox.js'\nimport Button from '../../../../basic/button/button'\nimport DropDownSearch from '../../../../basic/drop_down_search_v2/drop_down_search'\nimport IconButton from '../../../../basic/icon_button/icon_button'\n\n// Import Components\nimport ConfirmDeleteModal from '../../../../basic/modals/confirm_delete_modal/confirm_delete_modal'\nimport LoadUnloadFields from './fields/load_unload_fields'\nimport ObjectEditor from '../object_editor/object_editor'\n\n// Import utils\nimport uuid from 'uuid'\nimport { deepCopy } from '../../../../../methods/utils/utils'\nimport { getPreviousRoute, willRouteAdditionFixProcess } from '../../../../../methods/utils/processes_utils'\n\n// Import actions\nimport { putDashboard, postDashboard } from '../../../../../redux/actions/dashboards_actions'\nimport * as objectActions from '../../../../../redux/actions/objects_actions'\nimport { setFixingProcess } from '../../../../../redux/actions/processes_actions'\nimport { putStation } from '../../../../../redux/actions/stations_actions'\nimport { setSelectedStation } from '../../../../../redux/actions/stations_actions'\nimport { setSelectedPosition } from '../../../../../redux/actions/positions_actions'\nimport { setSelectedHoveringTask, editingTask, showRouteConfirmation, setRouteConfirmationLocation, autoAddRoute, deleteRouteClean } from '../../../../../redux/actions/tasks_actions'\nimport { processHover } from '../../../../../redux/actions/widget_actions'\nimport { putObject, postObject, deleteObject, setSelectedObject, setRouteObject, setEditingObject } from '../../../../../redux/actions/objects_actions'\n\nimport {\n    buildDefaultRouteName,\n    getLoadStationId,\n    getRouteProcesses,\n    getUnloadStationId, isMiRTask,\n    isNextRouteViable, isOnlyHumanTask\n} from \"../../../../../methods/utils/route_utils\";\nimport TextField from \"../../../../basic/form/text_field/text_field\";\nimport TextboxSearchField from \"../../../../basic/form/textbox_search_field/textbox_search_field\";\nimport PropTypes from \"prop-types\";\nimport { isObject } from \"../../../../../methods/utils/object_utils\";\nimport useChange from \"../../../../basic/form/useChange\";\nimport { removeTask } from \"../../../../../redux/actions/tasks_actions\";\nimport { isArray } from \"../../../../../methods/utils/array_utils\";\nimport usePrevious from \"../../../../../hooks/usePrevious\";\nimport * as taskActions from \"../../../../../redux/actions/tasks_actions\";\nimport { pageDataChanged } from \"../../../../../redux/actions/sidebar_actions\"\n\nconst TaskField = (props) => {\n\n    const {\n        isTransportTask,\n        isProcessTask,\n        isTaskInProcess,\n        fieldParent,\n        setFieldValue,\n        setValues,\n        setFieldTouched,\n        setFieldError,\n        getFieldMeta,\n        onSave,\n        onBackClick,\n        onRemove,\n        validateForm,\n        onDelete,\n        isNew,\n        processType\n    } = props\n\n    const fieldMeta = getFieldMeta(fieldParent)\n\n    const {\n        value: values = {},\n        error: errors = {},\n        touched,\n    } = fieldMeta || {}\n    // sets values.changed to true when a change occurs\n    useChange(fieldParent)\n    const themeContext = useContext(ThemeContext)\n    const {\n        name,\n        obj,\n        track_quantity,\n        _id: routeId,\n        changed,\n        temp\n    } = values || {}\n\n    const {\n        insertIndex\n    } = temp || {}\n\n    const errorCount = Object.keys(errors).length // get number of field errors\n    // const touchedCount = Object.values(touched).length // number of touched fields\n    const submitDisabled = ((errorCount > 0) || (!changed)) //&& (submitCount > 0) // disable if there are errors or no touched field, and form has been submitted at least once\n    const params = useParams()\n    const dispatch = useDispatch()\n    const dispatchPutStation = (station, ID) => dispatch(putStation(station, ID))\n    const dispatchPutDashboard = (dashboard, ID) => dispatch(putDashboard(dashboard, ID))\n    const dispatchPostDashboard = (dashboard) => dispatch(postDashboard(dashboard))\n    const dispatchSetFixingProcess = (bool) => dispatch(setFixingProcess(bool))\n    const dispatchSetSelectedStation = (station) => dispatch(setSelectedStation(station))\n    const dispatchSetSelectedPosition = (position) => dispatch(setSelectedPosition(position))\n    const dispatchSetEditing = async (props) => await dispatch(editingTask(props))\n    const dispatchSetSelectedHoveringTask = async (task) => await dispatch(setSelectedHoveringTask(task))\n    const dispatchPageDataChanged = (bool) => dispatch(pageDataChanged(bool))\n    const dispatchPutObject = (object, id) => dispatch(putObject(object, id))\n    const dispatchPostObject = (object, id) => dispatch(postObject(object, id))\n    const dispatchSetSelectedObject = (object) => dispatch(setSelectedObject(object))\n    const dispatchDeleteObject = (id) => dispatch(deleteObject(id))\n    const dispatchSetRouteObject = (object) => dispatch(setRouteObject(object))\n    const dispatchSetEditingObject = (bool) => dispatch(setEditingObject(bool))\n    const dispatchSetShowRouteConfirmation = (bool) => dispatch(showRouteConfirmation(bool))\n    const dispatchSetRouteConfirmationLocation = (id) => dispatch(setRouteConfirmationLocation(id))\n    const dispatchDeleteRouteClean = async (routeId) => await dispatch(deleteRouteClean(routeId))\n\n\n    let routes = useSelector(state => state.tasksReducer.tasks)\n    let selectedTask = useSelector(state => state.tasksReducer.selectedTask)\n    const selectedObject = useSelector(state => state.objectsReducer.selectedObject)\n    const selectedProcess = useSelector(state => state.processesReducer.selectedProcess)\n    const dashboards = useSelector(state => state.dashboardsReducer.dashboards)\n    const objects = useSelector(state => state.objectsReducer.objects)\n    const currentMapId = useSelector(state => state.settingsReducer.settings.currentMapId)\n    const maps = useSelector(state => state.mapReducer.maps)\n    const currentMap = Object.values(maps).find(map => map._id === currentMapId)\n\n    const fixingProcess = useSelector(state => state.processesReducer.fixingProcess)\n    const hoveringTask = useSelector(state => state.tasksReducer.selectedHoveringTask)\n    const stations = useSelector(state => state.stationsReducer.stations)\n    const routeObject = useSelector(state=>state.objectsReducer.routeObject)\n    const editingObject = useSelector(state=> state.objectsReducer.editingObject)\n    const pageInfoChanged = useSelector(state => state.sidebarReducer.pageDataChanged)\n    const showRouteConfirm = useSelector(state=> state.tasksReducer.showRouteConfirmation)\n\n    const [showEditor, setShowEditor] = useState(false);\n    const [confirmDeleteModal, setConfirmDeleteModal] = useState(false);\n    const [confirmExitModal, setConfirmExitModal] = useState(false);\n    const [confirmDeleteObjectModal, setConfirmDeleteObjectModal] = useState(false);\n    const [needsValidate, setNeedsValidate] = useState(false);\n    const [didSetHandoff, setDidSetHandoff] = useState(false);\n    const [showObjectSelector, setShowObjectSelector] = useState(false);\n    const [objectSaveDisabled, setObjectSaveDisabled] = useState(true);\n    const [contentType, setContentType] = useState('new')\n    const [deleteID, setDeleteID] = useState(null)\n    const previousLoadStationId = usePrevious(getLoadStationId(values))\n    const previousUnloadStationId = usePrevious(getUnloadStationId(values))\n\n    const url = useLocation().pathname\n    const routeProcesses = getRouteProcesses(deleteID) || []\n    const isProcessRoute = routeProcesses.length > 0 || fieldParent\n\n\n    useEffect(() => {\n        const loadStationId = getLoadStationId(selectedTask)\n        const unloadStationId = getUnloadStationId(selectedTask)\n\n        // update load & unload from selectedTask - currently have to do it this way since selectedTask is used in so many places\n        if (selectedTask && selectedTask.load) {\n            setFieldValue(fieldParent ? `${fieldParent}.load.station` : \"load.station\", selectedTask.load.station, false)\n            setFieldValue(fieldParent ? `${fieldParent}.load.position` : \"load.position\", selectedTask.load.position, false)\n        }\n        if (selectedTask && selectedTask.unload) {\n            setFieldValue(fieldParent ? `${fieldParent}.unload.station` : \"unload.station\", selectedTask.unload.station, false)\n            setFieldValue(fieldParent ? `${fieldParent}.unload.position` : \"unload.position\", selectedTask.unload.position, false)\n        }\n\n        if (selectedTask && selectedTask.type) {\n            setFieldValue(fieldParent ? `${fieldParent}.type` : \"type\", selectedTask.type, false)\n        }\n\n        if (selectedTask && selectedTask.device_types) {\n            setFieldValue(fieldParent ? `${fieldParent}.device_types` : \"device_types\", selectedTask.device_types, false)\n        }\n\n        if (isMiRTask(selectedTask) && isNew) {\n            if (values.handoff){\n             setFieldValue(fieldParent ? `${fieldParent}.handoff` : \"handoff\", true)\n            }\n        }\n\n        else if (isOnlyHumanTask(selectedTask)) {\n            if (!values.handoff && !didSetHandoff && isNew) {\n                setDidSetHandoff(true)\n                setFieldValue(fieldParent ? `${fieldParent}.handoff` : \"handoff\", true)\n            }\n        }\n\n        const loadStation = stations[loadStationId] || { name: \"\" }\n        const {\n            name: loadName\n        } = loadStation\n        const prevLoadStation = stations[previousLoadStationId] || { name: \"\" }\n        const {\n            name: prevLoadName\n        } = prevLoadStation\n\n        const unloadStation = stations[unloadStationId] || { name: \"\" }\n        const {\n            name: unloadName\n        } = unloadStation\n        const prevUnloadStation = stations[previousUnloadStationId] || { name: \"\" }\n        const {\n            name: prevUnloadName\n        } = prevUnloadStation\n\n        const prevName = buildDefaultRouteName(prevLoadName, prevUnloadName)\n        const newName = buildDefaultRouteName(loadName, unloadName)\n        const newObj = \"\"\n\n        if ((name === prevName) || !name) {\n            setFieldValue(fieldParent ? `${fieldParent}.name` : \"name\", newName, false)\n        }\n\n\n        setNeedsValidate(true)\n        // set touched if changes\n        return () => {\n\n            if (selectedTask && selectedTask.load) {\n                setFieldTouched(fieldParent ? `${fieldParent}.load` : \"load\", true)\n\n            }\n            if (selectedTask && selectedTask.unload) {\n                setFieldTouched(fieldParent ? `${fieldParent}.unload` : \"unload\", true)\n            }\n\n        }\n    }, [selectedTask, selectedObject])\n\n    useEffect(() => {\n\n        dispatchSetEditing(true) // set editing to true\n        dispatchSetRouteObject(selectedTask.route_object)\n        dispatchSetSelectedObject(selectedTask.route_object)\n\n        return () => {\n            // When unmounting edit task, always set fixing process to false\n            // This will take care of when it's set to true in edit process\n            dispatchSetFixingProcess(false)\n            dispatchSetSelectedPosition(null)\n            dispatchSetSelectedStation(null)\n            dispatchSetEditing(false)\n            dispatchSetShowRouteConfirmation(false)\n\n        }\n    }, [])\n\n\n    useEffect(() => {\n      if(!!selectedTask && selectedTask.unload.station!==null && selectedTask.new === true){\n\n        var showModal = true;\n\n        Object.values(selectedProcess.routes).map((route) => {\n          if(route._id===selectedTask._id){\n            showModal = false;\n          }\n        })\n        if(showModal){\n          dispatchSetShowRouteConfirmation(true)\n          dispatchSetRouteConfirmationLocation(selectedTask.unload.position)\n          showModal = true;\n        }\n      }\n    }, [selectedTask])\n\n    useEffect(() => {\n      if(!!showObjectSelector){\n        if (selectedObject) {\n            setFieldValue(fieldParent ? `${fieldParent}.obj` : \"obj\", selectedObject, false)\n        }\n\n        if (!selectedObject) {\n            setFieldValue(fieldParent ? `${fieldParent}.obj` : \"obj\", null, false)\n        }\n      }\n\n    },[editingObject])\n\n\n    // calls save function when values.needsSubmit is true - used for auto submit when selecting route from existing\n    useEffect(() => {\n        if (values.needsSubmit) onSave()\n    }, [values.needsSubmit])\n\n    // calls save function when values.needsSubmit is true - used for auto submit when selecting route from existing\n    useEffect(() => {\n        if (needsValidate) {\n            validateForm()\n            setNeedsValidate(false)\n        }\n    }, [needsValidate])\n\n\n    useEffect(() => {\n        if (!!obj && !!selectedObject) {\n            if ((obj.name !== selectedObject.name || obj.description !== selectedObject.description) && obj.name !== \"\") {\n                setObjectSaveDisabled(false)\n            }\n            else {\n                setObjectSaveDisabled(true)\n            }\n        }\n    }, [obj?.description, obj?.name])\n\n    useEffect(() => {\n      if(contentType === \"existing\" && selectedTask.load.station!== null){\n        setContentType(\"new\")\n      }\n    }, [selectedTask])\n\n    const renderLoadUnloadText = () => {\n        if (selectedTask.load.position === null) {\n            // No load position has been defined - ask user to define load (start) position\n            return (\n              <>\n                <styled.ListItem\n                  style = {{height: \"auto\", padding: \".4rem 1rem 0rem 1rem\", background: \"#FFFFFF\", border: \"solid 0.1rem #FF4B4B\", marginBottom: \"1.5rem\"}}\n                >\n                  <styled.DirectionText style = {{color: \"#FF4B4B\"}}>Click the start position on the map</styled.DirectionText>\n                  <styled.ListItemIcon\n                      className='fas fa-exclamation-triangle'\n                      style = {{color: \"#FF4B4B\", cursor: \"auto\", paddingBottom: \"0.4rem\", fontSize: \"1.1rem\"}}\n                  />\n                </styled.ListItem>\n              </>\n            )\n        } else if (selectedTask.load.station === null) {\n            // Load position is not tied to a station - task is no longer a transport task\n            return (\n                <>\n                    {selectedTask.unload.position === null &&\n                        <styled.DirectionText>Click on a position on the map to be the end position.</styled.DirectionText>\n                    }\n                    <styled.HelpText>Since the start position is not tied to a station, this task is no longer a transport task</styled.HelpText>\n                </>\n            )\n        } else {\n            // Load position has been defined and is a station - now handle unload position\n            if (selectedTask.unload.position === null) {\n                // No unload position has been defined - ask user to define load (end) position\n                return (\n                  <>\n                    <styled.ListItem\n                      style = {{height: \"auto\", padding: \".4rem 1rem 0rem 1rem\", background: \"#FFFFFF\", border: \"solid 0.1rem #ffbf1f\"}}\n                    >\n                      <styled.DirectionText style = {{color: \"#ffbf1f\"}}>Click the end position on the map</styled.DirectionText>\n                      <styled.ListItemIcon\n                          className='fas fa-exclamation-triangle'\n                          style = {{color: \"#ffbf1f\", cursor: \"auto\", paddingBottom: \"0.4rem\", fontSize: \"1.1rem\"}}\n                      />\n                    </styled.ListItem>\n                  </>\n                )\n              } else if (selectedTask.unload.station === null) {\n                // Unload position is not a station - task is no longer a transport task\n                return <styled.HelpText>Since the end position is not tied to a station, this task is no longer a transport task</styled.HelpText>\n            }\n        }\n\n    }\n\n    const renderLoadUnloadFields = () => {\n\n      if(selectedTask.unload.position!==null){\n        // Load AND Unload positions have been defined. Display load/unload parameter fields\n        return <LoadUnloadFields\n            fieldParent={fieldParent}\n            values={values}\n            setFieldValue={setFieldValue}\n            isProcess={isProcessTask}\n        />\n      }\n    }\n\n    const onSaveObject = async () => {\n        const object = {\n            name: obj.name,\n            description: obj.description,\n            modelName: \"\",\n            dimensions: null,\n            map_id: currentMap._id,\n            _id: !!selectedObject.new ? uuid.v4() : obj._id,\n        }\n\n        if (!!selectedObject.new) {\n            dispatchPostObject(object)\n        }\n        else {\n            await dispatchPutObject(object, obj._id)\n        }\n\n        dispatchSetEditingObject(false)\n        dispatchSetSelectedObject(null)\n        setFieldTouched(fieldParent ? `${fieldParent}.obj` : \"obj\", false)\n\n\n    }\n\n    const onAddObject = async () => {\n        const object = {\n            name: \"\",\n            description: \"\",\n            modelName: \"\",\n            dimensions: null,\n            map_id: currentMap._id,\n            _id: uuid.v4(),\n            new: true,\n        }\n\n        dispatchSetSelectedObject(object)\n    }\n\n\n    const onSelectObject = () => {\n      dispatchSetRouteObject(selectedObject)\n      setShowObjectSelector(false)\n      setFieldValue(fieldParent ? `${fieldParent}.route_object` : \"route_object\", selectedObject, false)\n      setFieldValue(fieldParent ? `${fieldParent}.obj` : \"obj\", selectedObject, false)\n    }\n\n    const onObjectBackClick = () => {\n        if (!!editingObject) {\n            dispatchSetEditingObject(false)\n            dispatchSetSelectedObject(routeObject)\n            setFieldTouched(fieldParent ? `${fieldParent}.obj` : \"obj\", false)\n\n        }\n        else {\n            setShowObjectSelector(false)\n            dispatchSetSelectedObject(selectedTask.route_object)\n        }\n    }\n\n    const updateDashboard = () => {\n        // Add the task automatically to the associated load station dashboard\n        // Since as of now the only type of task we are doing is push, only need to add it to the load location\n        let updatedStation = deepCopy(stations[selectedTask.load.station])\n\n        let updatedDashboard = dashboards[updatedStation.dashboards[0]]\n\n        if (updatedDashboard === undefined) {\n            let defaultDashboard = {\n                name: updatedStation.name + ' Dashboard',\n                locked: false,\n                buttons: [],\n                station: updatedStation._id\n            }\n            const postDashboardPromise = dispatchPostDashboard(defaultDashboard)\n            postDashboardPromise.then(async postedDashboard => {\n                alert('Added dashboard to location. There already should be a dashboard tied to this location, so this is an temp fix')\n                updatedStation.dashboards = [postedDashboard._id.$oid]\n                await dispatchPutStation(updatedStation, updatedStation._id)\n\n            })\n        }\n\n\n\n        const newDashboardButton = {\n            color: '#bcbcbc',\n            id: selectedTask._id,\n            name: selectedTask.name,\n            task_id: selectedTask._id\n        }\n        updatedDashboard.buttons.push(newDashboardButton)\n        dispatchPutDashboard(updatedDashboard, updatedDashboard._id.$oid)\n\n        // dispatch(taskActions.removeTask(selectedTask._id)) // Remove the temporary task from the local copy of tasks\n    }\n\n\n\n    return (\n        <>\n            {!!selectedTask &&\n            <>\n              <div>\n                  {renderLoadUnloadText()}\n              </div>\n              <styled.TaskContainer schema = {\"tasks\"}>\n                <styled.ContentContainer>\n                    <ConfirmDeleteModal\n                        isOpen={!!confirmDeleteObjectModal}\n                        title={\"Are you sure you want to delete This Object?\"}\n                        button_1_text={\"Yes\"}\n                        button_2_text={\"No\"}\n                        handleClose={() => setConfirmDeleteObjectModal(null)}\n                        handleOnClick1={() => {\n                            dispatchDeleteObject(selectedObject._id)\n                            setConfirmDeleteObjectModal(null)\n\n                        }}\n                        handleOnClick2={() => {\n                            setConfirmDeleteObjectModal(null)\n                        }}\n                    />\n\n                    <ConfirmDeleteModal\n                        isOpen={!!confirmExitModal}\n                        title={\"Are you sure you want to go back? Any progress will not be saved\"}\n                        button_1_text={\"Yes\"}\n                        button_2_text={\"No\"}\n                        handleClose={() => setConfirmExitModal(null)}\n                        handleOnClick1={() => {\n                          onBackClick(routeId)\n                          dispatchSetEditingObject(false)\n                        }}\n                        handleOnClick2={() => {\n                            setConfirmExitModal(null)\n                        }}\n                    />\n\n                    {confirmDeleteModal &&\n                        <ConfirmDeleteModal\n                            isOpen={!!confirmDeleteModal}\n                            title={\n\n                                `Are you sure you want to delete this Route?\n\n                    ${routeProcesses.length > 0 ?\n                                    `This task is a part of processes:\n\n                        ${routeProcesses.map((process) => {\n                                        // Try catch for error with editing an existing task that belongs to a new process\n                                        try {\n                                            return ` '${process.name}'`\n\n                                        } catch (error) {\n                                            return ``\n                                        }\n                                    })}\n\n                        and will be removed from these processes if deleted.\n                        `\n                                    :\n                                    ''\n                                }\n                    `\n                            }\n                            button_1_text={\"Yes\"}\n                            handleOnClick1={() => {\n                              dispatchDeleteRouteClean(deleteID)\n                              dispatchSetSelectedHoveringTask(null)\n                              setConfirmDeleteModal(null)\n                            }}\n                            button_2_text={\"No\"}\n                            handleOnClick2={() => setConfirmDeleteModal(null)}\n                            handleClose={() => setConfirmDeleteModal(null)}\n                        />\n                    }\n\n                    {/*\n                If it's a process route and its a new route then add the ability to select already existing routes.\n                Some filtering is done based on certain conditions, see 'options' key\n            */}\n                    {!!selectedTask && isProcessTask && !!selectedTask.new &&\n                      <>\n                            <div style={{ marginBottom: '1rem' }}>\n                                <ContentHeader\n                                    content={'tasks'}\n                                    mode={'create'}\n                                    onClickBack={() => {\n                                      if(JSON.stringify(selectedTask)!== JSON.stringify(values)){\n                                        setConfirmExitModal(true)\n                                      }\n                                      else{\n                                        onBackClick(routeId)\n                                        dispatchSetEditingObject(false)\n                                      }\n                                    }}\n                                />\n\n                            </div>\n\n                            {/*<styled.RowContainer style={{ justifyContent: 'center', marginBottom: '1rem' }}>\n                                <styled.DualSelectionButton\n                                    style={{ borderRadius: '.5rem 0rem 0rem .5rem' }}\n                                    onClick={() => {\n                                        setContentType('existing')\n                                    }}\n                                    selected={contentType === 'existing'}\n                                >\n                                    Existing\n                                </styled.DualSelectionButton>\n\n                                <styled.DualSelectionButton\n                                    style={{ borderRadius: '0rem .5rem .5rem 0rem' }}\n                                    onClick={() => {\n                                        setContentType('new')\n                                    }}\n                                    selected={contentType === 'new'}\n\n                                >\n                                    New Route\n                                </styled.DualSelectionButton>\n\n                            </styled.RowContainer>*/}\n\n\n                            {contentType === 'existing' &&\n                                <div style={{ marginBottom: '1rem', paddingBottom: '2rem', borderBottom: `2px solid ${themeContext.bg.tertiary}` }}>\n                                    <styled.Label>\n                                        Select an <styled.LabelHighlight>existing</styled.LabelHighlight> Route\n                                    </styled.Label>\n                                    <div style={{ height: 'fit-content' }}>\n                                        <DropDownSearch\n                                            placeholder=\"Select Existing Route\"\n                                            label=\"Choose An Existing Route\"\n                                            labelField=\"name\"\n                                            create={true}\n                                            valueField=\"name\"\n                                            onMouseEnter={(item) => {\n                                                dispatchSetSelectedHoveringTask(item)\n                                            }}\n                                            onMouseLeave={(item) => dispatchSetSelectedHoveringTask(null)}\n                                            onCreateNew={() => setShowEditor(true)}\n                                            options={\n                                                Object.values(routes)\n                                                    .filter(task => {\n                                                        if (task.map_id !== currentMap._id) return false\n\n                                                        // This filters out tasks when fixing a process\n                                                        // If the process is broken, then you can only select tasks that are associated with the last route before break's unload station\n                                                        if (fixingProcess) {\n\n                                                            // Gets the route before break\n                                                            const routeBeforeBreak = selectedProcess.routes[selectedProcess.broken - 1]\n\n                                                            if (!!routeBeforeBreak.unload) {\n                                                                const unloadStationID = routeBeforeBreak.unload.station\n\n                                                                if (task.load.station === unloadStationID) {\n                                                                    return true\n\n                                                                }\n                                                            }\n                                                        }\n\n                                                        // If the selected process has routes, then filter out tasks that have load stations that arent the last route's unload station\n                                                        // This eliminates 'broken' processes with tasks that are between non-connected stations\n                                                        else if (selectedProcess.routes.length > 0) {\n                                                            if (insertIndex === 0) {\n                                                                const firstTask = selectedProcess.routes[0]\n                                                                return isNextRouteViable(task, firstTask)\n                                                            }\n                                                            else {\n                                                                // Gets the previous route\n                                                                const previousRoute = getPreviousRoute(selectedProcess.routes, values._id)\n                                                                return isNextRouteViable(previousRoute, task)\n                                                            }\n                                                        }\n\n                                                        else {\n                                                            return true\n                                                        }\n                                                    })\n                                            }\n                                            // values={!!selectedTask.idle_location ? [positions[selectedTask.idle_location]] : []}\n                                            dropdownGap={2}\n                                            noDataLabel=\"No matches found\"\n                                            closeOnSelect=\"true\"\n                                            name={fieldParent ? `${fieldParent}.existingRoute` : \"existingRoute\"}\n                                            onChange={async (dropdownValues) => {\n\n                                                const selectedValue = dropdownValues[0] || {}\n\n                                                const {\n                                                    obj: selectedObjId = \"\",\n                                                    _id: selectedRouteId = \"\"\n                                                } = selectedValue || {}\n\n                                                const selectedObj = selectedObjId ? (objects[selectedObjId] || null) : null\n\n                                                // If this task is part of a process and not already in the array of routes, then add the task to the selected process\n                                                if (!selectedProcess.routes.includes(selectedRouteId)) {\n\n                                                    var selectedRoute = { ...selectedValue, needsSubmit: true, obj: selectedObject ? selectedObject : null, temp: values.temp }\n                                                    // setFieldValue\n                                                    if (fieldParent) {\n                                                        setFieldValue(fieldParent, selectedRoute)\n                                                    }\n                                                    else {\n                                                        await setValues(selectedRoute)\n                                                    }\n\n                                                }\n                                            }}\n                                            className=\"w-100\"\n                                            schema=\"tasks\"\n                                            style={{ background: themeContext.bg.primary, zIndex: 100 }}\n                                        />\n                                    </div>\n                                </div>\n                            }\n                        </>\n                    }\n\n                    {contentType === 'new' &&\n                        <div>\n                        <>\n                                {!!selectedTask && isProcessTask && !!selectedTask.new ?\n                                    <></>\n                                    :\n                                    <div style={{ marginBottom: '1rem' }}>\n                                        <ContentHeader\n                                            content={'tasks'}\n                                            mode={'create'}\n                                            onClickBack={() => {\n                                              if(JSON.stringify(selectedTask)!== JSON.stringify(values)){\n                                                setConfirmExitModal(true)\n                                              }\n                                              else{\n                                                onBackClick(routeId)\n                                                dispatchSetEditingObject(false)\n                                              }\n                                            }}\n                                        />\n                                    </div>\n                                }\n                            </>\n\n\n                            {/* Task Title */}\n                            {/* <styled.Header style={{ marginTop: '0rem',marginRight: \".5rem\", fontSize: '1.2rem' }}>Route Name</styled.Header> */}\n\n                            <styled.Title>Route Name</styled.Title>\n\n                            <TextField\n                                InputComponent={Textbox}\n                                placeholder = {\"Route Name\"}\n                                name={fieldParent ? `${fieldParent}.name` : \"name\"}\n                                schema={'tasks'}\n                                focus={params.page === \"processes\" ? !name : name}\n                                inputStyle={{ background: isProcessTask ? themeContext.bg.primary : themeContext.bg.secondary }}\n                                style={{ fontSize: '1.2rem', fontWeight: '600' }}\n                            />\n\n                            {isTransportTask &&\n                                <>\n                                    <styled.Title style={{ marginTop: '2rem', marginRight: \".5rem\"}}>Object</styled.Title>\n\n                                    {!showObjectSelector &&\n                                        <>\n                                            {!!routeObject && !!objects[routeObject?._id] ?\n                                                <>\n                                                    <styled.ListItem> {/* style = {{height: url==='/tasks' ? '4rem': '2.5rem', marginBottom: '0rem;'}}> */}\n                                                        <styled.ItemContainer>\n                                                            <styled.ListItemIcon\n                                                                className='fas fa-box'\n                                                            />\n                                                            <styled.ListItemTitle style = {{paddingLeft: \"1rem\", flex: \"1\"}}>{routeObject ? objects[routeObject._id].name : \"\"}</styled.ListItemTitle>\n\n                                                            <styled.Icon\n                                                                className='fas fa-exchange-alt'\n                                                                style={{ color: 'white', transform: 'rotate(-45deg)', fontSize: '1.1rem' }}\n                                                                onClick={() => setShowObjectSelector(!showObjectSelector)}\n                                                            />\n                                                            <styled.Icon\n                                                                className='far fa-minus-square'\n                                                                style={{ color: 'white', marginLeft: '1rem' }}\n                                                                onClick={() => {\n                                                                    dispatchSetRouteObject(null)\n                                                                    dispatchSetSelectedObject(null)\n                                                                    setFieldValue(fieldParent ? `${fieldParent}.route_object` : \"route_object\", null, false)\n                                                                }}\n                                                            />\n                                                        </styled.ItemContainer>\n                                                    </styled.ListItem>\n\n                                                </>\n                                                :\n                                                <Button\n                                                    style={{ marginRight: '0', marginLeft: '0', width: '100%' }}\n                                                    schema={'objects'}\n                                                    secondary\n                                                    // disabled={!!selectedTask && !!selectedTask._id && !!selectedTask.new}\n                                                    onClick={() => setShowObjectSelector(!showObjectSelector)}\n                                                >\n                                                    Choose an Object...\n                                    </Button>\n                                            }\n                                        </>\n                                    }\n\n                                    {!!showObjectSelector &&\n                                        <ObjectEditor\n                                            onBackClick={() => onObjectBackClick()}\n                                            name={fieldParent ? `${fieldParent}.obj.name` : \"obj.name\"}\n                                            description={fieldParent ? `${fieldParent}.obj.description` : \"obj.description\"}\n                                            focus={!obj}\n                                            onSaveObject={() => onSaveObject()}\n                                            onAddObject={() => onAddObject()}\n                                            onDeleteObject={() => {\n                                                setConfirmDeleteObjectModal(true)\n                                            }}\n                                            onSelectObject={() => onSelectObject()}\n                                            deleteDisabled={!!selectedObject?.new}\n                                            saveDisabled={objectSaveDisabled}\n                                        />\n                                    }\n\n                                    {!showObjectSelector &&\n                                        <styled.HelpText style={{ fontSize: '.8rem', marginBottom: '1rem' }}>\n                                            Select an object to be transported\n                                </styled.HelpText>\n                                    }\n\n\n                                    {isProcessRoute &&\n                                        <>\n                                            <styled.Title style={{alignSelf: 'center' }}>Tracking Type</styled.Title>\n                                            <styled.RowContainer style={{ justifyContent: 'center' }}>\n                                                <styled.DualSelectionButton\n                                                    style={{ borderRadius: '.5rem 0rem 0rem .5rem' }}\n                                                    onClick={() => {\n                                                        setFieldValue(fieldParent ? `${fieldParent}.track_quantity` : \"track_quantity\", true)\n                                                    }}\n                                                    selected={values.track_quantity}\n                                                >\n                                                    Quantity\n                                        </styled.DualSelectionButton>\n\n                                                <styled.DualSelectionButton\n                                                    style={{ borderRadius: '0rem .5rem .5rem 0rem' }}\n                                                    onClick={() => {\n                                                        setFieldValue(fieldParent ? `${fieldParent}.track_quantity` : \"track_quantity\", false)\n                                                    }}\n                                                    selected={!values.track_quantity}\n\n                                                >\n                                                    Fraction\n                                        </styled.DualSelectionButton>\n\n                                            </styled.RowContainer>\n                                        </>\n                                    }\n                                </>\n                            }\n\n                            {/* Load and Unload Parameters */}\n                            <div style={{ height: \"100%\"}}>\n                                {renderLoadUnloadFields()}\n                            </div>\n                            <hr />\n                        </div>\n                    }\n                    {contentType === 'new' &&\n                        <>\n                            <Button\n                                schema={'tasks'}\n                                disabled={submitDisabled || !!editingObject}\n                                onClick={async () => {\n                                    await onSave()\n                                }}\n                            >{(!isTaskInProcess ? 'Add' : 'Save')} Route</Button>\n\n\n                            {/* Remove Task From Process Button */}\n\n                                {!!isProcessTask && selectedProcess ?\n                                    <Button\n                                        schema={'error'}\n                                        disabled={!!selectedTask && !!selectedTask._id && isNew}\n                                        secondary\n                                        onClick={() => {\n                                            onRemove(routeId)\n                                        }}\n                                    >\n                                        Remove Route\n                                </Button>\n                                    :\n                                    <Button\n                                        schema={'error'}\n                                        secondary\n                                        disabled={!!selectedTask && !!selectedTask._id && !!selectedTask.new}\n                                        onClick={() => {\n                                            setConfirmDeleteModal(true)\n                                        }}\n\n                                    >\n                                        Delete Route\n                                </Button>\n                                }\n\n\n                        </>\n                    }\n\n                </styled.ContentContainer>\n              </styled.TaskContainer>\n            </>\n            }\n        </>\n\n    )\n}\n\n// Specifies propTypes\nTaskField.propTypes = {\n    onSave: PropTypes.func,\n    toggleEditing: PropTypes.func,\n    fieldParent: null,\n    setFieldValue: PropTypes.func,\n    setValues: PropTypes.func,\n    setFieldTouched: PropTypes.func,\n    getFieldMeta: PropTypes.func,\n    onBackClick: PropTypes.func,\n    onRemove: PropTypes.func,\n    onDelete: PropTypes.func,\n};\n\n// Specifies the default values for props:\nTaskField.defaultProps = {\n    onSave: () => { },\n    toggleEditing: () => { },\n    fieldParent: null,\n    setFieldValue: () => { },\n    setValues: () => { },\n    setFieldTouched: () => { },\n    getFieldMeta: () => { },\n    onBackClick: () => { },\n    onRemove: () => { },\n    onDelete: () => { },\n};\n\nexport default TaskField\n","import {Formik} from \"formik\";\nimport {routeSchema} from \"../../../../../methods/utils/form_schemas\";\nimport React, {useEffect, useRef} from \"react\";\nimport TaskField from \"../task_field/route_field\";\nimport {deleteRouteClean, saveFormRoute, setSelectedTask} from \"../../../../../redux/actions/tasks_actions\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport * as taskActions from \"../../../../../redux/actions/tasks_actions\";\nimport { pageDataChanged } from \"../../../../../redux/actions/sidebar_actions\"\n\nconst TaskForm = (props) => {\n\n\tconst {\n\t\tinitialVals,\n\t\ttoggleEditing,\n\t\tisNew,\n\t\t...remainingProps\n\t} = props\n\n\tconst formRef = useRef(null)\t// gets access to form state\n\n\tconst {\n\t\t\tcurrent\n\t} = formRef || {}\n\n\tconst {\n\t\t\tvalues = {},\n\t\t\tinitialValues = {}\n\t} = current || {}\n\n\tconst dispatch = useDispatch()\n\tconst dispatchSaveFormRoute = async (formRoute) => await dispatch(saveFormRoute(formRoute))\n\tconst dispatchSetSelectedTask = (task) => dispatch(setSelectedTask(task))\n\tconst dispatchRemoveTask = async (taskId) => await dispatch(taskActions.removeTask(taskId))\n\tconst dispatchDeleteRouteClean = async (routeId) => await dispatch(taskActions.deleteRouteClean(routeId))\n\tconst onEditing = async (props) => await dispatch(taskActions.editingTask(props))\n\tconst dispatchPageDataChanged = (bool) => dispatch(pageDataChanged(bool))\n\n\n\tconst tasks = useSelector(state => state.tasksReducer.tasks)\n\tconst editing = useSelector(state => state.tasksReducer.editingTask) //Moved to redux so the variable can be accesed in the sideBar files for confirmation modal\n\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t\tdispatchSetSelectedTask(null)\n\t\t}\n\n\t}, []);\n\n\n\tconst handleSubmit = async (values) => {\n\n\t\tawait dispatchSaveFormRoute(values)\n\n\t\tdispatchSetSelectedTask(null)\n\t\tonEditing(false)\n\t}\n\n\tconst handleBackClick = (routeId) => {\n\t\tdispatchSetSelectedTask(null)\n\t\tif(tasks[routeId] && tasks[routeId].new) {\n\t\t\tdispatchRemoveTask(routeId)\n\t\t}\n\t\tonEditing(false)\n\t}\n\n\tconst handleDelete = async (routeId) => {\n\t\tawait dispatchDeleteRouteClean(routeId)\n\t\tonEditing(false)\n\t\tdispatchSetSelectedTask(null)\n\t}\n\n\treturn (\n\t\t<Formik\n\t\t\tinitialValues={initialVals}\n\t\t\tinnerRef = {formRef}\n\n\t\t\t// validation control\n\t\t\tvalidationSchema={routeSchema}\n\t\t\tvalidateOnChange={true}\n\t\t\tvalidateOnMount={false} // leave false, if set to true it will generate a form error when new data is fetched\n\t\t\tvalidateOnBlur={true}\n\n\t\t\t// enableReinitialize={true} // leave false, otherwise values may be reset when new data is fetched\n\t\t\tonSubmit={async (values, formikHelpers) => {\n\n\t\t\t\tconst {\n\t\t\t\t\tsetSubmitting,\n\t\t\t\t\tsetTouched,\n\t\t\t\t} = formikHelpers\n\n\t\t\t\t// set submitting to true, handle submit, then set submitting to false\n\t\t\t\t// the submitting property is useful for eg. displaying a loading indicator\n\t\t\t\t// const {\n\t\t\t\t// \tbuttonType\n\t\t\t\t// } = values\n\t\t\t\tsetSubmitting(true)\n\t\t\t\tawait handleSubmit(values)\n\t\t\t\tsetTouched({}) // after submitting, set touched to empty to reflect that there are currently no new changes to save\n\t\t\t\tsetSubmitting(false)\n\n\t\t\t}}\n\t\t>\n\t\t\t{formikProps => {\n\n\t\t\t\tconst {\n\t\t\t\t\tsubmitForm,\n\t\t\t\t\ttouched,\n\t\t\t\t\tinitialValues,\n\t\t\t\t\tvalues\n\t\t\t\t} = formikProps\n\n\t\t\t\treturn(\n\t\t\t\t\t<TaskField\n\t\t\t\t\t\t{...formikProps}\n\t\t\t\t\t\tonDelete={handleDelete}\n\t\t\t\t\t\tisNew={isNew}\n\t\t\t\t\t\tisTransportTask={true}\n\t\t\t\t\t\ttoggleEditing={toggleEditing}\n\t\t\t\t\t\tisProcessTask={null}\n\t\t\t\t\t\tonSave={submitForm}\n\t\t\t\t\t\tonBackClick={handleBackClick}\n\t\t\t\t\t\tonRemove={null}\n\t\t\t\t\t\t{...remainingProps}\n\t\t\t\t\t/>\n\t\t\t\t)\n\t\t\t}}\n\t\t</Formik>\n\t)\n}\n\nexport default TaskForm\n","import React, { useState, useEffect } from 'react'\nimport * as styled from './tasks_content.style'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useParams } from 'react-router-dom'\n\n// Import Components\nimport ContentList from '../content_list/content_list'\nimport TaskAddedAlert from '../../../widgets/widget_pages/dashboards_page/dashboard_screen/task_added_alert/task_added_alert'\n\n// Import actions\nimport * as taskActions from '../../../../redux/actions/tasks_actions'\nimport * as dashboardActions from '../../../../redux/actions/dashboards_actions'\nimport * as objectActions from '../../../../redux/actions/objects_actions'\nimport * as taskQueueActions from '../../../../redux/actions/task_queue_actions'\n\nimport { postTaskQueue } from '../../../../redux/actions/task_queue_actions'\n\n// Import Utils\nimport { deepCopy } from '../../../../methods/utils/utils'\nimport { tasksSortedAlphabetically } from '../../../../methods/utils/task_utils'\nimport RouteTask from './tasks_templates/route_task'\nimport uuid from 'uuid'\nimport TaskForm from \"./task_form/route_form\";\nimport {\n    generateDefaultRoute,\n    getLoadStationDashboard,\n    getLoadStationId,\n    isHumanTask,\n    isMiRTask\n} from \"../../../../methods/utils/route_utils\";\nimport { willRouteDeleteBreakProcess } from \"../../../../methods/utils/processes_utils\";\nimport { deleteRouteClean } from \"../../../../redux/actions/tasks_actions\";\nimport { isObject } from \"../../../../methods/utils/object_utils\";\nimport { DEVICE_CONSTANTS } from \"../../../../constants/device_constants\";\nimport { ADD_TASK_ALERT_TYPE } from '../../../../constants/dashboard_constants'\nimport {getSidebarDeviceType, isRouteInQueue} from \"../../../../methods/utils/task_queue_utils\";\nimport {isDeviceConnected} from \"../../../../methods/utils/device_utils\";\n\nexport default function TaskContent(props) {\n\n    // Connect redux reducers\n    const dispatch = useDispatch()\n    const params = useParams()\n    const onTaskQueueItemClicked = (id) => dispatch({ type: 'TASK_QUEUE_ITEM_CLICKED', payload: id })\n    const onHandlePostTaskQueue = (props) => dispatch(taskQueueActions.handlePostTaskQueue(props))\n    const onEditing = async (props) => await dispatch(taskActions.editingTask(props))\n    const dispatchSetSelectedTask = async (task) => await dispatch(taskActions.setSelectedTask(task))\n    const dispatchAddTask = async (task) => await dispatch(taskActions.addTask(task))\n\n    const tasks = useSelector(state => state.tasksReducer.tasks)\n    const taskQueue = useSelector(state => state.taskQueueReducer.taskQueue)\n    const selectedTask = useSelector(state => state.tasksReducer.selectedTask)\n    const currentMapId = useSelector(state => state.settingsReducer.settings.currentMapId)\n    const maps = useSelector(state => state.mapReducer.maps)\n    const currentMap = Object.values(maps).find(map => map._id === currentMapId)\n\n    const MiRMapEnabled = useSelector(state => state.localReducer.localSettings.MiRMapEnabled)\n\n    const stations = useSelector(state => state.stationsReducer.stations)\n    const editing = useSelector(state => state.tasksReducer.editingTask) //Moved to redux so the variable can be accesed in the sideBar files for confirmation modal\n    const objects = useSelector(state => state.objectsReducer.objects)\n    const selectedObject = useSelector(state => state.objectsReducer.selectedObject)\n    const routeObject = useSelector(state => state.objectsReducer.routeObject)\n\n    /**\n    * @param {*} Id\n    */\n\n    // State definitions\n    //const [editing, toggleEditing] = useState(false)    // Is a task being edited? Otherwise, list view\n    const [selectedTaskCopy, setSelectedTaskCopy] = useState(null)  // Current task\n    const [shift, setShift] = useState(false) // Is shift key pressed ?\n    const [isNew, setIsNew] = useState(false) // Is shift key pressed ?\n    const [addTaskAlert, setAddTaskAlert] = useState(null);\n\n\n    // To be able to remove the listeners, the function needs to be stored in state\n\n    //Parameters to pass into handlePostTaskQueue dispatch\n    const dashboardID = getLoadStationDashboard(selectedTask)\n    const Id = selectedTask ? selectedTask._id : {}\n    const name = selectedTask ? selectedTask.name : {}\n    const custom = false\n    const fromSideBar = true\n\n    const [shiftCallback] = useState(() => e => {\n        setShift(e.shiftKey)\n    })\n\n    // Creates listeners for if the shift key is pressed\n    useEffect(() => {\n\n        window.addEventListener('keydown', shiftCallback)\n        window.addEventListener('keyup', shiftCallback)\n\n        // When component unmounts, clean up by removing listeners\n        return function cleanup() {\n            window.removeEventListener('keydown', shiftCallback)\n            window.removeEventListener('keyup', shiftCallback)\n        }\n    })\n\n    const handleDefaultObj = (objId, prevObj) => {\n\n        if (isObject(objects[objId])) {\n            return objects[objId]\n        }\n        else if (prevObj) {\n            return prevObj\n        }\n        else {\n            return null\n        }\n    }\n\n\n\n    const onExecuteTask = () => {\n        const deviceType = getSidebarDeviceType(selectedTask)\n\n        const inQueue = isRouteInQueue(Id, deviceType)\n\n        const connectedDeviceExists = isDeviceConnected()\n\n        if(!connectedDeviceExists && deviceType !== DEVICE_CONSTANTS.HUMAN) {\n            // display alert notifying user that task is already in queue\n            setAddTaskAlert({\n                type: ADD_TASK_ALERT_TYPE.TASK_EXISTS,\n                label: \"Alert! No device is currently connected to run this route\",\n                message: `'${name}' not added`,\n            })\n\n            // clear alert after timeout\n            return setTimeout(() => setAddTaskAlert(null), 1800)\n        }\n\n        // add alert to notify task has been added\n        // If in Q, then tell them it's already there\n        if (inQueue) {\n            // display alert notifying user that task is already in queue\n            setAddTaskAlert({\n                type: ADD_TASK_ALERT_TYPE.TASK_EXISTS,\n                label: \"Alert! Task Already in Queue\",\n                message: `'${name}' not added`,\n            })\n\n            // clear alert after timeout\n            return setTimeout(() => setAddTaskAlert(null), 1800)\n        }\n\n        // Else see what type of task it is and add accordingly\n        else {\n\n            // Handle Add\n            if (deviceType !== 'human') {\n                setAddTaskAlert({\n                    type: ADD_TASK_ALERT_TYPE.TASK_ADDED,\n                    label: \"Task Added to Queue\",\n                    message: name\n                })\n\n                // clear alert after timeout\n                setTimeout(() => setAddTaskAlert(null), 1800)\n            }\n            onHandlePostTaskQueue({ dashboardID, tasks, deviceType, taskQueue, Id, name, custom, fromSideBar })\n\n        }\n\n\n    }\n\n    if (editing && selectedTask !== null) { // Editing Mode\n        return (\n            <TaskForm\n                isNew={isNew}\n                initialVals={{\n                    ...selectedTask,\n                    obj: !!selectedTask.route_object ? selectedTask.route_object : null,\n                }}\n                shift={shift}\n                toggleEditing={props => onEditing(props)}\n            />\n        )\n    } else {    // List Mode\n        return (\n            <>\n                <TaskAddedAlert\n                    containerStyle={{\n                        'position': 'absolute'\n                    }}\n                    {...addTaskAlert}\n                    visible={!!addTaskAlert}\n                />\n                <ContentList\n                    title={'Routes'}\n                    schema={'tasks'}\n                    elements={\n\n                        tasksSortedAlphabetically(Object.values(tasks))\n                            // Filters outs any tasks that don't belong to the current map\n                            .filter(task => task.map_id === currentMap._id)\n                            // Filter out empty tasks that are somehow created when choosing an existing task to add to a process in the process tab\n                            // These are deleted by the cleaner function on page refresh but in the meantime dont show in the list view\n                            .filter(task => task.load.position !== null)\n\n                    }\n                    onMouseEnter={(task) => {\n                        dispatchSetSelectedTask(task)\n                    }}\n                    onMouseLeave={() => {\n                      dispatchSetSelectedTask(null)\n\n                    }}\n                    onClick={(task) => {\n                        setIsNew(false)\n                        // If task button is clicked, start editing it\n                        dispatchSetSelectedTask(task)\n                        onEditing(true)\n                    }}\n\n                    executeTask={() => {\n                        onExecuteTask()\n                    }}\n\n                    onPlus={() => {\n                        const newTask = generateDefaultRoute()\n                        setIsNew(true)\n                        dispatchAddTask(newTask)\n                        dispatchSetSelectedTask(newTask)\n                        onEditing(true)\n                    }}\n                />\n            </>\n        )\n    }\n}\n","import styled, { css } from 'styled-components'\n\nexport const ContentContainer = styled.div`\n    flex-grow: 1;\n    padding: 1rem;\n    padding-top: 1.5rem;\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    overflow-y: scroll;\n    overflow-x: hidden;\n\n    ::-webkit-scrollbar{\n        display: none;\n    }\n\n`\n\nexport const DevicesSpan = styled.span`\n    /* line-height: 2rem; */\n`\n\nexport const Circle = styled.div`\n    height: 4rem;\n    width: 4rem;\n    border-radius: 50%;\n    border: solid .1rem red;\n    position: absolute;\n`\n\nexport const SettingsIcon = styled.i`\n    font-size: 3rem;\n    display: flex;\n    position: absolute;\n    left: 17rem;\n    margin-top: -1rem;\n`\n\nexport const AddDeviceIcon = styled.i`\n    font-size: 5rem;\n    margin-top: 1rem;\n    &:hover{\n        cursor: pointer;\n    }\n\n`\n\nexport const SettingsContainer = styled.div`\n    display: flex;\n    width: 100%;\n    flex-direction: column;\n    align-items: center;\n`\n\nexport const SettingsSectionsContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    max-width: 25rem;\n    margin: .75rem 0rem;\n`\n\nexport const SettingsLabel = styled.h1`\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz2};\n    color: ${props => props.theme.schema[props.schema].solid};\n    line-height: 1rem;\n`\n\nexport const Title = styled.h1`\n    font-family: ${props => props.theme.font.primary};\n    font-size: 2rem;\n    font-weight: 500;\n    color: ${props => props.theme.schema[props.schema].solid};\n`\n\nexport const Header = styled.div`\n    display: flex; \n    flex-direction: row;\n    width: 100%;\n    justify-content: space-between;\n`\n\nexport const RowContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n`","import styled from 'styled-components'\n\nexport const SettingsContainer = styled.div`\n    flex-grow: 1;\n    padding: 1rem;\n    padding-top: 1.5rem;\n    padding-bottom: 0;\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    overflow-y: scroll;\n\n    ::-webkit-scrollbar{\n        display: none;\n    }\n`\n\nexport const SettingContainer = styled.div`\n\n    width: 100%;\n    margin-bottom: 2rem;\n`\nexport const ChevronIcon = styled.i`\n    font-size: 1.3rem;\n    color: white;\n    margin-left: 1rem;\n\n    &:hover{\n        cursor: pointer;\n    }\n`\nexport const RowContainer = styled.div`\n\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n\n    justify-content: space-between;\n    padding-bottom: .5rem;\n    margin-top: .5rem;\n    border-bottom: 1px solid white;\n`\n\nexport const ColumnContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`\n\nexport const Header = styled.p`\n    color: ${props => props.theme.bg.octonary};\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz2};\n\n    margin-bottom: 1rem;\n`\n\nexport const ConnectionIcon = styled.i`\n\n    margin-left: 1rem;\n    font-size: 1.2rem;\n    color: ${props => props.className === 'fas fa-check' ? 'green' :\n        props.className === 'fas fa-circle-notch fa-spin' ? 'yellow' :\n        props.className === 'fas fa-times' ? 'red' : 'gray'\n    };\n`\n\nexport const ConnectionButton = styled.button`\n\n    margin-bottom: 1rem;\n    border: none;\n    border-radius: .5rem;\n    background-color: ${props => props.theme.bg.secondary};\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    outline: 0 !important;\n    width: 10rem;\n\n    box-shadow: 0 0.1rem 0.2rem 0rem #303030;\n\n    &:focus{\n        outline: 0 !important\n    }\n\n    &:active{\n        box-shadow: none;\n    }\n\n    &:hover{\n        background-color: ${props => !props.disabled && props.theme.bg.senary};\n    }\n\n`\n\nexport const SwitchContainerLabel = styled.span`\n    padding: 0;\n    margin: 0;\n    align-self: center;\n    font-family: ${props => props.theme.font.primary};\n    font-size: 1rem;\n    color: ${props => props.theme.bg.octonary};\n`\n\nexport const DualSelectionButton = styled.button`\n    font-size: 1rem;\n    width: 8rem;\n    border: none;\n    font-family: ${props => props.theme.font.primary};\n\n    color: ${props => props.selected ? props.theme.bg.octonary : props.theme.bg.quinary};\n\n    background-color: ${props => props.selected ? props.theme.schema.tasks.solid : props.theme.bg.tertiary};\n\n    transition: background-color 0.25s ease, box-shadow 0.1s ease;\n\n    &:focus{\n        outline: 0 !important\n    }\n\n    &:active{\n        box-shadow: none;\n    }\n\n    &:hover{\n        //background-color: ${props => props.theme.bg.quaternary};\n    }\n`\n\nexport const ShiftSettingsContainer = styled.div`\n    width: 100%;\n    min-width: 22rem;\n    margin-bottom: 1rem;\n`","import styled, { css } from 'styled-components'\nimport * as style from '../devices_content.style'\nimport * as styles from '../../settings/settings.style'\nimport * as stylel from '../../locations/edit_location/location_button/location_button.style'\nimport { columnContainer } from '../../../../../common_css/common_css'\n\nexport const Container = styled(style.SettingsContainer)`\n    height: 100%;\n`\n\nexport const SectionsContainer = styled(style.SettingsSectionsContainer)`\n    background-color: ${props => props.theme.bg.secondary};\n    padding: .25rem;\n    border-radius: .5rem;\n    margin-bottom: 1rem;\n    box-shadow: ${props => props.theme.cardShadow};\n    min-width: 21rem;\n`\n\nexport const Label = styled(style.SettingsLabel)`\n    margin-bottom: 1rem;\n`\n\nexport const RowContainer = styled(style.RowContainer)`\n`\n\nexport const ColumnContainer = styled.div`\n    ${columnContainer}\n    align-items: center;\n    width: 100%;\n`\n\nexport const ConnectionButton = styled(styles.ConnectionButton)`\n`\n\nexport const ConnectionIcon = styled(styles.ConnectionIcon)`\n`\n\nexport const LocationTypeGraphic = styled(stylel.LocationTypeGraphic)`\n`\n\nexport const LocationTypeButton = styled(stylel.LocationTypeButton)`\n`\n\nexport const DeviceIcon = styled.i`\n    color: ${props => props.theme.bg.octonary};\n\tfont-size: 3rem;\n`\n\nexport const ConnectionText = styled.p`\n    color: ${props => props.theme.bg.octonary};\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz3};\n    user-select: none;\n`\n\nexport const ToolTip = styled.i`\n    margin-bottom: 1rem;\n    margin-left: .5rem;\n    color: ${props => props.theme.bg.quaternary};\n\n`","import styled, { css } from 'styled-components'\n\nimport * as style from '../device_edit.style'\n// import * as style from '../../devices_content.style'\nimport { columnContainer } from '../../../../../../common_css/common_css'\n\n\nexport const Container = styled(style.Container)`\n`\n\nexport const SectionsContainer = styled(style.SectionsContainer)`\n`\n\nexport const Label = styled(style.Label)`\n`\n\nexport const ScheduleLabel = styled(style.Label)`\n    font-size: ${props => props.theme.fontSize.sz3};\n`\n\nexport const RowContainer = styled(style.RowContainer)`\n    justify-content: space-between;\n`\n\nexport const ColumnContainer = styled.div`\n    ${columnContainer}\n`\n\nexport const ScheduleContainer = styled(style.SectionsContainer)`\n    background-color: ${props => props.theme.bg.tertiary};\n    margin-bottom: .25rem;\n    \n`\n\nexport const DayOfTheWeekContainer = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    user-select: none;\n    background-color: ${props => props.theme.bg.tertiary};\n\n    height: 2rem;\n    width: 2rem;\n\n    /* background-color: red; */\n    border-radius:50%;\n\n    ${props => props.checked ? `\n        box-shadow: inset 2px 2px 4px 0px rgba(0, 0, 0, 0.25), inset -2px -2px 3px 0px rgba(255, 255, 255, 0.6);\n        \n        background: rgba(0,0,0,0.05);\n    `\n        :\n        `box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2), -2px -2px 3px rgba(255, 255, 255, .6);`\n        // `box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.3), -3px -3px 5px rgba(0, 0, 0, -.3);`\n    };\n\n    &:hover{\n        cursor: pointer;\n    }\n`\n\nexport const DayOfTheWeekText = styled.p`\n    margin-bottom: 0rem;\n`","import React, { useState, useEffect, useMemo } from 'react';\nimport { FieldArray, useField, useFormikContext } from 'formik'\n\n// Import style\nimport * as styled from './device_schedule.style'\n\nimport { getMessageFromError } from \"../../../../../../methods/utils/form_utils\";\n\nconst DayOfTheWeekButton = (props) => {\n\n    const {\n        day,\n        onChange,\n        index,\n    } = props\n\n    const { setFieldValue, setFieldTouched } = useFormikContext();\n    const [field, meta] = useField(props);\n\n    const {\n        value: fieldValue,\n        name: fieldName\n    } = field\n\n    const {\n        touched,\n        error\n    } = meta\n\n    const daysOnField = useField(`schedules.${index}.days_on`)\n    const daysOnValue = daysOnField[0].value\n\n    const hasError = touched && error;\n    const errorMessage = getMessageFromError(error);\n\n    return (\n        <styled.DayOfTheWeekContainer\n            checked={!!daysOnValue && daysOnValue.includes(day)}\n            onClick={() => {\n\n                if (!touched) setFieldTouched(fieldName, true)\n\n                // If daysOnValue is falsy, then add the first day\n                if (!daysOnValue) {\n                    setFieldValue(`schedules.${index}.days_on`, [day])\n\n                }\n                // If it includes the day, then remove\n                else if (daysOnValue.includes(day)) {\n                    const ind = daysOnValue.indexOf(day)\n                    daysOnValue.splice(ind, 1)\n                    setFieldValue(`schedules.${index}.days_on`, daysOnValue)\n                }\n                // Else add the day\n                else {\n                    setFieldValue(`schedules.${index}.days_on`, [...daysOnValue, day])\n                }\n                onChange && onChange(day)\n\n            }}\n        >\n            <styled.DayOfTheWeekText>{day}</styled.DayOfTheWeekText>\n        </styled.DayOfTheWeekContainer>\n    )\n}\n\nexport default DayOfTheWeekButton","// Import Store\nimport store from '../../redux/store/index'\nimport moment from 'moment';\n\nexport const getMinutesFromMoment = (m) => {\n    return m.minutes() + m.hours() * 60;\n}\n\n/**\n * Takes in time12h which is a string: 1:30 pm\n * Converts that string into a 24h string: 13:30\n * @param {*} time12h \n */\nexport const convert12hto24h = (time12h) => {\n    const [numericTime, modifier] = time12h.split(' ');\n\n    let [hours, minutes] = numericTime.split(':');\n\n    if (hours === '12' && (modifier === 'AM' || modifier === 'am')) {\n        hours = '00';\n    } else if (hours === '12' && (modifier === 'PM' || modifier === 'pm')) {\n        hours = '12';\n    }\n\n    if ((modifier === 'PM' || modifier === 'pm') && hours !== '12') {\n        hours = parseInt(hours, 10) + 12;\n    }\n    return `${hours}:${minutes}`\n}\n\n/**\n * Takes in a string time24h: 13:30\n * Converts that string into a 12h string: 1:30 pm\n * @param {*} time24h \n */\nexport const convert24hto12h = (time24h) => {\n    let modifier = 'am'\n\n    let [hours, minutes] = time24h.split(':');\n\n    hours = parseInt(hours)\n\n    if (hours >= 12) {\n        if (hours > 12) {\n            hours = hours - 12\n        }\n        modifier = 'pm'\n    }\n\n    if (minutes.length === 1) {\n        minutes = `0${minutes}`\n    }\n\n    return `${hours}:${minutes} ${modifier}`\n\n}\n\n/**\n * Takes in a string: 1 pm\n * Converts that string to 24 hours: 13:000\n * @param {*} string \n */\nexport const convertTimeStringto24h = (string) => {\n    let [hour, modifier] = string.split(' ');\n    hour = parseInt(hour)\n\n    // If pm and not 12pm then add 12\n    if (modifier === 'pm' && hour !== 12) {\n        hour = hour + 12\n    }\n\n    // If hour is 12pmm, then set to 0\n    if (hour === 12 && modifier === 'pm') {\n        hour = 0\n    }\n\n    // Convert back to string\n    // Add 0 to front if need be\n    if (hour < 10) {\n        hour = hour.toString()\n        hour = `0${hour}`\n    }\n    else {\n        hour = hour.toString()\n    }\n\n    return `${hour}:00`\n\n}\n\nexport const convertEpochTo12h = (epoch) => {\n\n    let convertedTime = new Date(epoch * 1000)\n    let hour = convertedTime.getHours()\n    let minute = convertedTime.getMinutes()\n\n    hour = parseInt(hour)\n    minute = parseInt(minute)\n\n    if (hour < 10) {\n        hour = hour.toString()\n        hour = `0${hour}`\n    }\n    else {\n        hour = hour.toString()\n    }\n\n    if (minute < 10) {\n        minute = minute.toString()\n        minute = `0${minute}`\n    }\n    else {\n        minute = minute.toString()\n    }\n\n    return `${hour}:${minute}`\n}\n\n/**\n * Converts 24h string to int\n * '13:00' is converted to 1300\n * @param {*} time24h \n */\nexport const convert24htoInt = (time24h) => {\n    const [hour, minute] = time24h.split(':')\n    return parseInt(`${hour}${minute}`)\n}\n\n/**\n * Converts into to 24h\n * 1300 is converted to '13:00'\n * @param {*} int \n */\nexport const convertIntto24h = (int) => {\n    let hour\n    let minute\n\n    // If the string length is 3, then the hour must start with a 0\n    if (int.toString().length === 3) {\n        hour = `0${int.toString()[0]}`\n        minute = `${int.toString()[1]}${int.toString()[2]}`\n    }\n    else {\n        hour = `${int.toString()[0]}${int.toString()[1]}`\n        minute = `${int.toString()[2]}${int.toString()[3]}`\n    }\n    return `${hour}:${minute}`\n}\n\n/**\n * Converts strings into time\n * time24h string format: 13:00\n * date string format: May 13, 1993\n * @param {*} time24h \n * @param {*} date \n */\nexport const convert24htoEpoch = (time24h, date) => {\n    const epochTime = Date.parse(`${date} ${time24h}`)\n\n    return epochTime\n}\n\nexport const convertDateToLocaleTimeZone = (date, timezone) => {\n    return new Date(date.toLocaleString(\"en-US\", { timeZone: timezone }))\n}\n\nexport const convertDateto12h = (date) => {\n    const settingState = store.getState().settingsReducer\n\n    if (!!settingState?.settings?.timezone?.label) {\n        date = convertDateToLocaleTimeZone(date, settingState?.settings?.timezone?.label)\n    }\n\n    return convert24hto12h(`${date.getHours()}:${date.getMinutes()}`)\n\n}\n\n\nexport const isDateToday = (date) => {\n    const today = new Date()\n    const incomingDate = new Date(date)\n    // call setHours to take the time out of the comparison\n    if (incomingDate.setHours(0, 0, 0, 0) === today.setHours(0, 0, 0, 0)) {\n        return true\n    }\n    else {\n        return false\n    }\n}\n\n// Takes shift details and returns total work time in seconds\nexport const convertShiftDetailsToWorkingTime = (shiftDetails) => {\n    let totalBreakTime = 0\n\n    Object.values(shiftDetails.breaks)\n        .sort((a, b) => a.startOfBreak - b.startOfBreak)\n        .forEach(br => {\n            if (br.enabled) {\n\n                const start = moment.duration(br.startOfBreak).asSeconds()\n                const end = moment.duration(br.endOfBreak).asSeconds()\n\n                const breakLength = end - start\n                totalBreakTime += breakLength\n\n            }\n        })\n\n\n    const startOfShift = moment.duration(shiftDetails.startOfShift).asSeconds()\n    const endOfShift = moment.duration(shiftDetails.endOfShift).asSeconds()\n\n    const workingTime = endOfShift - startOfShift - totalBreakTime\n    return workingTime\n\n}","import React, { useState, useEffect, useMemo } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { FieldArray, useField, useFormikContext } from 'formik'\nimport moment from 'moment';\nimport uuid from 'uuid';\n\n// Import style\nimport * as styled from './device_schedule.style'\n\n// Import Basic Components\nimport Button from '../../../../../basic/button/button'\nimport Switch from '../../../../../basic/form/switch_field/switch_field'\nimport DropDownSearchField from '../../../../../basic/form/drop_down_search_field/drop_down_search_field'\nimport TimePickerField from '../../../../../basic/form/time_picker_field/time_picker_field'\nimport Textbox from '../../../../../basic/textbox/textbox'\nimport TextField from '../../../../../basic/form/text_field/text_field'\n\n// Import Componenets\nimport DayOfTheWeekButton from './day_of_the_week_button'\n\n// Import Actions\nimport { setSelectedDevice } from '../../../../../../redux/actions/devices_actions'\n\n// Import Utils\nimport { deepCopy } from '../../../../../../methods/utils/utils'\nimport { convert12hto24h } from '../../../../../../methods/utils/time_utils'\n\n// Import Constants\nimport { deviceSchedule } from '../../../../../../constants/scheduler_constants'\n\nconst DeviceSchedule = (props) => {\n\n    const {\n        values\n    } = props\n\n    const dispatch = useDispatch()\n\n    const selectedDevice = useSelector(state => state.devicesReducer.selectedDevice)\n    const positions = useSelector(state => state.positionsReducer.positions)\n    const currentMapId = useSelector(state => state.settingsReducer.settings.currentMapId)\n    const maps = useSelector(state => state.mapReducer.maps)\n    const currentMap = Object.values(maps).find(map => map._id === currentMapId)\n\n    const renderSchedules = () => {\n\n        const renderDaySelector = (id, ind1) => {\n            const daysOfTheWeek = ['M', 'T', 'W', 'Th', 'F', 'Sa', 'Su']\n\n            return daysOfTheWeek.map((day, ind2) => {\n                return (\n                    <DayOfTheWeekButton\n                        name={`schedules.${ind1}.${day}`}\n                        key={`day.${ind2}`}\n                        day={day}\n                        index={ind1}\n                    />\n                )\n            })\n        }\n\n        return (\n            <FieldArray\n                name={'schedules'}\n                validateOnChange={true}\n                render={arrayHelpers => (\n                    <styled.SectionsContainer>\n                        <styled.Label schema={'devices'} >Position Schedule</styled.Label>\n                        {!!values.schedules && values.schedules.map((schedule, ind) => {\n                            return (\n                                <styled.ScheduleContainer\n                                    key={`schedule.${ind}`}\n                                >\n\n                                    <styled.RowContainer>\n                                        <TextField\n                                            name={`schedules.${ind}.name`}\n                                            placeholder='Schedule Name'\n                                            InputComponent={Textbox}\n                                            ContentContainer={styled.RowContainer}\n                                            style={{\n                                                'marginBottom': '.5rem',\n                                                'marginTop': '0',\n                                                'width': '10rem',\n                                            }}\n                                        />\n                                        <Switch\n                                            name={`schedules.${ind}.enabled`}\n                                            schema={'devices'}\n                                        // onColor='red'\n                                        />\n                                    </styled.RowContainer>\n\n                                    <styled.ColumnContainer style={{ alignItems: 'center' }}>\n                                        <styled.DayOfTheWeekText>Days On</styled.DayOfTheWeekText>\n                                        <styled.RowContainer style={{ margin: '.2rem', width: '100%' }}>\n                                            {renderDaySelector(schedule.id, ind)}\n                                        </styled.RowContainer>\n\n                                    </styled.ColumnContainer>\n\n                                    <styled.RowContainer style={{ marginTop: '.5rem' }}>\n                                        <styled.ColumnContainer>\n                                            <styled.DayOfTheWeekText>Position</styled.DayOfTheWeekText>\n\n                                            <DropDownSearchField\n                                                name={`schedules.${ind}.position`}\n                                                containerSyle={{ flex: '9', marginRight: '1rem' }}\n                                                placeholder=\"Select Position\"\n                                                pattern={null}\n                                                labelField={'name'}\n                                                valueField={\"_id\"}\n                                                options={Object.values(positions).filter(positions => (positions.map_id === currentMap._id))}\n                                                mapInput={(val) => {\n                                                    if (!!positions[val]) {\n                                                        return [positions[val]]\n                                                    }\n                                                }}\n                                                mapOutput={(val) => {\n                                                    return val[0]._id\n                                                }}\n                                            />\n                                        </styled.ColumnContainer>\n                                        <styled.ColumnContainer>\n                                            <styled.DayOfTheWeekText>Time</styled.DayOfTheWeekText>\n                                            <TimePickerField\n                                                name={`schedules.${ind}.time`}\n                                                mapInput={\n                                                    (value) => {\n                                                        if (value) {\n                                                            const splitVal = value.split(':')\n                                                            return moment().set({ 'hour': splitVal[0], 'minute': splitVal[1] })\n                                                        }\n                                                    }\n                                                }\n                                                mapOutput={(value) => {\n                                                    return convert12hto24h(value.format('hh:mm a'))\n                                                }}\n                                                containerStyle={{ width: '6rem' }}\n                                                style={{ flex: '1', display: 'flex', flexWrap: 'wrap', textAlign: 'center', backgroundColor: '#6c6e78' }}\n                                                showHour={true}\n                                                showSecond={false}\n                                                className=\"xxx\"\n                                                use12Hours\n                                                format={'hh:mm a'}\n                                                autocomplete={\"off\"}\n                                                allowEmpty={false}\n                                            />\n                                        </styled.ColumnContainer>\n\n                                    </styled.RowContainer>\n                                    <Button\n                                        schema={'devices'}\n                                        type={'button'}\n                                        style={{ display: 'inline-block', float: 'right', maxWidth: '25rem', boxSizing: 'border-box' }}\n                                        secondary\n                                        onClick={() => {\n                                            // onDeleteSchedule(schedule)\n                                            // Removes the values from formik.\n                                            // Otherwise you would delete and schedule and then when re-adding a new one, it owuld use the old valus\n                                            arrayHelpers.remove(ind)\n                                        }}\n                                    >\n                                        Delete Schedule\n                                </Button>\n\n                                </styled.ScheduleContainer>\n\n                            )\n                        }\n                        )\n                        }\n\n\n\n                        <Button\n                            schema={'devices'}\n                            type={'button'}\n                            style={{ display: 'inline-block', float: 'right', maxWidth: '25rem', boxSizing: 'border-box' }}\n                            onClick={() => {\n                                let newSchedule = deepCopy(deviceSchedule)\n                                newSchedule.id = uuid.v4()\n                                arrayHelpers.push(newSchedule)\n                            }}\n                        >\n                            {!!values.schedules && values.schedules.length > 0 ? 'Add Another Schedule' : 'Add Schedule'}\n                        </Button>\n                    </styled.SectionsContainer>\n\n                )\n                }\n            />\n        )\n    }\n\n    return (\n        <>\n            {renderSchedules()}\n        </>\n    )\n}\n\nexport default DeviceSchedule\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory, useParams } from 'react-router-dom'\nimport { Formik, Form } from 'formik'\nimport uuid from 'uuid';\n\n// Import Style\nimport * as styled from './device_edit.style'\n\n// external components\nimport ReactTooltip from \"react-tooltip\";\n\n// Import basic components\nimport { deepCopy } from '../../../../../methods/utils/utils'\nimport Textbox from '../../../../basic/textbox/textbox'\nimport TextField from '../../../../basic/form/text_field/text_field'\nimport DropDownSearch from '../../../../basic/drop_down_search_v2/drop_down_search'\nimport Button from '../../../../basic/button/button'\nimport Switch from '../../../../basic/form/switch_field/switch_field'\nimport ContentHeader from '../../content_header/content_header'\n\n// Import Schema\nimport { deviceSchema } from '../../../../../methods/utils/form_schemas'\n\n// Import Components\nimport DeviceSchedule from './device_schedule/device_schedule'\n\n// Import Constants\nimport { deviceSchedule } from '../../../../../constants/scheduler_constants'\n\n// Import actions\nimport { setSelectedDevice, putDevices } from '../../../../../redux/actions/devices_actions'\nimport { setSelectedStation } from '../../../../../redux/actions/stations_actions'\nimport { putDashboard } from '../../../../../redux/actions/dashboards_actions'\nimport { widgetLoaded, hoverStationInfo } from '../../../../../redux/actions/widget_actions'\nimport { postStatus } from '../../../../../redux/actions/status_actions'\n\n// Import templates\nimport * as templates from '../devices_templates/device_templates'\n\n// Import Utils\nimport { DeviceItemTypes } from '../../../../../methods/utils/device_utils'\nimport { locationsSortedAlphabetically } from '../../../../../methods/utils/locations_utils'\n\n/**\n * This handles editing device informaton\n * This also handles adding devices to the map\n * Currently using 'location' vs 'device' nominclature to match adding a location to the map and because devices really are just locations to the map\n *\n * @param {*} props\n */\nconst DeviceEdit = (props) => {\n\n    const {\n        deviceLocationDelete\n    } = props\n\n    const history = useHistory()\n\n    const [connectionText, setConnectionText] = useState('Not Connected')\n    const [connectionIcon, setConnectionIcon] = useState('fas fa-question')\n    const [deviceType, setDeviceType] = useState('')\n    const [mirUpdated, setMirUpdated] = useState(false)\n\n    const dispatch = useDispatch()\n    const dispatchSetSelectedDevice = (selectedDevice) => dispatch(setSelectedDevice(selectedDevice))\n    const dispatchHoverStationInfo = (info) => dispatch(hoverStationInfo(info))\n    const dispatchPutDevice = (device) => dispatch(putDevices(device, device._id))\n    const dispatchPostStatus = (status) => dispatch(postStatus(status))\n    const dispatchPutDashboard = (dashboard, id) => dispatch(putDashboard(dashboard, id))\n    const dispatchSetSelectedStation = (station) => dispatch(setSelectedStation(station))\n\n    const selectedDevice = useSelector(state => state.devicesReducer.selectedDevice)\n    const devices = useSelector(state => state.devicesReducer.devices)\n    const positions = useSelector(state => state.positionsReducer.positions)\n    const dashboards = useSelector(state => state.dashboardsReducer.dashboards)\n    const status = useSelector(state => state.statusReducer.status)\n    const currentMapId = useSelector(state => state.settingsReducer.settings.currentMapId)\n    const maps = useSelector(state => state.mapReducer.maps)\n    const currentMap = Object.values(maps).find(map => map._id === currentMapId)\n\n    // On page load, see if the device is a new device or existing device\n    // TODO: This is going to fundementally change with how devices 'connect' to the cloud.\n    useEffect(() => {\n        console.log('QQQQ selected device', selectedDevice)\n        // Sets the type of device, unknown devic defaults to an RM logo while known devices use their own custom SVGs\n        if (selectedDevice.device_model === 'MiR100') setDeviceType('cart')\n\n    }, [])\n\n    // Submits the Mir Connection to the backend\n    const onMirConnection = async () => {\n        const mir = { mir_connection: 'connecting' }\n        await dispatchPutDevice(selectedDevice)\n        await dispatchPostStatus(mir)\n\n        setMirUpdated(false)\n\n    }\n\n    const onBack = () => {\n        dispatchSetSelectedDevice(null)\n    }\n\n    const renderDeviceName = () => {\n\n        return (\n                <styled.Label schema={'devices'} >{selectedDevice.device_name}</styled.Label>\n\n            // <styled.SectionsContainer>\n\n            //     <styled.Label schema={'devices'} >Device Name</styled.Label>\n\n            //     <Textbox\n            //         defaultValue={selectedDevice.device_name}\n            //         placeholder={'Enter Device Name'}\n            //         onChange={(event) => {\n            //             onSetDeviceName(event.target.value)\n            //         }}\n            //         style={{ fontWeight: '600', fontSize: '1.5rem' }}\n            //         inputStyle={{ backgroundColor: 'white' }}\n            //     />\n\n            // </styled.SectionsContainer>\n        )\n    }\n\n    const renderMIRIP = () => {\n        // Handles the MIR IP connectiong\n        let connectionIcon = ''\n        let connectionText = ''\n\n        // Have to use the naked device state since that is the one that is being update by the backend\n        const device = devices[selectedDevice._id]\n\n\n        // Sets the connection variables according to the state of\n        if (mirUpdated) {\n            connectionIcon = 'fas fa-question'\n            connectionText = 'Not Connected'\n        }\n        else if (status.mir_connection === 'connected') {\n            connectionIcon = 'fas fa-check'\n            connectionText = 'Connected'\n        }\n        else if (status.mir_connection === 'connecting') {\n            connectionIcon = 'fas fa-circle-notch fa-spin'\n            connectionText = 'Connecting'\n        }\n        else if (status.mir_connection === 'failed') {\n            connectionIcon = 'fas fa-times'\n            connectionText = 'Failed'\n        }\n        else {\n            connectionIcon = 'fas fa-question'\n            connectionText = 'Not Connected'\n\n        }\n\n        return (\n            <styled.SectionsContainer style={{ marginTop: '1rem' }}>\n\n                <styled.RowContainer style={{ position: 'relative', justifyContent: 'space-between' }}>\n                    <styled.Label schema={'devices'}>MIR IP</styled.Label>\n                    <Button\n                        style={{ margin: '0', marginBottom: '1rem', height: '1.5rem', width: '10rem', display: 'flex', fontSize: '1rem', alignItems: 'center', justifyContent: 'space-evenly' }}\n                        schema={'devices'}\n                        onClick={() => onMirConnection()}\n                        type='button'\n                        disabled={(connectionText === 'Connecting')}\n                    >\n                        {connectionText}\n                        <styled.ConnectionIcon className={connectionIcon} />\n                    </Button>\n\n                </styled.RowContainer>\n\n                <Textbox\n                    placeholder=\"MiR IP Address\"\n                    value={selectedDevice.ip_address}\n                    onChange={(event) => {\n                        setMirUpdated(true)\n                        dispatchSetSelectedDevice({\n                            ...selectedDevice,\n                            ip_address: event.target.value\n                        })\n\n                    }}\n                    style={{ width: '100%' }}\n                    inputStyle={{ backgroundColor: 'white' }}\n\n                />\n\n            </styled.SectionsContainer>\n        )\n    }\n\n    /**\n     * This is used to place the device onto the map\n     * Mir cart or AGV do not need to show this because they will already be on the map\n     */\n    const renderDeviceMapLocation = () => {\n\n        let template = templates.defaultAttriutes\n\n        // Sets the device logo type\n        let deviceType = DeviceItemTypes['generic']\n        if (!!DeviceItemTypes[selectedDevice.device_model]) deviceType = DeviceItemTypes[selectedDevice.device_model]\n        else if (selectedDevice.device_model === 'MiR100') deviceType = DeviceItemTypes['cart']\n\n\n        return (\n            <styled.SectionsContainer style={{ alignItems: 'center', textAlign: 'center', }}>\n\n                <styled.ConnectionText>To add the device to the screen, grab the device with your mouse and drag onto the screen</styled.ConnectionText>\n\n                <styled.DeviceIcon\n                    className={deviceType.icon}\n                    style={{ color: 'white' }}\n                    onMouseDown={async e => {\n\n                    }}\n                />\n\n            </styled.SectionsContainer>\n\n        )\n\n    }\n\n    /**\n     * This is used to set the idle location of the AMR when not in use.\n     * This should only show up if th\n     */\n    const renderAMRIdleLocation = () => {\n\n        return (\n            <styled.SectionsContainer>\n\n                <styled.Label schema={'devices'} >Idle Location</styled.Label>\n                <DropDownSearch\n                    placeholder=\"Select Location\"\n                    label=\"Idle Location for MiR Cart\"\n                    style={{ backgroundColor: 'white' }}\n                    labelField=\"name\"\n                    valueField=\"_id\"\n                    options={locationsSortedAlphabetically(Object.values(positions)).filter(pos => pos.map_id === currentMap._id)}\n                    values={(!!selectedDevice.idle_location && !!positions[selectedDevice.idle_location])  ? [positions[selectedDevice.idle_location]] : []}\n                    dropdownGap={2}\n                    noDataLabel=\"No matches found\"\n                    closeOnSelect=\"true\"\n                    onChange={values => {\n\n\n\n                        const idleLocation = values[0]._id\n                        dispatchSetSelectedDevice({\n                            ...selectedDevice,\n                            idle_location: idleLocation,\n                        })\n                    }}\n                    className=\"w-100\"\n                    schema=\"tasks\"\n                />\n            </styled.SectionsContainer>\n        )\n    }\n\n    const renderChargeLevels = () => {\n\n        return (\n            <styled.SectionsContainer>\n                <styled.RowContainer style={{ justifyContent: 'space-between', alignItems: 'center', marginBottom: '.5rem' }}>\n                    <styled.Label schema={'devices'} style={{ marginBottom: '0rem' }} >Charge Levels</styled.Label>\n                    <Switch\n                        name={'charge_level.chargeEnabled'}\n                        schema={'devices'}\n                    />\n                </styled.RowContainer>\n                <styled.RowContainer style={{ justifyContent: 'space-between' }}>\n                    <styled.ColumnContainer>\n                        <styled.RowContainer>\n                            <styled.Label schema={'devices'} style={{ fontSize: '1.2rem' }}>\n                                Min Percent\n                        </styled.Label>\n                            <styled.ToolTip data-for='1q' data-tip=\"Level the cart will go to the charger\" className={'fas fa-info-circle'} />\n                            <ReactTooltip effect='solid' multiline={true} id='1q' offset={{'top':60, 'left': 100}}/>\n                        </styled.RowContainer>\n\n                        <TextField\n                            name={\"charge_level.min\"}\n                            placeholder='Min %'\n                            InputComponent={Textbox}\n                            inputStyle={{ backgroundColor: 'white' }}\n                            ContentContainer={styled.RowContainer}\n                            style={{\n                                'marginBottom': '.5rem',\n                                'marginTop': '0',\n                                'width': '5rem',\n                            }}\n                        />\n                    </styled.ColumnContainer>\n                    <styled.ColumnContainer>\n                        <styled.RowContainer>\n                            <styled.Label schema={'devices'} style={{ fontSize: '1.2rem' }}>\n                                Max Percent\n                        </styled.Label>\n                            <styled.ToolTip data-tip=\"Level the cart will leave the charger\" className={'fas fa-info-circle'} />\n                            <ReactTooltip effect='solid' offset={{'top':60, 'left': 100}}/>\n                        </styled.RowContainer>\n                        <TextField\n                            name={\"charge_level.max\"}\n                            placeholder='Max %'\n                            InputComponent={Textbox}\n                            inputStyle={{ backgroundColor: 'white' }}\n                            ContentContainer={styled.RowContainer}\n                            style={{\n                                'marginBottom': '.5rem',\n                                'marginTop': '0',\n                                'width': '5rem',\n                            }}\n                        />\n                    </styled.ColumnContainer>\n                </styled.RowContainer>\n\n            </styled.SectionsContainer>\n        )\n    }\n\n\n    // This set the device name\n    const onSetDeviceName = (name) => {\n        dispatchSetSelectedDevice({\n            ...selectedDevice,\n            device_name: name,\n        })\n    }\n\n    // Opens up the device dashboard\n    const onEditDeviceDashboard = () => {\n        const dashboardID = selectedDevice.dashboards[0]\n        const deviceID = selectedDevice._id\n\n        history.push(`/locations/${deviceID}/dashboards/${dashboardID}/editing`)\n        dispatchHoverStationInfo({ id: deviceID })\n\n    }\n\n    /**\n     * This function is called when the save button is pressed.\n    * If its a Mir100 and the idle location has changed, then handle the associated device dashboard\n    */\n    const onSaveDevice = async (values) => {\n\n        let deviceCopy = deepCopy(selectedDevice)\n\n        // If a AMR, then just put device, no need to save locaiton since it does not need one\n        if (selectedDevice.device_model === 'MiR100') {\n\n            // Handle Idle Location changes\n            // If the idle location of selected device and the unedited version of selected device is different, then change the dashboard button\n            if (selectedDevice.idle_location !== devices[selectedDevice._id].idle_location) {\n\n                const dashboard = dashboards[selectedDevice.dashboards[0]]\n\n                // If no idle location, then delete dashboard button if need be\n                if (!selectedDevice.idle_location || selectedDevice.idle_location.length === 0) {\n\n                    // Map through buttons\n                    dashboard.buttons.map((button, ind) => {\n                        // If the button uses the old idle location, then delete the button\n                        if (!!button.custom_task && button.custom_task.position === devices[selectedDevice._id].idle_location) {\n\n                            // Delete button\n                            dashboard.buttons.splice(ind, 1)\n                        }\n                    })\n                }\n\n                // Add/edit the dashboard button\n                else {\n\n                    // Used to see if an idleButton alread exists\n                    let idleButtonExists = false\n\n                    dashboard.buttons.map((button, ind) => {\n                        // If the button uses the old idle location, then update\n                        if (!!button.custom_task && button.custom_task.position === devices[selectedDevice._id].idle_location) {\n                            // button exists so dont add a new on\n                            idleButtonExists = true\n\n                            // Edit the existing button to use the new idle location\n                            button = {\n                                ...button,\n                                custom_task: {\n                                    ...button.custom_task,\n                                    position: selectedDevice.idle_location\n                                }\n                            }\n                            // Splice in the new button\n                            dashboard.buttons.splice(ind, 1, button)\n                        }\n                    })\n\n                    // If the button doesnt exist then add the button to the dashbaord\n                    if (!idleButtonExists) {\n                        const newButton = {\n                            'name': 'Send to Idle Location',\n                            'color': '#FF4B4B',\n                            'task_id': 'custom_task',\n                            'custom_task': {\n                                'type': 'position_move',\n                                'position': selectedDevice.idle_location,\n                                'device_type': 'MiR_100',\n                            },\n                            'deviceType': 'MiR_100',\n                            'id': 'custom_task_idle'\n                        }\n                        dashboard.buttons.push(newButton)\n                    }\n                }\n\n\n\n                // Put the dashboard\n                await dispatchPutDashboard(dashboard, dashboard._id.$oid)\n            }\n            // Handle Values Passed in through Formik\n            if (Object.values(values).length > 0) {\n                deviceCopy = {\n                    ...deviceCopy,\n                    ...values,\n                }\n            }\n\n            await dispatchPutDevice(deviceCopy, deviceCopy._id)\n        }\n\n\n        dispatchSetSelectedStation(null)\n        dispatchSetSelectedDevice(null)\n    }\n\n    const onInitialValues = () => {\n        let initialValues = {}\n        if (!!selectedDevice.schedules && Object.values(selectedDevice.schedules).length > 0) {\n            initialValues['schedules'] = Object.values(selectedDevice.schedules)\n        }\n        if (!!selectedDevice.charge_level) {\n            initialValues['charge_level'] = selectedDevice.charge_level\n\n        } else {\n            initialValues['charge_level'] = { chargeEnabled: false, min: '10', max: '80' }\n        }\n        return initialValues\n    }\n\n    return (\n        <styled.Container>\n            <ContentHeader\n                content={'devices'}\n                mode={!!selectedDevice ? 'create' : 'title'}\n                onClickBack={onBack}\n\n                backEnabled={!!selectedDevice ? true : false}\n\n                onClickSave={() => {\n                    onSaveDevice()\n                }}\n\n            />\n\n            <Formik\n                initialValues={onInitialValues()}\n                enableReinitialize\n                validationSchema={deviceSchema}\n                validateOnChange={true}\n                validateOnMount={false}\n                validateOnBlur={true}\n\n                onSubmit={async (values, { setSubmitting, setTouched, validateForm }) => {\n                    setSubmitting(true)\n                    onSaveDevice(values)\n                    setSubmitting(false)\n                }}\n            >\n                {formikProps => {\n\n                    const {\n                        submitForm,\n                        setValidationSchema,\n                        values,\n                        errors,\n                        validateForm,\n                    } = formikProps\n                    return (\n                        <Form style={{ display: 'flex', flexDirection: 'column', height: '100%', width: '100%', alignItems: 'center' }}>\n\n                            {renderDeviceName()}\n\n                            {renderMIRIP()}\n\n\n                            {selectedDevice.device_model !== 'MiR100' ?\n                                renderDeviceMapLocation()\n                                :\n                                <styled.ColumnContainer>\n                                    {renderAMRIdleLocation()}\n                                    {renderChargeLevels()}\n                                    <DeviceSchedule values={values} />\n                                </styled.ColumnContainer>\n\n                            }\n\n                            <Button type={'button'} schema={'devices'} style={{ display: 'inline-block', float: 'right', width: '100%', maxWidth: '25rem', marginTop: '2rem', boxSizing: 'border-box' }}\n                                onClick={() => {\n                                    onEditDeviceDashboard()\n                                }}\n                            >\n                                Edit Dashboard\n                            </Button>\n\n                            <Button schema={'devices'} type={'submit'} style={{ display: 'inline-block', float: 'right', width: '100%', maxWidth: '25rem', marginTop: 'auto', boxSizing: 'border-box' }}\n                            // onClick={() => {\n                            //     submitForm()\n                            // }}\n                            >\n                                Save Device\n                            </Button>\n                        </Form>\n                    )\n                }}\n            </Formik>\n\n        </styled.Container>\n    )\n\n}\n\nexport default DeviceEdit\n","import styled, { css } from 'styled-components'\n\nconst sharedDeviceCss = css`\n\tposition: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    color: ${props => props.theme.bg.octonary};\n`\n\nexport const DeviceContainer = styled.div`\n    display: flex;\n    position: relative;\n    margin-bottom: 2rem;\n`\n\nexport const DeviceIcon = styled.i`\n\t${sharedDeviceCss};\n    font-size: 6rem;\n\n\t${props => props.isSmall && {\n\t\tfontSize: \"3rem\"\n\t}};\n`\n\nexport const BatterySvg = styled.svg`\n    position: absolute;\n    overflow: visible;\n    height: 40%;\n    right: -.2rem;\n    top: 50%;\n    transform: translateY(-50%);\n`\nexport const ColumnContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    align-items: center;\n    justify-content: center;\n`\nexport const OEESvg = styled.svg`\n    position: absolute;\n    overflow: visible;\n    height: 40%;\n    left: 2.25rem;\n    top: 14rem;\n    /* transform: translateY(-50%);     */\n`\n\nexport const BatteryText = styled.p`\n    position: absolute;\n    top: 45.5%;\n    right: 10%;\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz3};\n    user-select: none;\n\n    ${props => props.isSmall && {\n\t\tfontSize: props.theme.fontSize.sz4\n\t}};\n`\n\nexport const BigCircle = styled.div`\n    height: 20rem;\n    width: 20rem;\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    border: solid .2rem black;\n    border-radius: 50%;\n\n    /* $border: 1rem;\n    background-clip: padding-box;\n    border: solid $border transparent;\n    border-radius: 50%;\n    color: #FFF;\n    &:before {\n        content: '';\n        position: relative;\n        top: 0; right: 0; bottom: 0; left: 0;\n        z-index: -1;\n        margin: -$border;\n        border-radius: inherit;\n        background: linear-gradient(to right, red, orange);\n    } */\n\n\t${props => props.isSmall && {\n\t\twidth: \"15rem\",\n\t\theight: \"15rem\"\n\t}};\n`\n\n\nexport const DeviceTitle = styled.h2`\n\n    font-family: ${props => props.theme.font.primary};\n    /* font-size: ${props => props.theme.fontSize.sz2}; */\n    font-size: 2rem;\n    color: ${props => props.theme.bg.octonary};\n    position: absolute;\n    text-align:center;\n\n    max-height: 5rem;\n    text-overflow: ellipsis;\n    overflow: hidden;\n\n    top: 22%;\n    transform: translateY(-50%);\n    max-width: 13.5rem;\n\n    user-sel\n\t\t&:hover: {\n\t\t\tcursor:pointer;\n\t\t}ect: none;\n\n\n    // small style\n    ${props => props.isSmall && {\n\t\tfontSize: props.theme.fontSize.sz2\n\t}};\n\n`\n\nexport const EditDeviceIcon = styled.i`\n    position: absolute;\n    bottom: 5%;\n    color: ${props => props.theme.bg.octonary};\n    z-index: 10;\n    &:hover{\n        cursor: pointer;\n    }\n\n    font-size: 2rem;\n\n    ${props => props.isSmall && {\n\t\tfontSize: \"1.5rem\"\n\t}};\n`\n\nexport const StatusContainer = styled.div`\n    border: solid .1rem;\n    border-color: ${props => props.theme.bg.quaternary};\n    border-radius: .5rem;\n    width: 70%;\n    height: ${props=>props.isSmall} ? 15%: 17%;\n\t\tmargin-bottom:.8rem;\n    text-align: center;\n    position: absolute;\n    text-overflow: ellipsis;\n    overflow: hidden;\n\t\talign-self: center;\n\t\tz-index: 10;\n\t\t&:hover {\n\t\t\tcursor: pointer;\n\t\t\tbackground-color: ${props=>props.theme.bg.secondary};\n\t\t}\n    bottom: 25%;\n    transform: translateY(50%);\n`\nexport const ConnectionStatusContainer = styled.div`\n\tdisplay: flex;\n\tmargin-top: ${props=>props.isSmall ? '4.8rem': '6.7rem'};\n\twidth: 70%;\n\tjustify-content: center;\n\tcolor: white;\n\t&:hover {\n\t\tcursor: pointer;\n\t}\n`\n\nexport const StatusText = styled.p`\n    margin: auto;\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz4};\n    color: ${props => props.theme.bg.octonary};\n    overflow: hidden;\n    user-select: none;\n\n    ${props => props.isSmall && {\n\t\tfontSize: props.theme.fontSize.sz4\n\t}};\n`\nexport const MissionText = styled.p`\n    margin: auto;\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz4};\n    color: ${props => props.theme.bg.octonary};\n    overflow: hidden;\n    user-select: none;\n\t\tborder-top: 1px solid ${props=>props.theme.bg.octonary};\n\n    ${props => props.isSmall && {\n\t\tfontSize: props.theme.fontSize.sz5\n\t}};\n`\nexport const ConnectionStatusText = styled.p`\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props =>props.isSmall ? '0.9rem' : '1.2rem'};\n    color: ${props => props.theme.bg.octonary};\n\t\talign-self: center;\n\t\tpadding-right: .3rem;\n\t\tpadding-left: .5rem;\n\t\tmargin-bottom: 1.2rem;\n`\n","import styled, { css } from 'styled-components'\nimport * as style from '../devices_content.style'\n\nexport const SettingsContainer = styled(style.SettingsContainer)`\n`\n\nexport const SettingsSectionsContainer = styled(style.SettingsSectionsContainer)`\n`\n\nexport const SettingsLabel = styled(style.SettingsLabel)`\n`","import React, { useState, useEffect } from 'react'\n\nimport { useDispatch, useSelector } from 'react-redux'\n\n// Import actions\nimport { setSelectedStation } from '../../../../../redux/actions/stations_actions'\nimport { handlePostTaskQueue } from '../../../../../redux/actions/task_queue_actions'\n\n// Import styles\nimport * as styled from './device_item.style'\n\n// Import utils\nimport { DeviceTypes } from '../../../../../constants/device_constants'\nimport IconButton from '../../../../basic/icon_button/icon_button'\n\n\nconst DeviceItem = (props) => {\n\n    const {\n        device,\n        isSmall,\n        ind,\n        setSelectedDevice,\n        tasks,\n        taskQueue,\n    } = props\n\n    const batteryRectWidth = isSmall ? 20 : 25\n    const batteryRectRx = batteryRectWidth / 5\n    const deviceID = device._id\n    const deviceName = device.device_name\n\n    const dispatch = useDispatch()\n    const dispatchSetSelectedStation = (station) => dispatch(setSelectedStation(station))\n    const dispatchHandlePostTaskQueue = (id) => dispatch(handlePostTaskQueue())\n    const stations = useSelector(state => state.stationsReducer.stations)\n    const devices = useSelector(state => state.devicesReducer.devices)\n    const [stationId, setStationId] = useState(false)\n\n    // Sets the type of device\n    let deviceType = DeviceTypes['generic']\n    if (!!DeviceTypes[device.device_model]) deviceType = DeviceTypes[device.device_model]\n    else if (device.device_model === 'MiR100') deviceType = DeviceTypes['cart']\n\n    // Sets the location of the device\n    useEffect(() => {\n        if (!!device.station_id && device.device_model !== 'MiR100' && !stationId) setStationId(device.station_id)\n\n        // If the device does not have a station_id but there is one in state, then set the state to false (this happens when a devices location is deleted)\n        if (!!stationId && !device.station_id) setStationId(false)\n\n    }, [device])\n\n    // Handles Device status, this might have to be tailord for each device\n    const handleDeviceStatus = () => {\n        // Sets the current task of the device\n        let deviceStatus = ''\n\n        try {\n            if (device.state_text === 'EmergencyStop') {\n                deviceStatus = 'Emergency Stoped'\n            }\n            else if (device.current_task_queue_id==null) {\n                deviceStatus = 'No Active Task'\n            }\n            else if (!!device.current_task_queue_id) {\n                deviceStatus = taskQueue[device.current_task_queue_id].mission_status\n              //deviceStatus = device.state_text\n            }\n\n            else {\n                // Map through the task q to find the current task and display the task\n                deviceStatus = 'This device status is not set up yet.'\n            }\n        } catch (error) {\n            deviceStatus = 'There was an issue with device status'\n        }\n\n\n        return deviceStatus\n    }\n\n    const handleMissionStatus = () => {\n      let missionStatus = ''\n\n      if(!!device && !!device.mission_text){\n        missionStatus = device.mission_text\n      }\n      else{missionStatus=\"Idle\"}\n\n      return missionStatus\n    }\n\n    const handleShowDeviceHil = (device) => {\n      if(!!device.current_task_queue_id && !taskQueue[device.current_task_queue_id].custom_task){\n        dispatch({ type: 'TASK_QUEUE_ITEM_CLICKED', payload: device.current_task_queue_id})\n      }\n    }\n\n    const handleDeviceBattery = () => {\n\n        const deviceBattery = device.battery_percentage\n\n        // This sets the battery SVG colors depending on battery level\n        let batteryRectFill = ['lime', 'lime', 'lime', 'lime', 'lime']\n        let batteryRectStroke = ['none', 'none', 'none', 'none', 'none']\n        let batteryTextColor = 'lime'\n\n        if (deviceBattery > 80) {\n            batteryRectFill = ['lime', 'lime', 'lime', 'lime', 'lime']\n            batteryRectStroke = ['none', 'none', 'none', 'none', 'none']\n            batteryTextColor = 'lime'\n\n        } else if (deviceBattery > 60) {\n            batteryRectFill = ['none', 'lime', 'lime', 'lime', 'lime']\n            batteryRectStroke = ['lime', 'none', 'none', 'none', 'none']\n            batteryTextColor = 'lime'\n\n        } else if (deviceBattery > 40) {\n            batteryRectFill = ['none', 'none', 'lime', 'lime', 'lime']\n            batteryRectStroke = ['lime', 'lime', 'none', 'none', 'none']\n            batteryTextColor = 'lime'\n\n        } else if (deviceBattery > 20) {\n            batteryRectFill = ['none', 'none', 'none', 'orange', 'orange']\n            batteryRectStroke = ['orange', 'orange', 'orange', 'none', 'none']\n            batteryTextColor = 'orange'\n\n        } else if (deviceBattery > 10) {\n            batteryRectFill = ['none', 'none', 'none', 'none', 'red']\n            batteryRectStroke = ['red', 'red', 'red', 'red', 'none']\n            batteryTextColor = 'red'\n\n        } else {\n            batteryRectFill = ['none', 'none', 'none', 'none', 'none']\n            batteryRectStroke = ['red', 'red', 'red', 'red', 'red']\n            batteryTextColor = 'red'\n\n        }\n\n        return (\n            <>\n                <styled.BatteryText isSmall={isSmall} style={{ color: batteryTextColor }}>{deviceBattery.toFixed(0)}%</styled.BatteryText>\n\n                {/* SVG for the battery percent dots. Uses the above arrays to determine what percentage to show */}\n                <styled.BatterySvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 67.6 218.09\">\n\n                    <g id=\"Layer_2\" data-name=\"Layer 2\">\n                        <g id=\"Layer_1-2\" data-name=\"Layer 1\">\n                            <rect fill={batteryRectFill[4]} stroke={batteryRectStroke[4]} strokeWidth='.3rem' x=\"13.86\" y=\"174.04\" width={batteryRectWidth} height={batteryRectWidth} rx={batteryRectRx} transform=\"translate(-169.27 153.88) rotate(-69.46)\" />\n                            <rect fill={batteryRectFill[3]} stroke={batteryRectStroke[3]} strokeWidth='.3rem' x=\"25.91\" y=\"130.42\" width={batteryRectWidth} height={batteryRectWidth} rx={batteryRectRx} transform=\"translate(-121.38 165.29) rotate(-79.65)\" />\n                            <rect fill={batteryRectFill[2]} stroke={batteryRectStroke[2]} strokeWidth='.3rem' x=\"17.6\" y=\"96.54\" width={batteryRectWidth} height={batteryRectWidth} rx={batteryRectRx} />\n                            <rect fill={batteryRectFill[1]} stroke={batteryRectStroke[1]} strokeWidth='.3rem' x=\"13.41\" y=\"50.17\" width={batteryRectWidth} height={batteryRectWidth} rx={batteryRectRx} transform=\"translate(-10.63 7.92) rotate(-10.35)\" />\n                            <rect fill={batteryRectFill[0]} stroke={batteryRectStroke[0]} strokeWidth='.3rem' x=\"1.36\" y=\"6.54\" width={batteryRectWidth} height={batteryRectWidth} rx={batteryRectRx} transform=\"translate(-5.01 10.46) rotate(-20.54)\" />\n                        </g>\n                    </g>\n\n                </styled.BatterySvg>\n            </>\n        )\n\n    }\n\n    const handleDeviceOEE = () => {\n        const deviceOEE = device.OEE\n\n        // This sets the OEE SVG colors depending on OEE level\n        let OEERectFill = ['lime', 'lime', 'lime', 'lime', 'lime']\n        let OEERectStroke = ['none', 'none', 'none', 'none', 'none']\n        let OEETextColor = 'lime'\n\n        if (deviceOEE > 80) {\n            OEERectFill = ['lime', 'lime', 'lime', 'lime', 'lime']\n            OEERectStroke = ['none', 'none', 'none', 'none', 'none']\n            OEETextColor = 'lime'\n\n        } else if (deviceOEE > 60) {\n            OEERectFill = ['none', 'lime', 'lime', 'lime', 'lime']\n            OEERectStroke = ['lime', 'none', 'none', 'none', 'none']\n            OEETextColor = 'lime'\n\n        } else if (deviceOEE > 40) {\n            OEERectFill = ['none', 'none', 'lime', 'lime', 'lime']\n            OEERectStroke = ['lime', 'lime', 'none', 'none', 'none']\n            OEETextColor = 'lime'\n\n        } else if (deviceOEE > 20) {\n            OEERectFill = ['none', 'none', 'none', 'orange', 'orange']\n            OEERectStroke = ['orange', 'orange', 'orange', 'none', 'none']\n            OEETextColor = 'orange'\n\n        } else if (deviceOEE > 10) {\n            OEERectFill = ['none', 'none', 'none', 'none', 'red']\n            OEERectStroke = ['red', 'red', 'red', 'red', 'none']\n            OEETextColor = 'red'\n\n        } else {\n            OEERectFill = ['none', 'none', 'none', 'none', 'none']\n            OEERectStroke = ['red', 'red', 'red', 'red', 'red']\n            OEETextColor = 'red'\n\n        }\n\n        return (\n            //  Copy of Battery SVG just rotated 180 degrees\n            <styled.OEESvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 67.6 218.09\">\n\n                <g id=\"Layer_2\" data-name=\"Layer 2\" transform=\"rotate(180)\">\n                    <g id=\"Layer_1-2\" data-name=\"Layer 1\">\n                        <rect fill={OEERectFill[0]} stroke={OEERectStroke[0]} strokeWidth='.3rem' x=\"13.86\" y=\"174.04\" width={batteryRectWidth} height={batteryRectWidth} rx={batteryRectRx} transform=\"translate(-169.27 153.88) rotate(-69.46)\" />\n                        <rect fill={OEERectFill[1]} stroke={OEERectStroke[1]} strokeWidth='.3rem' x=\"25.91\" y=\"130.42\" width={batteryRectWidth} height={batteryRectWidth} rx={batteryRectRx} transform=\"translate(-121.38 165.29) rotate(-79.65)\" />\n                        <rect fill={OEERectFill[2]} stroke={OEERectStroke[2]} strokeWidth='.3rem' x=\"17.6\" y=\"96.54\" width={batteryRectWidth} height={batteryRectWidth} rx={batteryRectRx} />\n                        <rect fill={OEERectFill[3]} stroke={OEERectStroke[3]} strokeWidth='.3rem' x=\"13.41\" y=\"50.17\" width={batteryRectWidth} height={batteryRectWidth} rx={batteryRectRx} transform=\"translate(-10.63 7.92) rotate(-10.35)\" />\n                        <rect fill={OEERectFill[4]} stroke={OEERectStroke[4]} strokeWidth='.3rem' x=\"1.36\" y=\"6.54\" width={batteryRectWidth} height={batteryRectWidth} rx={batteryRectRx} transform=\"translate(-5.01 10.46) rotate(-20.54)\" />\n                    </g>\n                </g>\n\n            </styled.OEESvg>\n        )\n    }\n\n\n\n    return (\n\n        <styled.DeviceContainer key={ind}\n            onMouseEnter={() => {\n                !!stationId && dispatchSetSelectedStation(stations[stationId])\n            }}\n            onMouseLeave={() => { !!stationId && dispatchSetSelectedStation(null) }}>\n\n            <styled.BigCircle isSmall={isSmall}>\n\n                <styled.DeviceTitle isSmall={isSmall}>{deviceName}</styled.DeviceTitle>\n\n\n                {/* Sets attributes of device Icon based on what type of device has been selected */}\n                  <styled.DeviceIcon isSmall={isSmall} className={deviceType.icon} style={{ fontSize: !!deviceType.deviceFontSize && deviceType.deviceFontSize, color: !!stationId || deviceType.icon === 'icon-cart' ? deviceType.primaryColor : 'white' }} />\n\n                  <styled.StatusContainer\n                      onClick = {()=>handleShowDeviceHil(device)}\n                  >\n                    <styled.ColumnContainer>\n                      <styled.StatusText isSmall={isSmall}>\n                          {handleDeviceStatus()}\n                      </styled.StatusText>\n                      <styled.MissionText isSmall={isSmall}>\n                          {handleMissionStatus()}\n                      </styled.MissionText>\n                    </styled.ColumnContainer>\n                  </styled.StatusContainer>\n\n                  <styled.ConnectionStatusContainer isSmall = {isSmall}>\n                   <styled.ConnectionStatusText isSmall = {isSmall}>\n                      {!device.connected ? 'Disconnected': 'Connected'}\n                    </styled.ConnectionStatusText>\n                    <IconButton color={!device.connected ? 'red':'lightGreen'}>\n                        {!device.connected ?\n                            <i className=\"fas fa-times-circle\" style = {{paddingTop: isSmall ? '.1rem': '.2rem'}}></i>\n                            :\n                            <i className=\"fas fa-check\" style = {{paddingTop: isSmall ? '0rem': '.2rem'}}></i>\n                        }\n                    </IconButton>\n                  </styled.ConnectionStatusContainer>\n\n                <styled.EditDeviceIcon\n                    isSmall={isSmall}\n                    className='fas fa-cog'\n                    onClick={() => setSelectedDevice(deviceID)}\n                />\n\n            </styled.BigCircle>\n\n            {/* SVG for Gradient Circle. Has 2 linear gradients and conditional statements based on the deviceType. Had to use 2 gradient elements because they are global. Changing the stopColor just changes the global element making all gradients those colors */}\n            <svg xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 518 518\" style={{ position: 'absolute', overflow: 'visible' }}>\n                <defs>\n                    <linearGradient id={device._id} y1=\"259\" x2=\"518\" y2=\"259\" gradientUnits=\"userSpaceOnUse\">\n                        <stop offset=\"0\" style={{ stopColor: deviceType.startGradientColor }} />\n                        <stop offset=\"0.99\" style={{ stopColor: deviceType.stopGradientColor }} />\n                    </linearGradient>\n\n                </defs>\n                <g id=\"Layer_2\" data-name=\"Layer 2\">\n                    <g id=\"Layer_1-2\" data-name=\"Layer 1\">\n\n                        <circle className=\"cls-1\" cx=\"259\" cy=\"259\" r=\"256.5\" style={{ fill: 'none', strokeMiterlimit: '10', strokeWidth: '1rem', stroke: `url(#${device._id})` }} />\n\n                    </g>\n                </g>\n            </svg>\n\n            {!!device.battery_percentage &&\n                handleDeviceBattery()\n            }\n\n            {/* Commented out for now since OEE is not implmented */}\n            {/* {handleDeviceOEE()} */}\n\n\n        </styled.DeviceContainer>\n\n    )\n\n}\n\nexport default DeviceItem\n","import React, { useState, useEffect } from 'react'\n\n// external functions\nimport { useDispatch, useSelector } from 'react-redux'\n\n// import styles\nimport * as styled from './devices_content.style'\n\n// Import Utils\nimport { deepCopy } from '../../../../methods/utils/utils'\n\n// Import basic components\nimport ContentHeader from '../content_header/content_header'\n\n// Import Components\nimport DeviceEdit from './device_edit/device_edit'\nimport DeviceStatistics from './device_statistics/device_statistics'\nimport DeviceItem from './device_item/device_item'\n\n// Import Actions\nimport { putDevices, setSelectedDevice } from '../../../../redux/actions/devices_actions'\nimport { setSelectedStation } from '../../../../redux/actions/stations_actions'\nimport { putDashboard } from '../../../../redux/actions/dashboards_actions'\n\nconst widthBreakPoint = 450\n\n\nconst DevicesContent = () => {\n\n\n    // ======================================== //\n    //                                          //\n    //             Constructor                  //\n    //                                          //\n    // ======================================== //\n\n\n    // Redux Set Up\n    const dispatch = useDispatch()\n    const dispatchSetSelectedDevice = (selectedDevice) => dispatch(setSelectedDevice(selectedDevice))\n\n    const tasks = useSelector(state => state.tasksReducer.tasks)\n    const taskQueue = useSelector(state => state.taskQueueReducer.taskQueue)\n    const selectedDevice = useSelector(state => state.devicesReducer.selectedDevice)\n\n    const width = useSelector(state => state.sidebarReducer.width)\n    const isSmall = width < widthBreakPoint\n\n    const devices = useSelector(state => { return state.devicesReducer.devices })\n\n\n    // ======================================== //\n    //                                          //\n    //             Main Functions               //\n    //                                          //\n    // ======================================== //\n\n    // Sets the editingDeviceID to new so that the save knows to post instead of put\n    const onAddDevice = () => {\n    }\n\n    // Renders Existing Devices\n    const renderExistingDevices = () => {\n\n        try {\n\n\n            let devicesValue = Object.values(devices)\n\n            // Maps through the existing devices\n            return devicesValue.map((device, ind) => {\n                return (\n                    <DeviceItem\n                        key={ind}\n                        device={device}\n                        isSmall={isSmall}\n                        ind={ind}\n                        tasks={tasks}\n                        taskQueue={taskQueue}\n                        setSelectedDevice={(deviceID) => {\n                            dispatchSetSelectedDevice(deepCopy(devices[deviceID]))\n                        }\n                        }\n                    />\n                )\n\n            })\n\n        } catch (error) {\n            console.log('Device is undefined', devices)\n        }\n\n    }\n\n\n\n    const onBack = () => {\n        dispatchSetSelectedDevice(null)\n    }\n\n    /**\n    * Called when the delete button is pressed. Deletes the location, its children, its dashboards,\n    * and any tasks associated with the location\n    */\n    const onDeleteDeviceLocation = () => {\n\n    }\n\n\n    return (\n        <styled.ContentContainer>\n\n\n            {!!selectedDevice ?\n                <DeviceEdit deviceLocationDelete={onDeleteDeviceLocation} />\n                :\n                <>\n                    <ContentHeader\n                        content={'devices'}\n                        mode={'title'}\n                    />\n\n\n\n                    {renderExistingDevices()}\n                </>\n            }\n\n\n\n        </styled.ContentContainer>\n    )\n}\n\nexport default DevicesContent\n","import styled, { css } from 'styled-components'\nimport { getDebugStyle } from \"../../../../../../methods/utils/style_utils\";\n\nexport const Container = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\t\n\talign-items: center;\n\tjustify-content: space-between;\n\t\n\tposition: relative;\n\t\n\toutline: none !important;\n\toutline-offset: none !important;\n\t\n\tmargin-top: .5rem;\n\t\n\tbackground-color: transparent;\n\t\n\tborder: .2rem solid;\n\tborder-radius: 1rem;\n\tborder-color: ${props=>props.theme.bg.octonary};\n\t\n\tpadding-top: 1rem;\n\tpadding-bottom: .5rem;\n\tpadding-left: 1rem;\n\tpadding-right: 1rem;\n\t\n\t// transition: all 0.5s ease 0s;\n\t\n\t// box-shadow: 2px 2px 2px rgba(0, 0, 0, 0.5);\n\t\n\t&:hover{\n\t\tcursor: grab;\n\t\tborder-color: ${props => props.theme.schema[\"scheduler\"].solid};\n\t\t// box-shadow: 4px 4px 4px rgba(0, 0, 0, 0.5);\n\t\t// transform: translateY(-2px);\n\t}\n\t\n\t&:active {\n\t\tbox-shadow: none;\n\t\t// transform: translateY(4px);\n\t}\n\t\n\t${props => props.hasError && {\n\t\t// opacity: 0.5\n\t}}\n\t\n\tfont-family: ${props => props.theme.font.primary};\n\t\n`\n\nexport const TopContainer = styled.div`\n\tdisplay: flex;\n\twidth: 100%;\n\tjustify-content: space-between;\n`\n\nexport const ErrorContainer = styled.div`\n\tposition: relative;\n`\n\nexport const buttonViewCss = css`\n\tborder-right: ${props => !props.isLast && `solid ${props.theme.bg.quaternary} thin`}; // dont show border on last item\n\tcolor: ${props => props.theme.bg.quinary};\n\tpadding: 0;\n\tmargin: 0;\n\tpadding-left: .5rem;\n\tpadding-right: .5rem;\n`\n\nexport const buttonGroupContainerCss = css`\n\tdisplay: flex;\n\tflex-direction: row;\n\talign-self: center;\n\tpadding: 0;\n\tmargin: 0;\n\t\n`\n\nexport const buttonViewSelectedCss = css`\n\tbackground: transparent;\n\tcolor: ${props => props.theme.schema[\"scheduler\"].solid};\n`\nexport const buttonCss = css`\n\tmargin: 0;\n\tpadding: 0;\n\t\n\t&:focus{\n\t}\n\t\n\t&:active{\n\t}\n\t\n\t&:hover{\n\t\tcursor: default;\n\t}\n\t\n`\n\nexport const DaysContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: row;\n\tmargin: 0;\n\tpadding: 0;\n\t\n\t${props => props.hasError && {\n\t\topacity: 0.5\n\t}}\n`\n\nexport const ContentContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: row;\n\t\n\talign-items: center;\n\tjustify-content: space-between;\n\twidth: 100%;\n\tmargin-bottom: .5rem;\n`\n\nexport const Title = styled.span`\n\tfont-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz3};\n    text-align: left;\n    margin: 0;\n    word-break: break-all;\n    color: ${props => props.theme.schema[\"scheduler\"].solid};\n    \n    // size styling based on sidebar width rather than screen size\n\t${props => (props.isSmall) && {\n\t\t// fontSize: \".2rem\"\n\t}}\n`\n\nexport const SubTitle = styled.span`\n\tfont-size: ${props => props.theme.fontSize.sz4};\n\tfont-family: ${props => props.theme.font.primary};\n\tcolor: ${props => props.theme.bg.senary};\n\toverflow: hidden;\n\n\twhite-space: wrap;\n\tmargin: 0;\n\ttext-align: left;\n\tword-break: break-all;\n\t\n\tfont-family: ${props => props.theme.font.primary};\n\tfont-size: ${props => props.theme.fontSize.sz4};\n\tcolor: ${props => props.theme.bg.senary};\n\tcursor: pointer;\n\t\n\t// size styling based on sidebar width rather than screen size\n\t${props => (props.isSmall) && {\n\t\t// fontSize: \".2rem\"\n\t}};\n\t\n\t${props => props.hasError && {\n\t\tcolor: props.theme.bad\n\t}};\n\t\n`\n\nexport const LeftContentContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\twidth: 100%;\n`\n\nexport const TimeContainerlarge = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tmargin-left: 1rem;\n\t\n\t${props => props.hasError && {\n\t\topacity: 0.5\n\t}}\n`\n\nexport const TimeContainerSmall = styled.div`\n\tdisplay: flex;\n\tjustify-content: flex-start;\n\tflex-direction: column;\n\talign-items: flex-start;\n\twidth: 100%;\n\tmargin-bottom: .5rem;\n\t\n\t${props => props.hasError && {\n\t\topacity: 0.5\n\t}}\n`\n\nexport const TimeContainer = styled.span`\n\tcolor: ${props => props.theme.bg.octonary};\n\tdisplay: flex;\n\talign-items: flex-end;\n`\n\nexport const SwitchContainer = styled.div`\n\tmargin-left: 1rem;\n\t&:hover{\n\t\tcursor: grab;\n\t}\n`\n\nexport const TimeTitle = styled.span`\n\tmargin-right: .5rem;\n\tfont-weight: 600;\n\tfont-size: 1rem;\n\twhite-space: nowrap;\n\t\n\t// size styling based on sidebar width rather than screen size\n\t${props => (props.isSmall) && {\n\t\tfontSize: \".2rem\"\n\t}}\n\n`\nexport const TimeValue = styled.span`\n\tfont-weight: 200;\n\tjustify-content: center;\n\talign-items: flex-end;\n\tfont-size: .9rem;\n\twhite-space: nowrap;\n\t\n\t// size styling based on sidebar width rather than screen size\n\t${props => (props.isSmall) && {\n\t\tfontSize: \".2rem\"\n\t}}\t\n\n\n`\n\nexport const ContentComponent = styled.div`\n\n\t\n\n`\n","import React, {Component, useContext, useEffect, useRef, useState} from \"react\"\nimport PropTypes from 'prop-types'\n\n// external components\nimport Switch from 'react-ios-switch'\n\n// external functions\nimport {useSelector} from \"react-redux\"\nimport {ThemeContext} from \"styled-components\"\n\n// components\nimport ButtonGroup from \"../../../../../basic/button_group/button_group\"\nimport ErrorTooltip from '../../../../../basic/form/error_tooltip/error_tooltip'\n\n// styles\nimport * as style from './schedule_list_item.style'\nimport {getMessageFromError} from \"../../../../../../methods/utils/form_utils\";\n\nconst widthBreakPoint =  525\n\nconst ScheduleListItem = (props) => {\n\n\tconst {\n\n\t\tname,\n\t\ttaskName,\n\t\tdisabled,\n\t\tselected,\n\t\tid,\n\t\tschedule_on,\n\t\tonSwitchPress,\n\t\tonClick,\n\t\terror,\n\t\tdays_on,\n\t\ttime_interval,\n\t\tinterval_on,\n\t\tstop_time,\n    start_time,\n\t\tnext_time,\n\n\t} = props\n\n\n\n\tconst themeContext = useContext(ThemeContext)\n\n\tconst width = useSelector(state => state.sidebarReducer.width)\n\tconst isSmall = width < widthBreakPoint\n\tconst hasError = Object.keys(error).length > 0\n\tconst errorMessage = getMessageFromError(error)\n\n\treturn (\n\t\t<style.Container\n\t\t\tonClick={()=>onClick(id)}\n\t\t\tisSmall={isSmall}\n\t\t\thasError={hasError}\n\t\t>\n\t\t\t<style.TopContainer>\n\t\t\t\t<div/>\n\n\t\t\t\t<ErrorTooltip\n\t\t\t\t\tvisible={hasError}\n\t\t\t\t\ttext={errorMessage}\n\t\t\t\t\tContainerComponent={style.ErrorContainer}\n\t\t\t\t/>\n\t\t\t</style.TopContainer>\n\n\t\t\t<style.ContentContainer isSmall={isSmall}>\n\t\t\t\t<style.LeftContentContainer isSmall={isSmall}>\n\t\t\t\t\t<style.Title isSmall={isSmall}>{name}</style.Title>\n\t\t\t\t\t<style.SubTitle hasError={!taskName} isSmall={isSmall}>{taskName ? taskName : \"Task not found\"}</style.SubTitle>\n\t\t\t\t</style.LeftContentContainer>\n\n\n\t\t\t\t{!isSmall &&\n\t\t\t\t\t<style.TimeContainerlarge\n\t\t\t\t\t\tisSmall={isSmall}\n\t\t\t\t\t\thasError={hasError}\n\t\t\t\t\t>\n\t\t\t\t\t\t<style.TimeContainer isSmall={isSmall}>\n\t\t\t\t\t\t\t<style.TimeTitle isSmall={isSmall}>Start Time</style.TimeTitle>\n\t\t\t\t\t\t\t<style.TimeValue isSmall={isSmall}>{start_time}</style.TimeValue>\n\t\t\t\t\t\t</style.TimeContainer>\n\n\t\t\t\t\t\t{interval_on ?\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<style.TimeContainer isSmall={isSmall}>\n\t\t\t\t\t\t\t\t\t<style.TimeTitle isSmall={isSmall}>Stop Time</style.TimeTitle>\n\t\t\t\t\t\t\t\t\t<style.TimeValue isSmall={isSmall}>{stop_time}</style.TimeValue>\n\t\t\t\t\t\t\t\t</style.TimeContainer>\n\n\t\t\t\t\t\t\t\t<style.TimeContainer isSmall={isSmall}>\n\t\t\t\t\t\t\t\t\t<style.TimeTitle isSmall={isSmall}>Interval</style.TimeTitle>\n\t\t\t\t\t\t\t\t\t<style.TimeValue isSmall={isSmall}>{time_interval}</style.TimeValue>\n\t\t\t\t\t\t\t\t</style.TimeContainer>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t<style.TimeContainer isSmall={isSmall}>\n\t\t\t\t\t\t\t\t<style.TimeTitle isSmall={isSmall}>Interval</style.TimeTitle>\n\t\t\t\t\t\t\t\t<style.TimeValue isSmall={isSmall}>off</style.TimeValue>\n\t\t\t\t\t\t\t</style.TimeContainer>\n\t\t\t\t\t\t}\n\t\t\t\t\t</style.TimeContainerlarge>\n\t\t\t\t}\n\n\n\t\t\t\t<style.SwitchContainer\n\t\t\t\t\t// this container is used so click events anywhere on the switch will trigger the onClick event\n\t\t\t\t\t// otherwise if a click isn't directly over the handle, it will register the click on the outer Container\n\t\t\t\t\tonClick={(event) => {\n\t\t\t\t\t\tevent.preventDefault()\n\t\t\t\t\t\tevent.stopPropagation()\n\t\t\t\t\t\tonSwitchPress(id)\n\t\t\t\t\t}}\n\t\t\t\t\tisSmall={isSmall}\n\t\t\t\t>\n\t\t\t\t\t<Switch\n\t\t\t\t\t\tchecked={schedule_on}\n\t\t\t\t\t\tonChange={()=>onSwitchPress(id)}\n\t\t\t\t\t\tdisabled={disabled || hasError}\n\t\t\t\t\t\tonColor={themeContext.schema.scheduler.solid}\n\t\t\t\t\t\t// style={{zIndex: 5}}\n\t\t\t\t\t/>\n\t\t\t\t</style.SwitchContainer>\n\n\t\t\t</style.ContentContainer>\n\n\t\t\t<style.DaysContainer\n\t\t\t\tisSmall={isSmall}\n\t\t\t\thasError={hasError}\n\t\t\t>\n\t\t\t\t<ButtonGroup\n\t\t\t\t\tbuttonViewCss={style.buttonViewCss}\n\t\t\t\t\tbuttons={[\"M\", \"T\", \"W\", \"T\", \"F\", \"S\"]}\n\t\t\t\t\tselectMultiple\n\t\t\t\t\tselectedIndexes={days_on}\n\t\t\t\t\tcontainerCss={style.buttonGroupContainerCss}\n\t\t\t\t\tbuttonViewSelectedCss={style.buttonViewSelectedCss}\n\t\t\t\t\tbuttonCss={style.buttonCss}\n\t\t\t\t/>\n\t\t\t</style.DaysContainer>\n\n\t\t</style.Container>\n\t)\n}\n\n// Specifies the default values for props:\nScheduleListItem.propTypes = {\n\ttitle: PropTypes.string,\n\tdisabled: PropTypes.bool\n}\n\nScheduleListItem.defaultProps = {\n\ttitle: \"\",\n\tdisabled: false\n}\n\nexport default ScheduleListItem\n","import styled from 'styled-components'\n\n\n\nexport const Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    max-height: 100%;\n    padding: 1rem;\n    padding-top: 1.5rem;\n\n\n`\nexport const NextExecution = styled.h2`\n\tfont-size: ${props => props.theme.fontSize.sz3};\n\tfont-weight: 100;\n\ttext-align: center;\n\tmargin-top: 1rem;\n  margin-left:1rem;\n  margin-right:1rem;\n  color: ${props => props.theme.schema[\"scheduler\"].solid};\n\tfont-family: ${props => props.theme.font.primary};\n\n  border: .2rem solid;\n  border-radius: 1rem;\n  border-color: ${props=>props.theme.bg.octonary};\n\n  padding-top: .5rem;\n  padding-bottom: .5rem;\n  padding-left: .5rem;\n  padding-right: .5rem;\n\n  &:hover{\n    cursor: pointer;\n    border-color: ${props => props.theme.schema[\"scheduler\"].solid};\n    color: ${props => props.theme.schema[\"scheduler\"].solid};\n  }\n`\n\n\nexport const TaskListContainer = styled.div`\n    padding: 1rem;\n    overflow-y: scroll;\n    flex: 1;\n\n    // hide scroll bar\n\t::-webkit-scrollbar {\n\t\twidth: 0px;  /* Remove scrollbar space */\n\t\tbackground: transparent;  /* Optional: just make scrollbar invisible */\n\t}\n\t::-webkit-scrollbar-thumb {\n\t\tbackground: #FF0000;\n\t}\n`\n\nexport const ListEmptyContainer = styled.div`\n\tdisplay: flex;\n\tflex: 1;\n\tjustify-content: center;\n\talign-items: center;\n\tflex-direction: column;\n`\n\nexport const ListEmptyTitle = styled.h2`\n\tfont-size: ${props => props.theme.fontSize.sz2};\n\tfont-weight: 600;\n\ttext-align: center;\n\tmargin-top: 5rem;\n\tcolor: ${props => props.theme.bg.octonary};\n\tfont-family: ${props => props.theme.font.primary};\n`\n\nexport const ListEmptyFiller = styled.div`\n\tdisplay: flex;\n\tflex: 1;\n\tjustify-content: center;\n\talign-items: flex-start;\n`\n\nexport const ListItemContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    // width: 100%;\n    align-items: center;\n\n`\n\nexport const WarningIcon = styled.i`\n    margin-right: 2rem;\n    color: ${props => props.theme.bad};\n    z-index: 10;\n\n\n`\n","import styled, {css} from 'styled-components';\n\nexport const Container = styled.div`\n    flex-grow: 1;\n    display: flex;\n    position: relative;\n    flex-direction: column;\n    overflow: hidden;\n    max-width: 100%;\n`\n\n\nexport const Title = styled.h1`\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz7};\n    font-weight: 500;\n    color: ${props => props.theme.schema[props.schema].solid};\n    padding: 0;\n    margin: 0;\n    \n    ${props => props.isSmall && titleCssSmall}};\n`\n\nexport const titleCssSmall = css`\n\tfont-size: ${props => props.theme.fontSize.sz2};\n`\n\nexport const Header = styled.div`\n    // display: flex; \n    // flex-direction: row;\n    // width: 100%;\n    // justify-content: space-between;\n    \n    \n    \n    display: flex;\n\talign-items: center;\n\twidth: 100%;\n\t/* box-shadow: 2px 2px 10px black; */\n\tpadding: 1rem;\n\tpadding-top: 1.5rem;\n\t/* background-color: ${props => props.theme.bg.quinary}; */\n\tjustify-content: space-between;\n`","// import external dependencies\nimport React, {Component, useState} from \"react\";\n\n// external functions\nimport {useDispatch, useSelector} from 'react-redux';\nimport moment from 'moment';\n\n// components\nimport ContentHeader from '../../content_header/content_header'\nimport PlusButton from \"../../../../basic/plus_button/plus_button\";\nimport ScheduleListItem from \"./schedule_list_item/schedule_list_item\";\n\n// import actions\nimport { putSchedule } from '../../../../../redux/actions/schedule_actions';\n\n// import utils\nimport { clone_object } from '../../../../../methods/utils/utils';\nimport {daysOfTheWeek} from \"../../../../../constants/scheduler_constants\";\n\n// import styles\nimport * as styled from './schedule_list.style';\nimport * as pageStyle from '../scheduler_content.style';\n\n// import logger\nimport log from '../../../../../logger.js';\n\nconst logger = log.getLogger(\"Schedule\")\n\nconst ScheduleList = (props) => {\n\n    // extract props\n    const {\n        schedules,\n        selectedScheduleId,\n        tasks,\n        setShowScheduleCreator,\n        setSelectedScheduleId,\n        openSchedule,\n    } = props\n\n    // dispatch\n    const dispatch = useDispatch()\n\n    let [timeToNextScheduled, setTimeToNextScheduled] = useState(\"10000000\")\n    let [timeToNextScheduledTemp, setTimeToNextScheduledTemp] = useState(\"10000000\")\n    let [nextScheduledTimeTemp, setNextScheduledTimeTemp] = useState(\"10000000\")\n\n    let [timeToNextScheduledHours, setTimeToNextScheduledHours] = useState(\"10000000\")\n    let [timeToNextScheduledMinutes, setTimeToNextScheduledMinutes] = useState(\"10000000\")\n    let [nextScheduleName, setNextScheduleName] = useState(\"\")\n    let [id, setId] = useState(\"\")\n\n    const currentMapId = useSelector(state => state.settingsReducer.settings.currentMapId)\n    const maps = useSelector(state => state.mapReducer.maps)\n    const currentMap = Object.values(maps).find(map => map._id === currentMapId)\n    /*\n    * handles switch press event of list items\n    *\n    * the parent schedule is found by id,\n    * and all of its properties are copied into a new object for submission,\n    * with the exception of the schedule_on property, which is toggled to its opposite\n    * */\n    const handleSwitchPress = (scheduleId) => {\n\n        // get schedule item - clone to avoid directly modifying redux state\n        const scheduleItem = schedules[scheduleId]\n\n\n        // toggle schedule items schedule_on property\n        const submitItem = {\n            task_id: scheduleItem.task_id,\n            days_on: scheduleItem.days_on,\n            interval_on: scheduleItem.interval_on,\n            name: scheduleItem.name,\n            schedule_on: !scheduleItem.schedule_on,\n            start_time: scheduleItem.start_time,\n            time_interval: scheduleItem.time_interval,\n            stop_time: scheduleItem.stop_time,\n            next_time: scheduleItem.next_time,\n        }\n\n        dispatch(putSchedule(scheduleItem.id, submitItem))\n    }\n\n    /*\n    * renders the task list\n    * */\n    const renderTasks = () => {\n        let fullSchedulesArr = Object.values(schedules).filter((item) => item.map_id === currentMap._id)\n        return (\n            <styled.TaskListContainer>\n                {fullSchedulesArr.length > 0 ?\n                    fullSchedulesArr.map((item, index, arr) => {\n                        const {\n                            days_on,\n                            interval_on,\n                            name,\n                            schedule_on,\n                            start_time,\n                            stop_time,\n                            stop_time_on,\n                            task_id,\n                            time_interval,\n                            next_time,\n                            _id: {$oid: id}\n                        } = item\n\n                        // initialize empty error object\n                        let error = {}\n\n                        logger.log(\"renderTasks item\",item)\n\n                        // const id = item._id.$oid\n                        const selectedTask = task_id ? tasks[task_id] : {};\n                        const taskIsDeleted = task_id === 'TASK DELETED';\n\n                        // check for taskName error\n                        if(!selectedTask?.name) error.taskName = \"Task not found\"\n\n                        if(taskIsDeleted) error.taskName = \"Task deleted\"\n\n                        logger.log(\"renderTasks selectedTask\",selectedTask)\n\n                        // convert days_on object to arr of indices\n                        const daysOnArr = [];\n                            Object.values(daysOfTheWeek).forEach((val, ind) => {\n                                if (days_on[val]) daysOnArr.push(ind)\n                            })\n\n                        return (\n                            <ScheduleListItem\n                                name={name}\n                                days_on={daysOnArr}\n                                taskName={(selectedTask && selectedTask.name) ? selectedTask.name : ''}\n                                selected={selectedScheduleId === id}\n                                interval_on={interval_on}\n                                key={item.id}\n                                id={item.id}\n                                start_time={start_time}\n                                stop_time={stop_time}\n                                schedule_on={schedule_on}\n                                time_interval={time_interval}\n                                onSwitchPress={handleSwitchPress}\n                                onClick={openSchedule}\n                                disabled={taskIsDeleted || (item.task_id === 'TEMP_NEW_SCHEDULE_ID') || (item.task_id === 'DEFAULT_TASK_ID')}\n                                error={error}\n                                next_time={next_time}\n                            />\n                        );\n                    })\n                    :\n                    <styled.ListEmptyContainer>\n                        <styled.ListEmptyTitle>No Schedules</styled.ListEmptyTitle>\n                        <styled.ListEmptyFiller />\n                    </styled.ListEmptyContainer>\n                }\n\n            </styled.TaskListContainer>\n        );\n    }\n\n    const handleNextExecution = () => {\n        let fullSchedulesArr = Object.values(schedules).filter((item) => item.map_id === currentMap._id)\n        const minutesPerDay = 1440\n        let currentTime = Number(((moment(moment(), 'HH:mm:ss')).format('HH')) * 60) + Number((moment(moment(), 'HH:mm:ss')).format('mm'))\n        logger.log('nexttime')\n\n        if (fullSchedulesArr.length > 0) {\n          fullSchedulesArr.map((item, index, arr) => {\n            var startTime = Number(((moment(item.start_time, 'HH:mm:ss')).format('HH')) * 60) + Number((moment(item.start_time, 'HH:mm:ss')).format('mm'))\n            if(item.interval_on){\n                var stopTime = Number(((moment(item.stop_time, 'HH:mm:ss')).format('HH')) * 60) + Number((moment(item.stop_time, 'HH:mm:ss')).format('mm'))\n\n                if (stopTime - currentTime > 0 && startTime - currentTime < 0) {\n                    var intervalTime = Number(((moment(item.time_interval, 'HH:mm:ss')).format('HH')) * 60) + Number((moment(item.time_interval, 'HH:mm:ss')).format('mm'))\n                    timeToNextScheduledTemp = Math.ceil((currentTime - startTime) / intervalTime) * intervalTime + startTime - currentTime\n                    nextScheduledTimeTemp = Math.ceil((currentTime - startTime) / intervalTime) * intervalTime + startTime\n                }\n\n                if (stopTime - currentTime < 0) {\n                    timeToNextScheduledTemp = minutesPerDay - currentTime + startTime\n                    nextScheduledTimeTemp = minutesPerDay + startTime\n                }\n                if (startTime - currentTime > 0) {\n                    timeToNextScheduledTemp = startTime - currentTime\n                    nextScheduledTimeTemp = startTime\n                }\n          }\n          else{\n              nextScheduledTimeTemp = startTime\n\n              if (startTime - currentTime > 0) {\n                  timeToNextScheduledTemp = startTime - currentTime\n              }\n\n              else{\n                timeToNextScheduledTemp = minutesPerDay - currentTime + startTime\n              }\n            }\n\n            if (timeToNextScheduledTemp < timeToNextScheduled) {\n                setTimeToNextScheduled(timeToNextScheduledTemp)\n                setTimeToNextScheduledHours(Math.floor(timeToNextScheduled / 60))\n                setTimeToNextScheduledMinutes(timeToNextScheduled % 60)\n                setNextScheduleName(item.name)\n                setId(item.id)\n\n              }\n              })\n            }\n          }\n\n\n    return (\n        <styled.Container>\n            {/* <pageStyle.Header>\n                <pageStyle.Title schema={'scheduler'}>Schedules</pageStyle.Title>\n                <PlusButton\n                    onClick={() => setShowScheduleCreator(true)}\n                />\n            </pageStyle.Header> */}\n            <ContentHeader content={'scheduler'} onClickAdd={() => setShowScheduleCreator(true)}/>\n            {handleNextExecution()}\n            {timeToNextScheduled < 1440 ?\n\n            <styled.NextExecution\n                onClick={() => {setShowScheduleCreator(true)\n                                setSelectedScheduleId(id)}}>\n                                Next Up:  \" {nextScheduleName} \" will execute in {timeToNextScheduled} minutes\n            </styled.NextExecution>\n            :\n            <></>\n          }\n            {renderTasks()}\n        </styled.Container>\n\n    );\n}\n\n\nexport default ScheduleList\n","import styled from 'styled-components'\nimport Modal from 'react-modal';\nimport {css} from 'styled-components'\n\nconst sharedButtonStyle = css`\n  outline: none !important;\n  outline-offset: none !important;\n  align-self: center;\n  font-size: 1.5rem;\n  position: relative;\n  text-align: center;\n  -webkit-transition-duration: 0.4s; /* Safari */\n  transition-duration: 0.4s;\n  cursor: pointer;\n`\n\nexport const Container = styled(Modal)`\n  outline: none !important;\n  outline-offset: none !important;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  right: auto;\n  bottom: auto;\n\n  position: absolute;\n\n  background: ${props => props.theme.bg.primary};\n  border-width: thin;\n  border-radius: .5em;\n  border-color: ${props => props.theme.bg.quarternary};\n  border-style: solid;\n  padding: 2rem;\n  z-index: 50;\n  \n  color: ${props => props.theme.bg.octonary};\n`;\n\nexport const HeaderContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  border-width: 0;\n  border-bottom-width: thin;\n  border-color: black;\n  border-style: solid;\n  margin-bottom: 2rem;\n`;\n\nexport const Title = styled.h2`\n  text-align: center;\n  font-size: ${props =>  props.theme.fontSize.sz3};\n  font-family: ${props =>  props.theme.font.primary};\n  font-weight: bold;\n`;\n\nexport const TextContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 1.5rem;\n`;\n\nexport const TextMain = styled.h4`\n  text-align: center;\n  font-size: ${props =>  props.theme.fontSize.sz3};\n  font-family: ${props =>  props.theme.font.primary};\n  font-weight: 500;\n`;\n\nexport const Caption = styled.h5`\n  text-align: center;\n  font-size: ${props =>  props.theme.fontSize.sz4};\n  font-family: ${props =>  props.theme.font.primary};\n  font-weight: 400;\n  font-style: italic;\n`;\n\nexport const ButtonForm = styled.form`\n\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n`;\n\nexport const Icon = styled.i`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin: auto auto;\n    color: green;\n    fill: green;\n    font-size: 7rem;\n    width: 14rem;\n    &:hover {\n        cursor: pointer;\n    }\n\n    &:active{\n        filter: brightness(85%)\n    }\n`","import styled from 'styled-components'\nimport { hexToRGBA, LightenDarkenColor, RGB_Linear_Shade } from '../../../methods/utils/color_utils';\n\n\nconst backgroundColor = (props) => {\n  if(props.secondary || props.disabled) {\n    return props.theme.bg.senary;\n  }\n\n  else {\n    if(props.tertiary) {\n      return props.theme.bg.tertiary;\n    }\n    else {\n       if(props.disabled) {\n         return props.theme.disabled;\n       }\n       else {\n         return props.theme.fg.primary;\n       }\n     }\n  }\n\n\n}\nexport const SmallButton = styled.button`\n    display: inline-block;\n    height: calc(${props => props.theme.fontSize.sz3} * 2.2);\n    line-height: 1rem;\n    text-align: center;\n    vertical-align: middle;\n    margin: 0.5rem;\n    user-select: none;\n\n    padding: 0.375rem 0.75rem;\n    font-size: ${props => props.theme.fontSize.sz3};\n    font-family: ${props => props.theme.font.primary};\n    font-weight: 500;\n\n    border-radius: calc(${props => props.theme.fontSize.sz3} * 0.3);\n    color: ${props => props.secondary || props.disabled ? props.theme.bg.primary : (props.tertiary ? props.theme.fg.primary : props.theme.bg.octonary)};\n    background-color: ${props => backgroundColor(props)};\n    /*\n    background-color: ${props => props.secondary || props.disabled ?\n       (props.theme.bg.senary)\n      :\n      (props.tertiary ?\n        props.theme.bg.tertiary\n        :\n        (props.disabled ? props.theme.disabled :  props.theme.fg.primary))};\n    */\n\n    border: none;\n\n    white-space: pre;\n\n    &:focus {\n        outline: none;\n        background-color: ${props => backgroundColor(props)};\n        //background-color: ${props => props.secondary || props.disabled ? props.theme.bg.senary : (props.tertiary ? props.theme.bg.tertiary : props.theme.fg.primary)};\n    }\n\n    &:hover {\n      background-color: ${props => props.disabled ? backgroundColor(props) : LightenDarkenColor(backgroundColor(props), 10)};\n    }\n`;\n","import React from 'react';\nimport * as styled from './small_button.style'\n\nconst SmallButton = ({label, onClick, style, secondary, tertiary, disabled, type, ...props}) => {\n\n    return (\n        <styled.SmallButton onClick={!disabled ? onClick : () => {return}} disabled={disabled} type={type} {...props} style={style} secondary={secondary} tertiary={tertiary}>\n          {props.children ?\n            props.children\n            :\n            label\n          }\n        </styled.SmallButton>\n    )\n};\n\nSmallButton.defaultProps = {\n    secondary : false,\n    tertiary : false,\n    disabled: false\n};\n\nexport default SmallButton;\n","import React from \"react\";\nimport Modal from 'react-modal';\n\nimport * as styled from './modals.style'\nimport SmallButton from '../small_button/small_button.js'\n\n\nModal.setAppElement('body');\n\nexport const ConfirmDeleteModal = (props) => {\n\n  const {\n    isOpen,\n    title,\n    textMain,\n    caption,\n    onCancelClick,\n    onDeleteClick\n\n  } = props\n\n  return (\n    <styled.Container\n      isOpen={isOpen}\n      contentLabel=\"Confirm Delete Modal\"\n      style={{\n        overlay: {\n          zIndex: 500,\n          backgroundColor: 'rgba(0, 0, 0, 0.4)' \n      },\n        content: {\n\n        }\n      }}\n    >\n\n\n      <styled.HeaderContainer>\n        <styled.Title>{title}</styled.Title>\n      </styled.HeaderContainer>\n      \n      <styled.TextContainer>\n        <styled.TextMain>{textMain}</styled.TextMain>\n        <styled.Caption>{caption}</styled.Caption>\n      </styled.TextContainer>\n\n      <styled.ButtonForm>\n      <SmallButton\n                    tertiary\n                    onClick={() => onCancelClick()}\n                    label={\"Cancel\"}\n                    type=\"button\"\n                  />\n        <SmallButton\n                    onClick={() => onDeleteClick()}\n                    label={\"Delete\"}\n                    type=\"button\"\n                  />\n      </styled.ButtonForm>\n\n    </styled.Container>\n  );\n};\n\nexport const ConfirmExitModal = (props) => {\n\n\n  return (\n    <styled.Container\n      isOpen={props.isOpen}\n      contentLabel=\"Confirm Exit Modal\"\n    >\n\n      <styled.HeaderContainer>\n        <styled.Title>Are you sure you want to exit?</styled.Title>\n      </styled.HeaderContainer>\n      \n      <styled.TextContainer>\n        <styled.TextMain>Your changes will not be saved</styled.TextMain>\n        {/* <styled.Caption>{props.caption}</styled.Caption> */}\n      </styled.TextContainer>\n\n      <styled.ButtonForm onSubmit={(e) => props.onConfirm()}>\n        <SmallButton\n            tertiary\n            onClick={() => props.onCancel()}\n            label={\"Cancel\"}\n            type=\"button\"\n          />\n        <SmallButton\n            onClick={() => props.onConfirm()}\n            label={\"Continue\"}\n            type=\"submit\"\n          />\n      </styled.ButtonForm>\n\n    </styled.Container>\n  );\n\n};\n\n\nexport const WarningModal  = (props) => {\n\n  return (\n    <styled.Container\n      isOpen={props.isOpen}\n      contentLabel=\"Confirm Delete Modal\"\n    >\n\n      <styled.HeaderContainer>\n        <styled.Title>{props.title}</styled.Title>\n      </styled.HeaderContainer>\n      <styled.TextContainer>\n        <styled.TextMain>{props.textMain}</styled.TextMain>\n        <styled.Caption>{props.caption}</styled.Caption>\n      </styled.TextContainer>\n\n      <styled.ButtonForm>\n        {/* <styled.CancelButton   type={\"button\"} onClick={props.onContinueClick}>Continue</styled.CancelButton> */}\n      </styled.ButtonForm>\n\n    </styled.Container>\n  );\n};\n\nexport const HILModal = React.memo((props) => {\n\n  return(\n    <styled.Container\n      isOpen={props.isOpen}\n\n      contentLabel=\"Confirm Delete Modal\"\n    >\n\n\n      <styled.HeaderContainer>\n        <styled.Title>{props.title}</styled.Title>\n      </styled.HeaderContainer>\n      <styled.TextContainer>\n        <styled.TextMain>{props.textMain}</styled.TextMain>\n        <styled.Caption>{props.timer}</styled.Caption>\n      </styled.TextContainer>\n\n      <styled.ButtonForm>\n        <styled.Icon\n            secondary\n            onClick={() => props.hilSuccess()}\n            type=\"button\"\n            className='far fa-check-square fa-10x'\n          />\n          <styled.Icon\n              secondary\n              onClick={() => props.hilFailure()}\n              type=\"button\"\n              className='far fa-minus-square'\n              style={{color: 'red'}}\n          />\n      </styled.ButtonForm>\n      <styled.ButtonForm>\n        <SmallButton\n          secondary\n          onClick={() => props.onCancelClick()}\n          label={\"Cancel\"}\n          type=\"button\"\n        />\n      </styled.ButtonForm>\n\n\n    </styled.Container>\n  )\n})\n\n","import styled, {css} from 'styled-components'\n\nexport const Container = styled.div`\n    // border-width: thin;\n    // border-style: solid;\n    // border-color: ${props => props.hasError ? \"red\" : \"transparent\"};\n    // box-shadow:  ${props => props.hasError && \"0 0 5px red\"};\n    width: 100%;\n`;\n\nexport const StyledLabel = styled.label`\n  background: pink;\n  height: 3rem;\n`;\n\nexport const ErrorContainerComponent = styled.div`\n    // position: relative;\n    // width: auto;\n    // height: auto;\n    // margin-left: 1rem;\n    left: 50%;\n    // right: 1rem;\n    transform: translateX(50%);\n`;\n\n// export const DefaultButtonViewErrorCss = css`\n//     border-color: ${props => props.hasError && \"red\"};\n//     box-shadow:  ${props => props.hasError && \"0 0 5px red\"};\n// `;\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { useField, useFormikContext } from \"formik\";\n\n// import components\nimport ErrorTooltip from \"../error_tooltip/error_tooltip\";\nimport ButtonGroup from '../../button_group/button_group';\n\n// import styles\nimport * as style from './button_group_field.style'\nimport * as button_group_style from '../../button_group/button_group.style'\n\nconst ButtonGroupField = (\n    {\n        label,\n        containerStyle,\n        LabelComponent,\n        Container,\n        ButtonView,\n        Button,\n        ButtonViewStyle,\n        // ButtonViewErrorCss,\n        enableErrorTooltip,\n        ...props\n    }) => {\n\n    const { setFieldValue, setFieldTouched } = useFormikContext();\n    const [field, meta] = useField(props);\n    const hasError = meta.touched && meta.error;\n\n    return (\n        <>\n            {label &&\n                <LabelComponent htmlFor={props.id || props.name}>{label}</LabelComponent>\n            }\n\n            <style.Container\n                hasError={hasError}\n            >\n                {enableErrorTooltip &&\n                    <ErrorTooltip\n                        visible={hasError}\n                        text={meta.error}\n                        ContainerComponent={style.ErrorContainerComponent}\n                    />\n                }\n\n                <ButtonGroup\n                    {...field}\n                    {...props}\n                    hasError={hasError}\n                    Container={Container}\n                    // ButtonView={<Wrapper hasError={hasError}/>}\n                    ButtonView={ButtonView}\n                    // ButtonView={React.cloneElement(ButtonView, { size: 24 })}\n                    // ButtonView={renderClone(ButtonView)}\n                    Button={Button}\n                    selectedIndexes={field.value}\n                    onPress={(val) => {\n                        const isTouched = meta.touched;\n                        if (!isTouched) {\n                            setFieldTouched(field.name, true)\n                        }\n                        setFieldValue(field.name, val);\n                    }}\n                />\n            </style.Container>\n\n\n            {/*\n            {meta.touched && meta.error ? (\n\t\t\t\t<div className=\"error\">{meta.error}</div>\n\t\t\t) : null}\n            */}\n\n        </>\n    );\n};\n\n// Specifies propTypes\nButtonGroupField.propTypes = {\n\n};\n\n// Specifies the default values for props:\nButtonGroupField.defaultProps = {\n    LabelComponent: null,\n    // ButtonViewErrorCss: style.DefaultButtonViewErrorCss,\n    ButtonView: button_group_style.ButtonView,\n    enableErrorTooltip: true,\n};\n\nexport default ButtonGroupField;\n","// export function generateOptions(length, excludedOptions) {\n//   const arr = [];\n//   for (let value = 0; value < length; value++) {\n//     if (excludedOptions.indexOf(value) < 0) {\n//       arr.push(value);\n//     }\n//   }\n//   return arr;\n// }\n//\n// export function disabledHours(a,b,c,d) {\n//   return [];\n// }\n\nexport function disabledMinutes(h) {\n  switch (h) {\n    case 0:\n      return [0];\n    default:\n      return[];\n  }\n}\n\n// export function disabledSeconds(h, m) {\n//   return [h + m % 60];\n// }\n","import { TEMP_NEW_SCHEDULE_ID, DEFAULT_TASK_ID } from '../../constants/scheduler_constants';\nimport { timeString24HrToDate, uuidv4 } from './utils';\nimport moment from 'moment';\n\nconst timeStringRegex = '^(?:(?:([01]?\\d|2[0-3]):)?([0-5]?\\d):)?([0-5]?\\d)$'\nconst timeStringRegex2 = /^(?:(?:([01]?\\d|2[0-3]):)?([0-5]?\\d):)?([0-5]?\\d)$/\nconst timeStringRegex3 = /(?:[01]\\d|2[0123]):(?:[012345]\\d):(?:[012345]\\d)$/\n\nexport function getScheduleItemTemplate() {\n\n    let start_time = new Date();\n    start_time.setSeconds(0);\n    start_time.setHours(8);\n    start_time.setMinutes(0);\n    start_time = start_time.toTimeString().split(' ')[0];\n    start_time = moment(timeString24HrToDate(start_time))\n    // let start_time = '07:00:00';\n\n    // let  = '00:15:00';\n    let time_interval = new Date();\n    time_interval.setSeconds(0);\n    time_interval.setMinutes(15);\n    time_interval.setHours(0);\n    time_interval = time_interval.toTimeString().split(' ')[0];\n    time_interval = moment(timeString24HrToDate(time_interval))\n\n\n    let stop_time = new Date();\n    stop_time.setSeconds(0);\n    stop_time.setMinutes(0);\n    stop_time.setHours(20);\n    stop_time = stop_time.toTimeString().split(' ')[0];\n    stop_time = moment(timeString24HrToDate(stop_time))\n    // let stop_time =\"8:00:00 PM\";\n\n    const id = uuidv4();\n\n    return {\n        id: id,\n        _id: id,\n        task_id: DEFAULT_TASK_ID,\n        days_on: [],\n        interval_on: false,\n        schedule_on: true,\n        start_time: start_time,\n        time_interval: time_interval,\n        stop_time: stop_time,\n        new: true,\n        name: \"\",\n        task: []\n    }\n}\n\nexport function getScheduleItemTemplate2(timeString) {\n    return {\n        id: uuidv4(),\n        task_id: DEFAULT_TASK_ID,\n        days_on: {\n            friday: false,\n            monday: false,\n            saturday: false,\n            sunday: false,\n            thursday: false,\n            tuesday: false,\n            wednesday: false\n        },\n        interval_on: false,\n        schedule_on: false,\n        start_time: new Date().toTimeString().split(' ')[0],\n        time_interval: new Date().toTimeString().split(' ')[0],\n        label: \"\"\n    };\n}\n\nexport function formatScheduleItemOld(scheduleItem) {\n    console.log('formatScheduleItem scheduleItem', scheduleItem)\n    scheduleItem.id = scheduleItem._id.$oid;\n    if (!scheduleItem.name) scheduleItem.name = \"\";\n    if (!scheduleItem.label) scheduleItem.label = \"\";\n    if (!scheduleItem.task_id) scheduleItem.task_id = \"\";\n\n\n\n    const startTimeIsValid = timeStringRegex3.test(scheduleItem.start_time);\n    if (!startTimeIsValid) {\n        scheduleItem.start_time = \"00:00:00\";\n        scheduleItem.start_time_label = \"NOT SET\";\n    } else {\n        scheduleItem.start_time_label = scheduleItem.start_time;\n    }\n\n    const timeIntervalIsValid = timeStringRegex3.test(scheduleItem.time_interval);\n    if (!timeIntervalIsValid) {\n        scheduleItem.time_interval = \"00:00:00\";\n        scheduleItem.time_interval_label = \"NOT SET\";\n    } else {\n        scheduleItem.time_interval_label = scheduleItem.time_interval;\n    }\n\n    const stopTimeIsValid = timeStringRegex3.test(scheduleItem.stop_time);\n    if (!stopTimeIsValid) {\n        scheduleItem.stop_time = \"00:00:00\";\n        scheduleItem.stop_time_label = \"NOT SET\";\n    } else {\n        scheduleItem.stop_time_label = scheduleItem.stop_time;\n    }\n\n\n\n    console.log('startTimeIsValid', startTimeIsValid)\n    console.log('timeIntervalIsValid', timeIntervalIsValid)\n    console.log('stopTimeIsValid', stopTimeIsValid)\n\n    return scheduleItem;\n}\n\nexport function formatScheduleItem(scheduleItem) {\n\n\n    return scheduleItem;\n}\n\n/*\nfunction isSchedule(arg: any): arg is Schedule {\n    return arg && arg.prop && typeof(arg.prop) == 'number';\n}\n*/\n\nexport class Schedule_v2 {\n    constructor(apiResponse) {\n        this.days_on = {\n            friday: 'boolean',\n            monday: 'boolean',\n            saturday: 'boolean',\n            sunday: 'boolean',\n            thursday: 'boolean',\n            tuesday: 'boolean',\n            wednesday: 'boolean',\n        };\n\n        this.interval_on = 'boolean';\n        this.name = 'string';\n        this.precondition_id = 'string';\n        this.schedule_on = 'boolean';\n        this.start_time = 'string';\n        this.time_interval = 'string';\n    }\n}\n\nexport class Schedule {\n    constructor(apiResponse) {\n        let days_on = {\n            friday: 'boolean',\n            monday: 'boolean',\n            saturday: 'boolean',\n            sunday: 'boolean',\n            thursday: 'boolean',\n            tuesday: 'boolean',\n            wednesday: 'boolean',\n        };\n\n        let interval_on = 'boolean';\n        let name = 'string';\n        let precondition_id = 'string';\n        let schedule_on = 'boolean';\n        let start_time = 'string';\n        let time_interval = 'string';\n    }\n}\n\ninterface ScheduleInterface {\n    days_on: {\n        friday: string;\n        monday: boolean;\n        saturday: boolean;\n        sunday: boolean;\n        thursday: boolean;\n        tuesday: boolean;\n        wednesday: boolean;\n    },\n    interval_on: boolean;\n    name: string;\n    precondition_id: string;\n    schedule_on: boolean;\n    start_time: string;\n    time_interval: string;\n}\n","import styled from 'styled-components'\nimport { css } from 'styled-components'\nimport { Form } from 'formik';\n\n// import components\nimport TimePickerField from '../../../../basic/form/time_picker_field/time_picker_field';\n\nimport { globStyle } from '../../../../../global_style';\nimport { hexToRGBA } from '../../../../../methods/utils/color_utils';\n\nexport const FadeLoaderCSS = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\nexport const FieldLabel = styled.label`\n    padding: 0;\n    width: 100%;\n    font-size: ${props => props.theme.fontSize.sz2};\n    font-family: ${props => props.theme.font.primary};\n    color: ${props => props.theme.bg.septenary};\n`\n\nexport const RowContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    margin-top: 1rem;\n    justify-items: space-between;\n    justify-content: center;\n    align-items: center;\n`;\n\nexport const FlexContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n\n    /* @media (min-width: ${props => props.theme.widthBreakpoint.tablet}) {\n      flex-direction: row;\n      width: 40rem;\n    } */\n`;\n\nexport const FlexBox = styled.div`\n    /* width: 100%; */\n    /* min-width: 15rem; */\n    /* margin-right: 3rem; */\n`;\n\nexport const ToggleTextLeft = styled.h1`\n    font-size: ${props => props.theme.fontSize.sz3};\n    font-family: ${props => props.theme.font.primary};\n    display: flex;\n    margin-top: 0.2rem;\n    padding-right: 0.8rem;\n    color: ${props => props.theme.bg.octonary};\n\n`;\n\nexport const ToggleTextRight = styled.h1`\n    font-size: ${props => props.theme.fontSize.sz3};\n    font-family: ${props => props.theme.font.primary};\n    display: flex;\n    margin-top: 0.2rem;\n    padding-left: 0.8rem;\n    color: ${props => props.theme.bg.octonary};\n\n`;\n\n\n\n\nexport const ErrorComponent = styled.span`\n  color: ${props => props.theme.bad};\n  font-size: ${props => props.theme.fontSize.sz4};\n  font-weight: 600;\n  margin-top: .5rem;\n  align-self: center;\n`;\n\n\n\nexport const StyledForm = styled(Form)`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    max-width: 100%;\n    max-height: 100%;\n    padding: 1rem;\n    \n    overflow-x: hidden;\n`;\n\nexport const ContentContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n    /* overflow-y: scroll; */\n    padding: 1rem;\n    max-width: 100%;\n    overflow-x: hidden;\n`\n\nexport const FooLabel = styled.div``;\n\n// text input\n// ************************************\n// ************************************\nexport const Input = styled.input`\n    background-color: ${props => props.theme.bg.tertiary};\n    border: 1px solid ${props => props.theme.bg.primary};\n    font-size: ${props => props.theme.fontSize.sz8};\n    font-family: ${props => props.theme.font.primary};\n    display: flex;\n    flex-grow: 1;\n    color: ${props => props.theme.bg.septenary};\n\n    &:focus {\n        outline: none;\n        border: 1px solid ${props => props.theme.fg.primary};\n        color: ${props => props.theme.bg.septenary};\n        box-shadow: none;\n        background-color: ${props => props.theme.bg.tertiary};\n    }\n\n    &::placeholder {\n        font-size: ${props => props.theme.fontSize.sz8};\n        font-family: ${props => props.theme.font.secondary};\n        color: ${props => props.theme.bg.quaternary};\n    }\n`;\n\nexport const InputContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding-bottom: 1rem;\n  width: 100%;\n`;\n\nexport const InputLabel = styled.label`\n    width: 100%;\n    padding: 0;\n    margin-bottom: 1rem;\n    font-size: ${props => props.theme.fontSize.sz2};\n    font-family: ${props => props.theme.font.primary};\n    color: ${props => props.theme.bg.septenary};\n`;\n\nexport const TitleTextbox = styled.input`\n    background-color: ${props => props.theme.bg.tertiary};\n    border-color: ${props => props.theme.bg.primary};;\n    font-size: ${props => props.theme.fontSize.sz2};\n    font-family: ${props => props.theme.font.primary};\n    display: flex;\n    flex-grow: 1;\n\n    &:focus {\n        border: 1px solid ${props => props.theme.fg.primary};\n        color: ${props => props.theme.bg.septenary};\n        box-shadow: none;\n        background-color: ${props => props.theme.bg.tertiary};\n    }\n\n    &::placeholder {\n        font-size: ${props => props.theme.fontSize.sz2};\n        font-family: ${props => props.theme.font.secondary};\n        color: ${props => props.theme.bg.quaternary};\n    }\n`;\n// ************************************\n// ************************************\n\n\n// drop down field\n// ************************************\n// ************************************\nexport const SelectContainer = styled.div`\n  width: 100%;\n  flex-direction: column;\n  z-index: 2;\n  text-align: center;\n  padding-bottom: 2rem;\n\n`;\n\nexport const ContentComponent = styled.div`\n  display: flex;\n  flex: 1;\n  flex-wrap: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n`;\n\nexport const SelectItemComponent = styled.span`\n  padding: .5rem 1rem .5rem 1rem;\n  cursor: pointer;\n  border-bottom: 1px solid ${globStyle.white};\n  white-space: wrap;\n  display: flex;\n  justify-content: space-between;\n  font-family: ${globStyle.font};\n  flex: 1;\n  max-width: 100%;\n\n  &.react-dropdown-select-item-active {\n    border-bottom: 1px solid ${globStyle.white};\n    ${({ disabled, color }) => !disabled && color && `background: ${hexToRGBA(color, 0.1)};`}\n  }\n\n  :hover,\n  :focus {\n    background: ${globStyle.grey5};\n    outline: none;\n  }\n\n  &.react-dropdown-select-item-selected {\n    ${({ disabled, color }) =>\n        disabled\n            ? `\n    background: ${globStyle.red};\n    color: ${globStyle.black};\n    `\n            : `\n    background: ${globStyle.red};\n    color: ${globStyle.black};\n    border-bottom: 1px solid ${globStyle.white};\n    `}\n  }\n\n  ${({ disabled }) =>\n        disabled\n            ? `\n    background: ${globStyle.white};\n    color: ${globStyle.grey3};\n\n    ins {\n      text-decoration: none;\n      border:1px solid #ccc;\n      border-radius: 2px;\n      padding: 0px 3px;\n      font-size: x-small;\n      text-transform: uppercase;\n    }\n    `\n            : ''}\n\n    background-color: ${globStyle.white};\n`;\n\nexport const TextComponent = styled.span`\n  overflow: wrap;\n  white-space: wrap;\n  flex-wrap: wrap;\n  max-width: 100%;\n\n`;\n\n\nexport const SelectLabel = styled.label`\nwidth: 100%;\npadding: 0;\nmargin-bottom: 1rem;\nfont-size: ${props => props.theme.fontSize.sz2};\nfont-family: ${props => props.theme.font.primary};\ncolor: ${props => props.theme.bg.septenary};\n\n`;\n// ************************************\n// ************************************\n\n// ButtonGroup\n// ************************************\n// ************************************\nexport const ButtonGroupContainer = styled.div`\n  background: transparent;\n  align-items: start;\n  width: 100%;\n  max-width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: start;\n  padding-bottom: 2rem;\n\n`;\n\n\n\n// ************************************\n// ************************************\n\nexport const StyledErrorMessage = styled.div`\n\n`;\n\n// date picker\n// ************************************\n// ************************************\n\nconst sharedTimePickerContainerStyle = css`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  align-items: center;\n  flex-wrap: wrap;\n`\n\nexport const TimePickerContainer = styled.div`\n  ${sharedTimePickerContainerStyle}\n  justify-content: center;\n  width: 100%;\n  \n  padding-top: 0.5rem;\n  flex-direction: row;\n`;\n\nexport const TimePickerErrorComponent = styled.span`\n  color: ${props => props.theme.bad};\n  font-size: ${props => props.theme.fontSize.sz4};\n  font-weight: 600;\n  margin-top: .25rem;\n`;\n\nexport const StopTimePickerContainer = styled.div`\n  ${sharedTimePickerContainerStyle}\n  justify-content: flex-start;\n  padding-bottom:2rem;\n  width: 100%;\n  font-size: ${props => props.theme.fontSize.sz2};\n  font-family: ${props => props.theme.font.primary};\n  color: ${props => props.theme.bg.septenary};\n`;\n\nexport const StyledTimePickerField = styled(TimePickerField)`\n\n`;\n\n\nexport const SwitchLabel = styled.label`\n\n`;\n\nexport const DatePickerLabel = styled.label`\n  font-size: ${props => props.theme.fontSize.sz4};\n  font-family: ${props => props.theme.font.primary};\n  color: ${props => props.theme.bg.septenary};\n\n  // flex-grow: 1;\n  // flex-basis: 12rem;\n\n  line-height: 2.5rem;\n  width: 7rem;\n  margin-right: 1rem;\n`;\n// ************************************\n// ************************************\n\n\n\n// bottom buttons\n// ************************************\n// ************************************\nexport const FormButtonsContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  background: transparent;\n    width: 100%;\n  justify-content: center;\n`;\n\nexport const FormButton = styled.button`\n\n\n`;\n// ************************************\n// ************************************\n","import styled, {css} from 'styled-components';\n\nexport const Container = styled.div`\n    width: 100%;\n    max-width: 100%;\n    background: transparent;\n    border-color: transparent;\n    border-width: 0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-wrap: wrap;\n    \n    word-break: break-all;\n    \n`\n\nexport const Button = styled.button`\n    // width: 7rem;\n\n    background: transparent;\n    outline: none !important;\n    outline-offset: none !important;\n    border-color: transparent;\n    border-width: 0;\n\n    margin-bottom: 0.5rem;\n    word-break: break-all;\n    \n`\n\nexport const buttonViewCss = css`\n\tword-break: break-all;\n`\n\nexport const ButtonView = styled.div`\n\n    flex-grow: 1;\n\n    @media (max-width: ${props => props.theme.widthBreakpoint.tiny}) {\n        height: 7rem;\n        line-height: 7rem;\n    }\n\n    background: ${props => props.isSelected ? props.theme.schema['scheduler'].solid : 'transparent'};\n    color: ${props => props.isSelected ? props.theme.bg.primary : props.theme.bg.octonary};\n\n    outline: none !important;\n    outline-offset: none !important;\n    padding: .75rem;\n    margin-left: -0.2rem;\n    margin-bottom: .5rem;\n    border-radius: .3rem;\n    border-width: .15rem;\n    border-color: ${props => props.theme.schema['scheduler'].solid};\n\n    border-style: solid;\n\n\n    font-size: ${props => props.theme.fontSize.sz4};\n    font-family: ${props => props.theme.font.primary};\n    font-weight: 400;\n    @media ${props => props.theme.widthBreakpoint.mobileL} {\n      padding: .25rem;\n      fontSize: ${props => props.theme.fontSize.sz5};\n    }\n    \n    border-color: ${props => props.hasError && \"red\"};\n    box-shadow:  ${props => props.hasError && \"0 0 5px red\"};\n    word-break: break-all;\n`\n","// import external dependencies\nimport React, { useContext, useState } from 'react'\nimport PropTypes from 'prop-types'\n\n// import external components\nimport FadeLoader from \"react-spinners/FadeLoader\"\n\n// external functions\nimport { Formik } from 'formik'\nimport { ThemeContext } from \"styled-components\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport moment from 'moment'\n\n// import components\nimport ContentHeader from '../../content_header/content_header'\nimport ButtonGroupField from '../../../../basic/form/button_group_field/button_group_field'\nimport TextField from '../../../../basic/form/text_field/text_field.js'\nimport SwitchField from '../../../../basic/form/switch_field/switch_field.js'\nimport DropDownSearchField from '../../../../basic/form/drop_down_search_field/drop_down_search_field.js'\nimport Button from '../../../../basic/button/button'\nimport BackButton from \"../../../../basic/back_button/back_button\"\nimport Textbox from \"../../../../basic/textbox/textbox\";\n\n// import utils\nimport * as helpers from './create_schedule_form.helpers'\nimport { daysOfTheWeek } from '../../../../../constants/scheduler_constants'\nimport { FORM_MODES } from '../../../../../constants/scheduler_constants'\nimport { scheduleSchema } from '../../../../../methods/utils/form_schemas'\nimport { timeString24HrToDate } from \"../../../../../methods/utils/utils\"\nimport { getScheduleItemTemplate } from \"../../../../../methods/utils/schedules_utils\"\nimport { getMinutesFromMoment } from \"../../../../../methods/utils/time_utils\"\n\n// actions\nimport { postSchedule, putSchedule } from \"../../../../../redux/actions/schedule_actions\"\nimport { getTasks } from \"../../../../../redux/actions/tasks_actions\";\n\n// import styles\nimport * as styled from './create_schedule_form.style'\nimport * as pageStyle from '../scheduler_content.style'\nimport * as ButtonGroupComponents from './button_group.style'\n\n// logger\nimport log from '../../../../../logger'\n\nconst logger = log.getLogger(\"CreateScheduleForm\", \"Scheduler\")\nlogger.setLevel(\"silent\")\n\nconst widthBreakPoint = 525\n\nconst CreateScheduleForm = (props) => {\n\n    const {\n        onDeleteClick,\n        hideScheduleCreator,\n        selectedScheduleId,\n        setSelectedScheduleId,\n        schedules,\n        tasks,\n    } = props\n\n    const dispatch = useDispatch()\n\n    const width = useSelector(state => state.sidebarReducer.width)\n    const currentMapId = useSelector(state => state.settingsReducer.settings.currentMapId)\n    const maps = useSelector(state => state.mapReducer.maps)\n    const currentMap = Object.values(maps).find(map => map._id === currentMapId)\n    const isSmall = width < widthBreakPoint\n\n    const tasksArr = Object.values(tasks).filter((task) => task.map_id === currentMap._id) // get copy of tasks as arr here instead of calling Object.values() multiple times\n\n    const themeContext = useContext(ThemeContext)\n\n    /*\n    * submission logic for form\n    *\n    * extracts form values into a new object that will be send as either a POST or PUT request depending on whether a new item is being created, or an existing item modified\n    *\n    * expected fields\n    *   start_time: Moment\n    *   time_interval: Moment\n    *   stop_time: Moment\n    *   days_on: array - [1,2,3]\n    *   name: string - \"this is a name\"\n    *   task: array of objects - [{}]\n    *   interval_on: bool - false\n    * */\n    const handleSubmit = async (values, formMode) => {\n\n        // convert days_on from array of indices to object with the days as keys and values as either true or false\n        const days_on = {}\n        Object.values(daysOfTheWeek).forEach((day, ind, arr) => {\n            days_on[day] = values.days_on.includes(ind)\n        })\n\n        const {\n            task,\n            name,\n            schedule_on,\n            start_time,\n            interval_on,\n            time_interval,\n            stop_time,\n            map_id,\n            next_time\n        } = values\n\n        // eextract properties into new object for submission\n        const submitItem = {\n            task_id: task[0]?._id,\n            days_on,\n            name: name,\n            schedule_on: schedule_on,\n            start_time: start_time.format(\"HH:mm:ss\"),\n            interval_on: interval_on,\n            time_interval: time_interval.format(\"HH:mm:ss\"),\n            stop_time: stop_time.format(\"HH:mm:ss\"),\n            next_time: next_time,\n            map_id: map_id,\n        }\n\n        // update existing object - PUT request\n        if (formMode === FORM_MODES.UPDATE) {\n            // dispatch update action\n            dispatch(putSchedule(selectedScheduleId, submitItem))\n\n            // create new object - POST request\n        } else if (formMode === FORM_MODES.CREATE) {\n            // dispatch post action\n            const createdSchedule = await dispatch(postSchedule(submitItem))\n            setSelectedScheduleId(createdSchedule?._id?.$oid) // set selected schedule id, which will update the form mode from create to update\n        }\n\n        // close form optionally\n        hideScheduleCreator()\n    }\n\n    /*\n    * returns the initial values for the form\n    *\n    * initial values are found by finding the schedule from redux with the id matching selectedScheduleId passed via props\n    * If selectedScheduleId is null, or no matching schedule is found, a template for creating a new schedule is returned instead\n    * */\n    const getInitialValues = () => {\n\n        // Gets the selected schedule for the list of schedules\n        let selectedScheduleItem = schedules[selectedScheduleId]\n        logger.log(\"getInitialValues selectedScheduleItem\", selectedScheduleItem)\n        logger.log(\"getInitialValues selectedScheduleId\", selectedScheduleId)\n\n        // get initial values from schedule\n        if (selectedScheduleItem) {\n\n            // convert days_on from object to array of indices (required for button group)\n            const days_on = []\n            if (selectedScheduleItem) {\n                Object.values(daysOfTheWeek).forEach((val, ind) => {\n                    if (selectedScheduleItem.days_on[val]) days_on.push(ind)\n                })\n            }\n\n            // default time value for time fields that don't exist\n            const nowDate = new Date()\n            const nowTimeString = moment(timeString24HrToDate(nowDate))\n\n            // create new object with required properties\n            const initialValues = {\n                days_on: days_on,\n                start_time: selectedScheduleItem.start_time ? moment(timeString24HrToDate(selectedScheduleItem.start_time)) : nowTimeString,\n                schedule_on: selectedScheduleItem.schedule_on,\n                time_interval: selectedScheduleItem.time_interval ? moment(timeString24HrToDate(selectedScheduleItem.time_interval)) : nowTimeString,\n                interval_on: selectedScheduleItem.interval_on,\n                next_time: selectedScheduleItem.next_time,\n                map_id: currentMap._id,\n                stop_time: selectedScheduleItem.stop_time ? moment(timeString24HrToDate(selectedScheduleItem.stop_time)) : nowTimeString,\n                name: selectedScheduleItem.name ? selectedScheduleItem.name : '',\n                selectedScheduleId: selectedScheduleItem.id,\n                task: (selectedScheduleItem.task_id && tasks[selectedScheduleItem.task_id]) ?\n                    [tasks[selectedScheduleItem.task_id]]\n                    :\n                    // if task id equals TASK DELETED, the corresponding task has been deleted,\n                    // set task property to reflect this\n                    selectedScheduleItem.task_id == 'TASK DELETED' ?\n                        [{\n                            _id:\n                                \"TASK DELETED\"\n                            ,\n                            name: 'TASK DELETED'\n                        }]\n                        :\n                        // NO task, and task id isn't deleted, set set to default value that will prevent the dropdownsearch from throwing an error\n                        [{\n                            _id:\n                                \"TEMP_NEW_SCHEDULE_ID\"\n                            ,\n                            name: ''\n                        }],\n            }\n\n            return initialValues\n\n            // no schedule was found, return template\n        } else {\n            let newScheduleTemplate = getScheduleItemTemplate()\n            newScheduleTemplate.map_id = currentMap._id\n            return newScheduleTemplate\n        }\n    }\n\n    /*\n    * performs additional validation not covered by the schema\n    * some validation is easier to perform this way rather than in the schema\n    * */\n    const validate = async (values, initialValues) => {\n        logger.log('handleValidate: values:', values)\n\n        // validate gets called every time form changes\n        // so this can be used to handle any desired on change function\n        // handleFormChange(values, initialValues)\n\n        // initialize empty error object\n        var errors = {}\n\n        // stop time  must be greater than start time:\n        {\n            const { start_time, stop_time, interval_on } = values\n\n            if (interval_on) {\n                const startMin = getMinutesFromMoment(start_time)\n                const stopMin = getMinutesFromMoment(stop_time)\n\n                if (startMin >= stopMin) {\n                    errors.stop_time = \"Stop time must be greater than start time.\"\n                }\n            }\n        }\n\n        // return error object\n        return errors\n    }\n\n    /*\n    * use to implement any desired on change logic\n    * not currently used, but left so it can be easily implemented if desired\n    * */\n    const handleFormChange = (values, initialValues) => {\n        // not currently used, but can add logic here for any time a form value changes\n    }\n\n    const initialValues = getInitialValues() // get initial values\n    const formMode = selectedScheduleId ? FORM_MODES.UPDATE : FORM_MODES.CREATE // if a schedule id was passed, form is being used to edit an existing item, otherwise a new item is being created\n\n    return (\n        <Formik\n            initialValues={initialValues}\n\n            // validation control\n            validationSchema={scheduleSchema}\n            validateOnChange={true}\n            validate={(values) => validate(values, initialValues)}\n            validateOnMount={false} // leave false, if set to true it will generate a form error when new data is fetched\n            validateOnBlur={true}\n\n            enableReinitialize={false} // leave false, otherwise values will be reset when new data is fetched for editing an existing item\n            onSubmit={async (values, { setSubmitting, setTouched }) => {\n                // set submitting to true, handle submit, then set submitting to false\n                // the submitting property is useful for eg. displaying a loading indicator\n                setSubmitting(true)\n                await handleSubmit(values, formMode)\n                setTouched({}) // after submitting, set touched to empty to reflect that there are currently no new changes to save\n                setSubmitting(false)\n            }}\n        >\n            {formikProps => {\n\n                // extract common properties from formik\n                const { errors, values, touched, isSubmitting } = formikProps\n\n                // use this instead of validateOnMount\n                // validateOnMount will cause an error when new data is fetched\n                // eg. when the tasks dropdown is opened, it fetches tasks from the backend, this trigger a remount, which will then create an undesired form error\n                // if( (formMode === FORM_MODES.UPDATE) && (submitCount === 0) ) submitForm()\n\n                // get number of field errors\n                const errorCount = Object.keys(errors).length > 0\n\n                // get number of touched fields\n                const touchedReducer = (accumulator, currentValue) => (currentValue === true) ? accumulator + 1 : accumulator\n                const touchedCount = Object.values(touched).reduce(touchedReducer, 0)\n\n                // submit disabled if:\n                //      form contains any errors\n                //      no fields have been touched\n                //      form is currently submitting\n                const submitDisabled = (errorCount > 0) || (touchedCount === 0) || isSubmitting\n\n                return (\n                    (\n                        <styled.StyledForm>\n                            <ContentHeader\n                                content={'scheduler'}\n                                mode={'create'}\n                                onClickBack={hideScheduleCreator}\n                                onClickSave={() => formikProps.submitForm()}\n                                disabled={submitDisabled}\n                            // Need to figure out how to submit formik using this method. No internet atm so this'll have to wait\n\n                            />\n\n                            <styled.ContentContainer>\n                                <FadeLoader\n                                    css={styled.FadeLoaderCSS}\n                                    height={5}\n                                    width={3}\n                                    loading={isSubmitting}\n                                />\n\n                                <styled.FieldLabel>{'Schedule Name'}</styled.FieldLabel>\n                                <styled.InputContainer className=\"form-group\">\n                                    <TextField\n                                        name=\"name\"\n                                        type=\"text\"\n                                        placeholder=\"Schedule Name\"\n                                        InputComponent={Textbox}\n                                    />\n                                </styled.InputContainer>\n\n                                <styled.SelectContainer>\n                                    <DropDownSearchField\n                                        pattern={null}\n                                        name=\"task\"\n                                        options={tasksArr\n                                            // Filters outs any tasks that don't belong to the current map\n                                            .filter(task => task.map_id === currentMap._id)\n                                        }\n                                        // valueField={tasksArr.length > 0 ? \"_id.$oid\" : 'id'}\n                                        valueField={tasksArr.length > 0 ? \"_id\" : 'id'}\n                                        label={'Choose Task'}\n                                        onDropdownOpen={() => {\n                                            dispatch(getTasks())\n                                        }}\n                                        labelField={'name'}\n                                    />\n                                </styled.SelectContainer>\n\n                                <styled.FieldLabel>Schedule</styled.FieldLabel>\n                                <styled.ButtonGroupContainer>\n                                    <ButtonGroupField\n                                        name=\"days_on\"\n                                        buttons={Object.values(daysOfTheWeek)}\n                                        selectMultiple\n                                        Container={ButtonGroupComponents.Container}\n                                        ButtonView={ButtonGroupComponents.ButtonView}\n                                        Button={ButtonGroupComponents.Button}\n                                        buttonViewCss={ButtonGroupComponents.buttonViewCss}\n                                    />\n                                </styled.ButtonGroupContainer>\n\n                                <styled.RowContainer style={{ marginBottom: '2.5rem' }}>\n                                    <styled.ToggleTextLeft>{'Interval Off'}</styled.ToggleTextLeft>\n                                    <SwitchField\n                                        name=\"interval_on\"\n                                        onColor={themeContext.schema.scheduler.solid}\n                                        LabelComponent={styled.SwitchLabel}\n                                    />\n                                    <styled.ToggleTextRight>{'Interval On'}</styled.ToggleTextRight>\n                                </styled.RowContainer>\n\n                                <styled.RowContainer>\n                                    {/*\n                                        <styled.DatePickerLabel>Start Time</styled.DatePickerLabel>\n                                    */}\n\n                                    <styled.TimePickerContainer>\n                                        <styled.StyledTimePickerField\n                                            LabelComponent={styled.DatePickerLabel}\n                                            label=\"Start Time\"\n                                            name=\"start_time\"\n                                            use12Hours\n                                            format={'h:mm a'}\n                                            ErrorComponent={styled.TimePickerErrorComponent}\n                                            autoComplete=\"off\"\n                                            autoCorrect=\"off\"\n                                            spellCheck=\"off\"\n                                        />\n                                        {/*<SwitchField\n                                          name=\"scheduleOn\"\n                                          LabelComponent={styled.ButtonGroupLabel}\n                                        />*/}\n                                    </styled.TimePickerContainer>\n                                </styled.RowContainer>\n\n                                <styled.RowContainer>\n                                    {/*\n                                        <styled.DatePickerLabel>Time Interval</styled.DatePickerLabel>\n                                    */}\n\n                                    <styled.TimePickerContainer>\n                                        <styled.StyledTimePickerField\n                                            LabelComponent={styled.DatePickerLabel}\n                                            label=\"Time Interval\"\n                                            name=\"time_interval\"\n                                            // disabledHours={helpers.disabledHours}\n                                            disabledMinutes={helpers.disabledMinutes}\n                                            ErrorComponent={styled.TimePickerErrorComponent}\n                                            use12Hours={false}\n                                            disabled={!values.interval_on}\n                                            autoComplete=\"off\"\n                                            autoCorrect=\"off\"\n                                            spellCheck=\"off\"\n                                        // format = {'h:mm'}\n                                        />\n                                    </styled.TimePickerContainer>\n                                </styled.RowContainer>\n\n                                <styled.RowContainer>\n                                    {/*\n                                        <styled.DatePickerLabel>Stop Time</styled.DatePickerLabel>\n                                    */}\n\n                                    <styled.TimePickerContainer>\n                                        <styled.StyledTimePickerField\n                                            LabelComponent={styled.DatePickerLabel}\n                                            label=\"Stop Time\"\n                                            name=\"stop_time\"\n                                            ErrorComponent={styled.TimePickerErrorComponent}\n                                            use12Hours\n                                            format={'h:mm a'}\n                                            disabled={!values.interval_on}\n                                            autoComplete=\"off\"\n                                            autoCorrect=\"off\"\n                                            spellCheck=\"off\"\n                                        />\n                                    </styled.TimePickerContainer>\n                                </styled.RowContainer>\n\n\n                                <styled.FormButtonsContainer>\n\n                                    {/* delete button only makes sense for a schedule that has been created */}\n                                    {/* {formMode === FORM_MODES.UPDATE && */}\n                                    <Button schema={'scheduler'} secondary style={{ display: 'inline-block', float: 'right', width: '100%', maxWidth: '10rem', marginTop: '2rem' }}\n                                        onClick={() => {\n                                            onDeleteClick()\n                                        }}\n                                        type={\"button\"}\n                                    >\n                                        Delete\n                                    </Button>\n                                    {/* } */}\n\n                                </styled.FormButtonsContainer>\n                            </styled.ContentContainer>\n                        </styled.StyledForm>\n                    )\n                )\n            }}\n        </Formik>\n    )\n}\n\nCreateScheduleForm.propTypes = {\n    onDeleteClick: PropTypes.func,\n    hideScheduleCreator: PropTypes.func,\n    selectedScheduleId: PropTypes.string,\n    setSelectedScheduleId: PropTypes.func,\n}\n\nCreateScheduleForm.defaultProps = {\n    onDeleteClick: () => { },\n    hideScheduleCreator: () => { },\n    selectedScheduleId: \"\",\n    setSelectedScheduleId: () => { },\n}\n\nexport default CreateScheduleForm\n","import React, { useState} from 'react'\n\n// external funcs\nimport {useDispatch, useSelector} from 'react-redux'\n\n// import components\nimport ScheduleList from './schedule_list/schedule_list'\nimport {ConfirmDeleteModal} from \"../../../basic/modals/modals\"\nimport CreateScheduleForm from \"./create_schedule_form/create_schedule_form\"\n\n// import styles\nimport * as styled from './scheduler_content.style'\n\n// logging\nimport log from '../../../../logger.js'\nimport {deleteSchedule} from \"../../../../redux/actions/schedule_actions\";\nconst logger = log.getLogger(\"Schedule\")\n\nconst SchedulerContent = () => {\n\n    // dispatch\n    const dispatch = useDispatch()\n\n    // self contained state\n    const [selectedScheduleId, setSelectedScheduleId] = useState(null)\n    const [showScheduleCreator, setShowScheduleCreator] = useState(false)\n    const [showDeleteModal, setShowDeleteModal] = useState(false)\n\n    // redux state\n    const tasks = useSelector(state => {return state.tasksReducer.tasks})\n    const schedules = useSelector(state => {\n        return state.schedulesReducer.schedules\n    })\n\n    const handleSelectTask = (taskId) => {\n        setSelectedScheduleId(taskId)\n        setShowScheduleCreator(true)\n    }\n\n    const handleDelete = async () => {\n        // get schedule item - clone to avoid directly modifying redux state\n        const foundScheduleItem = schedules[selectedScheduleId]\n\n        if (foundScheduleItem) {\n            // dispatch action to make delete request to api and update redux\n            await dispatch(deleteSchedule(selectedScheduleId))\n        }\n\n        setShowDeleteModal(false)\n        setShowScheduleCreator(false)\n    }\n    return (\n        <styled.Container>\n            <ConfirmDeleteModal\n                isOpen={showDeleteModal}\n                title={\"Confirm Delete\"}\n                textMain={\"Are you sure you want to delete this schedule?\"}\n                caption={\"This action cannot be undone.\"}\n                onCancelClick={()=>setShowDeleteModal(false)}\n                onDeleteClick={handleDelete}\n            />\n            {showScheduleCreator ?\n                <CreateScheduleForm\n                    selectedScheduleId={selectedScheduleId}\n                    onDeleteClick={() => setShowDeleteModal(true)}\n                    setSelectedScheduleId={setSelectedScheduleId}\n                    hideScheduleCreator={()=> {\n                        setShowScheduleCreator(false)\n                        setSelectedScheduleId(null)\n                    }}\n                    schedules={schedules}\n                    tasks={tasks}\n\n                />\n                :\n                <ScheduleList\n                    selectedScheduleId={selectedScheduleId}\n                    handleSelectTask={handleSelectTask}\n                    schedules={schedules}\n                    setShowScheduleCreator={setShowScheduleCreator}\n                    setSelectedScheduleId = {(id)=>setSelectedScheduleId(id)}\n                    openSchedule={(id) => {\n                        setSelectedScheduleId(id)\n                        setShowScheduleCreator(true)\n                    }}\n                    tasks={tasks}\n                />\n            }\n        </styled.Container>\n    )\n}\n\nexport default SchedulerContent\n","import styled, { css } from 'styled-components'\nimport { RGB_Linear_Shade, hexToRGBA } from '../../../../methods/utils/color_utils'\nimport * as commonCss from \"../../../../common_css/common_css\";\n\n\n// ========== Content ========== //\nexport const DefaultContainer = styled.div`\n\tposition: relative;\n`;\n\n\nexport const DefaultErrorTooltipContainerComponent = styled.div`\n  margin: 0 1rem;\n`\n\n\nexport const ListItem = styled.div`\n    display: flex;\n    align-items: center;\n    width: auto;\n    height: 3rem;\n    text-overflow: ellipsis;\n    justify-content: space-between;\n    background: ${props => props.theme.bg.primary};\n    padding: 0rem 1rem;\n\n    flex-grow: 1;\n    width: 100%;\n\n    border-radius: 0.5rem;\n    border: 0.15rem solid;\n    border-color:  ${props => props.theme.schema['routes'].solid};\n    box-shadow: ${props => props.theme.cardShadow};\n\n    ${props => css`\n      ${props.isNew && commonCss.newGlow};\n      ${props.edited && commonCss.newGlow};\n      ${props.error && commonCss.errorGlow};\n    `}  \n\n`\n\nexport const ListItemRect = styled.div`\n    height: 100%;\n    width: 100%;\n\n    border-radius: 0.5rem;\n    text-align: center;\n    padding-right:0.5rem;\n    cursor: pointer;\n    user-select: none;\n\n    box-sizing: border-box;\n    \n\n    &:hover {\n        background: ${props => props.theme.bg.octonary};\n    }\n\n`\nexport const ListItemTitle = styled.h1`\n\n    font-family: ${props => props.theme.font.primary};\n    /* font-size: ${props => props.theme.fontSize.sz3}; */\n    font-size: 1rem;\n    font-weight: 500;\n    color: ${props => props.theme.bg.octonary};\n\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    margin-right:0.5rem;\n    margin-bottom: 0rem;\n    flex-grow: 1;\n`\n\nconst disabledCss = css`\n  color: ${props => props.theme.disabled};\n  \n  &:hover {\n    cursor: default;\n    color: ${props => props.theme.disabled};\n  }\n`\n\nexport const ListItemIcon = styled.i`\n\n    font-size: 1.3rem;\n    color: lightgreen;\n    \n\n\n\n    &:hover {\n        cursor: pointer;\n        color:green;\n    }\n  \n    ${props => props.disabled && disabledCss};\n`\n\n\n\nexport const ListItemIconContainer = styled.div`\n    position: relative;\n    display: flex;\n    //width: 10%;\n`","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { useField, useFormikContext } from \"formik\";\n\nimport ErrorTooltip from '../error_tooltip/error_tooltip';\nimport * as styled from './list_item_field.style'\nimport {getMessageFromError} from \"../../../../methods/utils/form_utils\";\nimport theme from '../../../../theme'\n\nconst ListItemField = (props) => {\n\tconst {\n\t\tContainer,\n\t\tcontainerStyle,\n\t\tErrorTooltipContainerComponent,\n\t\tonMouseEnter,\n\t\tonMouseLeave,\n\t\tonIconClick,\n\t\tonEditClick,\n\t\tonTitleClick,\n\t\tplayDisabled,\n\t\tshowPlay,\n\t\t...rest\n\t} = props\n\n\tconst { setFieldValue, setFieldTouched, validateOnChange, validateOnBlur, validateField, validateForm, ...context } = useFormikContext();\n\tconst [field, meta] = useField(rest);\n\tconst {\n\t\tvalue: fieldValue,\n\t\tname: fieldName\n\t} = field\n\n\tconst {\n\t\tname,\n\t\tnew: isNew,\n\t\tchanged,\n\t\tunsaved\n\t} = fieldValue\n\n\tconst {\n\t\ttouched,\n\t\terror\n\t} = meta\n\n\tconst hasError = error\n\tconst errorMessage = getMessageFromError(error)\n\n\tconst edited = changed\n\n\tconst disabled = hasError || isNew || edited || unsaved || playDisabled\n\n\n\treturn (\n\t\t<Container\n\t\t\tstyle={containerStyle}\n\t\t>\n\t\t<styled.ListItem\n\t\t\tedited={edited}\n\t\t\terror={hasError}\n\t\t\tisNew={isNew || unsaved}\n\t\t\tonMouseEnter={onMouseEnter}\n\t\t\tonMouseLeave={onMouseLeave}\n\t\t>\n\t\t\t{showPlay &&\n\t\t\t\t<styled.ListItemIconContainer style={{ width: '15%' }}>\n\t\t\t\t\t<styled.ListItemIcon\n\t\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\t\tclassName='fas fa-play'\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tif(!disabled) onIconClick()\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</styled.ListItemIconContainer>\n\t\t\t}\n\n\t\t\t{/* <styled.ListItemTitle schema={props.schema} onClick={() => props.onClick(element)}>{element.name}</styled.ListItemTitle> */}\n\t\t\t<styled.ListItemTitle\n\t\t\t\tschema={'processes'}\n\t\t\t\tonClick={onTitleClick}\n\t\t\t>\n\t\t\t\t{name}\n\t\t\t</styled.ListItemTitle>\n\n\t\t\t<styled.ListItemIconContainer>\n\n\t\t\t\t{hasError ?\n\t\t\t\t\t<ErrorTooltip\n\t\t\t\t\t\tvisible={hasError}\n\t\t\t\t\t\ttext={errorMessage}\n\t\t\t\t\t\t// className={\"fas fa-exclamation-circle\"}\n\t\t\t\t\t\tcolor={theme.main.error}\n\t\t\t\t\t\tContainerComponent={ErrorTooltipContainerComponent}\n\t\t\t\t\t/>\n\t\t\t\t:\n\t\t\t\t\t(isNew || unsaved) ?\n\t\t\t\t\t<ErrorTooltip\n\t\t\t\t\t\ttype={'warning'}\n\t\t\t\t\t\tvisible={(isNew || unsaved)}\n\t\t\t\t\t\ttext={\"This route is not saved. Leaving the editor will remove the route.\"}\n\t\t\t\t\t\tclassName={\"fas fa-exclamation-circle\"}\n\t\t\t\t\t\tcolor={theme.main.warn}\n\t\t\t\t\t\tContainerComponent={ErrorTooltipContainerComponent}\n\t\t\t\t\t/>\n\t\t\t\t\t:\n\t\t\t\t\t\tedited &&\n\t\t\t\t\t\t<ErrorTooltip\n\t\t\t\t\t\t\ttype={'warning'}\n\t\t\t\t\t\t\tvisible={edited}\n\t\t\t\t\t\t\ttext={\"This route contains unsaved changes. Leaving the editor without saving will undo your changes.\"}\n\t\t\t\t\t\t\tclassName={\"fas fa-exclamation-circle\"}\n\t\t\t\t\t\t\tcolor={theme.main.warn}\n\t\t\t\t\t\t\tContainerComponent={ErrorTooltipContainerComponent}\n\t\t\t\t\t\t/>\n\t\t\t\t}\n\n\t\t\t\t<styled.ListItemIcon\n\t\t\t\t\tclassName='fas fa-edit'\n\t\t\t\t\tonClick={onEditClick}\n\t\t\t\t\tstyle={{ color: '#c6ccd3' }}\n\t\t\t\t/>\n\t\t\t</styled.ListItemIconContainer>\n\t\t</styled.ListItem>\n\t\t</Container>\n\t);\n};\n\n/* *\n*\n* Returns style for input component\n* Accepts hasError prop, which can be used to change styling based on presence of errors\n*\n* */\nconst defaultInputStyleFunc = (hasError) => {\n\treturn {\n\t}\n}\n\n// Specifies propTypes\nListItemField.propTypes = {\n};\n\n// Specifies the default values for props:\nListItemField.defaultProps = {\n\tContainer: styled.DefaultContainer,\n\tErrorTooltipContainerComponent: styled.DefaultErrorTooltipContainerComponent,\n\tonMouseEnter: () => {},\n\tonMouseLeave: () => {},\n\tonIconClick: () => {},\n\tonEditClick: () => {},\n};\n\nexport default ListItemField;\n","import styled from 'styled-components'\nimport {Form} from \"formik\";\n\nimport * as stylec from '../../content_list/content_list.style'\n\nexport const ListItemTitle = styled(stylec.ListItemTitle)`\n`\n\nexport const ListItemIcon = styled(stylec.ListItemIcon)`\n`\n\nexport const ListItemRect = styled(stylec.ListItemRect)`\n`\n\nexport const ListItem = styled(stylec.ListItem)`\n`\n\nexport const Container = styled(stylec.Container)`\n\toverflowY: hidden;\n`\n\nexport const ListItemIconContainer = styled(stylec.ListItemIconContainer)`\n\n`\n\nexport const ColumnContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\twidth: 100%;\n`\n\nexport const ContentContainer = styled.div`\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n    flex-grow: 1;\n    padding-top: 1.5rem;\n\t\tjustify-content: space-between;\n\n`\n\nexport const Title = styled.h1`\n    font-family: ${props => props.theme.font.primary};\n    font-size: 1.2rem;\n    font-weight: 500;\n    color: ${props => props.theme.bg.senary};\n    user-select: none;\n`\n\nexport const InfoText = styled.span`\n  font-family: ${props => props.theme.font.primary};\n  font-size: ${props => props.theme.fontSize.sz3};\n  color: ${props => props.theme.bg.octonary};\n`\n\nexport const SectionContainer = styled.div`\n\tmargin-bottom: 1rem;\n\tmargin-top: 0.5rem;\n\twidth: 100%;\n\n  position: relative;\n\tdisplay: flex;\n  flex-direction: column;\n  flex-grow: 1;\n\n  align-content: flex-end;\n  align-items: stretch;\n  justify-content: center;\n\n\toverflow-y: auto;\n\toverflow-x: hidden;\n\n  // box-shadow: ${props => props.theme.cardShadow};\n  background: ${props => props.theme.bg.secondary};\n  border-radius: 0.4rem;\n`\nexport const AddRoutesContainer = styled.div`\n\tmargin-bottom: 1rem;\n\tmargin-top: 0.5rem;\n\twidth: 100%;\n\n\tdisplay: flex;\n  flex-direction: column;\n\n`\n\nexport const TaskContainer = styled.div`\n    background-color: ${props => props.theme.bg.secondary};\n    border-radius: 0.4rem;\n    overflow: auto;\n    // box-shadow: 0px 0px 6px 1px rgba(0,0,0,0.1);\n    scrollbar-color: light;\n    scrollbar-width: thin;\n`\n\nexport const SVGText = styled.text`\n  font-family: ${props => props.theme.font.primary};\n  font-size: 1rem;\n  width: 4rem;\n  font-weight: 500;\n  transform-origin: center;\n`\n\nexport const BackIcon = styled.i`\n    font-size: 1.3rem;\n    color: ${props => props.theme.bg.primary};\n\n    &:hover {\n        cursor: pointer;\n    }\n\n`\n\nexport const DualSelectionButton = styled.button`\n    font-size: 1rem;\n    width: 100%;\n    border: none;\n    font-family: ${props => props.theme.font.primary};\n\n    color: ${props => props.selected ? props.theme.bg.octonary : props.theme.bg.quinary};\n\n    background-color: ${props => props.selected ? props.theme.schema.processes.solid : props.theme.bg.tertiary};\n\n    transition: background-color 0.25s ease, box-shadow 0.1s ease;\n\n    &:focus{\n        outline: 0 !important\n    }\n\n    &:active{\n        box-shadow: none;\n    }\n\n    &:hover{\n        //background-color: ${props => props.theme.bg.quaternary};\n    }\n`\nexport const RowContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: center;\n`\n","export default \"M0,63.5c0,2.8,2.2,5,5,5h290c2.8,0,5-2.2,5-5V43.7c0-2.8-2.1-5.7-4.8-6.5c0,0-120-37.2-145.2-37.2 C123.4,0,4.8,37.8,4.8,37.8C2.1,38.6,0,41.6,0,44.3V63.5z\"","import React, { useState, useEffect, useRef } from 'react'\n\n// external functions\nimport uuid from 'uuid'\nimport { useSelector, useDispatch } from 'react-redux'\n\n// internal components\nimport Textbox from '../../../../basic/textbox/textbox.js'\nimport Button from '../../../../basic/button/button'\nimport TaskField from '../../tasks/task_field/route_field'\nimport ContentHeader from '../../content_header/content_header'\nimport ConfirmDeleteModal from '../../../../basic/modals/confirm_delete_modal/confirm_delete_modal'\nimport TextField from \"../../../../basic/form/text_field/text_field\";\nimport ListItemField from \"../../../../basic/form/list_item_field/list_item_field\";\n\nimport Switch from 'react-ios-switch'\n\n\n// Import actions\nimport {\n    deleteRouteClean,\n    postRouteClean,\n    putRouteClean,\n    setSelectedTask,\n    setSelectedHoveringTask,\n} from '../../../../../redux/actions/tasks_actions'\nimport { setSelectedProcess, setFixingProcess } from '../../../../../redux/actions/processes_actions'\nimport { handlePostTaskQueue, postTaskQueue } from '../../../../../redux/actions/task_queue_actions'\nimport { pageDataChanged } from \"../../../../../redux/actions/sidebar_actions\"\nimport { autoAddRoute} from '../../../../../redux/actions/tasks_actions'\n\n\n// Import Utils\nimport {\n    generateDefaultRoute, getLoadStationDashboard, autoGenerateRoute,\n    getRouteProcesses,\n    isHumanTask,\n    isMiRTask\n} from \"../../../../../methods/utils/route_utils\";\nimport { isBrokenProcess, willRouteAdditionFixProcess, willRouteDeleteBreakProcess } from \"../../../../../methods/utils/processes_utils\";\nimport { isEmpty, isObject } from \"../../../../../methods/utils/object_utils\";\nimport useChange from \"../../../../basic/form/useChange\";\n\n// styles\nimport * as styled from './process_field.style'\nimport theme from '../../../../../theme'\nimport { DEVICE_CONSTANTS } from \"../../../../../constants/device_constants\";\nimport { throttle } from \"../../../../../methods/utils/function_utils\";\nimport { ADD_TASK_ALERT_TYPE } from \"../../../../../constants/dashboard_constants\";\nimport TaskAddedAlert\n    from \"../../../../widgets/widget_pages/dashboards_page/dashboard_screen/task_added_alert/task_added_alert\";\nimport { getSidebarDeviceType, isRouteInQueue } from \"../../../../../methods/utils/task_queue_utils\";\nimport { isDeviceConnected } from \"../../../../../methods/utils/device_utils\";\nimport AddRouteButtonPath from '../../../../../graphics/svg/add_route_button_path'\n\nexport const ProcessField = (props) => {\n    const {\n        formikProps,\n        onDelete,\n        onSave,\n        onBack,\n    } = props\n\n    // extract formik props\n    const {\n        errors,\n        values,\n        touched,\n        isSubmitting,\n        setFieldValue,\n        setFieldError,\n        setFieldTouched,\n        getFieldMeta,\n        validateForm\n    } = formikProps\n\n    useChange() // adds changed key to values - true if the field has changed\n    let errorCount = 0\n    Object.values(errors).forEach((currError) => {\n        if (!isEmpty(currError)) errorCount++\n    }) // get number of field errors\n    const touchedCount = Object.values(touched).length // number of touched fields\n    const submitDisabled = ((errorCount > 0) || (touchedCount === 0) || isSubmitting || !values.changed) //&& (submitCount > 0) // disable if there are errors or no touched field, and form has been submitted at least once\n\n    const dispatch = useDispatch()\n    const dispatchSetSelectedTask = async (task) => await dispatch(setSelectedTask(task))\n    const dispatchSetSelectedProcess = (process) => dispatch(setSelectedProcess(process))\n    const onHandlePostTaskQueue = (props) => dispatch(handlePostTaskQueue(props))\n    const dispatchSetFixingProcess = async (bool) => await dispatch(setFixingProcess(bool))\n    const dispatchDeleteRouteClean = async (routeId) => await dispatch(deleteRouteClean(routeId))\n    const dispatchSetSelectedHoveringTask = (task) => dispatch(setSelectedHoveringTask(task))\n    const dispatchAutoAddRoute = (bool) => dispatch(autoAddRoute(bool))\n\n\n    const tasks = useSelector(state => state.tasksReducer.tasks)\n    const stations = useSelector(state => state.stationsReducer.stations)\n    const selectedTask = useSelector(state => state.tasksReducer.selectedTask)\n    const selectedProcess = useSelector(state => state.processesReducer.selectedProcess)\n    const fixingProcess = useSelector(state => state.processesReducer.fixingProcess)\n    const pageInfoChanged = useSelector(state => state.sidebarReducer.pageDataChanged)\n    const autoAddRoutes = useSelector(state => state.tasksReducer.autoAddRoute)\n    const taskQueue = useSelector(state => state.taskQueueReducer.taskQueue)\n    const routeConfirmationLocation = useSelector(state=>state.tasksReducer.routeConfirmationLocation)\n    // State definitions\n    const [shift,] = useState(false) // Is shift key pressed ?\n    const [isTransportTask,] = useState(true) // Is this task a transport task (otherwise it may be a 'go to idle' type task)\n    const [editingTask, setEditingTask] = useState(false) // Used to tell if a task is being edited\n    const [confirmDeleteModal, setConfirmDeleteModal] = useState(false);\n    const [showExistingTaskWarning, setShowExistingTaskWarning] = useState(false);\n    const [addTaskAlert, setAddTaskAlert] = useState(null);\n    const [confirmExitModal, setConfirmExitModal] = useState(false);\n    const [processRoutes, setProcessRoutes] = useState(null);\n    const valuesRef = useRef(values);\n    // throttled func\n    const [dispatchSetSelectedProcess_Throttled,] = useState(() => throttle(\n        () => {\n            if (valuesRef.current) dispatchSetSelectedProcess({\n                ...valuesRef.current,\n            })\n        }, 500));\n\n    useEffect(() => {\n        valuesRef.current = values;\n    }, [values]);\n\n    useEffect(() => {\n      handleAutoAddRoute()\n\n      return () => {\n\n      }\n    }, [autoAddRoutes])\n\n    useEffect(() => {\n\n        // update selectedProcess (throttled to reduce lag from updating constantly\n        dispatchSetSelectedProcess_Throttled()\n\n\n        return () => { }\n\n    }, [values]);\n\n    useEffect(() => {\n\n      setProcessRoutes(values.routes)\n\n    }, [values.routes]);\n\n\n    useEffect(() => {\n\n        // when editing task is toggled off, reset newRoute\n        if (!editingTask) {\n            setFieldTouched(\"newRoute\", {})\n            setFieldError(\"newRoute\", {})\n            setFieldValue(\"newRoute\", null)\n        }\n\n    }, [editingTask])\n\n    useEffect(() => {\n        if (editingTask == false) {\n            dispatchSetSelectedHoveringTask(null)\n        }\n    })\n\n\n  /*  useEffect(() => {\n        // When there are no routes, automatically add the first one\n        if (values.routes.length === 0) {\n            let prevObj\n\n            const newTask = { ...generateDefaultRoute(prevObj), temp: { insertIndex: values.routes.length } }\n            setFieldValue(\"newRoute\", newTask)\n            dispatchSetSelectedTask(newTask)\n            setEditingTask(\"newRoute\")\n        }\n    }, [values.routes])*/\n\n    const handleAddTask = async () => {\n        // contains new route\n        if (values.newRoute) {\n            // extract newRoute values\n            const {\n                needsSubmit,    // remove from route\n                new: isNew,     // remove from route\n                temp,\n                ...remainingRoute\n            } = values.newRoute || {}\n\n            const {\n                insertIndex\n            } = temp || {}\n\n            // add unsaved key if route being added doesn't already exist - used to determine if a route has been saved or not\n            var newRoute\n            if (tasks[remainingRoute._id]) {\n                // task exists\n                newRoute = { ...remainingRoute }\n            }\n            else {\n                // task doesn't exist, add unsaved key\n                newRoute = { ...remainingRoute, new: isNew }\n            }\n            // make copy of routes\n            let updatedRoutes = [...values.routes]\n\n            // add route to values at broken index\n            updatedRoutes.splice(insertIndex, 0, newRoute)\n\n            // update values\n            setFieldValue(\"routes\", updatedRoutes)\n            setFieldValue(\"broken\", isBrokenProcess(updatedRoutes))\n            setEditingTask(false)\n        }\n\n        // not a new route\n        else {\n            // get data for route being edited\n            const fieldMeta = getFieldMeta(editingTask)\n            const {\n                value: currRouteValue,\n            } = fieldMeta\n\n            const routeProcesses = getRouteProcesses(currRouteValue._id) // get routes processes\n            const belongsToAnotherProcess = routeProcesses.findIndex((currProcess) => currProcess._id !== values._id) // does route belong to another process?\n\n            // if route belongs to more than one process, give option to make a copy of the route so other processes won't be affected\n            if (belongsToAnotherProcess !== -1) {\n                setShowExistingTaskWarning(true)\n            }\n\n            // if it only belongs to one process, go ahead and update it\n            else {\n\n                updateExistingRoute()\n            }\n\n        }\n\n        // clear newRoute and selectedTask\n        setFieldValue(\"newRoute\", null)\n        dispatchSetSelectedTask(null)\n\n        validateForm() // run validation so errors will show up right away\n    }\n\n    // clear selectedTask and add new route to values.routes\n    const updateExistingRoute = () => {\n        const fieldMeta = getFieldMeta(editingTask)\n        const {\n            value: currRouteValue,\n        } = fieldMeta\n\n        const {\n            needsSubmit,\n            ...remainingValues\n        } = currRouteValue || {}\n        setFieldValue(\"broken\", isBrokenProcess(values.routes, tasks))\n        setFieldValue(editingTask, remainingValues)\n        setEditingTask(false)\n        dispatchSetSelectedTask(null)\n    }\n\n    const cloneRoute = async () => {\n        // get current route's meta data\n        const fieldMeta = getFieldMeta(editingTask)\n        const {\n            initialValue,\n            value: currRouteValue,\n        } = fieldMeta\n\n\n        const {\n            changed,\n            needsSubmit,\n            ...remainingValues\n        } = currRouteValue || {}\n\n\n        const newId = uuid.v4()\n        const routeClone = { ...remainingValues, _id: newId, new: true } // copy all attributes, but make new id\n\n        // Not a new process, so save changes now\n        if (!values.new) {\n\n            const index = editingTask.match(/\\d+/)[0] // \"3\"\n            const updatedRoutes = [...values.routes]\n            updatedRoutes.splice(index, 1, routeClone) // replace existing route with new clone\n\n            setFieldValue(\"routes\", updatedRoutes)\n        }\n\n        else {\n            // if process doesn't exist yet, just add to field\n            setFieldValue(editingTask, { ...routeClone, new: true })\n        }\n\n        // if not new route, only thing to check is if any changes broke the process\n        setFieldValue(\"broken\", isBrokenProcess(values.routes, tasks))\n        setEditingTask(false)\n        dispatchSetSelectedTask(null)\n    }\n\n\n\n    /**\n     * Removes the route from the array of routes for a process\n     */\n    const handleRemoveRoute = (routeId) => {\n\n        // clear editing values\n        setEditingTask(false)\n        setFieldValue(\"newRoute\", null)\n        dispatchSetSelectedTask(null)\n\n        // update broken\n        const willBreak = willRouteDeleteBreakProcess(values.routes, routeId)\n        setFieldValue(\"broken\", willBreak)\n\n        // Remove the route from the process\n        const index = values.routes.findIndex((currRoute) => currRoute._id === routeId)\n        let updatedRoutes = [...values.routes]\n        updatedRoutes.splice(index, 1)\n\n        // update routes\n        setFieldValue(\"routes\", updatedRoutes)\n    }\n\n    const handleTaskBack = async () => {\n\n      var newRoute = true;\n\n      Object.values(selectedProcess.routes).map((route) => {\n        if(route._id===selectedTask._id){\n          newRoute = false;\n        }\n      })\n\n      if(newRoute === false){\n        const index = values.routes.findIndex((currRoute) => currRoute._id === selectedTask._id)\n        let updatedRoutes = [...values.routes]\n        updatedRoutes.splice(index , 1)\n        updatedRoutes.splice(index, 0, selectedTask)\n\n        setFieldValue(\"routes\", updatedRoutes)\n      }\n\n        // clear newRoute and selectedTask\n        setFieldValue(\"newRoute\", null)\n\n        await dispatchSetSelectedTask(null)\n        setEditingTask(false)\n\n        // run validation\n        validateForm()\n    }\n\n    const handleDeleteRoute = async (routeId) => {\n        setEditingTask(false)\n        dispatchSetSelectedTask(null)\n\n        const willBreak = willRouteDeleteBreakProcess(values.routes, routeId)\n        setFieldValue(\"broken\", willBreak)\n\n        await dispatchDeleteRouteClean(routeId)\n\n        setFieldValue(\"routes\", values.routes.filter(((currRoute) => currRoute._id !== routeId)))\n    }\n\n    const handleIsRouteInProcess = () => {\n      var inProcess = false;\n\n      Object.values(selectedProcess?.routes).map((route) => {\n        if(route._id===selectedTask?._id){\n          inProcess = true;\n        }\n      })\n\n      return inProcess\n\n    }\n\n    const handleExecuteProcessTask = async (routeId) => {\n        const task = tasks[routeId] || null\n        if (!isObject(task)) return\n\n        const routeName = task.name\n        const deviceType = getSidebarDeviceType(task)\n\n        const inQueue = isRouteInQueue(routeId, deviceType)\n\n        const connectedDeviceExists = isDeviceConnected()\n\n        if (!connectedDeviceExists && deviceType !== DEVICE_CONSTANTS.HUMAN) {\n            // display alert notifying user that task is already in queue\n            setAddTaskAlert({\n                type: ADD_TASK_ALERT_TYPE.TASK_EXISTS,\n                label: \"Alert! No device is currently connected to run this route\",\n                message: `'${routeName}' not added`,\n            })\n\n            // clear alert after timeout\n            return setTimeout(() => setAddTaskAlert(null), 1800)\n        }\n\n        // add alert to notify task has been added\n        // If in Q, then tell them it's already there\n        if (inQueue) {\n            // display alert notifying user that task is already in queue\n            setAddTaskAlert({\n                type: ADD_TASK_ALERT_TYPE.TASK_EXISTS,\n                label: \"Alert! Task Already in Queue\",\n                message: `'${routeName}' not added`,\n            })\n\n            // clear alert after timeout\n            return setTimeout(() => setAddTaskAlert(null), 1800)\n        }\n\n        // Else see what type of task it is and add accordingly\n        else {\n            const dashboardID = getLoadStationDashboard(selectedTask)\n\n\n\n            // Handle Add\n            if (deviceType !== 'human') {\n                setAddTaskAlert({\n                    type: ADD_TASK_ALERT_TYPE.TASK_ADDED,\n                    label: \"Task Added to Queue\",\n                    message: routeName\n                })\n\n                // clear alert after timeout\n                setTimeout(() => setAddTaskAlert(null), 1800)\n            }\n            onHandlePostTaskQueue({ dashboardID, tasks, deviceType, taskQueue, Id: routeId, name: routeName, custom: false, fromSideBar: true })\n        }\n    }\n\n    // Maps through the list of existing routes\n    const renderRoutes = (routes) => {\n        return routes.filter((currRoute, currIndex) => {\n\n            if (currRoute === undefined) {\n                return false\n            }\n            return true\n\n        }).map((currRoute, currIndex) => {\n\n            const {\n                _id: currRouteId = \"\",\n            } = currRoute || {}\n\n            const isLast = currIndex === routes.length - 1\n            const fieldName = `routes[${currIndex}]`\n\n            const deviceType = getSidebarDeviceType(currRoute)\n            const inQueue = isRouteInQueue(currRouteId, deviceType)\n\n            return (\n                <div key={`li-${currIndex}`}>\n                    <ListItemField\n                        playDisabled={inQueue || addTaskAlert}\n                        showPlay={inQueue || addTaskAlert}\n                        containerStyle={{ margin: '0.5rem' }}\n                        name={fieldName}\n                        onMouseEnter={() => {\n                            if (!selectedTask && !editingTask) {\n                                dispatchSetSelectedTask(currRoute)\n                            }\n\n                        }}\n                        onMouseLeave={() => {\n                            if (selectedTask !== null && !editingTask) {\n                                dispatchSetSelectedTask(null)\n                            }\n                        }}\n                        onIconClick={() => {\n                            handleExecuteProcessTask(currRouteId)\n                        }}\n                        onEditClick={() => {\n                            setEditingTask(fieldName)\n                            dispatchSetSelectedTask(currRoute)\n                        }}\n                        onTitleClick={() => {\n                            setEditingTask(fieldName)\n                            dispatchSetSelectedTask(currRoute)\n                        }}\n                        key={`li-${currIndex}`}\n                    />\n\n                    {/* If the process is broken and it's at the broken index, then show a button there to fix it */}\n                    {(!!values.broken && currIndex === values.broken - 1) &&\n\n                    <Button\n                        schema={'devices'}\n                        // disabled={!!selectedProcess && !!selectedProcess._id && !!selectedProcess.new}\n                        style={{margin: '0 0.5rem', width: 'calc(100% - 1rem)', textOverflow: 'ellipsis', whiteSpace: 'nowrap', overflow: 'hidden'}}\n                        disabled={selectedTask?.new}\n                        tertiary\n                        onClick={() => {\n                            let prevObj\n                            if(values.routes.length > 0) {\n                                prevObj = values.routes[values.routes.length - 1].obj\n                            }\n\n                                const newTask = { ...generateDefaultRoute(prevObj), temp: { insertIndex: values.broken } }\n\n                                dispatchSetSelectedTask(newTask)\n                                setFieldValue(\"newRoute\", newTask)\n\n                                // Tells the map that the new task is supposed to be fixing the process\n                                // This means instead of only allowing to to pick a location that belongs to the last route\n                                // Now you must pick a location that is connected to the location before the broken route occurs\n                                dispatchSetFixingProcess(true)\n                                setEditingTask(\"newRoute\")\n                            }}\n                        >\n                            Add Route To Fix Process\n                    </Button>\n\n                    }\n                </div>\n            )\n        })\n    }\n\n    const handleAddRoute = () => {\n        const onAddToEndClick = () => {\n\n            let prevObj\n            if (values.routes.length > 0) {\n                prevObj = values.routes[values.routes.length - 1].obj\n            }\n\n            const newTask = { ...generateDefaultRoute(prevObj), temp: { insertIndex: values.routes.length } }\n            setFieldValue(\"newRoute\", newTask)\n            dispatchSetSelectedTask(newTask)\n            setEditingTask(\"newRoute\")\n        }\n\n        if(values.routes.length>0){\n          return (\n              <svg transform=\"rotate(180)\" height=\"3.8rem\" style={{ margin: '0.5rem 2rem 0.5rem 2rem', transformOrigin: 'center', cursor: 'pointer' }} onClick={onAddToEndClick}>\n                  <svg style={{ overflow: 'visible' }} viewBox=\"0 0 300 68.5\" preserveAspectRatio=\"none\"  >\n                      <defs>\n                          <linearGradient id=\"processGrad\" x1=\"50%\" y1=\"100%\" x2=\"50%\" y2=\"0%\">\n                              <stop offset=\"0%\" stopColor=\"rgba(255, 196, 0, 1)\" />\n                              <stop offset=\"50%\" stopColor=\"rgba(255, 204, 0, 1)\" />\n                              <stop offset=\"100%\" stopColor=\"rgba(255, 196, 0, 1)\" />\n                          </linearGradient>\n                      </defs>\n                      <path fill=\"url(#processGrad)\" d={AddRouteButtonPath} />\n                  </svg>\n                  <g fill={theme.main.bg.octonary} viewBox=\"0 0 300 68.5\" height=\"3.5rem\" width=\"100%\" style={{border: '1px solid blue', transformOrigin: 'center'}} transform=\"rotate(180) translate(-60, 0)\">\n                      {/* <styled.SVGText x=\"50%\" y=\"50%\" width=\"20%\" dominant-baseline=\"middle\" text-anchor=\"middle\">Add new route to End</styled.SVGText> */}\n                      <foreignObject x=\"50%\" y=\"5%\" height=\"8rem\" width=\"8rem\">\n                          <p style={{textAlign: 'center'}} xmlns=\"http://www.w3.org/1999/xhtml\">Add new route to end</p>\n                      </foreignObject>\n                  </g>\n              </svg>\n          )\n        }\n        else {\n          return (\n              <Button\n                  schema={'processes'}\n                  onClick={onAddToEndClick}\n              >\n                  Add Routes\n              </Button>\n\n          )\n        }\n\n\n    }\n\n\n    const handleAutoAddRoute = () => {\n      if(autoAddRoutes === \"continue\"){\n        handleAddTask()\n\n        let prevObj\n        if (values.routes.length > 0) {\n            prevObj = values.routes[values.routes.length - 1].obj\n        }\n\n        var ind = values.routes.length +1\n\n        const newTask = { ...autoGenerateRoute(prevObj), temp: { insertIndex: ind } }\n        setFieldValue(\"newRoute\", newTask)\n        dispatchSetSelectedTask(newTask)\n        setEditingTask(\"newRoute\")\n        dispatchAutoAddRoute(false)\n      }\n      else if (autoAddRoutes === \"finish\"){\n        handleAddTask()\n        setEditingTask(false)\n        dispatchAutoAddRoute(false)\n      }\n    }\n\n    const handleAddBeginningRoute = () => {\n\n        const onAddToBeginningClick = () => {\n\n            let prevObj\n            if (values.routes.length > 0) {\n                prevObj = values.routes[values.routes.length - 1].obj\n            }\n\n            const newTask = { ...generateDefaultRoute(prevObj), temp: { insertIndex: 0 } }\n\n            setFieldValue(\"newRoute\", newTask)\n            dispatchSetSelectedTask(newTask)\n            setEditingTask(\"newRoute\")\n        }\n\n        if(values.routes.length>0){\n          return (\n              <svg height=\"3.8rem\" style={{ margin: '0.5rem 2rem 0.5rem 2rem', transformOrigin: 'center', cursor: 'pointer' }} onClick={onAddToBeginningClick}>\n                  <svg style={{ overflow: 'visible' }} viewBox=\"0 0 300 68.5\" preserveAspectRatio=\"none\"  >\n                      <path fill=\"url(#processGrad)\" d={AddRouteButtonPath} />\n                  </svg>\n                  <g fill={theme.main.bg.octonary} viewBox=\"0 0 300 68.5\" height=\"3.5rem\" width=\"100%\" style={{border: '1px solid blue', transformOrigin: 'center'}} transform=\"translate(-60, 10)\">\n                      {/* <styled.SVGText x=\"50%\" y=\"50%\" dominant-baseline=\"middle\" text-anchor=\"middle\">Add new route to Start</styled.SVGText> */}\n                      <foreignObject x=\"50%\" y=\"5%\" height=\"8rem\" width=\"8rem\">\n                          <p style={{textAlign: 'center'}} xmlns=\"http://www.w3.org/1999/xhtml\">Add new <br/> route to start</p>\n                      </foreignObject>\n                  </g>\n              </svg>\n          )\n        }\n        else return null\n    }\n\n    const getChildren = () => {\n        const fieldMeta = getFieldMeta(editingTask)\n        const {\n            value: currRouteValue,\n        } = fieldMeta\n        const routeProcesses = getRouteProcesses(currRouteValue._id)\n\n        return (\n            <div>\n                {routeProcesses.map((currProcess) => {\n                    const {\n                        name: currProcessName\n                    } = currProcess\n\n                    return <div>{currProcessName} aaaa</div>\n                })}\n            </div>\n\n        )\n    }\n    return (\n        <>\n            <TaskAddedAlert\n                containerStyle={{\n                    'position': 'absolute'\n                }}\n                {...addTaskAlert}\n                visible={!!addTaskAlert}\n            />\n\n            <ConfirmDeleteModal\n                isOpen={!!confirmExitModal}\n                title={\"Are you sure you want to go back? Any progress will not be saved\"}\n                button_1_text={\"Yes\"}\n                button_2_text={\"No\"}\n                handleClose={() => setConfirmExitModal(null)}\n                handleOnClick1={() => {\n                  onBack()\n                }}\n                handleOnClick2={() => {\n                    setConfirmExitModal(null)\n                }}\n            />\n\n            <ConfirmDeleteModal\n                isOpen={!!confirmDeleteModal}\n                title={\"Are you sure you want to delete this process?\"}\n                button_1_text={\"Yes\"}\n                button_2_text={\"No\"}\n                handleClose={() => setConfirmDeleteModal(null)}\n                handleOnClick1={() => {\n                    onDelete(true)\n                    setConfirmDeleteModal(null)\n                }}\n                handleOnClick2={() => {\n                    setConfirmDeleteModal(null)\n                }}\n            />\n\n            {showExistingTaskWarning &&\n                <ConfirmDeleteModal\n                    isOpen={!!showExistingTaskWarning}\n                    title={\"Changing an existing route will affect other processes that use this route. Would you like to make a copy, or change the existing route?\"}\n                    button_1_text={\"Make a Copy\"}\n                    button_2_text={\"Change the Existing Route\"}\n                    handleClose={() => setShowExistingTaskWarning(false)}\n                    children={getChildren()}\n                    handleOnClick1={() => {\n                        cloneRoute()\n                        setShowExistingTaskWarning(false)\n                    }}\n                    handleOnClick2={() => {\n                        updateExistingRoute()\n                        setShowExistingTaskWarning(false)\n\n                    }}\n                />\n            }\n\n            <styled.Container>\n\n                <div style={{ marginBottom: '1rem' }}>\n\n                    <ContentHeader\n                        content={'processes'}\n                        mode={'create'}\n                        disabled={(!!selectedTask && !!editingTask) || submitDisabled}\n                        onClickSave={() => {\n                            onSave(values, true)\n                        }}\n\n                        onClickBack={() => {\n                            pageInfoChanged ? setConfirmExitModal(true) : onBack()\n                        }}\n\n                    />\n                </div>\n\n                <div >\n                    <styled.Title schema={'default'}>Process Name</styled.Title>\n                    <TextField\n                        focus={!values.name}\n                        placeholder='Process Name'\n                        defaultValue={values.name}\n                        schema={'processes'}\n                        name={`name`}\n                        InputComponent={Textbox}\n                        style={{ fontSize: '1.2rem', fontWeight: '100' }}\n                        textboxContainerStyle={{ border: \"none\" }}\n                    />\n                </div>\n\n                <styled.RowContainer style={{ justifyContent: 'space-between', borderBottom: \"solid #b8b9bf 0.1rem\", paddingBottom: \"0.5rem\", marginTop: \"2.5rem\", marginBottom: \".7rem\"}}>\n                  <styled.Title style = {{fontSize: \"1rem\", paddingTop: \"0.4rem\"}}>Show in Summary View</styled.Title>\n\n                  <Switch\n                      onColor='#FF4B4B'\n                      checked={values.showSummary}\n                      onChange={() => {\n                        setFieldValue(\"showSummary\", !values.showSummary )\n                      }}\n                  />\n\n                </styled.RowContainer>\n\n                <styled.RowContainer style={{ justifyContent: 'space-between', borderBottom: \"solid #b8b9bf 0.1rem\", paddingBottom: \"0.5rem\", marginBottom: \"2rem\"}}>\n                  <styled.Title style = {{fontSize: \"1rem\", paddingTop: \"0.4rem\"}}>Show Statistics</styled.Title>\n\n                  <Switch\n                      onColor='#FF4B4B'\n                      checked={values.showStatistics}\n                      onChange={() => {\n                        setFieldValue(\"showStatistics\", !values.showStatistics )\n                      }}\n                  />\n\n                </styled.RowContainer>\n                  <styled.Title schema={'processes'} style = {{marginTop: \"1rem\", marginBottom: \"1rem\"}}>Associated Routes</styled.Title>\n\n                {editingTask && selectedTask ?\n                        <TaskField\n                            {...formikProps}\n                            isNew={editingTask === \"newRoute\"}\n                            onRemove={handleRemoveRoute}\n                            onDelete={handleDeleteRoute}\n                            onBackClick={handleTaskBack}\n                            onSave={handleAddTask}\n                            fieldParent={editingTask}\n                            shift={shift}\n                            isTransportTask={isTransportTask}\n                            isProcessTask={true}\n                            isTaskInProcess = {handleIsRouteInProcess()}\n                            toggleEditing={(props) => {\n                                setEditingTask(props)\n                            }}\n                        />\n                    :\n                    <>\n\n                      <styled.ContentContainer>\n                        <styled.AddRoutesContainer style = {{height: \"auto\"}}>\n                            <>\n                                {handleAddBeginningRoute()}\n\n                                {values.routes.length > 0 ?\n                                    renderRoutes(values.routes)\n                                    :\n                                    <styled.InfoText></styled.InfoText>\n\n                                }\n\n                                {handleAddRoute()}\n\n                            </>\n                        </styled.AddRoutesContainer>\n\n\n                        {/* Delete Task Button */}\n                        <styled.ColumnContainer>\n                          <Button\n                              schema={'processes'}\n                              disabled={!!selectedTask && !!editingTask || submitDisabled}\n                              onClick={() => {\n                                  onSave(values, true)\n                              }}\n                          >\n                              Save Process\n                          </Button>\n\n                          {/* Delete Task Button */}\n                          <Button\n                              schema={'error'}\n                              disabled={!!selectedProcess && !!selectedProcess._id && !!selectedProcess.new}\n                              secondary\n                              onClick={() => {\n                                  setConfirmDeleteModal(true)\n                              }}\n                          >\n                              Delete Process\n                          </Button>\n                          </styled.ColumnContainer>\n                      </styled.ContentContainer>\n                    </>\n                }\n\n            </styled.Container>\n        </>\n\n    )\n}\n\nexport default ProcessField\n","export const throttle = (func, limit) => {\n    let lastFunc\n    let lastRan\n    return function() {\n        const context = this\n        const args = arguments\n        if (!lastRan) {\n            func.apply(context, args)\n            lastRan = Date.now()\n        } else {\n            clearTimeout(lastFunc)\n            lastFunc = setTimeout(function() {\n                if ((Date.now() - lastRan) >= limit) {\n                    func.apply(context, args)\n                    lastRan = Date.now()\n                }\n            }, limit - (Date.now() - lastRan))\n        }\n    }\n}","import {useDispatch, useSelector} from \"react-redux\";\nimport {Formik} from \"formik\";\nimport {processSchema} from \"../../../../../methods/utils/form_schemas\";\nimport React, {useEffect, useRef} from \"react\";\nimport {ProcessField} from \"../process_field/process_field\";\nimport uuid from 'uuid'\nimport {\n\tdeleteRouteClean,\n\tdeleteTask,\n\tputRouteClean,\n\tputTask, saveFormRoute,\n\tsetSelectedTask\n} from \"../../../../../redux/actions/tasks_actions\";\nimport {\n\tdeleteProcess, deleteProcessClean,\n\tpostProcesses,\n\tputProcesses,\n\tsetSelectedProcess\n} from \"../../../../../redux/actions/processes_actions\";\nimport * as taskActions from \"../../../../../redux/actions/tasks_actions\";\nimport {isObject} from \"../../../../../methods/utils/object_utils\";\nimport {isArray} from \"../../../../../methods/utils/array_utils\";\nimport { pageDataChanged } from \"../../../../../redux/actions/sidebar_actions\"\n\nconst ProcessForm = (props) => {\n\n\tconst {\n\t\ttoggleEditingProcess,\n\t} = props\n\n\tconst formRef = useRef(null)\t// gets access to form state\n\n\tconst {\n\t\t\tcurrent\n\t} = formRef || {}\n\n\tconst {\n\t\t\tvalues = {},\n\t\t\tinitialValues = {}\n\t} = current || {}\n\n\tconst dispatchSetSelectedTask = (task) => dispatch(setSelectedTask(task))\n\n\n\tconst dispatch = useDispatch()\n\tconst dispatchPostProcess = async (process) => await dispatch(postProcesses(process))\n\n\tconst dispatchPutProcess = async (process) => await dispatch(putProcesses(process))\n\n\tconst dispatchPostRouteClean = async (route) => await dispatch(taskActions.postRouteClean(route))\n\tconst dispatchPutRouteClean = (task, ID) => dispatch(putRouteClean(task, ID))\n\n\tconst dispatchSetSelectedProcess = (process) => dispatch(setSelectedProcess(process))\n\tconst dispatchDeleteProcessClean = async (ID) => await dispatch(deleteProcessClean(ID))\n\tconst dispatchDeleteRouteClean = (routeId) => dispatch(deleteRouteClean(routeId))\n\tconst dispatchSaveFormRoute = async (formRoute) => await dispatch(saveFormRoute(formRoute))\n\tconst dispatchPageDataChanged = (bool) => dispatch(pageDataChanged(bool))\n\n\tconst tasks = useSelector(state => state.tasksReducer.tasks)\n\tconst selectedProcess = useSelector(state => state.processesReducer.selectedProcess)\n\tconst objects = useSelector(state => state.objectsReducer.objects)\n\tconst currentMapId = useSelector(state => state.settingsReducer.settings.currentMapId)\n\tconst maps = useSelector(state => state.mapReducer.maps)\n\tconst currentMap = Object.values(maps).find(map => map._id === currentMapId)\n\tconst editing = useSelector(state => state.processesReducer.editingProcess)\n\tconst pageInfoChanged = useSelector(state=> state.sidebarReducer.pageDataChanged)\n\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t\tdispatchSetSelectedTask(null)\n\t\t\tdispatchSetSelectedProcess(null)\n\t\t}\n\t}, []);\n\n\tuseEffect(() => {\n\t\tvar {\n\t\t\tnewRoute,\n\t\t\t...remainingInitialValues\n\t\t} = initialValues\n\n\t\tvar {\n\t\t\tnewRoute,\n\t\t\tchanged,\n\t\t\t...remainingValues\n\t\t} = values\n\n\n\t\tif(JSON.stringify(remainingInitialValues)!==JSON.stringify(remainingValues)){\n\t\t\tdispatchPageDataChanged(true)\n\t\t}\n\n\t\treturn () => {\n\t\t\tdispatchPageDataChanged(false)\n\t\t}\n\n\t}, [values])\n\n\tconst handleSave = async (values, close) => {\n\n\t\t// extract some values\n\t\tconst {\n\t\t\tnewRoute,\n\t\t\tchanged,\n\t\t\t...remainingValues\n\t\t} = values\n\n\t\t// perform any updates for routes\n\t\tfor (const currRoute of remainingValues.routes) {\n\t\t\tawait dispatchSaveFormRoute(currRoute)\n\t\t\tcleanRoute(currRoute)\n\t\t}\n\n\t\tdispatchSetSelectedTask(null) // clear selected task\n\t\tconst mappedRoutes = remainingValues.routes.map((currRoute) => currRoute._id)\n\n\t\t// if new, POST\n\t\tif (remainingValues.new) {\n\t\t\tawait dispatchPostProcess({\n\t\t\t\t...remainingValues,\n\t\t\t\troutes: mappedRoutes,\n\t\t\t\tmap_id: currentMap._id,\n\t\t\t})\n\t\t}\n\n\t\t// Else put\n\t\telse {\n\t\t\tawait dispatchPutProcess({\n\t\t\t\t...remainingValues,\n\t\t\t\troutes: mappedRoutes,\n\t\t\t\tmap_id: currentMap._id,\n\t\t\t})\n\t\t}\n\n\t\t// close editor\n\t\tif(close) {\n\t\t\tdispatchSetSelectedProcess(null)\n\t\t\ttoggleEditingProcess(false)\n\t\t}\n\t}\n\n\t// remove keys from route that shouldn't be saved\n\tconst cleanRoute = (route) => {\n\t\tdelete route.new\n\t\tdelete route.changed\n\t\tdelete route.needsSubmit\n\t\tdelete route.unsaved\n\t}\n\n\tconst handleBack = async () => {\n\t\t// clear selectedTask, selectedProcess, and set toggleEditing to false\n\t\tawait dispatchSetSelectedTask(null)\n\t\tdispatchSetSelectedProcess(null)\n\t\ttoggleEditingProcess(false)\n\t}\n\n\n\n\tconst handleDelete = (withRoutes) => {\n\t\tif(withRoutes) {\n\t\t\thandleDeleteWithRoutes()\n\t\t}\n\n\t\telse {\n\t\t\thandleDeleteWithoutRoutes()\n\t\t}\n\t}\n\tconst handleDeleteWithRoutes = async () => {\n\n\t\t// If there's routes in this process, delete the routes\n\t\tif (selectedProcess.routes.length > 0) {\n\t\t\tselectedProcess.routes.forEach(route => {\n\t\t\t\tif(isObject(route)) {\n\t\t\t\t\tdispatchDeleteRouteClean(route._id)\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdispatchDeleteRouteClean(route)\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tawait dispatchDeleteProcessClean(selectedProcess._id)\n\n\t\tdispatchSetSelectedTask(null)\n\t\tdispatchSetSelectedProcess(null)\n\t\ttoggleEditingProcess(false)\n\t}\n\n\tconst handleDeleteWithoutRoutes = async () => {\n\n\t\tawait dispatchDeleteProcessClean(selectedProcess._id)\n\n\t\tdispatchSetSelectedTask(null)\n\t\tdispatchSetSelectedProcess(null)\n\t\ttoggleEditingProcess(false)\n\t}\n\n\tconst handleDefaultObj = (objId, prevObj) => {\n\n\t\tif(isObject(objects[objId])) {\n\t\t\treturn objects[objId]\n\t\t}\n\t\telse if (prevObj) {\n\t\t\treturn prevObj\n\t\t}\n\t\telse {\n\t\t\treturn null\n\t\t}\n\t}\n\n\tconst handleInitialRoutes = () => {\n\t\tif(selectedProcess && selectedProcess.routes && Array.isArray(selectedProcess.routes)) {\n\t\t\tlet prevObj = null\n\n\t\t\treturn selectedProcess.routes\n\t\t\t\t.filter((currRouteItem) => {\n\t\t\t\t\treturn isObject(isObject(currRouteItem) ? currRouteItem : tasks[currRouteItem])\n\t\t\t\t})\n\t\t\t\t.map((currRouteItem) => {\n\n\t\t\t\tconst route = isObject(currRouteItem) ? currRouteItem : tasks[currRouteItem]\n\n\t\t\t\tconst obj = handleDefaultObj(route.obj, prevObj)\n\t\t\t\tprevObj = obj\n\n\t\t\t\treturn {\n\t\t\t\t\t...route,\n\t\t\t\t\tobj\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\t// otherwise initialize to empty array\n\t\treturn []\n\n\t}\n\n\n\treturn (\n\t\t<Formik\n\t\t\tinitialValues={{\n\t\t\t\tname: selectedProcess ? selectedProcess.name : \"\",\n\t\t\t\troutes: handleInitialRoutes(),\n\t\t\t\tbroken: selectedProcess ? selectedProcess.broken : false,\n\t\t\t\t_id: selectedProcess ? selectedProcess._id : uuid.v4(),\n\t\t\t\tnew: selectedProcess.new,\n\t\t\t\tnewRoute: null,\n\t\t\t\tmap_id: currentMap._id,\n\t\t\t\tshowSummary: selectedProcess.new ? true: selectedProcess.showSummary,\n\t\t\t\tshowStatistics: selectedProcess.new ? true: selectedProcess.showStatistics,\n\n\t\t\t}}\n\n\t\t\t// validation control\n\t\t\tvalidationSchema={processSchema}\n\t\t\tinnerRef = {formRef}\n\t\t\tvalidateOnChange={true}\n\t\t\tvalidateOnMount={false} // leave false, if set to true it will generate a form error when new data is fetched\n\t\t\tvalidateOnBlur={true}\n\n\t\t\t// enableReinitialize={true} // leave false, otherwise values will be reset when new data is fetched for editing an existing item\n\t\t\tonSubmit={async (values, formikHelpers) => {\n\n\t\t\t\tconst {\n\t\t\t\t\tsetSubmitting,\n\t\t\t\t\tsetTouched,\n\t\t\t\t\tresetForm\n\t\t\t\t} = formikHelpers\n\n\t\t\t\t// set submitting to true, handle submit, then set submitting to false\n\t\t\t\t// the submitting property is useful for eg. displaying a loading indicator\n\t\t\t\tconst {\n\t\t\t\t\tbuttonType\n\t\t\t\t} = values\n\n\t\t\t\tsetSubmitting(true)\n\t\t\t\t// await handleSubmit(values, formMode)\n\t\t\t\tsetTouched({}) // after submitting, set touched to empty to reflect that there are currently no new changes to save\n\t\t\t\tsetSubmitting(false)\n\n\t\t\t}}\n\t\t>\n\t\t\t{formikProps => {\n\t\t\t\tconst {\n\t\t\t\t\tsetSubmitting,\n\t\t\t\t\tsubmitForm,\n\t\t\t\t\tsetTouched,\n\t\t\t\t\tresetForm,\n\t\t\t\t\tsetFieldValue,\n\t\t\t\t\ttouched,\n\t\t\t\t\tvalues,\n\t\t\t\t\tinitialValues,\n\t\t\t\t} = formikProps\n\n\n\t\t\t\treturn(\n\t\t\t\t\t<ProcessField\n\t\t\t\t\t\tonSave={async (values, close) => {\n\t\t\t\t\t\t\tsetSubmitting(true)\n\t\t\t\t\t\t\tawait handleSave(values, close)\n\t\t\t\t\t\t\tsetTouched({}) // after submitting, set touched to empty to reflect that there are currently no new changes to save\n\t\t\t\t\t\t\tsetSubmitting(false)\n\n\t\t\t\t\t\t\t// reset changed to false\n\t\t\t\t\t\t\tsetFieldValue(\"changed\", false)\n\n\n\t\t\t\t\t\t\t// resetForm()\n\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonBack={handleBack}\n\t\t\t\t\t\tonDelete={handleDelete}\n\t\t\t\t\t\tformikProps={formikProps}\n\t\t\t\t\t\ttoggleEditingProcess={toggleEditingProcess}\n\t\t\t\t\t/>\n\t\t\t\t)\n\t\t\t}}\n\t\t</Formik>\n\t)\n}\n\nexport default ProcessForm\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory } from \"react-router-dom\";\n\nimport ContentList from '../content_list/content_list'\n\n// Import actions\nimport { setSelectedProcess, editingProcess, putProcesses } from '../../../../redux/actions/processes_actions'\n\n// Import Utils\nimport { isBrokenProcess } from '../../../../methods/utils/processes_utils'\n\nimport uuid from 'uuid'\nimport ProcessForm from \"./process_form/process_form\";\n\nconst ProcessesContent = () => {\n\n    const history = useHistory()\n\n    const dispatch = useDispatch()\n    const dispatchSetSelectedProcess = (process) => dispatch(setSelectedProcess(process))\n    const dispatchEditing = (props) => dispatch(editingProcess(props))\n    const dispatchPutProcess = (process) => dispatch(putProcesses(process))\n\n    let tasks = useSelector(state => state.tasksReducer.tasks)\n    let selectedTask = useSelector(state => state.tasksReducer.selectedTask)\n    const selectedProcess = useSelector(state => state.processesReducer.selectedProcess)\n    const processes = useSelector(state => state.processesReducer.processes)\n    const editing = useSelector(state => state.processesReducer.editingProcess)\n    const currentMapId = useSelector(state => state.settingsReducer.settings.currentMapId)\n    const maps = useSelector(state => state.mapReducer.maps)\n    const currentMap = Object.values(maps).find(map => map._id === currentMapId)\n    // State definitions\n    const [shift, setShift] = useState(false) // Is shift key pressed ?\n    const [isTransportTask, setIsTransportTask] = useState(true)\n\n\n    useEffect(() => {\n\n        return () => {\n            dispatchSetSelectedProcess(null)\n        }\n    }, [])\n\n    useEffect(() => {\n        // Maps through all process and sees if they're broken\n        Object.values(processes).map((process) => {\n            const processRoutes = process.routes.map((currRoute) => tasks[currRoute]) || {}\n\n            // If it was previously broken, but not anymore, then correct that ish\n            if (!!process.broken && !isBrokenProcess(processRoutes, tasks)) {\n                process.broken = null\n                dispatchPutProcess(process)\n            }\n\n            // Else if the process is broken, so fix that ish\n            else if (!!isBrokenProcess(processRoutes, tasks) && process.broken === null) {\n                process.broken = isBrokenProcess(processRoutes, tasks)\n                dispatchPutProcess(process)\n            }\n        })\n        return () => {\n        }\n    }, [processes])\n\n\n    const onCardView = (element) => {\n        const currentPath = history.location.pathname\n        history.push(currentPath + '/' + element._id + \"/lots\")\n    }\n\n    if (editing && selectedProcess !== null) { // Editing Mode\n        return (\n            <ProcessForm\n                toggleEditingProcess={props => dispatchEditing(props)}\n            />\n        )\n    } else {    // List Mode\n        return (\n            <ContentList\n                title={'Processes'}\n                schema={'processes'}\n                // elements={Object.values(tasks)}\n                elements={\n                    Object.values(processes).filter((currProcess) => currProcess.map_id === currentMap._id)\n                }\n                onMouseEnter={(process) => dispatchSetSelectedProcess(process)}\n                onMouseLeave={() => dispatchSetSelectedProcess(null)}\n                handleCardView={(element) => onCardView(element)}\n                onClick={(process) => {\n                    // If task button is clicked, start editing it\n                    dispatchSetSelectedProcess(process)\n                    dispatchEditing(true)\n                }}\n                onPlus={() => {\n                    const newProcess = {\n                        name: '',\n                        _id: uuid.v4(),\n                        new: true,\n                        routes: [],\n                        broken: null,\n                    }\n                    // TODO: May have to do this with processes\n                    // dispatch(taskActions.addTask(newTask))\n                    dispatchSetSelectedProcess(newProcess)\n                    dispatchEditing(true)\n                }}\n            />\n        )\n    }\n}\n\nexport default ProcessesContent\n","import styled from 'styled-components'\nimport * as buttonCss from '../../../../../common_css/button_css'\nimport * as commonCss from '../../../../../common_css/common_css'\nimport { LightenDarkenColor } from '../../../../../methods/utils/color_utils'\n\nexport const BreakContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    height: fit-content;\n    background-color: ${props => props.theme.bg.secondary};\n    border-radius: .5rem;\n`\n\nexport const BreakLabel = styled.label`\n  font-size: ${props => props.theme.fontSize.sz4};\n  font-family: ${props => props.theme.font.primary};\n  color: ${props => props.theme.bg.senary};\n`\n\nexport const ChartButton = styled.button`\n    ${buttonCss.button};\n    background-color:${props => props.theme.schema.statistics.solid};\n    color: ${props => props.theme.bg.primary};\n    margin-top: .5rem;\n    margin-bottom: 0.1rem;\n    font-size: 1.25rem;\n    padding: .25rem;\n\n    &:hover {\n      background-color:${props => LightenDarkenColor(props.theme.schema.statistics.solid, -5)};\n    }\n`\n\nexport const ColumnContainer = styled.div`\n    ${commonCss.columnContainer};\n`\n\nexport const RowContainer = styled.div`\n    ${commonCss.rowContainer};\n    justify-content: space-around;\n    position: relative;\n`\n\nexport const Label = styled.label`\n  font-size: ${props => props.theme.fontSize.sz3};\n  font-family: ${props => props.theme.font.primary};\n  color: ${props => props.theme.bg.octonary};\n`\n\n","import React, { useState, useEffect, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport moment from 'moment';\nimport { Formik, Form } from 'formik'\n\n// Import Components\nimport TextField from '../../../../basic/form/text_field/text_field.js'\nimport Textbox from '../../../../basic/textbox/textbox'\nimport TimePickerField from '../../../../basic/form/time_picker_field/time_picker_field'\nimport Switch from '../../../../basic/form/switch_field/switch_field'\n\n// Import Styles\nimport * as styled from './shift_settings.style'\n\n// Import utils\nimport { throughputSchema } from '../../../../../methods/utils/form_schemas'\nimport { convert12hto24h } from '../../../../../methods/utils/time_utils'\n\n// Import actions\nimport { postSettings } from '../../../../../redux/actions/settings_actions'\nimport { pageDataChanged } from '../../../../../redux/actions/sidebar_actions'\n\nconst ShiftSettings = (props) => {\n\n    const {\n        themeContext,\n        enableOutput,\n    } = props\n\n    const dispatch = useDispatch()\n    const dispatchPostSettings = (settings) => dispatch(postSettings(settings))\n    const dispatchPageDataChanged = (bool) => dispatch(pageDataChanged(bool))\n\n    const settings = useSelector(state => state.settingsReducer.settings)\n\n    const [breaksEnabled, setBreaksEnabled] = useState({})\n    const shiftDetails = settings.shiftDetails;\n\n    // Settings local state here because enabled breaks needs to access breaks outside of formik\n    // See the Switch below for more details\n    useEffect(() => {\n\n        // If there's shift details\n        if (!!settings.shiftDetails) {\n            let enabledBreaks = {}\n            Object.keys(settings.shiftDetails.breaks).forEach((br, ind) => {\n                const enabled = settings.shiftDetails.breaks[br].enabled\n                const breakString = `break${ind}`\n                enabledBreaks[ind] = enabled\n            })\n            setBreaksEnabled(enabledBreaks)\n        }\n        else {\n            setBreaksEnabled(null)\n        }\n        return () => {\n        }\n    }, [settings])\n\n    // Submits the shift details to the backend via settings\n    const onSubmitShift = (values) => {\n\n        let {\n            startOfShift,\n            endOfShift,\n            expectedOutput,\n            startOfBreak1,\n            endOfBreak1,\n            switch1,\n            startOfBreak2,\n            endOfBreak2,\n            switch2,\n            startOfBreak3,\n            endOfBreak3,\n            switch3,\n        } = values\n\n        const shiftSettings = {\n            startOfShift: startOfShift,\n            endOfShift: endOfShift,\n            expectedOutput: expectedOutput,\n            breaks: {\n                break1: {\n                    enabled: switch1,\n                    startOfBreak: startOfBreak1,\n                    endOfBreak: endOfBreak1,\n                },\n                break2: {\n                    ...shiftDetails.breaks.break2,\n                    enabled: switch2,\n                    startOfBreak: startOfBreak2,\n                    endOfBreak: endOfBreak2,\n                },\n                break3: {\n                    enabled: switch3,\n                    startOfBreak: startOfBreak3,\n                    endOfBreak: endOfBreak3,\n                },\n            },\n        }\n\n        dispatchPostSettings({\n            ...settings,\n            shiftDetails: shiftSettings,\n        })\n\n\n    }\n\n    const renderBreaks = useMemo(() => {\n\n        const numberOfBreaks = [0, 1, 2]\n\n        return (\n            <>\n                <styled.RowContainer style={{ alignItems: 'center', width:'100%', minWidth: '20rem' }}>\n\n                    <styled.RowContainer style={{ width: '100%' }}>\n\n                    </styled.RowContainer>\n                    <styled.RowContainer>\n                        <styled.ColumnContainer style={{ margin: '.25rem', width: '6rem' }}>\n                            <styled.BreakLabel>\n                                Start of Break\n                        </styled.BreakLabel>\n                        </styled.ColumnContainer>\n                        <styled.ColumnContainer style={{ margin: '.25rem', width: '6rem' }}>\n                            <styled.BreakLabel>\n                                End of Break\n                        </styled.BreakLabel>\n                        </styled.ColumnContainer>\n                    </styled.RowContainer>\n                </styled.RowContainer>\n\n                {\n                    numberOfBreaks.map((bk, ind) => {\n                        const adjustedInd = ind + 1\n\n                        // This uses useState\n                        // The reasoning behind this, is to be able to enable/disable switches without going through formik submit\n                        // This also allows to enable a break, but not effect the graph until submitted\n                        const breakEnabled = breaksEnabled[ind]\n\n                        const breakName = `Break ${adjustedInd}`\n                        const switchName = `switch${adjustedInd}`\n                        const breakStart = `startOfBreak${adjustedInd}`\n                        const breakEnd = `endOfBreak${adjustedInd}`\n                        return (\n                            <styled.RowContainer style={{ alignItems: 'center', width:'100%', minWidth: '20rem' }}>\n\n                                <styled.RowContainer style={{ width: '100%', marginTop: '.25rem' }}>\n                                    <styled.Label>{breakName}</styled.Label>\n                                    <Switch\n                                        name={switchName}\n                                        schema={'statistics'}\n                                        checked={breaksEnabled[ind]}\n                                        onChange={() => {\n                                            setBreaksEnabled({\n                                                ...breaksEnabled,\n                                                [ind]: !breakEnabled\n                                            })\n                                        }}\n                                    />\n                                </styled.RowContainer>\n                                <styled.RowContainer>\n                                    <styled.ColumnContainer style={{ margin: '.25rem' }}>\n                                        {/* <styled.BreakLabel>\n                                        Start of Break\n                                </styled.BreakLabel> */}\n                                        <TimePickerField\n                                            disabled={!breakEnabled}\n                                            schema={'statistics'}\n                                            mapInput={\n                                                (value) => {\n                                                    if (value) {\n                                                        const splitVal = value.split(':')\n                                                        return moment().set({ 'hour': splitVal[0], 'minute': splitVal[1] })\n                                                    }\n                                                }\n                                            }\n                                            mapOutput={(value) => {\n                                                return convert12hto24h(value.format('hh:mm a'))\n                                            }}\n                                            name={breakStart}\n                                            style={{ flex: '0 0 7rem', display: 'flex', flexWrap: 'wrap', textAlign: 'center', backgroundColor: '#6c6e78' }}\n                                            containerStyle={{ width: '5rem' }}\n                                            showHour={true}\n                                            showMinute={true}\n                                            showSecond={false}\n                                            className=\"xxx\"\n                                            use12Hours\n                                            format={'hh:mm a'}\n                                            autocomplete={\"off\"}\n                                            allowEmpty={false}\n                                            defaultOpenValue={moment().set({ 'hour': 1, 'minute': 0 })}\n                                            defaultValue={moment().set({ 'hour': 1, 'minute': 0 })}\n                                        />\n                                    </styled.ColumnContainer>\n                                    <styled.ColumnContainer style={{ margin: '.25rem' }}>\n                                        {/* <styled.BreakLabel>\n                                        End of Break\n                                    </styled.BreakLabel> */}\n                                        <TimePickerField\n                                            disabled={!breakEnabled}\n                                            schema={'statistics'}\n                                            mapInput={\n                                                (value) => {\n                                                    if (value) {\n                                                        const splitVal = value.split(':')\n                                                        return moment().set({ 'hour': splitVal[0], 'minute': splitVal[1] })\n                                                    }\n                                                }\n                                            }\n                                            mapOutput={(value) => {\n                                                return convert12hto24h(value.format('hh:mm a'))\n                                            }}\n                                            name={breakEnd}\n                                            style={{ flex: '0 0 7rem', display: 'flex', flexWrap: 'wrap', textAlign: 'center', backgroundColor: '#6c6e78' }}\n                                            containerStyle={{ width: '6rem' }}\n                                            showHour={true}\n                                            showMinute={true}\n                                            showSecond={false}\n                                            className=\"xxx\"\n                                            use12Hours\n                                            format={'hh:mm a'}\n                                            autocomplete={\"off\"}\n                                            allowEmpty={false}\n                                            defaultOpenValue={moment().set({ 'hour': 1, 'minute': 0 })}\n                                            defaultValue={moment().set({ 'hour': 1, 'minute': 0 })}\n                                        />\n                                    </styled.ColumnContainer>\n                                </styled.RowContainer>\n                            </styled.RowContainer>\n                        )\n                    })\n                }\n            </>\n        )\n\n    }, [shiftDetails, breaksEnabled])\n\n    return (\n        <Formik\n            initialValues={{\n                startOfShift: shiftDetails.startOfShift,\n                endOfShift: shiftDetails.endOfShift,\n                startOfBreak1: shiftDetails.breaks.break1.startOfBreak,\n                endOfBreak1: shiftDetails.breaks.break1.endOfBreak,\n                switch1: shiftDetails.breaks.break1.enabled,\n                startOfBreak2: shiftDetails.breaks.break2.startOfBreak,\n                endOfBreak2: shiftDetails.breaks.break2.endOfBreak,\n                switch2: shiftDetails.breaks.break2.enabled,\n                startOfBreak3: shiftDetails.breaks.break3.startOfBreak,\n                endOfBreak3: shiftDetails.breaks.break3.endOfBreak,\n                switch3: shiftDetails.breaks.break3.enabled,\n                expectedOutput: shiftDetails.expectedOutput,\n            }}\n\n            // validation control\n            validationSchema={throughputSchema}\n            validateOnChange={true}\n            validateOnMount={false}\n            validateOnBlur={false}\n\n            onSubmit={async (values, { setSubmitting, setTouched, validateForm, resetForm }) => {\n\n                setSubmitting(true)\n                onSubmitShift(values)\n                setSubmitting(false)\n                setTouched({})\n                dispatchPageDataChanged(false)\n            }}\n        >\n            {formikProps => {\n\n                const {\n                    submitForm,\n                    setValidationSchema,\n                    values,\n                    errors,\n                    touched,\n                    initialValues\n                } = formikProps\n\n\n                if (Object.keys(touched).length > 0) {\n                    dispatchPageDataChanged(true)\n                }\n\n                return (\n                    <Form\n                        style={{\n                            backgroundColor: themeContext.bg.primary,\n                            boxShadow: themeContext.cardShadow,\n                            padding: '.5rem',\n                            borderRadius: '.5rem',\n                            display: 'flex',\n                            flexDirection: 'column',\n                        }}\n                    >\n                        <styled.ColumnContainer>\n                            <styled.Label>Shift Details</styled.Label>\n                            <styled.RowContainer style={{ justifyContent: 'space-between' }}>\n                                <styled.Label>\n                                    Start of Shift\n                            </styled.Label>\n                                <TimePickerField\n                                    schema={'statistics'}\n                                    mapInput={\n                                        (value) => {\n                                            if (value) {\n                                                const splitVal = value.split(':')\n                                                return moment().set({ 'hour': splitVal[0], 'minute': splitVal[1] })\n                                            }\n                                        }\n                                    }\n                                    mapOutput={(value) => {\n                                        return convert12hto24h(value.format('hh:mm a'))\n                                    }}\n                                    name={'startOfShift'}\n                                    style={{ flex: '0 0 7rem', display: 'flex', flexWrap: 'wrap', textAlign: 'center', backgroundColor: '#6c6e78' }}\n                                    containerStyle={{ width: '6rem' }}\n                                    showHour={true}\n                                    formikProps\n                                    showSecond={false}\n                                    className=\"xxx\"\n                                    use12Hours\n                                    format={'hh:mm a'}\n                                    autocomplete={\"off\"}\n                                    allowEmpty={false}\n                                    defaultOpenValue={moment().set({ 'hour': 1, 'minute': 0 })}\n                                    defaultValue={moment().set({ 'hour': 1, 'minute': 0 })}\n                                />\n                            </styled.RowContainer>\n                            <styled.RowContainer style={{ justifyContent: 'space-between' }}>\n                                <styled.Label>\n                                    End of Shift\n                            </styled.Label>\n                                <TimePickerField\n                                    schema={'statistics'}\n                                    mapInput={\n                                        (value) => {\n                                            if (value) {\n                                                const splitVal = value.split(':')\n                                                return moment().set({ 'hour': splitVal[0], 'minute': splitVal[1] })\n                                            }\n                                        }\n                                    }\n                                    mapOutput={(value) => {\n                                        return convert12hto24h(value.format('hh:mm a'))\n                                    }}\n                                    name={'endOfShift'}\n                                    containerStyle={{ width: '6rem' }}\n                                    style={{ flex: '0 0 7rem', display: 'flex', flexWrap: 'wrap', textAlign: 'center', backgroundColor: '#6c6e78' }}\n                                    showHour={true}\n                                    showSecond={false}\n                                    className=\"xxx\"\n                                    use12Hours\n                                    format={'hh:mm a'}\n                                    autocomplete={\"off\"}\n                                    allowEmpty={false}\n                                    defaultOpenValue={moment().set({ 'hour': 1, 'minute': 0 })}\n                                    defaultValue={moment().set({ 'hour': 1, 'minute': 0 })}\n                                />\n                            </styled.RowContainer>\n                            {!!enableOutput &&\n                                <styled.RowContainer style={{ justifyContent: 'space-between' }}>\n                                    <styled.Label>\n                                        Expected Output\n                                </styled.Label>\n                                    <TextField\n                                        name={\"expectedOutput\"}\n                                        placeholder='Qty'\n                                        InputComponent={Textbox}\n                                        ContentContainer={styled.RowContainer}\n                                        style={{\n                                            'fontSize': '1rem',\n                                            'fontWeight': '600',\n                                            'marginBottom': '.5rem',\n                                            'marginTop': '0',\n                                            'width': '6rem',\n                                        }}\n                                    />\n                                </styled.RowContainer>\n                            }\n\n                        </styled.ColumnContainer>\n                        <styled.BreakContainer>\n                            <styled.Label>Breaks</styled.Label>\n                            {renderBreaks}\n                        </styled.BreakContainer>\n                        {/* <styled.RowContainer>\n\n        </styled.RowContainer> */}\n                        <styled.ChartButton type={'submit'}>{!!enableOutput ? 'Calculate and Save' : 'Save'}</styled.ChartButton>\n\n\n                    </Form>\n                )\n            }}\n        </Formik>\n    )\n}\n\nShiftSettings.defaultProps = {\n    enableOutput: true\n};\n\nexport default ShiftSettings","export const Timezones = [\n\n  {\n    name: \"(Pacific Time) Los Angeles\",\n    label: \"America/Los_Angeles\",\n  },\n  {\n    name: \"(Mountain Time) Denver\",\n    label: \"America/Denver\",\n  },\n  {\n    name: \"(Central Time) Chicago\",\n    label: \"America/Chicago\",\n  },\n  {\n    name: \"(Eastern Time) New York\",\n    label: \"America/New_York\",\n  },\n]\n","export default { authenticationNeeded: true, UserPoolId: 'us-east-2_bwsONOHuA', ClientId: '67le6o8lbkc616or6cl5hvdh0p'}","import React, { useState, useEffect, useContext } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport TimezoneSelect from 'react-timezone-select'\n\n// Import Components\nimport Textbox from '../../../basic/textbox/textbox'\nimport Switch from 'react-ios-switch';\nimport TimezonePicker, { timezones } from 'react-timezone';\nimport Button from \"../../../basic/button/button\";\nimport DropDownSearch from \"../../../basic/drop_down_search_v2/drop_down_search\";\nimport ContentHeader from '../content_header/content_header'\nimport ConfirmDeleteModal from '../../../basic/modals/confirm_delete_modal/confirm_delete_modal'\nimport TaskAddedAlert from \"../../../widgets/widget_pages/dashboards_page/dashboard_screen/task_added_alert/task_added_alert\";\nimport ShiftSettings from './shift_settings/shift_settings'\n\n// Import Constants\nimport { ADD_TASK_ALERT_TYPE } from \"../../../../constants/dashboard_constants\";\nimport { Timezones } from '../../../../constants/timezone_constants'\n\nimport * as AmazonCognitoIdentity from 'amazon-cognito-identity-js';\n\n// Import Styles\nimport * as styled from './settings.style'\nimport { ThemeContext } from 'styled-components';\n\n\n// Import Actions\nimport { postSettings, getSettings } from '../../../../redux/actions/settings_actions'\nimport { postLocalSettings, getLocalSettings } from '../../../../redux/actions/local_actions'\nimport { putDashboard } from '../../../../redux/actions/dashboards_actions'\n\n\nimport { deviceEnabled } from '../../../../redux/actions/settings_actions'\nimport { getStatus } from '../../../../redux/actions/status_actions'\nimport { setCurrentMap } from '../../../../redux/actions/map_actions'\n\n// Import Utils\nimport { getIsEquivalent } from '../../../../methods/utils/utils'\nimport config from '../../../../settings/config'\nimport { useHistory } from \"react-router-dom\";\n\nconst Settings = () => {\n\n    const history = useHistory()\n\n    const dispatch = useDispatch()\n    const dispatchPostSettings = (settings) => dispatch(postSettings(settings))\n    const dispatchGetSettings = () => dispatch(getSettings())\n    const dispatchPostLocalSettings = (settings) => dispatch(postLocalSettings(settings))\n    const dispatchGetLocalSettings = () => dispatch(getLocalSettings())\n    const dispatchPutDashboard = (dashboard, id) => dispatch(putDashboard(dashboard, id))\n    const dispatchGetStatus = () => dispatch(getStatus())\n    const dispatchDeviceEnabled = (bool) => dispatch(deviceEnabled(bool))\n    const dispatchSetCurrentMap = (mapID) => dispatch(setCurrentMap(mapID))\n\n    const mapReducer = useSelector(state => state.mapReducer)\n    const serverSettings = useSelector(state => state.settingsReducer.settings)\n    const localSettings = useSelector(state => state.localReducer.localSettings)\n    const deviceEnabledSetting = serverSettings.deviceEnabled\n    const dashboards = useSelector(state => state.dashboardsReducer.dashboards)\n    const {\n        currentMap,\n        maps\n    } = mapReducer\n\n    const [serverSettingsState, setServerSettingsState] = useState(serverSettings)\n    const [localSettingsState, setLocalSettingsState] = useState({})\n    const [mapSettingsState, setMapSettingsState] = useState(currentMap)\n    const [devicesEnabled, setDevicesEnabled] = useState(!!deviceEnabledSetting)\n    const [showShiftSettings, setShowShiftSettings] = useState(false)\n    const [confirmUnlock, setConfirmUnlock] = useState(false)\n    const [confirmLock, setConfirmLock] = useState(false)\n    const [addTaskAlert, setAddTaskAlert] = useState(null);\n\n    const themeContext = useContext(ThemeContext);\n\n\n    /**\n     *  Sets current settings to state so that changes can be discarded or saved\n     * */\n    useEffect(() => {\n        setServerSettingsState(serverSettings)\n        dispatchGetLocalSettings()\n\n    }, [])\n\n    useEffect(() => {\n        setLocalSettingsState(localSettings)\n    }, [localSettings])\n\n    const handleLoadLocalData = async () => {\n        await dispatchGetLocalSettings()\n        setLocalSettingsState(localSettings)\n    }\n    /**\n     * Handles updating settings on the server\n     * All devices that are connected to the server will have these settings\n     */\n    const handleUpdateServerSettings = (setting) => {\n\n        const key = Object.keys(setting)[0]\n        const value = Object.values(setting)[0]\n\n        const updatedSettings = {\n            ...serverSettingsState,\n            [key]: value,\n        }\n\n        setServerSettingsState(updatedSettings)\n\n    }\n\n    const handleLockUnlockDashboards = (locked) => {\n\n        Object.values(dashboards).forEach((dashboard) => {\n            if (dashboard.name !== \"MiR_SIM_2 Dashboard\") {\n                const newDashboard = {\n                    ...dashboard,\n                    locked: locked\n                }\n                dispatchPutDashboard(newDashboard, newDashboard._id?.$oid)\n            }\n        })\n\n        if (!locked) {\n            setAddTaskAlert({\n                type: ADD_TASK_ALERT_TYPE.TASK_ADDED,\n                label: \"All Dashboards have been successfully unlocked!\",\n            })\n        }\n        else {\n            setAddTaskAlert({\n                type: ADD_TASK_ALERT_TYPE.TASK_ADDED,\n                label: \"All Dashboards have been successfully locked!\",\n            })\n        }\n\n\n        return setTimeout(() => setAddTaskAlert(null), 2500)\n\n    }\n\n    /**\n     * Handles updating settings on the device\n     * These are device specific settings,\n     * Changing these will only effect the current device\n     */\n    const handleUpdateLocalSettings = (setting) => {\n\n        const key = Object.keys(setting)[0]\n        const value = Object.values(setting)[0]\n\n        const updatedSettings = {\n            ...localSettingsState,\n            [key]: value,\n        }\n        setLocalSettingsState(updatedSettings)\n    }\n\n\n\n    // Submits settings to the backend\n    const handleSumbitSettings = async () => {\n        // Sees if either settings have changed. If the state settigns and redux settings are different, then they've changed\n        await dispatchPostLocalSettings(localSettingsState)\n        const serverChange = getIsEquivalent(serverSettingsState, serverSettings)\n        const mapChange = !getIsEquivalent(mapSettingsState, currentMap)\n        const deviceChange = getIsEquivalent(deviceEnabled, deviceEnabledSetting)\n\n        if (!serverChange) {\n            delete serverSettingsState._id\n            await dispatchPostSettings(serverSettingsState)\n        }\n\n        if (!deviceChange) {\n            await dispatchDeviceEnabled(devicesEnabled)\n            await dispatchPostSettings(serverSettingsState)\n        }\n\n        await dispatchGetSettings()\n        await dispatchGetStatus()\n        await dispatchGetLocalSettings()\n\n        if (!localSettingsState.mapViewEnabled) {\n            history.push(`/`)\n        }\n\n    }\n\n    const TimeZone = () => {\n\n        return (\n            <styled.SettingContainer>\n\n\n                <styled.SwitchContainerLabel>Select a Timezone</styled.SwitchContainerLabel>\n\n\n                <styled.RowContainer style={{ borderColor: 'transparent' }}>\n                    <DropDownSearch\n                        placeholder=\"Select Timezone\"\n                        label=\"Select your timezone\"\n                        labelField=\"name\"\n                        valueField=\"label\"\n                        options={Timezones}\n                        values={!!serverSettingsState.timezone ? [serverSettingsState.timezone] : []}\n                        dropdownGap={5}\n                        noDataLabel=\"No matches found\"\n                        closeOnSelect=\"true\"\n                        onChange={values => {\n                            handleUpdateServerSettings({ timezone: values[0] })\n                        }}\n\n                        className=\"w-100\"\n                    />\n                </styled.RowContainer>\n\n            </styled.SettingContainer>\n        )\n    }\n\n    const APIAddress = () => {\n        //  if(MiRMapEnabled){\n        return (\n            <styled.SettingContainer >\n\n                <styled.RowContainer style={{ justifyContent: 'space-between', width: '100%', alignSelf: 'start', borderColor: localSettingsState.toggleDevOptions ? \"transparent\" : \"white\" }}>\n                    <styled.SwitchContainerLabel>Show Developer Settings</styled.SwitchContainerLabel>\n\n                    <styled.ChevronIcon\n                        className={!!localSettingsState.toggleDevOptions ? 'fas fa-chevron-up' : 'fas fa-chevron-down'}\n                        style={{ color: 'black' }}\n                        onClick={() => {\n                            handleUpdateLocalSettings({ toggleDevOptions: !localSettingsState.toggleDevOptions })\n                        }}\n                    />\n\n                </styled.RowContainer>\n\n                {!!localSettingsState.toggleDevOptions ?\n                    <>\n                        <styled.RowContainer style={{ borderColor: localSettingsState.non_local_api ? \"transparent\" : \"white\" }}>\n\n                            <styled.SwitchContainerLabel>Enable Non Local API</styled.SwitchContainerLabel>\n\n                            <Switch\n                                checked={localSettingsState.non_local_api}\n                                onChange={() => {\n                                    handleUpdateLocalSettings({ non_local_api: !localSettingsState.non_local_api })\n                                }}\n                                onColor='red'\n                                style={{ marginRight: '1rem' }}\n                            />\n\n                        </styled.RowContainer>\n\n                        {!!localSettingsState.non_local_api &&\n                            <styled.RowContainer style={{ marginTop: '0rem' }}>\n                                <Textbox\n                                    placeholder=\"Enter a Non Local IP...\"\n                                    value={!!localSettingsState.non_local_api_ip ? localSettingsState.non_local_api_ip : \"\"}\n                                    onChange={(event) => {\n                                        handleUpdateLocalSettings({ non_local_api_ip: event.target.value })\n                                    }}\n                                    style={{ width: '100%' }}\n                                />\n                            </styled.RowContainer>\n                        }\n\n\n                        <styled.RowContainer>\n                            <styled.SwitchContainerLabel>Enable Devices</styled.SwitchContainerLabel>\n                            <Switch\n                                checked={serverSettingsState.deviceEnabled}\n                                onChange={() => {\n                                    setDevicesEnabled(!devicesEnabled)\n                                    setServerSettingsState({\n                                        ...serverSettingsState,\n                                        deviceEnabled: !devicesEnabled\n                                    })\n                                }}\n                                onColor='red'\n                                style={{ marginRight: '1rem' }}\n                            />\n                        </styled.RowContainer>\n                    </>\n                    :\n                    <></>\n                }\n\n            </styled.SettingContainer>\n        )\n        //  }Choose a Map\n    }\n\n\n    const MapViewEnabled = () => {\n        return (\n            <styled.SettingContainer>\n\n                <styled.RowContainer style={{ marginTop: '2rem' }}>\n                    <styled.SwitchContainerLabel>Enable Map View</styled.SwitchContainerLabel>\n                    <Switch\n                        onColor='red'\n                        checked={!!localSettingsState.mapViewEnabled}\n                        onChange={() => {\n                            handleUpdateLocalSettings({ mapViewEnabled: !localSettingsState.mapViewEnabled })\n                        }}\n                    />\n                </styled.RowContainer>\n\n            </styled.SettingContainer>\n        )\n    }\n\n    const LockUnlockAllDashboards = () => {\n        return (\n            <styled.SettingContainer>\n                <styled.SwitchContainerLabel>Lock or Unlock Dashboards</styled.SwitchContainerLabel>\n                <styled.RowContainer>\n                    <Button\n                        style={{ width: '100%', minHeight: '3rem' }}\n                        schema={\"settings\"}\n                        onClick={() => setConfirmUnlock(true)}\n                    >Unlock All Dashboards\n                </Button>\n\n                    <Button\n                        style={{ width: '100%', minHeight: '3rem' }}\n                        schema={\"settings\"}\n                        onClick={() => setConfirmLock(true)}\n                    >Lock All Dashboards\n                </Button>\n                </styled.RowContainer>\n\n            </styled.SettingContainer>\n        )\n    }\n\n    const CurrentMap = () => {\n\n        return (\n            <styled.SettingContainer>\n\n\n                <styled.SwitchContainerLabel>Select a Map</styled.SwitchContainerLabel>\n\n\n                <styled.RowContainer style={{ borderColor: 'transparent' }}>\n                    <DropDownSearch\n                        placeholder=\"Select Map\"\n                        label=\"Select the map you would like to use for RMStudio\"\n                        labelField=\"name\"\n                        valueField=\"_id\"\n                        options={maps}\n                        values={!!serverSettingsState ? [Object.values(maps).find(map => map._id === serverSettingsState.currentMapId)] : []}\n                        dropdownGap={2}\n                        noDataLabel=\"No matches found\"\n                        closeOnSelect=\"true\"\n                        onChange={values => {\n                            // update current map\n                            handleUpdateServerSettings({ currentMapId: values[0]._id })\n                        }}\n                        className=\"w-100\"\n                    />\n                </styled.RowContainer>\n\n            </styled.SettingContainer>\n        )\n    }\n\n    const renderShiftSettings = () => {\n        return (\n            <>\n                <styled.RowContainer style={{ justifyContent: 'space-between', width: '100%', alignSelf: 'start'}}>\n                    <styled.SwitchContainerLabel>Show Shift Settings</styled.SwitchContainerLabel>\n\n                    <styled.ChevronIcon\n                        className={!!showShiftSettings ? 'fas fa-chevron-up' : 'fas fa-chevron-down'}\n                        style={{ color: 'black' }}\n                        onClick={() => {\n                            setShowShiftSettings(!showShiftSettings)\n                        }}\n                    />\n\n                </styled.RowContainer>\n                {!!showShiftSettings &&\n                    <styled.ShiftSettingsContainer>\n                        <ShiftSettings\n                            themeContext={themeContext}\n                            enableOutput={false}\n                        />\n                    </styled.ShiftSettingsContainer>\n                }\n            </>\n        )\n    }\n\n    const SignOut = () => {\n\n        const dispatch = useDispatch()\n        const dispatchPostLocalSettings = (settings) => dispatch(postLocalSettings(settings))\n\n        const localReducer = useSelector(state => state.localReducer.localSettings)\n\n        const signOut = async () => {\n\n            var poolData = {\n                UserPoolId: config.UserPoolId,\n                ClientId: config.ClientId,\n            };\n\n            var userPool = new AmazonCognitoIdentity.CognitoUserPool(poolData);\n            var cognitoUser = userPool.getCurrentUser();\n\n            cognitoUser.signOut();\n\n            const updatedLocalSettings = {\n                ...localReducer,\n                authenticated: null,\n                refreshToken: null\n            }\n\n            dispatchPostLocalSettings(updatedLocalSettings)\n\n            window.location.reload();\n\n        }\n        return (\n            <styled.SettingContainer style={{ display: 'flex', flexGrow: '1', justifyContent: 'center', alignItems: 'flex-end' }}>\n\n                {config.authenticationNeeded && <Button style={{ height: '2rem', flex: 1 }} onClick={signOut}> Sign Out </Button>}\n\n            </styled.SettingContainer>\n        )\n    }\n\n    return (\n        <styled.SettingsContainer>\n            <ConfirmDeleteModal\n                isOpen={!!confirmLock || !!confirmUnlock}\n                title={!!confirmLock ? \"Are you sure you want to lock all dashboards?\" : \"Are you sure you want to unlock all dashboards?\"}\n                button_1_text={\"Yes\"}\n                button_2_text={\"No\"}\n                handleClose={() => {\n                    setConfirmLock(false)\n                    setConfirmUnlock(false)\n                }}\n                handleOnClick1={() => {\n                    if (!!confirmLock) {\n                        handleLockUnlockDashboards(true)\n                    }\n                    else {\n                        handleLockUnlockDashboards(false)\n                    }\n                    setConfirmLock(false)\n                    setConfirmUnlock(false)\n\n                }}\n                handleOnClick2={() => {\n                    setConfirmLock(false)\n                    setConfirmUnlock(false)\n                }}\n            />\n\n            <TaskAddedAlert\n                containerStyle={{\n                    'position': 'absolute'\n                }}\n                {...addTaskAlert}\n                visible={!!addTaskAlert}\n            />\n            <ContentHeader content={'settings'} mode={'title'} saveEnabled={true} onClickSave={handleSumbitSettings} />\n            {MapViewEnabled()}\n            {CurrentMap()}\n            {TimeZone()}\n            {LockUnlockAllDashboards()}\n            {renderShiftSettings()}\n\n            {APIAddress()}\n            {SignOut()}\n\n\n            {/* {TimeZone()} */}\n        </styled.SettingsContainer>\n    )\n}\n\nexport default Settings\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n\tdisplay: flex;\n\twidth: fit-content;\n\tbackground: ${props => props.theme.bg.quaternary};\n\tflex-direction: column;\n\t// flex: 1;\n\tpadding: 1rem;\n\tcolor: ${props => props.theme.bg.octonary};\n\tborder-right: 1px solid ${props => props.theme.bg.tertiary};\n\n\t// border: 1px solid blue;\n`\n\nexport const Header = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\tmargin-bottom: 1rem;\n`\n\nexport const Title = styled.span`\n\tfont-size: ${props => props.theme.fontSize.sz2};\n\tfont-weight: ${props => props.theme.fontWeight.bold};\n`\n\nexport const CloseButton = styled.i`\n\tfont-size: 1.5rem;\n`\n","import React from \"react\";\n\nimport Button from \"../../../../basic/button/button\";\n\nimport * as styled from \"./card_menu.style\";\nimport DropDownSearch from \"../../../../basic/drop_down_search_v2/drop_down_search\";\nimport DropDownSearchField from \"../../../../basic/form/drop_down_search_field/drop_down_search_field\";\nimport {useSelector} from \"react-redux\";\nimport {useHistory, useParams} from \"react-router-dom\";\n\n\nconst CardMenu = (props) => {\n\tconst {\n\t\tcurrentProcess,\n\t\tclose\n\t} = props\n\n\tconst history = useHistory()\n\tconst processes = Object.values(useSelector(state => { return state.processesReducer.processes }))\n\tlet params = useParams()\n\tconst {\n\t\tid,\n\t\tpage,\n\t\tsubpage\n\t} = params\n\n\treturn(\n\t\t<styled.Container>\n\t\t\t<styled.Header>\n\t\t\t\t<styled.Title>Zones</styled.Title>\n\t\t\t\t<styled.CloseButton\n\t\t\t\t\tclassName=\"fa fa-times\"\n\t\t\t\t\taria-hidden=\"true\"\n\t\t\t\t\tonClick={close}\n\t\t\t\t/>\n\n\t\t\t</styled.Header>\n\n\n\t\t\t<Button\n\t\t\t\tschema={'lots'}\n\t\t\t\tstyle={{ margin: 0, marginBottom: \"1rem\" }}\n\t\t\t\tonClick={async () => {\n\t\t\t\t\thistory.replace ('/lots/summary')\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tLots Summary\n\t\t\t</Button>\n\t\t\t<styled.Title style={{marginBottom: \"1rem\"}}>Processes</styled.Title>\n\t\t\t<DropDownSearch\n\t\t\t\tvalues={currentProcess ? [currentProcess] : []}\n\t\t\t\toptions={processes}\n\t\t\t\tonChange={values => {\n\t\t\t\t\tconst processId = values[0]?._id\n\t\t\t\t\tconst currentPath = history.location.pathname\n\t\t\t\t\t// if(processId) history.push(currentPath + '/' + processId + \"/lot\")\n\t\t\t\t\t// history.push ('./../' + processId + \"/lot\")\n\t\t\t\t\thistory.replace ('/processes/' + processId + \"/lots\")\n\n\t\t\t\t}}\n\t\t\t\tpattern={null}\n\t\t\t\tlabelField={'name'}\n\t\t\t\tvalueField={\"_id\"}\n\t\t\t\tonDropdownOpen={() => {\n\t\t\t\t}}\n\t\t\t/>\n\n\n\n\t\t</styled.Container>\n\t)\n}\n\nexport default CardMenu\n","import styled, { css } from \"styled-components\";\nimport { Container } from \"react-smooth-dnd\";\n\n// export const RouteContainer = styled.div`\n//     display: flex;\n//     flex: 1;\n//     flex-direction: column;\n//     background: yellow;\n// `\n\nconst minHeight = \"10rem\"\nexport const RotatedRouteName = styled.span`\n// background: red;\n\ttransform: rotate(-90deg);\n\t// transform: translateY(50%);\n`\n\n\nexport const StationContainerCss = css`\n\tdisplay: flex;\n    flex-direction: column;\n    min-height: ${minHeight};\n    \n    width: ${props => props.isCollapsed ? \"2rem\" : \"15rem\"};\n    max-width: ${props => props.isCollapsed ? \"2rem\" : \"15rem\"};\n    min-width: ${props => props.isCollapsed ? \"2rem\" : \"15rem\"};\n    margin-right: 1rem;\n    \n    border-radius: 1rem;\n    overflow: hidden;\n    \n    color: ${props => props.theme.bg.octonary};\n`\n\nexport const StationContainer = styled.div`\n    ${StationContainerCss};\n`\n\nexport const StationHeader = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    justify-content: center;\n    align-items: center;\n    background: ${props => props.theme.bg.secondary};\n    padding: .5rem 1rem;\n`\n\nexport const HeaderRow = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    align-self: stretch;\n`\n\nexport const QuantityText = styled.span`\n    font-size: 1rem;\n    color: ${props => props.theme.textColor};\n`\n\nexport const HeaderContent = styled.div`\n    display: flex;\n    flex-direction: row;\n    width: 100%;\n    justify-content: space-between;\n    align-items: center;\n`\n\n\nexport const TitleContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n`\n\n\n\nexport const RouteContainer = styled.div`\n\tdisplay: flex;\n\tborder-bottom: 1px solid black;\n\twidth: 100%;\n`\n\nexport const LabelContainer = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\t// justify-content: space-between;\n`\n\nexport const StationLabel = styled.span`\n    text-align: center;\n    font-size: ${props => props.theme.fontSize.sz4};\n    border-bottom: 1px solid black;\n    width: 100%;\n    padding: .25rem;\n    background: ${props => props.theme.bg.senary};\n`\n\nexport const StationTitle = styled.span`\n    text-align: center;\n    font-size: ${props => props.theme.fontSize.sz3};\n    overflow: hidden;\n    text-overflow: ellipsis;\n    display: -webkit-box;\n    -webkit-line-clamp: 2; /* number of lines to show */\n    -webkit-box-orient: vertical;\n    color: ${props => props.theme.textColor};\n`\n\n\n\nexport const StationButton = styled.button`\n\n`\n\nexport const BodyContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\t// flex: 1;\n\tmin-height: ${minHeight};\n\toverflow: hidden;\n\tbackground: ${props => props.theme.bg.quaternary};\n\topacity: ${props => props.dragEnter ? 0.75 : 1};\n\tborder-bottom-right-radius: 1rem;\n\tborder-bottom-left-radius: 1rem;\n\tjustify-content: center;\n`\n\nexport const HeaderSection = styled.div`\n    display: flex;\n    flex-direction:row;\n    align-items: center;\n    width:100%;\n    justify-content: space-between;\n    /* position: absolute; */\n    /* right: 1rem; */\n\n`\n\nexport const HeaderSectionTitle = styled.h5`\n    text-align: center;\n    color: ${props => props.theme.bg.septenary};\n    font-family: ${props => props.theme.font.primary};\n`","import styled, { css } from \"styled-components\";\n\nconst minHeight = \"10rem\"\n\nexport const RotationWrapperOuter = styled.div`\n  display: table;\n`\n\nexport const RotationWrapperInner = styled.div`\n  padding: 50% 0;\n`\n\nexport const RotatedRouteName = styled.span`\n  display: block;\n  transform-origin: top left;\n  transform: rotate(90deg) translate(0, -110%); \n  margin-top: -50%;\n  max-width: 20rem;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`\n\nexport const StationContainerCss = css`\n\t\n`\n\nexport const StationContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    min-height: ${minHeight};\n    \n    width: ${props => props.isCollapsed ? \"2rem\" : props.maxWidth};\n    max-width: ${props => props.isCollapsed ? \"2rem\" : props.maxWidth};\n    min-width: ${props => props.isCollapsed ? \"2rem\" : props.maxWidth};\n    margin-right: 1rem;\n    max-height: ${props => props.maxHeight && props.maxHeight};\n    \n    border-radius: 0.5rem;\n    overflow: hidden;\n    \n    color: ${props => props.theme.bg.octonary};\n`\n\nexport const StationHeader = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    justify-content: center;\n    align-items: center;\n    background: ${props => props.theme.bg.secondary};   \n`\n\nexport const TitleContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n`\n\nexport const RouteContainer = styled.div`\n\tdisplay: flex;\n\tborder-bottom: 1px solid black;\n\twidth: 100%;\n`\n\nexport const StationLabel = styled.span`\n    text-align: center;\n    font-size: ${props => props.theme.fontSize.sz4};\n`\n\nexport const BodyContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tmin-height: ${minHeight};\n\toverflow: hidden;\n\tbackground: ${props => props.theme.bg.secondary};\n\topacity: ${props => props.dragEnter ? 0.75 : 1};\n\tborder-bottom-right-radius: 0.5rem;\n\tborder-bottom-left-radius: 0.5rem;\n\n  // border-left: 0.2rem solid ${props => props.theme.schema.lots.solid};\n  // border-bottom: 0.2rem solid ${props => props.theme.schema.lots.solid};\n  // border-right: 0.2rem solid ${props => props.theme.schema.lots.solid};\n\n\tjustify-content: center;\n`\n","import React, { useEffect, useRef, useState } from \"react\";\n\n// actions\nimport { putCard } from \"../../../../../../redux/actions/card_actions\";\nimport {\n\tsetDroppingLotId,\n\tsetLotHovering,\n\tsetDraggingLotId\n} from \"../../../../../../redux/actions/card_page_actions\";\n\n// components external\nimport { Draggable, Container } from 'react-smooth-dnd';\n\n// components internal\nimport Lot from \"../../lot/lot\";\n\n// functions external\nimport { useDispatch, useSelector } from \"react-redux\";\n\n// styles\nimport * as styled from \"./column.style\";\n\n/// utils\nimport { sortBy } from \"../../../../../../methods/utils/card_utils\";\nimport { immutableDelete, immutableReplace, isArray, isNonEmptyArray } from \"../../../../../../methods/utils/array_utils\";\nimport { getCustomFields } from \"../../../../../../methods/utils/lot_utils\";\nimport LotContainer from \"../../lot/lot_container\";\n\nconst Column = ((props) => {\n\n\tconst {\n\t\tstation_id,\n\t\tstationName = \"Unnamed\",\n\t\tonCardClick,\n\t\tselectedCards,\n\t\tprocessId,\n\t\tHeaderContent,\n\t\tisCollapsed,\n\t\tmaxWidth,\n\t\tmaxHeight,\n\t\tsortMode,\n\t\tsortDirection,\n\t\tsetSelectedCards\n\t} = props\n\n\t// redux state\n\tconst objects = useSelector(state => { return state.objectsReducer.objects })\n\tconst reduxCards = useSelector(state => { return state.cardsReducer.processCards[processId] }) || {}\n\tconst hoveringLotId = useSelector(state => { return state.cardPageReducer.hoveringLotId }) || null\n\tconst draggingLotId = useSelector(state => { return state.cardPageReducer.draggingLotId }) || null\n\n\tconst routes = useSelector(state => state.tasksReducer.tasks)\n\tconst stations = useSelector(state => state.stationsReducer.stations)\n\tconst processes = useSelector(state => state.processesReducer.processes)\n\n\t// console.log(shiftDetails)\n\n\t// actions\n\tconst dispatch = useDispatch()\n\tconst dispatchPutCard = async (card, ID) => await dispatch(putCard(card, ID))\n\tconst dispatchSetDroppingLotId = async (lotId, binId) => await dispatch(setDroppingLotId(lotId, binId))\n\tconst dispatchSetLotHovering = async (lotId) => await dispatch(setLotHovering(lotId))\n\tconst dispatchSetDraggingLotId = async (lotId) => await dispatch(setDraggingLotId(lotId))\n\n\t// component state\n\tconst [dragEnter, setDragEnter] = useState(false)\n\tconst [lotQuantitySummation, setLotQuantitySummation] = useState(0)\n\tconst [numberOfLots, setNumberOfLots] = useState(0)\n\tconst [cards, setCards] = useState([])\n\n\t// const [breaks, setBreaks] = useState([])\n\t// const [bottlneckCycleTime, setBottleneckCycleTime] = useState(0);\n\t// const [precedingQuantity, setPrecedingQuantity] = useState(0);\n\n\tuseEffect(() => {\n\t\tlet tempLotQuantitySummation = 0\n\t\tlet tempNumberOfLots = 0\n\t\tcards.forEach((currLot) => {\n\t\t\tconst {\n\t\t\t\tcount = 0\n\t\t\t} = currLot || {}\n\n\t\t\ttempNumberOfLots = parseInt(tempNumberOfLots) + 1\n\t\t\ttempLotQuantitySummation = parseInt(tempLotQuantitySummation) + parseInt(count)\n\t\t})\n\n\t\tsetNumberOfLots(tempNumberOfLots)\n\t\tsetLotQuantitySummation(tempLotQuantitySummation)\n\t}, [cards])\n\n\tconst [isSelectedCardsNotEmpty, setIsSelectedCardsNotEmpty] = useState(false)\n\n\tuseEffect(() => {\n\t\tsetIsSelectedCardsNotEmpty(isNonEmptyArray(selectedCards))\n\t}, [selectedCards])\n\n\tuseEffect(() => {\n\t\tif (sortMode) {\n\t\t\tlet tempCards = [...props.cards] // *** MAKE MODIFIABLE COPY OF CARDS TO ALLOW SORTING ***\n\t\t\tsortBy(tempCards, sortMode, sortDirection)\n\t\t\tsetCards(tempCards)\n\t\t}\n\t\telse {\n\t\t\tsetCards(props.cards)\n\t\t}\n\t}, [props.cards, sortMode, sortDirection])\n\n\n\tconst shouldAcceptDrop = (sourceContainerOptions, payload) => {\n\t\tconst {\n\t\t\tbinId,\n\t\t\tcardId,\n\t\t\tprocess_id: oldProcessId,\n\t\t\t...remainingPayload\n\t\t} = payload\n\n\t\tif (oldProcessId !== processId) return false\n\t\t// if(binId === station_id) return false\n\t\treturn true\n\t}\n\n\tconst onMouseEnter = (event, lotId) => {\n\t\tdispatchSetLotHovering(lotId)\n\t}\n\n\tconst onMouseLeave = (event) => {\n\t\tdispatchSetLotHovering(null)\n\t}\n\n\tconst getSelectedIndex = (lotId, binId) => {\n\t\treturn selectedCards.findIndex((currLot) => {\n\t\t\tconst {\n\t\t\t\tcardId: currLotId,\n\t\t\t\tbinId: currBinId\n\t\t\t} = currLot\n\n\t\t\treturn (lotId === currLotId) && (binId === currBinId)\n\t\t})\n\t}\n\n\tconst getIsSelected = (lotId, binId) => {\n\t\tconst existingIndex = getSelectedIndex(lotId, binId)\n\t\treturn (existingIndex !== -1)\n\t}\n\n\tconst getLastSelectedIndex = () => {\n\t\tlet addedIndex = -1\n\t\tfor (var i = selectedCards.length - 1; i >= 0; i--) {\n\t\t\tconst currLot = selectedCards[i]\n\t\t\tconst {\n\t\t\t\tbinId: currBinId\n\t\t\t} = currLot || {}\n\n\t\t\tif ((currBinId === station_id) && (i > addedIndex)) {\n\t\t\t\taddedIndex = i\n\t\t\t}\n\t\t}\n\n\t\treturn addedIndex\n\t}\n\n\tconst getLastSelected = () => {\n\t\tconst lastSelectedIndex = getLastSelectedIndex()\n\t\treturn selectedCards[lastSelectedIndex]\n\t}\n\n\tconst getIsLastSelected = (lotId) => {\n\t\tconst lastSelected = getLastSelected() || {}\n\t\tconst {\n\t\t\tcardId: currLotId,\n\t\t} = lastSelected\n\n\t\treturn lotId === currLotId\n\t}\n\n\tconst getBetweenSelected = (lotId) => {\n\t\tconst lastSelected = getLastSelected() || {}\n\t\tconst {\n\t\t\tcardId: lastSelectedLotId,\n\t\t} = lastSelected\n\n\t\tconst selectedIndex = cards.findIndex((currLot) => {\n\t\t\tconst {\n\t\t\t\tcardId: currLotId,\n\t\t\t\tbinId: currBinId\n\t\t\t} = currLot\n\n\t\t\treturn (lastSelectedLotId === currLotId) && (station_id === currBinId)\n\t\t})\n\n\t\tconst existingIndex = cards.findIndex((currLot) => {\n\t\t\tconst {\n\t\t\t\tcardId: currLotId,\n\t\t\t\tbinId: currBinId\n\t\t\t} = currLot\n\n\t\t\treturn (lotId === currLotId) && (station_id === currBinId)\n\t\t})\n\n\t\tif (selectedIndex === -1) {\n\t\t\treturn [cards[existingIndex]]\n\t\t}\n\t\telse if (selectedIndex < existingIndex) {\n\t\t\treturn cards.slice(selectedIndex, existingIndex + 1)\n\t\t}\n\t\telse {\n\t\t\treturn cards.slice(existingIndex, selectedIndex + 1).reverse()\n\t\t}\n\t}\n\n\tconst handleDrop = async (dropResult) => {\n\t\tconst { removedIndex, addedIndex, payload, element } = dropResult || {}\n\n\t\tif (payload === null) { //  No new button, only reorder\n\t\t\treturn\n\t\t} else {\n\t\t\tif (addedIndex !== null) {\n\t\t\t\tconst {\n\t\t\t\t\tbinId,\n\t\t\t\t\tcardId,\n\t\t\t\t\tcount,\n\t\t\t\t\t// process_id: oldProcessId,\n\t\t\t\t\t...remainingPayload\n\t\t\t\t} = payload\n\n\t\t\t\tawait dispatchSetDroppingLotId(cardId, binId)\n\n\t\t\t\tif (!(binId === station_id)) {\n\t\t\t\t\tconst droppedCard = reduxCards[cardId] ? reduxCards[cardId] : {}\n\n\t\t\t\t\tconst oldBins = droppedCard.bins ? droppedCard.bins : {}\n\t\t\t\t\tconst {\n\t\t\t\t\t\t[binId]: movedBin,\n\t\t\t\t\t\t...remainingOldBins\n\t\t\t\t\t} = oldBins || {}\n\n\t\t\t\t\tif (movedBin) {\n\t\t\t\t\t\t// already contains items in bin\n\t\t\t\t\t\tif (oldBins[station_id] && movedBin) {\n\n\t\t\t\t\t\t\t// handle updating lot\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tconst oldCount = parseInt(oldBins[station_id]?.count || 0)\n\t\t\t\t\t\t\t\tconst movedCount = parseInt(movedBin?.count || 0)\n\n\t\t\t\t\t\t\t\tawait dispatchPutCard({\n\t\t\t\t\t\t\t\t\t...remainingPayload,\n\t\t\t\t\t\t\t\t\tbins: {\n\t\t\t\t\t\t\t\t\t\t...remainingOldBins,\n\t\t\t\t\t\t\t\t\t\t[station_id]: {\n\t\t\t\t\t\t\t\t\t\t\t...oldBins[station_id],\n\t\t\t\t\t\t\t\t\t\t\tcount: oldCount + movedCount\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}, cardId)\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// handle updating selectedLots\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// current action is to remove lot from selectedLots if it is merged\n\t\t\t\t\t\t\t\tconst existingIndex = getSelectedIndex(cardId, binId)\n\t\t\t\t\t\t\t\tif (existingIndex !== -1) {\n\t\t\t\t\t\t\t\t\tsetSelectedCards(immutableDelete(selectedCards, existingIndex))\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// no items in bin\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// update lot\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tconst a = await dispatchPutCard({\n\t\t\t\t\t\t\t\t\t...remainingPayload,\n\t\t\t\t\t\t\t\t\tbins: {\n\t\t\t\t\t\t\t\t\t\t...remainingOldBins,\n\t\t\t\t\t\t\t\t\t\t[station_id]: {\n\t\t\t\t\t\t\t\t\t\t\t...movedBin,\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}, cardId)\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// update selectedLots\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// current action is to remove lot from selectedLots if it is merged\n\t\t\t\t\t\t\t\tconst existingIndex = getSelectedIndex(cardId, binId)\n\t\t\t\t\t\t\t\tif (existingIndex !== -1) {\n\t\t\t\t\t\t\t\t\tsetSelectedCards(immutableReplace(selectedCards, {\n\t\t\t\t\t\t\t\t\t\t...selectedCards[existingIndex],\n\t\t\t\t\t\t\t\t\t\tbinId: station_id\n\t\t\t\t\t\t\t\t\t}, existingIndex))\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tawait dispatchSetDroppingLotId(null, null)\n\t\t\t}\n\t\t}\n\t}\n\n\tconst renderCards = () => {\n\t\treturn (\n\t\t\t<styled.BodyContainer\n\t\t\t\tdragEnter={dragEnter}\n\t\t\t>\n\t\t\t\t<Container\n\t\t\t\t\tonDrop={async (DropResult) => {\n\t\t\t\t\t\tawait handleDrop(DropResult)\n\t\t\t\t\t\tsetDragEnter(false)\n\t\t\t\t\t}}\n\t\t\t\t\tshouldAcceptDrop={shouldAcceptDrop}\n\t\t\t\t\tgetGhostParent={() => document.body}\n\t\t\t\t\tonDragStart={(dragStartParams, b, c) => {\n\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\tisSource,\n\t\t\t\t\t\t\tpayload,\n\t\t\t\t\t\t\twillAcceptDrop\n\t\t\t\t\t\t} = dragStartParams\n\n\t\t\t\t\t\tif (isSource) {\n\t\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\t\tbinId,\n\t\t\t\t\t\t\t\tcardId\n\t\t\t\t\t\t\t} = payload\n\n\t\t\t\t\t\t\tdispatchSetDraggingLotId(cardId)\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t\tonDragEnd={(dragEndParams) => {\n\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\tisSource,\n\t\t\t\t\t\t} = dragEndParams\n\n\t\t\t\t\t\tif (isSource) {\n\t\t\t\t\t\t\tdispatchSetDraggingLotId(null)\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t\tonDragEnter={() => {\n\t\t\t\t\t\tsetDragEnter(true)\n\t\t\t\t\t}}\n\t\t\t\t\tonDragLeave={() => {\n\t\t\t\t\t\tsetDragEnter(false)\n\t\t\t\t\t}}\n\t\t\t\t\tonDropReady={(dropResult) => { }}\n\t\t\t\t\tgroupName=\"process-cards\"\n\t\t\t\t\tgetChildPayload={index =>\n\t\t\t\t\t\tcards[index]\n\t\t\t\t\t}\n\t\t\t\t\tstyle={{ overflow: \"auto\", height: \"100%\", padding: \"1rem 1rem 2rem 1rem\" }}\n\t\t\t\t>\n\t\t\t\t\t{cards.map((card, index) => {\n\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\t_id,\n\t\t\t\t\t\t\tcount = 0,\n\t\t\t\t\t\t\tleadTime,\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\tobject_id,\n\t\t\t\t\t\t\tcardId,\n\t\t\t\t\t\t\tflags,\n\t\t\t\t\t\t\tlotNumber,\n\t\t\t\t\t\t\ttotalQuantity,\n\t\t\t\t\t\t\tprocessName,\n\t\t\t\t\t\t\tlotTemplateId,\n\t\t\t\t\t\t\t...rest\n\t\t\t\t\t\t} = card\n\n\t\t\t\t\t\t// console.log(lotNumber, leadTime)\n\n\t\t\t\t\t\t// const templateValues = getCustomFields(lotTemplateId, card)\n\n\t\t\t\t\t\t// const lotName = lots[lot_id] ? lots[lot_id].name : null\n\t\t\t\t\t\t// const objectName = objects[object_id] ? objects[object_id].name : null\n\n\t\t\t\t\t\tconst isSelected = getIsSelected(cardId, station_id)\n\t\t\t\t\t\tconst isDragging = draggingLotId === cardId\n\t\t\t\t\t\tconst isHovering = hoveringLotId === cardId\n\n\t\t\t\t\t\tconst isLastSelected = getIsLastSelected(cardId)\n\n\t\t\t\t\t\t// const isSelected = (draggingLotId !== null) ? () : ()\n\t\t\t\t\t\tconst selectable = (hoveringLotId !== null) || (draggingLotId !== null) || isSelectedCardsNotEmpty\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Draggable\n\t\t\t\t\t\t\t\tkey={cardId}\n\t\t\t\t\t\t\t\tonMouseEnter={(event) => onMouseEnter(event, cardId)}\n\t\t\t\t\t\t\t\tonMouseLeave={onMouseLeave}\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<LotContainer\n\t\t\t\t\t\t\t\t\t\tglow={isLastSelected}\n\t\t\t\t\t\t\t\t\t\tisFocused={isDragging || isHovering}\n\t\t\t\t\t\t\t\t\t\tenableFlagSelector={true}\n\t\t\t\t\t\t\t\t\t\tselectable={selectable}\n\t\t\t\t\t\t\t\t\t\tisSelected={isSelected}\n\t\t\t\t\t\t\t\t\t\tkey={cardId}\n\t\t\t\t\t\t\t\t\t\t// processName={processName}\n\t\t\t\t\t\t\t\t\t\ttotalQuantity={totalQuantity}\n\t\t\t\t\t\t\t\t\t\tlotNumber={lotNumber}\n\t\t\t\t\t\t\t\t\t\tname={name}\n\t\t\t\t\t\t\t\t\t\tcount={count}\n\t\t\t\t\t\t\t\t\t\tleadTime={leadTime}\n\t\t\t\t\t\t\t\t\t\tid={cardId}\n\t\t\t\t\t\t\t\t\t\tflags={flags || []}\n\t\t\t\t\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\t\t\t\t\tlotId={cardId}\n\t\t\t\t\t\t\t\t\t\tbinId={station_id}\n\t\t\t\t\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\t\t\t\t\tconst payload = getBetweenSelected(cardId)\n\t\t\t\t\t\t\t\t\t\t\tonCardClick(\n\t\t\t\t\t\t\t\t\t\t\t\te,\n\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\tlotId: cardId,\n\t\t\t\t\t\t\t\t\t\t\t\t\tprocessId: processId,\n\t\t\t\t\t\t\t\t\t\t\t\t\tbinId: station_id\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\tpayload\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tcontainerStyle={{\n\t\t\t\t\t\t\t\t\t\t\tmarginBottom: \"0.5rem\",\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Draggable>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\n\t\t\t\t</Container>\n\t\t\t</styled.BodyContainer>\n\n\t\t)\n\t}\n\n\tif (isCollapsed) {\n\t\treturn (\n\t\t\t<styled.StationContainer\n\t\t\t\tmaxHeight={maxHeight}\n\t\t\t\tisCollapsed={isCollapsed}\n\t\t\t\tmaxWidth={maxWidth}\n\t\t\t>\n\t\t\t\t{HeaderContent(numberOfLots, lotQuantitySummation)}\n\n\t\t\t\t<styled.BodyContainer style={{\n\t\t\t\t\tpadding: \"1rem 0\",\n\t\t\t\t\twhiteSpace: \"nowrap\",\n\t\t\t\t\toverflow: \"hidden\",\n\t\t\t\t\ttextOverflow: \"ellipsis\",\n\n\t\t\t\t}}>\n\t\t\t\t\t<styled.RotationWrapperOuter>\n\t\t\t\t\t\t<styled.RotationWrapperInner>\n\t\t\t\t\t\t\t<styled.RotatedRouteName>{stationName}</styled.RotatedRouteName>\n\t\t\t\t\t\t</styled.RotationWrapperInner>\n\t\t\t\t\t</styled.RotationWrapperOuter>\n\t\t\t\t</styled.BodyContainer>\n\t\t\t</styled.StationContainer>\n\t\t)\n\t}\n\n\telse {\n\t\treturn (\n\t\t\t<styled.StationContainer\n\t\t\t\tisCollapsed={isCollapsed}\n\t\t\t\tmaxWidth={maxWidth}\n\t\t\t\tmaxHeight={maxHeight}\n\t\t\t>\n\t\t\t\t{HeaderContent(numberOfLots, lotQuantitySummation)}\n\n\t\t\t\t{renderCards()}\n\t\t\t</styled.StationContainer>\n\t\t)\n\t}\n\n})\n\nexport default Column","import React, { useState, useEffect } from \"react\";\nimport { SortableContainer } from \"react-sortable-hoc\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport moment from 'moment';\n\nimport * as styled from \"./station_column.style\";\n\n// Import Components\nimport TimePicker from \"rc-time-picker\";\nimport Button from '../../../../../basic/button/button'\nimport Column from \"../column/column\"\n\n// Import Actions\nimport { putStation } from '../../../../../../redux/actions/stations_actions'\n\n// Import Utils\nimport { deepCopy } from '../../../../../../methods/utils/utils'\n\nconst StationsColumn = ((props) => {\n    const {\n        station_id,\n        stationName = \"Unnamed\",\n        onCardClick,\n        cards = [],\n        processId,\n        maxHeight,\n        sortMode,\n        sortDirection,\n        selectedCards,\n        setSelectedCards\n    } = props\n\n    const dispatch = useDispatch()\n    const dispatchPutStation = async (station) => await dispatch(putStation(station))\n\n    const stations = useSelector(state => state.stationsReducer.stations)\n\n    const [isCollapsed, setCollapsed] = useState(false)\n    const [setTime, setSetTime] = useState(!!stations[station_id]?.cycle_time ? stations[station_id]?.cycle_time : '00:00:00')\n\n    const handleConvertMoment = (time) => {\n        const splitVal = time.split(':')\n        return moment().set({ 'hour': splitVal[0], 'minute': splitVal[1], 'second': splitVal[2] })\n    }\n\n    const handleSaveCycleTime = () => {\n        let station = deepCopy(stations[station_id])\n        station.cycle_time = setTime\n        dispatchPutStation(station)\n    }\n\n    const renderCycleTime = () => {\n        return (\n            <styled.HeaderSection>\n                <styled.HeaderSectionTitle>\n                    Cycle Time\n                </styled.HeaderSectionTitle>\n                <TimePicker\n                    showHours={true}\n                    showMinutes={true}\n                    // format={'HH:mm:ss'}\n                    defaultValue={handleConvertMoment(setTime)}\n                    // value={setTime}\n                    onChange={(val) => {\n                        setSetTime(val.format('HH:mm:ss'))\n                    }}\n                    style={{ width: '8rem' }}\n                    allowEmpty={false}\n                />\n                <Button\n                    label={'Save'}\n                    secondary\n                    onClick={() => {\n                        handleSaveCycleTime()\n                    }}\n                    schema={'lots'}\n                />\n\n            </styled.HeaderSection>\n        )\n    }\n\n    return (\n        <Column\n            setSelectedCards={setSelectedCards}\n            selectedCards={selectedCards}\n            sortDirection={sortDirection}\n            maxWidth={\"25rem\"}\n            sortMode={sortMode}\n            maxHeight={maxHeight}\n            HeaderContent={(numberOfLots = 0, lotQuantitySummation = 0) => {\n                if (isCollapsed) {\n                    return (\n                        <styled.StationHeader>\n                            <i className=\"fa fa-chevron-right\" aria-hidden=\"true\"\n                                onClick={() => setCollapsed(false)}\n                                style={{ cursor: 'pointer' }}\n                            />\n                        </styled.StationHeader>\n                    )\n                }\n                else {\n                    return (\n                        <styled.StationHeader>\n                            <styled.HeaderRow\n                                style={{\n                                    marginBottom: \"1rem\"\n                                }}\n                            >\n                                <i className=\"fa fa-chevron-down\" aria-hidden=\"true\"\n                                    onClick={() => setCollapsed(true)}\n                                    style={{ marginRight: \"1rem\", cursor: \"pointer\" }}\n                                />\n\n                                <styled.LabelContainer>\n                                    <styled.StationTitle>{stationName}</styled.StationTitle>\n                                </styled.LabelContainer>\n\n                                <i className=\"fas fa-ellipsis-h\" style={{ opacity: 0 }}></i>\n\n                            </styled.HeaderRow>\n\n                            <styled.HeaderRow>\n                                <div>\n                                    <styled.QuantityText>Lots: </styled.QuantityText>\n                                    <styled.QuantityText>{numberOfLots}</styled.QuantityText>\n                                </div>\n\n                                <div>\n                                    <styled.QuantityText>Total Quantity: </styled.QuantityText>\n                                    <styled.QuantityText>{lotQuantitySummation}</styled.QuantityText>\n                                </div>\n\n                            </styled.HeaderRow>\n                            {/* {renderCycleTime()} */}\n                        </styled.StationHeader>\n                    )\n                }\n            }}\n            station_id={station_id}\n            stationName={stationName}\n            onCardClick={onCardClick}\n            cards={cards}\n            processId={processId}\n            isCollapsed={isCollapsed}\n        />\n    )\n})\n\nexport default StationsColumn\n","import styled, { css } from \"styled-components\";\nimport {Container} from \"react-smooth-dnd\";\n\n// export const RouteContainer = styled.div`\n//     display: flex;\n//     flex: 1;\n//     flex-direction: column;\n//     background: yellow;\n// `\n\nconst minHeight = \"10rem\"\nexport const RotatedRouteName = styled.span`\n// background: red;\n\ttransform: rotate(-90deg);\n\t// transform: translateY(50%);\n`\n\n\nexport const StationContainerCss = css`\n\tdisplay: flex;\n    flex-direction: column;\n    min-height: ${minHeight};\n    \n    width: ${props => props.isCollapsed ? \"2rem\" : \"fit-content\"};\n    max-width: ${props => props.isCollapsed ? \"2rem\" : \"fit-content\"};\n    min-width: ${props => props.isCollapsed ? \"2rem\" : \"fit-content\"};\n    margin-right: 1rem;\n    \n    border-radius: 1rem;\n    overflow: hidden;\n    \n    color: ${props => props.theme.bg.octonary};\n`\n\nexport const StationContainer = styled.div`\n    ${StationContainerCss};\n`\n\nexport const StationHeader = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    justify-content: center;\n    align-items: center;\n    background: ${props => props.theme.bg.secondary};\n    padding: 0.5rem 1rem;\n`\n\nexport const HeaderRow = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    align-self: stretch;\n`\n\nexport const QuantityText = styled.span`\n    font-size: 1rem;\n    color: ${props => props.theme.textColor};\n\n`\n\n\nexport const TitleContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n`\n\n\n\nexport const RouteContainer = styled.div`\n\tdisplay: flex;\n\tborder-bottom: 1px solid black;\n\twidth: 100%;\n`\n\nexport const LabelContainer = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n    margin: 0 2rem;\n\t// justify-content: space-between;\n`\n\nexport const StationLabel = styled.span`\n    text-align: center;\n    margin-right: 1rem;\n    \n    font-size: ${props => props.theme.fontSize.sz3};\n`\n\nexport const StationTitle = styled.span`\n    text-align: center;\n    font-size: ${props => props.theme.fontSize.sz3};\n    color: ${props => props.theme.textColor};\n`\n\n\n\nexport const StationButton = styled.button`\n\n`\n\nexport const BodyContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\t// flex: 1;\n\tmin-height: ${minHeight};\n\toverflow: hidden;\n\tbackground: ${props => props.theme.bg.quaternary};\n\topacity: ${props => props.dragEnter ? 0.75 : 1};\n\tborder-bottom-right-radius: 1rem;\n\tborder-bottom-left-radius: 1rem;\n\tjustify-content: center;\n`\n","import React, {useState} from \"react\";\n\n// functions external\nimport PropTypes from 'prop-types';\n\n// components internal\nimport Column from \"../column/column\";\nimport Button from \"../../../../../basic/button/button\";\n\nimport * as styled from \"./lot_queue.style\";\n\nconst LotQueue = ((props) => {\n\tconst {\n\t\tstation_id = \"QUEUE\",\n\t\tstationName = \"Unnamed\",\n\t\tonCardClick,\n\t\tcards,\n\t\tonAddLotClick,\n\t\tprocessId,\n\t\tsetShowCardEditor,\n\t\tshowCardEditor,\n\t\tmaxHeight,\n\t\tsortMode,\n\t\tsortDirection,\n\t\tselectedCards,\n\t\tsetSelectedCards\n\t} = props\n\n\tconst [isCollapsed, setCollapsed] = useState(false)\n\n\treturn(\n\t\t<Column\n\t\t\tsetSelectedCards={setSelectedCards}\n\t\t\tselectedCards={selectedCards}\n\t\t\tsortDirection={sortDirection}\n\t\t\tsortMode={sortMode}\n\t\t\tmaxHeight={maxHeight}\n\t\t\tmaxWidth={\"24rem\"}\n\t\t\tHeaderContent={(numberOfLots = 0, lotQuantitySummation = 0) => {\n\t\t\t\tif(isCollapsed) {\n\t\t\t\t\treturn(\n\t\t\t\t\t\t<styled.StationHeader>\n\t\t\t\t\t\t\t<i className=\"fa fa-chevron-right\" aria-hidden=\"true\"\n\t\t\t\t\t\t\t   onClick={() => setCollapsed(false)}\n\t\t\t\t\t\t\t\t style = {{cursor: \"pointer\"}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</styled.StationHeader>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\treturn(\n\t\t\t\t\t\t<styled.StationHeader>\n\t\t\t\t\t\t\t<styled.HeaderRow\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tmarginBottom: \"1rem\"\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<i className=\"fa fa-chevron-down\" aria-hidden=\"true\"\n\t\t\t\t\t\t\t\t   onClick={() => setCollapsed(true)}\n\t\t\t\t\t\t\t\t\t style = {{cursor: \"pointer\"}}\n\n\t\t\t\t\t\t\t\t/>\n\n\n\t\t\t\t\t\t\t\t<styled.LabelContainer>\n\t\t\t\t\t\t\t\t\t<styled.StationTitle>{stationName}</styled.StationTitle>\n\t\t\t\t\t\t\t\t</styled.LabelContainer>\n\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tonClick={onAddLotClick}\n\t\t\t\t\t\t\t\t\tschema={'lots'}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t+ Lot\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</styled.HeaderRow>\n\t\t\t\t\t\t\t<styled.HeaderRow\n\t\t\t\t\t\t\t\tstyle={{justifyContent: \"space-between\"}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<styled.QuantityText>Lots: </styled.QuantityText>\n\t\t\t\t\t\t\t\t\t<styled.QuantityText>{numberOfLots}</styled.QuantityText>\n\t\t\t\t\t\t\t\t</div>\n\n\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<styled.QuantityText>Total Quantity: </styled.QuantityText>\n\t\t\t\t\t\t\t\t\t<styled.QuantityText>{lotQuantitySummation}</styled.QuantityText>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</styled.HeaderRow>\n\n\t\t\t\t\t\t</styled.StationHeader>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}}\n\t\t\tstation_id={station_id}\n\t\t\tstationName = {stationName}\n\t\t\tonCardClick={onCardClick}\n\t\t\tcards = {cards}\n\t\t\tprocessId={processId}\n\t\t\tisCollapsed={isCollapsed}\n\t\t/>\n\t)\n\n\n})\n\n// Specifies propTypes\nLotQueue.propTypes = {\n\tstationName: PropTypes.string,\n\tonCardClick: PropTypes.func,\n\tonAddLotClick: PropTypes.func,\n\tsetShowCardEditor: PropTypes.func,\n\tshowCardEditor: PropTypes.bool\n};\n\n// Specifies the default values for props:\nLotQueue.defaultProps = {\n\tstationName: \"Unnamed\",\n\tonCardClick: ()=>{},\n\tonAddLotClick: ()=>{},\n\tcards: [],\n\tsetShowCardEditor: ()=>{},\n\tshowCardEditor: false\n};\n\nexport default LotQueue\n","import styled, { css } from \"styled-components\";\nimport {Container} from \"react-smooth-dnd\";\n\n// export const RouteContainer = styled.div`\n//     display: flex;\n//     flex: 1;\n//     flex-direction: column;\n//     background: yellow;\n// `\n\nconst minHeight = \"10rem\"\nexport const RotatedRouteName = styled.span`\n// background: red;\n\ttransform: rotate(-90deg);\n\t// transform: translateY(50%);\n`\n\n\nexport const StationContainerCss = css`\n\tdisplay: flex;\n    flex-direction: column;\n    min-height: ${minHeight};\n    \n    width: ${props => props.isCollapsed ? \"2rem\" : \"15rem\"};\n    max-width: ${props => props.isCollapsed ? \"2rem\" : \"15rem\"};\n    min-width: ${props => props.isCollapsed ? \"2rem\" : \"15rem\"};\n    margin-right: 1rem;\n    \n    border-radius: 1rem;\n    overflow: hidden;\n    \n    color: ${props => props.theme.bg.octonary};\n`\n\nexport const StationContainer = styled.div`\n    ${StationContainerCss};\n`\n\nexport const StationHeader = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    justify-content: center;\n    align-items: center;\n    background: ${props => props.theme.bg.secondary};\n    padding: .5rem 1rem;\n`\n\nexport const HeaderRow = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    align-self: stretch;\n`\n\nexport const QuantityText = styled.span`\n    font-size: 1rem;\n    color: ${props => props.theme.textColor};\n`\n\nexport const HeaderContent = styled.div`\n    display: flex;\n    flex-direction: row;\n    width: 100%;\n    justify-content: space-between;\n    align-items: center;\n    padding-left: 1rem;\n    padding-right: 1rem;\n \n \n`\n\n\nexport const TitleContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n`\n\n\n\nexport const RouteContainer = styled.div`\n\tdisplay: flex;\n\tborder-bottom: 1px solid black;\n\twidth: 100%;\n`\n\nexport const LabelContainer = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\t// justify-content: space-between;\n`\n\nexport const StationLabel = styled.span`\n    text-align: center;\n    font-size: ${props => props.theme.fontSize.sz4};\n`\n\nexport const StationTitle = styled.span`\n    text-align: center;\n    font-size: ${props => props.theme.fontSize.sz3};\n    color: ${props => props.theme.textColor};\n`\n\n\n\nexport const StationButton = styled.button`\n\n`\n\nexport const BodyContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\t// flex: 1;\n\tmin-height: ${minHeight};\n\toverflow: hidden;\n\tbackground: ${props => props.theme.bg.quaternary};\n\topacity: ${props => props.dragEnter ? 0.75 : 1};\n\tborder-bottom-right-radius: 1rem;\n\tborder-bottom-left-radius: 1rem;\n\tjustify-content: center;\n`\n","import {SortableContainer} from \"react-sortable-hoc\";\n\nimport * as styled from \"./finish_column.style\";\n\nimport React, {useState} from \"react\";\n\nimport Column from \"../column/column\"\n\nconst FinishColumn = ((props) => {\n\tconst {\n\t\tstation_id,\n\t\tstationName = \"Unnamed\",\n\t\tonCardClick,\n\t\tcards = [],\n\t\tprocessId,\n\t\tmaxHeight,\n\t\tsortMode,\n\t\tsortDirection,\n\t\tselectedCards,\n\t\tsetSelectedCards\n\t} = props\n\n\tconst [isCollapsed, setCollapsed] = useState(false)\n\n\treturn(\n\t\t<Column\n\t\t\tsetSelectedCards={setSelectedCards}\n\t\t\tselectedCards={selectedCards}\n\t\t\tsortDirection={sortDirection}\n\t\t\tmaxHeight={maxHeight}\n\t\t\tsortMode={sortMode}\n\t\t\tmaxWidth={\"24rem\"}\n\t\t\tHeaderContent={(numberOfLots = 0, lotQuantitySummation = 0)=>{\n\t\t\t\tif(isCollapsed) {\n\t\t\t\t\treturn(\n\t\t\t\t\t\t<styled.StationHeader>\n\t\t\t\t\t\t\t<i className=\"fa fa-chevron-right\" aria-hidden=\"true\"\n\t\t\t\t\t\t\t   onClick={() => setCollapsed(false)}\n\t\t\t\t\t\t\t\t style = {{cursor: \"pointer\"}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</styled.StationHeader>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn(\n\t\t\t\t\t\t<styled.StationHeader>\n\t\t\t\t\t\t\t<styled.HeaderRow style={{\n\t\t\t\t\t\t\t\tmarginBottom: \"1rem\"\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t<i className=\"fa fa-chevron-down\" aria-hidden=\"true\"\n\t\t\t\t\t\t\t\t   onClick={() => setCollapsed(true)}\n\t\t\t\t\t\t\t\t\t style = {{cursor: \"pointer\"}}\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t<styled.LabelContainer>\n\n\t\t\t\t\t\t\t\t\t<styled.StationTitle>{stationName}</styled.StationTitle>\n\t\t\t\t\t\t\t\t</styled.LabelContainer>\n\n\t\t\t\t\t\t\t\t<i className=\"fas fa-ellipsis-h\" style={{opacity: 0}}></i>\n\t\t\t\t\t\t\t</styled.HeaderRow>\n\n\t\t\t\t\t\t\t<styled.HeaderRow>\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<styled.QuantityText>Lots: </styled.QuantityText>\n\t\t\t\t\t\t\t\t\t<styled.QuantityText>{numberOfLots}</styled.QuantityText>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<styled.QuantityText>Total Quantity: </styled.QuantityText>\n\t\t\t\t\t\t\t\t\t<styled.QuantityText>{lotQuantitySummation}</styled.QuantityText>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</styled.HeaderRow>\n\t\t\t\t\t\t</styled.StationHeader>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}}\n\t\t\tstation_id={station_id}\n\t\t\tstationName = {stationName}\n\t\t\tonCardClick={onCardClick}\n\t\t\tcards = {cards}\n\t\t\tprocessId={processId}\n\t\t\tisCollapsed={isCollapsed}\n\t\t/>\n\t)\n\n\n})\n\nexport default FinishColumn\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  // max-height: ${props => props.maxHeight};\n  display: flex;\n  flex-direction: row;\n  padding: 1rem;\n  justify-content:  flex-start;\n`","import React, { useEffect, useState, memo } from \"react\"\nimport moment from 'moment';\n\n// components internal\nimport StationsColumn from \"../columns/station_column/station_column\"\nimport LotQueue from \"../columns/lot_queue/lot_queue\"\nimport FinishColumn from \"../columns/finish_column/finish_column\"\n\n// functions external\nimport { useDispatch, useSelector } from \"react-redux\"\nimport PropTypes from \"prop-types\"\n\n// utils\nimport { getLotTotalQuantity, getMatchesFilter, getCardsInBin } from \"../../../../../methods/utils/lot_utils\";\nimport { getLoadStationId, getUnloadStationId } from \"../../../../../methods/utils/route_utils\";\nimport { getProcessStationsSorted } from '../../../../../methods/utils/processes_utils';\nimport { convertShiftDetailsToWorkingTime } from '../../../../../methods/utils/time_utils'\n\n// styles\nimport * as styled from \"./card_zone.style\"\nimport { isObject } from \"../../../../../methods/utils/object_utils\";\nimport { isArray } from \"../../../../../methods/utils/array_utils\";\nimport { LOT_FILTER_OPTIONS, SORT_DIRECTIONS } from \"../../../../../constants/lot_contants\";\n\n// Import Actions\nimport { getStationAnalytics } from '../../../../../redux/actions/stations_actions'\n\n\nconst CardZone = ((props) => {\n\n    // extract props\n    const {\n        handleCardClick,\n        processId,\n        setShowCardEditor,\n        showCardEditor,\n        maxHeight,\n        lotFilterValue,\n        selectedFilterOption,\n        sortMode,\n        sortDirection,\n        selectedCards,\n        setSelectedCards,\n        handleAddLotClick,\n    } = props\n\n    // redux state\n    const currentProcess = useSelector(state => { return state.processesReducer.processes[processId] }) || {}\n    const routes = useSelector(state => { return state.tasksReducer.tasks })\n    const allCards = useSelector(state => { return state.cardsReducer.processCards }) || {}\n    const stations = useSelector(state => { return state.stationsReducer.stations })\n    const draggedLotInfo = useSelector(state => { return state.cardPageReducer.droppedLotInfo })\n    const { shiftDetails } = useSelector(state => state.settingsReducer.settings)\n    const {\n        lotId: draggingLotId = \"\",\n        binId: draggingBinId = \"\"\n    } = draggedLotInfo || {}\n\n    // component state\n    const [cardsSorted, setCardsSorted] = useState({})\n    const [bins, setBins] = useState({})\n    const [queue, setQueue] = useState([])\n    const [finished, setFinished] = useState([])\n    const [cards, setCards] = useState({})\n    const [deleteStationCycleTime, setDeleteStationCycleTime] = useState({})\n\n    const {\n        name: processName = \"\"\n    } = currentProcess || {}\n\n    // const [cardsSorted, setCardsSorted] = useState({})\n    // const [queue, setQueue] = useState([])\n    // const [finished, setFinished] = useState([])\n\n    // ============================== LEAD TIME ESTIMATION ====================================== //\n    const convertShiftDetails = (details) => {\n\n        let breaks = [{\n            start: moment.duration(0).asSeconds(),\n            end: moment.duration(details.startOfShift).asSeconds()\n        }];\n        Object.values(shiftDetails.breaks)\n            .sort((a, b) => a.startOfBreak - b.startOfBreak)\n            .forEach(br => {\n                if (br.enabled) {\n                    breaks.push({\n                        start: moment.duration(br.startOfBreak).asSeconds(),\n                        end: moment.duration(br.endOfBreak).asSeconds()\n                    })\n                }\n            })\n\n        breaks.push({\n            start: moment.duration(details.endOfShift).asSeconds(),\n            end: moment.duration(24, 'hours').asSeconds()\n        })\n\n        return breaks;\n\n    }\n\n    const addWeekdays = (date, days) => {\n        date = moment(date); // use a clone\n        while (days > 0) {\n            date = date.add(1, 'days');\n            // decrease \"days\" only if it's a weekday.\n            if (date.isoWeekday() !== 6 && date.isoWeekday() !== 7) {\n                days -= 1;\n            }\n        }\n        return date;\n    }\n\n    useEffect(() => {\n        deleteGetCycleTimes()\n\n    }, [shiftDetails, allCards])\n\n    const deleteGetCycleTimes = async () => {\n        // Get stations in this process\n        let processStations = getProcessStationsSorted(currentProcess, routes);\n        const body = { timespan: 'day', index: 0 }\n        const workingTime = convertShiftDetailsToWorkingTime(shiftDetails)\n\n        let stationCycleTimes = {}\n\n        for (const ind in processStations) {\n            const stationID = processStations[ind]\n            const response = await getStationAnalytics(stationID, body)\n            // dataPromise.then(response => {\n\n            const throughput = response.throughPut\n            let sum = 0\n            throughput.forEach((dataPoint) => {\n                if (!!dataPoint.null) {\n                    sum += dataPoint?.null\n                }\n            })\n\n            stationCycleTimes =\n            {\n                ...stationCycleTimes,\n                [stationID]: sum != 0 ? workingTime / sum : 0,\n\n            }\n            // })\n        }\n        setDeleteStationCycleTime(stationCycleTimes)\n    }\n\n    useEffect(() => {\n        // === Calculate preceding lead time based on cards in later stations\n\n        // Get stations in this process\n        let processStations = getProcessStationsSorted(currentProcess, routes);\n        processStations.unshift(\"QUEUE\")\n\n        // Get cards in this process\n        const processCards = allCards[processId] || {};\n\n        // Convert the shiftDetails object to an array of [startShift, shiftDuration] pairs for a single day\n        const breaks = convertShiftDetails(shiftDetails);\n\n        // ================================================== //\n        //// Simulate all card movements to determine lead time\n\n        // Gather cards in this process and organize them by station\n        let i, stationCards, stationSimCards, stationCycleTime;\n        let stationTimesUntilMove = new Array(processStations.length);\n        let pStationSimCards = [];\n        for (i = 0; i < processStations.length; i++) {\n            stationCards = getCardsInBin(processCards || {}, processStations[i], processId)\t// Get all cards in this station's bin\n            stationSimCards = stationCards.map(card => ({\n                _id: card._id,\n                qty: card.bins[processStations[i]].count\n            }));\n            pStationSimCards.push(stationSimCards);\n\n            if (stationSimCards.length) {\n                stationCycleTime = deleteStationCycleTime[stations[processStations[i]]?._id] || 0;\n                stationTimesUntilMove[i] = stationSimCards[0].qty * stationCycleTime;\n            } else {\n                stationTimesUntilMove[i] = Infinity;\n            }\n\n        }\n\n        // Simulate card movements:\n        //\n        // === Algorithm Definition === //\n        // currSimTime = 0\n        // pStationSimCards = cards\n        // cardsToBeMoved = []\n        // while there are cards in pStationSimCards\n        //     nextSimStep = Inf\n        //     for each station in processStations\n        //         card = firstCardAtStation\n        //         if card is in cardsToBeMoved, move it to next station. If station is last station, remove card from simCards and set leadTime in real cards\n        //\t\t   calculate timeUntilCardMove = time until card will move to next station (qty*cycleT)\n        //         if timeUntilCardMove < nextSimStep, cardsToBeMoved = [card], nextSimStep = timeUntilCardMove\n        //         else if timeUntilCardMove == nextSimStep, cardsToBeMoved.push(card)\n        //\t\tcurrSimTime += nextSimStep\t\t\n        //\n\n        let currSimTime = 0;\n        let simStep = 0;\n        let topCard, minTimeUntilMove, nextCardsToBeMoved, tempStationCards;\n        let cardsToBeMoved = [];\n        let totalSimCards = pStationSimCards.reduce((acc, elem) => acc + elem.length, 0);\n\n        while (totalSimCards > 0) {\n\n            currSimTime += simStep\n\n            totalSimCards = 0;\n            nextCardsToBeMoved = [];\n            minTimeUntilMove = Infinity;\n            for (i = 0; i < pStationSimCards.length; i++) {\n                stationCards = pStationSimCards[i];\n\n                if (!stationCards.length) { stationTimesUntilMove[i] = Infinity; continue }\n                totalSimCards += stationCards.length;\n\n                topCard = stationCards[0];\n\n                if (cardsToBeMoved[0] === i) {\n                    if (i === (pStationSimCards.length - 1)) {\n                        processCards[topCard._id].leadTime = currSimTime; // If card is at last station, currSimTime is its lead time\n                    } else {\n                        pStationSimCards[i + 1].push(topCard);\t// Move card to next station\n\n                        //// Since we moved a card, we now need to calculate the nextMoveTime for THAT next station\n                        topCard = pStationSimCards[i + 1][0];\n                        stationCycleTime = deleteStationCycleTime[stations[processStations[i]]?._id] || 0;\n                        // This is a little hacky, buuuut in the next itt we will subtract simStep so i added it back here to offset that.\n                        stationTimesUntilMove[i + 1] = (topCard.qty * stationCycleTime) + simStep;\n                    }\n\n                    cardsToBeMoved.shift(); // Remove card from list of cards to be moved\n\n                    //// Remove card from current station\n                    tempStationCards = pStationSimCards[i];\n                    tempStationCards.shift();\n                    pStationSimCards[i] = tempStationCards;\n\n                    //// Now that card has been moved, calculate time until move for THIS station (based on remaining cards)\n                    if (!pStationSimCards[i].length) { stationTimesUntilMove[i] = Infinity; continue }\n                    topCard = pStationSimCards[i][0];\n                    stationCycleTime = deleteStationCycleTime[stations[processStations[i]]?._id] || 0;\n                    stationTimesUntilMove[i] = topCard.qty * stationCycleTime;\n\n                } else {\n                    // If card has not been moved, reduce the timeUntilMove by the simulation timestep\n                    stationTimesUntilMove[i] -= simStep\n                }\n\n                //// Determine next column where card should be moved from (this determines sim step)\n                if (stationTimesUntilMove[i] < minTimeUntilMove) {\n                    minTimeUntilMove = stationTimesUntilMove[i];\n                    nextCardsToBeMoved = [i];\n                } else if (stationTimesUntilMove[i] === minTimeUntilMove) {\n                    nextCardsToBeMoved.push(i);\n                }\n\n            }\n\n            cardsToBeMoved = nextCardsToBeMoved;\n            simStep = minTimeUntilMove;\n\n            // console.log(itt, totalSimCards, pStationSimCards.map(stationCards => stationCards.map(card => processCards[card._id].name)), currSimTime, simStep)\n\n        }\n\n        // ================================================== //\n        //// Determine if now is during a break of a shift. Adjust the starting offsets accordingly\n        // NOTE: leadTimeWorkingSeconds keeps track of the ~active~ seconds for that lot, and is subtracted from till 0 for each loop of a shift\n        // NOTE: leadTimeSeconds is the actual seconds of lead time including breaks and weekends. It is added to as workingSeconds is subtracted\n\n        const nowSeconds = moment.duration(moment({}).format(\"HH:mm:ss\")).asSeconds();\n        let leadTimeWorkingSecondsOffset, leadTimeSecondsOffset, brStartIdx, isBreak;\n        for (let i = 0; i < breaks.length; i++) {\n            if (breaks[i].start > nowSeconds) { // Now is in middle of shift, add remaining shift to leadTime and remove from workingTime\n                leadTimeWorkingSecondsOffset = -(breaks[i].start - nowSeconds);\n                leadTimeSecondsOffset = breaks[i].start - nowSeconds;\n\n                isBreak = false;\n                brStartIdx = i;\n                break;\n            } else if (breaks[i].end > nowSeconds) { // Now is in middle of break, add remaining break to leadTime\n                leadTimeWorkingSecondsOffset = 0;\n                leadTimeSecondsOffset = breaks[i].end - nowSeconds;\n\n                isBreak = true;\n                brStartIdx = (i + 1) % breaks.length;\n                break;\n            }\n        }\n\n        // ================================================== //\n        //// Calculate lead time for each card\n\n        const cardsWLeadTime = Object.values(processCards).map((card, index) => {\n            const {\n                _id,\n                count = 0,\n                name,\n                bins\n            } = card;\n\n            if (Object.keys(bins).includes(\"FINISH\")) { return card }\n\n            // Calculate lead time\n            // NOTE: leadTimeWorkingSeconds keeps track of the ~active~ seconds for that lot, and is subtracted from till 0 for each loop of a shift\n            // NOTE: leadTimeSeconds is the actual seconds of lead time including breaks and weekends. It is added to as workingSeconds is subtracted\n            let leadTimeWorkingSeconds = card.leadTime;\n            let leadTimeSeconds = isBreak ? leadTimeSecondsOffset : Math.min(leadTimeSecondsOffset, leadTimeWorkingSeconds); // might not even need to go past end of this (current) shift\n            leadTimeWorkingSeconds += leadTimeWorkingSecondsOffset;\n\n            let shiftStart, shiftEnd, shiftDuration;\n            let brIdx = brStartIdx;\n            while (leadTimeWorkingSeconds > 0) {\n\n                // Break time always added\n                leadTimeSeconds += breaks[brIdx].end - breaks[brIdx].start;\n\n                // Working time (time in between breaks)\n                shiftStart = breaks[brIdx].end % 86400; // Mod 86400 wraps shifts overnight\n                brIdx = (brIdx + 1) % breaks.length;\n                shiftEnd = breaks[brIdx].start;\n\n                shiftDuration = Math.min(shiftEnd - shiftStart, leadTimeWorkingSeconds);\n                leadTimeSeconds += shiftDuration;\n                leadTimeWorkingSeconds -= shiftDuration;\n\n            }\n\n            const leadDays = Math.floor(leadTimeSeconds / 86400);\n            const leadSeconds = leadTimeSeconds - (leadDays * 86400);\n            let leadTime = isNaN(leadTimeSeconds) ? null : moment().add(leadTimeSeconds, 'seconds'); // Lead time relative to now\n            // leadTime = leadTime.minute() || leadTime.second() || leadTime.millisecond() ? leadTime.add(1, 'hour').startOf('hour') : leadTime.startOf('hour'); // Round up to hour\n            const formattedLeadTime = leadTime.format('lll') // Format lead time\n\n            return { ...card, leadTime: formattedLeadTime }\n\n        })\n\n        setCards(cardsWLeadTime || {})\n\n    }, [shiftDetails, allCards])\n\n    // need to loop through the process's routes first and get all station ids involved in the process\n    // this must be done first in order to avoid showing lots that are in stations that are no longer a part of the process\n    useEffect(() => {\n        let prevLoadStationId\t\t// tracks previous load station id when looping through routes\n        let prevUnloadStationId\t\t// tracks previous unload station id when looping through routes\n        let tempBins = {}\t// temp var for storing sorted cards\n\n        // loop through routes, get load / unload station id and create entry in tempCardsSorted for each station\n        currentProcess.routes && currentProcess.routes.forEach((currRouteId, index) => {\n\n            // get current route and load / unload station ids\n            const currRoute = routes[currRouteId]\n            const loadStationId = getLoadStationId(currRoute)\n            const unloadStationId = getUnloadStationId(currRoute)\n\n            // only add loadStation entry if the previous unload wasn't identical (in order to avoid duplicates)\n            if (prevUnloadStationId !== loadStationId) {\n\n                // add entry in tempCardsSorted\n                tempBins[loadStationId] = {\n                    station_id: loadStationId,\n                    cards: []\n                }\n            }\n\n            // add entry in tempCardsSorted\n            tempBins[unloadStationId] = {\n                station_id: unloadStationId,\n                cards: []\n            }\n\n            // update prevLoadStationId and prevUnloadStationId\n            prevLoadStationId = loadStationId\n            prevUnloadStationId = unloadStationId\n        })\n\n        setBins(tempBins)\n\n    }, [currentProcess, routes])\n\n\n    // now that the object keys have been made, loop through the process's cards and add them to the correct bins\n    useEffect(() => {\n        let tempQueue = []\t\t// temp var for storing queue lots\n        let tempFinished = []\t// temp var for storing finished lots\n        let tempCardsSorted = { ...bins }\n\n        Object.values(cards).forEach((card) => {\n\n            // extract lot attributes\n            const {\n                bins: cardBins,\n                _id,\n                ...rest\n            } = card\n\n            const totalQuantity = getLotTotalQuantity(card)\n\n            const matchesFilter = getMatchesFilter(card, lotFilterValue, selectedFilterOption)\n\n            if (cardBins && matchesFilter) {\n\n                // loop through this lot's bins\n                Object.entries(cardBins).forEach((binEntry) => {\n\n                    // get bin attributes\n                    const binId = binEntry[0]\n                    const binValue = binEntry[1]\n                    const {\n                        count\n                    } = binValue\n\n                    if (!(count > 0)) return\n\n                    // don't render lot being dragged - prevents flicker bug after drop\n                    if ((binId === draggingBinId) && (_id === draggingLotId)) return\n\n                    const lotItem = {\n                        ...rest,\n                        totalQuantity,\n                        binId,\n                        count,\n                        cardId: _id,\n                        processName\n                    }\n\n                    // if there is an entry in tempCardsSorted with key matching {binId}, add the lot to this bin\n                    if (bins[binId]) {\n                        // tempCardsSorted[binId].cards.push(lotItem)\n                        const currentObj = isObject(tempCardsSorted[binId]) ? tempCardsSorted[binId] : {}\n                        const existingCards = (isArray(currentObj.cards)) ? currentObj.cards : []\n\n                        tempCardsSorted = {\n                            ...tempCardsSorted,\n                            [binId]: {\n                                ...currentObj,\n                                cards: [...existingCards, lotItem]\n                            }\n                        }\n                    }\n\n                    // if {binId} is queue, add the lot to the queue\n                    else if (binId === \"QUEUE\") {\n                        tempQueue.push(lotItem)\n                    }\n\n                    // if the {binId} is finish, add the lot to the finished column\n                    else if (binId === \"FINISH\") {\n                        tempFinished.push(lotItem)\n                    }\n\n                })\n            }\n        })\n\n        setCardsSorted(tempCardsSorted)\n        setQueue(tempQueue)\n        setFinished(tempFinished)\n    }, [bins, cards, lotFilterValue, selectedFilterOption, draggingBinId, draggingLotId])\n\n    /*\n    * Renders a {StationColumn} for each entry in {cardsSorted}\n    *\n    * */\n    const renderStationColumns = () => {\n\n        // loop through each entry in {cardsSorted} and return a {StationsColumn}\n        return Object.values(cardsSorted).map((obj, index) => {\n\n            // extract attributes of current bin\n            const {\n                station_id,\n                route_id,\n                cards: cardsArr\n            } = obj\n\n            // get current station attributes from {station_id} and redux state\n            const currStation = stations[station_id]\n            const {\n                name: stationName\n            } = currStation || {}\n\n            return (\n                <StationsColumn\n                    setSelectedCards={setSelectedCards}\n                    selectedCards={selectedCards}\n                    sortMode={sortMode}\n                    sortDirection={sortDirection}\n                    maxHeight={maxHeight}\n                    key={station_id + index}\n                    id={route_id + \"+\" + station_id}\n                    station_id={station_id}\n                    stationName={stationName}\n                    processId={processId}\n                    route_id={route_id}\n                    cards={cardsArr}\n                    onCardClick={handleCardClick}\n                />\n            )\n        })\n    }\n\n    return (\n        <styled.Container style={{ background: 'white' }}>\n            <LotQueue\n                setSelectedCards={setSelectedCards}\n                selectedCards={selectedCards}\n                key={\"QUEUE\"}\n                sortMode={sortMode}\n                sortDirection={sortDirection}\n                maxHeight={maxHeight}\n                station_id={\"QUEUE\"}\n                setShowCardEditor={setShowCardEditor}\n                showCardEditor={showCardEditor}\n                stationName={\"Queue\"}\n                processId={processId}\n                cards={queue}\n                onCardClick={handleCardClick}\n                onAddLotClick={() => handleAddLotClick(processId)}\n            />\n\n            {renderStationColumns()}\n\n            <FinishColumn\n                setSelectedCards={setSelectedCards}\n                selectedCards={selectedCards}\n                key={\"FINISH\"}\n                sortMode={sortMode}\n                sortDirection={sortDirection}\n                maxHeight={maxHeight}\n                station_id={\"FINISH\"}\n                setShowCardEditor={setShowCardEditor}\n                showCardEditor={showCardEditor}\n                stationName={\"Finished\"}\n                processId={processId}\n                cards={finished}\n                onCardClick={handleCardClick}\n            />\n        </styled.Container>\n    )\n})\n\n// Specifies propTypes\nCardZone.propTypes = {\n    handleCardClick: PropTypes.func,\n    setShowCardEditor: PropTypes.func,\n    processId: PropTypes.string,\n    lotFilterValue: PropTypes.any,\n    showCardEditor: PropTypes.bool,\n    maxHeight: PropTypes.any\n}\n\n// Specifies the default values for props:\nCardZone.defaultProps = {\n    handleCardClick: () => { },\n    processId: null,\n    setShowCardEditor: () => { },\n    showCardEditor: false,\n    maxHeight: null,\n    lotFilterValue: \"\",\n    selectedFilterOption: LOT_FILTER_OPTIONS.name,\n    sortMode: LOT_FILTER_OPTIONS.name,\n    sortDirection: SORT_DIRECTIONS.ASCENDING,\n}\n\nexport default memo(CardZone)\n\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n\toverflow: hidden;\n\tposition: relative;\n\theight: 100%;\n\tdisplay: flex;\n\tflex-direction: column;\n\twidth: 100%;\n\tflex: 1;\n\tmin-height: 100%;\n\tmax-height: 100%;\n\ttransition: all 2s ease;\n`\n\nexport const ProcessesContainer = styled.div`\n\toverflow: auto;\n\twidth: 100%;\n\theight: 100%;\n\tposition: relative;\n\ttransition: all 2s ease;\n`\n\nexport const ZoneContainer = styled.div`\n    display: flex;\n    align-items: center;\n    \n    background: ${props => props.theme.bg.primary};\n    box-shadow: ${props => props.theme.cardShadow};\n    margin: 1.5rem;\n    border-radius: 0.5rem;\n\n    overflow-x: scroll;\n\n    /* Let's get this party started */\n    ::-webkit-scrollbar {\n        height: 8px;\n    }\n    /* Track */\n    ::-webkit-scrollbar-track {\n        -webkit-background: rgba(0,0,0,0.1);\n        -webkit-border-radius: 10px;\n        border-radius: 10px;\n        &:hover {\n            background: rgba(0,0,0,0.1);\n        }\n    }\n    /* Handle */\n    ::-webkit-scrollbar-thumb {\n        -webkit-border-radius: 10px;\n        border-radius: 10px;\n        background: rgba(0, 0, 0, 0.2);\n    }\n    ::-webkit-scrollbar-thumb:window-inactive {\n        // background: rgba(255,255,255,0.2);\n    }\n`\n\nexport const ProcessName = styled.h3`\n    padding: 0;\n    margin: 0;\n    margin: 0 2rem;\n    font-size: ${props => props.theme.fontSize.sz3};\n    color: ${props => props.theme.schema.lots.solid};\n    text-align: center;\n    width: 5rem;\n    min-width: 8rem;\n    \n    overflow: hidden;\n   text-overflow: ellipsis;\n   display: -webkit-box;\n   -webkit-line-clamp: 2; /* number of lines to show */\n   -webkit-box-orient: vertical;\n`\n\nexport const ColumnContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`\n\nexport const CycleTimeText = styled.h3`\n    font-size: ${props => props.theme.fontSize.sz4};\n\n`","import React, { useState, memo } from \"react\"\nimport { useDispatch, useSelector } from 'react-redux'\nimport moment from 'moment';\n\n// external functions\nimport PropTypes from \"prop-types\"\n\n// internal components\nimport CardZone from \"../card_zone/card_zone\"\n\n// styles\nimport * as styled from \"./summary_zone.style\"\n\n// Import Utils\nimport { getProcessStations } from '../../../../../methods/utils/processes_utils'\n\n/*\n* This component renders a CardZone for a list of processes\n* */\nconst SummaryZone = ((props) => {\n\n    // extract props\n    const {\n        handleCardClick,\n        setShowCardEditor,\n        showCardEditor,\n        lotFilterValue,\n        selectedFilterOption,\n        selectedProcesses,\n        sortMode,\n        sortDirection,\n        selectedCards,\n        setSelectedCards,\n        handleAddLotClick\n    } = props\n    const stations = useSelector(state => state.stationsReducer.stations)\n    const routes = useSelector(state => state.tasksReducer.tasks)\n\n    const renderProcessCycleTime = (process) => {\n        const processStations = Object.keys(getProcessStations(process, routes))\n\n        let totalCycleTime = moment().set({ 'hour': '00', 'minute': '00', 'second': '00' })\n        processStations.forEach((stationID) => {\n            const station = stations[stationID]\n            if (!!station.cycle_time) {\n                const splitVal = station.cycle_time.split(':')\n                totalCycleTime.add(parseInt(splitVal[0]), 'hours').add(parseInt(splitVal[1]), 'minutes').add(parseInt(splitVal[2]), 'seconds')\n\n            }\n        })\n        if (totalCycleTime.hour() > 0 || totalCycleTime.minute() > 0 || totalCycleTime.second() > 0) {\n\n            return (\n                <styled.ColumnContainer s>\n                    <styled.CycleTimeText style={{ fontWeight: 'bold' }}>Process Cycle Time:</styled.CycleTimeText>\n                    <styled.CycleTimeText>\n                        {totalCycleTime.format('HH:mm:ss')}\n                    </styled.CycleTimeText>\n                </styled.ColumnContainer>\n\n            )\n        }\n        else {\n            return\n        }\n    }\n\n    /*\n   * This function renders a CardZone for each process in {selectedProcesses}\n   *\n   * For each process, the process's name and id are extracted\n   * a CardZone is rendered for each process, which is contained in a wrapping div for relative styling and additional elements (such as ProcessName)\n   *\n   * no params\n   * */\n\tconst renderSelectedProcesses = () => {\n\t\treturn (\n\t\t\t// map through {selectedProcesses}\n\t\t\tselectedProcesses.map((currProcess, processIndex) => {\n\n\t\t\t\t// extract process attributes\n\t\t\t\tconst {\n\t\t\t\t\tname: processName,\n\t\t\t\t\t_id: processId\n\t\t\t\t} = currProcess\n\n\t\t\t\t// return a CardZone wrapped with a styled container and any additional elements\n\n\t\t\t\treturn\t(\n\t\t\t\t\t<>\n\t\t\t\t\t\t{!!currProcess.showSummary &&\n\t\t\t\t\t\t\t<styled.ZoneContainer\n\t\t\t\t\t\t\t\tkey={processId}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<styled.ProcessName>{processName}</styled.ProcessName>\n\n\t\t\t\t\t\t\t\t<CardZone\n\t\t\t\t\t\t\t\t\thandleAddLotClick={handleAddLotClick}\n\t\t\t\t\t\t\t\t\tsetSelectedCards={setSelectedCards}\n\t\t\t\t\t\t\t\t\tselectedCards={selectedCards}\n\t\t\t\t\t\t\t\t\tsortMode={sortMode}\n\t\t\t\t\t\t\t\t\tsortDirection={sortDirection}\n\t\t\t\t\t\t\t\t\tlotFilterValue={lotFilterValue}\n\t\t\t\t\t\t\t\t\tselectedFilterOption={selectedFilterOption}\n\t\t\t\t\t\t\t\t\tsetShowCardEditor={setShowCardEditor}\n\t\t\t\t\t\t\t\t\tshowCardEditor={showCardEditor}\n\t\t\t\t\t\t\t\t\tmaxHeight={\"30rem\"}\n\t\t\t\t\t\t\t\t\tprocessId={processId}\n\t\t\t\t\t\t\t\t\thandleCardClick={handleCardClick}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</styled.ZoneContainer>\n\t\t\t\t\t\t}\n\t\t\t\t\t</>\n\n\t\t\t\t)\n\t\t\t})\n\t\t)\n\t}\n\n\treturn(\n\t\t<styled.Container >\n\t\t\t<styled.ProcessesContainer>\n\t\t\t\t{renderSelectedProcesses()}\n\t\t\t</styled.ProcessesContainer>\n\t\t</styled.Container>\n\t)\n})\n\n// Specifies propTypes\nSummaryZone.propTypes = {\n    handleCardClick: PropTypes.func,\n    setShowCardEditor: PropTypes.func,\n    handleAddLotClick: PropTypes.func,\n    showCardEditor: PropTypes.bool,\n    lotFilterValue: PropTypes.any\n}\n\n// Specifies the default values for props:\nSummaryZone.defaultProps = {\n    handleCardClick: () => { },\n    setShowCardEditor: () => { },\n    handleAddLotClick: () => { },\n    showCardEditor: false,\n    lotFilterValue: \"\",\n    selectedFilterOption: null\n}\n\nexport default memo(SummaryZone)\n","import styled from 'styled-components'\nimport {Calendar} from \"react-calendar\";\n// import { TransformWrapper, TransformComponent } from \"react-zoom-pan-pinch\";\nimport '../../../../index.css';\nexport const Container = styled.div`\n    display: flex;\n    position: relative;\n    flex-direction: column;\n    flex: 1;\n    overflow:hidden;\n    font-style: ${props => props.theme.font.primary};\n`\n\n\n\nexport const Body = styled.div`\n\tdisplay: flex;\n\tflex: 1;\n  //width: 100%;\n\t// max-width: 50%;\n\toverflow: hidden;\n\tposition: relative;\n\t\n\t\n\tbackground: ${props => props.theme.bg.secondary};\n  box-shadow: inset 2px 2px 4px 1px rgba(0, 0, 0, 0.1);\n`\n\nexport const CardZoneContainer = styled.div`\n  //flex: 1;\n  //position: relative;\n  \n  display: flex;\n  align-items: stretch;\n  \n\n  background: ${props => props.theme.bg.primary};\n  box-shadow: ${props => props.theme.cardShadow};\n  \n  margin: 1.5rem;\n  border-radius: 0.5rem;\n\n  overflow-x: scroll;\n  \n  //background: red;\n\n  /* Let's get this party started */\n  ::-webkit-scrollbar {\n    height: 8px;\n  }\n  /* Track */\n  ::-webkit-scrollbar-track {\n    -webkit-background: rgba(0,0,0,0.1);\n    -webkit-border-radius: 10px;\n    border-radius: 10px;\n    &:hover {\n      background: rgba(0,0,0,0.1);\n    }\n  }\n  /* Handle */\n  ::-webkit-scrollbar-thumb {\n    -webkit-border-radius: 10px;\n    border-radius: 10px;\n    background: rgba(0, 0, 0, 0.2);\n  }\n  ::-webkit-scrollbar-thumb:window-inactive {\n    // background: rgba(255,255,255,0.2);\n  }\n\n  // border: 1px solid green;\n`\n\n\n\n\n\nexport const AddCardButton = styled.button`\n\n`\n\n\n\n// LIST\nexport const RoutesListContainer = styled.div`\n    background: green;\n    \n    width: 100%;\n    overflow: scroll;\n    \n    \n    display: flex;\n    flex-direction: row;\n    flex: 1;\n    justify-content: flex-start;\n    \n    padding: 1rem;\n    padding-right: 5rem;\n    padding-bottom: 5rem;\n`\n\n\n\n\n\n\n\n","import styled from \"styled-components\";\nimport * as commonCss from \"../../../../../common_css/layout\";\n\nexport const Header = styled.div`\n\t${commonCss.headerStyle};\n\tpadding: .25rem 1rem;\n  display: flex;\n  align-items: center;\n  \n  \n`\n\nexport const MenuButton = styled.i`\n\tfont-size: 2rem;\n\tpadding: 0;\n\tmargin: 0;\n\tcolor: white;\n\t\n\ttext-shadow: 0.05rem 0.05rem 0.2rem #303030;\n    //transition: text-shadow 0.1s ease, filter 0.1s ease;\n    &:hover {\n        cursor: pointer;\n        filter: brightness(85%);\n    }\n\n    &:active{\n        filter: brightness(85%);\n        text-shadow: none;\n    }\n\n    background: none;\n    outline: none;\n    border: none;\n\n    &:focus {\n        outline: none;\n    }\n`\n\nexport const InvisibleItem = styled.div`\n    visibility: hidden;\n    height: 1rem;\n    width: 1rem;\n`\n\nexport const Title = styled.span`\n\tfont-size: 1.6rem;\n\tcolor: ${props => props.theme.bg.octonary};\n\tfont-weight: ${props => props.theme.fontWeight.bold};\n  margin: 0.2rem 0;\n`\n\nexport const TitleContainer = styled.div`\n  flex: 1;\n  flex-direction: column;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  align-content: center;\n  vertical-align: center;\n`","import React from 'react'\nimport { useParams } from 'react-router-dom'\n\n// functions external\nimport PropTypes from 'prop-types'\nimport { useHistory } from \"react-router-dom\"\n\n// Import Basic\nimport Button from '../../../../basic/button/button'\n\n// styles\nimport * as styled from \"./summary_header.style\"\n\nconst SummaryHeader = (props) => {\n    const {\n        showBackButton,\n        title\n    } = props\n\n    const params = useParams()\n    const history = useHistory()\n\n    const {\n        page,\n        subpage,\n        id\n    } = params\n\n    return (\n        <styled.Header>\n            {showBackButton ?\n                <styled.MenuButton\n                    style={{ marginRight: \"auto\" }}\n                    className=\"fas fa-chevron-left\"\n                    aria-hidden=\"true\"\n                    onClick={() => {\n                        history.replace('/processes')\n                    }\n                    }\n                />\n                :\n                <styled.InvisibleItem style={{ marginRight: \"auto\" }} /> // used for spacing\n            }\n            {!!title && (page === 'processes') &&\n                <Button\n                    label={title.includes('Statistics') ? 'Lots' : 'Statistics'}\n                    schema={title.includes('Statistics') ? 'lots' : 'statistics'}\n                    secondary\n                    onClick={() => {\n                        title.includes('Statistics') ?\n                            history.push('/' + page + '/' + id + \"/lots\")\n                            :\n                            history.push('/' + page + '/' + id + \"/statistics\")\n                    }}\n                />\n            }\n            <styled.TitleContainer style={{}}>\n                <styled.Title>{title ? title : \"untitled\"}</styled.Title>\n            </styled.TitleContainer>\n            <styled.InvisibleItem\n                style={{ marginLeft: \"auto\" }}\n            />\n        </styled.Header>\n    )\n}\n\nSummaryHeader.propTypes = {\n    showBackButton: PropTypes.bool,\n    title: PropTypes.string\n}\n\nSummaryHeader.defaultProps = {\n    showBackButton: false,\n    title: \"\"\n}\n\nexport default SummaryHeader\n","import styled, {css} from \"styled-components\";\nimport * as commonCss from \"../../../../../common_css/common_css\";\nimport {iconButtonCss} from \"../../../../../common_css/common_css\";\n\nexport const Container = styled.div`\n\talign-self: stretch;\n\tflex: 1;\n\toverflow-y: auto;\n  // align-items: stretch;\n  display: flex;\n  flex-direction: column;\n  transition: all 0.2s ease;\n  position: relative;\n  \n  ${props => props.greyed && lotsContainerGreyedCss};\n  \n`\n\nexport const ContainerWrapper = styled.div`\n\talign-self: stretch;\n\tflex: 1;\n\t// overflow-y: auto;\n\toverflow: hidden;\n\talign-items: stretch;\n\tdisplay: flex;\n\tflex-direction: column;\n\ttransition: all 0.2s ease;\n\tposition: relative;\n`\n\nexport const LoaderWrapper = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  z-index: 1000;\n\t//position: relative;\n`\n\nexport const spinnerCss = css`\n\t//position: absolute;\n  //\ttop: 50%;\n  //left: 50%;\n  //transform: translate(-50%, -50%);\n  //z-index: 1000;\n`\n\nconst lotsContainerGreyedCss = css`\n  filter: contrast(70%) brightness(70%);\n`\n\nexport const LotWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nexport const lotContainerStyle = {\n\tmarginBottom: \"0.5rem\", \n  width: \"80%\", \n  flex: 1,\n  margin: '.5rem auto .5rem auto', \n  border: '1px solid red'\n}\n\nexport const Containerrr = styled.div`\n  align-self: stretch;\n  flex: 1;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  // max-height: 20rem;\n`\n\n\n\n\n\n\n\n// export const LotWrapper = styled.div`\n//   justify-content: center;\n//   display: flex;\n// `\n//\n// export const lotContainerStyle = {\n// \tflex: 1,\n// \tmaxWidth: \"40rem\",\n// }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import React from 'react'\n\n// actions\nimport {deleteCard, putCard} from \"../../../../../../redux/actions/card_actions\"\n\n// components internal\nimport ConfirmDeleteModal from \"../../../../../basic/modals/confirm_delete_modal/confirm_delete_modal\"\n\n// functions external\nimport PropTypes from 'prop-types'\nimport {useDispatch, useSelector} from \"react-redux\"\n\n// utils\nimport {isEmpty} from \"../../../../../../methods/utils/object_utils\"\n\nimport LotContainer from \"../../lot/lot_container\";\n\nimport * as sharedStyles from \"../modals.style\"\nimport {lotContainerStyle} from \"../modals.style\";\n\nconst DeleteMultipleLotsModal = props => {\n\n\tconst {\n\t\tselectedCards,\n\t\tisOpen,\n\t\thandleClose,\n\t\tsetShowConfirmDeleteModal,\n\t\tsetSelectedCards\n\t} = props\n\n\tconst dispatch = useDispatch()\n\tconst dispatchDeleteCard = async (cardId, processId) => await dispatch(deleteCard(cardId, processId))\n\tconst dispatchPutCard = async (card, ID) => await dispatch(putCard(card, ID))\n\n\tconst cards = useSelector(state => { return state.cardsReducer.cards })\n\n\tconst renderSelectedLots = () => {\n\n\t\treturn (\n\t\t\t<sharedStyles.Container>\n\t\t\t\t{selectedCards.map((currItem) => {\n\t\t\t\t\tconst {\n\t\t\t\t\t\tcardId = \"\",\n\t\t\t\t\t\tprocessId = \"\",\n\t\t\t\t\t\tbinId = \"\"\n\t\t\t\t\t} = currItem || {}\n\n\t\t\t\t\treturn(\n\t\t\t\t\t\t<sharedStyles.LotWrapper>\n\t\t\t\t\t\t<LotContainer\n\t\t\t\t\t\t\tlotId={cardId}\n\t\t\t\t\t\t\tbinId={binId}\n\t\t\t\t\t\t\tprocessId={processId}\n\t\t\t\t\t\t\tenableFlagSelector={false}\n\t\t\t\t\t\t\tcontainerStyle={lotContainerStyle}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t</sharedStyles.LotWrapper>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</sharedStyles.Container>\n\t\t\t)\n\t}\n\n\tconst onDeleteLots = async () => {\n\t\tfor (const currItem of selectedCards) {\n\t\t\tconst {\n\t\t\t\tcardId = \"\",\n\t\t\t\tprocessId = \"\",\n\t\t\t\tbinId = \"\"\n\t\t\t} = currItem || {}\n\n\t\t\tconst currLot = cards[cardId] || {}\n\t\t\tconst {\n\t\t\t\tbins\n\t\t\t} = currLot\n\n\t\t\tconst {\n\t\t\t\t[binId]: binToRemove,\n\t\t\t\t...remainingBins\n\t\t\t} = bins || {}\n\n\t\t\t// if there are no remaining bins, delete the card\n\t\t\tif(isEmpty(remainingBins)) {\n\t\t\t\tawait dispatchDeleteCard(cardId, processId)\n\t\t\t}\n\n\t\t\t// otherwise update the card to contain only the remaining bins\n\t\t\telse {\n\t\t\t\tconst submitItem = {\n\t\t\t\t\t...currLot,\n\t\t\t\t\tbins: {...remainingBins},\n\t\t\t\t}\n\t\t\t\tconst result = await dispatchPutCard(submitItem, cardId)\n\n\t\t\t\tlet requestSuccessStatus = false\n\t\t\t\t// check if request was successful\n\t\t\t\tif(!(result instanceof Error)) {\n\t\t\t\t\trequestSuccessStatus = true\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tsetSelectedCards([])\n\t}\n\n\treturn (\n\t\t<ConfirmDeleteModal\n\t\t\tisOpen={isOpen}\n\t\t\tclose={handleClose}\n\t\t\ttitle={\"Are you sure you want to delete the following lots?\"}\n\t\t\tbutton_1_text={\"Yes\"}\n\t\t\tbutton_2_text={\"No\"}\n\t\t\thandleClose={handleClose}\n\t\t\thandleOnClick1={() => {\n\t\t\t\tonDeleteLots()\n\t\t\t\tsetShowConfirmDeleteModal(false)\n\t\t\t}}\n\t\t\thandleOnClick2={() => {\n\t\t\t\tsetShowConfirmDeleteModal(false)\n\t\t\t}}\n\t\t\tchildren={renderSelectedLots()}\n\t\t/>\n\t)\n}\n\nDeleteMultipleLotsModal.propTypes = {\n\tselectedCards: PropTypes.array\n}\n\nDeleteMultipleLotsModal.defaultProps = {\n\tselectedCards: []\n}\n\n\n\nexport default DeleteMultipleLotsModal\n","import styled, {css} from \"styled-components\";\nimport {iconButtonCss} from \"../../../../../../../common_css/common_css\";\n\nconst selectedCss = css`\n\ttransform: translateY(-10px);\n`\n\nconst svgGreyedCss = css`\n\tfilter: contrast(70%) brightness(70%);\n`\nconst svgSelectedCss = css`\n  height: 4rem;\n  width: 4rem;\n\n  rect {\n    //fill: #9fcdff;\n    //stroke: #13ffc9;\n    //stroke-width: 5px;\n    //stroke-dasharray: 2, 2;\n    //stroke-linejoin: ;\n  }\n`\n\nexport const StationSelectorContainerWrapper = styled.div`\n  justify-content: center;\n  display: flex;\n  //margin: 1rem 0;\n`\n\nexport const StationSelectorContainer = styled.div`\n  // background: ${props => props.theme.bg.tertiary};\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  //padding: 1rem;\n  //padding: .5rem;\n  padding-top: 1rem;\n  // border: 2px groove ${props => props.theme.bg.primary};\n  //border-radius: 3rem;\n  //max-width: 65rem;\n  overflow: hidden;\n  flex: 1;\n`\n\nexport const SubTitle = styled.span`\n\tfont-size: ${props => props.theme.fontSize.sz3};\n  \tcolor: ${props => props.theme.bg.octonary};\n`\n\nexport const StationsScrollWrapper = styled.div`\n\toverflow-x: auto;\n  \talign-self: stretch;\n\n  // max-width: 80%;\n  // box-shadow: inset 0 1px 4px 1px rgba(0, 0, 0, 0.2);\n  // border-radius: 1rem;\n\n  /* width */\n  ::-webkit-scrollbar {\n\theight: 10px;\n  }\n`\n\nexport const StationsContainer = styled.div`\n\t\n  display: flex;\n  overflow: visible;\n  justify-content: center;\n  align-items: center;\n  width: fit-content;\n  height: 10rem;\n  min-width: 100%;\n  //align-self: stretch;\n  \n`\n\nexport const StationName = styled.span`\n  font-size: ${props => props.theme.fontSize.sz4};\n  color: ${props => props.theme.bg.octonary};\n`\n\nexport const StationSvgContainer = styled.div`\n  height: 3rem;\n  width: 3rem;\n  margin: 10px;\n  padding: 0;\n  border-radius: .6rem;\n  transition: width 0.5s ease;\n  transition: height 0.5s ease;\n  ${props => props.isSelected && svgSelectedCss};\n  ${props => props.greyed && svgGreyedCss};\n`\n\n\n\nexport const StationButton = styled.button`\n\t${iconButtonCss};\n  \tcolor: ${props => props.color};\n  padding: 0;\n  margin: 0;\n  \n  transition: font-size 0.5s ease;\n\n  //margin: 1rem;\n  font-size: ${props => props.isSelected ? \"4rem\" : \"3rem\"};\n`\n\nexport const StationContainer = styled.div`\n  //padding: 1rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  overflow: hidden;\n\n  margin: 0 2rem;\n  transition: all .2s ease;\n  \n  &:hover {\n\tcursor: pointer;\n  }\n\n  // box-shadow: ${props => props.theme.cardShadow};\n  // border-radius: 0.5rem;\n\n  ${props => props.isSelected && selectedCss};\n`\n","import React from 'react'\n\n// functions external\nimport PropTypes from 'prop-types'\n\n// constants\nimport {BIN_IDS, BIN_THEMES} from \"../../../../../../../constants/lot_contants\"\nimport {StationTypes} from \"../../../../../../../constants/station_constants\"\nimport {PositionTypes} from \"../../../../../../../constants/position_constants\"\n\n// styles\nimport * as styled from \"./footer_content.style\"\n\nconst FooterContent = (props) => {\n\n\tconst {\n\t\tstationsAttributes,\n\t\tselectedStationId,\n\t\tsetSelectedStationId\n\t} = props\n\n\treturn (\n\t\t<styled.StationSelectorContainerWrapper>\n\t\t<styled.StationSelectorContainer>\n\t\t\t<styled.SubTitle>Select Destination</styled.SubTitle>\n\n\t\t\t<styled.StationsScrollWrapper>\n\t\t\t\t<styled.StationsContainer>\n\t\t\t\t\t{stationsAttributes.map((currStation, currIndex) => {\n\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\t_id\n\t\t\t\t\t\t} = currStation\n\n\t\t\t\t\t\tconst isSelected = selectedStationId === _id\n\t\t\t\t\t\tconst greyed = selectedStationId !== null && !isSelected\n\n\t\t\t\t\t\tif(_id !== BIN_IDS.FINISH && _id !== BIN_IDS.QUEUE) {\n\t\t\t\t\t\t\tconst locationTypes = {\n\t\t\t\t\t\t\t\t...StationTypes,\n\t\t\t\t\t\t\t\t...PositionTypes\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tlet color = StationTypes[currStation.type].color\n\n\n\t\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t\t<styled.StationContainer\n\t\t\t\t\t\t\t\t\tisSelected={isSelected}\n\t\t\t\t\t\t\t\t\tkey={_id}\n\t\t\t\t\t\t\t\t\tstyle={{\n\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tsetSelectedStationId(_id)\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<styled.StationName>{name}</styled.StationName>\n\t\t\t\t\t\t\t\t\t<styled.StationSvgContainer\n\t\t\t\t\t\t\t\t\t\tisSelected={isSelected}\n\t\t\t\t\t\t\t\t\t\tgreyed={greyed}\n\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<svg height=\"100%\" width=\"100%\" viewBox=\"0 0 400 400\" style={{ fill: color, stroke:color }}>\n\t\t\t\t\t\t\t\t\t\t\t{locationTypes[currStation.type].svgPath}\n\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t</styled.StationSvgContainer>\n\t\t\t\t\t\t\t\t</styled.StationContainer>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t\t<styled.StationContainer\n\t\t\t\t\t\t\t\t\tisSelected={isSelected}\n\t\t\t\t\t\t\t\t\tkey={_id}\n\t\t\t\t\t\t\t\t\tstyle={{\n\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tsetSelectedStationId(_id)\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<styled.StationName>{name}</styled.StationName>\n\t\t\t\t\t\t\t\t\t<styled.StationSvgContainer\n\t\t\t\t\t\t\t\t\t\tisSelected={isSelected}\n\t\t\t\t\t\t\t\t\t\tgreyed={greyed}\n\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<styled.StationButton\n\t\t\t\t\t\t\t\t\t\t\tisSelected={isSelected}\n\t\t\t\t\t\t\t\t\t\t\tclassName={_id === BIN_IDS.QUEUE ? BIN_THEMES.QUEUE.ICON : BIN_THEMES.FINISH.ICON}\n\t\t\t\t\t\t\t\t\t\t\tcolor={_id === BIN_IDS.QUEUE ? BIN_THEMES.QUEUE.COLOR : BIN_THEMES.FINISH.COLOR}\n\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</styled.StationSvgContainer>\n\t\t\t\t\t\t\t\t</styled.StationContainer>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\n\t\t\t\t\t}\n\t\t\t\t</styled.StationsContainer>\n\t\t\t</styled.StationsScrollWrapper>\n\t\t</styled.StationSelectorContainer>\n\t\t</styled.StationSelectorContainerWrapper>\n\t)\n}\n\nFooterContent.propTypes = {\n\tselectedStationId: PropTypes.string,\n\tstationsAttributes: PropTypes.array,\n\tsetSelectedStationId: PropTypes.func\n}\n\nFooterContent.defaultProps = {\n\tselectedStationId: null,\n\tstationsAttributes: [],\n\tsetSelectedStationId: () => {}\n}\n\nexport default FooterContent\n","import styled from \"styled-components\";\n\nexport const ProcessHeader = styled.div`\n\talign-self: stretch;\n  \tmargin-top: 1rem;\n\talign-self: center;\n\tdisplay: flex;\n\tjustify-content: center;\n`\n\nexport const SubTitle = styled.span`\n\tfont-size: ${props => props.theme.fontSize.sz3};\n  \tcolor: ${props => props.theme.bg.octonary};\n`","import React from 'react'\n\n// functions external\nimport PropTypes from 'prop-types'\n\n// styles\nimport * as styled from \"./pre_body_content.style\"\n\nconst PreBodyContent = (props) => {\n\n\tconst {\n\t\tprocessName\n\t} = props\n\n\treturn (\n\t\t<styled.ProcessHeader>\n\t\t\t<styled.SubTitle>Process: {processName}</styled.SubTitle>\n\t\t</styled.ProcessHeader>\n\t)\n}\n\nPreBodyContent.propTypes = {\n\tprocessName: PropTypes.string\n}\n\nPreBodyContent.propTypes = {\n\tprocessName: \"\",\n}\n\nexport default PreBodyContent\n","import React, {useEffect, useState} from 'react'\n\n// actions\nimport {deleteCard, putCard} from \"../../../../../../redux/actions/card_actions\"\n\n// components external\nimport MoonLoader from \"react-spinners/MoonLoader\"\n\n// components internal\nimport LotContainer from \"../../lot/lot_container\"\nimport SimpleModal from \"../../../../../basic/modals/simple_modal/simple_modal\"\nimport FooterContent from \"./footer_content/footer_content\"\nimport PreBodyContent from \"./pre_body_content/pre_body_content\"\n\n// constants\nimport {BIN_IDS, BIN_THEMES} from \"../../../../../../constants/lot_contants\"\nimport {StationTypes} from \"../../../../../../constants/station_constants\"\nimport {PositionTypes} from \"../../../../../../constants/position_constants\"\n\n// functions external\nimport PropTypes from 'prop-types'\nimport {useDispatch, useSelector} from \"react-redux\"\n\n// utils\nimport {getProcessName, getStationAttributes, getStationIds} from \"../../../../../../methods/utils/processes_utils\"\nimport {immutableDelete, isNonEmptyArray} from \"../../../../../../methods/utils/array_utils\"\nimport {getLotAfterBinMerge} from \"../../../../../../methods/utils/lot_utils\"\n\n// styles\nimport * as sharedStyles from \"../modals.style\"\nimport {lotContainerStyle} from \"../modals.style\"\n\nconst MoveMultipleLotsModal = (props) => {\n\n\tconst {\n\t\tselectedCards,\n\t\tisOpen,\n\t\thandleClose,\n\t\tsetShowConfirmDeleteModal,\n\t\tsetSelectedCards\n\t} = props\n\n\tconst dispatch = useDispatch()\n\tconst dispatchPutCard = async (card, ID) => await dispatch(putCard(card, ID))\n\n\tconst cards = useSelector(state => { return state.cardsReducer.cards })\n\n\tconst [processBins, setProcessBins] = useState([])\n\tconst [processIds, setProcessIds] = useState([])\n\tconst [processIdsIndex, setProcessIdsIndex] = useState(0)\n\tconst [stationsAttributes, setStationsAttributes] = useState([])\n\tconst [selectedStationId, setSelectedStationId] = useState(null)\n\tconst [processName, setProcessName] = useState(\"\")\n\tconst [isMoving, setIsMoving] = useState(false)\n\n\t/*\n\t* this effect is used to separate lots by processId, since difference processes will have different stations available to move to,\n\t* moving lots from different processes must be handled separately\n\t* */\n\tuseEffect(() => {\n\t\tlet tempProcessBins = {}\n\n\t\tselectedCards.forEach((currLot) => {\n\t\t\tconst {\n\t\t\t\tprocessId = \"\",\n\t\t\t} = currLot\n\n\t\t\t// if tempProcessBins already contains key for current lots processId, add to it\n\t\t\tif(tempProcessBins[processId]) {\n\t\t\t\ttempProcessBins[processId].push(currLot)\n\t\t\t}\n\n\t\t\t// otherwise, create the key, initialize as array with first value as currLot\n\t\t\telse {\n\t\t\t\ttempProcessBins[processId] = [currLot]\n\t\t\t}\n\t\t})\n\n\t\t// update state\n\t\tsetProcessBins(tempProcessBins)\n\t\tsetProcessIds(Object.keys(tempProcessBins))\n\n\t}, [selectedCards])\n\n\tuseEffect(() => {\n\t\tconst tempStationAttributes = getStationAttributes(processIds[processIdsIndex], [])\n\n\t\tsetStationsAttributes([\n\t\t\t{\n\t\t\t\tname: BIN_THEMES.QUEUE.DISPLAY_NAME,\n\t\t\t\t_id: BIN_IDS.QUEUE\n\t\t\t},\n\t\t\t...tempStationAttributes,\n\t\t\t{\n\t\t\t\tname: BIN_THEMES.FINISH.DISPLAY_NAME,\n\t\t\t\t_id: BIN_IDS.FINISH\n\t\t\t}\n\t\t])\n\n\t\tsetProcessName(getProcessName(processIds[processIdsIndex]))\n\t}, [processIds, processIdsIndex])\n\n\tconst renderSelectedLots = () => {\n\t\tconst lotsToRender = processBins[processIds[processIdsIndex]] || []\n\n\t\treturn (\n\t\t\t<sharedStyles.ContainerWrapper>\n\t\t\t\t<sharedStyles.LoaderWrapper>\n\t\t\t\t\t<MoonLoader\n\t\t\t\t\t\tloading={isMoving}\n\t\t\t\t\t\tcolor={\"#4ffff0\"}\n\t\t\t\t\t\tsize={50}\n\t\t\t\t\t/>\n\t\t\t\t</sharedStyles.LoaderWrapper>\n\t\t\t<sharedStyles.Container\n\t\t\t\tgreyed={isMoving}\n\t\t\t>\n\n\t\t\t\t{lotsToRender.map((currItem) => {\n\t\t\t\t\tconst {\n\t\t\t\t\t\tcardId = \"\",\n\t\t\t\t\t\tprocessId = \"\",\n\t\t\t\t\t\tbinId = \"\"\n\t\t\t\t\t} = currItem || {}\n\n\t\t\t\t\treturn(\n\t\t\t\t\t\t<sharedStyles.LotWrapper key={cardId}>\n\t\t\t\t\t\t\t<LotContainer\n\t\t\t\t\t\t\t\tlotId={cardId}\n\t\t\t\t\t\t\t\tbinId={binId}\n\t\t\t\t\t\t\t\tprocessId={processId}\n\t\t\t\t\t\t\t\tenableFlagSelector={false}\n\t\t\t\t\t\t\t\tcontainerStyle={lotContainerStyle}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</sharedStyles.LotWrapper>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</sharedStyles.Container>\n\t\t\t</sharedStyles.ContainerWrapper>\n\n\t\t\t)\n\t}\n\n\tconst renderChildren = () => {\n\t\treturn(\n\t\t\t<sharedStyles.Containerrr>\n\t\t\t\t{renderSelectedLots()}\n\t\t\t</sharedStyles.Containerrr>\n\t\t)\n\t}\n\n\tconst onMoveClick = async () => {\n\t\tsetIsMoving(true)\n\t\tconst currentProcessId = processIds[processIdsIndex]\n\t\tconst {\n\t\t\t[currentProcessId]: lotsToRender = [],\n\t\t\t...unchangedProcessBins\n\t\t} = processBins || {}\n\n\t\tconst isLastProcess = processIdsIndex === (processIds.length - 1)\n\n\t\t// *** first, handle moving the lots ***\n\t\tif(isNonEmptyArray(lotsToRender)) {\n\t\t\tlet index = 0\n\t\t\tfor(const currItem of lotsToRender) {\n\t\t\t\tconst {\n\t\t\t\t\tcardId = \"\",\n\t\t\t\t\tbinId = \"\"\n\t\t\t\t} = currItem || {}\n\n\t\t\t\tconst currLot = cards[cardId] || {}\n\t\t\t\tconst lotWithUpdatedBins = getLotAfterBinMerge(currLot, binId, selectedStationId)\n\n\t\t\t\tawait dispatchPutCard(lotWithUpdatedBins, cardId)\n\t\t\t\tsetProcessBins((previous) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...previous,\n\t\t\t\t\t\t[currentProcessId]: immutableDelete(lotsToRender, index)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tindex = index + 1\n\t\t}\n\n\t\t// *** now, handle toggling to next process or closing modal ***\n\t\tsetProcessBins(unchangedProcessBins)\n\n\t\t// if last process was just handled, close it\n\t\tif(isLastProcess) {\n\t\t\tsetSelectedCards([])\n\t\t\thandleClose()\n\t\t}\n\n\t\t// otherwise, go to next process, and clear selectedStationId\n\t\telse {\n\t\t\tsetProcessIdsIndex(processIdsIndex + 1)\n\t\t\tsetSelectedStationId(null)\n\t\t}\n\n\t\tsetIsMoving(false)\n\t}\n\n\treturn (\n\n\t\t<SimpleModal\n\t\t\tisOpen={isOpen}\n\t\t\tclose={handleClose}\n\t\t\ttitle={\"Move Lots\"}\n\t\t\tbutton_2_text={\"Move\"}\n\t\t\tbutton_2_disabled={isMoving || selectedStationId === null}\n\t\t\tbutton_1_text={\"Cancel\"}\n\t\t\tonCloseButtonClick={handleClose}\n\t\t\tonRequestClose={handleClose}\n\t\t\thandleOnClick2={onMoveClick}\n\t\t\thandleOnClick1={() => {\n\t\t\t\tsetShowConfirmDeleteModal(false)\n\t\t\t}}\n\t\t\tPreBodyContent={\n\t\t\t\t<PreBodyContent\n\t\t\t\t\tprocessName={processName}\n\t\t\t\t/>\n\t\t\t}\n\t\t\tFooterContent={\n\t\t\t\t<FooterContent\n\t\t\t\t\tstationsAttributes={stationsAttributes}\n\t\t\t\t\tselectedStationId={selectedStationId}\n\t\t\t\t\tsetSelectedStationId={setSelectedStationId}\n\t\t\t\t/>\n\t\t\t}\n\t\t\tchildren={renderChildren()}\n\t\t/>\n\t)\n}\n\nMoveMultipleLotsModal.propTypes = {\n\tselectedCards: PropTypes.array\n}\n\nMoveMultipleLotsModal.defaultProps = {\n\tselectedCards: []\n}\n\nexport default MoveMultipleLotsModal\n","import React from 'react';\nimport SkuEditor from \"./sku_editor\";\nimport withModal from \"../../../../../../higher_order_components/with_modal/with_modal\";\n\nconst SkuEditorModal = withModal(SkuEditor, '95%', '95%', '95%', '95%')\nexport default SkuEditorModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport withModal from \"../../../../../../higher_order_components/with_modal/with_modal\";\nimport SkuEditor from \"../sku_editor/sku_editor\";\nimport LotEditorContainer from \"./lot_editor_container\";\n\nconst LotEditorModal = withModal(LotEditorContainer, '95%', '95%', '95%', '95%')\n\nexport default LotEditorModal;\n","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport LotEditorModal from \"../card_editor/lot_editor_modal\";\nimport {showEditor} from \"../../../../../../redux/actions/card_actions\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport SkuEditorModal from \"../sku_editor/sku_editor_modal\";\n\nconst EditorContainer = props => {\n\n\tconst {\n\t\tcardId,\n\t\tprocessId,\n\t\tbinId,\n\t\tsetSelectedCard\n\t} = props\n\n\tconst dispatch = useDispatch()\n\tconst onShowCardEditor = (bool) => dispatch(showEditor(bool))\n\n\tconst showCardEditor = useSelector(state => { return state.cardsReducer.showEditor })\n\tconst selectedLotTemplatesId = useSelector(state => {return state.lotTemplatesReducer.selectedLotTemplatesId})\n\n\tconst [showSkuEditor, setShowSkuEditor] = useState(false)\n\n\treturn(\n\t\t<>\n\t\t\t{showCardEditor &&\n\t\t\t<LotEditorModal\n\t\t\t\tisOpen={!showSkuEditor}\n\t\t\t\tonAfterOpen={null}\n\t\t\t\tcardId={cardId}\n\t\t\t\tprocessId={processId}\n\t\t\t\tbinId={binId}\n\t\t\t\tclose={()=>{\n\t\t\t\t\tonShowCardEditor(false)\n\t\t\t\t\tsetSelectedCard(null)\n\t\t\t\t}}\n\t\t\t\tshowSkuEditor={showCardEditor}\n\t\t\t\tsetShowSkuEditor={setShowSkuEditor}\n\t\t\t/>\n\t\t\t}\n\n\t\t\t{showSkuEditor &&\n\t\t\t<SkuEditorModal\n\t\t\t\tisOpen={showSkuEditor}\n\t\t\t\tselectedLotTemplatesId={selectedLotTemplatesId}\n\t\t\t\tlotTemplateId={selectedLotTemplatesId}\n\t\t\t\tclose={() => setShowSkuEditor(false)}\n\t\t\t/>\n\t\t\t}\n\t\t</>\n\t)\n\n};\n\nEditorContainer.propTypes = {\n\n};\n\nexport default EditorContainer;\n","import React, {useEffect, useState, useRef, useContext, memo} from 'react';\n\n// external functions\nimport { useHistory } from 'react-router-dom'\nimport { useDispatch, useSelector } from \"react-redux\";\n\n// internal components\nimport CardMenu from \"./card_menu/card_menu\";\nimport CardZone from \"./card_zone/card_zone\";\nimport SummaryZone from \"./summary_zone/summary_zone\";\n\n// actions\nimport {deleteCard, putCard, showEditor} from '../../../../redux/actions/card_actions'\n\n// styles\nimport * as styled from './cards.style'\nimport { ThemeContext } from \"styled-components\";\nimport ZoneHeader from \"./zone_header/zone_header\";\nimport {getLotTemplates} from \"../../../../redux/actions/lot_template_actions\";\nimport {LOT_FILTER_OPTIONS, SORT_DIRECTIONS} from \"../../../../constants/lot_contants\";\nimport SummaryHeader from \"./summary_header/summary_header\";\nimport {immutableDelete} from \"../../../../methods/utils/array_utils\";\nimport DeleteMultipleLotsModal from \"./modals/delete_multiplie_lots_modal/delete_multiplie_lots_modal\";\nimport {isControl, isControlAndShift, isShift} from \"../../../../methods/utils/event_utils\";\nimport MoveMultipleLotsModal from \"./modals/move_multiplie_lots_modal/move_multiplie_lots_modal\";\nimport SkuEditorModal from \"./editors/sku_editor/sku_editor_modal\";\nimport LotEditorContainer from \"./editors/card_editor/lot_editor_container\";\nimport LotEditorModal from \"./editors/card_editor/lot_editor_modal\";\nimport EditorContainer from \"./editors/editor_container/editor_container\";\n\nconst Cards = (props) => {\n\n    // extract props\n    const {\n        id\n    } = props\n\n    // theme\n    const themeContext = useContext(ThemeContext)\n\n    //redux state\n    const processes = useSelector(state => { return state.processesReducer.processes })\n    const showCardEditor = useSelector(state => { return state.cardsReducer.showEditor })\n    const currentMapId = useSelector(state => state.settingsReducer.settings.currentMapId)\n    const maps = useSelector(state => state.mapReducer.maps)\n    const currentMap = Object.values(maps).find(map => map._id === currentMapId)\n    // actions\n    const dispatch = useDispatch()\n    const onShowCardEditor = (bool) => dispatch(showEditor(bool))\n    const dispatchGetLotTemplates = async () => await dispatch(getLotTemplates())\n\n    // internal state\n    const [showConfirmDeleteModal, setShowConfirmDeleteModal] = useState(false)\n    const [showMoveModal, setShowMoveModal] = useState(false)\n    const [selectedCards, setSelectedCards] = useState([])\n    const [selectedCard, setSelectedCard] = useState(null)\n    const [title, setTitle] = useState(null)\n    const [currentProcess, setCurrentProcess] = useState(null)\n    const [isProcessView, setIsProcessView] = useState(false)\n    const [showMenu, setShowMenu] = useState(false)\n    const [filteredProcesses, setFilteredProcesses] = useState(Object.values(processes).filter((currProcess) => currProcess.map_id === currentMap._id))\n    const [zoneSize, setZoneSize] = useState({\n        width: undefined,\n        height: undefined,\n        offsetLeft: undefined,\n        offsetTop: undefined,\n    })\n    const [lotFilterValue, setLotFilterValue] = useState('')\n    const [ selectedFilterOption, setSelectedFilterOption ] = useState(LOT_FILTER_OPTIONS.name)\n    const [sortMode, setSortMode] = useState(LOT_FILTER_OPTIONS.name)\n    const [sortDirection, setSortDirection] = useState(SORT_DIRECTIONS.ASCENDING)\n    // internal component state\n    const [selectedProcesses, setSelectedProcesses] = useState(filteredProcesses) // array of {process} objects - the list of selected processes\n\n    // refs\n    const zoneRef = useRef(null);\n\n    useEffect( () => {\n        dispatchGetLotTemplates()\n\n    }, [])\n\n    /*\n    * filters processes by map id\n    * */\n    useEffect(() => {\n        setFilteredProcesses(Object.values(processes).filter((currProcess) => currProcess.map_id === currentMap._id))\n    }, [processes])\n\n    /*\n    * This effect monitors the div referenced by zoneRef and the window height\n    *\n    * When either of these changes, zoneSize is updated with the current width, height, top offset, and left offset of the div referenced by zoneRef\n    * This ensures that the size of zoneRef is updated when the window size changes\n    *\n    * zoneSize is used for setting the max height of lot columns in the CardZone and SummaryZone\n    *\n    * @param {ref} zoneRef - ref assigned to CardZone\n    * @param {int} window.innerHeight - window height\n    *\n    * */\n    useEffect(() => {\n\n        // if zoneRef is assigned\n        if (zoneRef.current) {\n\n            // extract dimensions of zoneRef\n            let height = zoneRef.current.offsetHeight;\n            let width = zoneRef.current.offsetWidth;\n            let offsetTop = zoneRef.current.offsetTop;\n            let offsetLeft = zoneRef.current.offsetLeft;\n\n            // set zoneSize\n            setZoneSize({\n                width: width,\n                height: height,\n                offsetTop: offsetTop,\n                offsetLeft: offsetLeft,\n            });\n        }\n\n    }, [zoneRef, window.innerHeight]);\n\n    /*\n    * This effect updates internal component state basted on the {id} props\n    *\n    * The value of {id} can take on 1 of 3 types of values, {\"summary\"}, {\"timeline\"}, or the id of a process\n    *\n    * The content of the page changes based on the value of id, and this useEffect updates internal component state in order to achieve this\n    *\n    * the value of {id} should produce the following content:\n    *   {\"summary\"} - render content for the summary zone\n    *   {\"timeline\"} - render content for timeline zone *** CURRENTLY DISABLED ***\n    *   a process id - render lot content for the corresponding process\n    *\n    * @param {id} string - id of content to display\n    *\n    * */\n    useEffect(() => {\n\n        // update internal state based on id\n        switch (id) {\n\n            // summary zone\n            case \"summary\":\n                setTitle(\"Lots Summary\")\n                setIsProcessView(false)\n                break\n\n            // timeline zone\n            case \"timeline\":\n                setTitle(\"Timeline Zone\")\n                setIsProcessView(false)\n                break\n\n            // otherwise assume id is the id of a specific process\n            default:\n                setIsProcessView(true)\n                setCurrentProcess(processes[id])\n                setTitle(processes[id]?.name)\n                break\n        }\n    }, [id]);\n\n\n    /*\n   * This function handles the logic for when a lot is clicked\n   *\n   * Clicking a lot should open the lot editor for the clicked lot\n   * In order to do this, the function sets showCardEditor to true and sets selectedCard to the values passed in as arguments to this function\n   *\n   * @param {cardId} string - id of lot clicked\n   * @param {processId} string - id of clicked lot's process\n   * @param {binId)} string - id of clicked lot's bin\n   *\n   * */\n    const handleCardClick = (event, {lotId, processId, binId}, lotsBetween) => {\n\n        /*\n        * Special keys: (ctrl (windows) OR cmd (mac)) AND shift\n        * Action: add cards between last added and just clicked (including just clicked)\n        * */\n        if(isControlAndShift(event)) {\n            // for each lot in lotsBetween, see if it already exists in selectedCards\n            lotsBetween.forEach((currLotToAdd) => {\n                const {\n                    binId: currAddingBinId,\n                    cardId: currAddingLotId,\n                    process_id: currAddingProcessId,\n                } = currLotToAdd\n\n                const existingIndex = selectedCards.findIndex((currExistingLot) => {\n                    const {\n                        cardId: currExistingLotId,\n                        binId: currExistingBinId,\n                        processId: currExistingProcessId\n                    } = currExistingLot\n\n                    return (currAddingLotId === currExistingLotId) && (currAddingBinId === currExistingBinId) && (currAddingProcessId === currExistingProcessId)\n                })\n\n                // if it doesn't already exist in selectedCards, add it. Otherwise do nothing.\n                if(existingIndex === -1) {\n                    setSelectedCards((previous) => {\n                        return(\n                            [\n                                ...previous,\n                                {\n                                    cardId: currAddingLotId,\n                                    processId: currAddingProcessId,\n                                    binId: currAddingBinId\n                                }\n                            ]\n                        )\n                    })\n                }\n            })\n        }\n\n        /*\n        * Special keys: shift\n        * Action: replace selected in current column with lots between last added and just clicked (including just clicked)\n        * */\n        else if (isShift(event)) {\n            // filter out lots in current column from selectedCards\n            let tempSelectedCards = selectedCards.filter((currLot) => {\n                const {\n                    binId: currBinId,\n                } = currLot\n\n                return currBinId !== binId\n            })\n\n            // add all lots from lotsBetween to selectedCards\n            lotsBetween.forEach((currLotToAdd) => {\n                const {\n                    binId: currAddingBinId,\n                    cardId: currAddingLotId,\n                    process_id: currAddingProcessId,\n                } = currLotToAdd\n\n\n                tempSelectedCards.push({\n                    cardId: currAddingLotId,\n                    processId: currAddingProcessId,\n                    binId: currAddingBinId\n                })\n            })\n\n            // update selectedCards\n            setSelectedCards(tempSelectedCards)\n        }\n\n        /*\n        * Special keys: ctrl (windows), cmd (mac)\n        * Action: add just clicked\n        * */\n        else if(isControl(event)) {\n            // get index of lot in selected cards\n            const existingIndex = selectedCards.findIndex((currLot) => {\n                const {\n                    cardId: currLotId,\n                    binId: currBinId,\n                    processId: currExistingProcessId\n                } = currLot\n\n                return (lotId === currLotId) && (binId === currBinId) && (processId === currExistingProcessId)\n            })\n\n            // if index === -1, lot isn't already in selected cards, so add\n            if(existingIndex === -1) {\n                setSelectedCards([\n                    ...selectedCards,\n                    { cardId: lotId, processId, binId }\n                ])\n            }\n            // otherwise lot is in selectedCards already, so remove\n            else {\n                setSelectedCards(immutableDelete(selectedCards, existingIndex))\n            }\n        }\n\n        /*\n        * No special key pressed, open editor\n        * */\n        else {\n            onShowCardEditor(true)\n            setSelectedCard({ cardId: lotId, processId, binId })\n        }\n    }\n\n    const handleDeleteClick = () => {\n        setShowConfirmDeleteModal(true)\n    }\n\n    const handleMoveClick = () => {\n        setShowMoveModal(true)\n    }\n\n    const handleAddLotClick = (processId) => {\n        onShowCardEditor(true)\n        setSelectedCard({ cardId: null, processId, binId: null })\n    }\n\n    return (\n        <styled.Container>\n            {showConfirmDeleteModal &&\n            <DeleteMultipleLotsModal\n                handleClose={() => setShowConfirmDeleteModal(false)}\n                lots={selectedCards}\n                isOpen={showConfirmDeleteModal}\n                setShowConfirmDeleteModal={setShowConfirmDeleteModal}\n                setSelectedCards={setSelectedCards}\n                selectedCards={selectedCards}\n            />\n            }\n            {showMoveModal &&\n            <MoveMultipleLotsModal\n                handleClose={() => setShowMoveModal(false)}\n                lots={selectedCards}\n                isOpen={showMoveModal}\n                setShowConfirmDeleteModal={setShowMoveModal}\n                setSelectedCards={setSelectedCards}\n                selectedCards={selectedCards}\n            />\n            }\n\n            <EditorContainer\n                cardId={selectedCard ? selectedCard.cardId : null}\n                processId={selectedCard ? selectedCard.processId : null}\n                binId={selectedCard ? selectedCard.binId : null}\n                setSelectedCard={setSelectedCard}\n            />\n\n            <SummaryHeader\n                showBackButton={isProcessView}\n                title={title}\n            />\n            <div style={{display: 'flex', padding: \"1rem\", flexDirection: 'row', margin: '0rem', flexWrap: \"wrap\", borderBottom: `1px solid ${themeContext.bg.tertiary}`}}>\n                <ZoneHeader\n                    lotFilterValue={lotFilterValue}\n                    sortDirection={sortDirection}\n                    setSortDirection={setSortDirection}\n                    sortMode={sortMode}\n                    setSortMode={setSortMode}\n                    setLotFilterValue={setLotFilterValue}\n                    selectedFilterOption={selectedFilterOption}\n                    setSelectedFilterOption={setSelectedFilterOption}\n                    selectedProcesses={selectedProcesses}\n                    setSelectedProcesses={setSelectedProcesses}\n                    zone={id}\n                    selectedLots={selectedCards}\n                    onDeleteClick={handleDeleteClick}\n                    onMoveClick={handleMoveClick}\n                    onClearClick={()=>setSelectedCards([])}\n                />\n\n            </div>\n\n            <styled.Body\n                id={\"cards-body\"}\n            >\n                {showMenu &&\n                    <CardMenu\n                        currentProcess={currentProcess}\n                        close={() => setShowMenu(false)}\n                    />\n                }\n\n                {\n                    {\n                        'summary':\n                            <SummaryZone\n                                setSelectedCards={setSelectedCards}\n                                selectedCards={selectedCards}\n                                sortMode={sortMode}\n                                sortDirection={sortDirection}\n                                selectedProcesses={selectedProcesses}\n                                lotFilterValue={lotFilterValue}\n                                selectedFilterOption={selectedFilterOption}\n                                handleCardClick={handleCardClick}\n                                setShowCardEditor={onShowCardEditor}\n                                showCardEditor={showCardEditor}\n                                handleAddLotClick={handleAddLotClick}\n                            />,\n                        'timeline':\n                            <div\n                                handleCardClick={handleCardClick}\n                                initialProcesses={[currentProcess]}\n                            />\n                    }[id] ||\n                    <styled.CardZoneContainer ref={zoneRef}>\n                        <CardZone\n                            handleAddLotClick={handleAddLotClick}\n                            setSelectedCards={setSelectedCards}\n                            selectedCards={selectedCards}\n                            setShowCardEditor={onShowCardEditor}\n                            showCardEditor={showCardEditor}\n                            handleCardClick={handleCardClick}\n                            processId={id}\n                            lotFilterValue={lotFilterValue}\n                            selectedFilterOption={selectedFilterOption}\n                            sortMode={sortMode}\n                            sortDirection={sortDirection}\n                        />\n                    </styled.CardZoneContainer>\n                }\n            </styled.Body>\n        </styled.Container>\n    )\n}\n\nexport default memo(Cards)\n","import styled, { css } from \"styled-components\";\nimport * as layoutCss from '../../../../common_css/layout';\nimport * as commonCss from '../../../../common_css/common_css'\nimport * as buttonCss from '../../../../common_css/button_css'\n\nexport const Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n    background-color: ${props => props.theme.bg.secondary};\n    overflow: hidden;\n`\n\nexport const StationColumnsContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n    background-color: ${props => props.theme.bg.secondary};\n    overflow-y: auto;\n`\n\nexport const RowContainer = styled.div`\n    ${commonCss.rowContainer}\n    justify-content: center;\n`\n\n","import styled, { css } from \"styled-components\";\nimport * as commonCss from '../../../../../common_css/common_css'\n\nexport const ChartsContainer = styled.div`\n    ${commonCss.rowContainer}\n    flex-wrap: wrap;\n    flex: 9;\n`\n\nexport const RowContainer = styled.div`\n    ${commonCss.rowContainer}\n    background-color: ${props => props.theme.bg.primary};\n    border-radius: 0.5rem;\n    margin: 1.5rem;\n    box-shadow: ${props => props.theme.cardShadow};\n    position: relative;\n    /* align-items: center; */\n    /* overflow-y: scroll; */\n`\n\nexport const ProcessName = styled.h3`\n    padding: 0;\n    margin-top: .5rem;\n    margin-left: 2.25rem;\n    font-size: ${props => props.theme.fontSize.sz3};\n    color: ${props => props.theme.schema.lots.solid};\n    /* text-align: center; */\n    /* width: 20rem; */\n    /* max-width: 8rem; */\n    overflow: hidden;\n    text-overflow: clip;\n`\n\nexport const NameContainer = styled.div`\n    display: flex;\n    flex: 1;\n    align-items: center;\n    /* max-width: 8rem; */\n\n`\n\nexport const CollapseIcon = styled.i`\n    position: absolute;\n    align-content: center;\n    left: 1rem;\n    top: .5rem;\n    /* top: 50%; */\n    /* transform: translateY(-50%); */\n`\n\n","import styled from 'styled-components'\n\nexport const StatisticsContainer = styled.div`\n    height: 100%;\n    width: 100%;\n\n    background: ${props => props.theme.bg.secondary};\n`\n\nexport const StatisticsSectionsButtonContainer = styled.div`\n    display: flex;\n    /* position: absolute; */\n    text-align: center;\n    justify-content: center;\n    left: 0;\n    right: 0;\n    top: .5rem;\n    margin-left: auto;\n    margin-right: auto;\n    margin-top: 0.5rem;\n    width: 15rem;\n    /* background-color: red; */\n`\n\nexport const StatisticsSectionsButton = styled.button`\n    font-size: 1.5rem;\n    width: 10rem;\n    border: none;\n    font-family: ${props => props.theme.font.primary};\n\n    box-shadow: ${props => props.selected ? 'none' : '0 0.1rem 0.2rem 0rem #303030'};\n\n    z-index: ${props => props.selected ? '0' : '1'};\n    background-color: ${props => !props.selected ? props => props.theme.bg.septenary : props => props.theme.bg.senary};\n\n    transition: background-color 0.25s ease, box-shadow 0.1s ease;\n\n    &:focus{\n        outline: 0 !important\n    }\n\n    &:active{\n        box-shadow: none;\n    }\n\n    &:hover{\n        background-color: ${props => props.theme.bg.quaternary};\n    }\n`\n\nexport const StatisticsDownloadButton = styled.button`\n    display: auto;\n    position: absolute;\n    right: 1rem;\n    top: 1rem;\n    border: none;\n    border-radius: .5rem;\n    width: 10rem;\n    height: 3rem;\n    font-family: ${props => props.theme.font.primary};\n\n    box-shadow: 0 0.1rem 0.2rem 0rem #303030;\n\n    transition: background-color 0.25s ease, box-shadow 0.1s ease;\n\n\n    &:focus{\n        outline: 0 !important\n    }\n\n    &:active{\n        box-shadow: none;\n    }\n\n    &:hover{\n        background-color: ${props => props.theme.bg.tertiary};\n    }\n\n    @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n        display: none;\n    }\n`\nexport const Header = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    position: relative;\n\tbackground: ${props => props.theme.bg.primary};\n    box-shadow: ${props => props.theme.cardShadow};\n  \twidth: 100%;\n      \n  \tpadding: 1rem;\n    z-index: 100;\n`\n\nexport const StationName = styled.h1`\n    text-align: center;\n    color: ${props => props.theme.bg.septenary};\n    font-family: ${props => props.theme.font.primary};\n`\n\nexport const StatisticsSectionsContainer = styled.div`\n    display: flex;\n    height: 100%;\n    width: 100%;\n    justify-content: center;\n    align-items: center;\n    flex-direction:column;\n`\n\nexport const HeaderSection = styled.div`\n    display: flex;\n    flex-direction:row;\n    align-items: center;\n    justify-content: center;\n    position: absolute;\n    right: 1rem;\n\n`\n\nexport const HeaderSectionTitle = styled.h5`\n    text-align: center;\n    color: ${props => props.theme.bg.septenary};\n    font-family: ${props => props.theme.font.primary};\n`","import styled from 'styled-components'\nimport * as buttonCss from '../../../../../../common_css/button_css'\nimport * as commonCss from '../../../../../../common_css/common_css'\nimport * as styles from '../../statistics_page.style'\nimport { LightenDarkenColor } from '../../../../../../methods/utils/color_utils'\n\nexport const PlotHeader = styled.div`\n    ${commonCss.columnContainer};\n    align-items: center;\n\t//height: 30rem;\n\t//min-height: 30rem;\n`\n\nexport const SinglePlotContainer = styled.div`\n\tposition: relative;\n\tdisplay: flex;\n\tflex-direction: column;\n\tbackground: ${props => props.theme.bg.primary};\n  box-shadow: ${props => props.theme.cardShadow};\n\tborder-radius: 1rem;\n\tmin-width: 60rem;\n\t\n\n    width: 100%;\n    // max-width: 60%;\n    margin-bottom: 1rem;\n    // min-height: ${props => (props.minHeight && props.minHeight > 25) ? props.minHeight.toString() + \"rem\" : \"30rem\"};\n    height: fit-content;\n    min-height: fit-content;\n  \n  \t// /* // row layout\n\t// @media (min-width: ${props => props.theme.widthBreakpoint.laptopL}){\n\t// \t//flex: 1;\n\t// \twidth: 100%;\n\t// \tmargin: 0 5rem;\n\t// \theight: fit-content;\n\t// \tmin-height: fit-content;\n\t// }\n    //\n  \t// // column layout\n\t// @media (max-width: ${props => props.theme.widthBreakpoint.laptopL}){\n\t// \twidth: 100%;\n\t// \tmargin-bottom: 1rem;\n\t// \t// min-height: ${props => (props.minHeight && props.minHeight > 25) ? props.minHeight.toString() + \"rem\" : \"30rem\"};\n\t// \theight: fit-content;\n\t// \tmin-height: fit-content;\n\t// } */\n\n`\n\nexport const PlotContainer = styled.div`\n\tposition: relative;\n\t\n\tmax-height: ${props => (props.minHeight && props.minHeight > 25) ? props.minHeight.toString() + \"rem\" : \"35rem\"};\n\tmin-height: ${props => (props.minHeight && props.minHeight > 25) ? props.minHeight.toString() + \"rem\" : \"25rem\"};\n\theight: ${props => (props.minHeight && props.minHeight > 25) ? props.minHeight.toString() + \"rem\" : \"25rem\"};\n\t/* height: 100%; */\n  \n  \t//height: 100rem;\n  \t//min-height: 100rem;\n  \t//max-height: 100rem;\n  \n\tmin-width: 30rem;\n  \n\t/* overflow: hidden; */\n`\n\nexport const LoadingIcon = styled.i`\n    font-size: 1.5rem;\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translateX(-50%) translateY(-50%);\n`\n\nexport const NoDataText = styled.span`\n\tposition: absolute;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translate(-50%, -50%);\n\tfont-size: ${props => props.theme.fontSize.sz2};\n\tfont-family: ${props => props.theme.font.primary};\n\tfont-weight: ${props => props.theme.fontWeight.bold};\n\tcolor: ${props => props.theme.bg.septenary};\n`\n\nexport const PlotTitle = styled.h2`\n  font-size: ${props => props.theme.fontSize.sz2};\n  font-family: ${props => props.theme.font.primary};\n  color: ${props => props.theme.bg.septenary};\n\n  margin: 0rem .5rem 1rem .5rem;\n`\n\nexport const ChartButton = styled.button`\n    ${buttonCss.button};\n    background-color:${props => props.theme.schema.statistics.solid};\n    color: ${props => props.theme.bg.primary};\n    margin-top: .5rem;\n    margin-bottom: 0.1rem;\n    font-size: 1.25rem;\n\n    &:hover {\n      background-color:${props => LightenDarkenColor(props.theme.schema.statistics.solid, -5)};\n    }\n`\n\nexport const RowContainer = styled.div`\n    ${commonCss.rowContainer};\n    justify-content: space-around;\n    position: relative;\n`\n\nexport const ColumnContainer = styled.div`\n    ${commonCss.columnContainer};\n`\n\nexport const Label = styled.label`\n  font-size: ${props => props.theme.fontSize.sz3};\n  font-family: ${props => props.theme.font.primary};\n  color: ${props => props.theme.bg.octonary};\n`\n\nexport const DatePickerLabel = styled.label`\n  font-size: ${props => props.theme.fontSize.sz3};\n  font-family: ${props => props.theme.font.primary};\n  /* color: ${props => props.theme.bg.septenary}; */\n  color: white;\n\n  // flex-grow: 1;\n  // flex-basis: 12rem;\n\n  line-height: 2.5rem;\n  width: 7rem;\n  margin-right: 1rem;\n`;\n\nexport const TimePickerErrorComponent = styled.span`\n  color: ${props => props.theme.bad};\n  font-size: ${props => props.theme.fontSize.sz4};\n  font-weight: 600;\n  margin-top: .25rem;\n`;\n\nexport const BreakContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    height: fit-content;\n    background-color: ${props => props.theme.bg.secondary};\n    border-radius: .5rem;\n`\n\nexport const ChartTypeButton = styled.button`\n    font-size: 1.25rem;\n    width: 5rem;\n\n    font-size: 1rem;\n    width: 8rem;\n    border: none;\n    font-family: ${props => props.theme.font.primary};\n\n    color: ${props => props.selected ? props.theme.bg.primary : props.theme.bg.quinary};\n\n    background-color: ${props => props.selected ? props.theme.schema.statistics.solid : props.theme.bg.tertiary};\n\n    transition: background-color 0.25s ease, box-shadow 0.1s ease;\n\n    &:focus{\n        outline: 0 !important\n    }\n\n    &:active{\n        box-shadow: none;\n    }\n\n    &:hover{\n        //background-color: ${props => props.theme.bg.quaternary};\n    }\n`\n\nexport const BreakLabel = styled.label`\n  font-size: ${props => props.theme.fontSize.sz4};\n  font-family: ${props => props.theme.font.primary};\n  color: ${props => props.theme.bg.senary};\n`\n\nexport const FormIcon = styled.i`\n    position: absolute;\n    right: .5rem;\n    top: .5rem;\n    font-size: 1.25rem;\n`\n","import styled, { css } from \"styled-components\";\n\nexport const Container = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n`\n\nexport const Label = styled.p`\n    margin: 0;\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz3};\n    user-select: none;\n    margin-right: .5rem;\n    white-space: nowrap;\n`","import React, { useState, } from 'react';\nimport PropTypes from 'prop-types';\n\n// Import styles\nimport * as styled from './sort_dropdown.style'\n\n// Import components\nimport DropDownSearch from '../drop_down_search_v2/drop_down_search'\nimport RotateButton from '../rotate_button/rotate_button'\n\nconst SortDropDown = (props) => {\n\n    const {\n        labelField,\n        valueField,\n        options,\n        values,\n        onChange,\n        mapInput,\n        mapOutput,\n\n        label,\n        placeholder,\n\n        labelStyle,\n        dropDownSearchStyle,\n        schema,\n        containerCss,\n        dropdownCss,\n        valueCss,\n        portal,\n        maxDropdownWidth,\n\n        orderEnabled,\n        onChangeOrderDirection,\n        rotateButtonContainerCss,\n        rotateButtonIconCss,\n\n\n        ...rest\n    } = props || {}\n\n\n    return (\n        <styled.Container>\n            <styled.Label style={{ ...labelStyle }}>{label}</styled.Label>\n            <DropDownSearch\n                maxDropdownWidth={maxDropdownWidth}\n                portal={portal}\n                placeholder={placeholder}\n                containerCss={containerCss}\n                dropdownCss={dropdownCss}\n                valueCss={valueCss}\n                options={options}\n                onChange={(values) => {\n                    onChange(mapOutput(values[0]))\n                }}\n                values={mapInput(values)}\n                labelField={labelField}\n                valueField={valueField}\n                schema={schema}\n                style={{ ...dropDownSearchStyle }}\n            />\n            {orderEnabled &&\n                <RotateButton\n                    schema={schema}\n                    iconName1={\"fas fa-arrow-up\"}\n                    containerCss={rotateButtonContainerCss}\n                    iconCss={rotateButtonIconCss}\n\n                    onStateOne={() => {\n                        onChangeOrderDirection('ascending')\n                    }}\n                    onStateTwo={() => {\n                        onChangeOrderDirection('descending')\n                    }}\n                />\n            }\n\n        </styled.Container >\n    )\n\n}\n\n// Specifies propTypes\nSortDropDown.propTypes = {\n    style: PropTypes.object,\n    mapInput: PropTypes.func,\n    mapOutput: PropTypes.func,\n    orderEnabled: PropTypes.bool,\n};\n\n// Specifies the default values for props:\nSortDropDown.defaultProps = {\n    label: 'Sort By:',\n    orderEnabled: false,\n    onChange: null,\n    mapInput: (val) => val,\n    mapOutput: (val) => val,\n    style: {}\n};\n\n\nexport default SortDropDown","import React, { useState, useMemo } from 'react';\nimport { useSelector } from 'react-redux'\n\n// Import Styles\nimport * as styled from '../../charts.style'\n\n// Import components\nimport ShiftSettings from '../../../../../../../side_bar/content/settings/shift_settings/shift_settings'\n\n// Import Charts\nimport { ResponsiveLine } from '@nivo/line'\n\n// Import utils\nimport { convert24htoEpoch, convertDateto12h, isDateToday } from '../../../../../../../../methods/utils/time_utils'\nimport { deepCopy } from '../../../../../../../../methods/utils/utils';\n\nconst LineThroughputChart = (props) => {\n\n    const {\n        data,\n        themeContext,\n        isData,\n        date,\n        loading,\n        isWidget,\n    } = props\n\n    const settings = useSelector(state => state.settingsReducer.settings)\n\n    const [breaksEnabled, setBreaksEnabled] = useState({})\n    const [showForm, setShowForm] = useState(false)\n    const shiftDetails = settings.shiftDetails;\n\n    // Used for colors in line chart below\n    const colors = { Actual: themeContext.schema.statistics.solid, Expected: 'rgba(84, 170, 255, 0.4)' }\n\n    /**\n    * This converts the incoming data for a line graph\n    * IT does a few things\n    * 1) Converts incoming data to have the start and end of the shift\n    * 2) If theres an expected output, it adds thatline\n    * 3) if they're breaks, It adds those as well (pretty complex so see comments below)\n    *\n    * Uses usememo for performance reasons\n    */\n    const lineDataConverter = useMemo(() => {\n        // The array of converted incoming data\n        let convertedData = []\n\n        let dataCopy = deepCopy(data)\n        // Convert to epoch\n        const startEpoch = convert24htoEpoch(shiftDetails.startOfShift, date)\n        let startIndex\n\n        // Find Start of Shift in the data based on selected input\n        for (let i = 0; i < dataCopy.length; i++) {\n            const dataDate = dataCopy[i].x\n            // Go through the data until the time is equal to or after the start of shift input\n            if (dataDate >= startEpoch) {\n                startIndex = i\n                break\n            }\n        }\n\n        // If startIndex is undefined, then the start of the shift is after any data points\n        if(startIndex === undefined){\n            startIndex = dataCopy.length\n        }\n\n        // Convert end of shift to epoch\n        const endEpoch = convert24htoEpoch(shiftDetails.endOfShift, date)\n        let endIndex = dataCopy.length\n        // Find end of Shift in the data based on selected input\n        for (let i = 0; i < dataCopy.length; i++) {\n            const dataDate = dataCopy[i].x\n            // Go through the data until the time is  after the end of shift input and take the vlaue before that one\n            if (dataDate > endEpoch) {\n                endIndex = i\n                break\n            }\n        }\n\n        dataCopy = dataCopy.slice(startIndex, endIndex)\n        // Modify y values to be stacked (IE add the next value to the total previous sum)\n        let stack = 0\n        for (const point of dataCopy) {\n            convertedData.push({ x: point.x, y: stack + point.y })\n            stack += point.y\n        }\n\n        // Delete all points after the end of the shift if there are any\n        let pointsAfterShiftEnd = []\n        for (let point of convertedData) {\n            if (point.x > endEpoch) {\n                const ind = convertedData.indexOf(data => data.x === point.x)\n                pointsAfterShiftEnd.push(ind)\n            }\n        }\n        pointsAfterShiftEnd.forEach((point) => {\n            convertedData.splice(point, 1)\n        })\n\n        // Add 0 for the start of the shift\n        convertedData.unshift({ x: startEpoch, y: 0 })\n\n        // Add the last value in converted data to the end of the shift\n        // Only do this though if 2 things\n        // 1) its not today\n        // 2) it is today but the end of the shift is before the current time\n        // This allows for the line chart to be a bit more readable when your shift hasnt finished yet\n        if (!isDateToday(date) || (!!isDateToday(date) && Date.now() > endEpoch)) {\n            convertedData.push({ x: endEpoch, y: convertedData[convertedData.length - 1].y })\n        }\n\n        // This is the array of data that is passed to the line chart\n        let expectedOutput = []\n\n        // These are the steps it takes to account for breaks\n        // 1s) Create an array of minutes between the start and end of the shift\n        // 2s) Subtract time that belongs to breaks\n        // 3s) Find expected output sum for each point found in step 2\n        // 4s) Find Y value for each existing point (start of shift, breaks, end of shift) in expected output line in the array generated in step 3\n\n        // 1s) Create an array of minutes between the start and end of the shift\n        // Iterates I by 1 minute in epoch times (1000 (converts to seconds) * 60 (converts to minutes))\n\n        // This array is used to find indexes in the expected output where a slope should be applied to\n        // IE, where the expected output is not stagnant (part of a break)\n        let slopeValues = []\n        for (let i = startEpoch; i <= endEpoch; i = i + 60000) {\n            slopeValues.push(i)\n        }\n\n        // Add Expected output\n        if (!!shiftDetails.expectedOutput) {\n\n            // Add the beginning and end of each shift\n            expectedOutput.push({ x: startEpoch, y: 0 })\n            expectedOutput.push({ x: endEpoch, y: shiftDetails.expectedOutput })\n\n            /**\n             * This handles breaks\n             * 1b) Finds where the start and end of the break belong inside of the expected output array and adds\n             * 2b) Subtracts the breaks corresponding minutes from the slopeValues\n             * 3b) Adds the start of the break to the start of breaks array to be used to find the y value of the end of the break\n             */\n            let startOfBreaks = []\n            const breaks = Object.values(shiftDetails.breaks)\n            breaks.forEach((br, ind) => {\n                if (!br.enabled) return\n                const start = convert24htoEpoch(br.startOfBreak, date)\n                const end = convert24htoEpoch(br.endOfBreak, date)\n\n                // 1b) Find where the x value fits\n                for (let i = 0; i < expectedOutput.length; i++) {\n                    const output = expectedOutput[i]\n                    const nextOutput = expectedOutput[i + 1]\n\n                    // If the output x is less or equal to the start and the next output is greater or equal to the start, then this is where the break belongs in the expectedOutput\n                    if (output.x <= start && nextOutput.x >= start) {\n                        expectedOutput.splice(i + 1, 0, { x: start, y: 0 })\n                        expectedOutput.splice(i + 2, 0, { x: end, y: 0 })\n                        break\n                    }\n                }\n\n                // 2s/2b) Subtract time that belongs to breaks (start at the next minut after the break starts)\n                for (let i = start + 60000; i <= end; i = i + 60000) {\n                    slopeValues = slopeValues.filter(item => item !== i)\n                }\n\n                // 3b) Add the start of the break\n                startOfBreaks.push(start)\n\n            })\n\n            // 3s/4s)\n            // Add slope y points to matching points in expected output\n            slopeValues.forEach((val, ind) => {\n                expectedOutput.forEach((output, ind2) => {\n                    if (output.x !== val) {\n                        return\n                    }\n                    else {\n                        expectedOutput[ind2].y = (ind / (slopeValues.length - 1)) * shiftDetails.expectedOutput\n                    }\n                })\n            })\n\n            // 4s)\n            // Add stagnent y points for each break\n            expectedOutput.forEach((output, ind) => {\n\n                // Add the start of the break y value to the end of the break\n                // Ideally this is the next output after the start of the break\n                if (startOfBreaks.includes(output.x)) {\n                    expectedOutput[ind + 1].y = expectedOutput[ind].y\n                }\n            })\n\n        }\n\n\n\n        // These next 2 maps add the corresspoding points from each line to the other line\n        // This allows for direct comparison between where you should be vs where you are\n\n        // Update expected to have the same x values as converted\n        convertedData.map((output, ind) => {\n            let inExpected = false\n\n            // Go through expected and see if the value is in it\n            for (let i = 0; i < expectedOutput.length; i++) {\n                const expOutput = expectedOutput[i]\n                // If the x's are the same, then its in it\n                if (output.x === expOutput.x) {\n                    inExpected = true\n                    break\n                }\n            }\n\n            // If not in expected, add it\n            if (!inExpected) {\n                // Find where it belongs\n                for (let i = 0; i < expectedOutput.length; i++) {\n                    const expOutput = expectedOutput[i]\n                    const nextExpOutput = expectedOutput[i + 1]\n\n                    if (nextExpOutput === undefined) {\n                        continue\n                    }\n\n                    // If the output is greater then the expoutput and less then the next exp output, it belongs hur\n                    else if (expOutput.x <= output.x && (nextExpOutput === undefined || nextExpOutput.x >= output.x)) {\n\n                        // Find the value of y at the output x point using y = mx + b\n                        // Point 1 on the slope is the expOutput and point 2 is the nextExpOutput\n                        const m = (nextExpOutput.y - expOutput.y) / (nextExpOutput.x - expOutput.x)\n                        const b = expOutput.y - m * expOutput.x\n                        const yValue = m * output.x + b\n                        expectedOutput.splice(i + 1, 0, { x: output.x, y: yValue })\n                        break\n                    }\n                }\n            }\n        })\n\n        if (expectedOutput.length > 0) {\n\n            // Do the same to converted\n            expectedOutput.map((output, ind) => {\n                let inExpected = false\n\n                // Go through expected and see if the value is in it\n                for (let i = 0; i < convertedData.length; i++) {\n                    const expOutput = convertedData[i]\n                    // If the x's are the same, then its in it\n                    if (output.x === expOutput.x) {\n                        inExpected = true\n                        break\n                    }\n                }\n\n                // If not in expected, add it\n                if (!inExpected) {\n                    // Find where it belongs\n                    for (let i = 0; i < convertedData.length; i++) {\n                        const expOutput = convertedData[i]\n                        const nextExpOutput = convertedData[i + 1]\n\n                        if(!nextExpOutput){\n                            break\n                        }\n\n                        // If the output is greater then the expoutput and less then the next exp output, it belongs hur\n                        if (expOutput.x <= output.x && nextExpOutput.x >= output.x) {\n\n                            // Find the value of y at the output x point using y = mx + b\n                            // Point 1 on the slope is the expOutput and point 2 is the nextExpOutput\n                            const m = (nextExpOutput.y - expOutput.y) / (nextExpOutput.x - expOutput.x)\n                            const b = expOutput.y - m * expOutput.x\n                            const yValue = m * output.x + b\n                            convertedData.splice(i + 1, 0, { x: output.x, y: yValue })\n                            break\n                        }\n                    }\n                }\n            })\n        }\n\n\n        // Now convert all x values to times from Epoch\n        // Nivo cant handle epoch for some reason\n        convertedData.forEach((data, i) => {\n            convertedData[i] = { x: new Date(data.x), y: data.y }\n        })\n        expectedOutput.forEach((data, i) => {\n            expectedOutput[i] = { x: new Date(data.x), y: data.y }\n        })\n\n        const lineData = [{\n            \"id\": 'Actual',\n            \"color\": themeContext.bg.octonary,\n            \"data\": convertedData\n\n        },\n        {\n            \"id\": 'Expected',\n            \"color\": themeContext.bg.octonary,\n            \"data\": expectedOutput\n\n        },\n        ]\n        return lineData\n    }, [shiftDetails, data])\n\n\n    const renderResponsiveLine = useMemo(() => {\n\n        return (\n            <styled.PlotContainer style={{ flexGrow: '7' }} minHeight={27}>\n                <ResponsiveLine\n                    data={lineDataConverter}\n                    // data={!!convertedData ? convertedData : []}\n                    colors={line => colors[line.id]}\n\n                    xScale={{ type: \"time\" }}\n                    xFormat={(value) => convertDateto12h(value)}\n                    yFormat={value => Math.round(value)}\n                    yScale={{ type: 'linear', min: 'auto', max: 'auto', stacked: false, reverse: false }}\n\n                    axisTop={null}\n                    axisRight={null}\n                    axisBottom={{ format: (value) => convertDateto12h(value) }}\n\n                    axisLeft={{\n                        orient: 'left',\n                        tickSize: 5,\n                        tickPadding: 5,\n                        tickOffset: 10,\n                        tickValues: 4\n                    }}\n                    axisLeft={{\n                        enable: true,\n                    }}\n\n                    animate={false}\n                    useMesh={true}\n\n                    enablePoints={true}\n                    // pointLabel={(value) => `${convertDateto12h(value.x)}:${value.y}`}\n                    pointSize={5}\n                    pointBorderWidth={1}\n                    pointBorderColor={{ from: 'white' }}\n                    pointLabelYOffset={-12}\n\n                    margin={{ top: 22, left: 70, right: 70, bottom: 32 }}\n                    enableGridY={isData ? true : false}\n\n                    // curve=\"monotoneX\"\n                    // mainTheme={themeContext}\n                    legends={[\n                        {\n                            anchor: 'top-left',\n                            direction: 'column',\n                            justify: false,\n                            translateX: 10,\n                            translateY: 0,\n                            itemsSpacing: 0,\n                            itemDirection: 'left-to-right',\n                            itemWidth: 80,\n                            itemHeight: 20,\n                            itemOpacity: 0.75,\n                            symbolSize: 12,\n                            symbolShape: 'circle',\n                            symbolBorderColor: 'rgba(0, 0, 0, .5)',\n                            effects: [\n                                {\n                                    on: 'hover',\n                                    style: {\n                                        itemBackground: 'rgba(0, 0, 0, .03)',\n                                        itemOpacity: 1\n                                    }\n                                }\n                            ]\n                        }]}\n                    theme={{\n\n                        textColor: themeContext.bg.octonary,\n                        axis: {\n                            ticks: {\n                                line: {\n                                    stroke: \"fff\",\n                                },\n                                // text: {\n                                //     fill: \"fff\",\n                                //     textColor: '#ffffff',\n                                //     // fontFamily: 'Montserrat',\n                                //     fontSize: \"0.8rem\"\n                                // },\n                            }\n                        },\n                        grid: {\n                            line: {\n                                stroke: 'rgba(0, 0, 0, 0.1)',\n                                strokeWidth: 1,\n                            }\n                        },\n                        crosshair: {\n                            line: {\n                                stroke: \"#fff\",\n                                strokeDasharray: \"0\"\n                            }\n                        }\n                    }}\n\n                />\n\n\n            </styled.PlotContainer>\n        )\n    }, [lineDataConverter])\n\n    return (\n        <styled.RowContainer>\n            {breaksEnabled !== null &&\n                <>\n                    {renderResponsiveLine}\n\n                    {isWidget &&\n                        <>\n                            { showForm &&\n                                <div style={{ flexGrow: '3' }}>\n                                    <ShiftSettings themeContext={themeContext} />\n                                </div>\n                            }\n                            <styled.FormIcon onClick={() => setShowForm(!showForm)} className=\"fas fa-cog\" />\n                        </>\n                    }\n\n                </>\n            }\n\n        </styled.RowContainer >\n    )\n\n\n}\n\n\nexport default LineThroughputChart\n","import React, { useContext } from 'react';\n\n// Import component\nimport { ResponsiveBar } from '@nivo/bar'\nimport { linearGradientDef } from '@nivo/core'\n\n// Import utils\nimport { ThemeContext } from \"styled-components\";\n\nconst BarChart = (props) => {\n\n    const {\n        data,\n        colors,\n        selector,\n        mainTheme,\n        timeSpan,\n        axisBottom,\n        axisLeft,\n        horizontal,\n        layout,\n        enableGridX,\n        enableGridY,\n        ...rest\n    } = props\n\n    const themeContext = useContext(ThemeContext);\n\n    const theme = {\n        background: 'transparent',\n        fontFamily: 'sans-serif',\n        fontSize: 14,\n        textColor: themeContext.bg.senary,\n        whiteSpace: \"nowrap\",\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        axis: {\n            domain: {\n                line: {\n                    stroke: themeContext.bg.quinary,\n                    strokeWidth: 2\n                }\n            },\n            ticks: {\n                line: {\n                    stroke: themeContext.bg.senary,\n                    strokeWidth: 1\n                },\n                text: {\n\n                }\n            },\n            legend: {\n                text: {\n                    fontSize: 14,\n                }\n            }\n        },\n        grid: {\n            line: {\n                stroke: themeContext.bg.tertiary,\n                strokeWidth: 1\n            }\n        },\n        legends: {\n            text: {\n                fill: '#333333'\n            }\n        },\n        labels: {\n            text: {}\n        },\n        markers: {\n            lineColor: '#000000',\n            lineStrokeWidth: 1,\n            text: {}\n        },\n        dots: {\n            text: {}\n        },\n        // tooltip: {\n        //     container: {\n        //         background: 'white',\n        //         color: 'inherit',\n        //         fontSize: 'inherit',\n        //         borderRadius: '2px',\n        //         boxShadow: '0 1px 2px rgba(0, 0, 0, 0.25)',\n        //         padding: '5px 9px'\n        //     },\n        //     basic: {\n        //         whiteSpace: 'pre',\n        //         display: 'flex',\n        //         alignItems: 'center'\n        //     },\n        //     table: {},\n        //     tableCell: {\n        //         padding: '3px 5px'\n        //     }\n        // },\n        crosshair: {\n            line: {\n                stroke: '#000000',\n                strokeWidth: 1,\n                strokeOpacity: 0.75,\n                strokeDasharray: '6 6'\n            }\n        },\n        annotations: {\n            text: {\n                fontSize: 13,\n                outlineWidth: 2,\n                outlineColor: '#ffffff'\n            },\n            link: {\n                stroke: '#000000',\n                strokeWidth: 1,\n                outlineWidth: 2,\n                outlineColor: '#ffffff'\n            },\n            outline: {\n                fill: 'none',\n                stroke: '#000000',\n                strokeWidth: 2,\n                outlineWidth: 2,\n                outlineColor: '#ffffff'\n            },\n            symbol: {\n                fill: '#000000',\n                outlineWidth: 2,\n                outlineColor: '#ffffff'\n            }\n        }\n    }\n\n\n    // if (data === null || data === undefined) { return null }\n    return (\n        <ResponsiveBar\n            data={selector ? data[selector] : data}\n            keys={['y']}\n            // borderColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\n            indexBy='x'\n            // indexScale={{ type: 'band', round: true }}\n            animate={true}\n            // colors={{ scheme: 'nivo' }}\n            colors={colors}\n            borderColor={{ from: 'color' }}\n            // borderColor='#d177ed'\n            // xScale={{ type: 'time', format: '%Y-%m-%d %H:%M:%S', useUTC: false, precision: 'second', }}\n            // xFormat={'time:' + format}\n            // xFormat=\"time:%Y-%m-%d\"\n            // yScale={{ type: 'linear', min: 'auto', max: 'auto', stacked: false, reverse: false }}\n            margin={{ top: 20, left: 80, right: 80, bottom: 75 }}\n            // padding={{ top: 5, left: 5, right: 5, bottom: 5 }}\n            layout={layout}\n            labelTextColor={themeContext.bg.primary}\n\n            axisTop={null}\n            axisRight={null}\n            axisBottom={{\n                tickSize: 5,\n                // tickPadding: layout === \"horizontal\" ? 10 : -40,\n                // translateY: -25\n                legendOffset: 60,\n                tickRotation: 45,\n                legend: '',\n                fontSize: \"8rem\",\n                legendPosition: 'middle',\n                // legendOffset: 50,\n                ...axisBottom\n            }}\n            axisLeft={{\n                tickSize: 5,\n                zIndex: 200,\n                tickValues: 5,\n                // anchor: \"right\",\n                // tickPadding: layout === \"horizontal\" ? 40 : 4,\n                tickRotation: 0,\n                legend: 'Units',\n                legendPosition: 'middle',\n                legendOffset: -50,\n                ...axisLeft\n            }}\n\n            // defs={[\n            //     // using helpers\n            //     // will inherit colors from current element\n            //     linearGradientDef('gradientA', [\n            //         { offset: 0, color: 'inherit' },\n            //         { offset: 100, color: 'inherit', opacity: 0 },\n            //     ]),\n            //     linearGradientDef('gradientB', [\n            //         { offset: 0, color: '#000' },\n            //         { offset: 100, color: 'inherit' },\n            //     ]),\n            // ]}\n\n            // fill={[\n            //     // match using object query\n            //     { match: y => y < 10, id: 'gradientA' },\n            //     // match using function\n            //     { match: y => y >=, id: 'gradientB' }\n            // ]}\n\n            theme={theme}\n            enableGridY={enableGridY}\n            enableGridX={enableGridX}\n            gridYValues={5}\n            {...rest}\n\n        // legends={[{\n        //     fontSize: '1rem'\n        // }]}\n\n        />\n    )\n}\n\n// Specifies propTypes\nBarChart.propTypes = {\n};\n\n// Specifies the default values for props:\nBarChart.defaultProps = {\n    layout: \"vertical\",\n    enableGridX: false,\n    enableGridY: false,\n};\n\nexport default BarChart","import styled from 'styled-components'\n\nimport { LightenDarkenColor } from '../../../../../methods/utils/color_utils'\n\nexport const OverviewContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    text-align: center;\n    width: 100%;\n    height: 100%;\n    flex: 1;\n\n    align-items: center;\n    justify-content: start;\n\n    //padding-top: 1rem;\n    // padding: .5rem;\n\n\n`\n\nexport const Header = styled.div`\n\tbackground: ${props => props.theme.bg.quinary};\n  \tborder-bottom: 1px solid black;\n  \twidth: 100%;\n  \tpadding: 1rem;\n`\n\n\nexport const PlotsContainer = styled.div`\n  \t//align-items: center;\n  \tposition: relative;\n    //display: flex;\n    //flex-direction: row;\n    //flex: 1;\n    width: 100%;\n    height: 100%;\n    // background: red;\n    padding: 1rem 1rem 0rem 1rem;\n    overflow: auto;\n  \n    \n    // @media (max-width: ${props => props.theme.widthBreakpoint.laptopL}){\n    //     flex-direction: column;\n    // }\n\n    // display: flex;\n    // flex-direction: column;\n    // flex: 1;\n    // align-items: center;\n\n\t/* @media (min-width: ${props => props.theme.widthBreakpoint.laptopL}){\n      display: flex;\n      flex-direction: row;\n      flex: 1;\n\t} */\n`\n\n\n\n\n// ========== Statistics Container ========== //\nexport const StatsSection = styled.div`\n    /* background: ${props => LightenDarkenColor(props.theme.bg.quaternary, -10)}; */\n    border-radius: 0.5rem;\n\n    /* margin-bottom: 1rem; */\n\n    max-width: 60rem;\n    width: 100%;\n\n    height: 12rem;\n\n    display: flex;\n    flex-direction: row;\n\n    align-items: center;\n    justify-content: center;\n\n    padding: 0rem 4rem 0 4rem;\n`\nexport const StatTitle = styled.h2`\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 4rem;\n    \n    text-align: center;\n\n    font-size: ${props => props.theme.fontSize.sz2};\n    font-family: ${props => props.theme.font.primary};\n    color: white;\n`\n\nexport const Col = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n`\n\nexport const Stat = styled.div`\n    display: flex;\n    flex-direction: row;\n\n    align-items: center;\n    justify-content: center;\n\n`\n\nexport const StatLabel = styled.h3`\n    font-size: ${props => props.theme.fontSize.sz2};\n    font-family: ${props => props.theme.font.primary};\n    color: ${props => props.theme.fg.primary};\n\n    margin-right: 1rem;\n`\n\nexport const StatValue = styled.h4`\n    font-size: ${props => props.theme.fontSize.sz3};\n    font-family: ${props => props.theme.font.primary};\n    color: white;\n`\n\nexport const RowContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n\n    // width: 100%;\n    min-width: 15rem;\n    max-width: 45rem;\n`\n\nexport const DateSelectorIcon = styled.i`\n    font-size: 1.5rem;\n    margin-right: 1rem;\n    margin-left: 1rem;\n    color: ${props => props.theme.bg.septenary};\n\n    &:hover{\n        cursor:pointer;\n    }\n`\n\nexport const DateSelectorTitle = styled.h1`\n    font-size: ${props => props.theme.fontSize.sz2};\n    font-family: ${props => props.theme.font.primary};\n    color: ${props => props.theme.bg.septenary};\n\n    margin: 0rem .5rem;\n\n`\nexport const LoadingIcon = styled.i`\n    font-size: 1.5rem;\n`","import React, { useContext, useRef, useEffect } from 'react';\n\n// Import Styles\nimport * as styled from './charts.style'\n\nimport { ThemeContext } from 'styled-components';\n\n\n// Import Charts\nimport BarChart from '../../chart_types/bar_chart'\nimport { TIME_SPANS } from \"../statistics_overview\";\n\nconst ReportChart = (props) => {\n\n    const themeContext = useContext(ThemeContext);\n\n    const {\n        reportButtons,\n        reportData,\n        isThroughputLoading,\n        timeSpan,\n        isWidget,\n    } = props\n\n    // get array of report buttons for current station\n    const reportButtonsArr = Object.values(reportButtons)\n\n    // get just the names of the buttons as an array\n    const reportButtonNames = (reportButtonsArr && Array.isArray(reportButtonsArr)) ? reportButtonsArr.map((currButton) => currButton.label) : []\n\n    // data comes from back end with the key of the button as the key and the value as the count, but we want the name of the button\n    // therefore, must map through each item and replace the button's id with its name\n    const filteredData = useRef([]);\n    const filteredDataColors = useRef({});\n\n    useEffect(() => {\n        filteredData.current = (reportData && reportData.reports && Array.isArray(reportData.reports)) ?\n            reportData.reports.map((currReport) => {\n\n                const {\n                    lable, // extract label\n                    ...currReportEntries // this contains the button keys followed by their count as the value\n                } = currReport\n\n                // create object for storing new key value paies (buttonName: count)\n                var updatedReport = {\n                    lable\n                }\n\n                const currReportButtonIds = Object.keys(currReportEntries)\n\n                currReportButtonIds.forEach((currButtonId) => {\n\n                    // if there is a button with the corresponding id\n                    if (reportButtons[currButtonId]) {\n                        // Map colors of filtered data\n                        filteredDataColors.current[reportButtons[currButtonId].label] = reportButtons[currButtonId].color\n                        // get the label from the actual button, and get the count from the entry, then add it to the updated report\n                        updatedReport[reportButtons[currButtonId].label] = currReportEntries[currButtonId] ? currReportEntries[currButtonId] : 0\n                    }\n                })\n\n                return updatedReport\n            })\n            :\n            []\n    }, [reportData])\n\n    // set min height based on number of entries so chart won't squeeze rows too close together\n    const minHeight = (filteredData.current && Array.isArray(filteredData.current)) ? filteredData.current.length : 0\n\n    return (\n        <styled.SinglePlotContainer\n            minHeight={minHeight}\n            // Margin bottom is used to be able to scroll to the bottom and see the report graph\n            style={{ marginBottom: '7rem' }}\n        >\n            {isWidget &&\n                <styled.PlotHeader>\n                    <styled.PlotTitle>Reports</styled.PlotTitle>\n                </styled.PlotHeader>\n            }\n\n\n            {isThroughputLoading ?\n                <styled.PlotContainer>\n                    <styled.LoadingIcon className=\"fas fa-circle-notch fa-spin\" style={{ fontSize: '3rem', marginTop: '5rem' }} />\n                </styled.PlotContainer>\n                :\n                <styled.PlotContainer\n                    minHeight={minHeight}\n                >\n                    <BarChart\n                        data={filteredData.current}\n                        colors={bar => !!filteredDataColors ? filteredDataColors.current[bar.id] : themeContext.theme.schema.statistics.solid}\n                        keys={reportButtonNames}\n                        indexBy={'lable'}\n                        colorBy={\"id\"}\n                        mainTheme={themeContext}\n                        timeSpan={timeSpan}\n                        layout={\"vertical\"}\n                        enableGridY={true}\n                        axisBottom={{\n                            legend: TIME_SPANS[timeSpan]?.displayName || TIME_SPANS.day.displayName,\n                            tickRotation: timeSpan === TIME_SPANS.month.name ? 0 : -90,\n                        }}\n                        axisLeft={{\n                            legend: 'Count'\n                        }}\n                    />\n\n                    {!reportData &&\n                        <styled.NoDataText>No Data</styled.NoDataText>\n                    }\n                </styled.PlotContainer>\n            }\n\n        </styled.SinglePlotContainer>\n    )\n}\n\nexport default ReportChart","import styled from 'styled-components'\n\nexport const RowContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n\n    // width: 100%;\n    min-width: 25rem;\n    max-width: 45rem;\n`\n\nexport const DateSelectorIcon = styled.i`\n    font-size: 1.5rem;\n    margin-right: 1rem;\n    margin-left: 1rem;\n    color: ${props => props.theme.bg.septenary};\n\n    &:hover{\n        cursor:pointer;\n    }\n`\n\nexport const DateSelectorTitle = styled.h1`\n    font-size: ${props => props.theme.fontSize.sz2};\n    font-family: ${props => props.theme.font.primary};\n    color: ${props => props.theme.bg.septenary};\n\n    margin: 0rem .5rem;\n\n`\nexport const LoadingIcon = styled.i`\n    font-size: 1.5rem;\n`","import styled from 'styled-components'\n\nimport { LightenDarkenColor } from '../../../../../../methods/utils/color_utils'\n\nexport const ButtonGroupContainer = styled.div`\n    width: 60rem;\n    max-width: 60rem;\n    height: 2.5rem;\n\n    display: flex;\n    flex-directin: row;\n`\n\nexport const SelectorButton = styled.button`\n    flex-grow: 1;\n    border: none;\n\n    color: ${props => props.selected ? props.theme.fg.primary : props.theme.bg.senary};\n    background: ${props => LightenDarkenColor(props.theme.bg.quaternary, props.selected ? -10 : -15)};\n\n    &:focus {\n        outline: none;\n    }\n`","import React from 'react';\n\n// Import Styles\nimport * as styled from './day_selector.style'\n\nconst DaySelector = (props) => {\n\n    const {\n        date,\n        dateIndex,\n        loading,\n        mapInput,\n        mapOutput,\n        onChange,\n    } = props\n\n    return (\n        <styled.RowContainer>\n            <styled.DateSelectorIcon\n                className='fas fa-chevron-left'\n                onClick={() => {\n                    const index = dateIndex + 1\n                    onChange(mapOutput(index))\n                }}\n            />\n            {loading ?\n                <styled.LoadingIcon className=\"fas fa-circle-notch fa-spin\" />\n                :\n                <styled.DateSelectorTitle>{mapInput(date)}</styled.DateSelectorTitle>\n\n            }\n\n            {/* If the current dateIndex is 0, then have a blank icon that does nothing. Can't go to the future now can we dummy */}\n            {dateIndex !== 0 ?\n                <styled.DateSelectorIcon\n                    className='fas fa-chevron-right'\n                    onClick={() => {\n                        const index = dateIndex - 1\n                        onChange(mapOutput(index))\n                    }}\n                />\n                :\n                <styled.DateSelectorIcon />\n\n            }\n        </styled.RowContainer>\n    )\n}\n\nDaySelector.propTypes = {\n}\n\nDaySelector.defaultProps = {\n    date: '',\n    loading: false,\n    mapInput: (val) => val,\n    mapOutput: (val) => val,\n}\n\nexport default DaySelector","import styled from 'styled-components'\n\nexport const Container = styled.div`\n    /* position: absolute; */\n    /* left: 12rem; */\n    /* bottom: 3rem; */\n    /* right: 12rem; */\n    /* border-bottom: 0.02rem solid white; */\n    z-index: 1;\n    margin-bottom: 1rem;\n    display: flex;\n    justify-content:center;\n\n\n`;\n\nexport const TimespanButton = styled.button`\n    background: none;\n    border: none;\n    position: relative;\n\n    display: inline-block;\n    width: 5rem;\n    height: 2rem;\n    // margin: 0rem .25rem;\n    \n    color: ${props => props.selected ? props.theme.schema.locations : props.theme.bg.quaternary};\n    line-height: 2rem;\n    text-align: center;\n    font-size: 1rem;\n    font-weight: ${props => props.selected ? 600 : 400};\n    font-family: ${props => props.theme.font.primary};\n\n    border-bottom: ${props => props.selected ? '0.14rem' : '0.02rem'} solid ${props => props.selected ? props.color : props.theme.quaternary};\n    box-sizing: border-box;\n\n    transition: color 0.25s;\n\n    cursor: pointer;\n    z-index: 2;\n    &:focus {outline:0;}\n    &:hover {\n        color: ${props => props.color};\n    }\n`;","import React from 'react';\n\nimport * as styled from './time_span_selector.style'\n\nconst TimeSpanSelector = (props) => {\n\n    const {\n        timeSpan,\n        setTimeSpan,\n        timespanDisabled,\n    } = props\n\n    return (\n        <styled.Container>\n            {/* <styled.TimespanButton selected={timeSpan == 'live'} onClick={() => setTimeSpan('live')}>Live</styled.TimespanButton> */}\n            <styled.TimespanButton disabled={timespanDisabled} selected={(timeSpan === 'day' || timeSpan === 'line')} onClick={() => setTimeSpan('day')}>Day</styled.TimespanButton>\n            <styled.TimespanButton disabled={timespanDisabled} selected={timeSpan === 'week'} onClick={() => setTimeSpan('week')}>Week</styled.TimespanButton>\n            <styled.TimespanButton disabled={timespanDisabled} selected={timeSpan === 'month'} onClick={() => setTimeSpan('month')}>6 Weeks</styled.TimespanButton>\n            <styled.TimespanButton disabled={timespanDisabled} selected={timeSpan === 'year'} onClick={() => setTimeSpan('year')}>Year</styled.TimespanButton>\n            {/* <styled.TimespanButton schema={schema} selected={timeSpan == 'all'} onClick={() => setTimeSpan('all')}>ALL</styled.TimespanButton> */}\n        </styled.Container>\n    )\n}\n\nexport default TimeSpanSelector","import React, { useState, useEffect, useContext, useRef, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useParams, useHistory } from 'react-router-dom'\n\n// Import styles\nimport * as styled from './statistics_overview.style'\nimport { ThemeContext } from 'styled-components';\n\n// Import Charts\nimport ThroughputChart from './charts/throughput_chart/throughput_chart'\nimport ReportChart from './charts/report_chart'\n\n// Import Components\nimport DataSelector from './data_selector/data_selector.js'\nimport ApexGaugeChart from './apex_gauge_chart'\nimport DaySelector from '../../../../basic/day_selector/day_selector'\nimport TimeSpanSelector from '../../../../basic/timespan_selector/time_span_selector'\n\n// Import Actions\nimport { getStationAnalytics } from '../../../../../redux/actions/stations_actions'\n\n// Import Utils\nimport { getDateName, getDateFromString, convertArrayToObject } from '../../../../../methods/utils/utils'\nimport { getReportAnalytics, getReportEvents } from \"../../../../../redux/actions/report_event_actions\";\n\nexport const TIME_SPANS = {\n    live: {\n        name: \"live\",\n        displayName: \"Live\",\n    },\n    day: {\n        name: \"day\",\n        displayName: \"Time\",\n    },\n    week: {\n        name: \"week\",\n        displayName: \"Day\"\n    },\n    month: {\n        name: \"month\",\n        displayName: \"Week\"\n    },\n    year: {\n        name: \"year\",\n        displayName: \"Month\"\n    },\n    all: {\n        name: \"all\",\n        displayName: \"All\"\n    }\n}\n\n// TODO: Commented out charts for the time being (See comments that start with TEMP)\nconst StatisticsOverview = (props) => {\n\n    const themeContext = useContext(ThemeContext);\n\n    const params = useParams()\n    const stationID = params.stationID\n    let plotRef = useRef()\n\n    const dispatch = useDispatch()\n    const dispatchGetReportEvents = () => dispatch(getReportEvents());\n\n    const [delayChartRender, setDelayChartRender] = useState('none')\n    const widgetPageLoaded = useSelector(state => { return state.widgetReducer.widgetPageLoaded })\n    const stations = useSelector(state => state.stationsReducer.stations)\n    const devices = useSelector(state => state.devicesReducer.devices)\n    const reportEvents = useSelector(state => { return state.reportEventsReducer.reportEvents }) || {}\n    const dashboards = useSelector(state => { return state.dashboardsReducer.dashboards }) || {}\n\n    const [throughputData, setThroughputData] = useState(null)\n    const [reportData, setReportData] = useState(null)\n\n    const [timeSpan, setTimeSpan] = useState('day')\n    const [dateIndex, setDateIndex] = useState(0)\n    const [selector, setSelector] = useState('throughPut')\n    const [loading, setLoading] = useState(false)\n    const [timespanDisabled, setTimespanDisabled] = useState(false)\n    const [parentSortLevel, setParentSortLevel] = useState({ label: 'Object', value: 'object' })\n\n    const [isDevice, setIsDevice] = useState(false)\n    const [reportButtons, setReportButtons] = useState([])\n\n    // update location properties\n    useEffect(() => {\n\n        const location = stations[stationID]\n\n        // get report buttons\n        const dashboardId = location.dashboards && Array.isArray(location.dashboards) && location.dashboards[0]\n        const dashboard = dashboards[dashboardId] ? dashboards[dashboardId] : {}\n        const currReportButtons = dashboard.report_buttons ? dashboard.report_buttons : []\n\n        // store as object of ids to prevent excessive looping\n        setReportButtons(convertArrayToObject(currReportButtons, \"_id\"))\n\n    }, [stationID, dashboards, stations])\n\n\n    const colors = {\n        taktTime: '#42e395',\n        pYield: '#59dbff',\n        throughPut: '#d177ed'\n    }\n\n    // On page load, load in the data for today\n    useEffect(() => {\n        getAllData()\n        const dataInterval = setInterval(() => getAllData(), 30000)\n        return () => {\n            clearInterval(dataInterval)\n        }\n    }, [timeSpan])\n\n    const getAllData = () => {\n        dispatchGetReportEvents() // load report events\n\n\n        if (stations[params.stationID].device_id !== undefined) {\n            setIsDevice(true)\n        }\n\n        // If the page has been loaded in (see widget pages) then don't delay chart load, \n        // else delay chart load because it slows down the widget page opening animation.\n        if (widgetPageLoaded) {\n            setDelayChartRender('flex')\n        } else {\n            setTimeout(() => {\n                setDelayChartRender('flex')\n            }, 300);\n        }\n\n        const body = { timespan: timeSpan, index: dateIndex }\n        const dataPromise = getStationAnalytics(stationID, body)\n        dataPromise.then(response => {\n            if (response === undefined) return\n\n            // Convert Throughput for line chart\n            if (timeSpan === 'line') {\n                let convertedThroughput = []\n                response.throughPut.forEach((dataPoint) => {\n                    // Round Epoch time and multiply by 1000 to match front end times\n                    let convertedTime = dataPoint.x * 1000\n                    convertedTime = Math.round(convertedTime)\n                    convertedThroughput.push({ x: convertedTime, y: dataPoint.y })\n                })\n                response = {\n                    ...response,\n                    throughPut: convertedThroughput\n                }\n            }\n            setThroughputData(response)\n\n        })\n\n        getReportData(body)\n    }\n\n    const getReportData = async (body) => {\n        setLoading(true)\n        const reportAnalyticsResponse = await getReportAnalytics(stationID, body)\n\n        if (reportAnalyticsResponse && !(reportAnalyticsResponse instanceof Error)) {\n            setReportData(reportAnalyticsResponse)\n        }\n        setLoading(false)\n    }\n\n    const handleDeviceStatistics = () => {\n\n        const device = devices[stations[params.stationID].device_id]\n        if (device === undefined) return\n        return (\n\n            <>\n                {/* <p>{Object.keys(device.real_data)}</p> */}\n                <styled.StatLabel>{device.real_data}</styled.StatLabel>\n            </>\n        )\n    }\n\n    /**\n     * Gets the new data based on the selected time span and dateIndex\n     * \n     * TimeSpan:\n     * Can be either Day, Week, Month or Year\n     * \n     * DateIndex:\n     * The current date (today) index is 0, if you want to go back to the past date, the index would be 1 \n     * \n     * @param {*} newTimeSpan \n     * @param {*} newDateIndex \n     */\n    const onTimeSpan = async (newTimeSpan, newDateIndex, newSortLevel) => {\n\n        setTimeSpan(newTimeSpan)\n        setDateIndex(newDateIndex)\n        setParentSortLevel(newSortLevel)\n\n        setLoading(true)\n\n        const body = { timespan: newTimeSpan, index: newDateIndex, sort_index: newSortLevel.value }\n        const dataPromise = getStationAnalytics(stationID, body)\n\n        // If the timespan changes to line, then dont change what the report chart is showing\n        if (newTimeSpan !== 'line') {\n            const reportAnalyticsResponse = await getReportAnalytics(stationID, body)\n            if (reportAnalyticsResponse && !(reportAnalyticsResponse instanceof Error)) {\n                setReportData(reportAnalyticsResponse)\n            }\n        }\n\n        dataPromise.then(response => {\n            if (response === undefined) return setLoading(false)\n            // Convert Throughput\n            if (newTimeSpan === 'line') {\n                let convertedThroughput = []\n                response.throughPut.forEach((dataPoint) => {\n                    // Round Epoch time and multiply by 1000 to match front end times\n                    let convertedTime = dataPoint.x * 1000\n                    convertedTime = Math.round(convertedTime)\n                    convertedThroughput.push({ x: convertedTime, y: dataPoint.y })\n                })\n                response = {\n                    ...response,\n                    throughPut: convertedThroughput\n                }\n                setTimeSpan('line')\n            }\n\n            setThroughputData(response)\n            setLoading(false)\n        })\n    }\n\n    const renderHeader = () => {\n        return (\n            <div style={{ marginBottom: '1rem', alignItems: \"center\", display: \"flex\", flexDirection: \"column\" }}>\n                {\n                    <>\n                        <TimeSpanSelector\n                            timespanDisabled={timespanDisabled}\n                            setTimeSpan={(timeSpan) => onTimeSpan(timeSpan, 0, parentSortLevel)}\n                            timeSpan={timeSpan}\n                        />\n                        {/* Commented out for now, only need through put bar chart */}\n                        {/* {handleGaugeCharts()} */}\n                    </>\n                }\n                {renderDateSelector()}\n            </div>\n        )\n    }\n\n    // Handles the date selector at the top of the charts\n    const renderDateSelector = () => {\n\n        if (throughputData === null) return null\n\n        return (\n            <DaySelector\n                date={throughputData.date_title}\n                dateIndex={dateIndex}\n                loading={loading}\n                onChange={(newIndex) => {\n                    onTimeSpan(timeSpan, newIndex, parentSortLevel)\n                }}\n            />\n        )\n\n    }\n\n    const handleGaugeCharts = () => {\n        return (\n            <styled.StatsSection>\n                <ApexGaugeChart max={Math.min(...throughputData.taktTime.map(point => point.y))} min={Math.max(...throughputData.taktTime.map(point => point.y))} value={throughputData.taktTime[throughputData.taktTime.length - 1].y}\n                    formatValue={() => {\n                        // const val = data.taktTime[data.taktTime.length - 1].y\n                        // return String(Math.floor(val)) + ':' + String(Math.round((val % 1) * 60))\n                        return '1:23'\n                    }}\n                    name='Takt Time' color={colors.taktTime} onClick={() => setSelector('taktTime')} selected={selector == 'taktTime'} />\n                <ApexGaugeChart min={Math.min(...throughputData.pYield.map(point => point.y))} max={Math.max(...throughputData.pYield.map(point => point.y))} value={throughputData.pYield[throughputData.pYield.length - 1].y}\n                    formatValue={() =>\n                        Math.round(10 * throughputData.pYield[throughputData.pYield.length - 1].y) / 10\n                    }\n                    name='Quality' color={colors.pYield} onClick={() => setSelector('pYield')} selected={selector == 'pYield'} />\n                <ApexGaugeChart min={Math.min(...throughputData.throughPut.map(point => point.y))} max={Math.max(...throughputData.throughPut.map(point => point.y))} value={throughputData.throughPut[throughputData.throughPut.length - 1].y}\n                    formatValue={() =>\n                        throughputData.throughPut[throughputData.throughPut.length - 1].y\n                    }\n                    name='Throughput' color={colors.throughPut} onClick={() => setSelector('throughPut')} selected={selector == 'throughPut'} />\n            </styled.StatsSection>\n        )\n    }\n\n\n\n    return (\n\n        <styled.OverviewContainer>\n            {/* {isDevice &&\n                handleDeviceStatistics()\n            } */}\n\n\n            {/* Commented out for now, only need through put bar chart */}\n            {/* <DataSelector selector={selector} setSelector={setSelector} /> */}\n\n            <styled.PlotsContainer\n                ref={pc => plotRef = pc}\n            // onMouseMove={findSlice}\n            >\n                {renderHeader()}\n                <ThroughputChart\n                    data={throughputData}\n                    loading={loading}\n                    timeSpan={timeSpan}\n                    isWidget={true}\n                    loadLineChartData={() => {\n                        onTimeSpan('line', dateIndex, parentSortLevel)\n                    }}\n                    loadBarChartData={() => {\n                        onTimeSpan('day', dateIndex, parentSortLevel)\n\n                    }}\n                    disableTimeSpan={(bool) => {\n                        setTimespanDisabled(bool)\n                    }}\n                    setParentSortLevel={(val) => {\n                        onTimeSpan(timeSpan, dateIndex, val)\n                    }}\n                    sortLevel={parentSortLevel}\n                />\n                <ReportChart\n                    reportButtons={reportButtons}\n                    reportDate={reportData}\n                    isThroughputLoading={loading}\n                    timeSpan={timeSpan}\n                    reportData={reportData}\n                    isWidget={true}\n                />\n            </styled.PlotsContainer>\n\n        </styled.OverviewContainer>\n    )\n}\n\nexport default StatisticsOverview","import React, { useState, useEffect, useContext, useRef, useMemo } from 'react';\n\n// Import Styles\nimport * as styled from '../charts.style'\nimport { ThemeContext } from 'styled-components';\n\n// Import Basic Components\nimport SortDropdown from '../../../../../../basic/sort_dropdown/sort_dropdown'\n\n// Import components\nimport LineThroughputChart from './line_throughput_chart/line_throughput_chart'\n\n// Import Actions\nimport { getStationAnalytics } from '../../../../../../../redux/actions/stations_actions'\n\n// Import Charts\nimport BarChart from '../../../chart_types/bar_chart'\nimport { useSelector } from \"react-redux\";\nimport { isObject } from \"../../../../../../../methods/utils/object_utils\";\nimport { capitalizeFirstLetter } from \"../../../../../../../methods/utils/string_utils\";\nimport { TIME_SPANS } from \"../../statistics_overview\";\n\nconst minHeight = 0\n\nconst ThroughputChart = (props) => {\n\n    const themeContext = useContext(ThemeContext);\n\n    const {\n        data,\n        loading,\n        timeSpan,\n        loadLineChartData,\n        loadBarChartData,\n        disableTimeSpan,\n        isWidget,\n        sortLevel,\n        setParentSortLevel,\n    } = props\n\n    // redux state\n    const objects = useSelector(state => state.objectsReducer.objects)\n    const cards = useSelector(state => state.cardsReducer.cards)\n    const lots = useSelector(state => state.lotsReducer.lots)\n    const tasks = useSelector(state => state.tasksReducer.tasks)\n\n    const [showBar, setShowBar] = useState(true)\n    const [throughputData, setThroughputData] = useState([])\n    const [lineData, setLineData] = useState([])\n    const [isData, setIsData] = useState(false)\n    const [chartKeys, setChartKeys] = useState(false)\n\n    const dropDownOptions = [\n        { label: 'Object', value: 'object' },\n        { label: 'Lot', value: 'lot_id' },\n        { label: 'Route', value: 'route_id' }\n\n    ]\n\n    // Useeffect for sorting bar chart data\n    useEffect(() => {\n        let tempChartKeys = []  // keys for chart = object names\n        // let tempChartColors = {}\n        let tempFilteredData = []\n        let deletedChartKeys = []\n\n        if (showBar) {\n            data?.throughPut?.forEach((currItem) => {\n                const {\n                    lable,\n                    ...sortedIds\n                } = currItem || {}\n\n                let updatedItem = { lable }   // used for changing keys from object ids to object names, keep label the same\n\n                Object.entries(sortedIds)\n                    .filter((currEntry) => {\n                        const [currKey, currVal] = currEntry\n\n                        // remove entry if value is 0 to prevent showing a bunch of 0's on the axis\n                        return currVal > 0\n                    })\n                    .forEach((currEntry, currIndex) => {\n\n                        const [currKey, currVal] = currEntry\n\n                        // for null key, set default name and use value. This is for objectless routes\n                        if (currKey === null || currKey === \"null\") {\n\n                            // default name\n                            const currObjectName = `No ${sortLevel.label}`\n\n                            // if name isn't in chart keys, add it, or else it won't show up on the chart\n                            if (!tempChartKeys.includes(currObjectName)) {\n                                tempChartKeys.push(currObjectName)\n                            }\n                            // add key,value pair to data item\n                            updatedItem[currObjectName] = currVal\n                        }\n\n                        // route does have object id\n                        else {\n\n                            const onChartKeys = (name) => {\n                                // if name isn't in chart keys, add it, or else it won't show up on the chart\n                                if (!tempChartKeys.includes(name)) {\n                                    tempChartKeys.push(name)\n                                }\n\n                                // add key,value pair to data item\n                                updatedItem[name] = currVal\n                            }\n\n                            const onDeletedKeys = (key) => {\n                                // if this id isn't already in deletedObjs array, add it\n                                if (!deletedChartKeys.includes(key)) {\n                                    deletedChartKeys.push(key)\n                                }\n\n                                // get index of id in deletedObjs arr\n                                const deletedObjKeyIndex = deletedChartKeys.indexOf(key)\n\n                                // create name using index\n                                const currObjectName = `Deleted ${sortLevel.label} ${deletedObjKeyIndex + 1}`\n\n                                onChartKeys(currObjectName)\n\n                            }\n                            switch (sortLevel.value) {\n\n                                case 'object':\n                                    const currObject = objects[currKey]\n\n                                    // object with id was found\n                                    if (isObject(currObject)) {\n\n                                        // get object name\n                                        const {\n                                            name: currObjectName = `Unnamed`\n                                        } = currObject || {}\n\n                                        // format\n                                        const currObjectNameCapitalized = capitalizeFirstLetter(currObjectName)\n\n                                        onChartKeys(currObjectNameCapitalized)\n                                    }\n\n                                    // object with id was NOT found\n                                    else {\n                                        onDeletedKeys(currKey)\n                                    }\n                                    break;\n\n                                case 'lot_id':\n                                    const lot = cards[currKey]\n                                    if (!!lot) {\n                                        onChartKeys(lot.name)\n                                    }\n\n                                    else {\n                                        onDeletedKeys(currKey)\n                                    }\n                                    break;\n\n                                case 'route_id':\n                                    const route = tasks[currKey]\n                                    if (!!route) {\n                                        onChartKeys(route.name)\n                                    }\n\n                                    else {\n                                        onDeletedKeys(currKey)\n                                    }\n                                    break;\n\n                                default:\n                                    const currObjectDef = objects[currKey]\n\n                                    // object with id was found\n                                    if (isObject(currObjectDef)) {\n\n                                        // get object name\n                                        const {\n                                            name: currObjectName = `Unnamed`\n                                        } = currObjectDef || {}\n\n                                        // format\n                                        const currObjectNameCapitalized = capitalizeFirstLetter(currObjectName)\n\n                                        onChartKeys(currObjectNameCapitalized)\n                                    }\n\n                                    // object with id was NOT found\n                                    else {\n                                        onDeletedKeys(currKey)\n                                    }\n                                    break;\n                            }\n\n\n\n                        }\n                    })\n\n                tempFilteredData.push(updatedItem)\n\n            })\n\n            // setChartColors(tempChartColors)\n            setChartKeys(tempChartKeys)\n            setIsData((throughputData && Array.isArray(throughputData) && throughputData.length > 0))\n            setThroughputData(tempFilteredData)\n            setLineData([])\n\n        }\n        else if(!!data?.throughPut) {\n            setLineData(data.throughPut)\n            setThroughputData([])\n        }\n        else {\n            setLineData([])\n            setThroughputData([])  \n        }\n    }, [data, showBar, sortLevel])\n\n    useEffect(() => {\n        if (showBar || isWidget) {\n            disableTimeSpan(false)\n        } else {\n            disableTimeSpan(true)\n        }\n    }, [showBar])\n\n    // UseEffect for when to show a line chart or a bar chart\n    useEffect(() => {\n        if (timeSpan === 'line') {\n            setShowBar(false)\n        } else {\n            setShowBar(true)\n        }\n    }, [timeSpan])\n\n    return (\n        <styled.SinglePlotContainer\n            minHeight={minHeight}\n        >\n            {isWidget &&\n                // If its a widget then have some elements here that control the data\n                // These elements all have callbacks to their parent component, which is statistics overveiw\n                <styled.PlotHeader>\n                    <styled.PlotTitle>Output</styled.PlotTitle>\n                    {/* <styled.ChartButton onClick={() => setShowBar(!showBar)} >Compare Expected output</styled.ChartButton> */}\n\n                    {(timeSpan === 'day' || timeSpan === 'line') &&\n                        <styled.RowContainer style={{ marginBottom: '.5rem' }}>\n                            <styled.ChartTypeButton\n                                style={{ borderRadius: '.5rem 0rem 0rem .5rem' }}\n                                onClick={() => {\n                                    loadBarChartData()\n                                }}\n                                selected={showBar}\n                            >\n                                Bar\n                        </styled.ChartTypeButton>\n                            <styled.ChartTypeButton\n                                style={{ borderRadius: '0rem .5rem .5rem 0rem' }}\n                                onClick={() => {\n                                    loadLineChartData()\n                                }}\n                                selected={!showBar}\n                            >\n                                Line\n                        </styled.ChartTypeButton>\n                        </styled.RowContainer>\n                    }\n                    {timeSpan !== 'line' &&\n                        <SortDropdown\n                            options={dropDownOptions}\n                            labelField={'label'}\n                            valueField={'label'}\n                            dropDownSearchStyle={{ minWidth: '10rem' }}\n                            onChange={(val) => {\n                                setParentSortLevel(val)\n                            }}\n                            values={[sortLevel]}\n                        />\n                    }\n                </styled.PlotHeader>\n            }\n\n            {!!loading ?\n                <styled.PlotContainer>\n                    <styled.LoadingIcon className=\"fas fa-circle-notch fa-spin\" style={{ fontSize: '3rem' }} />\n                </styled.PlotContainer>\n                :\n\n                <styled.PlotContainer\n                    minHeight={!!showBar ? minHeight : 27}\n                >\n\n                    {!showBar ?\n                        <LineThroughputChart\n                            themeContext={themeContext}\n                            data={lineData ? lineData : []}\n                            isData={isData}\n                            date={data.date_title}\n                            isWidget={isWidget}\n                        />\n                        :\n                        <BarChart\n                            data={throughputData ? throughputData : []}\n                            enableGridY={isData ? true : false}\n                            mainTheme={themeContext}\n                            timeSpan={timeSpan}\n\n                            axisBottom={{\n                                legend: TIME_SPANS[timeSpan]?.displayName || TIME_SPANS.day.displayName,\n                                tickRotation: 45,\n                            }}\n                            axisLeft={{\n                                enable: true,\n                            }}\n                            keys={chartKeys}\n                            indexBy={'lable'}\n                            colorBy={\"id\"}\n                        />\n\n                    }\n\n                    {!data &&\n                        <styled.NoDataText>No Data</styled.NoDataText>\n                    }\n                </styled.PlotContainer>\n            }\n        </styled.SinglePlotContainer>\n    )\n}\n\n// Specifies the default values for props:\nThroughputChart.defaultProps = {\n    sortLevel: { label: 'Object', value: 'object' }\n};\n\n\nexport default ThroughputChart","import styled, { css } from \"styled-components\";\nimport * as commonCss from '../../../../../../common_css/common_css'\nimport * as styles from '../../../cards/columns/station_column/station_column.style'\n\nexport const StationColumnContainer = styled.div`\n    height: fit-content;\n    width: fit-content;\n    margin: 1rem;\n    border-radius: .5rem;\n    background-color: ${props => props.theme.bg.primary};\n    max-width: 100rem;\n`\n\nexport const StationCollapsedContainer = styled.div`\n    width: 3rem;\n    height: 20rem;\n    background-color: ${props => props.theme.bg.primary};\n    box-shadow: ${props => props.theme.cardShadow};\n    position: relative;\n    margin: 1rem;\n    border-radius: .5rem;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`\n\nexport const RowContainer = styled.div`\n    ${commonCss.rowContainer}\n`\n\nexport const StationColumnHeader = styled.div`\n    width: 100%;\n    justify-content: center;\n    height: 2rem;\n    display: flex;\n    flex-direction: row;\n    position: relative;\n`\n\nexport const StationTitle = styled.p`\n    font-size: ${props => props.theme.fontSize.sz3};\n    text-overflow: ellipsis;\n    color: ${props => props.theme.textColor};\n    margin: 0;\n    transform: ${props => !!props.rotated && 'rotate(90deg)'};\n`\n\nexport const CollapseIcon = styled.i`\n    position: absolute;\n    align-content: center;\n    left: 1rem;\n    top: .5rem;\n    /* top: 50%; */\n    /* transform: translateY(-50%); */\n`","import React, { useEffect, useState, useRef, useContext, memo } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\n\n// Import Components\nimport ThroughputChart from '../../../../../widgets/widget_pages/statistics_page/statistics_overview/charts/throughput_chart/throughput_chart'\nimport ReportChart from '../../../../../widgets/widget_pages/statistics_page/statistics_overview/charts/report_chart'\n\n// Import Styles\nimport * as styled from './station_column.style'\n\n// Import Actions\nimport { getStationAnalytics } from '../../../../../../redux/actions/stations_actions'\nimport { getReportAnalytics, getReportEvents } from \"../../../../../../redux/actions/report_event_actions\";\n\n// Import utils\nimport { convertArrayToObject } from '../../../../../../methods/utils/utils'\n\n\nconst StationColumn = (props) => {\n\n    const {\n        timeSpan,\n        dateIndex,\n        setDateTitle,\n        stationId = '',\n        showReport,\n        dataLoading,\n        sortLevel,\n    } = props\n\n    const stations = useSelector(state => state.stationsReducer.stations)\n    const dashboards = useSelector(state => state.dashboardsReducer.dashboards)\n\n    const dispatch = useDispatch()\n    const dispatchGetReportEvents = () => dispatch(getReportEvents());\n\n    const [throughputData, setThroughputData] = useState(null)\n    const [loading, setLoading] = useState(false)\n    const [collapsed, setCollapsed] = useState(false)\n    const [reportButtons, setReportButtons] = useState([])\n    const [reportData, setReportData] = useState(null)\n\n    const currentStation = stations[stationId] || {}\n\n    // get report buttons\n    useEffect(() => {\n\n        const dashboardId = currentStation.dashboards && Array.isArray(currentStation.dashboards) && currentStation.dashboards[0]\n        const dashboard = dashboards[dashboardId] ? dashboards[dashboardId] : {}\n        const currReportButtons = dashboard.report_buttons ? dashboard.report_buttons : []\n        setReportButtons(convertArrayToObject(currReportButtons, \"_id\"))\n\n    }, [currentStation, stations, dashboards])\n\n    // On page load, load in the data for today\n    useEffect(() => {\n        onGetAllData()\n        const dataInterval = setInterval(() => onGetAllData(), 30000)\n\n        return () => {\n            clearInterval(dataInterval)\n        }\n    }, [showReport, timeSpan, dateIndex, sortLevel])\n\n    const onGetAllData = () => {\n        if (!!showReport) {\n            dispatchGetReportEvents() // load report events\n\n            const body = { timespan: timeSpan, index: dateIndex }\n\n            onGetReportData(body)\n        } else {\n            onGetThroughputData()\n        }\n    }\n\n    const onGetReportData = async (body) => {\n        setLoading(true)\n        dataLoading(true)\n        const reportAnalyticsResponse = await getReportAnalytics(stationId, body)\n\n        if (reportAnalyticsResponse && !(reportAnalyticsResponse instanceof Error)) {\n            setReportData(reportAnalyticsResponse)\n            setDateTitle(reportAnalyticsResponse.date_title)\n        }\n        setLoading(false)\n        dataLoading(false)\n\n    }\n\n    const onGetThroughputData = () => {\n        dataLoading(true)\n        setLoading(true)\n        const body = { timespan: timeSpan, index: dateIndex, sort_index: sortLevel.value }\n        const dataPromise = getStationAnalytics(stationId, body)\n        dataPromise.then(response => {\n            if (response === undefined) {\n                setThroughputData([])\n                dataLoading(false)\n                setLoading(false)\n                return\n            }\n            // Convert Throughput\n            if (timeSpan === 'line') {\n                let convertedThroughput = []\n                response.throughPut.forEach((dataPoint) => {\n                    // Round Epoch time and multiply by 1000 to match front end times\n                    let convertedTime = dataPoint.x * 1000\n                    convertedTime = Math.round(convertedTime)\n                    convertedThroughput.push({ x: convertedTime, y: dataPoint.y })\n                })\n                response = {\n                    ...response,\n                    throughPut: convertedThroughput\n                }\n            }\n\n            setThroughputData(response)\n            setDateTitle(response.date_title)\n            dataLoading(false)\n            setLoading(false)\n        })\n\n    }\n\n    return (\n\n        collapsed ?\n            <styled.StationCollapsedContainer>\n                <styled.CollapseIcon\n                    className=\"fa fa-chevron-right\"\n                    aria-hidden=\"true\"\n                    onClick={() => setCollapsed(false)}\n                />\n                <styled.StationTitle rotated={true}>\n                    {currentStation.name}\n                </styled.StationTitle>\n            </styled.StationCollapsedContainer >\n            :\n            <styled.StationColumnContainer >\n                <styled.StationColumnHeader>\n                    <styled.CollapseIcon\n                        className=\"fa fa-chevron-down\"\n                        aria-hidden=\"true\"\n                        onClick={() => setCollapsed(true)} />\n                    <styled.StationTitle>{currentStation.name}  {!showReport && ' - Output'}</styled.StationTitle> \n                </styled.StationColumnHeader >\n\n                {showReport ?\n                    <ReportChart\n                        reportButtons={reportButtons}\n                        reportDate={reportData}\n                        isThroughputLoading={loading}\n                        timeSpan={timeSpan}\n                        reportData={reportData}\n                    />\n                    :\n                    <ThroughputChart\n                        data={throughputData}\n                        isWidget={false}\n                        loading={loading}\n                        timeSpan={timeSpan}\n                        disableTimeSpan={(bool) => {\n                            // setTimespanDisabled(bool)\n                        }}\n                        sortLevel={sortLevel}\n                    />\n                }\n\n            </styled.StationColumnContainer >\n\n\n\n    )\n}\n\nexport default StationColumn","import React, { useEffect, useMemo, useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\n\n// Import Styles\nimport * as styled from './station_columns.style'\n\n// Import Component\nimport StationColumn from './station_column/station_column'\n\n// Import Utils\nimport { getProcessStations } from '../../../../../methods/utils/processes_utils'\n\n\nconst StationColumns = (props) => {\n\n    const {\n        processId,\n        setDateTitle,\n        dateIndex,\n        timeSpan,\n        showReport,\n        dataLoading,\n        sortLevel,\n    } = props || {}\n\n    const processes = useSelector(state => state.processesReducer.processes)\n    const routes = useSelector(state => state.tasksReducer.tasks)\n    const stations = useSelector(state => state.stationsReducer.stations)\n\n    const [collapsed, setCollapsed] = useState(false)\n\n    const renderStationColumn = useMemo(() => {\n        const processStations = getProcessStations(processes[processId], routes)\n        return Object.keys(processStations).map((stationId) => {\n            return (\n                <StationColumn\n                    key={stationId}\n                    dateIndex={dateIndex}\n                    timeSpan={timeSpan}\n                    stationId={stationId}\n                    showReport={showReport}\n                    setDateTitle={(title => setDateTitle(title))}\n                    dataLoading={loading => dataLoading(loading)}\n                    sortLevel={sortLevel}\n                />\n            )\n        })\n\n    }, [dateIndex, timeSpan, showReport, sortLevel])\n\n    return (\n        collapsed ?\n            <styled.RowContainer>\n                <styled.NameContainer>\n                    <styled.ProcessName>{processes[processId].name}</styled.ProcessName>\n                    <styled.CollapseIcon\n                        className=\"fa fa-chevron-right\"\n                        aria-hidden=\"true\"\n                        onClick={() => setCollapsed(false)}\n                    />\n                </styled.NameContainer>\n\n            </styled.RowContainer>\n            :\n            <styled.RowContainer>\n                <styled.NameContainer>\n                    <styled.ProcessName>{processes[processId].name}</styled.ProcessName>\n                    <styled.CollapseIcon\n                        className=\"fa fa-chevron-down\"\n                        aria-hidden=\"true\"\n                        onClick={() => setCollapsed(true)}\n                    />\n                </styled.NameContainer>\n\n                <styled.ChartsContainer>\n\n                    {renderStationColumn}\n                </styled.ChartsContainer>\n            </styled.RowContainer>\n    )\n}\n\nexport default StationColumns","import styled, { css } from \"styled-components\";\n\nimport * as layoutCss from '../../../../../common_css/layout';\nimport * as commonCss from '../../../../../common_css/common_css'\nimport * as buttonCss from '../../../../../common_css/button_css'\n\nexport const HeaderSection = styled.div`\n    ${commonCss.columnContainer}\n    background-color: ${props => props.theme.bg.secondary};\n    margin: .25rem;\n    border-radius: .5rem;\n    justify-content: center;\n    align-items: center;\n    text-align: center;\n    padding: .25rem;\n`\n\nexport const ChartTypeButton = styled.button`\n    ${buttonCss.button}\n    margin: .5rem;\n    background-color: ${props => !!props.selected ? props.theme.schema.statistics.solid : props.theme.bg.tertiary};\n    width: 5rem;\n    height: 2rem;\n\n`\n\nexport const HeaderLabel = styled.p`\n    margin: 0;\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz2};\n    user-select: none;\n`\n\nexport const ShiftSettingsContainer = styled.div`\n    position: absolute;\n    top: 6rem;\n`\n\nexport const HeaderBar = styled.div`\n\t${layoutCss.headerStyle};\n    width: 100%;\n    max-height: 7rem;\n    background-color: ${props => props.theme.bg.primary};\n    display: flex;\n    flex-direction: row;\n    justify-content: start;\n    padding: .5rem;\n`\n\nexport const RowContainer = styled.div`\n    ${commonCss.rowContainer}\n    justify-content: center;\n`","import React, { useState, } from 'react';\n\n// Import Styles\nimport * as styled from './statistics_header.style'\n\n// Import basic components\nimport SortDropdown from '../../../../basic/sort_dropdown/sort_dropdown'\n\n// Import Components\nimport ShiftSettings from '../../../content/settings/shift_settings/shift_settings'\nimport DaySelector from '../../../../basic/day_selector/day_selector'\nimport TimeSpanSelector from '../../../../basic/timespan_selector/time_span_selector'\n\nconst StatisticsHeader = (props) => {\n\n    const {\n        themeContext,\n        loading,\n        handleTimeSpan,\n        timeSpan,\n        handleSetShowReport,\n        showReport,\n        date,\n        dateIndex,\n        handleSelectSort,\n        sortLevel,\n    } = props || {}\n\n    const dropDownOptions = [\n        { label: 'Object', value: 'object' },\n        { label: 'Lot', value: 'lot_id' },\n        { label: 'Route', value: 'route_id' }\n\n    ]\n\n    const [showShiftSettings, setShowShiftSettings] = useState(false)\n\n    const renderShiftSettings = () => {\n        return (\n            <styled.ShiftSettingsContainer>\n                <ShiftSettings themeContext={themeContext} />\n            </styled.ShiftSettingsContainer>\n        )\n    }\n\n    return (\n        <styled.HeaderBar>\n            <styled.HeaderSection>\n                <TimeSpanSelector\n                    // timespanDisabled={timespanDisabled}\n                    setTimeSpan={(timeSpan) => handleTimeSpan(timeSpan, 0)}\n                    timeSpan={timeSpan}\n                    timespanDisabled={timeSpan === 'line'}\n                />\n                <DaySelector\n                    date={date}\n                    dateIndex={dateIndex}\n                    loading={loading}\n                    onChange={(newIndex) => {\n                        handleTimeSpan(timeSpan, newIndex)\n                    }}\n                />\n            </styled.HeaderSection>\n\n            <styled.HeaderSection>\n                <styled.HeaderLabel>Chart Type</styled.HeaderLabel>\n                <styled.RowContainer>\n                    <styled.ChartTypeButton\n                        selected={!showReport && timeSpan !== 'line'}\n                        onClick={() => {\n                            handleSetShowReport(false)\n                            handleTimeSpan(timeSpan === 'line' ? 'day' : timeSpan, dateIndex)\n                        }}\n                    >\n                        Bar\n                </styled.ChartTypeButton>\n\n                    <styled.ChartTypeButton\n                        selected={!showReport && timeSpan === 'line'}\n                        onClick={() => {\n                            handleSetShowReport(false)\n                            handleTimeSpan('line', dateIndex)\n                        }}\n                    >\n                        Line\n                </styled.ChartTypeButton>\n\n                    <styled.ChartTypeButton\n                        selected={!!showReport && timeSpan !== 'line'}\n                        onClick={() => {\n                            handleSetShowReport(true)\n                            handleTimeSpan(timeSpan === 'line' ? 'day' : timeSpan, dateIndex)\n                        }}\n                    >\n                        Reports\n                </styled.ChartTypeButton>\n                </styled.RowContainer>\n            </styled.HeaderSection>\n\n            {!showReport && timeSpan === 'line' &&\n                < styled.HeaderSection style={{ position: 'relative' }}>\n                    <styled.RowContainer style={{ alignItems: 'center' }} onClick={() => setShowShiftSettings(!showShiftSettings)}>\n                        <styled.HeaderLabel>Shift Settings</styled.HeaderLabel>\n                        <i style={{ marginLeft: '.5rem' }} className={showShiftSettings ? 'fas fa-chevron-up' : 'fas fa-chevron-down'} />\n                    </styled.RowContainer>\n                    {showShiftSettings && renderShiftSettings()}\n                </styled.HeaderSection>\n            }\n\n            {!showReport && timeSpan !== 'line' &&\n                <styled.HeaderSection>\n                    <SortDropdown\n                        options={dropDownOptions}\n                        labelField={'label'}\n                        valueField={'label'}\n                        dropDownSearchStyle={{ minWidth: '10rem' }}\n                        onChange={(val) => {\n                            handleSelectSort(val)\n                        }}\n                        values={[sortLevel]}\n                    />\n                </styled.HeaderSection>\n            }\n\n        </styled.HeaderBar >\n    )\n}\n\nexport default StatisticsHeader","import React, { useEffect, useState, useRef, useContext, memo } from 'react';\nimport { useLocation, useParams } from 'react-router-dom'\nimport { useDispatch, useSelector } from \"react-redux\";\n\n// Import Styles\nimport * as styled from './statistics.style'\nimport { ThemeContext } from 'styled-components';\n\n// Import Components\nimport StationColumns from './station_columns/station_columns'\nimport Header from '../cards/summary_header/summary_header'\nimport StatisticsHeader from './statistics_header/statistics_header'\n\nconst Statistics = () => {\n\n    let params = useParams()\n    const {\n        page,\n        subpage,\n        id\n    } = params\n    const themeContext = useContext(ThemeContext);\n\n    const processes = useSelector(state => state.processesReducer.processes)\n    const currentMapId = useSelector(state => state.settingsReducer.settings.currentMapId)\n    const maps = useSelector(state => state.mapReducer.maps)\n    const currentMap = Object.values(maps).find(map => map._id === currentMapId)\n\n    const [dateIndex, setDateIndex] = useState(0)\n    const [timeSpan, setTimeSpan] = useState('day')\n    const [showReport, setShowReport] = useState(false)\n    const [date, setDate] = useState('')\n    const [loading, setLoading] = useState(false)\n    const [sortLevel, setSortLevel] = useState({label: \"Object\", value: \"object\"})\n\n    /**\n     * Gets the new data based on the selected time span and dateIndex\n     *\n     * TimeSpan:\n     * Can be either Day, Week, Month or Year\n     *\n     * DateIndex:\n     * The current date (today) index is 0, if you want to go back to the past date, the index would be 1\n     *\n     * @param {*} newTimeSpan\n     * @param {*} newDateIndex\n     */\n    const onTimeSpan = async (newTimeSpan, newDateIndex) => {\n\n        setTimeSpan(newTimeSpan)\n        setDateIndex(newDateIndex)\n        setTimeSpan(newTimeSpan)\n\n    }\n\n    const onSelectSort = async (sort) => {\n        setSortLevel(sort)\n    }\n\n    // Renders stations in a process\n    const renderStationColumns = () => {\n\n        let processesToRender = []\n\n        // If just in process page, push the current process\n        if (page === 'processes') {\n            processesToRender.push(id)\n        }\n        // Else push all processes\n        else {\n            Object.values(processes)\n            .filter((currProcess) => currProcess.map_id === currentMap._id)\n            .forEach(process => {\n              if(!!process.showStatistics){\n                processesToRender.push(process._id)\n              }\n            });\n\n        }\n\n        return processesToRender.map((processId) => {\n            return (\n                <StationColumns\n                    key={processId}\n                    processId={processId}\n                    setDateTitle={(title) => setDate(title)}\n                    dataLoading={loading => setLoading(loading)}\n                    dateIndex={dateIndex}\n                    timeSpan={timeSpan}\n                    showReport={showReport}\n                    sortLevel={sortLevel}\n                />\n            )\n        })\n    }\n\n    return (\n        <styled.Container>\n            <Header\n                title={'Statistics Summary'}\n                showBackButton={page === 'processes'}\n            />\n            <StatisticsHeader\n                themeContext={themeContext}\n                loading={loading}\n                handleTimeSpan={(timeSpan, index) => {\n                    onTimeSpan(timeSpan, index)\n                }}\n                timeSpan={timeSpan}\n                handleSetShowReport={bool => setShowReport(bool)}\n                showReport={showReport}\n                date={date}\n                dateIndex={dateIndex}\n                handleSelectSort={onSelectSort}\n                sortLevel={sortLevel}\n            />\n            <styled.StationColumnsContainer>\n                {renderStationColumns()}\n            </styled.StationColumnsContainer>\n        </styled.Container>\n    )\n\n\n}\n\nexport default Statistics\n","import styled, {css} from 'styled-components'\nimport Modal from 'react-modal';\nimport {LightenDarkenColor} from \"../../../../methods/utils/color_utils\";\n\n\nconst borderGlowCss = css`\n    --border-width: .1rem;\n    background: none;\n\n    @keyframes moveGradient {\n        50% {\n          background-position: 100% 50%;\n        }\n      }\n\n    border-radius: var(--border-width);\n\n    &::after {\n    position: absolute;\n    content: \"\";\n    top: calc(-1 * var(--border-width));\n    left: calc(-1 * var(--border-width));\n    z-index: -1;\n    width: calc(100% + var(--border-width) * 2);\n    height: calc(100% + var(--border-width) * 2);\n    background: linear-gradient(\n        60deg,\n        /* hsl(224, 85%, 66%), */\n        /* hsl(269, 85%, 66%), */\n        /* hsl(314, 85%, 66%), */\n        /* hsl(359, 85%, 66%), */\n        hsl(44, 85%, 66%),\n        hsl(89, 85%, 66%),\n        hsl(134, 85%, 66%),\n        hsl(179, 85%, 66%)\n    );\n    background-size: 300% 300%;\n    background-position: 0 50%;\n    border-radius: calc(2 * var(--border-width));\n    animation: moveGradient 4s alternate infinite;\n}\n`\n\n\nexport const TextboxDiv = styled.div`\n    background-color: ${props => props.theme.bg.primary};\n    border: none;\n    font-size: ${props => props.theme.fontSize.sz4};\n    font-family: ${props => props.theme.font.primary};\n    font-weight: 500;\n    min-height: 2rem;\n    display: flex;\n    flex-grow: 1;\n    color: ${props => props.theme.bg.octonary};\n    padding: .5rem;\n    border-radius: .5rem;\n\n    box-shadow: 0 0.1rem 0.2rem 0rem rgba(0,0,0,0.1) !important;\n    border-bottom: 2px solid ${props => props.theme.bg.quinary};\n\n    &:focus {\n        // background-color: ${props => LightenDarkenColor(props.theme.bg.quinary, 10)};\n        border-bottom: 2px solid ${props => !!props.schema ? props.theme.schema[props.schema].solid : props.theme.fg.primary};\n        color: ${props => props.theme.bg.octonary};\n        outline: none !important;\n    }\n\n    &::placeholder {\n        font-family: ${props => props.theme.font.secondary};\n        color: ${props => props.theme.bg.senary};\n    }\n`;\n\nexport const ListItem = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 100%;\n    text-overflow: ellipsis;\n    justify-content: space-between;\n    background: ${props => props.theme.bg.secondary};\n\n    &:hover {\n        background: ${props => LightenDarkenColor(props.theme.bg.secondary, -10)};\n        cursor: pointer;\n    }\n\n    margin-left: 0rem;\n    margin-right: .5rem;\n    margin-top: 0rem;\n    margin-bottom: 1rem;\n    border-radius: 0.5rem;\n\n    border-color: ${props=>props.theme.bg.quaternary};\n`\nexport const ListItemTitle = styled.h1`\n\n    font-family: ${props => props.theme.font.primary};\n    /* font-size: ${props => props.theme.fontSize.sz3}; */\n    font-size: 1rem;\n    font-weight: 500;\n    color: ${props => props.theme.bg.octonary};\n    user-select: none;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    margin-left: 0.5rem;\n    margin-right: 1rem;\n    margin-bottom: 0rem;\n\n    text-align: center;\n\n`\n\nexport const HoverContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    width: 100%;\n    height: 100%;\n    padding: 1rem 0rem .5rem 0.3rem;\n    margin-left: 1.5rem;\n    &:hover {\n        cursor: pointer;\n    }\n\n`\n\nexport const ListItemIcon = styled.i`\n\n    font-size: 1.3rem;\n    color: ${props => props.theme.schema.locations.solid};\n    padding-left: 0.8rem;\n\n    &:hover {\n        cursor: pointer;\n    }\n`\n\nexport const Container = styled(Modal)`\n\toutline: none !important;\n\toutline-offset: none !important;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translate(-50%, -50%);\n\tright: auto;\n\tbottom: auto;\n\n\tposition: absolute;\n\n\tz-index: 50;\n\n\tmin-width: 30rem;\n    max-width: 95%;\n    min-height: 10rem;\n    max-height: 95%;\n\n\tbackground: ${props => props.theme.bg.primary};\n\n\tdisplay: flex;\n\tflex-direction: column;\n\n\tcolor: ${props => props.theme.bg.octonary};\n\tborder-radius: 0.4rem;\n\toverflow: hidden;\n`;\n\nexport const HeaderContainer = styled.div`\n\twidth: 100%;\n\tdisplay: flex;\n\tflex-direction: column;\n\tborder-width: 0;\n\tborder-bottom: 2px solid ${props => props.theme.bg.quinary};\n\tmargin-bottom: 2rem;\n`;\n\nexport const Header = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\tpadding: 0;\n\tmargin: 0;\n\tmax-height: 5rem;\n\tbackground: ${props => props.theme.bg.primary};\n    border-bottom: 2px solid ${props => props.theme.bg.secondary};\n\n`\nexport const Label = styled.span`\n\tpadding-left: 1rem;\n\tfont-size: ${props => props.theme.fontSize.sz3};\n\tmargin-bottom: .25rem;\n`\nexport const CloseIcon = styled.i`\n    font-size: 1.4rem;\n    margin: 1rem;\n    color: ${props => props.theme.bg.quaternary};\n    cursor: pointer;\n`\n\nexport const Title = styled.h2`\n\tflex: 2;\n\theight: 100%;\n\tmin-height: 100%;\n\tmargin: 1rem;\n\tpadding: 0;\n\ttext-align: left;\n\tdisplay: inline-flex;\n\tjustify-content: flex-start;\n\talign-items: center;\n\n\tfont-size: ${props => props.theme.fontSize.sz2};\n\tfont-weight: ${props => props.theme.fontWeight.bold};\n`;\n\nexport const TextContainer = styled.div`\n\twidth: 100%;\n\tdisplay: flex;\n\tflex-direction: column;\n\tmargin-bottom: 1.5rem;\n`;\n\nexport const BodyContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tpadding: 1rem;\n\tflex: 1;\n\tjustify-content: space-between;\n    text-align: center;\n\toverflow: scroll;\n\n\tbackground: ${props => props.theme.bg.primary};\n\n\n`\n\nexport const ButtonForm = styled.div`\n\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: center;\n\tmin-height: fit-content;\n\n    margin-top: 2rem;\n`;\n\nexport const IconSelectorContainer = styled.div`\n\tbackground: ${props => props.theme.bg.primary};\n\toverflow: auto;\n\tmin-height: 2rem;\n\twidth: 100%;\n\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tflex-wrap: wrap;\n\tborder-radius: .5rem;\n`\n\nexport const ContentContainer = styled.div`\n\tbackground: ${props => props.theme.bg.primary};\n\t// border-radius: 1rem;\n\tdisplay: flex;\n\tflex-direction: column;\n\toverflow: hidden;\n\tmargin-bottom: 1rem;\n\talign-items: center;\n`\nexport const ReportButtonsContainer = styled.div`\n\tdisplay: flex;\n\n\tflex-direction: column;\n\talign-items: center;\n\t// justify-content: center;\n\tflex-wrap: nowrap;\n\toverflow: auto;\n\tmin-height: 5rem;\n\twidth: 100%;\n`\n\nexport const ConditionText = styled.span`\n\tfont: ${props => props.theme.font.primary};\n\tfont-size: ${props => props.theme.fontSize.sz3};\n\tmax-width: 100 %;\n\toverflow: hidden;\n\ttext-overflow: ellipsis;\n`\n\nexport const RightContentContainer = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: ${props => props.theme.bg.primary};\n    width: 4rem;\n    border-left: 1px solid ${props => props.theme.bg.secondary};\n    height: 100%;\n    // background-color: ${props => props.theme.bg.septenary};\n\n    // padding-left: 1rem;\n    // border-top-right-radius: 0.6rem;\n    // border-bottom-right-radius: 0.6rem;\n\n\n`\n\nexport const ButtonContainer = styled.button`\n  position: relative;\n  user-select: none;\n\n  // flex layout\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  // flex-grow: 1;\n  width: 90%;\n  overflow: hidden;\n  height: 4rem;\n  min-height: 4rem;\n  line-height: 3rem;\n  min-width: 80%;\n\n  background: ${props => `linear-gradient(180deg,\n                            ${LightenDarkenColor(props.background, 20)} 0%,\n                            ${props.background} 50%,\n                            ${LightenDarkenColor(props.background, -20)} 100%)`};\n  border-radius: 0.6rem;\n  padding: 0;\n\n\n  // margins\n  margin: .5rem 0 .5rem 0;\n\n  // padding\n  // padding: 0.5rem 1rem 0.5rem 1rem;\n\n  outline: none;\n  &:focus {\n    outline: none;\n  }\n\n  letter-spacing: 1.5px;\n  border: none;\n  box-shadow: ${props => props.clickable ? 'none' : `2px 2px 2px rgba(0, 0, 0, 0.5)`};\n  transition: all 0.1s ease 0s;\n  cursor: pointer;\n  outline: none;\n\n  &:hover {\n    ${props => props.hoverable && !props.clickable &&\n\t{\n\t\tboxShadow: \"3px 3px 3px rgba(0, 0, 0, 0.5)\",\n\t\ttransform: \"translateY(-1px)\",\n\t}\n}\n  }\n\n  ${props => props.clickable && !props.disabled &&\n\t`&:active {\n      background: ${`linear-gradient(180deg,\n          ${LightenDarkenColor(props.background, -20)} 0%,\n          ${props.background} 50%,\n          ${LightenDarkenColor(props.background, 20)} 100%)`\n\t}\n    }`\n}\n\n  ${props => props.disabled &&\n\t{\n\t\tcolor: props.theme.bg.quaternary,\n\t\tbackground: `linear-gradient(180deg, rgba(255,255,255,0.4) 0%, rgba(255,255,255,0.4) 100%), ${LightenDarkenColor(props.background, -60)}`,\n\t\tpointerEvents: \"none\",\n\t}\n}\n\n    // --border-width: 3px;\n    ${props => props.borderGlow &&\n\tborderGlowCss\n}\n\n${props => props.css};\n\n`\n\nexport const AddNewButtonContainer = styled.div`\n\tdisplay: flex;\n\tjustify-content: center;\n\twidth: 100%;\n\tborder-bottom:  ${props => props.showBorder && `1px solid` + props.theme.bg.secondary};\n`\n\nexport const ColorFieldContainer = styled.div`\n\tposition: relative;\n\n`\n\n\nexport const Icon = styled.i`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin: auto auto;\n    color: green;\n    fill: green;\n    font-size: 7rem;\n    width: 14rem;\n    &:hover {\n        cursor: pointer;\n    }\n\n    &:active{\n        filter: brightness(85%)\n    }\n`\n","import React, {useEffect, useState} from \"react\";\nimport Modal from 'react-modal';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport { useHistory } from 'react-router-dom'\n\n\nimport Button from \"../../../basic/button/button\";\nimport Textbox from \"../../../basic/textbox/textbox\";\nimport LotContainer from \"../../../../components/side_bar/content/cards/lot/lot_container\"\n\n// actions\nimport {showLotScanModal} from '../../../../redux/actions/sidebar_actions'\n// styles\nimport * as styled from './scan_lot_modal.style'\n\nconst ScanLotModal = (props) => {\n\n    const {\n        isOpen,\n        title,\n        close,\n        dashboard,\n        onSubmit,\n        handleClose,\n        children,\n        id,\n    } = props\n\n    const cards = useSelector(state => state.cardsReducer.cards)\n    const stations = useSelector(state =>state.stationsReducer.stations)\n\n    const dispatch = useDispatch()\n    const dispatchShowLotScanModal = (bool) => dispatch(showLotScanModal(bool))\n    const history = useHistory()\n\n    const renderLotStations = () => {\n\n      return Object.values(cards).map((card) => {\n            if(card.lotNumber === id){\n          return  Object.values(stations).map((station) => {\n                if(!!card.bins[station._id]){\n                  return (\n                    <styled.ListItem\n                      onClick={() => {\n                        history.push(`/locations/${station._id}/dashboards/${stations[station._id].dashboards[0]}/lots/${card._id}`)\n                        dispatchShowLotScanModal(null)\n                      }}\n                    >\n                    <styled.HoverContainer >\n                        <styled.ListItemIcon\n                            className='fas fa-user-alt'\n                        />\n                        <styled.ListItemTitle>{station.name}</styled.ListItemTitle>\n                      </styled.HoverContainer>\n\n                        <LotContainer\n                            lotId={card._id}\n                            binId={station._id}\n                            enableFlagSelector={false}\n                            key={card._id}\n                            containerStyle={{\n                                minWidth: \"95%\",\n                                marginBottom: \"1rem\"\n                            }}\n                        />\n                    </styled.ListItem>\n                  )\n                }\n              })\n            }\n          })\n        }\n\n\n    return (\n        <styled.Container\n            isOpen={isOpen}\n            contentLabel=\"Confirm Delete Modal\"\n            onRequestClose={close}\n            style={{\n                overlay: {\n                    zIndex: 500,\n                    backgroundColor: 'rgba(0, 0, 0, 0.4)'\n                },\n                content: {\n\n                }\n            }}\n        >\n            <styled.Header>\n                <styled.Title>{title}</styled.Title>\n\n                <styled.CloseIcon className=\"fa fa-times\" aria-hidden=\"true\" onClick={handleClose}/>\n            </styled.Header>\n            <styled.BodyContainer>\n                <styled.ContentContainer>\n                    {children}\n                </styled.ContentContainer>\n\n                {renderLotStations()\n\n                }\n\n            </styled.BodyContainer>\n        </styled.Container>\n    );\n};\n\nexport default ScanLotModal\n","import React, { useState, useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useLocation, useParams } from 'react-router-dom'\nimport { useHistory } from 'react-router-dom'\n\n// Import Styles\nimport * as styled from './side_bar.style'\n\n// Import Components\nimport { DraggableCore } from \"react-draggable\";\nimport SideBarSwitcher from '../../components/side_bar/side_bar_switcher/side_bar_switcher'\nimport LocationsContent from '../../components/side_bar/content/locations/locations_content'\nimport TasksContent from '../../components/side_bar/content/tasks/tasks_content'\nimport DevicesContent from '../../components/side_bar/content/devices/devices_content'\nimport SchedulerContent from '../../components/side_bar/content/scheduler/scheduler_content'\nimport ProcessesContent from '../../components/side_bar/content/processes/processes_content'\nimport Settings from '../../components/side_bar/content/settings/settings'\nimport ConfirmDeleteModal from '../../components/basic/modals/confirm_delete_modal/confirm_delete_modal'\nimport Cards from \"../../components/side_bar/content/cards/cards\";\nimport Statistics from '../../components/side_bar/content/statistics/statistics'\nimport ScanLotModal from '../../components/basic/modals/scan_lot_modal/scan_lot_modal'\nimport TaskAddedAlert from \"../../components/widgets/widget_pages/dashboards_page/dashboard_screen/task_added_alert/task_added_alert\";\nimport { ADD_TASK_ALERT_TYPE } from \"../../constants/dashboard_constants\";\n\n// Import Actions\nimport { setEditingStation, setSelectedStation } from '../../redux/actions/stations_actions'\nimport { setEditingPosition, setSelectedPosition } from '../../redux/actions/positions_actions'\nimport { hoverStationInfo } from '../../redux/actions/widget_actions'\nimport { editingTask } from '../../redux/actions/tasks_actions'\nimport { editingProcess } from '../../redux/actions/processes_actions'\nimport { setWidth, setMode, pageDataChanged, setOpen } from \"../../redux/actions/sidebar_actions\";\n\nimport * as taskActions from '../../redux/actions/tasks_actions'\nimport * as sidebarActions from \"../../redux/actions/sidebar_actions\";\nimport {showLotScanModal} from '../../redux/actions/sidebar_actions'\n\nimport disableBrowserBackButton from 'disable-browser-back-navigation';\n\nconst SideBar = (props) => {\n\n    const {\n        showSideBar,\n        setShowSideBar\n    } = props\n\n    let params = useParams()\n    const {\n        page,\n        subpage,\n        id\n    } = params\n\n    const dispatch = useDispatch()\n    const dispatchHoverStationInfo = (info) => dispatch(hoverStationInfo(info))\n    const dispatchSetOpen = (sideBarOpen) => dispatch(setOpen(sideBarOpen))\n    const dispatchSetWidth = (width) => dispatch(setWidth(width))\n    const dispatchEditingTask = (bool) => dispatch(editingTask(bool))\n    const dispatchEditingProcess = (bool) => dispatch(editingProcess(bool))\n    const dispatchEditingPosition = (bool) => dispatch(setEditingPosition(bool))\n    const dispatchEditingStation = (bool) => dispatch(setEditingStation(bool))\n\n    const dispatchSetSelectedStation = (station) => dispatch(setSelectedStation(station))\n    const dispatchSetSelectedPosition = (station) => dispatch(setSelectedPosition(station))\n    const dispatchPageDataChanged = (bool) => dispatch(pageDataChanged(bool))\n    const dispatchSetConfirmDelete = (show, callback) => dispatch(sidebarActions.setConfirmDelete(show, callback))\n    const dispatchShowLotScanModal = (bool) => dispatch(showLotScanModal(bool))\n\n    const [pageWidth, setPageWidth] = useState(450)\n    const [prevWidth, setPrevWidth] = useState(pageWidth)\n    const [prevParams, setPrevParams] = useState(params)\n    const [confirmDeleteModal, setConfirmDeleteModal] = useState(false);\n\n    const [barcode, setBarcode] = useState([])\n    const [full, setFull] = useState('')\n    const [lotID, setLotID] = useState('')\n    const [addTaskAlert, setAddTaskAlert] = useState(null);\n    const [showSnoop, setShowSnoop] = useState(null)\n    const [statId, setStatId] = useState(null)\n    const [cardId, setCardId] = useState(null)\n    const [binCount, setBinCount] = useState(null)\n    const mode = useSelector(state => state.sidebarReducer.mode)\n    const widgetPageLoaded = useSelector(state => { return state.widgetReducer.widgetPageLoaded })\n    const cards = useSelector(state => state.cardsReducer.cards)\n    const stations = useSelector(state =>state.stationsReducer.stations)\n    const pageInfoChanged = useSelector(state => state.sidebarReducer.pageDataChanged)\n    const sideBarOpen = useSelector(state => state.sidebarReducer.open)\n    const showConfirmDeleteModal = useSelector(state => state.sidebarReducer.showConfirmDeleteModal)\n    const confirmDeleteCallback = useSelector(state => state.sidebarReducer.confirmDeleteCallback)\n    const selectedStation = useSelector(state => state.stationsReducer.selectedStation)\n    const selectedPosition = useSelector(state => state.positionsReducer.selectedPosition)\n    const showScanLotModal = useSelector(state => state.sidebarReducer.showLotScanModal)\n\n\n    const selectedLocation = !!selectedStation ? selectedStation : selectedPosition\n    const history = useHistory()\n    const url = useLocation().pathname\n    const pageNames = ['locations', 'tasks', 'routes', 'processes', 'lots', 'devices', 'settings', 'statistics']\n\n    const boundToWindowSize = () => {\n        const newWidth = Math.min(window.innerWidth, Math.max(360, pageWidth))\n        setPageWidth(newWidth)\n        dispatchSetWidth(newWidth)\n    }\n\n    useEffect(() => {\n        disableBrowserBackButton()\n        window.addEventListener('resize', boundToWindowSize, { passive: true })\n\n        return () => {\n            window.removeEventListener('resize', boundToWindowSize, { passive: true })\n        }\n    }, [])\n\n    useEffect(() => {\n        disableBrowserBackButton()\n    }, [url])\n\n     useEffect(() => {\n          document.addEventListener('keyup', logKey)\n         return () => {\n             document.removeEventListener('keyup', logKey)\n         }\n     }, [])\n\n\n    useEffect(() => {\n        setFull(barcode.join(''))\n    }, [barcode])\n\n    useEffect(() => {\n        if(full.includes('RMShift-') || full.includes('ShiftrShiftm-') || full.includes('ShiftRShiftM-') || full.includes('rm-')) {\n            const enter = full.substring(full.length-5)\n            if(enter === 'Enter'){\n                setBarcode([])\n                const splitLot = full.split('-')\n                let lotId = parseInt(splitLot[1].slice(0,-5))\n                setLotID(lotId)\n                onScanLot(lotId)\n                setFull('')\n            }\n        }\n\n    }, [full])\n\n    const logKey = (e) => {\n        console.log(e.key)\n        setBarcode(barcode => [...barcode,e.key])\n    }\n\n    const onScanLot = (id) => {\n      let binCount = 0\n      let statId = \"\"\n      let lotFound = false\n\n      Object.values(cards).forEach((card) => {\n        if(card.lotNumber === id){\n          lotFound = true\n          Object.values(stations).forEach((station) => {\n            if(!!card.bins[station._id]){\n              binCount = binCount + 1\n              statId = station._id\n            }\n          })\n        if(binCount > 1){\n          if(!!pageInfoChanged){\n            setConfirmDeleteModal(true)\n            setStatId(statId)\n            setCardId(card._id)\n            setBinCount(binCount)\n          }\n          else{\n            dispatchShowLotScanModal(true)\n          }\n        }\n        else if(binCount === 1 && !!statId){\n            if(!!pageInfoChanged){\n              setConfirmDeleteModal(true)\n              setStatId(statId)\n              setCardId(card._id)\n              setBinCount(binCount)\n            }\n            else{\n              history.push(`/locations/${statId}/dashboards/${stations[statId].dashboards[0]}/lots/${card._id}`)\n            }\n        }\n\n      }\n    })\n      if(id === 420 && lotFound === false){\n        setShowSnoop(true)\n        return setTimeout(() => setShowSnoop(null), 2500)\n      }\n\n      if(lotFound===false) {\n          setAddTaskAlert({\n              type: ADD_TASK_ALERT_TYPE.FINISH_FAILURE,\n              label: \"This lot does not exist!\",\n          })\n          return setTimeout(() => setAddTaskAlert(null), 2500)\n        }\n    }\n\n\n    // Useeffect for open close button, if the button is not active but there is an id in the URL, then the button should be active\n    // If the side bar is not active and there is no id then toggle it off\n    useEffect(() => {\n        const hamburger = document.querySelector('.hamburger')\n        const active = hamburger.classList.contains('is-active')\n        if (!active && id !== undefined && id !== 'summary') {\n            hamburger.classList.toggle('is-active')\n        } else if (active && id === undefined && !sideBarOpen) {\n            hamburger.classList.toggle('is-active')\n        }\n    }, [params])\n\n    // Useeffect for open close button\n    // If this button is active, there is no ID or the id is summary (means that your where previously in lot summary tab) and the side bar is closed then toggle button off\n    // Else if its not active and the side bar is open, then toggle it on\n    useEffect(() => {\n        const hamburger = document.querySelector('.hamburger')\n        const active = hamburger.classList.contains('is-active')\n        if (active && (id === undefined || id === 'summary') && !sideBarOpen) {\n            hamburger.classList.toggle('is-active')\n        } else if (!active && sideBarOpen) {\n            hamburger.classList.toggle('is-active')\n        }\n\n        dispatchSetOpen(sideBarOpen)\n\n    }, [sideBarOpen])\n\n\n    // sets width to full screen if card subpage is open in processes\n    useEffect(() => {\n        const {\n\n        } = prevParams\n\n        const prevPage = prevParams.page\n        const prevSubpage = prevParams.subpage\n        const prevId = prevParams.id\n\n\n        const time = Date.now()\n        if ((page === \"processes\" || page === \"lots\" || page === \"statistics\") && ((subpage === \"lots\") || (subpage === 'statistics')) || (id === \"timeline\") || (id === \"summary\")) {\n\n            if (!prevWidth) setPrevWidth(pageWidth) // store previous width to restore when card page is left\n            setPageWidth(window.innerWidth)\n            dispatchSetWidth(window.innerWidth)\n\n        }\n        else if ((((prevSubpage === \"lots\") || (prevSubpage === 'statistics') || (prevId === \"timeline\") || (prevId === \"summary\")) && (prevPage === \"processes\" || prevPage === \"lots\" || prevPage === \"statistics\")) && ((subpage !== \"lots\") || (id === \"timeline\") || (id === \"summary\"))) {\n            setPageWidth(prevWidth)\n            dispatchSetWidth(prevWidth)\n            setPrevWidth(null)\n        }\n\n        setPrevParams(params)\n\n        if (!showSideBar) {\n            setPageWidth(450)\n            dispatchSetWidth(450)\n        }\n\n        return () => { }\n\n    }, [page, subpage, id, pageWidth, showSideBar])\n\n    /**\n     * Handles the hamburger icon transformation\n     */\n    const handleSideBarOpenCloseButtonClick = () => {\n\n        if (!!showSideBar) {\n            if (!!selectedLocation && !selectedLocation.new) {\n                dispatchSetSelectedStation(null)\n                dispatchSetSelectedPosition(null)\n            }\n\n            dispatchEditingTask(false)\n            dispatchEditingProcess(false)\n        }\n\n        if (!showSideBar && url == '/') {\n            history.push(`/locations`)\n        }\n\n        // If widget page is active, the toggle the widget page, else toggle the side bar\n        if (widgetPageLoaded) {\n            history.push('/locations')\n            dispatchSetSelectedStation(null)\n            dispatchSetSelectedPosition(null)\n            dispatchHoverStationInfo(null)\n        }\n        // Else handle when the sidebar is closed and clicked to open\n        else {\n\n            // If the url doesnt contain a defined page then switch it back to locations\n            if (!pageNames.includes(page)) {\n                history.push(`/locations`)\n            }\n            const newSideBarState = !showSideBar\n            setShowSideBar(newSideBarState)\n            dispatchSetOpen(newSideBarState)\n        }\n\n    }\n\n    function handleDrag(e, ui) {\n        const newWidth = Math.min(window.innerWidth, Math.max(360, pageWidth + ui.deltaX))\n        setPageWidth(newWidth)\n        dispatchSetWidth(newWidth)\n    }\n\n    let content\n    switch (page) {\n        case 'locations':\n            content = <LocationsContent />\n            break\n\n        // Commented out for now\n        // case '/objects':\n        //     content = <ObjectsContent />\n        //     break\n\n        case 'processes':\n            if (subpage === \"lots\") {\n                content = <Cards id={id} />\n            }\n            else if (subpage === 'statistics') {\n                content = <Statistics />\n            }\n            else {\n                content = <ProcessesContent subpage={subpage} id={id} />\n            }\n\n            break\n\n        case 'lots':\n            if ((id === \"summary\") || (id === \"timeline\")) {\n                content = <Cards id={id} />\n            }\n            break\n\n        case 'tasks':\n            content = <TasksContent />\n            break\n\n        case 'scheduler':\n            content = <SchedulerContent />\n            break\n\n        case 'devices':\n            content = <DevicesContent />\n            break\n\n        case 'settings':\n            content = <Settings />\n            break\n\n        case 'statistics':\n            content = <Statistics />\n            break\n\n        default:\n            content = null\n            if (showSideBar) {\n                handleSideBarOpenCloseButtonClick()\n            }\n            break\n    }\n\n\n\n    return (\n        <>\n            <ConfirmDeleteModal\n                isOpen={!!confirmDeleteModal || !!showConfirmDeleteModal}\n                title={\"Are you sure you want to leave this page? Any changes will not be saved\"}\n                button_1_text={\"Yes\"}\n                button_2_text={\"No\"}\n                handleClose={() => {\n                    setConfirmDeleteModal(null)\n                    dispatchSetConfirmDelete(false, null)\n                }}\n                handleOnClick1={() => {\n\n                  if(!!statId && !!cardId){\n                    if(url=== '/locations'){\n                      dispatchEditingStation(false)\n                      dispatchEditingPosition(false)\n                    }\n                    if(binCount === 1){\n                      history.push(`/locations/${statId}/dashboards/${stations[statId].dashboards[0]}/lots/${cardId}`)\n                    }\n                    else dispatchShowLotScanModal(true)\n\n                    setCardId(null)\n                    setStatId(null)\n                  }\n                  else{\n                    if (showConfirmDeleteModal) {\n                        confirmDeleteCallback()\n                    }\n                    else {\n                        handleSideBarOpenCloseButtonClick()\n                    }\n                  }\n\n                    setConfirmDeleteModal(null)\n                    dispatchPageDataChanged(false)\n                    dispatchSetConfirmDelete(false, null)\n                }}\n                handleOnClick2={() => {\n                    setConfirmDeleteModal(null)\n                    dispatchSetConfirmDelete(false, null)\n                }}\n            />\n\n            <ScanLotModal\n                isOpen={!!showScanLotModal}\n                title={\"This lot is split between multiple stations. Please pick a station\"}\n                id = {lotID}\n                button_1_text={\"Yes\"}\n                button_2_text={\"No\"}\n                handleClose={() => {\n                  dispatchShowLotScanModal(null)\n\n                }}\n                handleOnClick1={() => {\n\n                }}\n                handleOnClick2={() => {\n                  dispatchShowLotScanModal(null)\n                }}\n            />\n\n            {!!showSnoop &&\n              <img\n               src=\"https://i.kym-cdn.com/entries/icons/original/000/017/129/rs-10918-snoop-624-1368121236.jpg\"\n               alt=\"new\"\n               />\n            }\n\n            <TaskAddedAlert\n                containerStyle={{\n                    'position': 'absolute'\n                }}\n                {...addTaskAlert}\n                visible={!!addTaskAlert}\n            />\n\n            <styled.SideBarOpenCloseButton\n                className=\"hamburger hamburger--squeeze\"\n                type='button'\n                id='sideBarButton'\n                onClick={() => {\n                    if (pageInfoChanged) {\n                        setConfirmDeleteModal(true)\n                    }\n                    else { handleSideBarOpenCloseButtonClick() }\n                }}\n            // showSideBar={showSideBar}\n            >\n                <span className='hamburger-box' id='sideBarButton' style={{ display: 'flex', justifyContent: 'center', width: 'auto', color: 'red' }}>\n                    <span className='hamburger-inner' id='sideBarButton' style={{ color: 'red' }} />\n                </span>\n            </styled.SideBarOpenCloseButton>\n\n            {showSideBar &&\n                <styled.SidebarWrapper mode={mode} style={{ width: showSideBar == true ? pageWidth : 0, display: \"flex\", }} open={showSideBar}>\n\n                    <SideBarSwitcher\n                        handleClickOutside={handleSideBarOpenCloseButtonClick}\n                        showSideBar={showSideBar}\n                    />\n\n                    <styled.SidebarContent\n                        key=\"sidebar-content\"\n                        style={{}}\n                    >\n                        {content}\n\n                        <DraggableCore key=\"handle\" onDrag={handleDrag} >\n                            <styled.ResizeBar>\n                                <styled.ResizeHandle content={mode}></styled.ResizeHandle>\n                            </styled.ResizeBar>\n                        </DraggableCore>\n                    </styled.SidebarContent>\n                </styled.SidebarWrapper>\n            }\n        </>\n    )\n\n\n}\n\nexport default SideBar\n","import styled from 'styled-components'\n\nexport const MapContainer = styled.div`\n    height: 100%;\n    width: 100%;\n    flex: 1;\n    background: ${props => props.theme.bg.quaternary};\n    user-select: none;\n\n    // cursor: move; /* fallback if grab cursor is unsupported */\n    // cursor: -webkit-move;\n    // cursor: -moz-move;\n\n    cursor: url(https://ssl.gstatic.com/ui/v1/icons/mail/images/2/openhand.cur), grab;\n\n    &:active {\n        cursor: grabbing;\n        cursor: -moz-grabbing;\n        cursor: -webkit-grabbing;\n    }\n\n    background-size: cover;\n    overflow: visible;\n`\n\nexport const MapGroup = styled.g`\n`\n\nexport const MapImage = styled.img`\n    height: 100%;\n    width: auto;\n\n    ccursor: move; /* fallback if grab cursor is unsupported */\n    cursor: -webkit-move;\n    cursor: -moz-move;\n\n    // ${props => props.tall && `\n    //     height: auto;\n    //     width: 100%;\n    // `}\n    \n`","import React, { useState, useEffect, useRef } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\n// Import Actions\nimport { setTaskAttributes } from '../../../redux/actions/tasks_actions'\nimport {getLoadPositionId, getUnloadPositionId} from \"../../../methods/utils/route_utils\";\n\nexport default function TaskPaths(props) {\n\n    const {\n        route,\n    } = props\n\n    const selectedTaskReducer = useSelector(state => state.tasksReducer.selectedTask)\n    const selectedHoveringTask = useSelector(state => state.tasksReducer.selectedHoveringTask)\n    const positions = useSelector(state => state.positionsReducer.positions)\n    const stations = useSelector(state => state.stationsReducer.stations)\n    const dispatch = useDispatch()\n\n    let selectedTask = null\n\n    // This sets the selected task to either whats in the reducer or whats being passed in through props\n    // It would be using props because this task path is part of a process\n    if (!!route) {\n        selectedTask = route\n    }\n    else if (!!selectedHoveringTask){\n      selectedTask = selectedHoveringTask\n    }\n\n    else {\n        selectedTask = selectedTaskReducer\n    }\n\n\n    const stateRef = useRef()\n    stateRef.current = selectedTask\n\n    const loadPositionId = getLoadPositionId(selectedTask)\n    const unloadPositionId = getUnloadPositionId(selectedTask)\n\n    const [mousePos] = useState({ x: 0, y: 0 })\n\n    const [x1, setX1] = useState(0)\n    const [y1, setY1] = useState(0)\n    const [x2, setX2] = useState(0)\n    const [y2, setY2] = useState(0)\n\n    // To be able to remove the event listener, we need to reference the same function.\n    // Therefore we save the function in the state\n    const [lockToMouse] = useState(() => e => {\n        setX2(e.clientX)\n        setY2(e.clientY)\n    })\n\n    // A callback that will set the load position to null when you press escape\n    const [exitTaskPath] = useState(() => e => {\n        if (e.key == 'Escape') {\n            let load = stateRef.current.load\n            load.position = null\n            load.station = null\n            dispatch(setTaskAttributes(stateRef.current._id, { load }))\n        }\n    })\n\n    // Set the start and end position if they exist\n    useEffect(() => {\n      if(!!selectedTask){\n        const loadPositionId = getLoadPositionId(selectedTask)\n        const unloadPositionId = getUnloadPositionId(selectedTask)\n      }\n      else{\n        const loadPositionId = getLoadPositionId(selectedHoveringTask)\n        const unloadPositionId = getUnloadPositionId(selectedHoveringTask)\n      }\n        if (selectedTask !== null || selectedHoveringTask!==null) {\n            if (loadPositionId !== null) {\n                // Check to see if its a station or position\n                const startPos = !!positions[loadPositionId] ? positions[loadPositionId] : stations[loadPositionId]\n                if(startPos) {\n                    setX1(startPos.x)\n                    setY1(startPos.y)\n                }\n            }\n            if (unloadPositionId !== null) {\n                // Check to see if its a station or position\n                const endPos = !!positions[unloadPositionId] ? positions[unloadPositionId] : stations[unloadPositionId]\n                if(endPos) {\n                    setX2(endPos.x)\n                    setY2(endPos.y)\n                }\n            }\n        }\n    })\n\n    // If there is a load position but not an unload, set a listener to set the endpoint to the mouse position\n    useEffect(() => {\n        const loadPositionId = getLoadPositionId(selectedTask)\n        const unloadPositionId = getUnloadPositionId(selectedTask)\n\n        if (selectedTask !== null && loadPositionId !== null && unloadPositionId === null) {\n            setX2(x1)\n            setY2(y1)\n            window.addEventListener('mousemove', lockToMouse, false)\n            window.addEventListener('keydown', exitTaskPath)\n        } else {\n            window.removeEventListener('mousemove', lockToMouse, false)\n            window.removeEventListener('keydown', exitTaskPath)\n        }\n\n        return () => {\n            window.removeEventListener('mousemove', lockToMouse, false)\n            window.removeEventListener('keydown', exitTaskPath)\n        }\n    }, [selectedTask])\n\n    if (selectedTask !== null && loadPositionId != null) {\n        const startPos = positions[loadPositionId]\n\n        let endPos\n        if (unloadPositionId !== null) { // The task has a start AND end position\n            endPos = positions[unloadPositionId]\n        } else { // Task has a start position but no end position (instead snap to mouse position)\n            endPos = mousePos\n        }\n\n        const lineLen = Math.sqrt(Math.pow((x2 - x1), 2) + Math.pow((y2 - y1), 2))\n        const lineRot = Math.atan2((y2 - y1), (x2 - x1))\n        const arrowRot = lineRot * 180 / Math.PI\n\n        const dashes = [...Array(Math.ceil(lineLen / (10 * props.d3.scale))).keys()]\n\n        // Changes the color based on whether it's a selected task or part of a process\n        const primaryColor = !route ? 'rgba(56, 235, 135, 0.95)' : 'rgba(255, 182, 46, 0.95)'\n        const secondaryColor = !route ? 'rgba(184, 255, 215, 0.7)' : 'rgba(255, 236, 201, 0.7)'\n        const dashColor = !route ? 'rgba(56, 235, 135, 0.95)' : 'rgba(255, 182, 47, 0.95)'\n        return (\n            <>\n                <g>\n                    <defs>\n\n                        {/* a transparent glow that takes on the colour of the object it's applied to */}\n                        <filter id=\"glow\">\n                            <feGaussianBlur stdDeviation=\"1\" result=\"coloredBlur\" />\n                            <feMerge>\n                                <feMergeNode in=\"coloredBlur\" />\n                                <feMergeNode in=\"SourceGraphic\" />\n                            </feMerge>\n                        </filter>\n\n                    </defs>\n\n                    <line x1={`${x1}`} y1={`${y1}`}\n                        x2={`${x2}`} y2={`${y2}`}\n                        strokeWidth={`${props.d3.scale * 8}`} stroke={primaryColor}\n                        strokeLinecap=\"round\"\n                    />\n                    <line x1={`${x1}`} y1={`${y1}`}\n                        x2={`${x2}`} y2={`${y2}`}\n                        strokeWidth={`${props.d3.scale * 6}`} stroke={secondaryColor}\n                        strokeLinecap=\"round\"\n                    />\n\n                    {dashes.map(delta =>\n                        <g key={`arrow-${delta}`}\n                            transform={`translate(${x1 + delta * props.d3.scale * 10 * Math.cos(lineRot)} ${y1 + delta * props.d3.scale * 10 * Math.sin(lineRot)})`}>\n                            <g viewBox=\"-50 -50 50 50\" transform={`rotate(${arrowRot}) scale(${0.05 * props.d3.scale})`}>\n                                <polygon points=\"-40,-50 -40,50 40,0\" fill={dashColor} />\n                            </g>\n                        </g>\n                    )}\n                </g>\n            </>\n        )\n    }\n\n    return (null)\n}\n","import React, { useState, useEffect, useRef } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport TaskPaths from '../task_paths/task_paths'\nimport {isObject} from \"../../../methods/utils/object_utils\";\n\nconst ProcessPaths = (props) => {\n    const {\n        d3\n    } = props\n\n    const selectedProcess = useSelector(state => state.processesReducer.selectedProcess)\n    const tasks = useSelector(state => state.tasksReducer.tasks)\n    const editingTask = useSelector(state => state.tasksReducer.editingTask)\n    const selectedTask = useSelector(state => state.tasksReducer.selectedTask)\n\n    // Maps through all the associated routes with the process and displays them\n    const handleTaskPaths = () => {\n        return selectedProcess.routes\n            .filter((route) => {\n                const {\n                    load,\n                    unload,\n                    _id: routeId\n                } = (isObject(route) ? route : tasks[route]) || {}\n\n                const {\n                    _id: selectedRouteId\n                } = selectedTask || {}\n\n                if(routeId === selectedRouteId) return false    // selected route is shown separately, so don't double dip\n\n                const {\n                    position: loadPosition,\n                    station: loadStation\n                } = load || {}\n\n                const {\n                    position: unloadPosition,\n                    station: unloadStation\n                } = unload || {}\n\n                /*\n                * if we aren't editing a task, and it's missing load / unload don't show it.\n                * If we are a task, but its not this one, and this one is missine load / unload, don't show it\n                * */\n                if((!(editingTask) || (editingTask && selectedRouteId !== routeId)) && (!(loadPosition || loadStation) || !(unloadPosition || unloadStation))) return false\n                return true\n             })\n            .map((route, ind) => {\n                if( isObject(route) ) {\n                    return (\n                        <TaskPaths d3={d3} route={route} key={route._id} />\n                    )\n                }\n                else {\n                    return (\n                        <TaskPaths d3={d3} route={tasks[route]} key={route} />\n                    )\n                }\n            })\n    }\n\n    return (\n        <>\n            {handleTaskPaths()}\n        </>\n    )\n\n}\n\nexport default ProcessPaths","import React, { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useParams } from 'react-router-dom'\n\nimport { DeviceTypes } from '../../../../constants/device_constants'\n\n// Import Actions\nimport { hoverStationInfo } from '../../../../redux/actions/widget_actions'\n\nconst MiR100 = (props) => {\n\n    const {\n        device,\n        d3\n    } = props\n\n    const params = useParams()\n    const dispatch = useDispatch()\n    const dispatchHoverStationInfo = (info) => dispatch(hoverStationInfo(info))\n\n    // On Load, see if the stationID in the url matches this device and if its showing a widget page\n    // If so, then disptach info to show that widget page\n    useEffect(() => {\n        if (params.stationID !== undefined && params.stationID === props.device._id && !!params.widgetPage) {\n            dispatchHoverStationInfo({ id: device._id })\n\n        }\n    }, [])\n\n    const shouldGlow = false\n\n\n    let type = 'cart'\n\n    if (device['shelf_attached'] > 0) {\n        type = 'shelf'\n    }\n\n    let color = DeviceTypes[type].primaryColor\n\n    if (device.state_text === 'EmergencyStop') {\n        color = 'red'\n    }\n\n\n\n    return (\n        <g\n            style={{ fill: color, stroke: color, strokeWidth: '0', opacity: '0.8' }}\n            transform={`translate(${device.position.x},${device.position.y}) rotate(${360 - device.position.orientation - 90}) scale(${d3.scale / d3.imgResolution},${-d3.scale / d3.imgResolution})`}\n        >\n\n            <svg x=\"-10\" y=\"-10\" width=\"20\" height=\"20\" viewBox=\"0 0 400 400\">\n\n                {DeviceTypes[type].svgPath}\n\n            </svg>\n\n\n        </g>\n    )\n\n}\n\nexport default MiR100","import styled from 'styled-components'\n\n\nexport const MenuContainer = styled.div`\n    position: absolute;\n    width: 12rem;\n    height: auto;\n    z-index: 10000;\n\n    background: white;\n\n    box-shadow: 0 0.1rem 0.2rem 0rem #303030;\n    border-radius: 0.3rem;\n\n    backdrop-filter: blur(10px);\n    background-color: rgba(255, 255, 255, 0.6);\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    overflow: hidden;\n`\n\nexport const MenuButton = styled.button`\n    border: none;\n    text-align: center;\n    width: 100%;\n    height: 2rem;\n    outline:none;\n\n\n    background-color: transparent;\n\n    &:hover{\n        background-color: ${props => props.theme.bg.tertiary};\n    }\n\n    &:focus{\n        outline: 0 !important\n    }\n\n    &:active{\n        box-shadow: none;\n    }\n`;","import React from 'react'\nimport { useHistory } from 'react-router-dom'\n\n\nimport { useSelector, useDispatch } from 'react-redux'\n\n// Import actions\nimport { addStation, setSelectedStation, setEditingStation } from '../../../redux/actions/stations_actions'\nimport { addPosition, setSelectedPosition, setEditingPosition, setSelectedStationChildrenCopy } from '../../../redux/actions/positions_actions'\nimport { setOpen } from \"../../../redux/actions/sidebar_actions\"\n\n// Import utils\nimport { convertD3ToReal } from '../../../methods/utils/map_utils'\nimport { deepCopy } from '../../../methods/utils/utils'\n\n// Import Constants\nimport { PositionTypes } from '../../../constants/position_constants'\nimport { LocationDefaultAttributes } from '../../../constants/location_constants'\nimport { StationTypes } from '../../../constants/station_constants'\n\n\n// import styling\nimport * as styled from './right_click_menu.style'\n\nimport uuid from 'uuid'\n\n/**\n * This is the menu that opens on right click\n * It does some funky things that will be explained here\n *\n * Send cart to location\n * Makes a temp position with a schema of 'temporary_position'\n * That schema is used in locations, widgets, map view and positions to tell if its a right click menu\n * If it is a right click menu position then the widgets should always be displayed for send or cancel, and not disappear on mouse leave. (see map_view and widgets)\n *\n * The widget buttons have custom actions, and those actions can be found inside of widget_button is widgets\n * @param {*} props\n */\nconst RightClickMenu = (props) => {\n\n    const {\n        coords,\n        buttonClicked,\n        d3,\n    } = props\n\n    const dispatch = useDispatch()\n\n    const dispatchAddPositions = (position) => dispatch(addPosition(position))\n    const dispatchSetSelectedPosition = (position) => dispatch(setSelectedPosition(position))\n\n    const dispatchAddStation = (station) => dispatch(addStation(station))\n    const dispatchSetSelectedStation = (station) => dispatch(setSelectedStation(station))\n    const dispatchEditingStation = (bool) => dispatch(setEditingStation(bool))\n    const dispatchSetSelectedStationChildrenCopy = (children) => dispatch(setSelectedStationChildrenCopy(children))\n\n    const dispatchShowSideBar = (bool) => dispatch(setOpen(bool))\n\n    const currentMapId = useSelector(state => state.settingsReducer.settings.currentMapId)\n    const maps = useSelector(state => state.mapReducer.maps)\n    const currentMap = Object.values(maps).find(map => map._id === currentMapId)\n    const showSideBar = useSelector(state => state.sidebarReducer.open)\n    const deviceEnabled = useSelector(state => state.settingsReducer.settings.deviceEnabled)\n    const selectedStation = useSelector(state => state.stationsReducer.selectedStation)\n    const selectedPosition = useSelector(state => state.positionsReducer.selectedPosition)\n    const history = useHistory()\n\n\n    const disbaleStation = !!selectedStation ? true : !!selectedPosition ? true : false\n\n    const onSendCartToPosition = async () => {\n        const pos = convertD3ToReal([coords.x, coords.y], d3)\n\n        const tempSelectedPosition = {\n            name: '',\n            schema: 'temporary_position',\n            type: 'cart_position',\n            map_id: currentMap._id,\n            pos_x: pos[0],\n            pos_y: pos[1],\n            rotation: 0,\n            x: coords.x,\n            y: coords.y,\n            _id: uuid.v4()\n        }\n\n        await Object.assign(tempSelectedPosition, { ...PositionTypes['temporary_cart_position'].attributes, temp: true })\n        await dispatchAddPositions(tempSelectedPosition)\n        await dispatchSetSelectedPosition(tempSelectedPosition)\n\n        buttonClicked()\n    }\n\n    const onAddStation = async () => {\n\n        const pos = convertD3ToReal([coords.x, coords.y], d3)\n\n        const defaultAttributes = deepCopy(LocationDefaultAttributes)\n\n        defaultAttributes['map_id'] = currentMap._id\n        defaultAttributes['_id'] = uuid.v4()\n        defaultAttributes['pos_x'] = pos[0]\n        defaultAttributes['pos_y'] = pos[1]\n        defaultAttributes['x'] = coords.x\n        defaultAttributes['y'] = coords.y\n        defaultAttributes['temp'] = false\n\n\n        const attributes = deepCopy(StationTypes['human'].attributes)\n\n        const tempSelectedStation = {\n            ...defaultAttributes,\n            ...attributes\n        }\n\n        dispatchEditingStation(true)\n        dispatchSetSelectedStationChildrenCopy({})\n        dispatchAddStation(tempSelectedStation)\n        dispatchSetSelectedStation(tempSelectedStation)\n\n        history.push('/locations')\n\n        dispatchShowSideBar(true)\n\n\n        buttonClicked()\n    }\n\n    return (\n        <styled.MenuContainer style={{ top: coords.y, left: coords.x }}>\n            {deviceEnabled ?\n                <>\n                    <styled.MenuButton disabled={disbaleStation} onClick={() => !disbaleStation && onAddStation()}>Add Station</styled.MenuButton>\n                    <styled.MenuButton disabled={disbaleStation} onClick={onSendCartToPosition}>Send Cart to Position</styled.MenuButton>\n                </>\n                :\n                <styled.MenuButton onClick={onAddStation}>Add Station</styled.MenuButton>\n\n            }\n\n        </styled.MenuContainer>\n    )\n}\n\nexport default RightClickMenu\n","import styled from 'styled-components'\n\n\nexport const TaskStatisticsContainer = styled.div`\n    position: absolute;\n    display: flex;\n\n    flex-direction: column;\n    align-items: center;\n\n    top: ${props => props.yPosition};\n    left: ${props => props.xPosition};\n\n    max-height: 6.5rem;\n    min-width: 7rem;\n    max-width: 20rem;\n    padding: .1rem;\n\n    background: red;\n    border-radius: 1rem;\n    box-shadow: 0 0.1rem 0.2rem 0rem #303030;\n    background-color: rgba(255, 255, 255, 0.9);\n\n    overflow: hidden;\n\n`\nexport const TaskNameText = styled.span`\n    margin-bottom: 0rem;\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz3};\n    font-weight: bold;\n\n    overflow-wrap: break-word;\n    align-items: center;\n    box-align: center;\n    width: 100%;\n    height: 100%;\n    word-break: break-word;\n`\n\nexport const TaskNameContainer = styled.div`\n  \tflex: 1;\n  \tdisplay: flex;\n  \tjustify-content: first baseline;\n    flex-direction: column;\n    overflow: hidden;\n    text-overflow: ellipsis;\n\n    max-height: 4rem;\n`\n\nexport const TaskText = styled.p`\n    align-self: center;\n    text-align: center;\n    margin-left: .25rem;\n    margin-top: auto;\n    margin-bottom: auto;\n    font-family: ${props => props.theme.font.primary};\n    align-text: center;\n    white-space: break-spaces;\n`\n\nexport const TaskIcon = styled.i`\n    margin-bottom: .2rem;\n`\n\nexport const RowContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center\n`\n","import axios from 'axios';\nimport {apiIPAddress} from '../settings/settings'\nimport * as log from 'loglevel';\n\nconst operator = 'analysis'\n\nexport async function getTasksAnalysis() {\n  try {\n    const response = await axios({\n      method: 'GET',\n      url: apiIPAddress() + operator,\n      headers: {\n        'X-API-Key': '123456',\n        'Access-Control-Allow-Origin': '*'\n    }\n    });\n\n    // Success 🎉\n    // log.debug('getTasks :res:',response);\n    const data = response.data;\n    // const dataJson = JSON.parse(data)\n    // log.debug('getTasks: dataJson: ', dataJson)\n\n    return data;\n\n} catch (error) {\n\n    // Error 😨\n    if (error.response) {\n        /*\n         * The request was made and the server responded with a\n         * status code that falls out of the range of 2xx\n         */\n        console.error('error.response.data', error.response.data);\n        console.error('error.response.status',error.response.status);\n        console.error('error.response.headers',error.response.headers);\n    } else if (error.request) {\n        /*\n         * The request was made but no response was received, `error.request`\n         * is an instance of XMLHttpRequest in the browser and an instance\n         * of http.ClientRequest in Node.js\n         */\n        console.error('error.request', error.request);\n    } else {\n        // Something happened in setting up the request and triggered an Error\n        console.error('error.message', error.message);\n    }\n    throw error\n    console.error('error', error);\n  }\n\n\n};\n\nexport async function getTaskAnalysis(id) {\n  // log.debug('getTask: id: ', id)\n  try {\n    const response = await axios({\n      method: 'GET',\n      url: apiIPAddress() + operator + '/' + id,\n      headers: {\n        'X-API-Key': '123456',\n        'Access-Control-Allow-Origin': '*'\n    }\n    });\n    // Success 🎉\n    // log.debug('getTask: response: ', response);\n    const data = response.data;\n    // log.debug('getTask: dataJson:', dataJson)\n    return data;\n\n\n} catch (error) {\n\n    // Error 😨\n    if (error.response) {\n        /*\n         * The request was made and the server responded with a\n         * status code that falls out of the range of 2xx\n         */\n        console.error('getTask: error.response.data', error.response.data);\n        console.error('getTask: error.response.status',error.response.status);\n        console.error('getTask: error.response.headers',error.response.headers);\n    } else if (error.request) {\n        /*\n         * The request was made but no response was received, `error.request`\n         * is an instance of XMLHttpRequest in the browser and an instance\n         * of http.ClientRequest in Node.js\n         */\n        console.error('getTask: error.request', error.request);\n    } else {\n        // Something happened in setting up the request and triggered an Error\n        console.error('getTask: error.message', error.message);\n    }\n    throw error\n    console.error('getTask: error', error);\n  }\n\n\n};\n","import { normalize, schema } from 'normalizr';\n\nimport {\n    TASKS,\n    TASK,\n    ANALYSIS,\n} from '../types/tasks_types';\n\nimport {\n    GET_,\n\n    _STARTED,\n    _SUCCESS,\n    _FAILURE,\n} from '../types/api_types';\n\nimport * as api from '../../api/task_analysis_api'\n\nimport { tasksAnalysisSchema } from '../../normalizr/schema'\n\n\n// get\n// ******************************\nexport const getTasksAnalysis = () => {\n    return async dispatch => {\n\n        function onStart() {\n            dispatch({ type: GET_ + TASKS + ANALYSIS + _STARTED });\n        }\n        function onSuccess(tasksAnalysis) {\n            dispatch({ type: GET_ + TASKS + ANALYSIS + _SUCCESS, payload: tasksAnalysis });\n            return tasksAnalysis;\n        }\n        function onError(error) {\n            dispatch({ type: GET_ + TASKS + ANALYSIS + _FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const tasksAnalysis = await api.getTasksAnalysis();\n            const schema = normalize(tasksAnalysis, tasksAnalysisSchema)\n            return onSuccess(schema.entities.taskAnalysis);\n\n        } catch (error) {\n            return onError(error);\n        }\n    };\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// get\n// ******************************\nexport const getTaskAnalysis = (id) => {\n    return async dispatch => {\n\n        function onStart() {\n            dispatch({ type: GET_ + TASK + ANALYSIS + _STARTED });\n        }\n        function onSuccess(taskAnalysis) {\n            dispatch({ type: GET_ + TASK + ANALYSIS + _SUCCESS, payload: taskAnalysis });\n            return taskAnalysis;\n        }\n        function onError(error) {\n            dispatch({ type: GET_ + TASK + ANALYSIS + _FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const taskAnalysis = await api.getTaskAnalysis(id);\n\n            return onSuccess(taskAnalysis);\n\n        } catch (error) {\n            return onError(error);\n        }\n    };\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n","import React, { useState, useEffect, useRef } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useLocation } from \"react-router-dom\";\n\n// Import Styles\nimport * as styled from './task_statistics.style'\nimport taskAnalysisReducer from \"../../../redux/reducers/task_analysis_reducer\";\nimport IconButton from '../../basic/icon_button/icon_button'\nimport {getTasksAnalysis} from \"../../../redux/actions/task_analysis_actions\";\nimport {getRouteProcesses} from \"../../../methods/utils/route_utils\";\n\nconst TaskStatistics = (props) => {\n\n    const {\n        // selectedTask,\n        // positions,\n        d3,\n    } = props\n\n    const dispatch = useDispatch()\n    const onGetTasksAnalysis = () => dispatch(getTasksAnalysis())\n\n    const selectedTask = useSelector(state => state.tasksReducer.selectedTask)\n    const selectedHoveringTask = useSelector(state => state.tasksReducer.selectedHoveringTask)\n    const selectedProcess = useSelector(state => state.processesReducer.selectedProcess)\n    const tasks = useSelector(state => state.tasksReducer.tasks)\n    const positions = useSelector(state => state.positionsReducer.positions)\n    const selectedPosition = useSelector(state => state.positionsReducer.selectedPosition)\n\n    const stations = useSelector(state => state.stationsReducer.stations)\n    const tasksAnalysis = useSelector(state => state.taskAnalysisReducer.tasksAnalysis) || {}\n    const taskQueue = useSelector(state=>state.taskQueueReducer.taskQueue)\n    const devices = useSelector(state=>state.devicesReducer.devices)\n\n    const editingStation = useSelector(state => state.stationsReducer.editingStation)\n    const editingPosition = useSelector(state => state.positionsReducer.editingPosition)\n    const taskEditing = useSelector(state => state.tasksReducer.editingTask)\n    const processEditing = useSelector(state => state.processesReducer.editingProcess)\n\n    const location = useLocation()\n\n    useEffect(() => {\n        onGetTasksAnalysis()\n\n    }, [])\n\n    const handleSingleTask = (task) => {\n        if (!!task) {\n            if (task === undefined || selectedTask === undefined) return null\n\n            if (editingStation === true || editingPosition === true || (taskEditing && location.pathname === '/tasks')) return null\n\n\n        const selectedTaskAnalysis = !!task ? tasksAnalysis[task._id]: null\n        const startPos = task.device_types[0] == 'human' && task.load.position == task.load.station ? stations[task.load.position] : positions[task.load.position]\n        const endPos = task.device_types[0] == 'human' && task.unload.position == task.unload.station ? stations[task.unload.position] : positions[task.unload.position]\n        const routeProcesses = getRouteProcesses(task._id)\n\n\n            if (task === null || positions === null || startPos === undefined || endPos === undefined) return null\n\n            // const xPosition = (startPos.x + endPos.x) / 2 + 10 * d3.scale + 'px'\n            // const yPosition = (startPos.y + endPos.y) / 2 - 30 + 'px'\n\n            // const xPosition = (startPos.x + endPos.x) / 2 + 'px'\n            // const yPosition = (startPos.y + endPos.y) / 2 - 30 + 'px'\n\n        // Some fancy calculation to find a common offset from a task path\n        // Doesnt work because it doesnt\n          const x1 = startPos.x\n          const y1 = startPos.y\n          const x2 = endPos.x\n          const y2 = endPos.y\n\n\n            const midX = (x1 + x2) / 2\n            const midY = (y1 + y2) / 2\n\n            const difY = (y2 - y1)\n\n            // const height = (25*Math.pow(difY,1/4))/Math.pow(d3.scale/5.8,1/4)\n\n            const height = () => {\n                if ((150 / difY) > 50) {\n                    return 50\n                } else {\n                    return 100 - 150 / difY\n                }\n            }\n\n            // const height = 100\n\n            const numerator = Math.abs(y2 - (midY))\n\n            // const denominator = Math.sqrt(Math.pow(x2 - (midX), 2) + Math.pow(y2 - (midY), 2))\n            const denominator = Math.abs(x2 - (midX))\n\n            const theta = Math.atan(numerator / denominator)\n\n            // const xPosition = (midX - height() * Math.sin(theta)) - 80 + 'px'\n            // const yPosition = (midY + height() * Math.cos(theta)) - 40 + 'px'\n\n            const xPosition = midX - 40 + 'px'\n            const yPosition = midY + 20 + 'px'\n            return (\n                <styled.TaskStatisticsContainer xPosition={xPosition} yPosition={yPosition}>\n                    <styled.RowContainer style={{ borderBottom: '1px solid black', padding: '.2rem .2rem .2rem .2rem', width: '100%' }}>\n\n                        <styled.TaskText style={{ paddingRight: '.3rem' }}>{task.name} </styled.TaskText>\n\n                        <IconButton color={'red'} style={{ paddingRight: '.2rem' }}>\n                            {task.device_types[0] === 'human' ?\n                                <i className=\"fas fa-user\"></i>\n                                :\n                                <i className=\"fas fa-robot\"></i>\n                            }\n                        </IconButton>\n\n                    </styled.RowContainer>\n\n                    <styled.RowContainer style={{ paddingTop: '.2rem' }}>\n\n                  <styled.TaskText style = {{paddingRight: '.7rem'}}>{routeProcesses.length}</styled.TaskText>\n\n                        <IconButton color='#ffb62e'>\n                            <i className=\"fas fa-route\"></i>\n                        </IconButton>\n\n                    </styled.RowContainer>\n\n                    {task.device_types[0] !== 'human' && !!selectedTaskAnalysis &&\n                        <styled.RowContainer style={{ justifyContent: 'space-between', width: '82%', marginTop: '.25rem', borderTop: '1px solid black', paddingTop: '.3rem' }}>\n                            <styled.RowContainer>\n                                <styled.TaskIcon className='far fa-clock' />\n                                <styled.TaskText>{`${selectedTaskAnalysis.avg_run_time}s`}</styled.TaskText>\n                            </styled.RowContainer>\n\n                            <styled.RowContainer>\n                                <styled.TaskIcon className='far fa-check-circle' />\n                                <styled.TaskText>{selectedTaskAnalysis.successes}</styled.TaskText>\n                            </styled.RowContainer>\n\n                            <styled.RowContainer>\n                                <styled.TaskIcon className='far fa-times-circle' />\n                                <styled.TaskText>{selectedTaskAnalysis.failures}</styled.TaskText>\n                            </styled.RowContainer>\n\n                        </styled.RowContainer>\n                    }\n                </styled.TaskStatisticsContainer>\n            )\n        }\n        else { return null }\n\n    }\n\n\n    const handleProcessTasks = () => {\n\n        if (!!selectedHoveringTask) {\n            return handleSingleTask(selectedHoveringTask)\n        }\n\n        // return Object.keys(selectedProcess.routes).map((station) => {\n        return selectedProcess.routes.map((route) => {\n            return handleSingleTask(tasks[route])\n\n        })\n        // })\n    }\n\n\n    return (\n\n        !!selectedProcess ?\n            handleProcessTasks()\n            :\n            handleSingleTask(selectedTask)\n\n\n\n    )\n\n}\n\nexport default TaskStatistics\n","import styled from 'styled-components'\n\n\nexport const TaskStatisticsContainer = styled.div`\n    position: absolute;\n    display: flex;\n\n    flex-direction: column;\n    align-items: center;\n\n    top: ${props => props.yPosition};\n    left: ${props => props.xPosition};\n\n    min-width: 5rem;\n    max-width: 24rem;\n    padding: .1rem;\n\n    background: red;\n    border-radius: .5rem;\n    box-shadow: 0 0.1rem 0.2rem 0rem #303030;\n    background-color: rgba(255, 255, 255, 0.9);\n\n    overflow: hidden;\n  \n  \tdiv:not(:last-child) {\n      border-bottom: 1px solid #7e7e7e;\n\t}\n`\n\nexport const TaskNameContainer = styled.div`\n  \tflex: 1;\n  \tdisplay: flex;\n  \tjustify-content: first baseline;\n    flex-direction: column;\n    overflow: hidden;\n    text-overflow: ellipsis;\n\n    max-height: 4rem;\n`\n\nexport const TaskText = styled.p`\n    align-self: center;\n    text-align: center;\n    margin-left: .25rem;\n    margin-top: auto;\n    margin-bottom: auto;\n    font-family: ${props => props.theme.font.primary};\n    color: #2ed182;\n    align-text: center;\n    white-space: break-spaces;\n`\n\n\nexport const RowContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n\n\n    &:hover{\n      background-color: ${props =>props.theme.bg.secondary};\n    }\n`\n","import React, { useState, useEffect, useRef } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\n// Import Styles\nimport * as styled from './route_confirmation.style'\nimport IconButton from '../../basic/icon_button/icon_button'\nimport { showRouteConfirmation, setRouteConfirmationLocation, autoAddRoute } from '../../../redux/actions/tasks_actions'\nimport {isNonEmptyArray} from \"../../../methods/utils/array_utils\";\n\nconst RouteConfirmation = (props) => {\n\n    const {\n        d3,\n    } = props\n\n    const dispatch = useDispatch()\n    const dispatchSetShowRouteConfirmation = (bool) => dispatch(showRouteConfirmation(bool))\n    const dispatchSetRouteConfirmationLocation = (id) => dispatch(setRouteConfirmationLocation(id))\n    const dispatchAutoAddRoute = (bool) => dispatch(autoAddRoute(bool))\n\n    const selectedTask = useSelector(state => state.tasksReducer.selectedTask)\n    const selectedProcess = useSelector(state => state.processesReducer.selectedProcess)\n    const tasks = useSelector(state => state.tasksReducer.tasks)\n    const showRouteConfirm = useSelector(state=> state.tasksReducer.showRouteConfirmation)\n    const routeConfirmLocation = useSelector(state=> state.tasksReducer.routeConfirmationLocation)\n    const positions = useSelector(state => state.positionsReducer.positions)\n    const stations = useSelector(state => state.stationsReducer.stations)\n\n    const [showContinue, setShowContinue] = useState(true)\n\n    useEffect(() => {\n        const insertIndex = selectedTask?.temp?.insertIndex\n\n        const processHasRoutes = isNonEmptyArray(selectedProcess?.routes)\n\n        if((insertIndex === 0) && processHasRoutes) {\n            setShowContinue(false)\n        }\n        else {\n            setShowContinue(true)\n        }\n        return () => {}\n    }, [selectedTask, selectedProcess])\n\n\n    const handleSingleTask = (task) => {\n          if (!!task && !!showRouteConfirm) {\n\n              //\n\n            const loc = !!stations[routeConfirmLocation] ? stations[routeConfirmLocation] : positions[routeConfirmLocation]\n\n            const x = loc.x\n            const y = loc.y\n\n            const xPosition = x -90 + 'px'\n            const yPosition = y -80 + 'px'\n\n            return (\n                <styled.TaskStatisticsContainer\n                    xPosition={xPosition}\n                    yPosition={yPosition}\n\n                    >\n                    <styled.RowContainer\n                       style={{borderTopLeftRadius: \"0.5rem\", borderTopRightRadius: \"0.5rem\", padding: '0rem', width: '100%' }}\n                       onClick = {()=>{\n                         dispatchSetShowRouteConfirmation(false)\n                         dispatchAutoAddRoute(\"finish\")\n                       }}\n                     >\n                        <styled.TaskText style={{ paddingRight: '.3rem' }}>Add and finish</styled.TaskText>\n\n                        <IconButton style={{paddingRight: '.2rem' }}>\n                                <i className=\"fas fa-check-circle\" style = {{color: \"#2ed182\"}}></i>\n                        </IconButton>\n                    </styled.RowContainer>\n\n                    {showContinue &&\n                    <styled.RowContainer\n                        style={{ borderBottomLeftRadius: \"0.5rem\", borderBottomRightRadius: \"0.5rem\", padding: '0.1rem .2rem 0.1rem .2rem', width: '100%' }}\n                        onClick = {()=> {\n                            dispatchSetShowRouteConfirmation(false)\n                            dispatchAutoAddRoute(\"continue\")\n                        }}\n                    >\n                        <styled.TaskText style={{ paddingRight: '.3rem', color: \"#ffbf1f\" }}>Add and continue</styled.TaskText>\n\n                        <IconButton style={{paddingRight: '.2rem' }}>\n                            <i className=\"fas fa-arrow-alt-circle-right\" style = {{color: \"#ffbf1f\"}}></i>\n                        </IconButton>\n                    </styled.RowContainer>\n                    }\n                </styled.TaskStatisticsContainer>\n            )\n        }\n        else { return null }\n    }\n\n\n    return (\n            handleSingleTask(selectedTask)\n          )\n\n}\n\nexport default RouteConfirmation\n","import styled, { css } from 'styled-components'\n\nimport { hexToRGBA } from '../../../methods/utils/color_utils'\n\n\nexport const Container = styled.div`\n    position: absolute;\n    padding: inherit;\n    z-index: 1;\n\n    top: 5rem;\n    bottom: 1rem;\n    left: 1rem;\n    right: ${props => !!props.taskQueueOpen ? '21rem' : '1rem'};\n\n\n    display: flex;\n    flex-direction: column;\n\n    /* // styles when showWidgetPage is true */;\n    visibility: ${props => !!props.showWidgetPage ? 'visible' : 'hidden'};\n\n    opacity: ${props => !!props.showWidgetPage ? '100%' : '0%'};\n    transition-delay: .2s;\n    transition-property: opacity;\n    transition-duration: .25s;\n    transition-timing-function: ease;\n\n\n    @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n        top: 5rem;\n        bottom: .5rem;\n        left: .5rem;\n        right: .5rem;\n    }\n\n`\n\nexport const WidgetPageContainer = styled.div`\n    height: 100%;\n    width: 100%;\n    z-index: 3;\n    position: relative;\n\n    border-radius: 1rem;\n    box-shadow: 0 0.2rem 0.4rem 0rem #303030;\n    // background-color: transparent;\n    background-color: ${props => props.theme.bg.primary};\n\n    overflow: hidden;\n\n    cursor: default;\n    /* transition: all 2s ease; */\n`\n\nexport const WidgetsContainer = styled.div`\n    position: relative;\n    display: flex;\n\n    margin: .5rem 0;\n\n    @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n        margin: 0;\n    }\n`\n","import styled from 'styled-components'\n\n\nexport const HeaderContainer = styled.div`\n    width: 100%;\n    display: flex;\n    justify-content: center;\n`\n\nexport const HeaderText = styled.h1`\n    display: flex;\n`\n\nexport const HeaderStation = styled.h1`\n    display: flex;\n`","import styled from 'styled-components';\nimport AssignmentOutlinedIcon from '@material-ui/icons/AssignmentOutlined';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\n\nimport {RGB_Linear_Shade, hexToRGBA} from \"../../../../methods/utils/color_utils\";\n\nexport const PageContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    height: 100%;\n    max-height: 100%;\n    overflow: hidden;\n    max-width: 100%;\n    width: 100%;\n    \n    background: ${props => props.theme.bg.octonary};\n    \n    flex: 1;\n    \n`\n\nexport const Container = styled.div`\n    display: flex;\n    flex-grow: 1;\n    flex-direction: column;\n    \n    width: 100%;\n    max-width: 100%;\n    overflow: hidden;\n    height: 100%;\n    max-height: 100%;\n`\n\n\n\n\n\n\n","import React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom'\n\n// external functions\nimport { useSelector, useDispatch } from 'react-redux'\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport { DndProvider } from \"react-dnd\";\nimport { Container } from 'react-smooth-dnd'\nimport { withRouter } from \"react-router-dom\";\n\n// Import Components\nimport DashboardScreen from './dashboard_screen/dashboard_screen'\n\n// Import Constants\nimport { OPERATION_TYPES } from '../../../../constants/dashboard_constants'\n\nimport { PAGES } from \"../../../../constants/dashboard_constants\";\n\nimport {\n    getDashboards,\n    setDashboardKickOffProcesses,\n    setDashboardFinishProcesses,\n    putDashboardAttributes\n} from '../../../../redux/actions/dashboards_actions'\nimport { getTasks } from '../../../../redux/actions/tasks_actions'\n\n// Import Styles\nimport * as style from './dashboards_page.style'\n\n// logging\nimport log from \"../../../../logger\";\nimport {\n    getContainsFinishButton,\n    getContainsKickoffButton,\n    getOperationButton\n} from \"../../../../methods/utils/dashboards_utils\";\nconst logger = log.getLogger(\"DashboardsPage\");\n\nconst DashboardsPage = (props) => {\n\n    const params = useParams()\n\n    const {\n        stationID,\n        dashboardID,\n        editing,\n        lotID\n    } = params || {}\n\n    // redux state\n    const dispatch = useDispatch()\n    const dispatchSetDashboardKickOffProcesses = async (dashboardId, kickOffEnabled) => await dispatch(setDashboardKickOffProcesses(dashboardId, kickOffEnabled))\n    const dispatchSetDashboardFinishProcesses = async (dashboardId, finishEnabled) => await dispatch(setDashboardFinishProcesses(dashboardId, finishEnabled))\n    const dispatchPutDashboardAttributes = async (attributes, id) => await dispatch(putDashboardAttributes(attributes, id))\n\n    const dispatchGetTasks = () => dispatch(getTasks())\n\n    const dashboards = useSelector(state => state.dashboardsReducer.dashboards)\n    const devices = useSelector(state => state.devicesReducer.devices)\n    const processes = useSelector(state => { return state.processesReducer.processes })\n    const routes = useSelector(state => { return state.tasksReducer.tasks })\n    const cards = useSelector(state => state.cardsReducer.cards)\n\n    const [sidebarWidth, setSidebarWidth] = useState(window.innerWidth < 2000 ? 400 : 700)\n\n\n    const history = useHistory()\n    const dashboard = dashboards[dashboardID]\n    if (dashboard === undefined) {\n        history.push('/locations')\n        window.location.reload()\n    }\n\n    useEffect(() => {\n    }, [])\n\n\n    /**\n     * This useEffect checks whether the current dashboard is kick off enabled\n     *\n     * In order to be kick off enabled, the dashboard's station must be the first station in a process\n     *\n     * To check if the dashboard's station is the first station in a process,\n     * it checks the load station of the first route in each process.\n     * For any process where the first station's id matches the current dashboard's station id, the process id is added to list.\n     * This list is then dispatched to redux with the key being the dashboard's ID and value is the list\n     *\n     * This information is used for determining whether or not to enable the KICK OFF button for a given dashboard\n     */\n    useEffect(() => {\n        onUpdateKickoffFinishInfo()\n\n    }, [processes])\n\n\n    const onUpdateKickoffFinishInfo = async () => {\n        // list of all processes that the station is the first station of the process\n        let firstStationProcesses = []\n        let lastStationProcesses = []\n\n        // loop through processes and check if the load station of the first route of any process matches the current dashboards station\n        Object.values(processes).forEach((currProcess) => {\n            if (currProcess && currProcess.routes && Array.isArray(currProcess.routes)) {\n                // get first routes id, default to null\n                const firstRouteId = currProcess.routes[0]\n\n                // get route from route id, default to null\n                const currRoute = firstRouteId ? routes[firstRouteId] : null\n\n                // get station id from load key of route\n                const loadStationId = currRoute?.load?.station\n\n                // if the loadStationId matches the current dashboard's stationId, add the process's id to the list\n                if (loadStationId === stationID && stationID !== undefined) firstStationProcesses.push(currProcess._id)\n\n                // now check if station is last route of any process\n                // get last routes id\n                const lastRouteId = currProcess.routes[currProcess.routes.length - 1]\n\n                // get route from route id, default to null\n                const lastRoute = lastRouteId ? routes[lastRouteId] : null\n\n                // get station id from unload key of route\n                const unloadStationId = lastRoute?.unload?.station\n\n                // if the unloadStationId matches the current dashboard's stationId, add the process's id to the list of last stations\n                if (unloadStationId === stationID && stationID !== undefined) lastStationProcesses.push(currProcess._id)\n\n\n            }\n        })\n\n        const dashboard = dashboards[dashboardID]\n        const {\n            buttons = []\n        } = dashboard || {}\n\n        await dispatchSetDashboardKickOffProcesses(dashboardID, firstStationProcesses)\n        if (firstStationProcesses.length > 0) {\n\n            // check if kickoff button needs to be added\n            const containsKickoffButton = getContainsKickoffButton({ buttons })\n\n            // if dashboard doesn't already contain kickoff button, add it\n            if (!containsKickoffButton) {\n                const kickOffButton = {\n                    ...getOperationButton(OPERATION_TYPES.KICK_OFF.key),\n                    name: \"\"\n                }\n\n                await dispatchPutDashboardAttributes({\n                    buttons: [...buttons, kickOffButton]\n                }, dashboardID)\n            }\n        }\n\n        await dispatchSetDashboardFinishProcesses(dashboardID, lastStationProcesses)\n        if (lastStationProcesses.length > 0) {\n\n\n            // check if finish button needs to be added\n            const containsFinishButton = getContainsFinishButton({ buttons })\n\n            // add finish button\n            if (!containsFinishButton) {\n                const finishButton = {\n                    ...getOperationButton(OPERATION_TYPES.FINISH.key),\n                    name: \"\"\n                }\n\n                await dispatchPutDashboardAttributes({\n                    buttons: [...buttons, finishButton]\n                }, dashboardID)\n            }\n        }\n    }\n\n    return (\n        <style.PageContainer >\n            <DndProvider backend={HTML5Backend}>\n                <style.Container style={{ flexGrow: '1' }}>\n                    <DashboardScreen\n                    />\n                </style.Container>\n            </DndProvider>\n        </style.PageContainer >\n\n    )\n}\n\nexport default withRouter(DashboardsPage)\n","import styled from 'styled-components'\n\nexport const PageContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    max-height: 100%;\n    overflow: hidden;\n    max-width: 100%;\n    width: 100%;\n    align-items: center;\n    position: relative;\n\n    background: ${props => props.theme.bg.octonary};\n    \n    flex: 1;\n    \n`","import styled from 'styled-components'\nimport  * as styleO from '../objects_page.style'\n\nexport const LeftColumn = styled.div`\n    position: absolute;\n    height: 100%;\n    width: 15rem;\n    left: 0;\n    /* background: lightcoral; */\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`\n\nexport const RightColumn = styled.div`\n    position: absolute;\n    height: 100%;\n    width: 15rem;\n    right: 0;\n    /* background: lightskyblue; */\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`\n\nexport const ColumnLabel = styled.h1`\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz2};\n    font-weight: bold;\n    margin-top: 2rem;\n    margin-bottom: 2rem;\n`\n\nexport const ObjectContainer = styled.div`\n    width: 13rem;\n    height: 3rem;\n    \n    border-radius: 1rem;\n\n    border: .2rem solid red;\n\n    display: flex;\n    justify-content: center;\n\n    margin: .5rem;\n`\n\nexport const ObjectName = styled.p`\n    margin: auto;\n`\n\nexport const PageContinaer = styled(styleO.PageContainer)`\n\n`","import React, { useState, useEffect } from 'react'\n\n\nconst ObjectLink = (props) => {\n    const {\n        objectLinks\n    } = props\n\n    // console.log('QQQQ Object Link Props', objectLinks)\n\n    const [x1, setX1] = useState(0)\n    const [y1, setY1] = useState(0)\n    const [x2, setX2] = useState(0)\n    const [y2, setY2] = useState(0)\n\n    useEffect(() => {\n\n        // If startPos is not null but endPos is, then set the end pos\n        if (objectLinks.startPos.x !== null && objectLinks.endPos.x === null) {\n            setX1(objectLinks.startPos.x)\n            setY1(objectLinks.startPos.y)\n            setX2(objectLinks.startPos.x)\n            setY2(objectLinks.startPos.y)\n            window.addEventListener('mousemove', lockToMouse, false)\n        }\n        // If the opposite is true, then set the start pos\n        else if (objectLinks.endPos.x !== null && objectLinks.startPos.x === null) {\n            setX1(objectLinks.endPos.x)\n            setY1(objectLinks.endPos.y)\n            setX2(objectLinks.endPos.x)\n            setY2(objectLinks.endPos.y)\n            window.addEventListener('mousemove', lockToMouse, false)\n        }\n\n        // Else both are defined so that's good, I guess...\n        else {\n            setX1(objectLinks.startPos.x)\n            setY1(objectLinks.startPos.y)\n            setX2(objectLinks.endPos.x)\n            setY2(objectLinks.endPos.y)\n            window.removeEventListener('mousemove', lockToMouse, false)\n\n        }\n\n        return () => {\n            window.removeEventListener('mousemove', lockToMouse, false)\n\n        }\n\n\n    }, [objectLinks])\n\n    /**\n     * Locks line to cursor\n     * @param {*} e\n     */\n    const lockToMouse = (e) => {\n\n        // Have to get the widget page bounding box to get correct location of mouse\n        // Since the widget page is not 100% of the page, the cursor position is offset by the margins\n        const rect = document.getElementById('widgetPage').getBoundingClientRect()\n\n        setX2(e.clientX - rect.left)\n        setY2(e.clientY - rect.top)\n    }\n\n    // console.log('QQQQ Y2 and X2', x2, y2)\n\n    return (\n        <>\n            <g>\n                <line\n                    x1={`${x1}`} y1={`${y1}`}\n                    x2={`${x2}`} y2={`${y2}`}\n                    strokeWidth={'1rem'} stroke='rgba(95,166,236, 0.95)'\n                    strokeLinecap=\"round\"\n                />\n            </g>\n        </>\n    )\n}\n\nexport default ObjectLink\n","import React, { useState, useMemo, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useParams, useHistory } from 'react-router-dom'\n\nimport * as styled from './object_columns.style'\n\nimport ObjectLink from '../object_link/object_link'\n\n\nconst ObjectColumns = (props) => {\n\n    const {\n        parsedObjects\n    } = props\n\n    const [objectLinks, setObjectLinks] = useState({})\n    const [link, setLink] = useState({\n        startPos: {\n            id: null,\n            x: null,\n            y: null,\n        },\n        endPos: {\n            id: null,\n            x: null,\n            y: null,\n        }\n    })\n\n    const locations = useSelector(state => { return state.locationsReducer.locations })\n    const objects = useSelector(state => state.objectsReducer.objects)\n\n    // const [parsedObjects, setParsedObjects] = useState({parsedObjectsProps})\n    if (Object.keys(parsedObjects).length === 0) return null\n\n    /**\n     * Handles all the objects arriving at the stating (unloaded objects). These objects will appear in the left column\n     */\n    const handleUnloadObjects = () => {\n\n        // A list of all the unload objects ids\n        const unloadObjects = Object.values(parsedObjects.unload)\n        \n        return unloadObjects.map((object, ind) => {\n            if(object === undefined) return\n\n            const currentObject = objects[object]\n\n            const currentObjectName = currentObject.name\n\n            return (\n                <styled.ObjectContainer\n                    key={`unload-${ind}`}\n                    id={`unload-${ind}`}\n\n                    onClick={() => {\n                        const el = document.getElementById(`unload-${ind}`).getBoundingClientRect()\n\n                        console.log('QQQQ X and Y', el)\n\n                        // Have to get the widget page bounding box to get correct location of mouse\n                        // Since the widget page is not 100% of the page, the cursor position is offset by the margins\n                        const rect = document.getElementById('widgetPage').getBoundingClientRect()\n\n                        const x = el.x - rect.left + el.width\n                        const y = el.y - rect.top + el.height/2\n\n                        handleObjectLinkPoints({\n                            unload: true,\n                            id: currentObject._id.$oid,\n                            x: x,\n                            y: y,\n                        })\n\n                    }}\n                >\n                    <styled.ObjectName>{currentObjectName}</styled.ObjectName>\n                </styled.ObjectContainer>\n            )\n        })\n    }\n\n    /**\n     * Handles all the objects leaving the station (load objects). These objects will appear in the right column\n     */\n    const handleLoadObjects = () => {\n\n        // A list of all the unload objects ids\n        const loadObjects = Object.values(parsedObjects.load)\n\n        return loadObjects.map((object, ind) => {\n            if(object === undefined) return\n            const currentObject = objects[object]\n\n            const currentObjectName = currentObject.name\n\n            return (\n                <styled.ObjectContainer\n                    key={`load-${ind}`}\n                    id={`load-${ind}`}\n                    onClick={() => {\n                        const el = document.getElementById(`load-${ind}`).getBoundingClientRect()\n\n                        console.log('QQQQ X and Y', el)\n\n                        // Have to get the widget page bounding box to get correct location of mouse\n                        // Since the widget page is not 100% of the page, the cursor position is offset by the margins\n                        const rect = document.getElementById('widgetPage').getBoundingClientRect()\n\n                        const x = el.x - rect.left\n                        const y = el.y - rect.top + el.height/2\n\n                        handleObjectLinkPoints({\n                            unload: false,\n                            id: currentObject._id.$oid,\n                            x: x,\n                            y: y,\n                        })\n                    }}\n                >\n                    <styled.ObjectName>{currentObjectName}</styled.ObjectName>\n                </styled.ObjectContainer>\n            )\n        })\n    }\n\n    const handleObjectLinks = () => {\n        \n    }\n\n    /**\n     * This handles link points.\n     * If the selected object is loading from the station, then its an end point (on the right side of the screen)\n     * If the selected object is unloading to the station, then its a start point (on the left side of the screen)\n     * @param {*} point \n     */\n    const handleObjectLinkPoints = (point) => {\n\n        let editedLink = {\n            ...link\n        }\n\n        if (point.unload) {\n            editedLink = {\n                ...link,\n                startPos: {\n                    id: point.id,\n                    x: point.x,\n                    y: point.y\n                }\n            }\n            setLink(editedLink)\n        } else {\n            editedLink = {\n                ...link,\n                endPos: {\n                    id: point.id,\n                    x: point.x,\n                    y: point.y\n                }\n            }\n            setLink(editedLink)\n        }\n\n        setObjectLinks(\n            // ...objectLinks,\n            // [link.startPos.id]: link,\n            editedLink\n        )\n\n    }\n\n    // const handleMouseMove = (event) => {\n    //     console.log('QQQQ Event', event)\n    // }\n\n    // document.onmousemove = handleMouseMove;\n\n    return (\n        <>\n            <svg width=\"100%\" height=\"100%\">\n                {Object.keys(objectLinks).length > 0 &&\n                    <ObjectLink objectLinks={objectLinks} />\n\n                }\n            </svg>\n\n            <styled.LeftColumn>\n                <styled.ColumnLabel>Incoming</styled.ColumnLabel>\n                {handleUnloadObjects()}\n            </styled.LeftColumn>\n\n            <styled.RightColumn>\n                <styled.ColumnLabel>Outgoing</styled.ColumnLabel>\n                {handleLoadObjects()}\n            </styled.RightColumn>\n\n\n        </>\n    )\n}\n\nexport default ObjectColumns","import React, { useState, useMemo, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useParams, useHistory } from 'react-router-dom'\n\nimport * as styled from './objects_page.style'\n\n// Import Components\nimport ObjectColumns from './object_columns/object_columns'\n\n// Import utils\nimport { handleParseTaskBasedOnLoadUnload } from '../../../../methods/utils/object_utils'\n\n\nconst ObjectsPage = () => {\n\n    const params = useParams()\n    const stationID = params.stationID\n    const tasks = useSelector(state => state.tasksReducer.tasks)\n\n    const [parsedObjects, setParsedObjects] = useState({})\n\n\n    /**\n     * Handle associated objects on page mount\n     */\n    useEffect(() => {\n        handleAssociatedObjects()\n    }, [])\n\n    /**\n     * Finds all asociated objects for the location\n     */\n    const handleAssociatedObjects = () => {\n        const parsedObjectsReturned = handleParseTaskBasedOnLoadUnload(tasks, stationID)\n\n        setParsedObjects(parsedObjectsReturned)\n    }\n\n    \n\n    return (\n\n        <styled.PageContainer>\n            <ObjectColumns parsedObjects={parsedObjects}/>\n            <p>This'll Be the Objects Page</p>\n        </styled.PageContainer>\n    )\n}\n\nexport default ObjectsPage","import styled from 'styled-components'\n\nexport const ChartContainer = styled.div`\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    width: 90%;\n    height: 80rem;\n`\n\nexport const StatisticsIcon = styled.i`\n    font-size: 5rem;\n\n`","import React, { useState } from 'react';\n\nimport * as styled from './statistics_charts.style'\n\n\n\nconst StatisticsCharts = () => {\n\n    const [showCalendarChart, setShowCalendarChart] = useState(true)\n    const [showLineChart, setShowLineChart] = useState(true)\n    \n    return(\n        <styled.ChartContainer>\n            \n        </styled.ChartContainer>\n    )\n}\n\nexport default StatisticsCharts","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useParams, useHistory } from 'react-router-dom'\n\nimport * as styled from './statistics_page.style'\n\n// Import Components\nimport StatisticsOverview from './statistics_overview/statistics_overview'\nimport StatisticsCharts from './statistics_charts/statistics_charts'\n\n// Import Actions\nimport moduleName from '../../../../redux/actions/'\n\nconst StatisticsPage = () => {\n\n    const params = useParams()\n    const stationID = params.stationID\n\n    const stations = useSelector(state => state.stationsReducer.stations)\n\n    const [showOverview, setShowOverview] = useState(true)\n\n\n\n    return (\n        <styled.StatisticsContainer>\n            <styled.Header>\n                <styled.StationName>{stations[stationID].name}</styled.StationName>\n                {/* <styled.StatisticsSectionsButtonContainer>\n                    <styled.StatisticsSectionsButton\n                        style={{ borderRadius: '.5rem 0rem 0rem .5rem' }}\n                        onClick={() => {\n                            setShowOverview(true)\n                        }}\n                        selected={showOverview}\n                    >\n                        Overview\n                </styled.StatisticsSectionsButton>\n\n                    <styled.StatisticsSectionsButton\n                        style={{ borderRadius: '0rem .5rem .5rem 0rem' }}\n                        onClick={() => {\n                            setShowOverview(false)\n                        }}\n                        selected={!showOverview}\n\n                    >\n                        Charts\n                </styled.StatisticsSectionsButton>\n\n                </styled.StatisticsSectionsButtonContainer> */}\n            </styled.Header>\n            {/* <styled.StatisticsDownloadButton>\n                Download CSV\n            </styled.StatisticsDownloadButton> */}\n\n\n\n            {/* <StatisticsOverview/> */}\n\n\n\n            {showOverview &&\n                <styled.StatisticsSectionsContainer>\n                    <StatisticsOverview />\n                </styled.StatisticsSectionsContainer>\n            }\n\n\n            {!showOverview &&\n                <div style={{ display: 'flex', width: '100%', justifyContent: 'center', alignItems: 'center', marginTop: '5rem', flexDirection: 'column' }}>\n                    <StatisticsCharts />\n                </div>\n            }\n\n        </styled.StatisticsContainer>\n    )\n}\n\nexport default StatisticsPage","import React from 'react';\n\n\nconst TasksPage = (props) => {\n\n\n\treturn (\n\t\t<div style={{width: \"100%\", height: \"100%\"}}>\n\t\t\tTasks page coming soon...\n\t\t</div>\n\n\t)\n}\n\nexport default TasksPage","import styled from 'styled-components';\n\nexport const PageContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    max-height: 100%;\n    overflow: hidden;\n    max-width: 100%;\n    width: 100%;\n    align-items: center;\n    position: relative;\n\n\n    flex: 1;\n`\n\nexport const ConnectContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 1rem;\n    width: 100%;\n`\n\nexport const DeviceName = styled.p`\n    max-width: 100%;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    margin: 0;\n`\n\nexport const LiveText = styled.span`\n    max-width: 100%;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    margin: 0;\n    color: red;\n\n    position: absolute;\n    right: 1rem;\n`\n\nexport const Icon = styled.i`\n\tmargin: 1rem;\n\tcolor: black;\n\tfont-size: 1.5rem;\n`\n\nexport const TitleContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  margin: 0;\n  padding: 0;\n  padding-top: .2rem;\n  padding-bottom: .2rem;\n`\n","import styled, { css } from 'styled-components';\n\n\nexport const VideoContainer = styled.video`\n    z-index: 500;\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    top: 0;\n    left: 0;\n`\n\nexport const PlayerWrapper = styled.div`\nz-index:500;\n  position: relative;\n  width: 100%;\n  height: 100%;\n  background: grey;\n   /* Player ratio: 100 / (1280 / 720) */\n  //padding-top: 56.25%;\n  //max-height: 20rem;\n\n\n`\n\nexport const TextContainer = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  z-index: 500;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n\n`\n\nexport const loaderCss = css`\n  z-index: 2000;\n  display: block;\n  margin: 0 auto;\n  //color: pink;\n  //border-color: red;\n\n\n`\n\nconst textStyle = css`\n\n  //color: red;\n\n`\n\n\nexport const ErrorText = styled.div`\n  ${textStyle};\n  color: red;\n\n`\n\nexport const StatusText = styled.div`\n  ${textStyle};\n  color: white;\n\n`\n","import React, { useEffect } from 'react';\n\nimport ClipLoader from \"react-spinners/ClipLoader\"\n\nimport * as styled from './stream_container.style'\n\nconst StreamContainer = (props) => {\n    const {\n        status,\n        error,\n        myPeerId,\n        loading, streams\n    } = props\n\n\n    const getVideoElement = () => {\n        return document.getElementById(\"stream\");\n    }\n\n    const resetVideo = () => {\n        console.log(\"resetVideo called\")\n        // Reset the video element and stop showing the last received frame\n        var videoElement = getVideoElement();\n        if(videoElement) {\n            videoElement.pause();\n            videoElement.src = \"\";\n            videoElement.load();\n        }\n\n    }\n\n    useEffect(() => {\n        const vidEle = getVideoElement()\n        if(streams && Array.isArray(streams)) {\n            if (vidEle.srcObject !== streams[0]) {\n\n                // clean up old stream\n                let oldStream = vidEle.srcObject;\n\n                if(oldStream) {\n                    let tracks = oldStream.getTracks();\n                    tracks.forEach(function(track) {\n                        track.stop();\n                        track = null\n                    });\n                    oldStream = null\n                }\n\n\n                // streams.forEach((stream, ind) => {\n                //     logger.log(\"closing stream\", stream)\n                //     if (stream != undefined) {\n                //         if (stream.active) {\n                //             stream.getTracks().forEach(function (track) {\n                //                 logger.log(\"closing track\", track)\n                //\n                //                 track.stop();\n                //             });\n                //             stream = null;\n                //         }\n                //     }\n                // })\n\n                // set new stream\n                getVideoElement().srcObject = streams[0];\n            }\n        } else {\n\n\n            getVideoElement().srcObject = null\n        }\n    }, [streams])\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            let vidEle = getVideoElement()\n            if(vidEle.getVideoPlaybackQuality().droppedVideoFrames > 0) resetVideo()\n        }, 1000);\n\n        return () => clearInterval(interval);\n    }, []);\n\n\n    return (\n        <styled.PlayerWrapper>\n            <styled.TextContainer>\n                <ClipLoader\n                    css={styled.loaderCss}\n                    color={'white'}\n                    size={50}\n                    loading={loading}\n                />\n                {status &&\n                <styled.StatusText>{status}</styled.StatusText>\n                }\n\n                {error &&\n                <styled.ErrorText>{error}</styled.ErrorText>\n                }\n            </styled.TextContainer>\n\n            <styled.VideoContainer\n                id=\"stream\"\n                autoPlay\n                playsInline\n                muted\n\n            >\n                Your browser doesn't support video\n            </styled.VideoContainer>\n        </styled.PlayerWrapper>\n    );\n}\n\nexport default StreamContainer;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n\tborder: 1px solid black;\n\twidth: 100%;\n\tpadding: .5rem 1rem .5rem 1rem;\n`\n\nexport const Item = styled.div`\n\n`","import React, { useState, useEffect } from 'react';\nimport * as styled from \"./stream_info.style\"\n\nconst StreamInfo = (props) => {\n\n\tconst {\n\t\tloading,\n\t\tstatus,\n\t\terror,\n\t\toutID,\n\t\tpeerID,\n\t\tstreams\n\t} = props\n\n\treturn(\n\t\t<styled.Container>\n\t\t\t<styled.Item>loading: {loading}</styled.Item>\n\t\t\t<styled.Item>status: {status}</styled.Item>\n\t\t\t<styled.Item>error: {error}</styled.Item>\n\t\t\t<styled.Item>my ID: {outID}</styled.Item>\n\t\t\t<styled.Item>peer ID: {peerID}</styled.Item>\n\t\t</styled.Container>\n\n\t)\n}\n\nexport default StreamInfo","import log from 'loglevel';\n\nconst logger = log.getLogger(\"reconnectingWebRTCSocket\")\n\nlogger.setLevel(\"silent\")\n// RTCPeerConnection = window.RTCPeerConnection || window.webkitRTCPeerConnection\nconst googleSTUN = \"stun:stun.l.google.com:19302\"\nconst mozillaSTUN = \"stun:stun.services.mozilla.com\"\n\n// RTCPeerConnection = window.RTCPeerConnection || window.webkitRTCPeerConnection;\n\nRTCSessionDescription = window.RTCSessionDescription || window.RTCSessionDescription\nRTCIceCandidate = window.RTCIceCandidate || window.RTCIceCandidate\n\nvar default_rtc_configuration = {\n    iceServers: [\n        {\n            urls: mozillaSTUN\n        },\n        {\n            urls: googleSTUN\n        }\n    ],\n    iceCandidatePoolSize: 10,\n\t\tasdasdsa: 2322\n};\n\n\n\nexport default function reconnectingWebRTCSocket(URL, our_id, peer_id, rtc_config) {\n    let client;\n    let isConnected = false;\n    let reconnectOnClose = true;\n    let messageListeners = [];\n    let stateChangeListeners = [];\n    var peer_connection;\n    var send_channel;\n    var remoteTrackListeners = [];\n    var errorListeners = [];\n    var statusListeners = [];\n    var status = null;\n    var error = null;\n    var roomReconnectInterval;\n    var peerReconnectInterval;\n    var helloInterval;\n    var rtc_configuration = rtc_config || default_rtc_configuration\n    var streams = []\n\n    function addMessageListener(fn) {\n\n        messageListeners.push(fn);\n    }\n\n    function removeMessageListener(fn) {\n        messageListeners = messageListeners.filter(l => l !== fn);\n    }\n\n    function addErrorListener(fn) {\n\n        errorListeners.push(fn);\n        return () => {\n            errorListeners = errorListeners.filter(l => l !== fn);\n        };\n    }\n\n    const setError = (message) => {\n        logger.error(\"setError: measssadasdsasagee\",message)\n        error = message;\n        errorListeners.forEach(fn => fn(message));\n    }\n\n    function addStatusListener(fn) {\n        statusListeners.push(fn);\n        return () => {\n            statusListeners = statusListeners.filter(l => l !== fn);\n        };\n    }\n\n    const setStatus = (message) => {\n        status = message;\n        statusListeners.forEach(fn => fn(message));\n    }\n\n    function onStateChange(fn) {\n        stateChangeListeners.push(fn);\n        return () => {\n            stateChangeListeners = stateChangeListeners.filter(l => l !== fn);\n        };\n    }\n\n    function start() {\n        client = new WebSocket(URL);\n\n        client.onopen = () => {\n            isConnected = true;\n            stateChangeListeners.forEach(fn => fn(true));\n\n            setHelloInterval()\n        }\n\n        const close = client.close;\n\n        // Close without reconnecting;\n        client.close = () => {\n            reconnectOnClose = false;\n            close.call(client);\n        }\n\n        client.onmessage = (event) => {\n            logger.log(\"onmessage event.dataa\", event.data)\n\n            messageListeners.forEach(fn => fn(event));\n            let msg;\n\n            switch (event.data) {\n                case \"HELLO\":\n                    setStatus(\"Registered with server.\");\n                    clearHelloInterval()\n                    setRoomReconnectInterval()\n                    return;\n\n                case \"SESSION_OK\":\n                    // successfully connected, clear interval\n                    clearRoomReconnectInterval()\n\n                    setStatus(\"Successfuly started session with \" + peer_id);\n                    return\n\n                default:\n                    if (event.data.startsWith(\"ERROR\")) {\n                        setError(event.data);\n                        return;\n                    }\n                    else if (event.data.startsWith(\"SESSION_PEER_LEFT\")) {\n                        // reconnectToPeer()\n                    }\n                    else if (event.data.startsWith(\"ROOM_OK\")) {\n                        clearRoomReconnectInterval()\n                        setStatus(\"Successfuly joined room \" + peer_id);\n                        setPeerReconnectInterval(5000)\n                        return\n                    }\n                    else if (event.data.startsWith(\"ROOM_PEER_LEFT\")) {\n                        logger.log(\"ROOM_PEEsaR_LEFT\")\n                        return\n                    }\n                    else if (event.data.startsWith(\"ROOM_PEER_MSG\")) {\n                        logger.log(\"ROOM_PEEsR_MSG ROOM_PEER_MSG ROOM_PEER_MSG\")\n                        var splitted = event.data.split(\" \");\n                        logger.log(\"splitted\",splitted)\n\n                        return\n                    }\n                    else if (event.data.startsWith(\"ping\")) {\n                        return\n                    }\n                    if (event.data.startsWith(\"OFFER_REQUEST\")) {\n                        // The peer wants us to set up and then send an offer\n                        if (!peer_connection)\n                            createCall(null).then (generateOffer);\n                    }\n                    else {\n                        // Handle incoming JSON SDP and ICE messages\n                        try {\n                            msg = JSON.parse(event.data);\n                        } catch (e) {\n                            if (e instanceof SyntaxError) {\n                                setError(\"Error parsing incoming JSON: \" + event.data)\n                            } else {\n                                setError(\"Unknown error parsing response: \" + event.data)\n                            }\n                            return;\n                        }\n\n                        // Incoming JSON signals the beginning of a call\n                        msg = msg.content\n                        if (!peer_connection) {\n                            createCall(msg);\n                        }\n\n                        if (msg.sdp != null) {\n                            onIncomingSDP(msg.sdp);\n                        } else if (msg.ice != null) {\n                            onIncomingICE(msg.ice);\n                        }  else if (msg === \"PIPELINE_STOPPED\") {\n                            reconnectToPeer(100)\n                            // closePeerConnection()\n                            logger.log(\"PIPELINE_STOPPED\")\n\n                        }\n                        else {\n                            setError(\"Unknown incoming JSON: \" + msg);\n                        }\n                    }\n            }\n        }\n\n        client.onerror = (e) => logger.error(e);\n\n        client.onclose = () => {\n            logger.log(\"client.onclose\")\n\n            isConnected = false;\n            stateChangeListeners.forEach(fn => fn(false));\n\n            closePeerConnection()\n\n            clearPeerReconnectInterval()\n            clearRoomReconnectInterval()\n            clearHelloInterval()\n\n            if (!reconnectOnClose) {\n                logger.log('ws closed by app');\n                return;\n            }\n\n            logger.log('ws closed by server');\n\n            // attempt reconnect\n            setTimeout(start, 3000);\n\n\n            setStatus('Disconnected from server');\n\n\n\n        }\n    }\n\n\n\n\n    function createCall(msg) {\n        logger.warn(\"*** createCall ***\");\n        logger.log(\"createCall: msg\", msg)\n        // Reset connection attempts because we connected successfully\n        // connect_attempts = 0;\n\n        logger.log('Creating RTCPeerConnection');\n\n\n        peer_connection = new RTCPeerConnection(rtc_configuration);\n        // peer_connection = new RTCPeerConnection();\n\n        // send_channel = peer_connection.createDataChannel('label', null);\n        // send_channel.onopen = handleDataChannelOpen;\n        // send_channel.onmessage = handleDataChannelMessageReceived;\n        // send_channel.onerror = handleDataChannelError;\n        // send_channel.onclose = handleDataChannelClose;\n        peer_connection.ondatachannel = onDataChannel;\n        peer_connection.ontrack = onRemoteTrack;\n\n\n\n        peer_connection.onicecandidateerror = (event)=>{\n\n            logger.log(\"onicecandidateerror event\", event)\n            if (event.errorCode >= 300 && event.errorCode <= 699) {\n                // STUN errors are in the range 300-699. See RFC 5389, section 15.6\n                // for a list of codes. TURN adds a few more error codes; see\n                // RFC 5766, section 15 for details.\n            } else if (event.errorCode >= 700 && event.errorCode <= 799) {\n                // Server could not be reached; a specific error number is\n                // provided but these are not yet specified.\n            }\n        };\n\n        peer_connection.onremovestream = (event)=>{\n            logger.log(\"onremovestream event\", event)\n        };\n\n\n\n        peer_connection.onsignalingstatechange = (event)=>{\n            logger.log(\"onsignalingstatechange event\", event)\n            logger.log(\"onsignalingstatechange peer_connection.signalingState\", peer_connection.signalingState)\n\n        };\n\n        peer_connection.onicegatheringstatechange = (event)=>{\n            logger.log(\"onicegatheringstatechange event\", event)\n            logger.log(\"peer_connection.iceGatheringState\", peer_connection.iceGatheringState)\n        };\n\n        peer_connection.oniceconnectionstatechange = (event)=>{\n            logger.log(\"oniceconnectionstatechange event\", event)\n            logger.log(\"oniceconnectionstatechange pc.iceConnectionState\", peer_connection.iceConnectionState)\n\n        };\n\n        peer_connection.onconnectionstatechange = (event)=>{\n            logger.log(\"peer_connection onconnectionstatechange event\", event)\n            logger.log(\"peer_connection onconnectionstatechange peer_connection\", peer_connection)\n            logger.log(\"peer_connection onconnectionstatechange peer_connection.connectionState\", peer_connection.connectionState)\n\n            switch(peer_connection.connectionState) {\n                case \"connected\":\n                    // The connection has become fully connected\n                    break;\n                case \"disconnected\":\n                    reconnectToPeer()\n\n                    break;\n                case \"failed\":\n                    // One or more transports has terminated unexpectedly or in an error\n                    break;\n                case \"closed\":\n                    // The connection has been closed\n                    break;\n                default:\n                    break\n            }\n        };\n\n        if (msg != null && !msg.sdp) {\n            logger.log(\"WARNING: First message wasn't an SDP message!?\");\n        }\n\n        peer_connection.onicecandidate = (event) => {\n            logger.warn(\"*** onicecandidate *** - sending candidate\", event)\n            // We have a candidate, send it to the remote party with the\n            // same uuid\n            if (event.candidate == null) {\n                logger.log(\"ICE Candidate was null, done\");\n                return;\n            }\n\n\n            client.send(JSON.stringify({\n                type: \"ROOM_PEER_MSG\",\n                to: peer_id.toString(),\n                content: {'ice': event.candidate}\n            }));\n        };\n\n        if (msg != null)\n            setStatus(\"Created peer connection for call, waiting for SDP\");\n\n    }\n\n    // SDP offer received from peer, set remote description and create an answer\n    const onIncomingSDP = (sdp) => {\n        logger.warn(\"*** onIncomingSDP ***\", sdp)\n        peer_connection.setRemoteDescription(sdp).then(() => {\n            setStatus(\"Remote SDP set\");\n            if (sdp.type !== \"offer\")\n                return;\n            setStatus(\"Got SDP offer\");\n            peer_connection.createAnswer()\n                .then(onLocalDescription).catch(setError);\n        }).catch(setError);\n    }\n\n    // Local description was set, send it to peer\n    const onLocalDescription = (desc) => {\n        logger.warn(\"*** onLocalDescription ***\");\n        logger.log(\"Got local description: \", JSON.stringify(desc));\n        logger.log(\"Got local description: \", desc);\n\n        peer_connection.setLocalDescription(desc).then(function() {\n            setStatus(\"Sending SDP \" + desc.type);\n            let sdp = {\n                content: {'sdp': peer_connection.localDescription},\n                type: \"ROOM_PEER_MSG\",\n                to: peer_id.toString()\n            }\n            client.send(JSON.stringify(sdp));\n        });\n    }\n\n    const generateOffer = () => {\n        logger.warn(\"*** generateOffer ***\");\n        peer_connection.createOffer().then(onLocalDescription).catch(setError);\n    }\n\n    // ICE candidate received from peer, add it to the peer connection\n    const onIncomingICE = (ice) => {\n\n        var candidate = new RTCIceCandidate(ice);\n        logger.warn(\"*** onIncomingICE ***\", candidate);\n        peer_connection.addIceCandidate(candidate).catch(setError);\n    }\n\n    function addRemoteTrackListener(fn) {\n        logger.warn(\"*** addRemoteTrackListener ***\");\n        remoteTrackListeners.push(fn);\n        return () => {\n            remoteTrackListeners = remoteTrackListeners.filter(l => l !== fn);\n        };\n    }\n\n    const closePeerConnection = () => {\n        logger.warn(\"*** closePeerConnection ***\");\n\n        if(peer_connection) {\n            // peer_connection.restartIce()\n            peer_connection.close()\n        }\n        peer_connection = null\n    }\n\n    const onRemoteTrack = (event) => {\n\n        logger.warn(\"*** onRemoteTrack *** event\", event)\n        var identity = peer_connection.peerIdentity\n        logger.log(\"identity\",identity)\n        setError(null)\n        setStatus(\"Received track.\")\n\n        // streams = streams.concat(event.streams)\n        logger.log(\"onRemoteTrack streams\", streams)\n\n        remoteTrackListeners.forEach(fn => fn(event.streams));\n    }\n\n    const handleDataChannelOpen = (event) =>{\n        logger.warn(\"*** handleDataChannelOpen ***\", event);\n    };\n\n    const handleDataChannelMessageReceived = (event) =>{\n        logger.warn(\"*** handleDataChannelMessageReceived ***\");\n        logger.log(\"dataChannel.OnMessage:\", event, event.data.type);\n\n        setStatus(\"Received data channel message\");\n        if (typeof event.data === 'string' || event.data instanceof String) {\n            logger.log('Incoming string message: ' + event.data);\n            let textarea = document.getElementById(\"text\")\n            textarea.value = textarea.value + '\\n' + event.data\n        } else {\n            logger.log('Incoming data message');\n        }\n        send_channel.send(\"Hi! (from browser)\");\n    };\n\n    const handleDataChannelError = (error) =>{\n        logger.warn(\"*** handleDataChannelError ***\");\n        logger.log(\"dataCh\" +\n            \"annel.OnError:\", error);\n    };\n\n    const handleDataChannelClose = (event) =>{\n        logger.warn(\"*** handleDataChannelClose ***\");\n        logger.log(\"dataChannel.OnClose\", event);\n    };\n\n    function onDataChannel(event) {\n        logger.warn(\"*** onDataChannel ***\");\n        setStatus(\"Data channel created\");\n        let receiveChannel = event.channel;\n        receiveChannel.onopen = handleDataChannelOpen;\n        receiveChannel.onmessage = handleDataChannelMessageReceived;\n        receiveChannel.onerror = handleDataChannelError;\n        receiveChannel.onclose = handleDataChannelClose;\n    }\n\n    const reconnectToPeer = (interval) => {\n        logger.warn(\"*** reconnectToPeer ***: interval\", interval);\n        if(peer_connection) peer_connection.restartIce()\n\n        if(isConnected) {\n            logger.log(\"reconnectToPeer peer_connection\", peer_connection)\n            // close current connection\n            closePeerConnection()\n            peer_connection = null;\n            setPeerReconnectInterval(3000)\n        }\n    }\n\n    const clearPeerReconnectInterval = () => {\n        clearInterval(peerReconnectInterval)\n        peerReconnectInterval = null\n    }\n\n    const setPeerReconnectInterval = (interval) => {\n\n        logger.warn(\"*** setPeerReconnectInterval a***\");\n\n        if(isConnected) {\n            setStatus(`Attempting to connect to peer ${peer_id}.`);\n\n            let msg = 'CONNECT ' + peer_id\n\n            client.send(msg)\n            if(!peerReconnectInterval) {\n                peerReconnectInterval = setInterval(() => {\n                    if(peer_connection) {\n                        clearPeerReconnectInterval()\n                    }\n\n                    logger.log(`sending msg: ${msg}`)\n                    client.send(msg)\n                }, interval);\n            }\n        }\n    }\n\n\n    const clearRoomReconnectInterval = () => {\n        logger.warn(\"*** clearRoomReconnectInterval ***\");\n        clearInterval(roomReconnectInterval)\n        roomReconnectInterval = null\n    }\n\n    const setRoomReconnectInterval = (interval) => {\n\n        logger.warn(\"*** setRoomReconnectInterval ***\");\n\n        if(isConnected) {\n            setStatus(`Attempting to connect to peer ${peer_id}.`);\n\n            let msg = 'ROOM ' + peer_id\n\n            client.send(msg)\n            if(!roomReconnectInterval) {\n                roomReconnectInterval = setInterval(() => {\n\n                    logger.log(`sending msg: ${msg}`)\n                    client.send(msg)\n                }, interval);\n            }\n        }\n    }\n\n    const clearHelloInterval = () => {\n        logger.warn(\"*** clearHelloInterval ***\");\n        clearInterval(helloInterval)\n        helloInterval = null\n    }\n\n    const setHelloInterval = () => {\n        logger.warn(\"*** setHelloInterval ***\");\n        if(isConnected) {\n            client.send('HELLO ' + our_id);\n            if(!helloInterval) {\n                helloInterval = setInterval(() => {\n                    client.send('HELLO ' + our_id);\n                }, 3000);\n            }\n        }\n    }\n\n    start();\n\n    return {\n        addMessageListener,\n        removeMessageListener,\n        onStateChange,\n        close: () => client.close(),\n        start: () => start(),\n        send: (args) => client.send(args),\n        getClient: () => client,\n        isConnected: () => isConnected,\n        addRemoteTrackListener,\n        addErrorListener,\n        addStatusListener,\n        getError: () => error,\n        getStatus: () => status\n    };\n\n}\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n\tborder: 1px solid black;\n\twidth: 100%;\n\tpadding: .5rem 1rem .5rem 1rem;\n`","import React, { useState, useEffect } from 'react';\nimport * as styled from './viewer_page.style'\nimport StreamContainer from './stream_container/stream_container'\nimport StreamInfo from \"./stream_info/stream_info\";\nimport log from 'loglevel';\nimport reconnectingWebRTCSocket from \"../../../../methods/utils/websocket_utils\"\nimport TestButtons from \"./test_buttons/test_buttons\";\nconst logger = log.getLogger(\"ViewerPage\")\n\nlogger.setLevel(\"silent\")\n\n// some hard coded values for now\n// Set this to use a specific peer id instead of a random one\nvar our_default_id;\nvar our_id;\nvar peer_id = 5555\nvar ws_server = \"10.1.10.6\";\nvar ws_port;\n\nconst getOurId = () => {\n    return Math.floor(Math.random() * (9000 - 10) + 10).toString();\n}\n\n// Fetch the peer id to use\nour_id = our_default_id || getOurId()\n\nws_port = ws_port || '8443';\n\nconst ws_url = 'ws://' + ws_server + ':' + ws_port\n\nvar client;\n\nconst ViewerPage = () => {\n\n\n    const [streamConnected, setStreamConnected] = useState(false)\n    const [myPeerId, setMyPeerId] = useState(null);\n    const [error, setError] = useState(null);\n    const [status, setStatus] = useState(null);\n    const [streams, setStreams] = useState(null)\n    const [isConnected, setIsConnected] = useState(false)\n    const [showStreamInfo, setShowStreamInfo] = useState(false)\n    const [showTestButtons, setShowTestButtons] = useState(false)\n\n    useEffect(() => {\n        startConnection()\n\n        return () => {\n            // Disconnect Stream on unmount\n            closeConnection()\n        }\n    }, []);\n\n    const startConnection = () => {\n        client = reconnectingWebRTCSocket(ws_url, getOurId(), peer_id)\n        client.addRemoteTrackListener(setStreams);\n        client.onStateChange(setIsConnected);\n        client.addErrorListener(setError);\n        client.addStatusListener(setStatus);\n    }\n\n    const closeConnection = () => {\n        client.close()\n        setStreams(null)\n    }\n\n\n    const device = {\n        device_name: \"RM Vision\"\n    }\n\n    const getVideoElement = () => {\n        return document.getElementById(\"stream\");\n    }\n\n    const resetVideo = () => {\n        // Reset the video element and stop showing the last received frame\n        var videoElement = getVideoElement();\n        if(videoElement) {\n            videoElement.pause();\n            videoElement.src = \"\";\n            videoElement.load();\n        }\n\n    }\n\n    return (\n        <styled.PageContainer>\n            <styled.TitleContainer>\n                <div\n                    style={{\n                        position: \"absolute\",\n                        left: \"1rem\"\n                    }}\n                >\n                    <styled.Icon\n                        className='fa fa-retweet'\n                        onClick={() => {\n                            resetVideo()\n                        }}\n                    />\n\n                    <styled.Icon\n                        className='fa fa-info-circle'\n                        onClick={()=>setShowStreamInfo(!showStreamInfo)}\n                    />\n\n                    <styled.Icon\n                        className='fa fa-check-circle'\n                        onClick={()=>setShowTestButtons(!showTestButtons)}\n                    />\n                </div>\n\n                <styled.DeviceName>{!!device ? `${device.device_name}` : 'Connect to Stream'}</styled.DeviceName>\n\n                <styled.LiveText>Live Stream</styled.LiveText>\n            </styled.TitleContainer>\n\n\n\n            {showStreamInfo &&\n                <StreamInfo\n                    status={status}\n                    error={error}\n                    outID={our_id}\n                    peerID={peer_id}\n                    loading={!streamConnected}\n                    streams={streams}\n                />\n            }\n\n            {showTestButtons &&\n                <TestButtons\n                    onStartClick={startConnection}\n                    onCloseClick={closeConnection}\n                />\n            }\n\n\n            <StreamContainer\n                status={status}\n                error={error}\n                myPeerId={myPeerId}\n                loading={!streamConnected}\n                streams={streams}\n            />\n            <styled.ConnectContainer>\n            </styled.ConnectContainer>\n        </styled.PageContainer>\n    )\n}\n\nexport default ViewerPage\n","import React, { useState, useEffect } from 'react';\nimport * as styled from \"./test_buttons.style\"\nimport reconnectingWebRTCSocket from \"../../../../../methods/utils/websocket_utils\";\n\nconst TestButtons = (props) => {\n\n\tconst {\n\t\tonStartClick,\n\t\tonCloseClick\n\t} = props\n\n\treturn(\n\t\t<styled.Container>\n\t\t\t<button\n\t\t\t\tonClick={()=>{\n\t\t\t\t\tonCloseClick()\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tTEST CLOSE SOCKET\n\t\t\t</button>\n\t\t\t<button\n\t\t\t\tonClick={()=>{\n\t\t\t\t\tonStartClick()\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tTEST OPEN SOCKET\n\t\t\t</button>\n\t\t</styled.Container>\n\n\t)\n}\n\nexport default TestButtons","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useHistory, withRouter, Route } from 'react-router-dom'\n\nimport * as styled from './widget_pages.style'\n\nimport WidgetPageHeader from './widget_page_header/widget_page_header'\n\nimport useWindowSize from '../../../hooks/useWindowSize'\n\nimport DashboardsPage from './dashboards_page/dashboards_page'\nimport ObjectsPage from './objects_page/objects_page'\nimport StatisticsPage from './statistics_page/statistics_page'\nimport TasksPage from './tasks_page/tasks_page'\nimport ViewerPage from './viewer_page/viewer_page'\n\nimport log from \"../../../logger\"\nimport { widgetPageLoaded } from '../../../redux/actions/widget_actions'\nimport { taskQueueOpen } from '../../../redux/actions/task_queue_actions'\n\nconst logger = log.getLogger(\"WidgetPages\")\n\nconst WidgetPages = (props) => {\n\n    // Constructor\n    const history = useHistory()\n    const dispatch = useDispatch()\n\n    const size = useWindowSize()\n    const windowWidth = size.width\n    const widthBreakPoint = 1000;\n    const mobileMode = windowWidth < widthBreakPoint;\n\n    const dashboardOpen = useSelector(state => state.dashboardsReducer.dashboardOpen)\n    const taskQueueOpened = useSelector(state => state.taskQueueReducer.taskQueueOpen)\n\n    const onTaskQueueOpen = (props) => dispatch(taskQueueOpen(props))\n\n    const { locationID, widgetPage } = props.match.params\n    const showWidgetPage = widgetPage\n\n    // Tells the reducer if widget page has been loaded\n    const onWidgetPageLoaded = (props) => dispatch(widgetPageLoaded(props));\n\n\n    useEffect(() => {\n\n        // On intitial widget page load, set a delay to tell redux that the widget pages have loaded\n        // This happens because the statistic page on load needs to load charts which can be cumbersome on widget animation.\n        // So the chart loads after the widget animation, but if widget page is already open and then a statistic page is selected,\n        // there should not be a delayed chart opening. See statistics_page/statistics_overview/statistics_overview.js\n        // setTimeout(() => {\n        onWidgetPageLoaded(true)\n        // }, 300);\n\n        // On Unmount tell the reducer the widget pages aren't loaded anymore\n        return () => {\n            onWidgetPageLoaded(false)\n        }\n    }, [])\n\n    useEffect(() => {\n        if (windowWidth < 1030) {\n            onTaskQueueOpen(false)\n        }\n    }, [windowWidth])\n\n\n    return (\n        <styled.Container taskQueueOpen={taskQueueOpened} showWidgetPage={showWidgetPage} dashboardOpen={dashboardOpen} mobileMode={mobileMode} id={'widgetPage'}>\n\n            <styled.WidgetPageContainer\n                showWidgetPage={showWidgetPage}\n            >\n                <Route\n                    path=\"/locations/:stationID/dashboards/:dashboardID?/:editing?/:lotID?/:warehouse?\"\n                    component={DashboardsPage}\n                />\n                <Route\n                    path=\"/locations/:stationID/objects/:objectID?/:editing?\"\n                    component={ObjectsPage}\n                />\n                <Route\n                    path=\"/locations/:stationID/statistics\"\n                    component={StatisticsPage}\n                />\n                <Route\n                    path=\"/locations/:stationID/tasks\"\n                    component={TasksPage}\n                />\n                <Route\n                    path=\"/locations/:stationID/view\"\n                    component={ViewerPage}\n                />\n            </styled.WidgetPageContainer>\n        </styled.Container>\n\n\n    )\n\n}\n\nexport default withRouter(WidgetPages)\n","import styled from 'styled-components'\nimport { stationColor } from '../../../constants/station_constants'\n\nexport const WidgetButtonButton = styled.button`\n\n    display:flex;\n    flex-direction: column;\n    border: none;\n    outline:none;\n\n    align-items: center;\n    justify-content: center;\n\n\n    width: 4.2rem;\n    height: 4.2rem;\n    border-radius: 50%;\n    background: white;\n    box-shadow: ${props => props.theme.cardShadow};\n\n    transform: translate(-50%, -50%);\n\n    &:focus{\n        outline: 0 !important\n    }\n\n    &:active{\n        box-shadow: none;\n    }\n\n    ${props => props.switcher &&\n    `\n        height: 4rem;\n        width: 6rem;\n        border-radius: 0.4rem;\n        transform: none;\n        margin: 0 0.2rem;\n    `\n    }\n\n    ${props => props.active &&\n    `\n        background: ${props.theme.bg.tertiary};\n    `\n    }\n`;\nexport const WidgetButtonText = styled.h4`\n    font-size: 0.6rem;\n    font-family: ${props => props.theme.font.primary};\n\n    color: ${stationColor};\n\n    @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n\n    }\n`;\n\n\nexport const WidgetButtonIcon = styled.i`\n    font-size: 1.8rem;\n    color: ${stationColor};\n\n    @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n        font-size: 2rem;\n    }\n`","import React, { useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport * as styled from './widget_button.style'\n\n// Import utils\nimport uuid from 'uuid'\n\n// Import Actions\nimport { postTaskQueue } from '../../../redux/actions/task_queue_actions'\nimport { putStation, setSelectedStationChildrenCopy } from '../../../redux/actions/stations_actions'\nimport { removePosition, setSelectedPosition } from '../../../redux/actions/positions_actions'\nimport { widgetLoaded, hoverStationInfo } from '../../../redux/actions/widget_actions'\nimport { postDashboard, dashboardOpen } from '../../../redux/actions/dashboards_actions'\n\nimport { deepCopy } from '../../../methods/utils/utils'\nimport { handlePostTaskQueue } from \"../../../redux/actions/task_queue_actions\";\nimport * as sidebarActions from \"../../../redux/actions/sidebar_actions\";\n\n\n\nconst WidgetButton = (props) => {\n\n    const {\n        type,\n        currentPage,\n        id,\n        coordinateMove,\n        label,\n        switcher,\n        toggle,\n    } = props\n\n    const history = useHistory()\n    const params = useParams()\n    const widgetPage = params.widgetPage\n\n    const dispatch = useDispatch()\n    const dispatchHandlePostTaskQueue = (props) => dispatch(handlePostTaskQueue(props))\n    const dispatchWidgetLoaded = (bol) => dispatch(widgetLoaded(bol))\n    const dispatchHoverStationInfo = (info) => dispatch(hoverStationInfo(info))\n    const dispatchDashboardOpen = (props) => dispatch(dashboardOpen(props))\n    const dispatchPostDashboard = (dashboard) => dispatch(postDashboard(dashboard))\n    const dispatchPutStation = (station, ID) => dispatch(putStation(station, ID))\n    const dispatchRemovePosition = (id) => dispatch(removePosition(id))\n    const dispatchSetSelectedPosition = (position) => dispatch(setSelectedPosition(position))\n    const dispatchSetConfirmDelete = (show, callback) => dispatch(sidebarActions.setConfirmDelete(show, callback))\n\n    const selectedStation = useSelector(state => state.stationsReducer.selectedStation)\n    const selectedPosition = useSelector(state => state.positionsReducer.selectedPosition)\n    const showSideBar = useSelector(state => state.sidebarReducer.open)\n    const pageInfoChanged = useSelector(state => state.sidebarReducer.pageDataChanged)\n    const stations = useSelector(state => state.stationsReducer.stations)\n    const dashboardID = params.dashboardID\n\n    const selectedLocation = !!selectedStation ? selectedStation : selectedPosition\n\n    const handleOnClick = () => {\n        switch (props.type) {\n            case 'cart':\n                onCartButtonClick()\n                break;\n\n            case 'cancel':\n                onCancelClick()\n                break;\n\n            case 'dashboards':\n                if(pageInfoChanged) {\n                    dispatchSetConfirmDelete(true, onDashboardClick)\n                }\n                else {\n                    onDashboardClick()\n                }\n                break;\n\n            default:\n                if(pageInfoChanged) {\n                    dispatchSetConfirmDelete(true, onDefaultClick)\n                }\n                else {\n                    onDefaultClick()\n                }\n\n                break;\n        }\n    }\n\n    const onDefaultClick = () => {\n        history.push('/locations/' + id + '/' + type)\n    }\n\n    // Handles  if the widget button clicked was a cart\n    const onCartButtonClick = () => {\n        // If the button is for cart, then see if its a coord move or a simple task move\n        // Coord move is for right click send cart to pos\n        if (!!coordinateMove) {\n            dispatchHandlePostTaskQueue({\n                Id: 'custom_task',\n                custom: {\n                    type: 'coordinate_move',\n                    coordinate: {\n                        pos_x: selectedLocation.pos_x,\n                        pos_y: selectedLocation.pos_y,\n                        rotation: selectedLocation.rotation,\n                    },\n                },\n                deviceType: 'MiR_100',\n            })\n            dispatchWidgetLoaded(false)\n            dispatchHoverStationInfo(null)\n            dispatchRemovePosition(selectedPosition._id)\n            dispatchSetSelectedPosition(null)\n        }\n        else {\n            dispatchHandlePostTaskQueue({\n                Id: 'custom_task',\n                custom: {\n                    type: 'position_move',\n                    position: id,\n\n                },\n                deviceType: 'MiR_100',\n            })\n        }\n    }\n\n    // Handles if the widget button clicked was cancel\n    const onCancelClick = () => {\n        dispatchWidgetLoaded(false)\n        dispatchHoverStationInfo(null)\n        dispatchRemovePosition(selectedPosition._id)\n        dispatchSetSelectedPosition(null)\n    }\n\n    // Handles if a dashboard is clicked\n    const onDashboardClick = async () => {\n        let dashboardID\n\n        // If there's no selected station, then see if theres a station in the url, if so, use that, else do nothing\n        if (!selectedLocation) {\n            if (!!params.stationID) {\n                dashboardID = stations[params.stationID].dashboards[0]\n            } else {\n                return null\n            }\n        } else {\n            dashboardID = selectedLocation.dashboards[0]\n        }\n\n        //let dashboardID = selectedLocation ? selectedLocation.dashboards[0] : null\n\n        // If the dashboard is undefined, that means the location must not have a dashboard yet, so add one\n        if (dashboardID === undefined) {\n            console.log('QQQQ No dashboard ADDING!')\n\n            // dashboardInfo\n            let defaultDashboard = {\n                name: selectedLocation.name + ' Dashboard',\n                locked: false,\n                buttons: [],\n                station: selectedLocation._id\n            }\n\n            //// Now post the dashboard, and on return tie that dashboard to location.dashboards and put the location\n            const postDashboardPromise = dispatchPostDashboard(defaultDashboard)\n\n            postDashboardPromise.then(async postedDashboard => {\n\n                selectedLocation.dashboards = [postedDashboard._id.$oid]\n\n                await dispatchPutStation(selectedLocation, selectedLocation._id)\n\n                history.push('/locations/' + id + '/' + type + '/' + dashboardID)\n\n            })\n        }\n        else {\n            history.push('/locations/' + id + '/' + type + '/' + dashboardID)\n        }\n\n        dispatchDashboardOpen(true)\n    }\n\n    return (\n        <styled.WidgetButtonButton\n            onClick={() => {\n\n                handleOnClick()\n\n            }}\n            switcher={switcher}\n            pageID={type}\n            currentPage={currentPage}\n            active={type === currentPage}\n        >\n            {type === 'view' ?\n                <styled.WidgetButtonIcon className=\"far fa-eye\" pageID={type} currentPage={currentPage} />\n                :\n                type === 'cancel' ?\n                    <>\n                        <styled.WidgetButtonIcon className=\"fas fa-times\" pageID={type} currentPage={currentPage} />\n                        <styled.WidgetButtonText pageID={type} currentPage={currentPage}>{\"Cancel\"}</styled.WidgetButtonText>\n                    </>\n                    :\n                    type === 'lots' ?\n                        <>\n                            <styled.WidgetButtonIcon className=\"far fa-clone\" pageID={type} currentPage={currentPage} />\n                            <styled.WidgetButtonText pageID={type} currentPage={currentPage}>{label}</styled.WidgetButtonText>\n                        </>\n                        :\n                        <>\n                            <styled.WidgetButtonIcon style={{ fontSize: type === 'cart' && '1.2rem', paddingTop: type === 'cart' && '.8rem' }} className={\"icon-\" + type} pageID={type} currentPage={currentPage} />\n                            <styled.WidgetButtonText pageID={type} currentPage={currentPage}>{label}</styled.WidgetButtonText>\n                        </>\n            }\n            {/* <styled.ButtonText>{props.type}</styled.ButtonText> */}\n\n        </styled.WidgetButtonButton>\n    )\n}\n\nexport default WidgetButton\n","import styled from 'styled-components'\n\nexport const WidgetLocationContainer = styled.section`\n    position: absolute;\n\n    top: ${props => !!props.widgetPage ? '0' : props => props.yPosition};\n    left: ${props => !!props.widgetPage ? '0' : props => props.xPosition};\n    right: ${props => !!props.widgetPage && '0'};\n    transform: translate(-50%, -50%);\n\n    border-radius: 50%;\n\n    margin: ${props => !!props.widgetPage && 'auto'};\n    margin-top: ${props => !!props.widgetPage && '.2rem'};\n\n    pointer-events: auto;\n\n    z-index: 10;\n\n    // @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n    //     width: ${props => !!props.widgetPage && '25rem'};\n    //     height: ${props => !!props.widgetPage && '25rem'};\n    //     margin-top: ${props => !!props.widgetPage && '.205rem'};\n    // }\n\n`\n\nexport const WidgetContainer = styled.div`\n    justify-content:center;\n    margin: ${props => !!props.widgetPage ? '.25rem auto' : 'auto'};\n    // padding-top:.3rem;\n    // padding-bottom:.3rem;\n\n    display: ${props => !!props.widgetPage ? 'flex' : ''};\n\n    /* width: ${props => !!props.widgetPage ? '32rem' : '30rem'}; */\n    width: ${props => !!props.widgetPage ? '20rem' : 'fit-content'};\n    max-width: ${props => props.type == 'cart_position' || props.type == 'shelf_position' ? '13rem' : '30rem'};\n\n    height: ${props => !!props.widgetPage ? 'auto' : '6rem'};\n\n    // box-shadow: ${props => !!props.widgetPage ? 'none' : '0 0.1rem 0.2rem 0rem #303030'};\n\n    border-radius: 1rem;\n\n    z-index: 1000;\n\n    // backdrop-filter: ${props => !!props.widgetPage ? '' : 'blur(10px)'};\n    // background-color: ${props => !!props.widgetPage ? 'none' : 'rgba(255, 255, 255, 0.6)'};\n\n    /* transition: transform 0.25s ease, margin-left 0.25s ease, margin-right 0.25s ease, height 0.25s ease; */\n    /* transition: all 0.25s ease; */\n\n    @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n        /* width: ${props => !!props.widgetPage ? '22rem' : '20rem'}; */\n        width: ${props => !!props.widgetPage ? '15rem' : 'fit-content'};\n\n        height: ${props => !!props.widgetPage ? 'auto' : '6rem'};\n\n        /* padding: .5rem .5rem .5rem .5rem; */\n        margin-top: ${props => !!props.widgetPage && '0rem'};\n        /*padding: ${props => !!props.widgetPage ? '' : '1rem'};*/\n\n    }\n\n    &:hover{\n        cursor:pointer;\n    }\n\n    pointer-events: auto;\n\n`\n\nexport const WidgetStationName = styled.h4`\n    font-size: ${props => props.theme.fontSize.sz3};\n    font-family: ${props => props.theme.font.primary};\n    font-weight: 500;\n    width: 100%;\n\n    background: ${props => props.theme.bg.secondary};\n    box-shadow: ${props => props.theme.cardShadow};\n    transform: translateY(-10%);\n    height: 1.5rem;\n    line-height: 1.5rem;\n    border-radius: 0.75rem;\n    padding: 0 0.75rem;\n\n    text-align: center;\n\n    // flex:10;\n    // justify-content: center;\n    // text-align: center;\n    // padding-left: 2rem;\n\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n\n`\n\nexport const WidgetPositionName = styled.h4`\n    font-size: ${props => props.theme.fontSize.sz4};\n    font-family: ${props => props.theme.font.primary};\n    font-weight: 500;\n    justify-content: center;\n    text-align: center;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n`\n\nexport const WidgetHoverArea = styled.div`\n    margin-top: -12.7rem;\n    width: 3rem;\n    height:1.5rem;\n    /* z-index: -1; */\n    /* background: red; */\n    /* stroke: 1rem solid red; */\n\n    margin: 0rem auto;\n\n    transform: scale(${props => props.hoverScale});\n\n    &:hover{\n        cursor:pointer;\n    }\n\n`\n\nexport const WidgetPageButtonContainer = styled.div`\n    width: 30rem;\n    border-radius: 1rem;\n    /* z-index: 1; */\n    margin-top: .5rem;\n\n    @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n        width: 20rem;\n    }\n\n`\n\nexport const WidgetButtonContainer = styled.div`\n    height: 100%;\n    width: 100%;\n    border-radius: 50%;\n\n    border: 2px solid ${props => props.theme.bg.secondary};\n\n    &.expand-appear {\n        transform: scale(0.01);\n    }\n\n    &.expand-appear-active {\n        transform: scale(1);\n        transition: transform 200ms cubic-bezier(0.175, 0.885, 0.32, 1.275);\n    }\n`\n\nexport const WidgetButtonRow = styled.div`\n    height: 4rem;\n    display: flex;\n    flex-direction: row;\n    z-index: 4;\n\n    position: absolute;\n    top: 0.75rem;\n    left: 50%;\n    transform: translateX(-50%);\n`\n\nconst getTransformAroundCircle = (idx, numItems, radius) => {\n    const start = 110;\n    const end = 250;\n\n    const range = end - start;\n    const slice = range/(numItems - 1);\n\n    const theta = start + slice*idx;\n\n    return `rotate(${theta}deg) translateY(-${radius}) rotate(${-theta}deg)`\n}\n\nexport const WidgetButtonWrapper = styled.div`\n\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: ${props => getTransformAroundCircle(props.idx, props.numItems, props.radius)}\n\n`\n\nexport const WidgetBlurContainer = styled.div`\n    position: absolute;\n    top: 0rem;\n    width: 100%;\n    height: 100%;\n    /* z-index: -1; */\n    backdrop-filter: blur(10px);\n\n    /* opacity: ${props => !!props.showWidgetPage ? '100%' : '0%'};\n\n    transition: all 0.25s ease; */\n`\n\n\nexport const WidgetStatisticsBlock = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 2rem;\n`;\n\nexport const RowContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    padding-right: .7rem;\n    justify-content: center;\n\n`;\n\nexport const EditIcon = styled.i`\n    font-size: 1rem;\n    text-align: right;\n    flex:1;\n    margin-left:0.5rem;\n    &:hover {\n      color: #798fd9;\n    }\n\n`;\n\nexport const WidgetStatisticsContainer = styled.div`\n    display: flex;\n\n    width: 100%;\n    height: 3rem;\n\n    /* padding: 0rem 3rem; */\n    padding: 0rem 1rem;\n    margin-top: .5rem;\n\n    justify-content: space-between;\n\n    @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n        padding: 0rem 1rem;\n\n    }\n`;\n\nexport const WidgetStatisticsGraphic = styled.svg`\n    overflow: visible;\n    text-align: center;\n    width: 2rem;\n    height: 2rem;\n    background-color: blue;\n    /* transform: translateY(-0.3rem); */\n`;\n\nexport const WidgetStatisticsIcon = styled.i`\n    /* font-size: 1.5rem; */\n`\n\nexport const WidgetStatisticsText = styled.p`\n    align-self: auto;\n    margin-left: .5rem;\n    margin-top: auto;\n    margin-bottom: auto;\n`\n\n// export const CloseButton = styled.span`\n//     border: none;\n//     background: none;\n//     color: ${props => props.theme.fg.primary};\n//     font-size: 8rem;\n//     font-weight: 200;\n//     text-align: center;\n//     position: absolute;\n//     z-index: 4;\n//     line-height: 4rem;\n\n//     font-family: ${props => props.theme.font.primary};\n\n//     cursor: pointer;\n//     top: 1rem;\n//     right: 1rem;\n//     &:focus {outline:0;}\n\n//     @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n//         font-size: 3rem;\n//         right: 1rem;\n//         top: .5rem;\n//     }\n\n// `;\n\nexport const CloseButton = styled.i`\n    border: none;\n    background: none;\n    color: ${props => props.theme.fg.red};\n    text-align: center;\n\n    font-size: 4rem;\n    z-index: 4;\n    margin-left: 1rem;\n\n    position: absolute;\n    cursor: pointer;\n    left: .5rem;\n    &:focus {outline:0;}\n\n    @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n        font-size: 3rem;\n    }\n\n    z-index: 10000;\n\n`;\n","import React, { useState, useMemo, useEffect, useRef } from 'react';\nimport { CSSTransitionGroup } from 'react-transition-group';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useParams, useHistory } from 'react-router-dom'\n// import components\nimport WidgetPages from './widget_pages/widget_pages'\nimport WidgetButton from './widget_button/widget_button'\n\n// import hooks\nimport useWindowSize from '../../hooks/useWindowSize'\n\n// Import Actions\nimport { setSelectedStation, setEditingStation } from '../../redux/actions/stations_actions'\nimport { setSelectedPosition, setSelectedStationChildrenCopy, setEditingPosition } from '../../redux/actions/positions_actions'\nimport { widgetLoaded, hoverStationInfo } from '../../redux/actions/widget_actions'\n\nimport { setOpen } from \"../../redux/actions/sidebar_actions\"\n\nimport { deepCopy } from '../../methods/utils/utils'\n\n// Import Utils\nimport { DeviceItemTypes } from '../../methods/utils/device_utils'\n\nimport * as styled from './widgets.style'\nimport { connect } from 'formik';\n\nconst Widgets = (props) => {\n    const size = useWindowSize()\n    const windowWidth = size.width\n    const widthBreakPoint = 1000;\n    const mobileMode = windowWidth < widthBreakPoint;\n\n    let params = useParams()\n    const history = useHistory()\n\n    // Grabs what widget page is in the URL\n    const widgetPage = params.widgetPage\n    const dashboardOpen = useSelector(state => state.dashboardsReducer.dashboardOpen)\n\n    const stations = useSelector(state => state.stationsReducer.stations)\n    const selectedStation = useSelector(state => state.stationsReducer.selectedStation)\n    const editingStation = useSelector(state => state.stationsReducer.editingStation)\n\n    const positions = useSelector(state => state.positionsReducer.positions)\n    const selectedPosition = useSelector(state => state.positionsReducer.selectedPosition)\n    const editingPosition = useSelector(state => state.positionsReducer.editingPosition)\n    const devices = useSelector(state => state.devicesReducer.devices)\n    const showSideBar = useSelector(state => state.sidebarReducer.open)\n\n    // Info passed from workstations/device_locations via redux\n    const hoveringInfo = useSelector(state => state.widgetReducer.hoverStationInfo)\n\n    const dispatch = useDispatch()\n    const dispatchHoverStationInfo = (info) => dispatch(hoverStationInfo(info))\n    const dispatchWidgetLoaded = (bool) => dispatch(widgetLoaded(bool))\n    const dispatchSetSelectedStation = (station) => dispatch(setSelectedStation(station))\n    const dispatchSetEditingStation = (bool) => dispatch(setEditingStation(bool))\n    const dispatchSetSelectedPosition = (position) => dispatch(setSelectedPosition(position))\n    const dispatchSetEditingPosition = (bool) => dispatch(setEditingPosition(bool))\n    const dispatchSetSelectedStationChildrenCopy = (locationChildren) => dispatch(setSelectedStationChildrenCopy(locationChildren))\n    const dispatchShowSideBar = (bool) => dispatch(setOpen(bool))\n    // Location ID passed down through workstations via redux\n    const stationID = hoveringInfo.id\n\n    const editing = editingStation ? editingStation : editingPosition\n    const selectedLocation = !!selectedStation ? selectedStation : selectedPosition\n\n\n    const widgetRadius = useMemo(() => {\n        return 2.5*Math.log(2*(hoveringInfo.scale + 1)) + 'rem';\n    }, [hoveringInfo])\n\n    // This tells redux that the widget has mounted. Used in map view to handle if widget is still open but shoulnt be\n    // This happens when moving the mouse too fast over a location causing a widget to load, but not fast enough for the onmouselave to execute\n    useEffect(() => {\n\n        // setTimeout(() => dispatchWidgetLoaded(true), 100)\n        dispatchWidgetLoaded(true)\n        return () => {\n            onWidgetClose()\n        }\n    }, [])\n\n    /**\n     * Closes the widget\n     * If editing, then dont set the selected location to null\n     * @param {*} edit\n     */\n    const onWidgetClose = (edit) => {\n\n        dispatchHoverStationInfo(null)\n        dispatchWidgetLoaded(false)\n\n    }\n\n    // If widgetPage exists in URL params, then the widget pages are open\n    const onWidgetPageOpen = () => {\n        if (!!widgetPage && (!!editingStation || !!editingPosition)) {\n            dispatchHoverStationInfo(hoveringInfo)\n            dispatchSetSelectedStation(null)\n            dispatchSetSelectedPosition(null)\n        }\n    }\n\n    const onClickLocation = async () => {\n\n\n        history.push('/locations')\n\n        dispatchShowSideBar(true)\n\n        onWidgetClose(true)\n        dispatchHoverStationInfo(null)\n\n        if (!!selectedStation) {\n            dispatchSetEditingStation(true)\n            let copy = {}\n            selectedStation.children.forEach(child => {\n                copy[child] = positions[child]\n            })\n            dispatchSetSelectedStationChildrenCopy(copy)\n            dispatchSetSelectedStation(selectedStation)\n        }\n        else if (!!selectedPosition) {\n            dispatchSetEditingPosition(true)\n            dispatchSetSelectedPosition(selectedPosition)\n\n        }\n\n\n    }\n\n\n    // Renders the buttons under the location. useMemo is passed a blank array because the buttons only need to be rendered once\n    const renderWidgetButtons = useMemo(() => {\n        const location = !!stations[hoveringInfo.id] ? stations[hoveringInfo.id] : positions[hoveringInfo.id]\n        const device = devices[hoveringInfo.id]\n\n        const Wrapper = !!widgetPage ? React.Fragment : styled.WidgetButtonWrapper;\n\n        // If device only show dashboards\n        if (!!device) {\n            return (\n                <>\n                    <WidgetButton\n                        id={stationID}\n                        type={'dashboards'}\n                        label={'Dashboards'}\n                        currentPage={widgetPage}\n                    />\n                </>\n\n            )\n        }\n\n        // If the schema is a station then show these buttons, else it's a position\n        else if (location.schema === 'station') {\n            // If location has a device, then see what type of widget buttons need to be displayed, else just show statistics and dashboards\n            if (!!location.device_id) {\n                const device = devices[location.device_id]\n                let deviceType = DeviceItemTypes['generic']\n\n                if (!!DeviceItemTypes[device.device_model]) deviceType = DeviceItemTypes[device.device_model]\n\n                return deviceType.widgetPages.map((page, ind) => {\n                    switch (page) {\n                        case 'statistics':\n                            return (\n                                <Wrapper idx={ind} numItems={deviceType.widgetPages.length} radius={widgetRadius}>\n                                        <WidgetButton\n                                        key={ind}\n                                        id={stationID}\n                                        type={'statistics'}\n                                        label={'Statistics'}\n                                        currentPage={widgetPage} \n                                        switcher={!!widgetPage}\n                                    />\n                                </Wrapper>\n                            )\n                        case 'dashboards':\n                            return (\n                                <Wrapper idx={ind} numItems={deviceType.widgetPages.length} radius={widgetRadius}>\n                                    <WidgetButton\n                                        key={ind}\n                                        id={stationID}\n                                        type={'dashboards'}\n                                        label={'Dashboards'}\n                                        currentPage={widgetPage}\n                                        switcher={!!widgetPage}\n                                    />\n                                </Wrapper>\n                            )\n                        case 'view':\n                            return (\n                                <Wrapper idx={ind} numItems={deviceType.widgetPages.length} radius={widgetRadius}>\n                                    <WidgetButton\n                                        key={ind}\n                                        id={stationID}\n                                        type={'view'}\n                                        label={'View'}\n                                        currentPage={widgetPage}\n                                        switcher={!!widgetPage}\n                                    />\n                                </Wrapper>\n                            )\n\n                        default:\n                            break;\n                    }\n\n                })\n\n            }\n            else {\n                return (\n                    <>\n                        <Wrapper idx={0} numItems={2} radius={widgetRadius}>\n                            <WidgetButton\n                                id={stationID}\n                                type={'statistics'}\n                                label={'Statistics'}\n                                currentPage={widgetPage}\n                                switcher={!!widgetPage}\n                            />\n                        </Wrapper>\n\n                        <Wrapper idx={1} numItems={2} radius={widgetRadius}>\n                            <WidgetButton\n                                id={stationID}\n                                type={'dashboards'}\n                                label={'Dashboards'}\n                                currentPage={widgetPage}\n                                switcher={!!widgetPage}\n                            />\n                        </Wrapper>\n                    </>\n\n                )\n            }\n        }\n        // If right menu position, have send cart and cancel (times)\n        else if (selectedPosition.schema === 'temporary_position') {\n            return (\n                <>\n                    <styled.WidgetButtonWrapper idx={1} numItems={2} radius={widgetRadius}>\n                        <WidgetButton\n                            id={stationID}\n                            type={'cart'}\n                            coordinateMove={true}\n                            currentPage={widgetPage}\n                            label={'Send Cart Here'}\n                            switcher={!!widgetPage}\n                        />\n                    </styled.WidgetButtonWrapper>\n                    <styled.WidgetButtonWrapper idx={1} numItems={2} radius={widgetRadius}>\n                        <WidgetButton\n                            id={stationID}\n                            type={'cancel'}\n                            currentPage={widgetPage}\n                            switcher={!!widgetPage}\n                        />\n                    </styled.WidgetButtonWrapper>\n                </>\n            )\n        }\n\n        else {\n            return (\n                <styled.WidgetButtonWrapper idx={1} numItems={2} radius={widgetRadius}>\n                    <WidgetButton\n                        id={stationID}\n                        type={'cart'}\n                        label={'Send Cart Here'}\n                        currentPage={widgetPage}\n                        switcher={!!widgetPage}\n                    />\n                </styled.WidgetButtonWrapper>\n            )\n        }\n    }, [widgetPage])\n\n\n    /**\n     * This handles the x and y position of the widget.\n     * It centers the x and y position to the middle of the widget by using the element height and width\n     * This takes care issue with widgets that are different sizes\n     * @param {} coord\n     */\n    // Left outside of function so that otherplaces can access it\n    const element = document.getElementById(hoveringInfo.id)\n\n    const getXPos = useMemo(() => {\n        // When first hovering over, the widget has not mounted so the element is null, but once its mounted, you can use the bounding box\n        if (element === null) {\n            return hoveringInfo.xPosition + 'px'\n        }\n\n        const elementHeight = element.getBoundingClientRect().height\n        const elementWidth = element.getBoundingClientRect().width\n\n        // Handles the x and y, use location x if right click menu so it can also move\n        if (!!selectedLocation && selectedLocation.schema === 'temporary_position') {\n            return selectedLocation.x + 'px';\n        }\n        else {\n            return hoveringInfo.x + 'px';\n        }\n    }, [selectedLocation, hoveringInfo])\n\n    const getYPos = useMemo(() => {\n        // When first hovering over, the widget has not mounted so the element is null, but once its mounted, you can use the bounding box\n        if (element === null) {\n            return hoveringInfo.yPosition + 'px'\n        }\n\n        const elementHeight = element.getBoundingClientRect().height\n        const elementWidth = element.getBoundingClientRect().width\n\n        // Handles the x and y, use location x if right click menu so it can also move\n        if (!!selectedLocation && selectedLocation.schema === 'temporary_position') {\n            return selectedLocation.y + 'px';\n        }\n        else {\n            return hoveringInfo.y + 'px';\n        }\n    }, [selectedLocation, hoveringInfo])\n\n    return (\n        <>\n\n            {/* WidgetLocationContainer is an absolute div used for locating the widget over the hovered location */}\n            {!widgetPage ?\n                <styled.WidgetLocationContainer\n                    id={hoveringInfo.id}\n                    onMouseEnter={() => {\n                        dispatchHoverStationInfo(hoveringInfo)\n                    }}\n                    onMouseLeave={() => {\n                        if (!widgetPage && !!selectedLocation && selectedLocation.schema !== 'temporary_position' && !editing) {\n                            onWidgetClose()\n                            dispatchSetSelectedStation(null)\n                            dispatchSetSelectedPosition(null)\n                        }\n                    }}\n\n                    xPosition={getXPos}\n                    yPosition={getYPos}\n                    scale={hoveringInfo.scale}\n                    widgetPage={widgetPage}\n\n                    // This sets the opacity to 0 if the element has not been mounted yet. Eliminates the 'snapping'\n                    style={{ \n                        opacity: !widgetPage && element === null ? '0' : '1',\n                        height: `calc(${widgetRadius} * 2)`,\n                        width: `calc(${widgetRadius} * 2)`,\n                    }}\n                >\n                    {!!selectedLocation&&\n                        <CSSTransitionGroup\n                            transitionName={'expand'}\n                            transitionAppear={true}\n                            transitionAppearTimeout={200}\n                        >\n                            <styled.WidgetButtonContainer widgetPage={widgetPage}>\n                                {renderWidgetButtons}\n                                <styled.WidgetStationName>{selectedLocation.name}</styled.WidgetStationName>\n                            </styled.WidgetButtonContainer>\n\n                        </CSSTransitionGroup>\n                    }\n\n                    {onWidgetPageOpen()}\n\n\n                </styled.WidgetLocationContainer>\n            \n            :\n\n            <>\n                <styled.WidgetBlurContainer />\n                <styled.WidgetButtonRow>\n                    {renderWidgetButtons}\n                </styled.WidgetButtonRow>\n                <WidgetPages />\n            </>\n        }\n\n        </>\n    )\n\n    // return (\n    //     <>\n    //         {!!widgetPage &&\n    //             <styled.WidgetBlurContainer />\n    //         }\n    //         {/* WidgetLocationContainer is an absolute div used for locating the widget over the hovered location */}\n    //         <styled.WidgetLocationContainer\n    //             id={hoveringInfo.id}\n    //             onMouseEnter={() => {\n    //                 dispatchHoverStationInfo(hoveringInfo)\n    //                 onWidgetPosition()\n    //             }}\n\n    //             onMouseLeave={() => {\n    //                 if (!widgetPage && !!selectedLocation && selectedLocation.schema !== 'temporary_position' && !editing) {\n    //                     onWidgetClose()\n    //                     dispatchSetSelectedStation(null)\n    //                     dispatchSetSelectedPosition(null)\n    //                 }\n    //             }}\n\n    //             // xPosition={hoveringInfo.xPosition + 'px'}\n    //             xPosition={onWidgetPosition('x')}\n    //             yPosition={onWidgetPosition('y')}\n    //             scale={hoveringInfo.scale}\n    //             widgetPage={widgetPage}\n\n    //             // This sets the opacity to 0 if the element has not been mounted yet. Eliminates the 'snapping'\n    //             style={{ opacity: !widgetPage && element === null ? '0' : '1' }}\n    //         >\n    //             {/* If not widget page and not a right click widget then add an invisable hover area */}\n    //             {!widgetPage && !!selectedLocation && selectedLocation.schema !== 'temporary_position' &&\n    //                 <styled.WidgetHoverArea\n    //                     hoverScale={hoveringInfo.realScale}\n    //                     onMouseEnter={() => {\n    //                         dispatchHoverStationInfo(hoveringInfo)\n    //                     }}\n\n    //                 />\n    //             }\n    //             {!!selectedLocation &&\n    //               <styled.WidgetContainer widgetPage={widgetPage} type={!!selectedLocation && selectedLocation.type} >\n    //                   {!widgetPage && !!selectedLocation &&\n    //                       <>\n    //                           {selectedLocation.schema == \"temporary_position\" ?\n    //                               <styled.WidgetStationName>{\"Send Cart To Location\"}</styled.WidgetStationName>\n    //                               :\n    //                               <>\n    //                                   {!!selectedLocation.parent ?\n    //                                       <styled.WidgetPositionName>{selectedLocation.name}</styled.WidgetPositionName>\n    //                                       :\n    //                                       <styled.RowContainer>\n    //                                           <styled.WidgetStationName>{selectedLocation.name}</styled.WidgetStationName>\n    //                                           <styled.EditIcon\n    //                                               className='fas fa-edit'\n    //                                               styled={{ color: '#ff1818' }}\n    //                                               onClick={() => onClickLocation()}\n    //                                           />\n    //                                       </styled.RowContainer>\n\n    //                                   }\n    //                               </>\n    //                           }\n    //                       </>\n    //                   }\n\n\n\n    //                   <styled.WidgetButtonContainer widgetPage={widgetPage}>\n    //                       {renderWidgetButtons}\n    //                   </styled.WidgetButtonContainer>\n\n\n    //                   {/* Commented out for the time being, statistics have not been implemented as of Sept 1 */}\n    //                   {/* {!widgetPage &&\n    //                       statistics\n    //                   } */}\n\n    //                   {onWidgetPageOpen()}\n    //               </styled.WidgetContainer>\n    //             }\n\n\n\n\n    //         </styled.WidgetLocationContainer>\n\n    //         {!!widgetPage &&\n    //             <>\n    //                 <WidgetPages />\n    //             </>\n    //         }\n\n    //     </>\n\n    // )\n}\n\nexport default Widgets\n","import styled from 'styled-components'\n\n\nexport const Container = styled.div`\n    position: absolute;\n    display: flex;\n\n    flex-direction: column;\n    align-items: center;\n\n    top: ${props => props.yPosition};\n    left: ${props => props.xPosition};\n\n    padding: .1rem;\n    background-color: transparent;\n    opacity: 100%;\n\n`\n\nexport const WaypointIcon = styled.i`\n\n    font-size: 1.3rem;\n    color: lightgreen;\n\n`\n","import React, { useState, useEffect, useRef } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useLocation } from \"react-router-dom\";\n\n// Import Styles\nimport * as styled from './cart_waypoint.style'\n\nconst CartWaypoint = (props) => {\n\n    const {\n        d3,\n        x,\n        y,\n    } = props\n    const dispatch = useDispatch()\n\n    const handleRenderWaypoints = () => {\n\n        const xPosition = (x-10) + 'px'\n        const yPosition = (y-20) + 'px'\n\n          return (\n              <styled.Container xPosition={xPosition} yPosition={yPosition}>\n                <styled.WaypointIcon\n                    className='fas fa-map-marker-alt'\n                    style={{ color: '#ffb62e' }}\n                />\n              </styled.Container>\n          )\n  }\n\n    return (\n      handleRenderWaypoints()\n    )\n}\n\nexport default CartWaypoint\n","/**\n * All of these coordinates have been calc by adjusting them on map with chrome dev tools\n * @param {*} location\n * @param {*} rd3tClassName\n * @param {*} d3\n */\n\nexport const handleWidgetHoverCoord = (location, rd3tClassName, d3) => {\n    let widgetInfo = {}\n    widgetInfo.id = location._id\n\n    widgetInfo.heightWidth = '1'\n\n    // Initial Ratios\n    widgetInfo.yPosition = location.y\n    widgetInfo.xPosition = location.x\n    // widgetInfo.scale = Math.min(Math.max(d3.scale, 0.8), 1.3);\n    widgetInfo.scale = d3.scale\n\n    // Sets real scale to be used with the widget hover area\n    widgetInfo.realScale = d3.scale\n\n    return widgetInfo\n\n}\n","import styled from 'styled-components'\n\n\nexport const WidgetForeignObject = styled.foreignObject`\n    transition: ${props => props.width === '100%' ? 'all 0.25s ease' : 'none'};\n    overflow: visible;\n    z-index: 1;\n`\n\nexport const WidgetHoverArea = styled.div`\n    margin-top: -12.7rem;\n    width: 30rem;\n    height: 10rem;\n    z-index: 5000;\n`\n\nexport const WorkstationGroup = styled.g`\n    stroke-width: 0;\n    opacity: 0.8;\n`\n\nexport const StationLabel = styled.h1`\n    color: red;\n    position: relative;\n`","import styled from 'styled-components'\n\nexport const WorkstationGroup = styled.g`\n    stroke-width: 0;\n    opacity: 0.8;\n    \n`\n\nexport const TranslateGroup = styled.g`\n    cursor: url(https://ssl.gstatic.com/ui/v1/icons/mail/images/2/openhand.cur), grab;\n\n    &:active {\n        cursor: grabbing;\n        cursor: -moz-grabbing;\n        cursor: -webkit-grabbing;\n    }\n`","import React from 'react'\nimport { useSelector } from 'react-redux';\n\nimport * as styled from './location_svg.style'\n\n// Import Constants\nimport { StationTypes } from '../../../../constants/station_constants'\nimport { PositionTypes } from '../../../../constants/position_constants'\nimport PropTypes from \"prop-types\";\n\nconst LocationSvg = (props) => {\n\n    const {\n        location,\n        rd3tClassName,\n        color,\n        d3,\n        isSelected,\n        hovering,\n        rotating,\n        hoveringInfo,\n        shouldGlow,\n\n        handleMouseEnter,\n        handleMouseLeave,\n        handleMouseDown,\n        handleTranslating,\n        handleRotating,\n\n\n    } = props\n\n    const schema = location.schema\n    const locationTypes = {\n        ...StationTypes,\n        ...PositionTypes\n    }\n\n    const settings = useSelector(state => state.settingsReducer.settings)\n\n    const ellipsis = (text) => {\n\n    }\n\n    return (\n        <styled.WorkstationGroup\n            id={rd3tClassName}\n            className={rd3tClassName}\n            style={{ fill: color, stroke: color }}\n            onMouseEnter={() => {\n                handleMouseEnter()\n            }}\n            onMouseDown={() => {\n                handleMouseDown()\n            }}\n            onMouseLeave={() => {\n                handleMouseLeave()\n            }}\n            transform={`translate(${location.x},${location.y}) rotate(${-location.rotation}) scale(${d3.scale / d3.imgResolution})`}\n        >\n            {((settings.mapApps.labels || isSelected) && hoveringInfo?.id !== location?._id) && \n                <text y={-16} fontSize=\"0.7em\" dominant-baseline=\"middle\" text-anchor=\"middle\">{location.name}</text>\n            }\n            <defs>\n\n                {/* a transparent glow that takes on the colour of the object it's applied to */}\n                <filter id=\"glow\">\n                    <feGaussianBlur stdDeviation=\"1\" result=\"coloredBlur\" />\n                    <feMerge>\n                        <feMergeNode in=\"coloredBlur\" />\n                        <feMergeNode in=\"SourceGraphic\" />\n                    </feMerge>\n                </filter>\n\n                <filter id=\"glow2\" height=\"300%\" width=\"300%\" x=\"-75%\" y=\"-75%\">\n                    <feMorphology operator=\"dilate\" radius=\"1\" in=\"SourceAlpha\" result=\"thicken\" />\n                    <feGaussianBlur in=\"thicken\" stdDeviation=\"2\" result=\"blurred\" />\n                    <feFlood floodColor={color} result=\"glowColor\" />\n                    <feComposite in=\"glowColor\" in2=\"blurred\" operator=\"in\" result=\"softGlow_colored\" />\n                    <feMerge>\n                        <feMergeNode in=\"softGlow_colored\" />\n                        <feMergeNode in=\"SourceGraphic\" />\n                    </feMerge>\n                </filter>\n\n            </defs>\n\n            <g\n                className={`${rd3tClassName}-rot`}\n                onMouseLeave={() => {\n                    handleMouseLeave()\n                }}\n\n            >\n                <circle x=\"-20\" y=\"-20\" r=\"20\" strokeWidth=\"0\" fill=\"transparent\" style={{ cursor: rotating ? \"pointer\" : \"grab\" }}\n                />\n                {isSelected && (hovering || rotating) && hoveringInfo === null &&\n                    <>\n                        <circle x=\"-20\" y=\"-20\" r=\"18\" fill=\"none\" strokeWidth=\"4\" stroke=\"transparent\" style={{ cursor: \"pointer\" }}\n                            onMouseDown={() => handleRotating(true)}\n                            onMouseUp={() => handleRotating(false)}\n\n                        />\n                        <circle x=\"-18\" y=\"-18\" r=\"18\" fill=\"none\" strokeWidth=\"0.8\" style={{ filter: \"url(#glow)\", cursor: \"pointer\" }}\n                        />\n                    </>\n                }\n            </g>\n\n            <styled.TranslateGroup\n                className={`${rd3tClassName}-trans`}\n                onMouseEnter={() => {\n                    handleMouseEnter()\n                }}\n                onMouseDown={() => handleTranslating(true)}\n                onMouseUp={() => handleTranslating(false)}\n                // Devices and shelf positions require their own transforms\n                transform={location.type === 'device' ? 'scale(.07) translate(-180,-140)' : location.type === 'shelf_position' ? 'rotate(90)' : ''}\n            >\n\n                <svg id={`${rd3tClassName}-${schema}`} x=\"-10\" y=\"-10\" width=\"20\" height=\"20\" viewBox=\"0 0 400 400\" style={{ filter: shouldGlow ? 'url(#glow2)' : 'none' }}>\n                    {locationTypes[location.type].svgPath}\n                </svg>\n\n\n            </styled.TranslateGroup>\n\n\n        </styled.WorkstationGroup>\n    )\n}\n\nLocationSvg.propTypes = {\n    handleMouseEnter: PropTypes.func,\n    handleMouseLeave: PropTypes.func,\n    handleMouseDown: PropTypes.func,\n    handleTranslating: PropTypes.func,\n    handleRotating: PropTypes.func,\n}\n\nLocationSvg.defaultProps = {\n    handleMouseEnter: () => {},\n    handleMouseLeave: () => {},\n    handleMouseDown: () => {},\n    handleTranslating: () => {},\n    handleRotating: () => {},\n}\n\nexport default LocationSvg","import { useState, useEffect } from 'react'\nimport * as d3 from 'd3'\n\n\nconst DragEntityProto = (props) => {\n    const {\n        isSelected,\n        location,\n        handleRotate,\n        handleTranslate,\n        handleDisableDrag,\n        handleEnableDrag,\n        handleTranslateEnd,\n        rd3tClassName,\n        // d3\n    } = props\n\n    const [rotating, setRotating] = useState(false)\n    const [translating, setTranslating] = useState(false)\n\n    useEffect(() => {\n        bindDragListener()\n    })\n\n    let rotateStart = null          // Inital rotation angle\n    let originalRotation = null     // Original rotation of location\n    let deltaRotation = null        // Change in rotation (current angle - start angle)\n\n    let translateStart = null       // Initial coordinates of translate\n    let originalTranslation = []    // Original coordinates of location\n    let deltaTranslation = []       // Change in coordinates (over course of the drag event)\n\n    /** Callback on continuous rotate event */\n    const rotate = (event, element) => {\n\n        // Cant rotate if this location is not selected\n        if (!isSelected) { return }\n        if (!rotating) { setRotating(true) }\n\n        // The angle is calculated between the current cursor location and the center of the location\n        // NOTE: Im not sure why the 160 offset is neccessary. I think it might have to do with the way the menu/status bar\n        // is layered.\n        let angle\n        if (event.sourceEvent.type === \"mousemove\") {    // Computer\n            angle = Math.atan2(event.sourceEvent.clientY - location.y, event.sourceEvent.clientX - location.x) * 180 / Math.PI\n        } else if (event.sourceEvent.type === \"touchmove\") { // Tablet\n            angle = Math.atan2(event.sourceEvent.touches[0].clientY - location.y, event.sourceEvent.touches[0].clientX - location.x) * 180 / Math.PI\n        }\n\n        // Keep track of BOTH the initial rotation of the position, and the start angle of the drag\n        if (rotateStart == null) {\n            originalRotation = location.rotation\n            rotateStart = angle\n        }\n        // The delta is the current angle - the start angle (round to nearest 5th degree or nearest 45 degree)\n        deltaRotation = angle - rotateStart\n        if (Math.abs(deltaRotation % 45) < 5) {\n            deltaRotation = Math.round(deltaRotation / 45) * 45\n        } else {\n            deltaRotation = Math.round(deltaRotation / 10) * 10\n        }\n\n\n        // Final Rotation\n        let rotation = originalRotation - deltaRotation\n        // If rotation goes negative, then add 360 to the number to get irs positive variant\n        if(rotation < 0){\n            rotation = rotation + 360\n        }\n        \n        // Callback passed from props to set the appropriate location atttribute\n        handleRotate(rotation)\n    }\n\n    const rotateEnd = () => {\n        // Effectivly clears the rotate event\n        rotateStart = null\n    }\n\n    const translate = (event, element) => {\n\n        // Cant move location if the location isnt selected\n        if (!isSelected) { return }\n        if (!translating) { setTranslating(true) }\n\n        // Set the translation based on the event\n        let translation = []\n        if (event.sourceEvent.type === \"mousemove\") {    // Computer\n            translation = [event.sourceEvent.clientX, event.sourceEvent.clientY]\n        } else if (event.sourceEvent.type === \"touchmove\") { // Tablet\n            translation = [event.sourceEvent.touches[0].clientX, event.sourceEvent.touches[0].clientY]\n        }\n\n        // Keep track of the initial positon coords and the start coords of the event\n        if (translateStart == null) {\n            translateStart = translation\n            originalTranslation = [location.x, location.y]\n        }\n        // Calculate the change in translation relative to the start coordinates (round to nearest 5th pixel)\n        deltaTranslation[0] = Math.round((translation[0] - translateStart[0]) / 5) * 5\n        deltaTranslation[1] = Math.round((translation[1] - translateStart[1]) / 5) * 5\n\n        // Callback to set the appropriate location attributes\n        handleTranslate({ x: originalTranslation[0] + deltaTranslation[0], y: originalTranslation[1] + deltaTranslation[1] })\n    }\n\n    const translateEnd = () => {\n        translateStart = null\n    }\n\n    /* translateStart = nullconvertRealToD3\n     * Bind the listener that will listen for events that are made directly to this element\n     */\n    const bindDragListener = () => {\n\n        const mainElement = d3.select(`.${rd3tClassName}`)\n        const ringElement = d3.select(`.${rd3tClassName}-rot`)\n        const rectElement = d3.select(`.${rd3tClassName}-trans`)\n\n        // Define drag callbacks for dragging the ring (which rotates the location)\n        ringElement.call(\n            d3.behavior.drag()\n                .on(\"dragstart\", () => {\n                    if (isSelected) {\n                        handleDisableDrag()\n                    }\n                })\n                .on(\"drag\", function (d, i) {\n                    if (isSelected) {\n                        rotate(d3.event, mainElement)\n                    }\n                })\n                .on(\"dragend\", () => {\n                    if (isSelected) {\n                        rotateEnd()\n                        handleEnableDrag()\n                        setRotating(false)\n                    }\n                })\n        )\n\n        // Define drag callbacks for the element itself (which translates location)\n        rectElement.call(\n            d3.behavior.drag()\n                .on(\"dragstart\", () => {\n                    if (isSelected) {\n                        handleDisableDrag()\n                    }\n                })\n                .on(\"drag\", function (d, i) {\n                    if (isSelected) {\n                        translate(d3.event, mainElement)\n                    }\n                })\n                .on(\"dragend\", async () => {\n                    if (isSelected) {\n                        handleTranslateEnd({ x: originalTranslation[0] + deltaTranslation[0], y: originalTranslation[1] + deltaTranslation[1] })\n                        translateEnd()\n                        handleEnableDrag()\n                        setTranslating(false)\n                    }\n                })\n        )\n    }\n\n    return (null)\n}\n\nexport default DragEntityProto","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useParams } from 'react-router-dom'\n\nimport * as styled from './station.style'\n\n// Import actions\nimport { hoverStationInfo } from '../../../../redux/actions/widget_actions'\nimport { setSelectedStation, setStationAttributes } from '../../../../redux/actions/stations_actions'\nimport { setTaskAttributes } from '../../../../redux/actions/tasks_actions'\nimport { pageDataChanged } from '../../../../redux/actions/sidebar_actions'\n\n// Import Utils\nimport { handleWidgetHoverCoord } from '../../../../methods/utils/widget_utils'\nimport { deepCopy } from '../../../../methods/utils/utils'\nimport { convertD3ToReal } from '../../../../methods/utils/map_utils'\nimport { editing } from '../../../../methods/utils/locations_utils'\nimport { getProcessStationsWhileEditing } from '../../../../methods/utils/processes_utils'\n\n// Import Constants\nimport { StationTypes } from '../../../../constants/station_constants'\n\n// Import Components\nimport LocationSvg from '../location_svg/location_svg'\nimport DragEntityProto from '../drag_entity_proto'\nimport { getPreviousRoute } from \"../../../../methods/utils/processes_utils\";\nimport {\n    getHasStartAndEnd, getLoadStationId,\n    getRouteEnd,\n    getRouteIndexInRoutes, getRouteStart,\n    getUnloadStationId,\n    isNextRouteViable, isPositionAtLoadStation, isPositionInRoutes,\n    isStationInRoutes,\n    isStationLoadStation, isStationUnloadStation\n} from \"../../../../methods/utils/route_utils\";\nimport {immutableDelete} from \"../../../../methods/utils/array_utils\";\n\nfunction Station(props) {\n    const {\n        station,\n        rd3tClassName,\n        d3,\n        handleEnableDrag,\n        handleDisableDrag,\n        mouseDown,\n    } = props\n\n\n    const [hovering, setHovering] = useState(false)\n    const [rotating, setRotating] = useState(false)\n    const [translating, setTranslating] = useState(false)\n\n    const selectedStation = useSelector(state => state.stationsReducer.selectedStation)\n    const editingStation = useSelector(state => state.stationsReducer.editingStation)\n    const selectedPosition = useSelector(state => state.positionsReducer.selectedPosition)\n    const selectedTask = useSelector(state => state.tasksReducer.selectedTask)\n    const selectedProcess = useSelector(state => state.processesReducer.selectedProcess)\n    const hoveringInfo = useSelector(state => state.widgetReducer.hoverStationInfo)\n    const tasks = useSelector(state => state.tasksReducer.tasks)\n    const fixingProcess = useSelector(state => state.processesReducer.fixingProcess)\n    const positions = useSelector(state => state.positionsReducer.positions)\n\n    const dispatch = useDispatch()\n    const dispatchHoverStationInfo = (info) => dispatch(hoverStationInfo(info))\n    const dispatchSetSelectedStation = (station) => dispatch(setSelectedStation(station))\n    const dispatchSetStationAttributes = (id, attr) => dispatch(setStationAttributes(id, attr))\n    const dispatchSetTaskAttributes = (id, load) => dispatch(setTaskAttributes(id, load))\n    const dispatchPageDataChanged = (bool) => dispatch(pageDataChanged(true))\n\n\n    // ======================================== //\n    //                                          //\n    //        Station Characteristics           //\n    //                                          //\n    // ======================================== //\n\n    const routeStart = getRouteStart(selectedTask)\n    const routeEnd = getRouteEnd(selectedTask)\n\n    // Used to allow translating/rotation\n    let isSelected = false\n    // Set selected if there is a selected postion that is this position and no selected task\n    if (!!selectedStation && selectedStation._id === station._id && !selectedTask && !!editingStation) isSelected = true\n\n    let disabled = false\n    if(!!selectedTask && !!selectedProcess) {\n        // This filters out stations when fixing a process\n        // If the process is broken, then you can only start the task at the route before break's unload location\n\n        if (!!fixingProcess) {\n            // setting load\n            if (!routeStart || (routeStart && routeEnd)) {\n\n                // must start at unload station of route before the break\n                const routeBeforeBreak = selectedProcess.routes[selectedProcess.broken - 1]\n                if (!isStationUnloadStation(routeBeforeBreak, station._id)) disabled = true\n            }\n\n            // setting unload\n            else if (!routeEnd) {\n                if (!!positions[selectedTask?.load?.position]) disabled = true\n\n                // can't pick same station for load and unload\n                if (isStationLoadStation(selectedTask, station._id)) disabled = true\n\n                // always allow picking load station of route after the break, as this would fix the break\n                const routeAfterBreak = selectedProcess.routes[selectedProcess.broken] || {}\n\n                // disable stations already in process\n                if (isStationInRoutes(selectedProcess.routes, station._id) && !isStationLoadStation(routeAfterBreak, station._id)) disabled = true\n            }\n        }\n\n            // This filters stations when making a process\n            // If the process has routes, and you're adding a new route, you should only be able to add a route starting at the last station\n        // This eliminates process with gaps between stations\n        else {\n            const {\n                temp\n            } = selectedTask || {}\n            const {\n                insertIndex\n            } = temp || {}\n\n\n            if (selectedProcess.routes.length > 0) {\n                const routeIndex = getRouteIndexInRoutes(selectedProcess.routes.map((currProcess) => currProcess._id), selectedTask?._id)\n\n                // setting load station\n                if (!routeStart || (routeStart && routeEnd)) {\n\n                    // adding to beginning\n                    if (insertIndex === 0) {\n                        // disable is station is already in process\n                        if (isStationInRoutes(selectedProcess.routes, station._id)) disabled = true\n                    }\n\n\n                    else if (routeIndex === 0) {\n                        if (isStationInRoutes(immutableDelete(selectedProcess.routes, 0), station._id)) disabled = true\n                    }\n\n                    else {\n                        // must select unload station of previous route\n                        const previousRoute = getPreviousRoute(selectedProcess.routes, selectedTask._id)\n                        const previousRouteEnd = getRouteEnd(previousRoute)\n\n                        if (!isStationUnloadStation(previousRoute, station._id) && previousRouteEnd) disabled = true\n\n                        const loadStationId = getLoadStationId(selectedTask)\n                        if (isStationInRoutes(selectedProcess.routes, station._id) && station._id !== loadStationId && previousRouteEnd !== station._id) disabled = true\n                    }\n                }\n\n                else if (!routeEnd) {\n                    if (!!positions[selectedTask?.load?.position]) disabled = true\n\n                    // adding to beginning of process\n                    if (insertIndex === 0) {\n\n                        // disable stations already in process\n                        const firstRoute = selectedProcess.routes[0]\n                        if (isStationInRoutes(selectedProcess.routes, station._id) && !isStationLoadStation(firstRoute, station._id)) disabled = true\n\n                        // don't allow selecting same station for load and unload\n                        if (isStationLoadStation(selectedTask, station._id)) disabled = true\n                    }\n\n                    else if (routeIndex === 0) {\n                        // disable stations already in process\n                        const nextRoute = selectedProcess.routes[1]\n                        if (isStationInRoutes(selectedProcess.routes, station._id) && !isStationLoadStation(nextRoute, station._id)) disabled = true\n                    }\n\n                    else {\n                        // disable stations already in process\n                        const nextRoute = selectedProcess.routes[routeIndex + 1]\n                        if (isStationInRoutes(selectedProcess.routes, station._id) && (!isStationLoadStation(nextRoute, station._id) || routeIndex === -1)) disabled = true\n                    }\n                }\n            }\n\n            // editing first route\n            else {\n                if ((selectedTask.load.station && selectedTask.unload.station === null)) {\n                    // don't allow selecting same station for load and unload\n                    if (isStationLoadStation(selectedTask, station._id)) disabled = true\n                }\n            }\n        }\n    }\n    else {\n        // Disable if the selected station is not this station\n        if (!!selectedStation && selectedStation._id !== station._id) disabled = true\n\n        // Disable if theres a selected position and the station's children dont contain that position\n        else if (!!selectedPosition && !station.children.includes(selectedPosition._id)) disabled = true\n    }\n\n\n    const shouldGlow = false\n\n    let highlight = false\n    // Set selected to true if the selected task inculdes the station\n    if (!!selectedTask && (selectedTask.load.station === station._id || selectedTask.unload.station === station._id)) highlight = true\n\n    // Set Color\n    let color = StationTypes[station.type].color\n    if (!isSelected && disabled) color = '#afb5c9' // Grey\n    else if (highlight) color = '#38eb87' // Green\n\n    // ======================================== //\n    //                                          //\n    //            Station Functions             //\n    //                                          //\n    // ======================================== //\n\n    // Used to see if a widget Page is opened\n    let params = useParams()\n    useEffect(() => {\n        window.addEventListener(\"mouseup\", onSetListener)\n        return () => {\n            window.removeEventListener(\"mouseup\", onSetListener)\n        }\n\n    }, [])\n\n    const onSetListener = () => {\n        setRotating(false)\n        setTranslating(false)\n    }\n\n\n    /**\n    * This runs on page load (thats mean station are mounted) and shows a widget page if it returns true.\n    * If there is a station ID in the params (URL) and it matches this station,\n    * and the URL (params) container a widget page then the widget page should be showing\n    */\n    useEffect(() => {\n        if (params.stationID !== undefined && params.stationID === props.station._id && !!params.widgetPage) {\n            dispatchHoverStationInfo(handleWidgetHover())\n        }\n    }, [])\n\n    /**\n     * Passes the X, Y, scale and ID of station to redux which is then used in widgets\n     */\n    const handleWidgetHover = () => {\n        return handleWidgetHoverCoord(station, rd3tClassName, d3)\n    }\n\n    // Handles if URL has widget page open\n    const onWidgetPageOpen = () => {\n        // If widget page is open, hovering is false and the open widget page stations id matches the station ID, set it to true so\n        // that the widget page doesn't disappear when mouse goes out of page\n        if (!!params.widgetPage && !hovering && params.stationID === station._id) {\n            setHovering(true)\n            dispatchHoverStationInfo(handleWidgetHover())\n\n        }\n\n        // If hovering is true but there's no hoverInfo in the reducer (see widgets for when hoverInfo is set to null), set hovering to false\n        else if (!isSelected && hovering && hoveringInfo === null) {\n            setHovering(false)\n        }\n    }\n\n    /**\n     * This handles when a station is selected for a task\n     * Can only add a station to a task if the station is a warehouse or a human\n     *\n     * For a warehouse, the thing to remember is that you push to a warehouse and pull from a warehouse\n     */\n    const onSetStationTask = () => {\n\n        // Make sure there is a selected task and that its a station type you can assign a task too\n        if (selectedTask !== null && (station.type === 'human' || station.type === 'warehouse')) {\n\n            // Commented out for now\n            // // If there's a selected process and the process has routes and the station is not selected, then disable it from being selected\n            // if (!!selectedProcess && selectedProcess.routes.length > 0 && !isSelected) return\n\n            // If the load station has been defined but the unload position hasnt, assign the unload position\n            if (selectedTask.load.position !== null && selectedTask.unload.position === null) {\n                let unload = deepCopy(selectedTask.unload)\n                let type = selectedTask.type\n\n                // If it's a station then set hadnoff to true\n                let handoff = selectedTask.handoff\n                handoff = true\n\n                // Since it's a station, set both the position and station to the station ID\n                unload.position = station._id\n                unload.station = station._id\n\n                // If it's a warehouse and the load station has been selected, then the task type has to be a push\n                // You can only push to a ware house\n                type = station.type === 'warehouse' ? 'push' : type\n\n                dispatchSetTaskAttributes(selectedTask._id, { unload, type, handoff })\n            }\n\n            // Otherwise assign the load position and clear the unload position (to define a new unload)\n            else {\n                let load = deepCopy(selectedTask.load)\n                let unload = deepCopy(selectedTask.unload)\n                let type = selectedTask.type\n\n                // If it's a station then set hadnoff to true\n                let handoff = selectedTask.handoff\n                handoff = true\n\n                // Since it's a station, set both the position and station to the station ID\n                load.position = station._id\n                load.station = station._id\n\n                // If it's a warehouse and the load position has not been selected then the task type is a pull\n                // You can only pull from a ware house\n                type = station.type === 'warehouse' ? 'pull' : 'push'\n\n                unload.position = null\n                unload.station = null\n                dispatchSetTaskAttributes(selectedTask._id, { load, unload, type, handoff })\n            }\n        }\n    }\n\n    const onMouseEnter = () => {\n        // Only allow hovering if there is no selected task and mouse is not down on the map\n        if (!hoveringInfo && selectedTask === null && !station.temp && !mouseDown) {\n            setHovering(true)\n\n            if (!editing() && !rotating && !translating && !selectedStation && !selectedTask) {\n                dispatchHoverStationInfo(handleWidgetHover())\n                dispatchSetSelectedStation(station)\n            }\n        }\n    }\n\n    const onMouseDown = () => {\n        if (!disabled) onSetStationTask()\n        dispatchPageDataChanged(true)\n    }\n\n    const onTranslating = (bool) => {\n        setTranslating(bool)\n    }\n\n    const onRotating = (bool) => {\n        setRotating(bool)\n    }\n\n    const onMouseLeave = () => {\n        setHovering(false)\n\n    }\n\n\n    return (\n        <React.Fragment key={`frag-loc-${station._id}`}>\n            <LocationSvg\n                location={station}\n                rd3tClassName={rd3tClassName}\n                color={color}\n                d3={d3}\n                isSelected={isSelected}\n                hovering={hovering}\n                rotating={rotating}\n                hoveringInfo={hoveringInfo}\n                shouldGlow={shouldGlow}\n\n                handleMouseEnter={onMouseEnter}\n                handleMouseLeave={onMouseLeave}\n                handleMouseDown={onMouseDown}\n                handleTranslating={onTranslating}\n                handleRotating={onRotating}\n\n            >\n                \n            </LocationSvg>\n\n            <h1 style={{position: 'absolute', left: '50%', top: '50%'}}>Hello</h1>\n\n            <DragEntityProto\n                isSelected={isSelected}\n                location={station}\n                rd3tClassName={rd3tClassName}\n                d3={() => d3()}\n\n                handleRotate={(rotation) => { dispatchSetStationAttributes(station._id, { rotation }) }}\n                handleTranslate={({ x, y }) => dispatchSetStationAttributes(station._id, { x, y })}\n                handleTranslateEnd={({ x, y }) => {\n                    const pos = convertD3ToReal([x, y], props.d3)\n                    dispatchSetStationAttributes(station._id, { pos_x: pos[0], pos_y: pos[1] })\n                }}\n\n                handleEnableDrag={() => {\n                    handleEnableDrag()\n\n                }}\n                handleDisableDrag={() => {\n                    handleDisableDrag()\n                }}\n\n\n            />\n            {onWidgetPageOpen()}\n        </React.Fragment>\n    )\n}\n\nexport default Station\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useParams } from 'react-router-dom'\n\n// Import Utils\nimport { deepCopy } from '../../../../methods/utils/utils'\nimport { handleWidgetHoverCoord } from '../../../../methods/utils/widget_utils'\nimport { convertD3ToReal } from '../../../../methods/utils/map_utils'\nimport { editing } from '../../../../methods/utils/locations_utils'\nimport { getProcessStationsWhileEditing } from '../../../../methods/utils/processes_utils'\n\n// Import Constants\nimport { PositionTypes } from '../../../../constants/position_constants'\n\n// Import Actions\nimport { selectTask, setTaskAttributes } from '../../../../redux/actions/tasks_actions'\nimport { setSelectedPosition, setPositionAttributes } from '../../../../redux/actions/positions_actions'\nimport { hoverStationInfo } from '../../../../redux/actions/widget_actions'\nimport { pageDataChanged } from '../../../../redux/actions/sidebar_actions'\n\n// Import Components\nimport LocationSvg from '../location_svg/location_svg'\nimport DragEntityProto from '../drag_entity_proto'\nimport { getPreviousRoute } from \"../../../../methods/utils/processes_utils\";\nimport {\n    getLoadPositionId,\n    getLoadStationId, getRouteEnd, getRouteIndexInRoutes, getRouteStart,\n    isPositionAtLoadStation, isPositionAtUnloadStation,\n    isPositionInRoutes,\n    isStationInRoutes, isStationLoadStation, isStationUnloadStation\n} from \"../../../../methods/utils/route_utils\";\nimport {immutableDelete} from \"../../../../methods/utils/array_utils\";\n\nfunction Position(props) {\n\n    const {\n        d3,\n        position,\n        rd3tClassName,\n        handleEnableDrag,\n        handleDisableDrag,\n        mouseDown\n    } = props\n\n\n    const {\n        _id: positionId\n    } = position\n\n    const [hovering, setHovering] = useState(false)\n    const [rotating, setRotating] = useState(false)\n    const [translating, setTranslating] = useState(false)\n\n    const dispatch = useDispatch()\n    const dispatchSetTaskAttributes = (id, load) => dispatch(setTaskAttributes(id, load))\n    const dispatchHoverStationInfo = (info) => dispatch(hoverStationInfo(info))\n    const dispatchSetSelectedPosition = (position) => dispatch(setSelectedPosition(position))\n    const dispatchSetPositionAttributes = (id, attr) => dispatch(setPositionAttributes(id, attr))\n    const dispatchPageDataChanged = (bool) => dispatch(pageDataChanged(true))\n\n    const selectedTask = useSelector(state => state.tasksReducer.selectedTask)\n    const selectedProcess = useSelector(state => state.processesReducer.selectedProcess)\n    const selectedPosition = useSelector(state => state.positionsReducer.selectedPosition)\n    const selectedStation = useSelector(state => state.stationsReducer.selectedStation)\n    const hoveringID = useSelector(state => state.widgetReducer.hoverLocationID)\n    const hoveringInfo = useSelector(state => state.widgetReducer.hoverStationInfo)\n    const stations = useSelector(state => state.stationsReducer.stations)\n    const positions = useSelector(state => state.positionsReducer.positions)\n    const tasks = useSelector(state => state.tasksReducer.tasks)\n    const selectedStationChildrenCopy = useSelector(state => state.positionsReducer.selectedStationChildrenCopy)\n    const fixingProcess = useSelector(state => state.processesReducer.fixingProcess)\n\n    // ======================================== //\n    //                                          //\n    //       Position Characteristics           //\n    //                                          //\n    // ======================================== //\n    const routeStart = getRouteStart(selectedTask)\n    const routeEnd = getRouteEnd(selectedTask)\n    // Used to allow translating/rotation\n    let isSelected = false\n    // Set selected if the positon is part of a stations children copy and no selected task\n    if (!!selectedStationChildrenCopy && (positionId in selectedStationChildrenCopy) && !selectedTask) isSelected = true\n    // Set selected if there is a selected postion that is this position and no selected task\n    else if (!!selectedPosition && selectedPosition._id === positionId && !selectedTask) isSelected = true\n    // Set selected if the position is a temp right click\n    else if (position.schema === 'temporary_position') isSelected = true\n\n    // Used to disable the ability to add position as a task\n    let disabled = false\n\n    if(selectedTask && selectedProcess) {\n\n\n        if (!position.parent) {\n            disabled = true\n        }\n\n        // This filters out positions when fixing a process\n        // If the process is broken, then you can only start the task at the route before break's unload location\n        if (!!fixingProcess) {\n            if (!position.parent) {\n                disabled = true\n            }\n            else {\n                // setting load (or both are set, in which case logic is the same, as click another position would be setting the load\n                if ((!routeStart) || (routeStart && routeEnd)) {\n                    // disable all positions except those at unload station of the route before the break\n                    const routeBeforeBreak = selectedProcess.routes[selectedProcess.broken - 1]\n                    disabled = !isPositionAtUnloadStation(routeBeforeBreak, positionId)\n                }\n\n                // setting unload\n                else if (!routeEnd) {\n                    if (!positions[selectedTask?.load?.position]) disabled = true\n\n                    // don't allow selecting positions at stations already in process\n                    const routeAfterBreak = selectedProcess.routes[selectedProcess.broken]\n\n                    if(isPositionInRoutes(selectedProcess.routes, positionId) && !isPositionAtLoadStation(routeAfterBreak, positionId)) disabled = true\n                }\n            }\n        }\n            // This filters positions when making a process\n            // If the process has routes, and you're adding a new route, you should only be able to add a route starting at the last station\n        // This eliminates process with gaps between stations\n        else {\n\n             {\n                // extract insertIndex for adding new routes to beginning of a process\n                const {\n                    temp\n                } = selectedTask || {}\n                const {\n                    insertIndex\n                } = temp || {}\n\n                // not first route\n                if (selectedProcess.routes.length > 0) {\n                    const routeIndex = getRouteIndexInRoutes(selectedProcess.routes.map((currProcess) => currProcess._id), selectedTask?._id)\n\n                    // setting load (or both have been set)\n                    if (!routeStart || (routeStart && routeEnd)) {\n\n                        // adding to beginning of process\n                        if (insertIndex === 0) {\n                            // disable all positions already in the process\n                            if(isPositionInRoutes(selectedProcess.routes, positionId)) disabled = true\n                        }\n\n                        else if (routeIndex === 0) {\n                            if (isPositionInRoutes(immutableDelete(selectedProcess.routes, 0), positionId)) disabled = true\n                        }\n\n                        else {\n                            // must start at position at unload station of previous route\n                            const previousRoute = getPreviousRoute(selectedProcess.routes, selectedTask._id)\n                            const previousRouteEnd = getRouteEnd(previousRoute)\n                            if(!isPositionAtUnloadStation(previousRoute, positionId) && previousRouteEnd) disabled = true\n\n\n\n                            const loadPositionId = getLoadPositionId(selectedTask)\n                            const loadStationId = getLoadStationId(selectedTask)\n\n                            if (isPositionInRoutes(selectedProcess.routes, positionId) && (previousRouteEnd !== position.parent) && positionId !== loadPositionId && loadStationId !== position.parent) disabled = true\n                        }\n                    }\n\n                    // setting unload\n                    else if (!routeEnd) {\n\n                        if (!positions[selectedTask?.load?.position]) disabled = true\n\n                        // adding new to beginning of process\n                        if (insertIndex === 0) {\n                            // disable positions already used\n                            const firstRoute = selectedProcess.routes[0]\n                            if(isPositionInRoutes(selectedProcess.routes, positionId) && !isPositionAtLoadStation(firstRoute, positionId)) disabled = true\n\n                            // disable positions at load station of current route, as unload and load shouldn't be at same route\n                            if (isPositionAtLoadStation(selectedTask, positionId)) disabled = true\n                        }\n\n                        else if (routeIndex === 0) {\n                            const nextRoute = selectedProcess.routes[1]\n                            if (isPositionInRoutes(selectedProcess.routes, positionId) && !isPositionAtLoadStation(nextRoute, positionId)) disabled = true\n                        }\n\n                        else {\n                            const nextRoute = selectedProcess.routes[routeIndex + 1]\n                            // disable positions already used\n                            if (isPositionInRoutes(selectedProcess.routes, positionId) && (!isPositionAtLoadStation(nextRoute, positionId) || routeIndex === -1)) disabled = true\n\n                            // disable positions at load station of current route, as unload and load shouldn't be at same route\n                            if (isPositionAtLoadStation(selectedTask, positionId)) disabled = true\n                        }\n                    }\n                }\n\n                // first route\n                else {\n                    // setting load\n                    if (!routeStart || (routeStart && routeEnd)) {\n                        // all positions are available for load position of first route\n                    }\n\n                    // setting unload\n                    else if (!routeEnd) {\n                        // disable positions at load station of current route, as unload and load shouldn't be at same route\n                        if (isPositionAtLoadStation(selectedTask, positionId)) disabled = true\n                    }\n                }\n            }\n        }\n    }\n    else {\n        // Disable if the selectedPosition is not this position\n        if (!!selectedPosition && selectedPosition._id !== positionId) disabled = true\n\n        // Disable if making a task and this position does not have a parent\n        else if (!!selectedTask && !position.parent) disabled = true\n\n        // Disable if the position does not belong to the children copy\n        else if (!!selectedStationChildrenCopy && !(positionId in selectedStationChildrenCopy)) disabled = true\n\n        // Disbale if the selected stations children does not include this station\n        else if (!!selectedStation && !selectedStation.children.includes(positionId)) disabled = true\n    }\n\n    // Tells the position to glow\n    const shouldGlow = selectedTask !== null &&\n        ((selectedTask.load.position == positionId && selectedTask.type == 'push') ||\n            (selectedTask.unload.position == positionId && selectedTask.type == 'pull') ||\n            (selectedTask.load.position == positionId && selectedTask.type == 'both') ||\n            (selectedTask.unload.position == positionId && selectedTask.type == 'both'))\n\n\n    // Used to highlight position if the position is part of the selected task\n    let highlight = false\n    if (!!selectedTask && (selectedTask.load.position === positionId || selectedTask.unload.position === positionId)) highlight = true\n\n\n    // Set Color\n    let color = PositionTypes[position.type].color\n    if (!isSelected && disabled) color = '#afb5c9' // Grey\n    else if (highlight) color = '#38eb87' // Green\n\n    // ======================================== //\n    //                                          //\n    //           Position Functions             //\n    //                                          //\n    // ======================================== //\n\n    useEffect(() => {\n        window.addEventListener(\"mouseup\", onSetListener)\n        return () => {\n            window.removeEventListener(\"mouseup\", onSetListener)\n        }\n\n    }, [])\n\n    const onSetListener = () => {\n        setRotating(false)\n        setTranslating(false)\n    }\n\n\n    // Automatically opens widget pages and sets hovering to true in the position is a temp right click\n    useEffect(() => {\n        if (position !== null && position.schema === 'temporary_position') {\n            setHovering(true)\n            dispatchHoverStationInfo(handleWidgetHover())\n            dispatchSetSelectedPosition(position)\n        }\n    }, [])\n\n\n    /**\n    * Passes the X, Y, scale and ID of position to redux which is then used in widgets\n    */\n    const handleWidgetHover = () => {\n\n        return handleWidgetHoverCoord(position, rd3tClassName, d3)\n\n    }\n\n    const onSetPositionTask = () => {\n\n        // Commented out for now\n        // If there's a selected process and the process has routes and the station is not selected, then disable it from being selected\n        // if (!!selectedProcess && selectedProcess.routes.length > 0 && !isSelected) return\n\n\n        if (selectedTask !== null) {\n            // If the load position has been defined but the unload position hasnt, assign the unload position\n            if (selectedTask.load.position !== null && selectedTask.unload.position === null) {\n                let unload = deepCopy(selectedTask.unload)\n                let type = selectedTask.type\n                unload.position = positionId\n                if (position.parent !== null) {\n                    unload.station = position.parent\n                } else {\n                    type = 'push'\n                }\n                dispatchSetTaskAttributes(selectedTask._id, { unload, type })\n            } else { // Otherwise assign the load position and clear the unload position (to define a new unload)\n                let load = deepCopy(selectedTask.load)\n                let unload = deepCopy(selectedTask.unload)\n                let type = selectedTask.type\n                load.position = positionId\n                if (position.parent !== null) {\n                    load.station = position.parent\n                } else {\n                    type = 'pull'\n                }\n                unload.position = null\n                unload.station = null\n                dispatchSetTaskAttributes(selectedTask._id, { load, unload, type })\n            }\n        }\n    }\n\n    const onMouseEnter = () => {\n        // Only hover if there is no selected task\n        if (!hoveringInfo && selectedTask === null && !position.temp && !mouseDown) {\n            setHovering(true)\n            if (!editing() && !rotating && !translating && !selectedPosition && !selectedStation && !selectedTask) {\n                dispatchHoverStationInfo(handleWidgetHover())\n                dispatchSetSelectedPosition(position)\n\n            }\n        }\n\n    }\n\n    const renderParentLine = () => {\n\n        const parent = ((!!selectedStationChildrenCopy && positionId in selectedStationChildrenCopy) && !!selectedStation) ? selectedStation : stations[position.parent]\n        // TODO: Temp fix\n        if (!parent) return\n        return (\n            <line x1={`${position.x}`} y1={`${position.y}`}\n                x2={`${parent.x}`} y2={`${parent.y}`}\n                stroke={color} strokeWidth=\"1.4\" shapeRendering=\"geometricPrecision\" style={{ opacity: '0.3', }}\n            />\n        )\n    }\n\n    const onMouseDown = () => {\n        if (!disabled) onSetPositionTask()\n        if(selectedPosition?.schema!==\"temporary_position\"){\n        dispatchPageDataChanged(true)\n      }\n    }\n\n    const onTranslating = (bool) => {\n        if (!isSelected) {\n            setTranslating(bool)\n        }\n    }\n\n    const onRotating = (bool) => {\n        setRotating(bool)\n        if (!bool) {\n            setHovering(false)\n        }\n    }\n\n    const onMouseLeave = () => {\n        position.schema !== 'temporary_position' && setHovering(false)\n    }\n\n    return (\n        <React.Fragment key={`frag-loc-${positionId}`}>\n            {!!position.parent && renderParentLine()}\n            <LocationSvg\n                location={position}\n                rd3tClassName={rd3tClassName}\n                color={color}\n                d3={d3}\n                isSelected={isSelected}\n                hovering={hovering}\n                rotating={rotating}\n                hoveringInfo={position.schema !== 'temporary_position' ? hoveringInfo : null}\n                shouldGlow={shouldGlow}\n\n                handleMouseEnter={onMouseEnter}\n                handleMouseLeave={onMouseLeave}\n                handleMouseDown={onMouseDown}\n                handleTranslating={onTranslating}\n                handleRotating={onRotating}\n\n            />\n\n            <DragEntityProto\n                isSelected={isSelected}\n                location={position}\n                rd3tClassName={rd3tClassName}\n                d3={() => d3()}\n\n                handleRotate={(rotation) => { dispatchSetPositionAttributes(positionId, { rotation }) }}\n                handleTranslate={({ x, y }) => dispatchSetPositionAttributes(positionId, { x, y })}\n                handleTranslateEnd={({ x, y }) => {\n                    const pos = convertD3ToReal([x, y], props.d3)\n                    dispatchSetPositionAttributes(positionId, { pos_x: pos[0], pos_y: pos[1] })\n                }}\n\n                handleEnableDrag={() => {\n                    handleEnableDrag()\n                }}\n                handleDisableDrag={() => {\n                    handleDisableDrag()\n                }}\n\n\n            />\n        </React.Fragment>\n    )\n}\n\nexport default Position\n","import React, { useMemo, useEffect, useState } from 'react';\n\nconst HeatSpot = (props) => {\n\n    const {\n        station,\n        wipRatio,\n        d3Scale\n    } = props;\n\n    const color = () => {\n        if (wipRatio < 1.5) {\n            return 'url(#goodGrad)';\n        } else if (wipRatio < 3) {\n            return 'url(#okayGrad)';\n        } else {\n            return 'url(#badGrad)'\n        }\n    }\n\n    const spotSize = 30*Math.min(Math.max(1, wipRatio), 4)*d3Scale;\n    \n\n    return (\n        \n        <g>\n            <circle cx={station.x} cy={station.y} r={spotSize} fill={color()} />\n        </g>\n    )\n}\n\nexport default HeatSpot;","import React, { useEffect, useMemo, useState } from 'react'\nimport moment from 'moment';\n\n// functions external\nimport { useDispatch, useSelector } from \"react-redux\";\n\n/// utils\nimport { getProcessStationsSorted } from '../../../methods/utils/processes_utils';\nimport { getCardsInBin, getLotTotalQuantity } from '../../../methods/utils/lot_utils';\nimport HeatSpot from './heatspot/heatspot';\n\n\nconst HeatMap = (props) => {\n\n    const {\n        map_id,\n        d3Scale\n    } = props;\n\n    const [stationWIPRatios, setStationWIPRatios] = useState({})\n\n    const cards = useSelector(state => state.cardsReducer.cards)\n\tconst routes = useSelector(state => state.tasksReducer.tasks)\n\n    let stations = useSelector(state => state.stationsReducer.stations)\n    stations = Object.values(stations).filter(station => (station.map_id === map_id))\n\n\tlet processes = useSelector(state => state.processesReducer.processes)\n    processes = Object.values(processes).filter((currProcess) => currProcess.map_id === map_id)\n\n    useEffect(() => {\n\n        let WIPBuildupRatios = {};    // The WIP ratios of each station on the map (stationWIP / meanProcessWIP) (refer to meanProcessWIP (~line 45))\n        processes.forEach(process => {\n            const processStations = getProcessStationsSorted(process, routes);\n\n            let totalProcessWIP = 0;    // Tracks total WIP in the process\n            let stationWIP = {}         // Tracks WIP at each station in the process (by id)\n            let i, pStationId, stationCards, stationWIPAccumulator;\n            for (i=0; i<processStations.length; i++) { // Loop through each station in process to get mean WIP of the process\n                pStationId = processStations[i];\n                stationCards = getCardsInBin(cards, pStationId, process._id);\n\n                stationWIPAccumulator = 0;\n                stationCards.forEach((currLot) => {\n                    stationWIPAccumulator += currLot.bins[pStationId].count;\n                })\n                stationWIP[pStationId] = stationWIPAccumulator; // NOTE: Dont update in the object until end (better performance)\n                totalProcessWIP += stationWIPAccumulator;\n            }\n\n            const meanProcessWIP = totalProcessWIP / processStations.length;    // The mean WIP at each station in this prcess\n\n            // Loop through stations again to find WIP Ratio (stationWIP / meanProcessWIP)\n            let WIPRatio;\n            for (i=0; i<processStations.length; i++) {\n                pStationId = processStations[i];\n                WIPRatio = stationWIP[pStationId] / meanProcessWIP;\n\n                if (pStationId in WIPBuildupRatios) {\n                    WIPBuildupRatios[pStationId] = Math.max(WIPRatio, WIPBuildupRatios[pStationId]) // Only care about the max of all the WIP ratios at the station\n                } else if (WIPRatio > 0) {\n                    WIPBuildupRatios[pStationId] = WIPRatio;\n                }\n\n            }\n        });\n\n        setStationWIPRatios(WIPBuildupRatios);\n    }, [cards])\n\n    const spotStartOpacity = 0.7;\n    const spotEndOpacity = 0;\n\n    // console.log('render', stationWIPRatios)\n    \n    return (\n        <g>\n            <defs>\n                <radialGradient id=\"goodGrad\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n                    <stop offset=\"20%\" style={{stopColor: '#00ffcf', stopOpacity: spotStartOpacity}} />\n                    <stop offset=\"100%\" style={{stopColor: '#00ff97', stopOpacity: spotEndOpacity}} />\n                </radialGradient>\n                <radialGradient id=\"okayGrad\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n                    <stop offset=\"20%\" style={{stopColor: '#ff9300', stopOpacity: spotStartOpacity}} />\n                    <stop offset=\"100%\" style={{stopColor: '#ffc200', stopOpacity: spotEndOpacity}} />\n                </radialGradient>\n                <radialGradient id=\"badGrad\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n                    <stop offset=\"20%\" style={{stopColor: '#ff0e00', stopOpacity: spotStartOpacity}} />\n                    <stop offset=\"100%\" style={{stopColor: '#ff6800', stopOpacity: spotEndOpacity}} />\n                </radialGradient>\n            </defs>\n            {\n                stations.map(station => \n                    station._id in stationWIPRatios && \n                        <HeatSpot \n                            key={station._id+'-heatspot'}\n                            station={station} \n                            wipRatio={stationWIPRatios[station._id]} \n                            d3Scale={d3Scale}\n                        />\n                )\n            }\n        </g>\n    );\n}\n\nexport default HeatMap;","import React, { useState, useEffect, useRef } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\n// Import Actions\nimport { setTaskAttributes } from '../../../redux/actions/tasks_actions'\nimport {getLoadPositionId, getUnloadPositionId, getRouteEnd, getRouteStart } from \"../../../methods/utils/route_utils\";\n\nexport default function RatsnestPaths(props) {\n\n    const {\n        route,\n        d3Scale\n    } = props\n\n    // console.log(route)\n    const tasks = useSelector(state => state.tasksReducer.tasks)\n    const positions = useSelector(state => state.positionsReducer.positions)\n    const stations = useSelector(state => state.stationsReducer.stations)\n\n    const loadPositionId = getLoadPositionId(tasks[route])\n    const unloadPositionId = getUnloadPositionId(tasks[route])\n\n    const startPos = !!positions[loadPositionId] ? positions[loadPositionId] : stations[loadPositionId]\n    const endPos = !!positions[unloadPositionId] ? positions[unloadPositionId] : stations[unloadPositionId]\n    \n\n    return (\n        <>\n            <g>\n                <line x1={`${startPos.x}`} y1={`${startPos.y}`}\n                    x2={`${endPos.x}`} y2={`${endPos.y}`}\n                    strokeWidth={`${d3Scale * 0.8}`} stroke={'lightgrey'}\n                    strokeLinecap=\"round\"\n                />\n            </g>\n        </>\n    )\n}","import React from 'react';\nimport { useSelector } from 'react-redux'\n\nimport RatsnestPath from './ratsnest_path';\n\nconst RatsNest = (props) => {\n\n    const {\n        map_id,\n        d3Scale\n    } = props;\n\n    const processes = useSelector(state => state.processesReducer.processes);\n    const mapProcesses = Object.values(processes).filter(process => process.map_id === map_id)\n\n    return (\n        <>\n            {\n                mapProcesses.map(process => process.routes.map(route => (\n                    <RatsnestPath route={route} d3Scale={d3Scale} />\n                )))\n            }\n        </>\n    )\n}\n\nexport default RatsNest;","export default {\n\n    heatmap: (enabled) => ( \n        <svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" height={50} width={50}\n            viewBox=\"0 0 100 100\">\n\n            <defs>\n                <radialGradient id=\"okayGradMini\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n                    <stop offset=\"20%\" style={{stopColor: '#ff9300', stopOpacity: 1}} />\n                    <stop offset=\"100%\" style={{stopColor: '#ffc200', stopOpacity: 0}} />\n                </radialGradient>\n                <radialGradient id=\"badGradMini\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n                    <stop offset=\"20%\" style={{stopColor: '#ff0e00', stopOpacity: 1}} />\n                    <stop offset=\"100%\" style={{stopColor: '#ff6800', stopOpacity: 0}} />\n                </radialGradient>\n                <filter id=\"greyscale\">\n                    <feColorMatrix type=\"saturate\" values=\"0\"/>\n                </filter>\n            </defs>\n            <g filter={!enabled && 'url(#greyscale)'}>\n                <circle cx={40} cy={40} r={40} fill={'url(#badGradMini)'}/>\n                <circle cx={70} cy={70} r={30} fill={'url(#okayGradMini)'}/>\n            </g>\n        </svg>\n    ),\n\n    labels: (enabled) => (\n        <svg id=\"Capa_1\" height={50} width={50} viewBox=\"0 0 512 512\" xmlns=\"http://www.w3.org/2000/svg\">\n            <g stroke={!enabled && 'grey'} fill={!enabled && 'grey'}>\n                <path d=\"m15 114.235c8.284 0 15-6.716 15-15v-69.235h69.235c8.284 0 15-6.716 15-15s-6.716-15-15-15h-84.235c-8.284 0-15 6.716-15 15v84.235c0 8.285 6.716 15 15 15z\"/>\n                <path d=\"m497 0h-84.235c-8.284 0-15 6.716-15 15s6.716 15 15 15h69.235v69.235c0 8.284 6.716 15 15 15s15-6.716 15-15v-84.235c0-8.284-6.716-15-15-15z\"/>\n                <path d=\"m497 397.765c-8.284 0-15 6.716-15 15v69.235h-69.235c-8.284 0-15 6.716-15 15s6.716 15 15 15h84.235c8.284 0 15-6.716 15-15v-84.235c0-8.285-6.716-15-15-15z\"/>\n                <path d=\"m99.235 482h-69.235v-69.235c0-8.284-6.716-15-15-15s-15 6.716-15 15v84.235c0 8.284 6.716 15 15 15h84.235c8.284 0 15-6.716 15-15s-6.715-15-15-15z\"/>\n                <path d=\"m419.66 191.38v-94.73c0-4.7-3.81-8.51-8.52-8.51h-155.14-155.14c-4.71 0-8.52 3.81-8.52 8.51v94.73c0 4.71 3.81 8.52 8.52 8.52h45.24c4.7 0 8.51-3.81 8.51-8.52v-32.45c0-4.71 3.82-8.52 8.52-8.52h53.21c4.71 0 8.52 3.81 8.52 8.52v234.14c0 4.71-3.81 8.52-8.52 8.52h-23.27c-4.71 0-8.52 3.81-8.52 8.52v45.24c0 4.7 3.81 8.51 8.52 8.51h62.93 62.93c4.71 0 8.52-3.81 8.52-8.51v-45.24c0-4.71-3.81-8.52-8.52-8.52h-23.27c-4.71 0-8.52-3.81-8.52-8.52v-234.14c0-4.71 3.81-8.52 8.52-8.52h53.21c4.7 0 8.52 3.81 8.52 8.52v32.45c0 4.71 3.81 8.52 8.51 8.52h45.24c4.71 0 8.52-3.81 8.52-8.52z\"/>\n            </g>\n        </svg>\n    ),\n\n    ratsnest: (enabled) => (\n        <svg id=\"Layer_1_1_\" enable-background=\"new 0 0 64 64\" height={50} viewBox=\"0 0 64 64\" width={50} xmlns=\"http://www.w3.org/2000/svg\">\n            <defs>\n                <filter id=\"greyscale\">\n                    <feColorMatrix type=\"saturate\" values=\"0\"/>\n                </filter>\n            </defs>\n            <g filter={!enabled && 'url(#greyscale)'} stroke={!enabled && 'grey'} fill={!enabled && 'grey'}>\n                <circle cx=\"9\" cy=\"9\" fill=\"#50b6cf\" r=\"6\"/>\n                <circle cx=\"37\" cy=\"9\" fill=\"#50b6cf\" r=\"6\"/>\n                <circle cx=\"27\" cy=\"55\" fill=\"#50b6cf\" r=\"6\"/>\n                <circle cx=\"55\" cy=\"55\" fill=\"#e34e4b\" r=\"6\"/>\n                <circle cx=\"23\" cy=\"32\" fill=\"#50b6cf\" r=\"6\"/>\n                <path d=\"m12.11865 3.88135c.55548.9096.88135 1.97479.88135 3.11865 0 3.31372-2.68628 6-6 6-1.14386 0-2.20905-.32587-3.11865-.88135 1.05371 1.72559 2.94879 2.88135 5.11865 2.88135 3.31372 0 6-2.68628 6-6 0-2.16986-1.15576-4.06494-2.88135-5.11865z\" fill=\"#3cadc9\"/>\n                <path d=\"m40.11865 3.88135c.55548.9096.88135 1.97479.88135 3.11865 0 3.31372-2.68628 6-6 6-1.14386 0-2.20905-.32587-3.11865-.88135 1.05371 1.72559 2.94879 2.88135 5.11865 2.88135 3.31372 0 6-2.68628 6-6 0-2.16986-1.15576-4.06494-2.88135-5.11865z\" fill=\"#3cadc9\"/>\n                <path d=\"m30.11865 49.88135c.55548.9096.88135 1.97479.88135 3.11865 0 3.31372-2.68628 6-6 6-1.14386 0-2.20905-.32587-3.11865-.88135 1.05371 1.72559 2.94879 2.88135 5.11865 2.88135 3.31372 0 6-2.68628 6-6 0-2.16986-1.15576-4.06494-2.88135-5.11865z\" fill=\"#3cadc9\"/>\n                <path d=\"m58.11865 49.88135c.55548.9096.88135 1.97479.88135 3.11865 0 3.31372-2.68628 6-6 6-1.14386 0-2.20905-.32587-3.11865-.88135 1.05371 1.72559 2.94879 2.88135 5.11865 2.88135 3.31372 0 6-2.68628 6-6 0-2.16986-1.15576-4.06494-2.88135-5.11865z\" fill=\"#de4542\"/>\n                <path d=\"m26.11865 26.88135c.55548.9096.88135 1.97479.88135 3.11865 0 3.31372-2.68628 6-6 6-1.14386 0-2.20905-.32587-3.11865-.88135 1.05371 1.72559 2.94879 2.88135 5.11865 2.88135 3.31372 0 6-2.68628 6-6 0-2.16986-1.15576-4.06494-2.88135-5.11865z\" fill=\"#3cadc9\"/>\n                <g>\n                    <path d=\"m27 62c3.51904 0 6.43231-2.6134 6.92017-6h10.66577l-1.29297 1.29297 1.41406 1.41406 3-3c.19531-.19531.29297-.45117.29297-.70703s-.09766-.51172-.29297-.70703l-3-3-1.41406 1.41406 1.29297 1.29297h-10.66577c-.48786-3.3866-3.40113-6-6.92017-6-3.85938 0-7 3.14014-7 7s3.14062 7 7 7zm0-12c2.75684 0 5 2.24316 5 5s-2.24316 5-5 5-5-2.24316-5-5 2.24316-5 5-5z\"/>\n                    <path d=\"m55 62c3.85938 0 7-3.14014 7-7s-3.14062-7-7-7-7 3.14014-7 7 3.14062 7 7 7zm0-12c2.75684 0 5 2.24316 5 5s-2.24316 5-5 5-5-2.24316-5-5 2.24316-5 5-5z\"/>\n                    <path d=\"m23 25c-3.51904 0-6.43225 2.6134-6.9201 6h-1.5799c-6.89258 0-12.5 5.60742-12.5 12.5s5.60742 12.5 12.5 12.5h2.08594l-1.29297 1.29297 1.41406 1.41406 3-3c.19531-.19531.29297-.45117.29297-.70703s-.09766-.51172-.29297-.70703l-3-3-1.41406 1.41406 1.29297 1.29297h-2.08594c-5.79004 0-10.5-4.71045-10.5-10.5s4.70996-10.5 10.5-10.5h1.5799c.48785 3.3866 3.40106 6 6.9201 6 3.85938 0 7-3.14014 7-7s-3.14062-7-7-7zm0 12c-2.75684 0-5-2.24316-5-5s2.24316-5 5-5 5 2.24316 5 5-2.24316 5-5 5z\"/>\n                    <path d=\"m26.70703 5.29297-1.41406 1.41406 1.29297 1.29297h-10.66577c-.48786-3.3866-3.40113-6-6.92017-6-3.85938 0-7 3.14014-7 7s3.14062 7 7 7c3.51904 0 6.43231-2.6134 6.92017-6h10.66577l-1.29297 1.29297 1.41406 1.41406 3-3c.19531-.19531.29297-.45117.29297-.70703s-.09766-.51172-.29297-.70703zm-17.70703 8.70703c-2.75684 0-5-2.24316-5-5s2.24316-5 5-5 5 2.24316 5 5-2.24316 5-5 5z\"/>\n                    <path d=\"m62 20.5c0-6.89258-5.60742-12.5-12.5-12.5h-5.57983c-.48786-3.3866-3.40113-6-6.92017-6-3.85938 0-7 3.14014-7 7s3.14062 7 7 7c3.51904 0 6.43231-2.6134 6.92017-6h5.57983c5.79004 0 10.5 4.71045 10.5 10.5s-4.70996 10.5-10.5 10.5h-16.08594l1.29297-1.29297-1.41406-1.41406-3 3c-.19531.19531-.29297.45117-.29297.70703s.09766.51172.29297.70703l3 3 1.41406-1.41406-1.29297-1.29297h16.08594c6.89258 0 12.5-5.60742 12.5-12.5zm-25-6.5c-2.75684 0-5-2.24316-5-5s2.24316-5 5-5 5 2.24316 5 5-2.24316 5-5 5z\"/>\n                </g>\n            </g>\n        </svg>\n    ),\n\n}","import React from 'react';\nimport styled from 'styled-components'\n\nimport appIcons from './map_app_icons'\n\nconst MapApp = (props) => {\n\n    const {\n        appName,\n        enabled,\n        onClick\n    } = props;\n\n    return (\n        <AppContainer onClick={onClick}>\n            <g style={{height: 50, width: 50, alignItems: 'center'}}>\n                {appIcons[appName](enabled)}\n            </g>\n            <p3 style={{color: enabled ? 'black' : 'grey', height: 20, width: 70, textAlign: 'center'}}>{appName}</p3>\n        </AppContainer>\n    )\n\n}\n\nconst AppContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 10px;\n    margin: 10px;\n\n    justify-content: center;\n    align-content: center;\n\n    border-radius: 10px;\n\n    &:hover {\n        background: rgba(240, 240, 255, 0.3);\n    }\n`\n\nexport default MapApp;","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components'\n\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport MapApp from './map_app/map_app'\nimport { deepCopy } from '../../../methods/utils/utils'\nimport { postSettings } from '../../../redux/actions/settings_actions'\n\nconst MapApps = (props) => {\n\n    const {\n\n    } = props;\n\n    const [active, setActive] = useState(false);\n\n    const settings = useSelector(state => state.settingsReducer.settings);\n\n    const dispatch = useDispatch();\n    const dispatchPostSettings = (settings) => dispatch(postSettings(settings))\n\n    const toggleMapApp = (appName) => {\n\n        const settingsCopy = deepCopy(settings)\n        settingsCopy.mapApps[appName] = !settings.mapApps[appName];\n\n        dispatchPostSettings(settingsCopy);\n    }\n\n\n    // handle if the mapApps hasnt been created in settings\n    if (!settings.mapApps) {\n        const settingsCopy = deepCopy(settings)\n        settingsCopy.mapApps = {\n            ratsnest: true,\n            labels: true,\n            heatmap: true,\n        }\n\n        dispatchPostSettings(settingsCopy);\n\n        // return null;\n    }\n\n    return (\n        <>\n        <Icon active={active} className=\"fa fa-chevron-up\" onClick={() => setActive(!active)}/>\n        {active &&\n            <>\n            <Container style={{background: 'white', opacity: 0.3, width: 110*Object.keys(settings.mapApps).length}}/>\n            <Container>\n                {Object.keys(settings.mapApps).map(app => (\n                    <MapApp appName={app} enabled={settings.mapApps[app]} onClick={() => toggleMapApp(app)} />\n                ))}\n            </Container>\n            </>\n        }\n        </>\n    )\n\n}\n\nconst Icon = styled.i`\n    position: absolute;\n    bottom: 0;\n    right: 1rem;\n\n    transform: ${props => props.active ? 'scaleY(-1)' : 'scaleY(1)'};\n    transition: transform 100ms ease;\n\n    border: none;\n    background: none;\n    color: ${props => props.theme.bg.octonary};\n    text-align: center;\n\n    font-size: 3rem;\n    margin: 20px;\n    width: 70px;\n\n    cursor: pointer;\n    &:focus {outline:0;}\n\n    @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n        font-size: 3rem;\n    }\n\n`\n\nconst Container = styled.div`\n    position: absolute;\n    right: 1rem;\n    bottom: 70px;\n    display: flex;\n    flex-direction: row;\n\n    height: 110px;\n    border-radius: 10px;\n`\n\nexport default MapApps;","import React, { Component, useState } from 'react'\nimport { ReactDOM, Route } from 'react-dom'\nimport {connect, useSelector} from 'react-redux';\nimport moduleName from 'react'\nimport { withRouter } from \"react-router-dom\";\n\nimport * as styled from './map_view.style'\n\nimport uuid from 'uuid';\nimport * as d3 from 'd3'\n\n// Import Utils\nimport { convertD3ToReal, convertRealToD3, getRelativeOffset } from '../../methods/utils/map_utils'\nimport { getIsEquivalent, } from '../../methods/utils/utils.js'\n\n// Import Actions\nimport { getMap } from '../../redux/actions/map_actions'\nimport { postSettings } from '../../redux/actions/settings_actions'\nimport { updateStations, setStationAttributes, setSelectedStation } from '../../redux/actions/stations_actions'\nimport { updatePositions, postPosition, setPositionAttributes, setSelectedPosition } from '../../redux/actions/positions_actions'\nimport * as deviceActions from '../../redux/actions/devices_actions'\n\nimport { widgetLoaded, hoverStationInfo } from '../../redux/actions/widget_actions'\n\n// Import Components\nimport TaskPaths from '../../components/map/task_paths/task_paths.js'\nimport ProcessPaths from '../../components/map/process_paths/process_paths'\nimport MiR100 from '../../components/map/amrs/mir100/mir100.js'\nimport Zones from '../../components/map/zones/zones'\nimport RightClickMenu from '../../components/map/right_click_menu/right_click_menu'\nimport TaskStatistics from '../../components/map/task_statistics/task_statistics'\nimport RouteConfirmation from '../../components/map/route_confirmation/route_confirmation'\nimport Widgets from '../../components/widgets/widgets'\nimport CartWaypoint from '../../components/map/locations/cart_waypoint/cart_waypoint'\n\nimport Station from '../../components/map/locations/station/station'\nimport Position from '../../components/map/locations/position/position'\nimport HeatMap from '../../components/map/heatmap/heatmap'\nimport RatsNest from '../../components/map/ratsnest/ratsnest'\nimport MapApps from '../../components/map/map_apps/map_apps'\n\n// logging\nimport log from \"../../logger\"\nimport { setCurrentMap } from \"../../redux/actions/map_actions\";\nimport { getPreviousRoute } from \"../../methods/utils/processes_utils\";\nimport { isObject } from \"../../methods/utils/object_utils\";\nimport {getHasStartAndEnd, getUnloadPositionId} from \"../../methods/utils/route_utils\";\nconst logger = log.getLogger(\"MapView\")\n\nexport class MapView extends Component {\n    constructor(props) {\n        super(props)\n\n        this.mobileMode = this.props.mobileMode\n        this.onClick = this.props.onClick\n\n        this.state = {\n            showRightClickMenu: {},\n            hasStartAndEnd: false,\n            currentMap: null,\n        }\n\n        this.rd3tSvgClassName = `__SVG`     // Gives uniqe className to map components to reference for d3 events\n        this.rd3tMapClassName = `__MAP`\n        this.rd3tLocClassName = '__LOC'\n        this.rd3tStationClassName = `__STATION`\n        this.rd3tPosClassName = '__POS'\n\n        this.lastEvent = null   // Save the latest event\n\n        this.initialRender = true   // Keeps track of where the D3 SVG has been zoomed or dragged\n        this.draggable = true   // Dragging is disabled when another event occurs (ex: moving a location)\n        this.widgetDraggable = true   // Dragging is disabled when widget page is open (ex: moving a location)\n\n        this.d3 = {\n            translate: [0, 0],\n            naturalDims: { height: 500, width: 500 },\n            scale: 1,\n            naturalScale: 1,\n            boundingClientHeight: 0\n        }\n\n        this.naturalImageDimensions = {\n            width: 100,\n            heigh: 100\n        }\n\n        this.mouseDown = false\n    }\n\n    componentDidMount() {\n\n\n\n        // Refresh the map on initial mount. This will only likely give you back the list of\n        // maps, but componentDidUpdate will catch that and set the current map to the first map\n        // in the returned list (which will be the active map)\n        // this.refreshMap()\n        this.checkForMapLoad()\n        window.addEventListener('mousedown', () => this.mouseDown = true, { passive: false })\n        window.addEventListener('mouseup', () => { this.mouseDown = false; this.validateNewEntity() }, { passive: false })\n        window.addEventListener(\"click\", () => { this.setState({ showRightClickMenu: {} }) });\n\n        // Event listener that will recalculate the map geometry when the screen size changes\n        window.addEventListener('resize', () => {\n            //this.calculateD3Geometry()\n            this.bindZoomListener()\n        }, { passive: false })\n\n    }\n\n    checkForMapLoad = () => {\n\n      var currentMap = this.props.maps.find(map => map._id === this.props.currentMapId)\n\n      if(!currentMap){\n        this.setState({currentMap: this.props.maps[0]})\n\n        const updatedSettings = {\n          ...this.props.settings,\n          currentMapId: this.props.maps[0]._id,\n        }\n        this.props.dispatchPostSettings(updatedSettings)\n      }\n      else{\n        this.setState({currentMap: currentMap})\n      }\n    }\n\n\n    componentDidUpdate(prevProps, prevState) {\n        // If new maps are available, refresh current map\n        // NOTE: will be useless once we have a method to select map\n        // if (prevProps.maps.length != this.props.maps.length) {\n        //     this.refreshMap()\n        // }\n        //this.checkForMapLoad() //test\n\n        if(this.props.currentMapId !== this.state.currentMap._id){\n          this.checkForMapLoad()\n        }\n        if(prevProps.selectedTask !== this.props.selectedTask) {\n            this.setState({hasStartAndEnd: getHasStartAndEnd(this.props.selectedTask)})\n        }\n\n        // If the map has been changed, recalculate the geometry and bind the zoom\n        // listener to default to the correct translation\n        if (!getIsEquivalent(prevProps.currentMap, this.state.currentMap)) {\n            //this.calculateD3Geometry(this.mapContainer)\n            this.bindZoomListener()\n        }\n\n        // If the map has been changed, recalculate the geometry and bind the zoom\n        // listener to default to the correct translation\n        // if (!isEquivalent(prevProps.locations, this.props.locations)) {\n        //     this.calculateD3Geometry()\n        //     this.bindZoomListener()\n        // }\n\n\n        // if a widget page is open, disable window event listeners so events work normally within the widget page\n        const { widgetPage } = this.props.match.params    // contains url params from route.\n        if (widgetPage) {\n            document.removeEventListener(\"dragend\", this.validateNewLocation)\n        } else {\n            // reattach event listeners if necessary\n            document.addEventListener('dragend', this.validateNewLocation, { capture: false, passive: true });\n        }\n\n        // if (this.props.currentMap != null && !isEquivalent(prevProps.locations, this.props.locations)) {\n        //     let locations = this.props.locations\n        //     locations.forEach((location, ind) => {\n        //         locations[ind].x = this.d3.translate[0] + this.d3.scale*(location.pos_x/this.props.currentMap.resolution)\n        //         locations[ind].y = this.d3.translate[1] + this.d3.scale*(this.d3.boundingClientHeight - location.pos_y/this.props.currentMap.resolution)\n        //     })\n        //     this.props.onUpdateLocations(locations)\n        // }\n    }\n\n\n    /* ========== Map Functions ========== */\n\n    /***\n     * Refreshes the map and all map entities\n     */\n    refreshMap = () => {\n        if (!!this.props.maps[0]) {\n            this.props.dispatchGetMap(this.props.maps[0].guid)\n        }\n    }\n\n    openLocation = () => {\n        return <Route path={[\"/locations\"]} />\n    }\n\n\n\n    // ---------- Functionality for adding new location ---------- //\n\n    /**\n     * Handles Draging new locations onto the map\n     *\n     * @param {*} e\n     */\n    dragNewEntity = e => {\n        if (!this.mouseDown) return\n\n        // Handle Stations\n        if (!!this.props.selectedStation && this.props.selectedStation.temp === true) {\n            this.props.dispatchSetStationAttributes(this.props.selectedStation._id, {\n                x: e.clientX,\n                y: e.clientY\n            })\n        }\n\n        // Handle Positions\n        else if (!!this.props.selectedPosition && this.props.selectedPosition.temp === true && this.props.selectedPosition.schema !== \"temporary_position\") {\n            this.props.dispatchSetPositionAttributes(this.props.selectedPosition._id, {\n                x: e.clientX,\n                y: e.clientY\n            })\n        }\n\n        // Else it's a stations child position\n        else if (!!this.props.selectedStationChildrenCopy) {\n            const draggingChild = Object.values(this.props.selectedStationChildrenCopy).find(position => position.temp === true)\n            if (!!draggingChild && !this.props.selectedPosition) {\n                this.props.dispatchSetPositionAttributes(draggingChild._id, {\n                    x: e.clientX,\n                    y: e.clientY\n                })\n            }\n\n        }\n\n    }\n\n    /**\n     * This runs on mouse up\n     * Handles adding pos_x and pos_y to new locations\n     * pos_x and pos_y are the real x and y relations of the location to the map\n     */\n    validateNewEntity = () => {\n\n        // Handle Stations\n        if (!!this.props.selectedStation && this.props.selectedStation.temp === true) {\n            const pos = convertD3ToReal([this.props.selectedStation.x, this.props.selectedStation.y], this.d3)\n            this.props.dispatchSetStationAttributes(this.props.selectedStation._id, {\n                pos_x: pos[0],\n                pos_y: pos[1],\n                temp: false\n            })\n        }\n\n        // Handle Posiitions\n        else if (!!this.props.selectedPosition && this.props.selectedPosition.temp === true && this.props.selectedPosition.schema !== \"temporary_position\") {\n            const pos = convertD3ToReal([this.props.selectedPosition.x, this.props.selectedPosition.y], this.d3)\n            this.props.dispatchSetPositionAttributes(this.props.selectedPosition._id, {\n                pos_x: pos[0],\n                pos_y: pos[1],\n                temp: false\n            })\n        }\n\n        // Handle child positions of stations\n        else if (!!this.props.selectedStationChildrenCopy) {\n            let newChildEntity = Object.values(this.props.selectedStationChildrenCopy).find(position => position.temp == true)\n            if (!!newChildEntity) {\n\n                // Update the new entity to the edited child copy\n                // Uses copy instead of the naked state in case you dont want to keep changes\n                newChildEntity = this.props.selectedStationChildrenCopy[newChildEntity._id]\n\n                const pos = convertD3ToReal([newChildEntity.x, newChildEntity.y], this.d3)\n                this.props.dispatchSetPositionAttributes(newChildEntity._id, {\n                    pos_x: pos[0],\n                    pos_y: pos[1],\n                    temp: false\n                })\n            }\n        }\n    }\n\n    /* ========== D3 Functions ========== */\n\n    /***\n     * Binds the d3 listener that listens for zoom events. Conveniently it also listens to\n     * drag events, so this will take care of both\n     */\n    bindZoomListener = () => {\n        const { scaleExtent } = this.props\n        const { resolution } = this.state.currentMap\n        const { translate, scale } = this.d3\n        const svg = d3.select(`.${this.rd3tSvgClassName}`)\n        const map = d3.selectAll(`.${this.rd3tMapClassName}`)\n\n        let x, y\n        svg.call(\n            d3.behavior\n                .zoom()\n                .scaleExtent([-100, 100])\n                // .scaleExtent([scaleExtent.min, scaleExtent.max])\n                .on('zoom', () => {\n                    // Disables the ability to hover over location on mouse drag when a location is selected that is not new or a right click\n                    if ((!!this.props.selectedStation || (!!this.props.selectedPosition && this.props.selectedPosition.schema !== 'temporary_position')) && (!this.props.editingStation || !this.props.editingPosition)) {\n                        this.props.dispatchHoverStationInfo(null)\n                    }\n\n                    //// Saving the last event is usefull for saving d3 state when draggable is toggled (when moving locations)\n                    this.lastEvent = d3.event\n                    let { stations, positions, devices } = this.props\n\n\n                    //// Apply the event translation to image\n                    map.attr('transform', `translate(${d3.event.translate}) scale(${d3.event.scale})`)\n                    this.d3 = {\n                        ...this.d3,\n                        translate: d3.event.translate,\n                        scale: d3.event.scale\n                    }\n\n                    //// Apply the event translation to each station\n                    Object.values(stations).forEach(station => {\n\n                        [x, y] = convertRealToD3([station.pos_x, station.pos_y], this.d3)\n                        station = {\n                            ...station,\n                            x: x,\n                            y: y,\n                        }\n                        stations[station._id] = station\n\n                    })\n\n                    // Apply the event translation to selectedStation if there is one\n                    let updatedSelectedStation = null\n                    if (!!this.props.selectedStation) {\n                        [x, y] = convertRealToD3([this.props.selectedStation.pos_x, this.props.selectedStation.pos_y], this.d3)\n                        updatedSelectedStation = this.props.selectedStation\n                        updatedSelectedStation = {\n                            ...updatedSelectedStation,\n                            x: x,\n                            y: y,\n                        }\n\n                    }\n\n                    this.props.dispatchUpdateStations(stations, updatedSelectedStation, this.d3) // Bulk Update\n\n                    //// Apply the event translation to each position\n                    Object.values(positions).forEach(position => {\n\n                        [x, y] = convertRealToD3([position.pos_x, position.pos_y], this.d3)\n                        position = {\n                            ...position,\n                            x: x,\n                            y: y,\n                        }\n\n                        positions[position._id] = position\n\n                    })\n\n                    // Apply the event translation to selectedPosition if there is one\n                    let updatedSelectedPosition = null\n                    if (!!this.props.selectedPosition) {\n                        [x, y] = convertRealToD3([this.props.selectedPosition.pos_x, this.props.selectedPosition.pos_y], this.d3)\n                        updatedSelectedPosition = this.props.selectedPosition\n                        updatedSelectedPosition = {\n                            ...updatedSelectedPosition,\n                            x: x,\n                            y: y,\n                        }\n                    }\n\n                    // Apple the event translation to Children Copy if need be\n                    let updatedChildrenPositions = null\n                    if (!!this.props.selectedStationChildrenCopy) {\n                        updatedChildrenPositions = {}\n                        Object.values(this.props.selectedStationChildrenCopy).forEach(position => {\n                            [x, y] = convertRealToD3([position.pos_x, position.pos_y], this.d3)\n\n                            position = {\n                                ...position,\n                                x: x,\n                                y: y,\n                            }\n                            updatedChildrenPositions[position._id] = position\n\n                        })\n                    }\n\n                    this.props.dispatchUpdatePositions(positions, updatedSelectedPosition, updatedChildrenPositions, this.d3) // Bulk Update\n\n                    //// Apply the event translation to each mobile device\n                    Object.values(devices).filter(device => device.device_model == 'MiR100').map(device => {\n                        [x, y] = convertRealToD3([device.position.pos_x, device.position.pos_y], this.d3)\n\n                        device.position = {\n                            ...device.position,\n                            x: x,\n                            y: y,\n                        }\n                        devices[device._id] = device\n                    })\n                    this.props.dispatchUpdateDevices(devices, this.d3) // Bulk Update\n\n                    // Once zoomed or dragged, stop initializing locations with transforms, instead now let the listener handle that. Otherwise zoom gets jumpy\n                    if (this.initialRender) { this.initialRender = false }\n                })\n                .on('zoomend', () => {\n\n                })\n                // Offset so that first pan and zoom does not jump back to [0,0] coords\n                .scale(scale)\n                .translate(translate),\n        );\n    }\n\n    /**\n     * Overwrite the listener we described above /\\ to be null\n     * (basically dont listen to drag/zoom events)\n     */\n    unbindZoomListener = () => {\n        const { rd3tSvgClassName } = this\n\n        const svg = d3.select(`.${rd3tSvgClassName}`);\n        svg.call(d3.behavior.zoom().on('zoom', null))\n    }\n\n    onDisableDrag = () => {\n        if (this.draggable) {\n            this.draggable = false\n            this.unbindZoomListener()\n        }\n    }\n\n    onEnableDrag = () => {\n        if (!this.draggable) {\n            this.draggable = true\n            this.bindZoomListener()\n        }\n    }\n\n    onWidgetDisableDrag = () => {\n        if (this.widgetDraggable) {\n            this.widgetDraggable = false\n            this.unbindZoomListener()\n        }\n    }\n\n    onWidgetEnableDrag = () => {\n        if (!this.widgetDraggable) {\n            this.widgetDraggable = true\n            this.bindZoomListener()\n        }\n    }\n\n    /**\n     * x: 0,\n     * y: 0property, instead of going\n     * through D3's scaling mechanism, which would have picked up both properties.\n     *\n     * @return {object} {translate: {x: number, y: number}, zoom: number}\n     */\n    calculateD3Geometry = () => {\n        let { locations } = this.props\n        let { resolution } = this.state.currentMap\n\n        let scale\n        if (this.props.zoom > this.props.scaleExtent.max) {\n            scale = this.props.scaleExtent.max;\n        } else if (this.props.zoom < this.props.scaleExtent.min) {\n            scale = this.props.scaleExtent.min;\n        } else {\n            scale = this.props.zoom;\n        }\n\n        let translate\n        if (!!this.mapContainer && !!this.mapImage) {\n\n            const cHeight = this.mapContainer.getBoundingClientRect().height\n            const cWidth = this.mapContainer.getBoundingClientRect().width\n\n            const iHeight = this.mapImage.getBoundingClientRect().height\n            const iWidth = this.mapImage.getBoundingClientRect().width\n\n            const iNatHeight = this.naturalImageDimensions.height\n            const iNatWidth = this.naturalImageDimensions.width\n\n\n\n            // Apply translations to map.\n            // The map is translated by half the container dims, and then back by\n            // half the image dims. This leaves it in the middle of the screen\n            translate = {\n                x: this.props.translate.x + cWidth / 2 - iWidth / 2,\n                y: this.props.translate.y + cHeight / 2 - iHeight / 2,\n            }\n\n            // Save necessary variables\n            this.d3 = {\n                translate: [translate.x, translate.y],\n                scale: scale,\n                mapResolution: resolution,\n                // imgResolution: iNatWidth / iWidth,\n                imgResolution: 1,\n                actualDims: {\n                    height: iHeight,\n                    width: iWidth\n                },\n                naturalDims: {\n                    height: iNatHeight,\n                    width: iNatWidth\n                },\n            }\n\n\n            let x, y\n            let { stations, positions, devices } = this.props\n            //// Apply the event translation to each station\n            Object.values(stations).forEach(station => {\n                [x, y] = convertRealToD3([station.pos_x, station.pos_y], this.d3)\n                station = {\n                    ...station,\n                    x: x,\n                    y: y,\n                }\n                stations[station._id] = station\n            })\n            this.props.dispatchUpdateStations(stations, null, this.d3) // Bulk Update\n\n            //// Apply the event translation to each position\n            Object.values(positions).forEach(position => {\n                [x, y] = convertRealToD3([position.pos_x, position.pos_y], this.d3)\n                position = {\n                    ...position,\n                    x: x,\n                    y: y,\n                }\n                // TODO: Delete\n                // Object.assign(position, { x, y })\n                positions[position._id] = position\n            })\n            this.props.dispatchUpdatePositions(positions, null, null, this.d3) // Bulk Update\n\n            //// Apply the event translation to each mobile device\n            Object.values(devices).filter(device => device.device_model == 'MiR100').map(device => {\n                [x, y] = convertRealToD3([device.position.pos_x, device.position.pos_y], this.d3)\n                device.position = {\n                    ...device.position,\n                    x: x,\n                    y: y,\n                }\n                devices[device._id] = device\n            })\n            this.props.dispatchUpdateDevices(devices, this.d3) // Bulk Update\n\n        } else {\n            translate = this.props.translate\n        }\n\n        // Set the initial map translation\n        const map = d3.selectAll(`.${this.rd3tMapClassName}`)\n        map.attr('transform', `translate(${translate.x},${translate.y}) scale(${scale})`)\n\n    }\n\n    // This handles the event when an onContextMenu is triggered in the svg containing the map\n    // It prevents the defaul menu for appearing and sets the state for the custom menu to appear\n    // Passes along x and y for the cusotm menu\n    // Go to right_click_menu to follow how the click logic works\n    handleRightClickMenu = (e) => {\n        e.preventDefault()\n        this.setState({ showRightClickMenu: { x: e.clientX, y: e.clientY } });\n    }\n\n\n    render() {\n        let { stations, positions, devices, selectedStation, selectedPosition, selectedStationChildrenCopy, deviceEnabled } = this.props\n        const { hasStartAndEnd } = this.state\n        if (this.state.currentMap == null) {\n\n           return (<></>)\n          }\n        const { translate, scale } = this.d3;\n\n        return (\n            <div style={{ width: '100%', height: '100%' }} onMouseMove={this.dragNewEntity} onMouseUp={this.validateNewLocation} >\n                <styled.MapContainer ref={mc => (this.mapContainer = mc)} style={{ pointerEvents: this.widgetDraggable ? 'default' : 'none' }}>\n\n                    <MapApps />\n\n                    {/* Commented out for now */}\n                    {/* <Zones/> */}\n\n                    {/* Right menu */}\n                    {Object.keys(this.state.showRightClickMenu).length > 0 &&\n                        <RightClickMenu coords={this.state.showRightClickMenu} buttonClicked={() => { this.setState({ showRightClickMenu: {} }) }} d3={this.d3} />\n                    }\n\n                    {/* SVG element is the container for the whole view. This allows the view to be moved as one */}\n                    <svg\n                        className={this.rd3tSvgClassName}\n                        width=\"100%\"\n                        height=\"100%\"\n\n                        // onClick only registers on left click so this works as a way to hide the menu\n                        onClick={() => { this.setState({ showRightClickMenu: {} }) }}\n                        onContextMenu={(e) => { this.handleRightClickMenu(e) }}\n\n                        // These 2 mouse events are used to remove the issue when moving the mouse too fast over a location causing a widget to load, but not fast enough for the onmouselave to execute\n                        onMouseEnter={() => {\n                            if (!!this.props.widgetLoaded) {\n                                // If there is a selected location and its not the right click menu location then hide\n                                // should always show widget if its the right click menu\n                                if ((!!this.props.selectedStation || (!!this.props.selectedPosition && this.props.selectedPosition.schema !== 'temporary_position')) && (!this.props.editingStation || !this.props.editingPosition)) {\n                                    this.props.dispatchHoverStationInfo(null)\n                                    this.props.dispatchSetSelectedStation(null)\n                                    this.props.dispatchSetSelectedPosition(null)\n                                }\n                            }\n                        }}\n                        onMouseOver={() => {\n                            if (!!this.props.widgetLoaded) {\n                                // If there is a selected location and its not the right click menu location then hide\n                                // should always show widget if its the right click menu\n                                if ((!!this.props.selectedStation || (!!this.props.selectedPosition && this.props.selectedPosition.schema !== 'temporary_position'))) {\n                                    this.props.dispatchHoverStationInfo(null)\n\n                                    if (!this.props.editingStation || !this.props.editingPosition) {\n                                        this.props.dispatchSetSelectedStation(null)\n                                        this.props.dispatchSetSelectedPosition(null)\n                                    }\n                                }\n                            }\n                        }}\n\n                    > {/* Clears any unfinished drag events (ex: moving location) */}\n                        <styled.MapGroup\n                            className={this.rd3tMapClassName}\n\n                        >\n                            {/* Foreign object allows an image to be put in the SVG container */}\n                            <foreignObject width='200%' height='200%' >\n                                {!!this.state.currentMap &&\n                                    <styled.MapImage ref={mi => (this.mapImage = mi)}\n                                        tall={!!this.mapContainer && // Fixes the map sizing - cutoff issue\n                                            this.mapContainer.getBoundingClientRect().height / this.naturalImageDimensions.height\n                                            >\n                                            this.mapContainer.getBoundingClientRect().width / this.naturalImageDimensions.width}\n\n                                        src={'data:image/png;base64, ' + this.state.currentMap.map}\n                                        onLoad={() => {\n\n                                            this.naturalImageDimensions = {\n                                                height: this.mapImage.naturalHeight,\n                                                width: this.mapImage.naturalWidth\n                                            }\n                                            // Geometry changes once the image finishes loading, so the geometry needs to be reclaculated\n                                            // and the zoom listener needs to be re-bound to the new translations\n                                            this.calculateD3Geometry()\n                                            this.setState({\n                                                resolution: this.state.currentMap.resolution\n                                            }, () => this.bindZoomListener())\n                                        }}\n                                    >\n                                    </styled.MapImage>\n                                }\n                            </foreignObject>\n                        </styled.MapGroup>\n\n                        {!!this.props.selectedTask && (hasStartAndEnd || this.props.editingTask) &&\n                            <TaskPaths d3={this.d3} />\n                        }\n\n                        {!!this.props.selectedHoveringTask &&\n                            <TaskPaths d3={this.d3} />\n                        }\n\n                        {!!this.props.selectedProcess &&\n                            <ProcessPaths d3={this.d3} />\n                        }\n\n                        <defs>\n                            {/* a transparent glow that takes on the colour of the object it's applied to */}\n                            <filter id=\"glow\">\n                                <feGaussianBlur stdDeviation=\"1\" result=\"coloredBlur\" />\n                                <feMerge>\n                                    <feMergeNode in=\"coloredBlur\" />\n                                    <feMergeNode in=\"SourceGraphic\" />\n                                </feMerge>\n                            </filter>\n                        </defs>\n\n                        {!!this.state.resolution && !!this.mapImage &&\n                            <>\n\n                                {this.props.settings.mapApps.heatmap &&\n                                    <HeatMap map_id={this.state.currentMap?._id} d3Scale={this.d3.scale} />\n                                }\n\n                                {this.props.settings.mapApps.ratsnest &&\n                                    <RatsNest map_id={this.state.currentMap?._id} d3Scale={this.d3.scale} />\n                                }\n\n                                \n\n                                <>{\n                                    //// Render Locations\n                                    Object.values(stations)\n                                        .filter(station => (station.map_id === this.state.currentMap?._id))\n                                        .map((station, ind) =>\n\n                                            <>\n                                                <Station\n                                                    key={`loc-${ind}`}\n                                                    // If there is a selected station, then render the selected station vs station in redux\n                                                    // Selected station could contain local edits that are not on the backend (naked redux) yet\n                                                    station={(!!selectedStation && station._id === selectedStation._id) ? selectedStation : station}\n                                                    // station={station}\n                                                    rd3tClassName={`${this.rd3tStationClassName}_${ind}`}\n                                                    d3={this.d3}\n                                                    handleEnableDrag={this.onEnableDrag}\n                                                    handleDisableDrag={this.onDisableDrag}\n                                                    // Mouse down is used to disabling hovering when the mouse is down on the map\n                                                    mouseDown={this.mouseDown}\n                                                />\n                                            </>\n                                        )\n                                }</>\n\n                                <>{\n                                    //// Render children positions if appropriate\n                                    Object.values(positions)\n                                        .filter(position => (position.map_id === this.state.currentMap?._id))\n                                        .map((position, ind) =>\n                                            <Position\n                                                key={`pos-${ind}`}\n                                                position={\n                                                    (!!selectedPosition && position._id === selectedPosition._id) ?\n                                                        // If there is a selected station, then render the selected station vs station in redux\n                                                        // Selected station could contain local edits that are not on the backend (naked redux) yet\n                                                        selectedPosition\n                                                        :\n                                                        // If the positions parent is currently being edited\n                                                        (!!selectedStationChildrenCopy && position._id in selectedStationChildrenCopy) ?\n                                                            selectedStationChildrenCopy[position._id]\n                                                            :\n                                                            position\n                                                }\n                                                rd3tClassName={`${this.rd3tPosClassName}_${ind}`}\n                                                d3={this.d3}\n                                                handleEnableDrag={this.onEnableDrag}\n                                                handleDisableDrag={this.onDisableDrag}\n                                                // Mouse down is used to disabling hovering when the mouse is down on the map\n                                                mouseDown={this.mouseDown}\n                                            />\n\n                                        )\n                                }</>\n\n                                <>{\n                                    //// Render mobile devices\n                                    (devices === undefined || !deviceEnabled) ?\n                                        <></>\n                                        :\n                                        Object.values(devices).filter(device => device.device_model == 'MiR100').map((device, ind) =>\n                                            <>\n                                                {device.connected == true &&\n                                                    <MiR100 key={device._id}\n                                                        device={device}\n                                                        d3={this.d3}\n                                                    />\n                                                }\n                                            </>\n\n                                        )\n                                }</>\n                            </>\n                        }\n                    </svg>\n\n                    {(!!this.props.selectedTask || !!this.props.selectedHoveringTask) &&\n                        <TaskStatistics d3={this.d3} />\n                    }\n\n                    {!!this.props.showRouteConfirmation &&\n                        <RouteConfirmation d3={this.d3} />\n                    }\n\n                    {!!this.props.devices &&\n                        Object.values(this.props.devices).map((device) => {\n                            if (!!device.current_task_queue_id && !!this.props.taskQueue[device.current_task_queue_id] && !!this.props.taskQueue[device.current_task_queue_id].custom_task && !!this.props.taskQueue[device.current_task_queue_id].custom_task.coordinate) {\n                                const [x, y] = convertRealToD3([this.props.taskQueue[device.current_task_queue_id].custom_task.coordinate.pos_x, this.props.taskQueue[device.current_task_queue_id].custom_task.coordinate.pos_y], this.d3)\n\n                                return (\n                                    <CartWaypoint\n                                        x={x}\n                                        y={y}\n                                    />\n                                )\n                            }\n                        })\n                    }\n\n                    {/* Widgets are here when not in mobile mode. If mobile mode, then they are in App.js.\n                    The reasoning is that the map unmounts when in a widget while in mobile mode (for performance reasons). */}\n                    {this.props.hoveringInfo !== null && !this.mobileMode &&\n                        <Widgets />\n                    }\n\n\n                </styled.MapContainer>\n\n            </div >\n        )\n    }\n}\n\nMapView.defaultProps = {\n    scaleExtent: { min: 0, max: 6 },\n    zoomable: true,\n    zoom: 1,\n    translate: { x: 0, y: 0 },\n\n}\n\nconst mapStateToProps = function (state) {\n    return {\n        maps: state.mapReducer.maps,\n        currentMapId: state.settingsReducer.settings.currentMapId,\n        deviceEnabled: state.settingsReducer.settings.deviceEnabled,\n        settings: state.settingsReducer.settings,\n\n        devices: state.devicesReducer.devices,\n        positions: state.positionsReducer.positions,\n        stations: state.stationsReducer.stations,\n        tasks: state.tasksReducer.tasks,\n        taskQueue: state.taskQueueReducer.taskQueue,\n        showRouteConfirmation: state.tasksReducer.showRouteConfirmation,\n\n        selectedStation: state.stationsReducer.selectedStation,\n        selectedStationChildrenCopy: state.positionsReducer.selectedStationChildrenCopy,\n        selectedPosition: state.positionsReducer.selectedPosition,\n        editingStation: state.stationsReducer.editingStation,\n        editingPosition: state.positionsReducer.editingPosition,\n\n        selectedTask: state.tasksReducer.selectedTask,\n        selectedHoveringTask: state.tasksReducer.selectedHoveringTask,\n        editingTask: state.tasksReducer.editingTask,\n        selectedProcess: state.processesReducer.selectedProcess,\n        fixingProcess: state.processesReducer.fixingProcess,\n\n        hoveringInfo: state.widgetReducer.hoverStationInfo,\n        widgetLoaded: state.widgetReducer.widgetLoaded,\n\n    };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        dispatchGetMap: (map_id) => dispatch(getMap(map_id)),\n        dispatchSetCurrentMap: (map) => dispatch(setCurrentMap(map)),\n        dispatchPostSettings: (settings) => dispatch(postSettings(settings)),\n\n        dispatchUpdateStations: (stations, selectedStation, d3) => dispatch(updateStations(stations, selectedStation, d3)),\n        dispatchUpdatePositions: (positions, selectedPosition, childrenPositions, d3) => dispatch(updatePositions(positions, selectedPosition, childrenPositions, d3)),\n        dispatchUpdateDevices: (devices, d3) => dispatch(deviceActions.updateDevices(devices, d3)),\n\n        dispatchPostPosition: (position) => dispatch(postPosition(position)),\n        dispatchSetStationAttributes: (id, attr) => dispatch(setStationAttributes(id, attr)),\n        dispatchSetPositionAttributes: (id, attr) => dispatch(setPositionAttributes(id, attr)),\n        dispatchSetSelectedStation: (station) => dispatch(setSelectedStation(station)),\n        dispatchSetSelectedPosition: (position) => dispatch(setSelectedPosition(position)),\n\n        dispatchHoverStationInfo: (info) => dispatch(hoverStationInfo(info)),\n        dispatchWidgetLoaded: (bool) => dispatch(widgetLoaded(bool)),\n\n\n    };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(MapView))\n","import styled, { css } from 'styled-components'\nimport {containerCss} from \"../hil_modals.style\";\nimport Modal from 'react-modal';\n\n\nexport const Container = styled(Modal)`\n    ${containerCss};\n    background: ${ props => props.theme.bg.secondary};\n    padding: 2rem;\n    justify-content: center;\n`","import React, { useState, useMemo, useEffect } from 'react';\n\n// Import Styles\nimport * as hilStyles from '../hil_modals.style'\nimport * as styled from './hil_success.style'\n\nconst HILSuccess = (props) => {\n\n    return(\n        <styled.Container\n            isOpen={true}\n            style={{\n                overlay: {\n                    zIndex: 5000,\n                    backgroundColor: 'rgba(0, 0, 0, 0.25)',\n                    backdropFilter: 'blur(5px)',\n                    transition: 'backdrop-filter 3s ease',\n                },\n                content: {\n                    zIndex: 5000,\n                },\n            }}\n        >\n            <hilStyles.HilIcon color='green' style={{fontSize:'6rem'}} className='fas fa-check'/>\n            <hilStyles.HilMessage>Task has been added to the Queue</hilStyles.HilMessage>\n        </styled.Container>\n    )\n}\n\nexport default HILSuccess","import React, { useState, useMemo, useRef, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useParams, useHistory } from 'react-router-dom'\n\n// Import Components\nimport HILModals from '../../components/hil_modals/hil_modals'\nimport HILSuccess from '../../components/hil_modals/hil_modals_content/hil_success'\nimport { deepCopy } from '../../methods/utils/utils';\nimport { setShowModalId } from '../../redux/actions/task_queue_actions'\n\nconst HILModal = () => {\n\n    const params = useParams()\n    const dispatch = useDispatch()\n\n    // Adds HIL timer to taskQueueReducer so it can be used in other areas such as status_header\n    const onSetHilTimers = (timers) => dispatch({ type: 'HIL_TIMERS', payload: timers })\n    const onSetActiveHilDashboards = (active) => dispatch({ type: 'ACTIVE_HIL_DASHBOARDS', payload: active })\n    const onSetShowModalId = (id) => dispatch(setShowModalId(id))\n\n    let status = useSelector(state => { return state.statusReducer.status })\n    const dashboards = useSelector(state => { return state.dashboardsReducer.dashboards })\n    const taskQueue = useSelector(state => state.taskQueueReducer.taskQueue)\n    const taskQueueItemClicked = useSelector(state => state.taskQueueReducer.taskQueueItemClicked)\n    const stations = useSelector(state => state.stationsReducer.stations)\n    const hilTimers = useSelector(state => state.taskQueueReducer.hilTimers)\n    const tasks = useSelector(state => state.tasksReducer.tasks)\n    const hilResponse = useSelector(state => state.taskQueueReducer.hilResponse)\n    const activeHilDashboards = useSelector(state => state.taskQueueReducer.activeHilDashboards)\n    const devices = useSelector(state => state.devicesReducer.devices)\n    let selectedTask = useSelector(state => state.tasksReducer.selectedTask)\n    const localHumanTask = useSelector(state => state.taskQueueReducer.localHumanTask)\n    const showModalId = useSelector(state => state.taskQueueReducer.showModalID)\n    const [statusTimerIntervals, setStatusTimerIntervals] = useState({})\n    const dashboardID = params.dashboardID\n    const stationID = params.stationID\n    const deviceDashboard = !!devices ? !!devices[stationID] : false\n\n    /**\n     * Handles any task that should be displaying a HIL\n     * useMemo for performance reasons, should only rerender if taskQueue changes and dashbaordID params\n     */\n    const handleHilsInTaskQueue = useMemo(() => {\n        // Handles if a task queue item was clicked and displays that item\n        if (!!taskQueueItemClicked && !!taskQueue[taskQueueItemClicked]) {\n\n            const item = taskQueue[taskQueueItemClicked]\n            const type = item.device_type\n            const hilType = tasks[item.task_id].type\n\n            // Sets the HIL Message, the reason why it would undefined is that its a human load task\n            // Since a human load task needs to immediatly show, its immediatly put into the task Q vs telling the backend to put it into the task Q\n            // since it doesnt come from the backend, there's no hil message in the task Q Item\n            let hilMessage = item.hil_message\n            if (!hilMessage) {\n                hilMessage = tasks[item.task_id].load.instructions\n            }\n\n            if (type === 'human') {\n                onSetShowModalId(item._id)\n            }\n\n            else if (!!taskQueue[taskQueueItemClicked].hil_station_id) {\n                onSetShowModalId(item._id)\n            }\n\n            //else {return null}\n        }\n\n        // Used to hide the HIL if success was clicked. (See HIL_Modals)\n        if (hilResponse === 'load') {\n            return <HILSuccess />\n        }\n        if (hilResponse === 'unload') return\n\n        return Object.values(taskQueue).forEach((item) => {\n            const id = item._id\n\n            // If the task queue item has a HIL and it's corresponding dashboard id is not in the activeHILDasbaords list then display HIL.\n            // Dashboards can only have 1 HIL at a time, if the task queue has 2 HILS for the same dashboards, then only read the\n            // most recent in the list\n            //\n            // Do not display HIL if the tasks device type is human, if it's a human, and unload button will appear on the dashboard\n            if (!!item.hil_station_id && !!tasks[item.task_id] && item.device_type !== 'human') {\n\n                // Loops through all ascociated dashboards at that location\n                stations[item.hil_station_id].dashboards.forEach((dashboard) => {\n\n                    // if the list of active hil dashboards does not include the dashboard then add\n                    if (!Object.keys(activeHilDashboards).includes(dashboard)) {\n                        // activeHilDashboards.push(dashboard)\n                        onSetActiveHilDashboards({\n                            ...activeHilDashboards,\n                            [dashboard]: id,\n                        })\n                    }\n                })\n\n                // If active hils matches the dashboard selected (found in params) then display hil\n                // if (dashboardID === item.hil_station_id && !dashboards[dashboardID].unsubcribedHILS.includes(item.hil.taskID)) {\n                if (Object.keys(activeHilDashboards).includes(dashboardID) && !showModalId) {\n                    onSetShowModalId(item._id)\n                }\n\n                // If a device dashboard, then show all associated HILs\n                else if (deviceDashboard) {\n                    onSetShowModalId(item._id)\n                }\n                else {\n                    //return null\n                }\n            }\n\n            // Else if the task q item has a dashboardID and the dashboardID matches current dashboard, then show that dashboard\n            // The reason this happens is that it's a human task and the person hit a dashboard button (see dashboard_screen).\n            // The HIL modal needs to immediatly show because the backend will be too slow to respond to show that dashboard after button click\n            else if (!!item.dashboard && item.dashboard === dashboardID && localHumanTask === item._id) {\n\n                let hilMessage = item.hil_message\n                if (!hilMessage) {\n                    hilMessage = tasks[item.task_id].load.instructions\n                }\n                if (item.hil_response !== false) {\n                    onSetShowModalId(item._id)\n                }\n\n            }\n\n            // If there is a modal ID, but the corresponding Task Q item either doesnt have a station id (the task q item is in between load and unload) or the task q item doesnt exits anymore\n            // Then remove the modal id and close the hil\n            // Keep in mind that there is a useEffect in hil_modals that has a return statement that deletes the active hil dashboard from the activeHilDashboarsd object\n            // Thats why Its not done here\n            else if (!!showModalId && (!taskQueue[showModalId] || taskQueue[showModalId].hil_station_id === null)) {\n                onSetShowModalId(null)\n            }\n\n        })\n\n    }, [taskQueue, dashboardID, taskQueueItemClicked, hilResponse, localHumanTask])\n\n\n    const renderHIL = useMemo(() => {\n        if (showModalId !== null && !!taskQueue && Object.values(taskQueue).length > 0 && taskQueue[showModalId] !== undefined) {\n            const item = taskQueue[showModalId]\n            let hilMessage = item.hil_message\n\n            const task = tasks[item.task_id]\n            const hilType = task.type\n            if (item.device_type === 'human') {\n                const loadStation = stations[task.load.station]\n                // If its the load station includes the task q item dashboard, then its a load hil, show load isntructions\n                if (loadStation.dashboards.includes(item.dashboard)) {\n                    hilMessage = task.load.instructions\n                }\n                // Else unload messsage\n                else {\n                    hilMessage = task.unload.instructions\n\n                }\n            }\n            return <HILModals hilMessage={hilMessage} hilType={hilType} taskQuantity={item.quantity} taskQueueID={item._id} item={item} />\n        }\n        else {\n            return null\n        }\n\n    },[taskQueue, showModalId, tasks])\n\n    /**\n     * Handles HIL timers and adds them to Redux\n     *\n     * Logic in this function is a little confusing at first.\n     *\n     * What this does is map through each item in the task Q and give that Item an interval based on the times sent from the back end\n     * But, if this item already has an interval, don't add a new one to it.\n     * If the interval is running, but the Task Q item does not have a station ID, then a HIL should not be displaying so remove the current interval\n     *\n     * After the first maping loop there's an if statement to make sure that the interval's task Q item is still in the task Q, if it's not, then remove the interval\n     */\n    const handleHILTimers = useMemo(() => {\n\n        Object.keys(taskQueue).forEach((id, ind) => {\n\n            const item = taskQueue[id]\n\n            // If the item in task queue has an ascociated station_id, a hil must be displaying\n            if (!!item.hil_station_id) {\n\n                // If the state of timers running includes the task queue id, that means the timer is still running\n                if (!!statusTimerIntervals[id]) {\n                }\n\n                // If the state doesnt include the task queue id, then the timer hasn't started yet on the front end\n                else if (!statusTimerIntervals[id]) {\n\n                    // Add the timer to the state, so multiple timers are not started\n                    setStatusTimerIntervals({\n                        ...statusTimerIntervals,\n                        [id]: true,\n                    })\n\n                    let startTime = item.hil_start_time\n                    let timer = item.hil_timeout\n\n                    //Get the time since Epoch\n                    const frontEndTime = Date.now() / 1000\n\n                    //Find the difference between the time of the front end vs the backend and set timer\n                    const biasedTime = frontEndTime - startTime\n                    let biasedTimer = timer - biasedTime\n\n                    //Timer interval in seconds\n                    const timerInterval = 1\n\n                    //Set the timer in state\n                    setStatusTimerIntervals({\n                        ...statusTimerIntervals,\n                        [id]: setInterval(() => {\n\n                            // Can change the timer interval\n                            biasedTimer = biasedTimer - timerInterval\n\n                            // Add the timer to r{edux\n                            onSetHilTimers({\n                                ...hilTimers,\n                                [item._id]: biasedTimer.toFixed(0),\n                            })\n                            //If the timer goes to Zero then stop the timer\n                            if (biasedTimer <= 0) {\n                                onSetHilTimers({\n                                    ...hilTimers,\n                                    [item._id]: 0,\n                                })\n\n                                // Update redux\n                                delete hilTimers[item._id]\n                                onSetHilTimers({\n                                    ...hilTimers,\n                                })\n\n                                //  Delete the timer in the state\n                                if (!!statusTimerIntervals[id]) {\n                                    clearInterval(statusTimerIntervals[id])\n                                    delete statusTimerIntervals[id]\n                                    setStatusTimerIntervals({\n                                        ...statusTimerIntervals,\n                                    })\n                                }\n\n                            }\n\n                        }, timerInterval * 1000)\n                    })\n                }\n\n            }\n\n            // If the task queue item does not have a station id but has a timer running, that means the timer should stop\n            else if (!item.hil_station_id && !!statusTimerIntervals[id]) {\n\n                const activeHilCopy = deepCopy(activeHilDashboards)\n\n                Object.keys(activeHilDashboards).forEach((dash) => {\n                    if (activeHilDashboards[dash] === id) {\n                        delete (activeHilCopy[dash])\n                    }\n                })\n\n                // Deletes the dashboard id from active list for the hil that has been responded too\n                onSetActiveHilDashboards(activeHilCopy)\n\n                // Clear the interval which is stored in state and delete that ID from state\n                clearInterval(statusTimerIntervals[id])\n                delete statusTimerIntervals[id]\n                setStatusTimerIntervals({\n                    ...statusTimerIntervals,\n                })\n\n                // Update redux\n                delete hilTimers[item._id]\n                onSetHilTimers({\n                    ...hilTimers,\n                })\n            }\n        })\n\n        // If the length of intervals is greater then 0 check to make sure the ascoiated task q item is still in task q\n        if (Object.keys(statusTimerIntervals).length > 0) {\n\n            Object.keys(statusTimerIntervals).forEach((id, ind) => {\n\n                // If Item is not in task q, end the interval\n                if (!taskQueue[id]) {\n                    clearInterval(statusTimerIntervals[id])\n                    delete statusTimerIntervals[id]\n                    setStatusTimerIntervals({\n                        ...statusTimerIntervals,\n                    })\n                }\n            })\n        }\n\n    }, [taskQueue, hilTimers])\n\n    const handleActiveHilDashboardRemoved = () => {\n\n        let hilRemoved = true\n\n        Object.keys(taskQueue).forEach((id, ind) => {\n            const item = taskQueue[id]\n\n        })\n\n    }\n\n    return (\n\n        <>\n            {handleHilsInTaskQueue}\n            {handleHILTimers}\n            {renderHIL}\n        </>\n    )\n}\n\nexport default HILModal\n","import styled from 'styled-components'\n\nimport { css } from \"@emotion/react\";\n\n\nexport const Container = styled.div`\n    display:flex;\n    flex-direction:column;\n    grid-template-columns: 1fr;\n    grid-gap: 0.1rem;\n    align-content: center;\n`\n\n\nexport const Input = styled.input`\n    width: 40rem;\n    border-radius: 15px;\n    font-size: 1.3rem;\n    font-weight: 400;\n    padding: 1rem;\n    margin: 1rem;\n    align-self: center;\n`\n\nexport const ErrorText = styled.p`\n    font-size: ${props => props.theme.fontSize.sz4};\n    font-family: ${props => props.theme.font.primary};\n    color: ${props => props.theme.bad};\n    width: 25rem;\n    margin-top: 0.5rem;\n    text-align: center;\n`\n\nexport const CapsIconContainer = styled.div`\n    transform: translate(-2rem, 0.3rem);\n    margin-right: -1.7rem;\n    border: 4px solid ${props => props.theme.bg.tertiary};\n    border-radius: 0.4rem;\n    height: 1.7rem;\n    width: 1.7rem;\n    position: relative;\n    box-sizing: border-box;\n`\n\nexport const CapsIcon = styled.i`\n    font-size: 1.6rem;\n    color: ${props => props.theme.bg.tertiary};\n    padding: 0;\n    transform: translate(-3px, -3px);\n`\n\nexport const Button = styled.button`\n    cursor: 'pointer';\n    width: 10rem;\n    border-radius: 0.3rem;\n    background-color: #FF4B4B;\n    color: white;\n    display: flex;\n    align-self: center;\n    justify-content: center;\n    padding: 0.5rem;\n    margin: 0.5rem;\n    border: none;\n    width: 100%;\n    margin-top: ${props => props.isSignIn ? '1rem' : '2rem'};\n    // box-shadow: 0 0.05rem 0.1rem 0rem #303030\n`\nexport const NoteText = styled.h4`\n    font-size: ${props => props.theme.fontSize.sz4};\n    font-family: ${props => props.theme.font.primary};\n    color: ${props => props.theme.bg.quaternary};\n    text-align: center;\n    width: 25rem;\n`\n\nexport const loaderCSS = css`\nmargin: 1rem;\ndisplay: flex;\nalign-self: center;\njustify-content: center;\n`;","import React, { useState } from 'react'\n\nimport {useHistory} from 'react-router-dom'\n\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { CognitoUserPool, AuthenticationDetails, CognitoUser } from 'amazon-cognito-identity-js'\n\nimport { Formik, Form } from 'formik'\n\n// Import Utils\nimport { signInSchema, signUpSchema } from '../../methods/utils/form_schemas'\n\n// Import Components\nimport TextField from '../basic/form/text_field/text_field'\nimport Textbox from '../basic/textbox/textbox'\n\nimport * as styled from './sign_in_up_page.style'\n\nimport {loaderCSS} from './sign_in_up_page.style'\n\nimport PropagateLoader from \"react-spinners/PropagateLoader\";\n\n// Import actions\nimport { postLocalSettings, getLocalSettings, } from '../../redux/actions/local_actions'\n\nimport configData from '../../settings/config'\n\n/**\n * This page handles both sign in and sign up for RMStudio\n * @param {signIn} props\n */\nconst SignInUpPage = (props) => {\n\n    // Hooks\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    // Dispatches\n    const dispatchPostLocalSettings = (settings) => dispatch(postLocalSettings(settings))\n    const dispatchGetLocalSettings = (settings) => dispatch(getLocalSettings(settings))\n\n    const localReducer = useSelector(state => state.localReducer.localSettings)\n\n    // Check to see if we want authentication *** Dev ONLY ***\n    if (!configData.authenticationNeeded) {\n        const localSettingsPromise = dispatchGetLocalSettings()\n        localSettingsPromise.then(response => {\n            dispatchPostLocalSettings({\n                ...response,\n                authenticated: 'no',\n                //non_local_api_ip: window.location.hostname,\n                //non_local_api: true,\n            })\n        })\n\n    }\n\n    // signIn prop is passed from authentication container to tell this page to show sign in or sign up components\n    const {\n        signIn\n    } = props\n\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [errorText, setErrorText] = useState('')\n\n    const [capsLock, setCapsLock] = useState(false)\n    const [loading, setLoading] = useState(false)\n\n    function handleSignInChange(event) {\n        // Here, we invoke the callback with the new value\n        props.onChange(event);\n    }\n\n    const handleSubmit = (values) => {\n\n        const {\n            email,\n            password,\n            confirmPassword\n        } = values\n\n        // User pool data for AWS Cognito\n        const poolData = {\n            UserPoolId: configData.UserPoolId,\n            ClientId: configData.ClientId,\n        }\n\n        const userPool = new CognitoUserPool(poolData)\n\n        // If the request is a sign in then run these functions\n        if (signIn) {\n\n            // This is setting up the header for the sign in request\n            const authenticationData = {\n                Username: email,\n                Password: password,\n            };\n\n            const authenticationDetails = new AuthenticationDetails(authenticationData)\n\n            const userData = {\n                Username: email,\n                Pool: userPool,\n            }\n\n            const cognitoUser = new CognitoUser(userData);\n\n            cognitoUser.authenticateUser(authenticationDetails, {\n\n                onSuccess: function (result) {\n                    dispatchPostLocalSettings({\n                        ...localReducer,\n                        authenticated: result.accessToken.payload.username,\n                        non_local_api_ip: window.location.hostname,\n                        non_local_api: true,\n                        refreshToken: true\n                    })\n\n\n                },\n\n                onFailure: function (err) {\n                    setErrorText(err.message)\n                    setLoading(false)\n                },\n\n            });\n        } else {\n            if (password === confirmPassword) {\n                userPool.signUp(email, password, [], null, (err, data) => {\n                    if (err) {\n                        if (err.message === 'Invalid version. Version should be 1') {\n                            setErrorText('Invalid email. Please use a valid email.')\n                            setLoading(false)\n                        } else {\n                            setErrorText(err.message)\n                            setLoading(false)\n                        }\n                    } else {\n                        setErrorText('You have successfully signed up! Please check you email for a verification link.')\n                        history.push('/')\n                        handleSignInChange(true)\n                        setLoading(false)\n                    }\n                });\n            } else {\n                setErrorText('Passwords must match!')\n                setLoading(false)\n            }\n        }\n    }\n\n    return (\n        <Formik\n            initialValues={{\n                email: email,\n                password: password,\n                confirmPassword: confirmPassword,\n            }}\n            initialTouched={{\n                email: true,\n                password: true,\n                confirmPassword: true,\n            }}\n\n            validateOnBlur={false}\n            validateOnChange={false}\n\n            // Chooses what schema to use based on whether it's a sign in or sign up\n            validationSchema={signIn ? signInSchema : signUpSchema}\n\n            onChange={() => {\n                console.log('changing');\n              }}\n\n            onSubmit={async (values, { setSubmitting }) => {\n\n                setSubmitting(true)\n                setLoading(true)\n\n                await handleSubmit(values)\n\n                setSubmitting(false)\n            }}\n\n        >\n            {(formikProps) => {\n\n                return (\n                    <Form\n                        onKeyDown={\n                            (keyEvent) => {\n                                if(keyEvent.keyCode === 20 || Event.KEY === \"CapsLock\") {\n                                    setCapsLock(!capsLock)\n                                }\n                                else {\n                                    if (keyEvent.getModifierState(\"CapsLock\")) {\n                                        setCapsLock(true)\n                                    } else {\n                                        setCapsLock(false)\n                                    }\n                                }\n                            }\n                        }\n                    >\n                        <styled.Container>\n                            <styled.ErrorText>\n                                {errorText}\n                            </styled.ErrorText>\n                            <TextField\n                                name={\"email\"}\n                                placeholder='Enter Email'\n                                type='text'\n                                InputComponent={Textbox}\n                                style={{\n                                    marginBottom: '.5em',\n                                    width: '25rem'\n                                }}\n                            />\n\n                            <div style={{display: 'flex', flexDirection: 'row'}}>\n                                {capsLock && <styled.CapsIconContainer><styled.CapsIcon className=\"fas fa-arrow-alt-circle-up\" /></styled.CapsIconContainer>}\n                                <TextField\n                                    name={\"password\"}\n                                    placeholder='Enter Password'\n                                    type='password'\n                                    InputComponent={Textbox}\n                                    style={{\n                                        marginBottom: '.5rem',\n                                        flexGrow: 1\n                                    }}\n                                />\n                            </div>\n\n                            {/* If sign in hasn't been selected show a confirm password for sign up */}\n                            {!signIn &&\n                                <TextField\n                                    name={\"confirmPassword\"}\n                                    placeholder='Enter Password'\n                                    type='password'\n                                    InputComponent={Textbox}\n                                    style={{\n                                        marginBottom: '.5rem',\n                                        width: '25rem'\n                                    }}\n                                />\n                            }\n\n                            {!signIn &&\n                                <styled.NoteText>\n                                    Note: Your password must be 8 charaters long and contain 1 upper case letter, 1 lower case letter, and 1 number\n                                </styled.NoteText>\n                            }\n\n                            {!loading &&\n                                <styled.Button isSignIn={signIn} type=\"submit\">{signIn ? 'Sign In' : 'Sign Up'}</styled.Button>\n                            }\n\n                            {loading &&\n                                <PropagateLoader color={'red'} loading={true} css={loaderCSS} />\n                            }\n\n                        </styled.Container>\n                    </Form>\n                )\n            }}\n\n        </Formik>\n    )\n}\n\nexport default SignInUpPage\n","import styled from 'styled-components'\n\nexport const Container = styled.div`\n    width: 40rem;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%,-60%);\n    border-radius: 10px;\n\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n\n    box-shadow: 0px 0px 6px 1px rgba(0,0,0,0.1);\n    padding: 4rem 6rem;\n`\n\nexport const LogoContainer = styled.div`\n    width: 100%;\n    height: auto;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    position: relative;\n    margin-bottom: 5%;\n    margin-top: 5%;\n`\n\nexport const LogoIcon = styled.i`\n    font-size: 10rem;\n    margin-top: -.5rem;\n    margin-right: .1rem;\n    color: ${props => props.theme.fg.secondary};\n`\n\nexport const LogoSubtitle = styled.h2`\n    color: ${props => props.theme.bg.senary};\n    font-family: 'Montserrat';\n    font-size: 2rem;\n    font-weight: 600;\n    margin: 0;\n    margin-bottom: -10rem;\n    padding: 0;\n`;\n\nexport const LogoWelcome = styled.h1`\n    color: ${props => props.theme.bg.senary};\n    font-family: 'Montserrat';\n    font-size: 2rem;\n    font-weight: 600;\n    margin: 0;\n    padding: 0;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    height: auto;\n    display: flex;\n    position: relative;\n    margin-bottom: 2%;\n    margin-top: 5%;\n`;\n\nexport const SignInUpContainer = styled.div`\n    font-family: 'Montserrat';\n    font-size: 1.25rem;\n    margin: 0.5rem;\n    width: 20rem;\n\n    font-size: ${props => props.theme.fontSize.sz4};\n    font-family: ${props => props.theme.font.primary};\n    color: ${props => props.theme.bg.senary};\n    text-align: center;\n    \n`\n\nexport const Button = styled.button`\n    cursor: 'pointer';\n    width: 20rem;\n    border-radius: 0.5rem;\n    background-color: #FF4B4B;\n    color: white;\n    display: flex;\n    align-self: center;\n    justify-content: center;\n    padding: 0.5rem;\n    border: none;\n    box-shadow: 0 0.05rem 0.1rem 0rem #303030\n`\n\nexport const NoteText = styled.h4`\n    display: flex;\n    align-self: center;\n    justify-content: center;\n    font-size: ${props => props.theme.fontSize.sz4};\n    font-family: ${props => props.theme.font.primary};\n    color: ${props => props.theme.bg.quaternary};\n    text-align: center;\n    width: 20rem;\n`\n\nexport const ErrorText = styled.p`\n    font-size: ${props => props.theme.fontSize.sz4};\n    font-family: ${props => props.theme.font.primary};\n    color: ${props => props.theme.bad};\n    width: 20rem;\n    margin-top: 0.5rem;\n    text-align: center;\n`","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport * as styled from './forgotPassword.style'\n\nimport { Formik, Form } from 'formik'\n\nimport configData from '../../settings/config'\n\nimport * as AmazonCognitoIdentity from 'amazon-cognito-identity-js';\n\nimport { CognitoUserPool, AuthenticationDetails, CognitoUser } from 'amazon-cognito-identity-js'\n\nimport {useHistory} from \"react-router-dom\";\n\nimport { emailSchema, passwordResetSchema } from '../../methods/utils/form_schemas'\n\n// Import Components\nimport TextField from '../basic/form/text_field/text_field'\nimport Textbox from '../basic/textbox/textbox'\n\n/**\n * \n * @param {} props\n */\nconst ForgotPassword = (props) => {\n\n    const history = useHistory()\n\n    const [email, setEmail] = useState('')\n    const [verificationCode, setVerificationCode] = useState('')\n    const [password, setPassword] = useState('')\n    const [checkPassword, setCheckPassword] = useState('')\n\n    const [enableValidation, setEnableValidation] = useState(false)\n\n    const [resetPasswordVal, setResetPasswordVal] = useState(false)\n\n    const [warning, setWarning] = useState(false)\n\n    const [errorText, setErrorText] = useState('')\n\n\n    var poolData = {\n        UserPoolId: configData.UserPoolId,\n        ClientId: configData.ClientId,\n    };\n\n    function resetPassword(email) {\n\n        var userPool = new AmazonCognitoIdentity.CognitoUserPool(poolData);\n\n        const userData = {\n            Username: email,\n            Pool: userPool,\n        }\n    \n        // setup cognitoUser first\n        const cognitoUser = new CognitoUser(userData);\n    \n        // call forgotPassword on cognitoUser\n        cognitoUser.forgotPassword({\n            onSuccess: function(result) {\n                setResetPasswordVal(true)\n            },\n            onFailure: function(err) {\n                setErrorText(err);\n            }\n        });\n    }\n    \n    // confirmPassword can be separately built out as follows...  \n    async function confirmPassword(values) {\n\n        const {\n            email,\n            verification,\n            password\n        } = values\n\n        try {\n\n            var userPool = new AmazonCognitoIdentity.CognitoUserPool(poolData);\n\n            const userData = {\n                Username: email,\n                Pool: userPool,\n            }\n        \n            // setup cognitoUser first\n            const cognitoUser = new CognitoUser(userData);\n    \n            // call confirmPassword on cognitoUser\n            cognitoUser.confirmPassword(verification, password, {\n                onFailure(err) {\n                    console.log(err);\n                    setErrorText(err.message)\n                },\n                onSuccess() {\n                    setErrorText('You have successfully changed your password!')\n                    history.push('/')\n                },\n            });\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    const handleSubmit = (values) => {\n            if (resetPasswordVal) {\n                confirmPassword(values)\n            }else{\n                resetPassword(values.email)\n            }\n    }\n\n    return (\n        <Formik\n            initialValues={{\n                email: email,\n                verificationCode: verificationCode,\n                password: password,\n                checkPassword: checkPassword\n            }}\n\n            initialTouched={{\n                email: false,\n                verificationCode: false,\n                password: false,\n                checkPassword: false\n            }}\n\n            enableReinitialize\n\n            validateOnBlur={enableValidation}\n            validateOnChange={enableValidation}\n\n            // Chooses what schema to use based on whether it's a sign in or sign up\n            validationSchema={resetPasswordVal ? passwordResetSchema : emailSchema }\n\n            onSubmit={async (values, { setSubmitting }) => {\n                setSubmitting(true)\n\n                await handleSubmit(values)\n\n                setSubmitting(false)\n                setEnableValidation(false)\n            }}\n        >\n            {(formikProps) => {\n\n                if(formikProps.errors.email || formikProps.errors.verificationCode || formikProps.errors.password || formikProps.errors.checkPassword){\n                    setEnableValidation(true)\n                }\n\n                return (\n                    <Form\n                        onKeyDown={\n                            (keyEvent) => {\n                                if(keyEvent.keyCode === 20 || Event.KEY === \"CapsLock\") {\n                                    setWarning(!warning)\n                                }\n                                else {\n                                    if (keyEvent.getModifierState(\"CapsLock\")) {\n                                        setWarning(true)\n                                    } else {\n                                        setWarning(false)\n                                    }\n                                }\n                            }\n                        }\n                    >\n\n                        <styled.SignInUpContainer>\n                            {resetPasswordVal ? \n                            'Please fill this form to reset your password:' \n                            : \n                            'Please provide your email. You will recieve a verification code there shortly.'}\n                        </styled.SignInUpContainer>\n\n                        <styled.SignInUpContainer>\n\n                            <styled.ErrorText>\n                                {errorText}\n                            </styled.ErrorText>\n                        \n                            <TextField\n                                name={\"email\"}\n                                placeholder='Enter Email'\n                                type='text'\n                                InputComponent={Textbox}\n                                style={{\n                                    marginBottom: '.5rem',\n                                    width: '20rem'\n                                }}\n                            />\n\n                            {resetPasswordVal &&\n                                <TextField\n                                    name={\"verification\"}\n                                    placeholder='Verification Code'\n                                    type='text'\n                                    InputComponent={Textbox}\n                                    style={{\n                                        marginBottom: '.5rem',\n                                        width: '20rem'\n                                    }}\n                                />\n                            }\n\n                            {resetPasswordVal &&\n                                <TextField\n                                    name={\"password\"}\n                                    placeholder='Enter Password'\n                                    type='password'\n                                    InputComponent={Textbox}\n                                    style={{\n                                        marginBottom: '.5rem',\n                                        width: '20rem'\n                                    }}\n                                />\n                            }\n\n                            {resetPasswordVal &&\n                                <TextField\n                                    name={\"checkPassword\"}\n                                    placeholder='Check Password'\n                                    type='password'\n                                    InputComponent={Textbox}\n                                    style={{\n                                        marginBottom: '.5rem',\n                                        width: '20rem'\n                                    }}\n                                />\n                            } \n\n                            {warning && <styled.NoteText>Caps Lock On!</styled.NoteText>}\n\n                            <styled.Button type=\"submit\">Submit</styled.Button>\n\n                        </styled.SignInUpContainer>\n\n\n                    </Form>                        \n                )\n            }   \n        }\n    </Formik>\n    )\n\n}\n\nexport default ForgotPassword\n","import styled from 'styled-components'\n\nexport const Page = styled.div`\n    width: 100%;\n    height: 100%;\n    background-color: white;\n`\n\nexport const Container = styled.div`\n    min-width: 35rem;\n    position: absolute;\n    top: 50%;\n    left: ${props => !props.mobileMode && '5rem'};\n    transform: translate(0, -50%);\n    border-radius: 10px;\n    background: white;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    box-shadow: ${props => !props.mobileMode && '0px 0px 6px 1px rgba(0,0,0,0.1)'};\n    padding: 4rem 6rem;\n`\n\nexport const LogoContainer = styled.div`\n    width: 100%;\n    height: auto;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    position: relative;\n    margin-bottom: 8%;\n    margin-top: 5%;\n`\n\nexport const LogoIcon = styled.i`\n    font-size: 10rem;\n    margin-top: -.5rem;\n    margin-right: .1rem;\n    color: ${props => props.theme.fg.secondary};\n`\n\nexport const LogoSubtitle = styled.h2`\n    color: ${props => props.theme.bg.senary};\n    font-family: 'Montserrat';\n    font-size: 2rem;\n    font-weight: 600;\n    margin: 0;\n    margin-bottom: -10rem;\n    padding: 0;\n`;\n\nexport const LogoWelcome = styled.h1`\n    color: ${props => props.theme.bg.senary};\n    font-family: 'Montserrat';\n    font-size: 2rem;\n    font-weight: 600;\n    margin: 0;\n    padding: 0;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    height: auto;\n    display: flex;\n    position: relative;\n    margin-bottom: 2%;\n    margin-top: 5%;\n`;\n\nexport const SignInUpContainer = styled.div`\n    \n`\n\nexport const CheckBoxWrapper = styled.div`\n    position: relative;\n    display: flex;\n    justify-content: center;\n    width: 100%;\n    margin: .5rem 0rem;\n`;\n\nexport const Button = styled.button`\n    cursor: 'pointer';\n    width: 10rem;\n    display: flex;\n    background-color: #FF4B4B;\n    color: white;\n    border-color: white;\n    align-self: center;\n    justify-content: center;\n    padding: 0.5rem;\n    border: none;\n\n    box-shadow: ${props => !!props.selected ? 'none' : '0 0.05rem 0.1rem 0rem #303030'};\n    background-color: ${props => !!props.selected ? props.theme.bg.secondary : props.theme.bg.senary}\n`","import React, { useState, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useHistory, useParams } from 'react-router-dom'\n\n// Import components\nimport SignInUpPage from '../../components/sign_in_up_page/sign_in_up_page'\nimport ForgotPassword from '../../components/forgotPassword/forgotPassword'\nimport { Link } from 'react-router-dom'\nimport * as styled from './authentication.style'\n\n// Authentication\nimport configData from '../../settings/config'\nimport * as AmazonCognitoIdentity from 'amazon-cognito-identity-js';\n\n// Import actions\nimport { postLocalSettings, getLocalSettings } from '../../redux/actions/local_actions'\n\n\n/**\n * After the APIs have been loaded in the api_container this container is loaded\n * It checks to see if the user has already signed in based on whether or not a refresh token exists in cookies\n * @param {mobileMode} props\n */\nconst Authentication = (props) => {\n\n    const {\n        mobileMode\n    } = props\n\n    const history = useHistory()\n    const params = useParams()\n\n    const dispatch = useDispatch()\n\n    const [signIn, setSignIn] = useState(true)\n    const [forgotPassword, setForgotPassword] = useState(false)\n\n    const dispatchPostLocalSettings = (settings) => dispatch(postLocalSettings(settings))\n    const dispatchGetLocalSettings = () => dispatch(getLocalSettings())\n\n    useEffect(() => {\n        handleInitialLoad()\n    }, [])\n\n    useEffect(() => {\n        if(history.location.pathname === '/'){\n            setSignIn(true)\n            setForgotPassword(false)\n        }else if(history.location.pathname === '/forgot-password'){\n            setForgotPassword(true)\n        }else if(history.location.pathname === '/create-account'){\n            setSignIn(false)\n            setForgotPassword(false)\n        }\n    }, [params])\n\n    const handleSignInChange = (value) => {\n        setSignIn(value)\n    }\n\n    const handleInitialLoad = () => {\n        // Check to see if we want authentication *** Dev ONLY ***\n        const localSettingsPromise = dispatchGetLocalSettings()\n        localSettingsPromise.then(response =>{\n\n            if (!configData.authenticationNeeded) {\n\n                dispatchPostLocalSettings({\n                    ...response,\n                    authenticated: 'no'\n                })\n\n            } else {\n                var poolData = {\n                    UserPoolId: configData.UserPoolId,\n                    ClientId: configData.ClientId,\n                };\n\n                var userPool = new AmazonCognitoIdentity.CognitoUserPool(poolData);\n                var cognitoUser = userPool.getCurrentUser();\n\n                if (cognitoUser != null) {\n                    cognitoUser.getSession(function (err, session) {\n                        if (err) {\n                            alert(err.message || JSON.stringify(err));\n                            return;\n                        }\n\n                        if (session.isValid()) {\n                            dispatchPostLocalSettings({\n                                ...response,\n                                authenticated:true,\n                            })\n                        }\n                    });\n                }\n            }\n        })\n    }\n\n    return (\n        <styled.Page className={mobileMode ? '' : 'signin-page'}>\n            <styled.Container mobileMode={mobileMode}>\n\n                <styled.LogoContainer>\n                    <styled.LogoIcon className='icon-rmLogo' />\n                    <styled.LogoSubtitle> Studio</styled.LogoSubtitle>\n                </styled.LogoContainer>\n            \n                { !forgotPassword &&\n                <styled.SignInUpContainer>\n\n                    <SignInUpPage\n                        signIn={signIn}\n                        onChange={handleSignInChange} />\n\n                </styled.SignInUpContainer>\n                }\n\n                { forgotPassword &&\n                <styled.SignInUpContainer>\n\n                    <ForgotPassword />\n\n                </styled.SignInUpContainer>\n                }\n\n                <styled.LogoContainer>\n                \n                {!forgotPassword && \n                <div>\n\n                    <Link to=\"/forgot-password\">Forgot Password? </Link>\n                    \n                    <Link to=\"/login\" style={{\n                        marginLeft: '.5rem', \n                        marginRight: '.5rem',\n                        textDecoration: 'none',\n                        cursor: 'default'\n                        }}> • </Link>\n\n                    {signIn &&\n                        <Link to=\"/create-account\"> Create an account </Link>\n                    }\n\n                    {!signIn &&\n                        <Link to=\"/\"> Sign in </Link>\n                    }\n\n                </div>\n                }\n\n                </styled.LogoContainer>\n                \n            </styled.Container>\n        </styled.Page>\n    )\n\n}\n\nexport default Authentication\n","import styled from 'styled-components'\nimport * as stylesh from '../../containers/status_header/status_header.style'\nimport {LightenDarkenColor} from \"../../methods/utils/color_utils\";\n\nexport const Container = styled.div`\n    background: ${props => props.theme.bg.secondary};\n    display: flex;\n    flex: 1;\n    flex-direction: column;\n    max-height: 100%;\n\n    // padding-top: 4rem;\n`\n\nexport const Icon = styled.i`\n\tpadding: 0;\n\tmargin: 0;\n\tfont-size: 1.5rem;\n\tposition: absolute;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translate(-50%,-50%);\n`\n\n\nexport const Header = styled.div`\n\tbackground: ${props => props.theme.bg.tertiary};\n\twidth: 100%;\n\tpadding: 1rem;\n\talign-items: center;\n  height: 5rem;\n\tdisplay: flex;\n    // box-shadow: 0px 2px 4px 2px rgba(0, 0, 0, 0.3);\n`\n\nexport const Title = styled.span`\n    position: absolute;\n    left: 50%;\n    transform: translateX(-50%);\n\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz1};\n    font-weight: 500;\n    color: ${props => props.theme.schema[props.schema].solid};\n`\n\nexport const ListScrollContainer = styled.ul`\n    padding: 0;\n    margin: 0;\n    overflow-y: scroll;\n    flex: 1;\n    padding: 1rem;\n\n`\nexport const ListItem = styled.div`\n    display: flex;\n    align-items: center;\n    width: auto;\n    height: 4rem;\n    background: transparent;\n    margin-bottom: 1rem;\n\n`\n\nexport const ListItemRect = styled.div`\n    height: 100%;\n    width: 100%;\n    align-items: center;\n    display: flex;\n\n    border-radius: 0.5rem;\n    text-align: center;\n\n    cursor: pointer;\n    user-select: none;\n    box-sizing: border-box;\n\n    background-color: ${props => props.theme.bg.primary};\n    box-shadow: ${props => props.theme.cardShadow};\n\n    &:hover {\n        background: ${props => LightenDarkenColor(props.theme.bg.primary, -10)};\n    }\n\n`\n\nexport const ListItemTitle = styled.div`\n    height: 2rem;\n    line-height: 2rem;\n    box-sizing: border-box;\n    width: 100%;\n    margin-top: -0.1rem;\n    padding-left: 1rem;\n    padding-right: 1rem;\n\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz4};\n    font-weight: 500;\n    color: ${props => props.theme.bg.octonary};\n\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n\n    &:hover {\n        background: ${props => props.theme.schema[props.schema].gradient};\n        -webkit-text-fill-color: transparent;\n        -webkit-background-clip: text;\n        display:block;\n    }\n`\n\nexport const PlayButton = styled(stylesh.PlayButton)`\n    position: absolute;\n    right: 0;\n`\n\nexport const PlayButtonIcon = styled(stylesh.PlayButtonIcon)`\n`\n\nexport const StatusContainer = styled.div`\n    position: absolute;\n    left: 50%;\n    transform: translateX(-50%);\n\n    border-radius: 0rem 0rem 1rem 1rem;\n\n    height: 2.5rem;\n    max-width: 35rem;\n    min-width: 10rem;\n\n    padding: 0rem 2rem;\n    padding-top: .5rem;\n\n\tbackground: ${props => props.theme.bg.septenary};\n    top: 5rem;\n\n    align-content: center;\n    align-items: center;\n    justify-content: center;\n    text-align: center;\n`\n","import React, {useEffect, useState} from 'react'\nimport { useSelector } from 'react-redux';\nimport PropTypes from \"prop-types\";\n\nimport { locationsSortedAlphabetically } from '../../../methods/utils/locations_utils'\n\nimport * as styled from '../list_view.style'\nimport {getDashboardNameFromLocation, getDashboardDisplayName} from \"../../../methods/utils/dashboards_utils\";\n\n\nconst LocationList = (props) => {\n\n    const {\n        onMouseEnter,\n        onMouseLeave,\n        onLocationClick\n\n    } = props\n\n    LocationList.propTypes = {\n        onMouseEnter: PropTypes.func,\n        onMouseLeave: PropTypes.func,\n        onLocationClick: PropTypes.func,\n        onClick: PropTypes.func,\n        name: PropTypes.string,\n\n    }\n\n    LocationList.defaultProps = {\n        onMouseEnter: () => { },\n        onLocationClick: () => { },\n        onMouseLeave: () => { },\n        onClick: () => { },\n        name: \"\"\n    }\n\n    // redux state\n    const locations = useSelector(state => state.stationsReducer.stations)\n    const devices = useSelector(state => state.devicesReducer.devices)\n    const currentMapId = useSelector(state => state.settingsReducer.settings.currentMapId)\n    const maps = useSelector(state => state.mapReducer.maps)\n    const currentMap = Object.values(maps).find(map => map._id === currentMapId)\n    const deviceEnabled = useSelector(state => state.settingsReducer.settings.deviceEnabled)\n    const {\n        _id: mapId\n    } = currentMap || {}\n    const dashboards = useSelector(state => state.dashboardsReducer.dashboards)\n\n    // component state\n    const [locationsArr, setLocationsArr] = useState([])\n    const [dashboardsArr, setDashboardsArr] = useState([])\n\n    // const devicesArr = Object.values(devices)\n\n    /*\n    * this effect updates locationsArr\n    * locations must be sorted a-z, and filtered by map_id\n    * name should be replaced with dashboard name (if it exists), otherwise default name should be made using station name\n    * */\n    useEffect(() => {\n        // sort locations + filter by map id\n        let tempLocationsArr = locationsSortedAlphabetically(Object.values(locations).filter(loc => loc.map_id === currentMap._id))\n\n        // map through locations and update name\n        tempLocationsArr = tempLocationsArr.map((currLocation) => {\n\n            // get dashboard name\n            const dashboardName = getDashboardNameFromLocation(currLocation, dashboards)\n\n            // return currLocation with name updated for dashboard name\n            return {\n                ...currLocation,\n                name: dashboardName\n            }\n        })\n\n        // update state\n        setLocationsArr(tempLocationsArr)\n    }, [mapId, locations, dashboards])\n\n    // this effect updates dashboardsArr\n    useEffect(() => {\n      if(!!deviceEnabled){\n        setDashboardsArr([...locationsArr, ...Object.values(devices)])\n      }\n      else{\n        setDashboardsArr([...locationsArr])\n      }\n    }, [locationsArr, devices])\n\n    return (\n        <styled.ListScrollContainer>\n            {dashboardsArr.length > 0 ?\n                dashboardsArr.map((item, index, arr) => {\n                    const {\n                        name,\n                        device_name,\n                    } = item\n\n                    return (\n                        <styled.ListItem\n                            key={`li-${index}`}\n                            onClick={() => onLocationClick(item)}\n                        // onMouseEnter={() => onMouseEnter(item)}\n                        // onMouseLeave={() => onMouseLeave(item)}\n                        >\n                            <styled.ListItemRect>\n                                <styled.ListItemTitle schema={\"locations\"}>{!!name ? name : device_name}</styled.ListItemTitle>\n                            </styled.ListItemRect>\n\n                        </styled.ListItem>\n                    );\n                })\n                :\n                <div></div>\n            }\n\n        </styled.ListScrollContainer>\n    )\n}\n\nexport default LocationList\n","// import external dependencies\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Route, useHistory, useParams } from 'react-router-dom'\nimport ClickNHold from 'react-click-n-hold'\n\n// components\nimport DashboardsPage from \"../widgets/widget_pages/dashboards_page/dashboards_page\";\nimport Settings from \"../side_bar/content/settings/settings\";\nimport LocationList from './location_list/location_list'\nimport BounceButton from \"../basic/bounce_button/bounce_button\";\nimport ConfirmDeleteModal from '../basic/modals/confirm_delete_modal/confirm_delete_modal'\nimport ScanLotModal from '../../components/basic/modals/scan_lot_modal/scan_lot_modal'\nimport { ADD_TASK_ALERT_TYPE } from \"../../constants/dashboard_constants\";\nimport TaskAddedAlert from \"../../components/widgets/widget_pages/dashboards_page/dashboard_screen/task_added_alert/task_added_alert\";\n\n// Import hooks\nimport useWindowSize from '../../hooks/useWindowSize'\n\n// Import actions\nimport { postStatus } from '../../redux/actions/status_actions'\nimport {showLotScanModal} from '../../redux/actions/sidebar_actions'\n\n// Import Utils\nimport { deepCopy } from '../../methods/utils/utils'\n\n// styles\nimport * as styled from \"./list_view.style\"\n\n// import logger\nimport log from '../../logger.js';\n\nimport disableBrowserBackButton from 'disable-browser-back-navigation';\n\nconst SCREENS = {\n    LOCATIONS: {\n        title: \"Locations\",\n        schema: \"locations\"\n    },\n    SETTINGS: {\n        title: \"Settings\",\n        schema: \"settings\"\n    },\n    DASHBOARDS: {\n        title: \"Dashboards\",\n        schema: \"locations\"\n    },\n}\n\nconst ListView = (props) => {\n    const {\n\n    } = props\n\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const params = useParams()\n    const {\n        dashboardID,\n        editing,\n        lotID,\n        stationID,\n        warehouse\n    } = params\n\n    const size = useWindowSize()\n    const windowWidth = size.width\n    const widthBreakPoint = 1025\n\n    const positions = useSelector(state => state.positionsReducer.positions)\n    const stations = useSelector(state => state.stationsReducer.stations)\n    const devices = useSelector(state => state.devicesReducer.devices)\n    const status = useSelector(state => state.statusReducer.status)\n    const taskQueue = useSelector(state => state.taskQueueReducer.taskQueue)\n    const dashboards = useSelector(state => state.dashboardsReducer.dashboards)\n    const settings = useSelector(state => state.settingsReducer.settings)\n    const showScanLotModal = useSelector(state => state.sidebarReducer.showLotScanModal)\n    const cards = useSelector(state => state.cardsReducer.cards)\n\n    const deviceEnabled = settings.deviceEnabled\n\n    const onPostStatus = (status) => dispatch(postStatus(status))\n    const dispatchShowLotScanModal = (bool) => dispatch(showLotScanModal(bool))\n\n    const [showDashboards, setShowDashboards] = useState(false)\n    const [showSettings, setShowSettings] = useState(false)\n    const [locked, setLocked] = useState(null);\n\n    const [barcode, setBarcode] = useState([])\n    const [full, setFull] = useState('')\n    const [lotNum, setLotNum] = useState('')\n    const [showSnoop, setShowSnoop] = useState(null)\n    const [addTaskAlert, setAddTaskAlert] = useState(null);\n\n    const CURRENT_SCREEN = (showDashboards) ? SCREENS.DASHBOARDS :\n        showSettings ? SCREENS.SETTINGS : SCREENS.LOCATIONS\n\n    const title = CURRENT_SCREEN.title\n\n    let pause_status = ''\n\n    // If there's no status available then set to blank object.\n    try {\n        pause_status = status.pause_status;\n    } catch (e) {\n        pause_status = status.pause_status;\n    }\n\n    // Handles the icon type being displayed based on the pause_status in status\n    var playButtonClassName = \"fas fa-\";\n    pause_status ? playButtonClassName += 'play' : playButtonClassName += 'pause';\n\n    useEffect(() => {\n        disableBrowserBackButton()\n\n        // displays dashboards page if url is on widget page\n        if (stationID) {\n            setShowDashboards(true)\n        }\n\n        // hides dashboards page if url is NOT on widget page\n        else {\n            setShowDashboards(false)\n        }\n\n    }, [stationID])\n\n\n    useEffect(() => {\n        Object.values(dashboards).forEach((dashboard) => {\n            if (dashboard.station === stationID) {\n                setLocked(dashboard.locked)\n            }\n        })\n    }, [stationID, dashboards])\n\n    useEffect(() => {\n        document.addEventListener('keyup', logKey)\n        return () => {\n            document.removeEventListener('keyup', logKey)\n        }\n    }, [])\n\n    useEffect(() => {\n      setFull(barcode.join(''))\n    }, [barcode])\n\n    useEffect(() => {\n      //this is ridiculous but there are different codes for usb transmitter/bluetooth/wired to all need to be included to register different methods\n      if(full.includes('RMShift-') || full.includes('ShiftrShiftm-') || full.includes('ShiftRShiftM-') || full.includes('rm-')) {\n            const enter = full.substring(full.length-5)\n            if(enter === 'Enter'){\n                setBarcode([])\n                const splitLot = full.split('-')\n                let lotId = parseInt(splitLot[1].slice(0,-5))\n                setLotNum(lotId)\n                onScanLot(lotId)\n                setFull('')\n            }\n        }\n\n    }, [full])\n\n    const logKey = (e) => {\n      setBarcode(barcode => [...barcode, e.key])\n    }\n\n\n    const onScanLot = (id) => {\n\n      let binCount = 0\n      let statId = \"\"\n      let lotFound = false\n\n      Object.values(cards).forEach((card) => {\n        if(card.lotNumber === id){\n          lotFound = true\n          Object.values(stations).forEach((station) => {\n            if(!!card.bins[station._id]){\n              binCount = binCount + 1\n              statId = station._id\n            }\n          })\n\n        if(binCount > 1){\n          dispatchShowLotScanModal(true)\n        }\n        else if(binCount ===1 && !!statId){\n          setShowSettings(false)\n          history.push(`/locations/${statId}/dashboards/${stations[statId].dashboards[0]}/lots/${card._id}`)\n          setShowDashboards(true)\n        }\n        }\n      })\n\n      if(id === 420 && lotFound === false){\n        setShowSnoop(true)\n        return setTimeout(() => setShowSnoop(null), 2500)\n      }\n\n      if(lotFound===false) {\n          setAddTaskAlert({\n              type: ADD_TASK_ALERT_TYPE.FINISH_FAILURE,\n              label: \"This lot does not exist!\",\n          })\n          return setTimeout(() => setAddTaskAlert(null), 2500)\n        }\n    }\n\n    const onLocationClick = (item) => {\n        // If the id is in station that its a station, else its the Mir Dashboard\n        const dashboardID = !!stations[item._id] ? stations[item._id].dashboards[0] : devices[item._id].dashboards[0]\n        history.push('/locations/' + item._id + '/' + \"dashboards/\" + dashboardID)\n        setShowDashboards(true)\n    }\n\n    // Handles the play pause button\n    const handleTogglePlayPause = async () => {\n\n        //Flip the status to the opposite of the current value when the button is pressed\n        var status_clone = deepCopy(status);\n        const pause_status = !status_clone.pause_status;\n\n        //Post the status to the API\n        await onPostStatus({ pause_status: pause_status });\n    }\n\n\n    const handleTaskQueueStatus = () => {\n\n        // return (\n        //     <styled.StatusContainer>\n        //         <p>Distance to Station 3 is 30m</p>\n        //     </styled.StatusContainer>\n        // )\n        return Object.values(taskQueue).map((item, ind) => {\n\n            // If the item has an owner that means that task is being executed\n            if (!!item.owner) {\n\n                // If the station is a device and the task q owner is that device then show the status\n                if (!!devices[stationID] && item.owner === devices[stationID]._id) {\n\n                    let locationName = ''\n\n                    if (!!item.custom_task) {\n                        locationName = positions[item.custom_task.position].name\n                    }\n                    else if (!!item.next_position) {\n                        locationName = positions[item.next_position].name\n                    }\n\n                    return (\n                        <styled.StatusContainer>\n                            <p>{`Distance to ${locationName} - ${Math.floor(devices[item.owner].distance_to_next_target)}m`}</p>\n                        </styled.StatusContainer>\n                    )\n\n                }\n            }\n        })\n    }\n\n\n    return (\n        <styled.Container>\n\n            <ScanLotModal\n                isOpen={!!showScanLotModal}\n                title={\"This lot is split between multiple stations. Please pick a station\"}\n                id = {lotNum}\n                button_1_text={\"Yes\"}\n                button_2_text={\"No\"}\n                handleClose={() => {\n                  dispatchShowLotScanModal(null)\n\n                }}\n\n            />\n            <TaskAddedAlert\n                containerStyle={{\n                    'position': 'absolute'\n                }}\n                {...addTaskAlert}\n                visible={!!addTaskAlert}\n            />\n\n            {!!showSnoop &&\n              <img\n               src=\"https://i.kym-cdn.com/entries/icons/original/000/017/129/rs-10918-snoop-624-1368121236.jpg\"\n               alt=\"new\"\n               />\n            }\n\n            <ClickNHold\n                time={2}\n                onClickNHold={() => {\n                    setShowDashboards(false)\n                    history.push('/locations')\n                }}\n            >\n                <styled.Header>\n\n                            {(showDashboards) ?\n                              <>\n                                {!locked &&\n                                  <BounceButton\n                                      color={\"black\"}\n                                      onClick={() => {\n                                          setShowDashboards(false)\n                                          history.push('/locations')\n                                      }}\n                                      containerStyle={{\n                                          width: \"3rem\",\n                                          height: \"3rem\",\n                                          position: \"relative\"\n                                      }}\n                                  >\n\n                                      <styled.Icon\n                                          className={\"fa fa-times\"}\n                                      />\n                                  </BounceButton>\n                                }\n                              </>\n                                :\n                                <BounceButton\n                                    color={\"black\"}\n                                    onClick={() => {\n                                        setShowSettings(!showSettings)\n                                        if (showSettings) {\n                                            history.push(`/`)\n                                        }\n                                        else {\n                                            history.push(`/settings`)\n                                        }\n                                    }}\n                                    active={showSettings}\n                                    containerStyle={{\n                                        width: \"3rem\",\n                                        height: \"3rem\",\n                                        position: \"relative\"\n                                    }}\n                                >\n                                    <styled.Icon\n                                        className={!showSettings ? \"fa fa-cog\" : \"fa fa-times\"}\n                                    />\n                                </BounceButton>\n                            }\n\n\n                    <styled.Title schema={CURRENT_SCREEN.schema} style={{ userSelect: \"none\" }}>{title}</styled.Title>\n                    {handleTaskQueueStatus()}\n\n                    {!!deviceEnabled &&\n                        <styled.PlayButton\n                            play={pause_status}\n                            windowWidth={windowWidth}\n                            widthBreakPoint={widthBreakPoint}\n                        >\n                            <styled.PlayButtonIcon play={pause_status} className={playButtonClassName} onClick={handleTogglePlayPause}></styled.PlayButtonIcon>\n                        </styled.PlayButton>\n                    }\n\n                </styled.Header>\n            </ClickNHold>\n\n            {(!showDashboards && !showSettings) &&\n                <LocationList\n                    onLocationClick={onLocationClick}\n                />\n            }\n\n            {(showDashboards && !showSettings) &&\n                // must be wrapped in route to give dashboards page the match params\n                <Route\n                    path=\"/locations/:stationID/dashboards/:dashboardID?/:editing?/:lotID?/:warehouse?\"\n                    component={DashboardsPage}\n                />\n            }\n\n            {showSettings &&\n                <Settings />\n            }\n        </styled.Container>\n    )\n}\n\nexport default ListView;\n","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Route, Redirect,} from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux'\nimport ls from 'local-storage'\n\nimport { ThemeProvider } from \"styled-components\";\nimport theme from './theme';\nimport './App.css';\n\n// Import Hooks\nimport useWindowSize from './hooks/useWindowSize'\n\nimport * as styled from './App.style'\n\n// Import API\nimport { deleteLocalSettings } from './api/local_api'\nimport { stopAPICalls } from './redux/actions/local_actions'\nimport { postLocalSettings, getLocalSettings } from './redux/actions/local_actions'\n\n// import containers\nimport ApiContainer from './containers/api_container/api_container';\nimport StatusHeader from './containers/status_header/status_header';\nimport Logger from './containers/logger/logger';\nimport SideBar from './containers/side_bar/side_bar'\nimport MapView from './containers/map_view/map_view'\nimport HILModal from './containers/hil_modal/hil_modal'\nimport Authentication from './containers/authentication/authentication'\nimport Widgets from './components/widgets/widgets'\nimport ListView from \"./components/list_view/list_view\";\nimport ConfirmDeleteModal from './components/basic/modals/confirm_delete_modal/confirm_delete_modal'\n\nconst widthBreakPoint = 1000;\n\nconst App = () => {\n\n    const widgetPageLoaded = useSelector(state => { return state.widgetReducer.widgetPageLoaded })\n    const hoveringInfo = useSelector(state => state.widgetReducer.hoverStationInfo)\n    const maps = useSelector(state => state.mapReducer.maps)\n    const sideBarOpen = useSelector(state => state.sidebarReducer.open)\n    const mapViewEnabled = useSelector(state => state.localReducer.localSettings.mapViewEnabled)\n    const getFailureCount = useSelector(state => state.taskQueueReducer.getFailureCount)\n    const localSettings = useSelector(state => state.localReducer.localSettings)\n    const authenticated = useSelector(state => state.localReducer.localSettings.authenticated)\n\n    const dispatch = useDispatch()\n    const dispatchStopAPICalls = (bool) => dispatch(stopAPICalls(bool))\n    const dispatchGetLocalSettings = () => dispatch(getLocalSettings())\n    const dispatchPostLocalSettings = (settings) => dispatch(postLocalSettings(settings))\n\n    const [loaded, setLoaded] = useState(false)\n    const [apiLoaded, setApiLoaded] = useState(false)\n\n    const [showSideBar, setShowSideBar] = useState(false)\n    const [showStopAPIModal, setShowStopAPIModal] = useState(true)\n\n    const size = useWindowSize()\n    const windowWidth = size.width\n    const mobileMode = windowWidth < widthBreakPoint;\n\n    useEffect(() => {\n      handleLoadLocalData();\n    }, [])\n\n    const handleLoadLocalData = async () => {\n      await dispatchGetLocalSettings()\n    }\n\n    /**\n     * This handles Map view in mobile mode\n     * Unmounts the map if widget pages is open\n     */\n    const handleMobileMapView = () => {\n\n        if (!widgetPageLoaded) {\n            return (\n                <Route\n                    path={[\"/locations/:stationID?/:widgetPage?\", '/']}>\n                    <MapView mobileMode={mobileMode} />\n                </Route>\n            )\n        }\n\n        else {\n            return null\n        }\n\n    }\n\n    // Used to clear local settings just in case the page cant be loaded anymore\n    // const handleClearLocalSettings = () => {\n    //     deleteLocalSettings()\n    //     return (\n    //         <>\n    //         </>\n    //     )\n    // }\n\n    return (\n        <>\n            <Logger />\n\n\n              {/* <ThemeProvider theme={theme[this.state.theme]}> */}\n              <ThemeProvider theme={theme['main']}>\n\n                <styled.Container>\n                    <ConfirmDeleteModal\n                        isOpen={getFailureCount < 10 || showStopAPIModal === false ? false : true}\n                        title={\"Oops! It looks like the server is diconnected. Would you like to turn off updates from the backend?\"}\n                        button_1_text={\"Yes\"}\n                        handleOnClick1={() => {\n                            dispatchStopAPICalls(true)\n                            setShowStopAPIModal(false)\n                        }}\n                        button_2_text={\"No\"}\n                        handleOnClick2={() => {\n                            setShowStopAPIModal(false)\n                        }}\n                        handleClose={() => {\n                            setShowStopAPIModal(false)\n                        }}\n                    />\n                    <BrowserRouter>\n                        {/* Authentication */}\n                        {!authenticated &&\n                            <Route path=\"/\" >\n                                <Authentication mobileMode={mobileMode} />\n                            </Route>\n                        }\n\n                        {authenticated &&\n                            <Route\n                                path={[\"/locations/:stationID?/:widgetPage?\", '/:sidebar?/:data1?/:data2?', '/',]}\n                            >\n                                <ApiContainer styleMode={null} apiMode={null} mode={null} logMode={\"DEV\"} onLoad={() => setLoaded(true)} apiLoaded={() => setApiLoaded(true)} isApiLoaded={apiLoaded} />\n                            </Route>\n                        }\n\n                          {loaded && authenticated && apiLoaded &&\n                              <styled.ContentContainer>\n\n                                  <styled.HeaderContainer>\n                                      {mapViewEnabled ?\n                                          <Route\n                                              path={[\"/locations/:stationID?/:widgetPage?\", '/']}\n                                              component={StatusHeader}\n                                          />\n                                          :\n                                          <> </>\n                                      }\n                                  </styled.HeaderContainer>\n\n\n\n                                  <styled.BodyContainer>\n                                      {/* Hides Side bar when in a dashboard in mobile mode */}\n                                      {mapViewEnabled ?\n                                          // mobileMode ?\n                                          // dashboardOpen ?\n                                          //     <></>\n                                          //     :\n\n                                          <Route\n                                              path={[\"/:page?/:id?/:subpage?\", '/']}\n                                          >\n                                              <SideBar\n                                                showSideBar={sideBarOpen}\n                                                setShowSideBar={setShowSideBar}\n                                            />\n                                          </Route>\n                                          // :\n                                          //     <Route\n                                          //         path={[\"/:page?/:id?/:subpage?\", '/']}\n                                          //     >\n                                          //         <SideBar\n                                          //             showSideBar={sideBarOpen}\n                                          //             setShowSideBar={setShowSideBar}\n                                          //         />\n                                          //     </Route>\n                                          :\n                                          <></>\n                                      }\n\n                                      <Route\n                                          path={[\"/locations/:stationID/dashboards/:dashboardID?/:editing?/:lotID?/:warehouse?\", '/']}\n                                          component={HILModal}\n                                      />\n\n                                      {/* If there are no maps, then dont render mapview (Could cause an issue when there is no MIR map)\n                                          And if the device is mobile, then unmount if widgets are open\n                                      */}\n                                    {maps.length > 0 &&\n                                        <>\n                                            {mapViewEnabled ?\n\n                                                (mobileMode ?\n                                                    <Route\n                                                        path={[\"/locations/:stationID?/:widgetPage?\", '/']}\n                                                    >\n                                                        {handleMobileMapView()}\n                                                    </Route>\n                                                    :\n                                                    <Route\n                                                        path={[\"/locations/:stationID?/:widgetPage?\", '/']}\n                                                        component={MapView}\n                                                    />\n                                                )\n\n                                                :\n\n                                                <Route\n                                                    path={[\"/locations/:stationID/dashboards/:dashboardID?/:editing?/:lotID?/:warehouse?\", '/']}\n                                                    component={ListView}\n                                                />\n\n\n                                            }\n                                        </>\n                                    }\n\n                                    {/* <Route\n                                          path=\"/locations/:locationID?/:widgetPage?\"\n                                          component={WidgetPages}\n                                      /> */}\n\n                                    {/* Widgets are here in mobile mode. If not in mobile mode, then they are in map_view.\n                                      The reasoning is that the map unmounts when in a widget while in mobile mode (for performance reasons).\n                                      So they need to be here. */}\n                                      {hoveringInfo !== null && mobileMode &&\n                                          <Route\n                                              path={[\"/locations/:stationID?/:widgetPage?\", '/', \"/locations/:deviceID?/:widgetPage?\"]}\n                                              component={Widgets}\n                                          />\n                                      }\n\n                                  </styled.BodyContainer>\n\n                              </styled.ContentContainer>\n                          }\n\n                      </BrowserRouter>\n                  </styled.Container>\n              </ThemeProvider>\n              </>\n    );\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './methods/css/montserrat.css';\nimport './methods/css/iwawa.css';\nimport './methods/css/all.css';\nimport 'xmlrpc'\nimport { Provider } from 'react-redux'\nimport store from './redux/store/index.js'\nimport './methods/css/fontawesome.min.css'\nimport './graphics/icons/style.css'\nimport 'nivo'\n// import { AppContainer } from 'react-hot-loader';\n// require('react-hot-loader/patch')\n\n/* uncomment to disable default logger\nconsole.log = () => {};\nconsole.error = () => {};\nconsole.fatal = () => {};\nconsole.warn = () => {};\n*/\n//\n\nif(module.hot){\n    module.hot.accept()\n}\n\n// if(module.hot){\n//     console.log(\"module hot\")\n//\n//     module.hot.accept('./App', () => {\n//         console.log(\"inside callback\")\n//\n//         const NextApp = require('./App');\n//\n//         ReactDOM.render(\n//             <Provider store={store}>\n//                 <App />\n//             </Provider>,\n//             document.getElementById('root')\n//         );\n//\n//     });\n// }\n// else {\n    const rootElement = document.getElementById('root')\n    ReactDOM.render(\n        // <AppContainer>\n        <Provider store={store}>\n            <App />\n        </Provider>,\n            // </AppContainer>,\n        rootElement\n    )\n// }\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\nserviceWorker.register();\n","import styled, {css} from \"styled-components\";\n\nexport const lastItemCss = css`\n\tborder: none;\n`\n\nexport const Row = styled.div`\n    display: flex;\n    width: 100%;\n    justify-content: space-between;\n    padding: .25rem 0 .25rem 0;\n  \n  \t${props => props.isLast && lastItemCss};\n`\n\nexport const Label = styled.span`\n    font-size: ${props => props.theme.fontSize.sz4};\n    font-weight: 600;\n    margin-right: 0.5rem;\n    color:  ${props => props.theme.bg.septenary};\n    font-family: ${props => props.theme.font.primary};\n`\n\nexport const Count = styled.span`\n\tfont-size: ${props => props.theme.fontSize.sz4};\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    color:  ${props => props.theme.bg.septenary};\n    font-family: ${props => props.theme.font.primary};\n`","import React, {useEffect, useState} from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport * as styled from \"./lot_simple_row.style\";\nimport { capitalizeFirstLetter } from '../../../../../../methods/utils/string_utils'\n\nconst LotSimpleRow = (props) => {\n\n\tconst {\n\t\tlabel,\n\t\tvalue,\n\t\tcontainerStyle,\n\t\tisLast,\n        labelStyle,\n        countStyle,\n\t} = props\n\n\n\treturn (\n\t\t<styled.Row\n\t\t\tisLast={isLast}\n\t\t\tstyle={containerStyle}\n\t\t>\n\t\t\t<styled.Label style={labelStyle} >{capitalizeFirstLetter(label)}</styled.Label>\n\t\t\t<styled.Count style={countStyle} >{value}</styled.Count>\n\t\t</styled.Row>\n\t);\n};\n\nLotSimpleRow.propTypes = {\n\n};\n\nexport default LotSimpleRow;\n","// Import utils\nimport { deepCopy } from './utils'\nimport { convertRealToD3 } from './map_utils'\n\n// Import Store\nimport store from '../../redux/store/index'\n\n\n/**\n * All of these coordinates have been calc by adjusting them on map with chrome dev tools\n * @param {*} location\n * @param {*} rd3tClassName\n * @param {*} d3\n */\n\n\nexport const locationsSortedAlphabetically = (locations) => {\n\n    const locationsCopy = deepCopy(locations)\n\n    locationsCopy.sort((a, b) => {\n        const aName = a.name\n        const bName = b.name\n        const length = Math.max(a.name.length, b.name.length)\n        for(let i = 0; i<length; i=i+1){\n          if(a.name[i] == undefined) {\n            return -1\n            break\n          }\n          if(b.name[i] == undefined) {\n            return 1\n            break\n          }\n          if(a.name[i]<b.name[i]){\n            return -1\n            break\n          }\n          if(a.name[i]>b.name[i]){\n            return 1\n            break\n          }\n    }})\n\n    return locationsCopy\n}\n\nexport const editing = () => {\n    const editingPosition = store.getState().positionsReducer.editingPosition\n    const editingStation = store.getState().stationsReducer.editingStation\n\n    return !!editingStation ? editingStation : editingPosition\n\n}\n\n\n/**\n * This function compares existing vs incoming locations\n *\n * If the incoming location exists in existing locations then use the incoming location info but update the x and y from existing\n * Using x and y from existing because those values correlate with the local map's d3 state\n *\n * If an incoming location is not in existing locations that means it was added by another client\n * Make sure to update the new locations x and y values to match the local map's d3\n *\n * @param {object} existingStations\n * @param {object} incomingStations\n */\nexport const compareExistingVsIncomingLocations = (incomingLocations, existingLocations, d3) => {\n\n    Object.values(existingLocations).forEach(existingLocation => {\n\n        // If the location exists in the backend and frontend, take the new locations, but assign local x and y\n        if (existingLocation._id in incomingLocations) {\n\n            const incomingLocation = incomingLocations[existingLocation._id]\n            if ((incomingLocation.pos_x !== existingLocation.pos_x) || (incomingLocation.pos_y !== existingLocation.pos_y)) {\n                let [x, y] = convertRealToD3([incomingLocation.pos_x, incomingLocation.pos_y], d3)\n                Object.assign(incomingLocations[existingLocation._id], { x: x, y: y })\n\n            } else {\n                Object.assign(incomingLocations[existingLocation._id], { x: existingLocation.x, y: existingLocation.y })\n            }\n\n        }\n\n        // If the existing location is  new then make sure to pass it in\n        else if (existingLocation.new == true) {\n            incomingLocations[existingLocation._id] = existingLocation\n        }\n\n    })\n\n    // Compare incoming vs existing\n    Object.values(incomingLocations).forEach(incomingLocation => {\n\n        // Handles deleted Positions on the backend\n        if (!!incomingLocation.change_key && incomingLocation.change_key === 'deleted') {\n            delete incomingLocations[incomingLocation._id]\n        }\n\n        // If the incoming location is not in existing location, its a new location so convert its pos into local d3 state\n        if (Object.values(existingLocations).length > 0 && !(incomingLocation._id in existingLocations) && incomingLocation.change_key !== 'deleted') {\n            let x, y\n            // If it's a new station, make sure to update it's coords to d3 coords on the local map\n            [x, y] = convertRealToD3([incomingLocation.pos_x, incomingLocation.pos_y], d3)\n            Object.assign(incomingLocations[incomingLocation._id], { x: x, y: y })\n        }\n    })\n\n    return incomingLocations\n}\n","import axios from 'axios';\n// import * as log from 'loglevel';\n\nimport logger from '../logger'\n\nimport { apiIPAddress } from '../settings/settings'\n\nconst operator = 'devices'\nconst log = logger.getLogger('Api')\n\nexport async function getDevices() {\n    try {\n        const response = await axios({\n            method: 'get',\n            url: apiIPAddress() + operator,\n            headers: {\n                'X-API-Key': '123456',\n                'Access-Control-Allow-Origin': '*'\n            }\n            // token: token.username\n        });\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        return dataJson;     \n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n\n}\n\nexport async function deleteDevices(ID) {\n    try {\n        const response = await axios({\n            method: 'DELETE',\n            url: apiIPAddress() + operator + '/' + ID,\n            headers: {\n                'Accept': 'application/json',\n                'X-API-Key': '123456',\n            },\n        });\n\n        // Success 🎉\n        // log.debug('response',response);\n        // const data = response.data;\n        // const dataJson = JSON.parse(data)\n        return response;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}\n\nexport async function postDevices(devices) {\n    try {\n        const response = await axios({\n            method: 'POST',\n            url: apiIPAddress() + operator,\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n                'X-API-Key': '123456',\n            },\n            data: devices\n        });\n\n        // Success 🎉\n        // log.debug('response',response);\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        // log.debug('response data json',dataJson);\n\n\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}\n\nexport async function putDevices(device, ID) {\n    try {\n        const response = await axios({\n            method: 'PUT',\n            url: apiIPAddress() + operator + '/' + ID,\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'text/html',\n                'X-API-Key': '123456',\n            },\n            data: device\n        });\n\n        // Success 🎉\n        // log.debug('response',response);\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        return dataJson;\n\n\n    } catch (error) {\n\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}\n","import { normalize, schema } from 'normalizr';\n\nimport {\n    GET_DEVICES,\n    GET_DEVICES_STARTED,\n    GET_DEVICES_SUCCESS,\n    GET_DEVICES_FAILURE,\n\n    POST_DEVICES,\n    POST_DEVICES_STARTED,\n    POST_DEVICES_SUCCESS,\n    POST_DEVICES_FAILURE,\n\n    PUT_DEVICES,\n    PUT_DEVICES_STARTED,\n    PUT_DEVICES_SUCCESS,\n    PUT_DEVICES_FAILURE,\n\n    DELETE_DEVICES,\n    DELETE_DEVICES_STARTED,\n    DELETE_DEVICES_SUCCESS,\n    DELETE_DEVICES_FAILURE,\n} from '../types/devices_types'\n\nimport * as api from '../../api/devices_api'\nimport { devicesSchema } from '../../normalizr/schema';\n\n\nexport const getDevices = () => {\n    return async dispatch => {\n        function onStart() {\n            dispatch({ type: GET_DEVICES_STARTED });\n        }\n        function onSuccess(response) {\n            dispatch({ type: GET_DEVICES_SUCCESS, payload: response });\n            return response;\n        }\n        function onError(error) {\n            dispatch({ type: GET_DEVICES_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const devices = await api.getDevices();\n            devices.forEach((device, ind) => {\n                if (!(device.position === undefined)) {\n                    devices[ind].position.pos_x = device.position.x\n                    devices[ind].position.pos_y = device.position.y\n                }\n            })\n\n            // Uncomment when you want to make devices an object\n            const normalizedDevices = normalize(devices, devicesSchema);\n            return onSuccess(normalizedDevices.entities.devices)\n            // return onSuccess(devices)\n        } catch (error) {\n            return onError(error)\n        }\n    }\n}\nexport const postDevices = (devices) => {\n    return async dispatch => {\n        function onStart() {\n            dispatch({ type: POST_DEVICES_STARTED });\n        }\n        function onSuccess(response) {\n            dispatch({ type: POST_DEVICES_SUCCESS, payload: response });\n            return response;\n        }\n        function onError(error) {\n            dispatch({ type: POST_DEVICES_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const newDevices = await api.postDevices(devices);\n            return onSuccess(newDevices)\n        } catch (error) {\n            return onError(error)\n        }\n    }\n}\nexport const putDevices = (device, ID) => {\n    return async dispatch => {\n        function onStart() {\n            dispatch({ type: PUT_DEVICES_STARTED });\n        }\n        function onSuccess(response) {\n            dispatch({ type: PUT_DEVICES_SUCCESS, payload: response });\n            return response;\n        }\n        function onError(error) {\n            dispatch({ type: PUT_DEVICES_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const updateDevices = await api.putDevices(device, ID);\n            return onSuccess(updateDevices)\n        } catch (error) {\n            return onError(error)\n        }\n    }\n}\nexport const deleteDevices = (ID) => {\n    return async dispatch => {\n        function onStart() {\n            dispatch({ type: DELETE_DEVICES_STARTED });\n        }\n        function onSuccess(response) {\n            dispatch({ type: DELETE_DEVICES_SUCCESS, payload: ID });\n            return response;\n        }\n        function onError(error) {\n            dispatch({ type: DELETE_DEVICES_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const removeDevices = await api.deleteDevices(ID);\n            return onSuccess(ID)\n        } catch (error) {\n            return onError(error)\n        }\n    }\n}\n\nexport const updateDevices = (devices, d3) => {\n    return { type: 'UPDATE_DEVICES', payload: { devices, d3 } }\n}\n\nexport const setSelectedDevice = (device) => {\n    return { type: 'SET_SELECTED_DEVICE', payload: device }\n}\n","import axios from 'axios';\nimport * as log from 'loglevel';\n\nimport { apiIPAddress } from '../settings/settings'\n\nconst operator = 'status'\n\nexport async function getStatus() {\n    try {\n        const response = await axios({\n            method: 'get',\n            url: apiIPAddress() + operator,\n            headers: {\n                'X-API-Key': '123456',\n                'Access-Control-Allow-Origin': '*'\n            }\n            // token: token.username\n        });\n        // Success 🎉\n        //  log.debug('THE STATE OF PLAY IS!!! on get status',response);\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        return dataJson;\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n        throw error;\n\n    }\n\n\n}\n\nexport async function postStatus(status) {\n    // log.debug(\"postStatus: started: status\", status)\n    try {\n        const response = await axios({\n            method: 'POST',\n            url: apiIPAddress() + operator,\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'application/json'\n            },\n            data: status\n        });\n\n        // Success 🎉\n        // log.debug('postStatus: response: ',response);\n        // const data = response.data;\n        // const dataJson = JSON.parse(data)\n        // log.debug('response data json',dataJson);\n\n        return response;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n        throw error;\n    }\n}\n","import { normalize, schema } from 'normalizr';\nimport {\n    GET_STATUS,\n    GET_STATUS_STARTED,\n    GET_STATUS_SUCCESS,\n    GET_STATUS_FAILURE,\n\n    POST_STATUS,\n    POST_STATUS_STARTED,\n    POST_STATUS_SUCCESS,\n    POST_STATUS_FAILURE,\n} from '../types/status_types';\n\nimport { statusSchema, statusesSchema } from '../../normalizr/status_schema';\nimport * as api from '../../api/status_api'\n\n\n// get\n// ******************************\nexport const getStatus = () => {\n    return async dispatch => {\n\n        function onStart() {\n            dispatch({ type: GET_STATUS_STARTED });\n        }\n        function onSuccess(status) {\n            dispatch({ type: GET_STATUS_SUCCESS, payload: status });\n            return status;\n        }\n        function onError(error) {\n            dispatch({ type: GET_STATUS_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const status = await api.getStatus();\n            //const normalizedStatus = normalize(status, statusesSchema);\n            //console.log('normalizedStatus',normalizedStatus)\n\n\n            return onSuccess(status);\n        } catch (error) {\n            return onError(error);\n        }\n    };\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n\n// For some reason, this function does not execute the dispatch function. Have no idea why...\nexport const postStatus = (status) => {\n\n    return async dispatch => {\n\n        function onStart() {\n            dispatch({ type: POST_STATUS_STARTED });\n        }\n\n        function onSuccess(response) {\n            dispatch({ type: POST_STATUS_SUCCESS, payload: response });\n            return response;\n        }\n        function onError(error) {\n            dispatch({ type: POST_STATUS_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n\n            // currently the backend just returns the status code\n            // if backend returns new status object, newStatus should be passed to onSuccess instead of status\n            const response = await api.postStatus(status);\n            return onSuccess(status)\n\n        } catch (error) {\n            return onError(error)\n        }\n    }\n}\n","import styled, { css } from 'styled-components'\nimport Modal from 'react-modal';\nimport { isMobile } from \"react-device-detect\"\n\nexport const ModalContainerCSS = styled(Modal)`\n\toutline: none !important;\n\toutline-offset: none !important;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translate(-50%, -50%);\n\tright: auto;\n\tbottom: auto;\n\tposition: absolute;\n\tz-index: 500;\n\t\n\tmin-width: 30rem;\n    max-width: 95%;\n    width: ${isMobile && \"95%\"};\n\n\theight: 95%;\n\tcolor: ${props => props.theme.bg.octonary};\n    background-color: rgba(0, 0, 0, 0.4);\n\tdisplay: flex;\n\tflex-direction: column;\n\tborder-radius: 1rem;\n\toverflow: hidden;\n`\n\nexport const BodyContainerCSS = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tpadding: 1rem;\n\tflex: 1;\n\tjustify-content: space-between;\n\toverflow: hidden;\n\tbackground: ${props => props.theme.bg.secondary};\n`","import {Container} from \"react-smooth-dnd\";\nimport React, {useEffect, useState} from \"react\";\n\nconst ContainerWrapper = (props) => {\n\tconst {\n\t\tchildren,\n\t\tonDragEnter,\n\t\tonDragLeave,\n\t\tstyle,\n\t\tisRow,\n\t\tonDrop,\n\t\tcolor,\n\t\tshowHighlight,\n\t\tonHoverChange,\n\t\thighlightColor,\n\t\tshiftable,\n\t\t...rest\n\t} = props\n\n\tconst [hovering, setHovering] = useState(false)\n\n\tuseEffect(() => {\n\t\tonHoverChange && onHoverChange(hovering)\n\t}, [hovering])\n\n\t// useEffect(() => {\n\t// \tif(props.hovering && !hovering) setHovering(true)\n\t// }, [props.hovering])\n\n\n\treturn (\n\t\t<Container\n\t\t\tonDragEnter={() => {\n\t\t\t\tsetHovering(true)\n\t\t\t\tonDragEnter && onDragEnter()\n\t\t\t}}\n\t\t\tonDragLeave={()=>{\n\t\t\t\tsetHovering(false)\n\t\t\t\tonDragLeave && onDragLeave()\n\t\t\t}}\n\t\t\tonDrop={(dropResult)=>{\n\t\t\t\tsetHovering(false)\n\t\t\t\tonDrop && onDrop(dropResult)\n\t\t\t}}\n\t\t\tstyle={{\n\t\t\t\t...style,\n\t\t\t\t// border: \"1px solid black\",\n\t\t\t\ttransition: \"all 0.5s ease\",\n\t\t\t\tpadding: shiftable && ((hovering || props.hovering) ? (isRow ? \"2.5rem 0\" : \"0 2.5rem\") : 0),\n\t\t\t\tbackground: (hovering || props.hovering) ? (showHighlight ? highlightColor : \"transparent\") : (color ? color : \"transparent\"),\n\t\t\t\tfilter: hovering && \"brightness(120%)\",\n\t\t\t}}\n\t\t\t{...rest}\n\t\t>\n\t\t\t{children}\n\t\t</Container>\n\t)\n}\n\n// Specifies propTypes\nContainerWrapper.propTypes = {\n};\n\n// Specifies the default values for props:\nContainerWrapper.defaultProps = {\n\tonDragEnter: null,\n\tonDragLeave: null,\n\tonDrop: null,\n\tshowHighlight: true,\n\tonHoverChange: null,\n\thovering: false,\n\thighlightColor: \"rgb(50,50,50)\",\n\tshiftable: true\n};\n\nexport default ContainerWrapper","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport TimePicker from \"rc-time-picker\";\nimport \"rc-time-picker/assets/index.css\";\n\nconst DeliTimePicker = ({ className, ...rest }) => (\n  <TimePicker\n    {...rest}\n    className={className}\n    popupClassName={className}\n  />\n);\n\nDeliTimePicker.propTypes = {\n  className: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.instanceOf(moment)\n};\n\nexport default DeliTimePicker;\n","import styled from \"styled-components\";\nimport TimePicker from \"./time_picker\";\nimport { hexToRGBA } from '../../../../../methods/utils/color_utils'\n\nconst StyledTimePicker = styled(TimePicker)`\n  //margin: 0;\n  //padding: 0;\n  & .rc-time-picker-panel-select-option-selected {\n    background-color: ${props => props.schema ? hexToRGBA(props.theme.schema[props.schema].solid, 0.5) : hexToRGBA(props.theme.fg.red, 0.5)};\n    font-weight: normal;\n  }\n\n  & .rc-time-picker-clear,\n  & .rc-time-picker-clear-icon:after {\n    font-size: ${props => props.theme.fontSize.sz4};\n  }\n\n  & .rc-time-picker-panel-select {\n    font-family: ${props => props.theme.font.primary};\n    font-size: 16px;\n    cursor: pointer;\n\n    li:hover {\n        background-color: ${props => props.schema ? hexToRGBA(props.theme.schema[props.schema].solid, 0.1) : hexToRGBA(props.theme.fg.red, 0.1)};\n    }\n  }\n\n  & .rc-time-picker-panel-input {\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz4};\n    cursor: pointer;\n  }\n\n  & .rc-time-picker-input {\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz4};\n    cursor: pointer;\n    \n    background: ${props => props.theme.bg.secondary};\n\n    ::-webkit-scrollbar {\n      width: 0;\n      height: 0;\n    }\n\n    transition: none;\n  }\n\n`;\n\nexport default StyledTimePicker;\n","import styled from 'styled-components';\nimport TimePicker from './time_picker_field';\nimport {css} from 'styled-components'\n\n\nexport const DefaultContainer = styled.div`\n\tposition: relative;\n`;\n\nexport const DefaultErrorContainerComponent = styled.div`\n    width: auto;\n    height: auto;\n    position: absolute;\n    top: 50%;\n    right: 0.5rem;\n    transform: translateY(-50%);\n    margin: 0;\n    padding: 0;\n    z-index: 500;\n`;\n","// import external modules\nimport React from \"react\";\nimport { useField, useFormikContext } from \"formik\";\nimport TimePicker from './time_picker';\nimport moment from 'moment';\nimport 'rc-time-picker/assets/index.css';\n\n// import components\nimport ErrorTooltip from \"../error_tooltip/error_tooltip\";\n\n// import styles\nimport * as styled from './time_picker_field.style'\nimport PropTypes from \"prop-types\";\nimport {getMessageFromError} from \"../../../../methods/utils/form_utils\";\n\nconst TimePickerField = (props) => {\n\n\tconst {\n\t\tTimePickerCss,\n\t\tContainer,\n\t\tErrorContainerComponent,\n\t\tcontainerStyle,\n\t\tstyle,\n\t\tonChange,\n\t\tdefaultOpenValue,\n\t\tdefaultValue,\n\t\tmapOutput,\n\t\tmapInput,\n\t\t...rest\n\t} = props\n\n\tconst { setFieldValue, setFieldTouched } = useFormikContext();\n\tconst [field, meta] = useField(props);\n\n\tconst {\n\t\tvalue: fieldValue,\n\t\tname: fieldName\n\t} = field\n\n\tconst {\n\t\ttouched,\n\t\terror\n\t} = meta\n\n\tconst hasError = touched && error;\n\tconst errorMessage = getMessageFromError(error);\n\n\treturn (\n\t\t\t<Container\n\t\t\t\tstyle={containerStyle}\n\t\t\t>\n\t\t\t\t<TimePicker\n\t\t\t\t\t{...style}\n\t\t\t\t\t{...field}\n\t\t\t\t\t{...rest}\n\t\t\t\t\tcss={TimePickerCss}\n\t\t\t\t\thasError={hasError}\n\t\t\t\t\t// showSecond={false}\n                    // defaultValue={moment().format()}\n\t\t\t\t\tvalue={!!fieldValue ? mapInput(fieldValue) : mapInput(defaultValue)}\n\t\t\t\t\tonChange={(val) => {\n\n\t\t\t\t\t\tif(!touched) setFieldTouched(fieldName, true)\n\t\t\t\t\t\tsetFieldValue(fieldName, mapOutput(val))\n\n\t\t\t\t\t\tonChange && onChange(val)\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<ErrorTooltip\n\t\t\t\t\tvisible={hasError}\n\t\t\t\t\ttext={errorMessage}\n\t\t\t\t\tContainerComponent={ErrorContainerComponent}\n\t\t\t\t/>\n\t\t\t</Container>\n\t)\n}\n\n// Specifies propTypes\nTimePickerField.propTypes = {\n\tContainer: PropTypes.elementType,\n\tErrorContainerComponent: PropTypes.elementType,\n\tcontainerStyle: PropTypes.object,\n\tstyle: PropTypes.object,\n\tonChange: PropTypes.func,\n\tmapOutput: PropTypes.func,\n\tmapInput: PropTypes.func,\n};\n\n// Specifies the default values for props:\nTimePickerField.defaultProps = {\n\tContainer: styled.DefaultContainer,\n\tErrorContainerComponent: styled.DefaultErrorContainerComponent,\n\tcontainerStyle: {},\n\tstyle: {},\n\tonChange: () => {},\n\tmapOutput: val => val,\n\tmapInput: val => val,\n};\n\nexport default TimePickerField;\n","export const LOT_DRAGGING = 'LOT_DRAGGING'\nexport const LOT_DROPPING = 'LOT_DROPPING'\nexport const FIELD_DRAGGING = 'FIELD_DRAGGING'\nexport const COLUMN_HOVERING = 'COLUMN_HOVERING'\nexport const LOT_HOVERING = 'LOT_HOVERING'\nexport const SET_SIZE = \"SET_SIZE\"","import { useCallback, useRef, useState } from \"react\";\n\nconst useLongPress = (\n\tonLongPress,\n\tonLongPressEnd,\n\tonClick,\n\t{ shouldPreventDefault = true, delay = 300, minRate } = {}\n) => {\n\tconst [longPressTriggered, setLongPressTriggered] = useState(false);\n\tconst timeout = useRef();\n\tconst target = useRef();\n\n\tconst start = useCallback(\n\t\tevent => {\n\t\t\tif (shouldPreventDefault && event.target) {\n\t\t\t\tevent.target.addEventListener(\"touchend\", preventDefault, {\n\t\t\t\t\tpassive: false\n\t\t\t\t});\n\t\t\t\ttarget.current = event.target;\n\t\t\t}\n\t\t\ttimeout.current = setTimeout(() => {\n\t\t\t\tonLongPress(event);\n\t\t\t\tsetLongPressTriggered(true);\n\t\t\t}, delay);\n\t\t},\n\t\t[onLongPress, delay, shouldPreventDefault]\n\t);\n\n\tconst clear = useCallback(\n\t\t(event, shouldTriggerClick = true) => {\n\t\t\ttimeout.current && clearTimeout(timeout.current);\n\t\t\tonLongPressEnd()\n\t\t\tshouldTriggerClick && !longPressTriggered && onClick();\n\t\t\tsetLongPressTriggered(false);\n\t\t\tif (shouldPreventDefault && target.current) {\n\t\t\t\ttarget.current.removeEventListener(\"touchend\", preventDefault);\n\t\t\t}\n\t\t},\n\t\t[shouldPreventDefault, onClick, longPressTriggered]\n\t);\n\n\treturn {\n\t\tonMouseDown: e => start(e),\n\t\tonTouchStart: e => start(e),\n\t\tonMouseUp: e => clear(e),\n\t\tonMouseLeave: e => clear(e, false),\n\t\tonTouchEnd: e => clear(e)\n\t};\n};\n\nconst isTouchEvent = event => {\n\treturn \"touches\" in event;\n};\n\nconst preventDefault = event => {\n\tif (!isTouchEvent(event)) return;\n\n\tif (event.touches.length < 2 && event.preventDefault) {\n\t\tevent.preventDefault();\n\t}\n};\n\nexport default useLongPress;","import styled from 'styled-components';\nimport {css} from 'styled-components'\n\n\nexport const IconContainerComponent = styled.div`\n    width: auto;\n    height: auto;\n    position: absolute;\n    top: 50%;\n    right: 2rem;\n    transform: translateY(-50%);\n    margin: 0;\n    padding: 0;\n`;\n\nexport const errorCss = css`\n    box-shadow: 0 0 5px 2px red;\n    // border: 1px solid red;\n    \n    &:focus{\n        outline: 0 !important;\n        box-shadow: 0 0 5px 2px red;\n        // border: 1px solid red;\n    }\n`\n","import React, {useEffect, useRef, useState, useContext } from \"react\"\n\n// components internal\nimport ErrorTooltip from '../error_tooltip/error_tooltip'\nimport NumberInput, {NUMBER_INPUT_BUTTON_TYPES} from \"../../number_input/number_input\"\n\n// functions external\nimport PropTypes from 'prop-types'\nimport { useField, useFormikContext } from \"formik\"\nimport {\n\tisMobile\n} from \"react-device-detect\";\n\n// hooks\nimport useLongPress from \"../../../../hooks/useLongPress\"\n\n// styles\nimport * as styled from './number_field.style'\nimport { ThemeContext } from 'styled-components'\n\n// utils\nimport {setAcceleratingInterval} from \"../../../../methods/utils/utils\"\n\n// options for useLongPress hook\nconst longPressOptions = {\n\tshouldPreventDefault: true,\n\tdelay: 500,\n}\n\nconst NumberField = (props) => {\n\n\tconst {\n\t\tmaxValue,\n\t\tminValue,\n\t\t...rest\n\t} = props\n\n\tconst { setFieldValue, setFieldTouched, validateOnChange, validateOnBlur, validateField, validateForm, ...context } = useFormikContext()\n\tconst [field, meta] = useField(props)\n\tconst {\n\t\tvalue: fieldValue,\n\t\tname: fieldName\n\t} = field\n\n\tconst timeoutRef = useRef(null)\n\n\tconst [longPressing, setLongPressing] = useState(false)\t// is button being long pressed??\n\tconst [valueState, setValueState] = useState(fieldValue)\t\t\t// temp stores field value for long press. Necessary because useState allows for using callback with previous value, which setFieldValue does not\n\tconst [previousValue, setPreviousValue] = useState(fieldValue)\n\tconst [focused, setFocused] = useState(false)\n\n\t// extract meta data\n\tconst { touched, error } = meta\n\n\t// does the field contain an error?\n\tconst hasError = touched && error\n\n\tconst themeContext = useContext(ThemeContext);\n\n\tuseEffect(() => {\n\t\tsetFieldValue(fieldName, parseInt(valueState))\n\t}, [valueState])\n\n\tconst createLongPressHandler = (buttonType) => {\n\t\treturn () => {\n\t\t\tsetLongPressing(true)\n\t\t\tsetValueState(parseInt(fieldValue) ||  0)\n\n\t\t\tsetAcceleratingInterval(\n\t\t\t\t() => {\n\n\t\t\t\t\t// evaluate as plus press\n\t\t\t\t\tif(buttonType === NUMBER_INPUT_BUTTON_TYPES.PLUS) {\n\n\t\t\t\t\t\t// if maxValue is provided, value must not exceed maxValue\n\t\t\t\t\t\tif(maxValue !== null) {\n\t\t\t\t\t\t\tsetValueState((previous) => {\n\t\t\t\t\t\t\t\t// if previous value is less than maxValue, go ahead and increment\n\t\t\t\t\t\t\t\tif(previous < maxValue) {\n\t\t\t\t\t\t\t\t\treturn parseInt(previous) + 1\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// *** OTHERWISE ***\n\t\t\t\t\t\t\t\ttimeoutRef.current && clearTimeout(timeoutRef.current)\t// clear timeout to cancel callback\n\t\t\t\t\t\t\t\treturn parseInt(previous)\t// return previous value\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// otherwise, value can be anything\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tsetValueState((previous) => {\n\t\t\t\t\t\t\t\treturn parseInt(previous) + 1\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// evaluate as minus press\n\t\t\t\t\telse {\n\t\t\t\t\t\t// if min value is provided, value cannot be set lower than minValue\n\t\t\t\t\t\tif(minValue !== null) {\n\t\t\t\t\t\t\tsetValueState((previous) => {\n\t\t\t\t\t\t\t\t// if previous is still greater than minValue, go ahead and decrement\n\t\t\t\t\t\t\t\tif(previous > minValue) {\n\t\t\t\t\t\t\t\t\treturn parseInt(previous) - 1\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// *** otherwise ***\n\t\t\t\t\t\t\t\ttimeoutRef.current && clearTimeout(timeoutRef.current)\t// clear timeout to cancel callback\n\t\t\t\t\t\t\t\treturn previous\t\t// return previous value\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// otherwise value can be anything\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tsetValueState((previous) => {\n\t\t\t\t\t\t\t\treturn parseInt(previous) - 1\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t50,\n\t\t\t\t500,\n\t\t\t\t99999999,\n\t\t\t\t25,\n\t\t\t\ttimeoutRef\n\t\t\t)\n\t\t}\n\t}\n\n\tconst onLongPressEnd = () => {\n\t\tsetLongPressing(false)\t// set pressing to false\n\t\ttimeoutRef.current && clearTimeout(timeoutRef.current)\t// clear timeout to stop callback\n\t}\n\n\tconst handleFocus = () => {\n\t\tif(isMobile) {\n\t\t\tsetFocused(true)\n\t\t\tsetPreviousValue(parseInt(fieldValue))\n\t\t\tsetFieldValue(fieldName, \"\")\n\t\t}\n\t}\n\n\tconst handleBlur = () => {\n\t\tif(isMobile) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tsetFocused(false)\n\t\t\t\tif(!longPressing)\n\t\t\t\t\tsetFieldValue(fieldName,\n\t\t\t\t\t\tNumber.isInteger(parseInt(fieldValue)) ? parseInt(fieldValue) :\n\t\t\t\t\t\t\tNumber.isInteger(parseInt(previousValue)) ? parseInt(previousValue) :\n\t\t\t\t\t\t\t\t0\n\t\t\t\t\t)\n\t\t\t}, 500)\n\t\t}\n\t}\n\n\tconst handleMinusClick = () => {\n\t\tif(!touched) {\n\t\t\tsetFieldTouched(fieldName, true)\n\t\t}\n\n\t\tif (maxValue) {\n\t\t\tif (fieldValue > maxValue) {\n\t\t\t\t// fieldValue should not exceed count, it may have been set higher before a lot was selected\n\t\t\t\t// reduce fieldValue to lot count\n\t\t\t\tsetFieldValue(fieldName, parseInt(maxValue))\n\t\t\t}\n\t\t}\n\n\t\t// fieldValue cannot be negative\n\t\tif (fieldValue > minValue) setFieldValue(fieldName,parseInt(parseInt(fieldValue) - 1))\n\t\t// setFieldValue(fieldName,fieldValue - 1)\n\t}\n\n\tconst handlePlusClick = () => {\n\t\tif(!touched) {\n\t\t\tsetFieldTouched(fieldName, true)\n\t\t}\n\n\t\t// if there is a maxValue, fieldValue cannot exceed maxValue\n\t\tif (maxValue) {\n\t\t\tif (parseInt(fieldValue) < maxValue) {\n\t\t\t\tsetFieldValue(fieldName,parseInt(parseInt(fieldValue) + 1))\n\t\t\t}\n\n\t\t\t// fieldValue is greater than count (probably was set before lot was selected), reduce to count\n\t\t\telse {\n\t\t\t\tsetFieldValue(fieldName, parseInt(maxValue))\n\t\t\t}\n\n\t\t}\n\t\t// otherwise fieldValue can be anything\n\t\telse {\n\t\t\tsetFieldValue(fieldName,parseInt(parseInt(fieldValue) + 1))\n\t\t}\n\t}\n\n\t// create events for long press (plus and minus)\n\tconst longPlusPressEvent = useLongPress(createLongPressHandler(NUMBER_INPUT_BUTTON_TYPES.PLUS), onLongPressEnd, handlePlusClick, longPressOptions)\n\tconst longMinusPressEvent = useLongPress(createLongPressHandler(NUMBER_INPUT_BUTTON_TYPES.MINUS), onLongPressEnd, handleMinusClick, longPressOptions)\n\n\treturn (\n\t\t\t<NumberInput\n\t\t\t\tonBlur={handleBlur}\n\t\t\t\tonFocus={handleFocus}\n\t\t\t\tlongPlusPressEvent={longPlusPressEvent}\n\t\t\t\tlongMinusPressEvent={longMinusPressEvent}\n\t\t\t\tinputCss={hasError ? styled.errorCss : null}\n\t\t\t\tthemeContext={themeContext}\n\t\t\t\t// onMinusClick={handleMinusClick}\n\t\t\t\tminusDisabled={!(fieldValue > minValue)}\n\t\t\t\thasError={hasError}\n\t\t\t\tonInputChange={(e) => {\n\n\t\t\t\t\tif(!touched) {\n\t\t\t\t\t\tsetFieldTouched(fieldName, true)\n\t\t\t\t\t}\n\n\t\t\t\t\tconst enteredValue = e.target.value\n\t\t\t\t\tconst enteredValueInt = parseInt(enteredValue)\n\n\t\t\t\t\tif (isNaN(enteredValueInt)) {\n\t\t\t\t\t\tif(enteredValue === \"-\") {\n\t\t\t\t\t\t\tsetFieldValue(fieldName, -0)\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tsetFieldValue(fieldName, 0)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// if there is a maxValue, the fieldValue cannot exceed this\n\t\t\t\t\t\tif (maxValue) {\n\t\t\t\t\t\t\tif (enteredValueInt <= maxValue) setFieldValue(fieldName,enteredValueInt)\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// otherwise the value can be anything\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tsetFieldValue(fieldName, enteredValueInt)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\n\t\t\t\t}}\n\t\t\t\tvalue={longPressing ? valueState : fieldValue}\n\t\t\t\tplusDisabled={(maxValue) && !(fieldValue < maxValue)}\n\t\t\t\t// onPlusClick={handlePlusClick}\n\t\t\t\tinputChildren={<ErrorTooltip\n\t\t\t\t\tvisible={hasError && !focused}\n\t\t\t\t\ttext={error}\n\t\t\t\t\tcolor={themeContext.bad}\n\t\t\t\t\tContainerComponent={styled.IconContainerComponent}\n\t\t\t\t/>}\n\n\t\t\t/>\n\t)\n}\n\n// Specifies propTypes\nNumberField.propTypes = {\n\tmaxValue: PropTypes.number,\n\tminValue: PropTypes.number,\n}\n\n// Specifies the default values for props:\nNumberField.defaultProps = {\n\tmaxValue: null,\n\tminValue: null,\n}\n\nexport default NumberField\n","import uuid from 'uuid'\nimport {DEVICE_CONSTANTS} from \"../../constants/device_constants\";\nimport  store  from \"../../redux/store/index\";\nimport {defaultTask} from \"../../constants/route_constants\";\nimport {isArray} from \"./array_utils\";\nimport {useSelector} from \"react-redux\";\n\n/**\n * Creates a default route based on store state\n */\nexport const generateDefaultRoute = (obj) => {\n    const storeState = store.getState()\n    const MiRMapEnabled = storeState.localReducer.localSettings.MiRMapEnabled\n\n    const currentMapId = storeState.settingsReducer.settings.currentMapId\n    const maps = storeState.mapReducer.maps\n    const currentMap = Object.values(maps).find(map => map._id === currentMapId)\n\n    return {\n        ...defaultTask,\n        device_types: !!MiRMapEnabled ? [DEVICE_CONSTANTS.MIR_100, DEVICE_CONSTANTS.HUMAN] : [DEVICE_CONSTANTS.HUMAN],\n        handoff: true,\n        map_id: currentMap._id,\n        load: {...defaultTask.load},\n        unload: {...defaultTask.unload},\n        obj: obj? obj : null,\n        _id: uuid.v4(), // NOTE - ID IS GENERATED HERE INSTEAD OF IN defaultTask SO THE ID IS GENERATED EACH TIME THE FUNCTION IS CALLED\n    }\n}\n\nexport const autoGenerateRoute = (obj) => {\n    const storeState = store.getState()\n    const MiRMapEnabled = storeState.localReducer.localSettings.MiRMapEnabled\n    const currentMapId = storeState.settingsReducer.settings.currentMapId\n    const maps = storeState.mapReducer.maps\n    const currentMap = Object.values(maps).find(map => map._id === currentMapId)\n    const routeConfirmationLocation = storeState.tasksReducer.routeConfirmationLocation\n\n    const positions = storeState.positionsReducer.positions\n\n    return {\n        ...defaultTask,\n        device_types: !!MiRMapEnabled ? [DEVICE_CONSTANTS.MIR_100, DEVICE_CONSTANTS.HUMAN] : [DEVICE_CONSTANTS.HUMAN],\n        handoff: true,\n        map_id: currentMap._id,\n        load: {...defaultTask.load,\n               station: !!positions[routeConfirmationLocation] ? positions[routeConfirmationLocation].parent : routeConfirmationLocation,\n               position: routeConfirmationLocation,\n              },\n        unload: {...defaultTask.unload},\n        obj: obj ? obj : null,\n        _id: uuid.v4(), // NOTE - ID IS GENERATED HERE INSTEAD OF IN defaultTask SO THE ID IS GENERATED EACH TIME THE FUNCTION IS CALLED\n    }\n}\n\nexport const isHumanTask = (task) => {\n    return task && isArray(task.device_types) && task.device_types.includes(DEVICE_CONSTANTS.HUMAN)\n}\n\nexport const buildDefaultRouteName = (nameA, nameB) => {\n    if(!nameA) return \"\"\n    return nameA + \" => \" + nameB\n}\n\n/*\n* Returns true if task ONLY supports human device (and no other types), and false otherwise\n* */\nexport const isOnlyHumanTask = (task) => {\n    var containsHuman = false\n    var containsNonHuman = false\n    if(task && isArray(task.device_types)) {\n        task.device_types.forEach((currType) => {\n            if( currType === DEVICE_CONSTANTS.HUMAN ) containsHuman = true\n            if( currType !== DEVICE_CONSTANTS.HUMAN )  containsNonHuman = true\n        })\n    }\n\n\n    return !containsNonHuman && containsHuman\n}\n\nexport const isMiRandHumanTask = (task) => {\n    return task && isArray(task.device_types) && task.device_types.includes(DEVICE_CONSTANTS.MIR_100) && task.device_types.includes(DEVICE_CONSTANTS.HUMAN)\n}\n\n\nexport const isMiRTask = (task) => {\n    return task && isArray(task.device_types) && task.device_types.includes(DEVICE_CONSTANTS.MIR_100)\n}\n\nexport const getRouteProcesses = (routeId) => {\n    const storeState = store.getState()\n    const processes = storeState.processesReducer.processes\n\n    return Object.values(processes).filter((currProcess, currIndex) => {\n        if(currProcess.routes.includes(routeId)) return true\n    })\n}\n\nexport const isNextRouteViable = (currentRoute, nextRoute) => {\n    const currentUnloadStationId = getUnloadStationId(currentRoute)\n    const nextLoadStationId = getLoadStationId(nextRoute)\n\n    if (currentUnloadStationId === nextLoadStationId) {\n        return true\n    }\n}\n\nexport const getUnloadStationId = (route) => {\n    return route?.unload?.station\n}\n\nexport const getUnloadPositionId = (route) => {\n    return route?.unload?.position\n}\n\nexport const getLoadStationId = (route) => {\n    return route?.load?.station\n}\n\nexport const getLoadPositionId = (route) => {\n    return route?.load?.position\n}\n\nexport const getRouteStart = (route) => {\n    let hasStart = getLoadStationId(route)\n    if(!hasStart) hasStart = getLoadPositionId(route)\n\n    return hasStart\n}\n\nexport const getRouteEnd = (route) => {\n    let hasEnd = getUnloadStationId(route)\n    if(!hasEnd) hasEnd = getUnloadPositionId(route)\n\n    return hasEnd\n}\n\nexport const getHasStartAndEnd = (route) => {\n    return getRouteEnd(route) && getRouteStart(route)\n}\n\nexport const isStationLoadStation = (route, stationId) => {\n    return stationId === getLoadStationId(route)\n}\n\n\n\nexport const isStationUnloadStation = (route, stationId) => {\n    return stationId === getUnloadStationId(route)\n}\n\nexport const isPositionAtLoadStation = (route, positionId) => {\n    const storeState = store.getState()\n    const stations = storeState.stationsReducer.stations || {}\n\n    // get load station\n    const loadStationId = getLoadStationId(route)\n    const loadStation = stations[loadStationId] || { children: [] }\n\n\n    // if loadStation's children includes positionId, return true\n    if (loadStation.children.includes(positionId)) return true\n\n    // otherwise return false\n    return false\n}\n\nexport const isPositionAtUnloadStation = (route, positionId) => {\n    const storeState = store.getState()\n    const stations = storeState.stationsReducer.stations || {}\n\n    // get load station\n    const unloadStationId = getUnloadStationId(route)\n    const unloadStation = stations[unloadStationId] || { children: [] }\n\n\n    // if loadStation's children includes positionId, return true\n    if (unloadStation.children.includes(positionId)) return true\n\n    // otherwise return false\n    return false\n\n}\n\nexport const isPositionInRoutes = (routes, positionId) => {\n    const storeState = store.getState()\n    const stations = storeState.stationsReducer.stations || {}\n\n    for(const currRoute of routes) {\n\n        const {\n            load,\n            unload\n        } = currRoute || {}\n\n        const {\n            station: loadStationId\n        } = load || {}\n        const loadStation = stations[loadStationId] || { children: [] }\n        if(loadStation.children.includes(positionId)) return true   // found station with position as child, return true\n\n        const {\n            station: unloadStationId\n        } = unload || {}\n        const unloadStation = stations[unloadStationId] || { children: [] }\n        if(unloadStation.children.includes(positionId)) return true // found station with position as child, return true\n    }\n\n    return false // none of the station's contained the position\n}\n\nexport const getLoadStationDashboard = (route) => {\n    const storeState = store.getState()\n    const stations = storeState.stationsReducer.stations || {}\n\n    const loadStationId = getLoadStationId(route)\n\n    const station = stations[loadStationId] || {}\n\n    const dashboards = isArray(station.dashboards) ?  station.dashboards : [null]\n\n    return dashboards[0]\n}\n\nexport const getRouteIndexInRoutes = (processRouteIds, routeId) => {\n    return processRouteIds.indexOf(routeId)\n}\n\nexport const isStationInRoutes = (routes, stationId) => {\n    let containsStation = false\n\n    for(const currRoute of routes) {\n        if(containsStation) return containsStation\n\n            const {\n                load,\n                unload\n            } = currRoute || {}\n\n        const {\n            station: loadStationId\n        } = load || {}\n\n        const {\n            station: unloadStationId\n        } = unload || {}\n\n        if((loadStationId === stationId) || (unloadStationId === stationId)) containsStation = true\n    }\n\n    return containsStation\n}\n","import styled from \"styled-components\";\n\nexport const AddTaskAlertContainer = styled.div`\n    position: fixed;\n    flex-direction: column;\n    text-align: center;\n\n    background-color: ${props => props.theme.bg.secondary};\n    opacity: 90%;\n    border-radius: .3rem;\n    min-width: 70%;\n    max-width: 95%;\n    margin-left: auto;\n    margin-right: auto;\n    box-shadow: .1rem .1rem .5rem grey;\n    \n    left: 50%;\n    top: 50%;\n    transform: translate(-50%,-50%);\n    \n    padding-top: 1rem;  \n    z-index: 10000;\n`\n\nexport const AddTaskAlertLabel = styled.span`\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz2};\n    font-weight: bold;\n    color: ${props => props.color};\n`\n\nexport const AddTaskAlertMessage = styled.p`\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz3};\n    color: ${props => props.color};\n`","import React, { useEffect } from 'react';\n\n// import utils\nimport { ADD_TASK_ALERT_TYPE } from \"../../../../../../constants/dashboard_constants\";\n\n// Import styles\nimport * as style from './task_added_alert.style'\n\nconst TaskAddedAlert = (props) => {\n\n    // extract props\n    const {\n        type,\n        visible,\n        label,\n        message,\n        containerStyle\n    } = props\n\n\n    let alertColor\n    switch (type) {\n        case ADD_TASK_ALERT_TYPE.TASK_EXISTS:\n            alertColor = '#FF4B4B'\n            break\n        case ADD_TASK_ALERT_TYPE.ADDING:\n            alertColor = '#6c6e78'\n            break\n        case ADD_TASK_ALERT_TYPE.TASK_ADDED:\n            alertColor = '#79d99b'\n            break\n\n        case ADD_TASK_ALERT_TYPE.FINISH_SUCCESS:\n        case ADD_TASK_ALERT_TYPE.KICK_OFF_SUCCESS:\n        case ADD_TASK_ALERT_TYPE.REPORT_SEND_SUCCESS:\n            alertColor = '#79d99b'\n            break\n\n        case ADD_TASK_ALERT_TYPE.FINISH_FAILURE:\n        case ADD_TASK_ALERT_TYPE.KICK_OFF_FAILURE:\n        case ADD_TASK_ALERT_TYPE.REPORT_SEND_FAILURE:\n            alertColor = '#FF4B4B'\n            break\n\n\n        default:\n            alertColor = '#FF4B4Bs'\n    }\n\n    if (visible) {\n        return <style.AddTaskAlertContainer style={containerStyle}>\n            <style.AddTaskAlertLabel color={alertColor}>{label}</style.AddTaskAlertLabel>\n            <style.AddTaskAlertMessage color={alertColor}>{message}</style.AddTaskAlertMessage>\n        </style.AddTaskAlertContainer>\n    } else {\n        return null\n    }\n}\n\nexport default TaskAddedAlert;\n","import styled, {css} from 'styled-components'\nimport {hexToRGBA, RGB_Linear_Shade} from \"../../../methods/utils/color_utils\";\n\nconst activeContainerStyle = css`\n\tcolor:  ${props => RGB_Linear_Shade(-0.1, hexToRGBA(props.color))};\n`\n\nconst hoverContainerStyle = css`\n\tcolor:  ${props => RGB_Linear_Shade(0.5, hexToRGBA(props.color))};\n`\n\nconst focusContainerStyle = css`\n\toutline: none;\n`\n\nconst disabledContainerStyle = css`\n\tpointer-events: none;\n`\n\n\n\nexport const Container = styled.button`\n\twidth: ${props => props.width};\n\theight: ${props => props.height};\n\tcolor: ${props => props.color};\n\t\n\t// flex layout\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\t\n\tborder: none;\n\ttransition: all 0.2s ease 0s;\n\tcursor: pointer;\n\toutline: none;\n\tbackground-color: transparent;\n\tmargin: 0;\n\tpadding: 0;\n\t\n\t&:focus {\n\t\t${focusContainerStyle};\n\t}\n\t\n\t&:hover {\n\t\t${props => props.hoverable && hoverContainerStyle};\n\t}\n\t// also allow enabling hover style via props\n\t${props=> props.isHovering && hoverContainerStyle};\n\t\n\t&:active {\n\t\t${props => props.clickable && activeContainerStyle};\n\t}\n\t// also allow enabling active style via props\n\t${props=> props.isActive && activeContainerStyle};\n\t\n\t// disabled style\n\t${props => props.disabled && disabledContainerStyle};\n\t\n`\n","import React, {useEffect, useRef, useState} from 'react'\nimport PropTypes from 'prop-types'\n\n// Import Styles\nimport * as style from './icon_button.style'\nimport useOnClickOutside from \"../../../hooks/useOnClickOutside\";\n\nconst IconButton = (props => {\n\n    const {\n        color,\n        children,\n        onClick,\n        disabled,\n        width,\n        height,\n        clickable,\n        hoverable,\n        containerStyle,\n        Component,\n        backgroundColor,\n        isActive,\n        isHovering,\n        onClickOutside\n    } = props\n\n    const ref = useRef() // ref for useOnClickOutside\n    useOnClickOutside(ref, onClickOutside) // calls onClickOutside when click outside of element\n\n    return(\n        <style.Container\n            disabled={disabled}\n            width={width}\n            height={height}\n            onClick={onClick}\n            clickable={clickable}\n            hoverable={hoverable}\n            color={color}\n            backgroundColor={backgroundColor}\n            style={containerStyle}\n            isActive={isActive}\n            isHovering={isHovering}\n            ref={ref}\n        >\n            { children}\n        </style.Container>\n    )\n\n})\n\n\n// Specifies propTypes\nIconButton.propTypes = {\n    clickable: PropTypes.bool,\n    hoverable: PropTypes.bool,\n    isActive: PropTypes.bool,\n    isHovering: PropTypes.bool,\n    onClick: PropTypes.func,\n    onClickOutside: PropTypes.func,\n    disabled: PropTypes.bool\n}\n\n// Specifies the default values for props:\nIconButton.defaultProps = {\n    clickable: true,\n    hoverable: true,\n    onClick: () => {},\n    onClickOutside: () => {},\n    disabled: false,\n    width: \"auto\",\n    height: \"auto\",\n    color: \"#123456\",\n    backgroundColor: \"#FFFFFF\",\n    isActive: false,\n    isHovering: false,\n\n}\n\nexport default IconButton\n","import styled from 'styled-components';\nimport {css} from 'styled-components'\n\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  \n`\n\nconst inputCss = css`\n  -webkit-transition: all 0.30s ease-in-out;\n  -moz-transition: all 0.30s ease-in-out;\n  -ms-transition: all 0.30s ease-in-out;\n  -o-transition: all 0.30s ease-in-out;\n\n  transition: all 0.30s ease-in-out;\n  transition: all 0.30s ease-in-out;\n  height: 3.5rem;\n\n  border-radius: 0rem;\n  text-align: center;\n  width: 10rem;\n  font-size: 2rem;\n  color: white;\n  background: ${props => props.theme.bg.quinary};\n\n  color: ${props => props.theme.bg.octonary};\n  background: ${props => props.theme.bg.tertiary};\n  border: none;\n  \n  //-webkit-appearance: none !important;\n  &:focus{\n    outline: 0 !important;\n    box-shadow: 0 0 5px 2px ${props => props.theme.fg.primary};\n    background: ${props => props.theme.bg.secondary};\n  }\n\n  /* Chrome, Safari, Edge, Opera */\n  &::-webkit-outer-spin-button,\n  &::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n\n  /* Firefox */\n  & input[type=number] {\n    -moz-appearance: textfield;\n  }\n\n  ${props => props.inputCss && props.inputCss};\n`\n\nexport const Input = styled.input`\n  ${inputCss};\n  \n  read-only: true;\n`\n\nexport const FakeInput = styled.div`\n  // background: ${props => props.theme.bg.secondary};\n  \n  ${inputCss};\n`\n\nconst buttonCss = css`\n  font-size: 3.5rem;\n  transition: text-shadow 0.1s ease, filter 0.1s ease;\n  color: ${props => props.color};\n  background: transparent;\n  border: none;\n  outline: none !important;\n\n  \n`\nconst usableCss = css`\n  &:hover {\n    cursor: pointer;\n  }\n\n  &:active{\n    filter: brightness(85%);\n    text-shadow: none;\n  }\n`\n\nconst notUsableCss = css`\n  &:hover {\n    cursor: default;\n  }\n\n`\n\nexport const Button = styled.button`\n  ${buttonCss};\n  ${props => props.disabled && disabledCss};\n  ${props => props.usable ? usableCss : notUsableCss}\n`\n\n\nconst disabledCss = css`\n  color: ${props => props.theme.disabled};\n  &:hover {\n    cursor: default !important;\n  }\n`\n","import React, {useRef} from \"react\"\n\n// functions external\nimport PropTypes from 'prop-types'\n\n// styles\nimport * as styled from './number_input.style'\n\nexport const NUMBER_INPUT_BUTTON_TYPES = {\n\tPLUS: \"PLUS\",\n\tMINUS: \"MINUS\"\n}\n\nconst NumberInput = ({\n\tmaxValue,\n\tminValue,\n\tonMinusClick,\n\tonPlusClick,\n\tminusDisabled,\n\thasError,\n\tonInputChange,\n\tinputDisabled,\n\tthemeContext,\n\tvalue,\n\tplusDisabled,\n\tinputCss,\n\tlongPlusPressEvent,\n\tlongMinusPressEvent,\n\tusable,\n\tonFocus,\n\tonBlur,\n\tinputChildren,\n\tinputStyle,\n\tbuttonStyle,\n\tcontainerStyle,\n\t...props }) => {\n\n\tconst inputRef = useRef(null)\n\tconst onWheel = () => {\n\t\tinputRef?.current && inputRef.current.blur();\n\t};\n\n\n\treturn (\n\t\t<styled.Container style={containerStyle}>\n\t\t\t<styled.Button\n\t\t\t\tusable={usable}\n\t\t\t\tcolor={themeContext.fg.primary}\n\t\t\t\tclassName='fas fa-minus-square'\n\t\t\t\tonClick={(e) => {\n\t\t\t\t\te.stopPropagation()\n\t\t\t\t\te.preventDefault()\n\t\t\t\t\tonMinusClick()\n\t\t\t\t}}\n\t\t\t\t{...longMinusPressEvent}\n\t\t\t\tdisabled={minusDisabled}\n\t\t\t\tstyle={buttonStyle}\n\t\t\t/>\n\t\t\t<div style={{position: \"relative\"}}>\n\t\t\t\t<styled.Input\n\t\t\t\t\tref={inputRef}\n\t\t\t\t\tusable={usable}\n\t\t\t\t\treadOnly={props.readOnly || !usable}\n\t\t\t\t\tdisabled={props.inputDisabled || !usable}\n\t\t\t\t\tinputCss={inputCss}\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tonChange={onInputChange}\n\t\t\t\t\tvalue={value}\n\t\t\t\t\tstyle={inputStyle}\n\t\t\t\t\tonFocus={onFocus}\n\t\t\t\t\tonBlur={onBlur}\n\t\t\t\t\tonScroll={(e)=>{\n\t\t\t\t\t\te.preventDefault()\n\t\t\t\t\t\treturn false\n\t\t\t\t\t}}\n\t\t\t\t\tonWheel={onWheel}\n\t\t\t\t\tonMouseWheel={(e) => {\n\t\t\t\t\t\te.preventDefault()\n\t\t\t\t\t\treturn false\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t</styled.Input>\n\t\t\t\t{inputChildren}\n\t\t\t</div>\n\t\t\t<styled.Button\n\t\t\t\tusable={usable}\n\t\t\t\tclassName='fas fa-plus-square'\n\t\t\t\tcolor={themeContext.fg.primary}\n\t\t\t\tdisabled={plusDisabled}\n\t\t\t\tonClick={(e) => {\n\t\t\t\t\te.stopPropagation()\n\t\t\t\t\te.preventDefault()\n\t\t\t\t\tonPlusClick()\n\t\t\t\t}}\n\t\t\t\t{...longPlusPressEvent}\n\t\t\t\tstyle={buttonStyle}\n\t\t\t/>\n\t\t</styled.Container>\n\t)\n}\n\n// Specifies propTypes\nNumberInput.propTypes = {\n\tplusDisabled: PropTypes.bool,\n\tinputDisabled: PropTypes.bool,\n}\n\n// Specifies the default values for props:\nNumberInput.defaultProps = {\n\tplusDisabled: false,\n\tinputDisabled: false,\n\tusable: true,\n\tonMinusClick: () => {},\n\tonPlusClick: () => {}\n}\n\nexport default NumberInput\n","import store from '../../redux/store/index'\nimport {useSelector} from \"react-redux\";\nimport {isHumanTask, isMiRTask} from \"./route_utils\";\nimport {DEVICE_CONSTANTS} from \"../../constants/device_constants\";\n\nexport const isRouteInQueue = (routeId, deviceType) => {\n\tconst taskQueue = store.getState().taskQueueReducer.taskQueue\n\tconst routes = store.getState().tasksReducer.tasks\n\n\tfor(const currTaskQueueItem of Object.values(taskQueue)) {\n\t\tconst {\n\t\t\tdevice_type: currDeviceType = \"\",\n\t\t\ttask_id: currRouteId = \"\"\n\t\t} = currTaskQueueItem || {}\n\n\t\tconst currRoute = routes[currRouteId] || {}\n\t\tconst {\n\t\t\thandoff: currRouteIsHandoff = false\n\t\t} = currRoute\n\n\t\tif (currRouteId === routeId && !currRouteIsHandoff  && deviceType === currDeviceType) {\n\t\t\t// task already in queue\n\t\t\treturn true\n\t\t}\n\n\t}\n\n\t// not in queue\n\treturn false\n}\n\nexport const getSidebarDeviceType = (route) => {\n\t// if task is MiR enabled, return MiR\n\tif (isMiRTask(route)) {\n\t\treturn DEVICE_CONSTANTS.MIR_100\n\t}\n\n\t// otherwise human\n\treturn DEVICE_CONSTANTS.HUMAN\n}\n","import styled, { css } from \"styled-components\"\n\nexport const Container = styled.div`\n\tbackground: ${props => props.theme.bg.primary};\n  display: flex;\n  flex-direction: column;\n  color: ${props => props.theme.textColor};\n  overflow: hidden;\n  justify-content: center;\n  align-items: center;\n  //flex: 1;\n  position: relative;\n`\n\nexport const LoaderContainer = styled.div`\n\tposition: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`\n\nexport const Header = styled.div`\n\tdisplay: flex;\n  \talign-self: stretch;\n  background: ${props => props.theme.bg.secondary};\n  min-height: 2rem;\n  padding: 1rem;\n  justify-content: center;\n  \n`\n\nexport const Title = styled.span`\n\tfont-size: ${props => props.theme.fontSize.sz2};\n\tfont-weight: ${props => props.theme.fontWeight.bold};\n`\n\nexport const Body = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  align-items: center;\n  overflow: hidden;\n  flex: 1;\n  \n  \n`\n\nexport const DocumentOuterContainer = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  align-items: center;\n  padding: .5rem;\n  margin: 1rem;\n  opacity: ${props => props.loaded ? 1 : 0};\n  //background: linear-gradient(217deg, rgba(0, 0, 0, 0.49), rgba(108, 108, 108, 0.09) 70.71%),\n  //linear-gradient(127deg, rgba(0, 0, 0, 0.33), rgba(0, 0, 0, 0.62) 70.71%),\n  //linear-gradient(336deg, rgba(0, 0, 0, 0.69), rgba(0, 0, 0, 0.08) 70.71%);\n\n  border-radius: .3rem;\n`\nexport const DocumentContainer = styled.div`\n\tcolor: white;\n  overflow-y: auto;\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  \n  \n  \n`\n\nexport const Footer = styled.div`\n  display: flex;\n  align-self: stretch;\n  background: ${props => props.theme.bg.secondary};\n  min-height: 2rem;\n  justify-content: center;\n  align-items: center;\n  padding: 1rem;\n`","import styled, { css } from \"styled-components\";\n\nimport { rowCss } from \"../editors/card_editor/lot_editor.style\";\nimport * as commonCss from \"../../../../../common_css/common_css\";\nimport { commonClickableIcon, commonIcon, glow, iconButtonCss } from \"../../../../../common_css/common_css\";\nimport { hexToRGBA, LightenDarkenColor } from '../../../../../methods/utils/color_utils'\n\nexport const Container = styled.div`\n \tmargin: 10px; // prevents glow from being cut off\n  height: fit-content;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  // overflow: hidden;\n\n  background: ${props => props.theme.bg.primary};\n  border-radius: 0.4rem;\n  color: ${props => props.theme.bg.octonary};\n\n  outline: none;\n  &:focus {\n      outline: none;\n  }\n\n  // letter-spacing: 1.5px;\n  box-shadow: 0px 1px 4px 0px rgba(0, 0, 0, 0.3);\n\n  outline: none;\n  user-select: none;\n\n  transition: all 0.2s ease;\n\n  cursor: pointer;\n\n  &:active{\n        box-shadow: none;\n        filter: brightness(85%);\n        cursor: grabbing;\n    }\n\n  &:hover {\n    box-shadow: 0px 1px 4px 0px rgba(0, 0, 0, 0.3);\n    transform: translateY(-2px);\n  }\n\n  ${props => props.isSelected && `box-shadow: 0px 0px 2px 3px ${hexToRGBA(props.theme.schema.lots.solid, 0.7)} !important;`}\n\n  // ${props => (props.selectable && !(props.isSelected || props.isFocused)) && notSelectedCss};\n  // ${props => props.glow && glowCss};\n  // ${props => props.isFocused && focusedCss};\n  // ${props => props.isSelected && selectedCss};\n  // ${props => props.containerStyle};\n\n  max-width: 30rem;\n`\n\nconst selectedCss = css`\n`\n\nconst glowCss = css`\n    // border: 4px ridge #478fe6;\n`\n\nconst focusedCss = css`\n\n  background-color: ${props => LightenDarkenColor(props.theme.bg.primary, -10)};\n\n  &:active {\n    transform: translateY(-2px);\n  }\n\n  &:hover {\n    transform: translateY(-2px);\n  }\n`\n\nconst notSelectedCss = css`\n  // filter: contrast(50%);\n`\n\nexport const Row = styled.div`\n    display: flex;\n    width: 100%;\n    border-bottom: 1px solid ${props => props.theme.bg.quaternary};\n    justify-content: space-between;\n    padding: .25rem 0 .25rem 0;\n`\n\nexport const ContentContainer = styled.div`\n\tpadding: 0.5rem .25rem 0rem .25rem;\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  justify-content: center;\n`\n\nexport const NameContainer = styled.div`\n\tdisplay: flex;\n  flex-direction: column;\n`\n\nexport const CardName = styled.span`\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-weight: 600;\n  font-size: 1.1rem;\n  font-family: ${props => props.theme.font.primary};\n`\n\nexport const LotNumber = styled.span`\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-size: ${props => props.theme.fontSize.sz4};\n  color: ${props => props.theme.bg.octonary};\n  font-weight: 300;\n\n\n  background: ${props => props.theme.bg.secondary};\n  border-radius: 1rem;\n  width: fit-content;\n  padding: 0rem 0.7rem;\n  align-content: center;\n  justify-content: center;\n`\n\n\nexport const Count = styled.span`\n\tfont-size: ${props => props.theme.fontSize.sz4};\n`\n\nexport const LotName = styled.span`\n  font-size: 1rem;\n  //overflow: hidden;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`\n\nexport const FooterContainer = styled.div`\n\theight: fit-content;\n\tdisplay: flex;\n\tjustify-content: center;\n\tpadding: 0.5rem 1rem;\n  color: #bbb;\n  font-weight: bold;\n  font-size: 0.9rem;\n`\n\nconst notSelectedFlagCss = css`\n    filter: contrast(40%);\n    //filter: brightness(50%);\n`\n\nexport const FlagButton = styled.button`\n\t  ${iconButtonCss};\n  \t${commonClickableIcon};\n  \tmargin: 0.2rem 0.5rem;\n    list-style: none;\n    font-size: 1.5rem;\n    cursor: pointer !important;\n`\n\nexport const FlagsContainer = styled.div`\n    display: flex;\n    padding: 0.5rem 0.2rem;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n`\n\nexport const HeaderBar = styled.div`\n\tdisplay: flex;\n  flex-direction: column;\n\n  padding: 0.5rem 0.5rem;\n`\n\n\n\n\n\n\n\n\n\n\nexport const Label = styled.span`\n    font-size: ${props => props.theme.fontSize.sz4};\n    font-weight: 600;\n`\n","import React, { useContext, useEffect, useState } from \"react\"\n\n// actions\nimport { putCardAttributes } from \"../../../../../redux/actions/card_actions\"\n\n// functions external\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { ThemeContext } from \"styled-components\";\n\n// components external\nimport Popup from 'reactjs-popup'\nimport 'reactjs-popup/dist/index.css'\n\n// constants\nimport { FIELD_DATA_TYPES, FLAG_OPTIONS } from \"../../../../../constants/lot_contants\"\n\n// utils\nimport { immutableDelete, immutableReplace, isArray } from \"../../../../../methods/utils/array_utils\"\nimport { formatLotNumber } from \"../../../../../methods/utils/lot_utils\"\n\n// styles\nimport * as styled from \"./lot.style\"\nimport LotDateRangeRow from \"./lot_date_range_row/lot_date_range_row\";\nimport LotSimpleRow from \"./lot_simple_row/lot_simple_row\";\nimport LotDateRow from \"./lot_date_row/lot_date_row\";\nimport LotFlags from './lot_flags/lot_flags'\n\nconst Lot = (props) => {\n    const {\n        name,\n        glow,\n        isFocused,\n        highlight,\n        stationName,\n        totalQuantity,\n        lotNumber,\n        leadTime,\n        templateValues,\n        id,\n        enableFlagSelector,\n        onClick,\n        count,\n        containerStyle,\n        selectable,\n        isSelected,\n        flags,\n        processName,\n        showCustomFields,\n    } = props\n\n    const themeContext = useContext(ThemeContext)\n\n    // actions\n    const dispatch = useDispatch()\n    const dispatchPutCardAttributes = async (card, ID) => await dispatch(putCardAttributes(card, ID))\n\n    // component state\n    const [formattedLotNumber, setFormattedLotNumber] = useState(formatLotNumber(lotNumber))\n    const [popupOpen, setPopupOpen] = useState(false)\n\n    useEffect(() => {\n        setFormattedLotNumber(formatLotNumber(lotNumber))\n    }, [lotNumber])\n\n    const renderTemplateValues = () => {\n        return templateValues\n            .filter((currItem) => {\n                const {\n                    dataType,\n                } = currItem\n\n                return Object.values(FIELD_DATA_TYPES).includes(dataType)\n            })\n            .map((currItem, currIndex, arr) => {\n                const {\n                    dataType,\n                    fieldName,\n                    value\n                } = currItem\n\n                const key = `${fieldName}+dataType`\n\n                const isLast = currIndex === arr.length - 1\n\n\n                switch (dataType) {\n                    case FIELD_DATA_TYPES.STRING: {\n                        return (\n                            <LotSimpleRow\n                                key={key}\n                                label={fieldName}\n                                value={value}\n                                isLast={isLast}\n                            />\n                        )\n                    }\n                    case FIELD_DATA_TYPES.EMAIL: {\n                        return (\n                            <LotSimpleRow\n                                key={key}\n                                label={fieldName}\n                                value={value}\n                                isLast={isLast}\n                            />\n                        )\n                    }\n                    case FIELD_DATA_TYPES.DATE: {\n                        return (\n                            <LotDateRow\n                                key={key}\n                                label={fieldName}\n                                isLast={isLast}\n                                date={value}\n                            />\n\n                        )\n                    }\n                    case FIELD_DATA_TYPES.DATE_RANGE: {\n                        return (\n                            <LotDateRangeRow\n                                key={key}\n                                label={fieldName}\n                                isLast={isLast}\n                                dateRange={value}\n                            />\n                        )\n                    }\n                    case FIELD_DATA_TYPES.URL: {\n                        return (\n                            <LotSimpleRow\n                                key={key}\n                                label={fieldName}\n                                value={value}\n                                isLast={isLast}\n                            />\n                        )\n                    }\n                    case FIELD_DATA_TYPES.INTEGER: {\n                        return (\n                            <LotSimpleRow\n                                key={key}\n                                label={fieldName}\n                                isLast={isLast}\n                                value={value}\n                            />\n                        )\n                    }\n                }\n            })\n    }\n\n    const renderFlags = () => {\n        return (\n            <LotFlags\n                flags={flags}\n            />\n        )\n    }\n\n    return (\n        <styled.Container\n            glow={glow}\n            isFocused={isFocused}\n            highlight={highlight}\n            selectable={selectable}\n            isSelected={isSelected}\n            onClick={onClick}\n            style={containerStyle}\n        >\n\n            <styled.HeaderBar>\n                {enableFlagSelector ?\n                    <Popup\n                        contentStyle={{\n                            background: themeContext.bg.primary,\n                            width: \"fit-content\",\n                        }}\n                        arrowStyle={{\n                            color: themeContext.bg.primary,\n                            transform: 'translateX(0rem)'\n                        }}\n\n                        trigger={open => (\n                            <div>\n                                {renderFlags()}\n                            </div>\n                        )}\n                        open={popupOpen}\n                        position=\"left center\"\n                        closeOnDocumentClick\n                    >\n                        <styled.FlagsContainer>\n                            {Object.values(FLAG_OPTIONS).map((currOption, currIndex) => {\n\n                                const {\n                                    color: currColor,\n                                    id: currColorId\n                                } = currOption\n\n                                const isSelected = flags.includes(currColorId)\n                                const selectedIndex = flags.indexOf(currColorId)\n\n                                return (\n                                    <styled.FlagButton\n                                        color={currColor}\n                                        selected={isSelected}\n                                        className={isSelected ? \"fas fa-check-square\" : \"fas fa-square\"}\n                                        key={currColorId}\n                                        type={\"button\"}\n                                        onClick={(e) => {\n                                            e.preventDefault()\n                                            e.stopPropagation()\n\n                                            if ((isArray(flags) && !isSelected)) {\n                                                dispatchPutCardAttributes({\n                                                    flags: [...flags, currColorId]\n                                                }, id)\n                                            }\n                                            else {\n                                                dispatchPutCardAttributes({\n                                                    flags: immutableDelete(flags, selectedIndex)\n                                                }, id)\n                                            }\n                                        }}\n                                    />\n                                )\n                            })}\n                        </styled.FlagsContainer>\n                    </Popup>\n                    :\n                    renderFlags()\n\n                }\n\n                <styled.CardName>{name ? name : formattedLotNumber}</styled.CardName>\n\n                {name &&\n                    <styled.LotNumber>{formattedLotNumber}</styled.LotNumber>\n                }\n\n            </styled.HeaderBar>\n\n            <styled.ContentContainer>\n                <LotSimpleRow\n                    label={\"Quantity\"}\n                    value={`${count}/${totalQuantity}`}\n                />\n\n                {processName &&\n                    <LotSimpleRow\n                        label={\"Process\"}\n                        value={processName}\n                    />\n                }\n\n                {stationName &&\n                    <LotSimpleRow\n                        label={\"Station\"}\n                        value={stationName}\n                    />\n                }\n\n                {showCustomFields && renderTemplateValues()}\n            </styled.ContentContainer>\n\n            {!!leadTime &&\n                <styled.FooterContainer>\n                    {leadTime}\n                </styled.FooterContainer>\n            }\n\n        </styled.Container>\n    )\n}\n\n// Specifies propTypes\nLot.propTypes = {\n    isSelected: PropTypes.bool,\n    selectable: PropTypes.bool,\n    isFocused: PropTypes.bool,\n    showCustomFields: PropTypes.bool,\n}\n\n// Specifies the default values for props:\nLot.defaultProps = {\n    isSelected: false,\n    isFocused: false,\n    selectable: false,\n    flags: [],\n    highlight: false,\n    enableFlagSelector: true,\n    templateValues: [],\n    count: 0,\n    glow: false,\n    stationName: \"\",\n    showCustomFields: true,\n}\n\nexport default Lot","import styled from 'styled-components'\n\nexport const TitleContainer = styled.h1`\n    font-size: ${props => props.theme.fontSize.sz2};\n    font-family: ${props => props.theme.font.primary};\n    color: ${props => props.theme.bg.septenary};\n    margin-top: .6rem;\n`;\n\nexport const DefaultContainer = styled.div`\n`;\n\nexport const DefaultFieldContentContainer = styled.div`\n    width: 100%;\n    height: auto;\n    position: relative;\n    // background: blue;\n`;\n\nexport const DefaultFieldDropdownContainer = styled.div`\n    flex: 1;\n`;\n\nexport const IconContainerComponent = styled.div`\n    width: auto;\n    height: auto;\n    position: absolute;\n    top: 50%;\n    right: 2rem;\n    transform: translateY(-50%);\n    margin: 0;\n    padding: 0;\n    background; cyan;\n`;\n","import React, { Component, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useField, useFormikContext } from \"formik\";\nimport DropDownSearch from '../../drop_down_search_v2/drop_down_search';\n// import {globStyle} from '../../../../global_style'\nimport { getMessageFromError } from \"../../../../methods/utils/form_utils\";\n\n// import styles\nimport * as styled from './drop_down_search_field.style'\nimport ErrorTooltip from \"../error_tooltip/error_tooltip\";\nimport { isEmpty } from \"ramda\";\n\n\nconst DropDownSearchField = ({\n    fieldLabel,\n    LabelComponent,\n    ItemComponent,\n    ContentComponent,\n    ErrorComponent,\n    onDropdownClose,\n    onChange,\n    FieldContentContainer,\n    FieldDropdownContainer,\n    Container,\n    style,\n    containerSyle,\n    mapInput,\n    mapOutput,\n    ...props\n}) => {\n\n    const { setFieldValue, setFieldTouched } = useFormikContext();\n    const [field, meta] = useField(props);\n    const hasError = meta.touched && meta.error;\n\n    const [value, setValue] = useState(field.value)\n    const [touched, setTouched] = useState(field.touched)\n    const [updatingValue, setUpdatingValue] = useState(false)\n\n    /*\n    * This is kindy funky\n    * The first time you select a value, both onChange and onDropdownClose get called since the dropdown closes when you select a value\n    * onChange is called first, and updates the values and performs validation\n    * THEN onDropdownClose is called, updates field.touched and performs validation\n    * however, onDropdownClose gets called AFTER onChange but still has the old values\n    * This means a second validation would be performed with the old values, which can result in a validation error for the old values, even if the new values don't have an error\n    * by managing it in a hook this way, validation for field.touched can be controlled directly\n    *\n    * */\n    useEffect(() => {\n\n        if (touched) {\n            // update touched\n            // only perform validation if value is not being updated, otherwise validate will be called twice unnecessarily\n            setFieldTouched(field.name, touched, !updatingValue)\n        }\n        // set\n        if (updatingValue) setUpdatingValue(false)\n\n        return () => {\n            setTouched(false)\n        }\n\n    }, [touched])\n\n    let ReactDropdownSelectStyle = {\n        borderColor: hasError && 'red',\n        boxShadow: hasError && `0 0 5px red`,\n    }\n\n    const errorMessage = getMessageFromError(meta.error);\n\n    return (\n        <Container\n            style={containerSyle}\n        >\n            {fieldLabel &&\n                <LabelComponent>{fieldLabel}</LabelComponent>\n            }\n\n            <styled.DefaultFieldContentContainer>\n                {/*<style.DefaultFieldDropdownContainer>*/}\n                <DropDownSearch\n                    onBlur={() => { }}\n                    style={{ ReactDropdownSelectStyle, ...style }}\n                    theme={props.theme}\n                    ItemComponent={ItemComponent}\n                    ContentComponent={ContentComponent}\n                    onDropdownClose={() => {\n                        // set this field to touched if not already\n                        const isTouched = meta.touched;\n                        if (!isTouched) {\n                            setTouched(true)\n                        }\n                        // call any additional function that was passed as prop\n                        onDropdownClose && onDropdownClose();\n                    }}\n                    values={field.value ? mapInput(field.value) : []}\n                    {...field}\n                    {...props}\n                    onChange={values => {\n                        // update field value and set updating to true for use in the hook\n                        setFieldValue(field.name, mapOutput(values));\n                        setUpdatingValue(true)\n                        onChange && onChange(values)\n                    }}\n                    onRemoveItem={\n                        () => {\n                            // set this field to touched if not already\n                            const isTouched = meta.touched;\n                            if (!isTouched) {\n                                setTouched(true)\n                            }\n                            setFieldValue(field.name, \"\");\n\n                        }\n                    }\n\n                    onClearAll={() => setFieldValue(field.name, \"\")}\n                />\n                {/*</style.DefaultFieldDropdownContainer>*/}\n\n                <ErrorTooltip\n                    visible={hasError}\n                    text={errorMessage}\n                    ContainerComponent={styled.IconContainerComponent}\n                />\n            </styled.DefaultFieldContentContainer>\n            {/*\n\t\t\t{meta.touched && meta.error ? (\n\t\t\t\t<ErrorComponent className=\"error\">{Object.values(meta.error)}</ErrorComponent>\n\t\t\t) : null}\n\t\t\t*/}\n\n        </Container>\n    );\n};\n\n// Specifies propTypes\nDropDownSearchField.propTypes = {\n    LabelComponent: PropTypes.elementType,\n    FieldDropdownContainer: PropTypes.elementType,\n    FieldContentContainer: PropTypes.elementType,\n    style: PropTypes.object,\n    mapInput: PropTypes.func,\n    mapOutput: PropTypes.func,\n};\n\n// Specifies the default values for props:\nDropDownSearchField.defaultProps = {\n    LabelComponent: styled.TitleContainer,\n    FieldDropdownContainer: styled.DefaultFieldDropdownContainer,\n    FieldContentContainer: styled.DefaultFieldContentContainer,\n    Container: styled.DefaultContainer,\n    onChange: null,\n    mapInput: (val) => val,\n    mapOutput: (val) => val,\n    style: {}\n};\n\nexport default DropDownSearchField;\n","import store from '../../redux/store/index'\nimport { OPERATION_TYPES, TYPES } from '../../constants/dashboard_constants'\nimport { isArray, isNonEmptyArray } from \"./array_utils\";\nimport { DASHBOARD_BUTTON_COLORS } from \"../../constants/dashboard_constants\";\nimport uuid from 'uuid'\nimport {\n    CUSTOM_CHARGE_TASK_ID,\n    CUSTOM_IDLE_TASK_ID,\n    CUSTOM_IDLE_TASK_NAME,\n    CUSTOM_TASK_ID\n} from \"../../constants/route_constants\";\n\nexport const getChargeButton = ({ name: positionName, _id: positionId }) => {\n    return {\n        name: positionName,\n        color: '#FFFF4B',\n        task_id: 'custom_task',\n        custom_task: {\n            'type': 'position_move',\n            'position': positionId,\n            'device_type': 'MiR_100',\n        },\n        deviceType: 'MiR_100',\n        id: CUSTOM_CHARGE_TASK_ID\n    }\n}\n\nexport const getIdleButton = ({ idle_location: idleLocationId }) => {\n    return {\n        name: CUSTOM_IDLE_TASK_NAME,\n        color: '#FF4B4B',\n        task_id: 'custom_task',\n        custom_task: {\n            'type': 'position_move',\n            'position': idleLocationId,\n            'device_type': 'MiR_100',\n        },\n        deviceType: 'MiR_100',\n        id: CUSTOM_IDLE_TASK_ID\n    }\n}\n\nexport const getLocationDashboard = (dashboards, location) => {\n    const {\n        dashboards: dashboardIds = []\n    } = location || {}\n\n    const firstDashboardId = dashboardIds.length > 0 ? dashboardIds[0] : null\n\n    return dashboards[firstDashboardId] || {}\n}\n\nexport const getDashboardNameFromLocation = (location, dashboards) => {\n    const dashboard = getLocationDashboard(dashboards, location)\n    const displayName = getDashboardDisplayName(dashboard, location)\n    return displayName\n}\n\nexport const getDashboardDisplayName = (dashboard, location) => {\n    const {\n        name: locationName = \"\"\n    } = location || {}\n\n    const {\n        name: dashboardName = \"\"\n    } = dashboard || {}\n\n    return dashboardName || `${locationName} Dashboard`\n}\n\nexport const postToDashboards = (dashboardName) => {\n    // Requires: buttonID, param, type, buttonName, dashboardName\n    const newDashboard = {\n        \"buttons\": [\n        ],\n        \"name\": dashboardName,\n        \"saved\": false,\n    }\n    return newDashboard\n}\n\nexport const findDashboardByID = (availableDashboards, ID) => {\n    const dashboardNameIndex = Object.values(availableDashboards).findIndex(d => {\n        return d._id.$oid === ID;\n    })\n    return dashboardNameIndex\n}\n\nexport const getContainsKickoffButton = ({ buttons }) => {\n    for (const currButton of buttons) {\n        const {\n            type\n        } = currButton\n\n        if (type === OPERATION_TYPES.KICK_OFF.key) return true\n    }\n\n    return false\n}\n\nexport const getContainsFinishButton = ({ buttons }) => {\n    for (const currButton of buttons) {\n        const {\n            type\n        } = currButton\n\n        if (type === OPERATION_TYPES.FINISH.key) return true\n    }\n\n    return false\n}\n\nexport const getOperationButton = (key) => {\n\n    let index = 0\n    for (const entry of Object.entries(OPERATION_TYPES)) {\n        const currValue = entry[1]\n        const currKey = entry[0]\n\n        if (currKey === key) {\n            return {\n                name: currValue.name,\n                color: DASHBOARD_BUTTON_COLORS[index % DASHBOARD_BUTTON_COLORS.length].hex,\n                id: uuid.v4(),\n                type: currKey,\n            }\n        }\n\n        index = index + 1\n    }\n}\n\n\n// Old Function\n// Schedule for deletion\nexport const handleAvailableTasks = (tasks, station) => {\n    let availableTasks = []\n\n    // If the dashbaord is a device then have some differnt buttons available\n    if (station.device_model) {\n        // If the device has an idle location, add a button for it\n        if (!!station.idle_location) {\n            const idleButton = {\n                'name': CUSTOM_IDLE_TASK_NAME,\n                'color': '#FF4B4B',\n                'task_id': 'custom_task',\n                'custom_task': {\n                    'type': 'position_move',\n                    'position': station.idle_location,\n                    'device_type': 'MiR_100',\n                },\n                'deviceType': 'MiR_100',\n                'id': 'custom_task_idle'\n            }\n\n            availableTasks.push(idleButton)\n        }\n        const positions = store.getState().positionsReducer.positions\n        // Map through positions and add a button if it's a charge position\n        Object.values(positions).map((position, ind) => {\n            if (position.type === 'charger_position') {\n                const chargeButton = {\n                    'name': position.name,\n                    'color': '#FFFF4B',\n                    'task_id': 'custom_task',\n                    'custom_task': {\n                        'type': 'position_move',\n                        'position': position._id,\n                        'device_type': 'MiR_100',\n                    },\n                    'deviceType': 'MiR_100',\n                    'id': `custom_task_charge`\n                }\n                availableTasks.push(chargeButton)\n            }\n        })\n    }\n    else {\n        Object.values(tasks).forEach(task => {\n            if ((task.type == 'push' || task.type == 'both') && task.load.station == station._id) {\n                availableTasks.push(task)\n            } else if ((task.type == 'pull' || task.type == 'both') && task.unload.station == station._id) {\n                availableTasks.push(task)\n            }\n        })\n    }\n\n\n\n    return availableTasks\n}\n\nexport const handleDeviceDashboardRoutes = (device) => {\n    let availableRoutes = []\n\n    // If the device has an idle location, add a button for it\n    if (!!device.idle_location) {\n        const idleButton = {\n            'name': CUSTOM_IDLE_TASK_NAME,\n            'color': '#FF4B4B',\n            'task_id': 'custom_task',\n            'custom_task': {\n                'type': 'position_move',\n                'position': device.idle_location,\n                'device_type': 'MiR_100',\n            },\n            'deviceType': 'MiR_100',\n            'id': 'custom_task_idle'\n        }\n\n        availableRoutes.push(idleButton)\n    }\n    const positions = store.getState().positionsReducer.positions\n    // Map through positions and add a button if it's a charge position\n    Object.values(positions).map((position, ind) => {\n        if (position.type === 'charger_position') {\n            const chargeButton = {\n                'name': position.name,\n                'color': '#FFFF4B',\n                'task_id': 'custom_task',\n                'custom_task': {\n                    'type': 'position_move',\n                    'position': position._id,\n                    'device_type': 'MiR_100',\n                },\n                'deviceType': 'MiR_100',\n                'id': `custom_task_charge`\n            }\n            availableRoutes.push(chargeButton)\n        }\n    })\n    return availableRoutes\n}\n\nexport const handleCurrentDashboard = (dashboards, dashboardID) => {\n    let availableDash = []\n    Object.assign(availableDash, dashboards)\n\n    availableDash = Object.values(availableDash)\n\n    const dashboardNameIndex = Object.values(availableDash).findIndex(d => {\n        return d._id.$oid === dashboardID;\n    })\n\n    return availableDash[dashboardNameIndex]\n}\n\n\n/*\n* returns whether or not the current button type should be allowed to be deleted from a dashboard\n*\n* currently none of them should be able to, but still use this function so if things change it can all be managed here\n*\n* args: needs button type passed in as object key, this way you can pass the entire button or just a simple object containing this key\n* */\nexport const getCanDeleteDashboardButton = ({ type: buttonType }) => {\n    switch (buttonType) {\n        case TYPES.ROUTES.key:\n        case OPERATION_TYPES.FINISH.key:\n        case OPERATION_TYPES.KICK_OFF.key:\n            return false\n\n        case OPERATION_TYPES.REPORT.key:\n            return true\n\n        default:\n            return false\n    }\n}\n\nexport const getIsKickoffEnabled = (availableProcessIds) => {\n    return isNonEmptyArray(availableProcessIds)\n}\n\nexport const getIsFinishEnabled = (availableProcessIds) => {\n    return isNonEmptyArray(availableProcessIds)\n}\n\nexport const getDashboardContainsRouteButton = ({ buttons: existingDashboardButtons }, { task_id: currButtonTaskId, id: buttonId, positionId }) => {\n    for (const existingDashboardButton of existingDashboardButtons) {\n        const {\n            task_id: existingButtonTaskId = \"\",\n            id: existingButtonId,\n            custom_task\n        } = existingDashboardButton || {}\n\n        const {\n            position: existingPositionId\n        } = custom_task || {}\n\n        if (currButtonTaskId === CUSTOM_TASK_ID) {\n            if (buttonId === CUSTOM_IDLE_TASK_ID) {\n                if (existingButtonId === buttonId) {\n                    return true\n                }\n            }\n            else if (buttonId === CUSTOM_CHARGE_TASK_ID) {\n                if (existingButtonId === buttonId && positionId === existingPositionId) {\n                    return true\n                }\n            }\n        }\n        else if (existingButtonTaskId === currButtonTaskId) {\n            return true // quit looping\n        }\n    }\n\n    return false\n}\n\nexport const getDashboardContainsOperationButton = ({ buttons: existingDashboardButtons }, { type: currButtonType }) => {\n\n    if (currButtonType === OPERATION_TYPES.REPORT.key) return false // multiple report buttons allowed\n\n    for (const existingDashboardButton of existingDashboardButtons) {\n        const {\n            type: existingButtonType = \"\"\n        } = existingDashboardButton || {}\n\n        if (existingButtonType === currButtonType) {\n            return true // quit looping\n        }\n    }\n\n    return false\n}","import axios from 'axios';\n// import * as log from 'loglevel';\n\nimport logger from '../logger'\n\nimport { apiIPAddress } from '../settings/settings'\nconst operator = 'cards'\nconst log = logger.getLogger('Api')\n\nexport async function getCard(cardId) {\n    try {\n        const response = await axios({\n            method: 'get',\n            url: apiIPAddress() + operator + \"/\" + cardId,\n            headers: {\n                'X-API-Key': '123456',\n                'Access-Control-Allow-Origin': '*'\n            }\n        });\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n\n}\n\nexport async function getCardsCount() {\n    try {\n        const response = await axios({\n            method: 'get',\n            url: apiIPAddress() + operator + \"/count\",\n            headers: {\n                'X-API-Key': '123456',\n                'Access-Control-Allow-Origin': '*'\n            }\n        });\n\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n\n}\n\nexport async function getCards() {\n    try {\n        const response = await axios({\n            method: 'get',\n            url: apiIPAddress() + operator,\n            headers: {\n                'X-API-Key': '123456',\n                'Access-Control-Allow-Origin': '*'\n            }\n        });\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n\n}\n\n\nexport async function getProcessCards(processId) {\n    try {\n        const response = await axios({\n            method: 'get',\n            url: apiIPAddress() + \"processes/\" + processId + \"/cards\",\n            headers: {\n                'X-API-Key': '123456',\n                'Access-Control-Allow-Origin': '*'\n            }\n        });\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n\n}\n\nexport async function deleteCard(ID) {\n    try {\n        const response = await axios({\n            method: 'DELETE',\n            url: apiIPAddress() + operator + '/' + ID,\n            headers: {\n                'Accept': 'application/json',\n                'X-API-Key': '123456',\n            },\n        });\n\n        // Success 🎉\n        // log.debug('response',response);\n        // const data = response.data;\n        // const dataJson = JSON.parse(data)\n        return response;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}\n\nexport async function postCard(card) {\n    try {\n        const response = await axios({\n            method: 'POST',\n            url: apiIPAddress() + operator,\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'application/json',\n                'Access-Control-Allow-Origin': '*'\n            },\n            data: card\n        });\n\n        // Success 🎉\n        // log.debug('response',response);\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        // log.debug('response data json',dataJson);\n\n\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}\n\nexport async function putCard(card, ID) {\n    try {\n        const response = await axios({\n            method: 'PUT',\n            url: apiIPAddress() + operator + '/' + ID,\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'text/html'\n            },\n            data: JSON.stringify(card)\n        });\n\n        // Success 🎉\n        // log.debug('response',response);\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}\n","import styled, {css} from 'styled-components'\n\n\nexport const button = () => css`\n    border-radius: .4rem;\n    box-shadow: 0px 1px 3px 1px rgba(0,0,0,0.2);\n    border: none;\n\n    &:active {\n        box-shadow: none;\n        transform: translateY(1px);\n    }\n`\n\nexport const activeButtonCss = css`\n  box-shadow: none;\n  transform: translateY(0px);\n  filter: brightness(90%);\n  \n  //border: 1px solid ${props => props.theme.schema[props.schema].solid};\n`\n\nexport const onButtonCss = css`\n  box-shadow: 2px 2px 1px rgba(0,0,0,0.2);\n  transform: translateY(-2px);\n  filter: brightness(115%);\n`\n\nexport const hoverButtonCss = css`\n  //border: 1px solid ${props => props.theme.schema[props.schema].solid};\n  box-shadow: 2px 2px 1px rgba(0,0,0,0.2);\n  transform: translateY(-1px);\n  filter: brightness(110%);\n`\n\nexport const basicButtonCss = css`\n  border-radius: .4rem;\n  box-shadow: 1px 1px 1px rgba(0,0,0,0.2);\n  border: 1px solid rgba(0,0,0,0);\n`\n\nexport const buttonCss = css`\n  transition: all 0.2s ease-in;\n  ${basicButtonCss};\n  \n  &:hover {\n    ${hoverButtonCss};\n  }\n\n  &:active {\n    ${activeButtonCss};\n  }\n  \n  ${props => props.on && onButtonCss}\n`\n\n","import { propSatisfies } from 'ramda';\nimport styled from 'styled-components'\nimport { hexToRGBA, LightenDarkenColor, RGB_Linear_Shade } from '../../../methods/utils/color_utils';\n\n\nconst buttonTheme = (props) => {\n\n    if (!props.schema) {\n        props.schema = 'default'\n    }\n\n    if (props.disabled) { // Disabled\n        return (`\n            background-color: ${props.theme.bg.tertiary};\n            color: ${props.theme.bg.senary};\n            border: none;`\n        )\n    } else if (props.secondary) { // Secondary\n        return (`\n            background-color: transparent;\n            border: 0.15rem solid ${props.theme.bg.octonary};\n            color: ${!!props.schema ? props.theme.schema[props.schema].solid : props.theme.fg.primary};\n            border-color: ${!!props.schema ? props.theme.schema[props.schema].solid : props.theme.fg.primary};\n            box-sizing: border-box;\n\n            align-content: center;\n            align-items: center;\n            justify-content: center;\n            \n            &:hover {\n                background-color: ${hexToRGBA(props.theme.bg.octonary, 0.03)}\n            }\n\n            ${props.active ? `\n                background: ${!!props.schema ? props.theme.schema[props.schema].solid : props.theme.fg.primary};\n\n                &:active {\n                    color: ${props.theme.bg.secondary};\n                }\n                `\n                : `\n                &:active {\n                    color: ${props.theme.bg.secondary};\n                    background: ${!!props.schema ? props.theme.schema[props.schema].solid : props.theme.fg.primary};\n                    border-color: transparent;\n                }`\n            }`\n        )\n        \n    } else if (props.tertiary) { // tertiary (Gradient)\n\n        return (`\n            background: ${!!props.schema ? props.theme.schema[props.schema].gradient : props.theme.fg.primary};\n            color: ${props.theme.bg.octonary};\n            border: none;\n\n            &:hover {\n                background-color: ${!!props.schema ? LightenDarkenColor(props.theme.schema[props.schema].solid, 10) : LightenDarkenColor(props.theme.fg.primary, 10)}\n            }\n             `\n        )\n\n    } else if (props.quaternary) { // quaternary\n        return (`\n            background: #26ab76;\n            color: ${props.theme.bg.octonary};\n            border: none;\n\n            &:hover {\n                background-color: ${LightenDarkenColor('#26ab76', -10)}\n            }\n             `\n        )\n    } else { // Primary\n        return (`\n            background: ${!!props.schema ? props.theme.schema[props.schema].solid : props.theme.fg.primary};\n            color: ${props.theme.bg.octonary};\n            border: none;\n\n            &:hover {\n                background-color: ${!!props.schema ? LightenDarkenColor(props.theme.schema[props.schema].solid, 10) : LightenDarkenColor(props.theme.fg.primary, 10)}\n            }\n            `)\n        \n    }\n}\n\nexport const SmallButton = styled.button`\n    display: inline-block;\n    min-height: 2rem;\n    line-height: 1.8rem;\n    text-align: center;\n    margin: 0.3rem 0.5rem 0.3rem 0.5rem;\n    user-select: none;\n\n    padding: 0 1rem 0 1rem;\n\n    font-size: ${props => props.theme.fontSize.sz3};\n    font-family: ${props => props.theme.font.primary};\n    font-weight: 500;\n\n    border-radius: 0.35rem;\n    border: none;\n\n    ${props => buttonTheme(props)}\n\n    &:focus {\n        outline: none;\n    }\n`;\n","import React from 'react';\nimport * as styled from './button.style'\n\n\nconst Button = (props) => {\n\n    const {\n      disabled,\n      onClick,\n      schema,\n      style,\n      secondary,\n      type,\n      tertiary,\n      children,\n      label,\n    } = props\n\n\n    return (\n        <styled.SmallButton\n            onClick={!disabled ? onClick : () => {return}}\n            disabled={disabled}\n            schema={schema}\n            style={style}\n            secondary={secondary}\n            tertiary={tertiary}\n            type = {type}\n            {...props} >\n\n        {children ?\n            children\n            :\n            label\n        }\n\n        </styled.SmallButton>\n    )\n};\n\nButton.defaultProps = {\n    secondary : false,\n    disabled: false,\n    type: 'button'\n};\n\nexport default Button;\n","import styled, {css} from 'styled-components'\n\nexport const Container = styled.div`\n\tposition: relative;\n  display: flex;\n  align-items: center;\n`\n\n\nexport const IconContainerComponent = styled.div`\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  right: -2rem;\n  //margin-left: 1rem;\n`\n\n","import React, {useContext, useEffect, useState} from 'react'\nimport PropTypes from 'prop-types'\nimport CalendarPlaceholder from \"../../calendar_placeholder/calendar_placeholder\"\nimport {useField, useFormikContext} from \"formik\";\nimport {isArray, isNonEmptyArray} from \"../../../../methods/utils/array_utils\";\nimport {getMessageFromError} from \"../../../../methods/utils/form_utils\";\nimport {jsDateToString} from \"../../../../methods/utils/card_utils\";\nimport Calendar from \"../../calendar/calendar\";\nimport CalendarField from \"../calendar_field/calendar_field\";\nimport ErrorTooltip from \"../error_tooltip/error_tooltip\";\n\nimport * as styled from './calendar_button_field.style'\nimport {ThemeContext} from \"styled-components\";\nconst CalendarButtonField = (props) => {\n\tconst {\n\t\tname\n\t} = props\n\n\t// const formikContext = useFormikContext()\n\tconst [field, meta] = useField(name)\n\n\tconst {\n\t\tvalue: fieldValue,\n\t} = field\n\tconst {\n\t\ttouched,\n\t\terror\n\t} = meta\n\n\tconst themeContext = useContext(ThemeContext)\n\n\tconst hasError = touched && error\n\n\tconst errorMessage = getMessageFromError(error)\n\n\treturn (\n\t\t<styled.Container>\n\t\t<CalendarPlaceholder\n\t\t\tvalue={fieldValue}\n\t\t\tCalendarComponent={CalendarField}\n\t\t\t{...props}\n\t\t\tcontainerStyle={hasError ?\n\t\t\t\t{\n\t\t\t\t\t...props.containerStyle,\n\t\t\t\t\tborder: \"1px solid red\",\n\t\t\t\t\tboxShadow: \"0 0 5px red\"\n\t\t\t\t} :\n\t\t\t\t{...props.containerStyle}}\n\t\t/>\n\t\t\t<ErrorTooltip\n\t\t\t\tvisible={hasError}\n\t\t\t\ttext={errorMessage}\n\t\t\t\tcolor={themeContext.bad}\n\t\t\t\tContainerComponent={styled.IconContainerComponent}\n\t\t\t/>\n\n\n\t\t</styled.Container>\n\t)\n}\n\nCalendarButtonField.propTypes = {\n\tname: PropTypes.string,\n\tdefaultStartText: PropTypes.string,\n\tdefaultEndText: PropTypes.string,\n\tdefaultText: PropTypes.string,\n}\n\nCalendarButtonField.defaultProps = {\n\tname: \"\",\n\tdefaultStartText: \"Select Start Date\",\n\tdefaultEndText: \"Select End Date\",\n\tdefaultText: \"Select Date\",\n}\n\nexport default CalendarButtonField\n","import styled, {css} from 'styled-components'\n\nexport const Container = styled.div`\n\tdisplay: flex;\n\talign-items: flex-start;\n\tflex-direction: column;\n\tjustify-content: center;\n`\n\nexport const TextContainer = styled.div`\n  flex-direction: row;\n  align-items: center;\n  align-self: stretch;\n  flex: 1;\n  //width: 100%;\n  position: relative;\n  display: flex;\n  \n`\n\nexport const Label = styled.span`\n\tfont-size: ${props => props.theme.fontSize.sz3};\n\t//margin-right: 1rem;\n`\n\nexport const RequiredText = styled.span`\n  font-size: ${props => props.theme.fontSize.sz5};\n  align-self: flex-start;\n  margin-top: .25rem;\n`","import styled, { css } from \"styled-components\"\nimport {commonClickableIcon, iconButtonCss} from \"../../../common_css/common_css\";\n\nexport const Container = styled.div`\n    border: 1px dashed black;\n    padding: 1rem;\n    border-radius: .3rem;\n    height: auto;\n    width: auto;\n`\n\nexport const UploadButton = styled.button`\n    ${commonClickableIcon};\n    ${iconButtonCss};\n    font-size: 8rem;\n`","import React, {useRef, useState} from 'react'\nimport PropTypes from 'prop-types'\n\nimport * as styled from './file_uploader.style'\nimport PdfViewerModal from \"../pdf_viewer/pdf_viewer_modal\"\nimport PdfViewer from \"../pdf_viewer/pdf_viewer\"\n\nconst FileUploader = props => {\n\n    const {\n        value\n    } = props\n\n    const inputFile = useRef(null)\n\n    const [file, setFile] = useState(value)\n    const [showFile, setShowFile] = useState(false)\n\n    const onChange = (event) => {\n        event.stopPropagation()\n        event.preventDefault()\n\n        const file = event.target.files[0]\n        setFile(file)\n        setShowFile(true)\n    }\n\n    const onButtonClick = () => {\n        inputFile.current.click()\n    }\n\n    return (\n        <>\n            {showFile &&\n            <PdfViewerModal\n                isOpen={true}\n                close={() => setShowFile(false)}\n                onOkClick={() => {\n                    props.onChange(file)\n                    setShowFile(false)\n                }}\n                onCancelClick={() => {\n                    setShowFile(false)\n                    setFile(value)\n                    onButtonClick()\n                }}\n                file={file}\n            />\n            }\n            <styled.Container>\n                {(!file || showFile) ?\n                    <styled.UploadButton\n                        onClick={onButtonClick}\n                        className=\"fas fa-upload\"\n                        color={'#34a8eb'}\n                    />\n                    :\n                    <div onClick={onButtonClick} style={{cursor: 'pointer'}}>\n                        <PdfViewer\n                            file={file}\n                        />\n                    </div>\n                }\n            </styled.Container>\n            <input\n                type='file'\n                id='file'\n                ref={inputFile}\n                style={{display: 'none'}}\n                onChange={onChange}\n            />\n        </>\n    )\n}\n\nFileUploader.propTypes = {\n    onChange: PropTypes.func,\n}\n\nFileUploader.defaultProps = {\n    onChange: () => null\n}\n\nexport default FileUploader\n","import React, {useContext} from 'react';\nimport PropTypes from 'prop-types';\nimport FileUploader from \"../../file_uploader/file_uploader\";\nimport {useField, useFormikContext} from \"formik\";\nimport {ThemeContext} from \"styled-components\";\nimport {getMessageFromError} from \"../../../../methods/utils/form_utils\";\n\nconst FileUploaderField = (props) => {\n\n    const {\n        mapInput,\n        mapOutput\n    } = props\n\n    const { setFieldValue, setFieldTouched, validateOnChange, validateOnBlur, validateField, status, validateForm, ...context } =  useFormikContext() || {}\n    const [field, meta] = useField(props);\n    const { touched, error } = meta\n    const {\n        name: fieldName,\n        value: fieldValue\n    } = field\n\n    const {\n        warnings\n    } = status || {}\n\n    const {\n        [fieldName]: warning\n    } = warnings || {}\n\n    const themeContext = useContext(ThemeContext)\n\n    const hasError = touched && error\n    const hasWarning = touched && warning\n\n    const errorMessage = getMessageFromError(error)\n    const warningMessage = getMessageFromError(warning)\n\n    return (\n        <FileUploader\n            value={mapInput(fieldValue)}\n            onChange={(value) => setFieldValue(fieldName, mapOutput(value))}\n        />\n    );\n};\n\nFileUploaderField.propTypes = {\n    mapInput: PropTypes.func,\n    mapOutput: PropTypes.func,\n};\n\nFileUploaderField.defaultProps = {\n    mapInput: (val) => val,\n    mapOutput: (val) => val\n};\n\nexport default FileUploaderField;\n","import React, { useEffect, useState, useContext } from \"react\";\n\n// components internal\nimport Textbox from \"../../../../../../basic/textbox/textbox\";\nimport NumberInput from \"../../../../../../basic/number_input/number_input\";\nimport CalendarPlaceholder from \"../../../../../../basic/calendar_placeholder/calendar_placeholder\";\nimport TextField from \"../../../../../../basic/form/text_field/text_field\";\nimport NumberField from \"../../../../../../basic/form/number_field/number_field\";\nimport CalendarButtonField from \"../../../../../../basic/form/calendar_button_field/calendar_button_field\";\n\n// constants\nimport {FIELD_COMPONENT_NAMES} from \"../../../../../../../constants/lot_contants\";\n\n// functions external\nimport PropTypes from \"prop-types\";\nimport { ThemeContext } from 'styled-components'\n\n// utils\nimport {jsDateToString} from \"../../../../../../../methods/utils/card_utils\";\nimport { LightenDarkenColor } from '../../../../../../../methods/utils/color_utils'\n\n// styles\nimport * as styled from \"./field_component_mapper.style\"\nimport TimePickerField from \"../../../../../../basic/form/time_picker_field/time_picker_field\";\nimport FileUploaderField from \"../../../../../../basic/form/file_uploader_field/file_uploader_field\";\n\nconst REQUIRED_TEXT = \"This field is required.\"\n\nconst FieldComponentMapper = (props) => {\n\tconst {\n\t\tcomponent,\n\t\tfieldName,\n\t\tcontainerStyle,\n\t\tpreview,\n\t\tstyle,\n\t\tdisplayName,\n\t\tusable,\n\t\trequired,\n\t\tshowName,\n\t\t...rest\n\t} = props\n\n    const themeContext = useContext(ThemeContext);\n\n\tswitch(component) {\n\t\tcase FIELD_COMPONENT_NAMES.TEXT_BOX: {\n\t\t\treturn(\n\t\t\t\t<styled.Container\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\t...containerStyle,\n\t\t\t\t\t\tflex: 1\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{showName && (displayName ?\n\t\t\t\t\t\t<styled.Label>{displayName}:</styled.Label>\n\t\t\t\t\t\t:\n\t\t\t\t\t\tfieldName && <styled.Label>{fieldName}:</styled.Label>)\n\t\t\t\t\t}\n\t\t\t\t\t{preview ?\n\t\t\t\t\t\t<styled.TextContainer>\n\t\t\t\t\t\t\t<Textbox\n\t\t\t\t\t\t\t\tusable={usable}\n\t\t\t\t\t\t\t\tplaceholder=\"Enter text...\"\n\t\t\t\t\t\t\t\tstyle={{}}\n\t\t\t\t\t\t\t\tschema={\"lots\"}\n\t\t\t\t\t\t\t\tstyle={{display: \"flex\", flex: 1, ...style}}\n\t\t\t\t\t\t\t\tinputStyle={{flex: 1, background: LightenDarkenColor(themeContext.bg.secondary, 10), cursor: 'default', pointerEvents: 'none'}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</styled.TextContainer>\n\t\t\t\t\t\t:\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tusable={usable}\n\t\t\t\t\t\t\tname={fieldName}\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tplaceholder=\"Enter text...\"\n\t\t\t\t\t\t\tInputComponent={Textbox}\n\t\t\t\t\t\t\tschema={\"lots\"}\n\t\t\t\t\t\t\t// style={{...style}}\n\t\t\t\t\t\t\tinputStyle={{}}\n\t\t\t\t\t\t\tshowErrorStyle={true}\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\n                    {required &&\n                        <styled.RequiredText>{REQUIRED_TEXT}</styled.RequiredText>\n                    }\n\n\t\t\t\t</styled.Container>\n\t\t\t)\n\t\t}\n\t\tcase FIELD_COMPONENT_NAMES.TEXT_BOX_BIG: {\n\t\t\treturn(\n\t\t\t\t<styled.Container\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\t...containerStyle,\n\t\t\t\t\t\tflex: 1,\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{showName && (displayName ?\n\t\t\t\t\t\t<styled.Label>{displayName}:</styled.Label>\n\t\t\t\t\t\t:\n\t\t\t\t\t\tfieldName && <styled.Label>{fieldName}:</styled.Label>)\n\t\t\t\t\t}\n\t\t\t\t\t{preview ?\n\t\t\t\t\t\t<styled.TextContainer>\n\t\t\t\t\t\t\t<Textbox\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tusable={usable}\n\t\t\t\t\t\t\t\tplaceholder=\"Enter text...\"\n\t\t\t\t\t\t\t\tInputComponent={Textbox}\n\t\t\t\t\t\t\t\tlines={5}\n\t\t\t\t\t\t\t\tstyle={{ ...style }}\n\t\t\t\t\t\t\t\t// style={{...style, display: \"flex\", flex: 1, alignSelf: 'stretch'}}\n\t\t\t\t\t\t\t\ttextboxContainerStyle={{ display: \"flex\", flex: 1 }}\n\t\t\t\t\t\t\t\ttextboxContainerStyle={{}}\n\t\t\t\t\t\t\t\tinputStyle={{background: LightenDarkenColor(themeContext.bg.secondary, 10), cursor: 'default', pointerEvents: 'none'}}\n\t\t\t\t\t\t\t\tschema={\"lots\"}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</styled.TextContainer>\n\t\t\t\t\t\t:\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tusable={usable}\n\t\t\t\t\t\t\tname={fieldName}\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tplaceholder=\"Enter text...\"\n\t\t\t\t\t\t\tinputStyle={{}}\n\t\t\t\t\t\t\tInputComponent={Textbox}\n\t\t\t\t\t\t\tlines={5}\n\t\t\t\t\t\t\tschema={\"lots\"}\n\t\t\t\t\t\t\tshowErrorStyle={true}\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\n                    {required &&\n                        <styled.RequiredText>{REQUIRED_TEXT}</styled.RequiredText>\n                    }\n\n                </styled.Container>\n            )\n        }\n\n        case FIELD_COMPONENT_NAMES.INPUT_BOX: {\n            return (\n                <styled.Container\n                    style={{\n                        ...containerStyle,\n                        flex: 1,\n                    }}\n                >\n                    {displayName ?\n                        <styled.Label>{displayName}:</styled.Label>\n                        :\n                        fieldName && <styled.Label>{fieldName}:</styled.Label>\n                    }\n                    {preview ?\n                        <styled.TextContainer>\n                            <Textbox\n                                type=\"text\"\n                                usable={usable}\n                                placeholder=\"Enter Text On Dashboard...\"\n                                InputComponent={Textbox}\n                                lines={5}\n                                style={{ ...style }}\n                                disabled\n                                // style={{display: \"flex\", flex: 1}}\n                                textboxContainerStyle={{ display: \"flex\", flex: 1 }}\n                                inputStyle={{ background: LightenDarkenColor(themeContext.bg.secondary, 10), cursor: 'default', pointerEvents: 'none' }}\n                                schema={\"lots\"}\n                            />\n                        </styled.TextContainer>\n                        :\n                        <TextField\n                            usable={usable}\n                            name={fieldName}\n                            type=\"text\"\n                            placeholder=\"Enter text...\"\n                            inputStyle={{}}\n                            InputComponent={Textbox}\n                            lines={5}\n                            schema={\"lots\"}\n                            showErrorStyle={true}\n                        />\n                    }\n\n                    {required &&\n                        <styled.RequiredText>{REQUIRED_TEXT}</styled.RequiredText>\n                    }\n\n                </styled.Container>\n            )\n        }\n\n        case FIELD_COMPONENT_NAMES.NUMBER_INPUT: {\n            return (\n                <styled.Container\n                    style={{\n\n\t\t\t\t\t\t...containerStyle,\n\t\t\t\t\t\tjustifyContent: \"center\",\n\t\t\t\t\t\talignItems: \"center\",\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{showName && (displayName ?\n\t\t\t\t\t\t<styled.Label>{displayName}:</styled.Label>\n\t\t\t\t\t\t:\n\t\t\t\t\t\tfieldName && <styled.Label>{fieldName}:</styled.Label>)\n\t\t\t\t\t}\n\t\t\t\t\t{preview ?\n\t\t\t\t\t\t<NumberInput\n\t\t\t\t\t\t\tusable={usable}\n\t\t\t\t\t\t\tthemeContext={themeContext}\n\t\t\t\t\t\t\tbuttonStyle={{pointerEvents: 'none'}}\n\t\t\t\t\t\t\tinputStyle={{pointerEvents: 'none'}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t:\n\t\t\t\t\t\t<NumberField\n\t\t\t\t\t\t\tusable={usable}\n\t\t\t\t\t\t\tname={fieldName}\n\t\t\t\t\t\t\tminValue={required ? 1 : 0}\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\n\t\t\t\t\t{required &&\n\t\t\t\t\t<styled.RequiredText\n\t\t\t\t\t\tstyle={{alignSelf: \"center\"}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{REQUIRED_TEXT}\n\t\t\t\t\t</styled.RequiredText>\n\t\t\t\t\t}\n\t\t\t\t</styled.Container>\n\t\t\t)\n\t\t}\n\t\tcase FIELD_COMPONENT_NAMES.CALENDAR_SINGLE: {\n\t\t\treturn(\n\t\t\t\t<styled.Container\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\t...containerStyle,\n\t\t\t\t\t\tjustifyContent: \"center\",\n\t\t\t\t\t\talignItems: \"center\"\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{showName && (displayName ?\n\t\t\t\t\t\t<styled.Label>{displayName}:</styled.Label>\n\t\t\t\t\t\t:\n\t\t\t\t\t\tfieldName && <styled.Label>{fieldName}:</styled.Label>)\n\t\t\t\t\t}\n\n                    {preview ?\n                        <CalendarPlaceholder\n                            usable={usable}\n                            containerStyle={{ width: \"8rem\", cursor: 'default', userSelect: 'none' }}\n                        />\n                        :\n                        <CalendarButtonField\n                            name={fieldName}\n                            usable={usable}\n                            containerStyle={{ width: \"8rem\", cursor: 'default', userSelect: 'none' }}\n                        />\n                    }\n\n\n\t\t\t\t\t{required &&\n\t\t\t\t\t<styled.RequiredText>{REQUIRED_TEXT}</styled.RequiredText>\n\t\t\t\t\t}\n\t\t\t\t</styled.Container>\n\t\t\t)\n\t\t}\n\t\tcase FIELD_COMPONENT_NAMES.CALENDAR_START_END: {\n\t\t\treturn(\n\t\t\t\t<styled.Container\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\t...containerStyle,\n\t\t\t\t\t\tjustifyContent: \"center\",\n\t\t\t\t\t\talignItems: \"center\"\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{showName && (displayName ?\n\t\t\t\t\t\t<styled.Label>{displayName}:</styled.Label>\n\t\t\t\t\t\t:\n\t\t\t\t\t\tfieldName && <styled.Label>{fieldName}:</styled.Label>)\n\t\t\t\t\t}\n\n                    {preview ?\n                        <CalendarPlaceholder\n                            usable={usable}\n                            selectRange={true}\n                        />\n                        :\n                        <CalendarButtonField\n                            name={fieldName}\n                            usable={usable}\n                            selectRange={true}\n                        />\n                    }\n\n                    {required &&\n                        <styled.RequiredText>{REQUIRED_TEXT}</styled.RequiredText>\n                    }\n\n\t\t\t\t</styled.Container>\n\t\t\t)\n\t\t}\n\t\tcase FIELD_COMPONENT_NAMES.TIME_SELECTOR: {\n\t\t\treturn(\n\t\t\t\t<styled.Container\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\t...containerStyle,\n\t\t\t\t\t\tjustifyContent: \"center\",\n\t\t\t\t\t\talignItems: \"center\"\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{showName && (displayName ?\n\t\t\t\t\t\t<styled.Label>{displayName}:</styled.Label>\n\t\t\t\t\t\t:\n\t\t\t\t\t\tfieldName && <styled.Label>{fieldName}:</styled.Label>)\n\t\t\t\t\t}\n\n\t\t\t\t\t{preview ?\n\t\t\t\t\t\t<div>NOT YET IMPLEMENTED</div>\n\t\t\t\t\t\t:\n\t\t\t\t\t\t<TimePickerField\n\t\t\t\t\t\t\tname={fieldName}\n\t\t\t\t\t\t\tusable={usable}\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\n\t\t\t\t\t{required &&\n\t\t\t\t\t<styled.RequiredText>{REQUIRED_TEXT}</styled.RequiredText>\n\t\t\t\t\t}\n\n\t\t\t\t</styled.Container>\n\t\t\t)\n\t\t}\n\t\tcase FIELD_COMPONENT_NAMES.PDF_SELECTOR: {\n\t\t\treturn(\n\t\t\t\t<styled.Container\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\t...containerStyle,\n\t\t\t\t\t\tjustifyContent: \"center\",\n\t\t\t\t\t\talignItems: \"center\"\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{showName && (displayName ?\n\t\t\t\t\t\t<styled.Label>{displayName}:</styled.Label>\n\t\t\t\t\t\t:\n\t\t\t\t\t\tfieldName && <styled.Label>{fieldName}:</styled.Label>)\n\t\t\t\t\t}\n\n\t\t\t\t\t{preview ?\n\t\t\t\t\t\t<div>NOT YET IMPLEMENTED</div>\n\t\t\t\t\t\t:\n\t\t\t\t\t\t<FileUploaderField\n\t\t\t\t\t\t\tname={fieldName}\n\t\t\t\t\t\t\tusable={usable}\n\t\t\t\t\t\t\t{...rest}\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\n\t\t\t\t\t{required &&\n\t\t\t\t\t<styled.RequiredText>{REQUIRED_TEXT}</styled.RequiredText>\n\t\t\t\t\t}\n\n\t\t\t\t</styled.Container>\n\t\t\t)\n\t\t}\n\t\tdefault:\n\t\t\treturn null\n\t}\n}\n\n// Specifies propTypes\nFieldComponentMapper.propTypes = {\n\tpreview: PropTypes.bool,\n\tusable: PropTypes.bool,\n\tshowName: PropTypes.bool,\n};\n\n// Specifies the default values for props:\nFieldComponentMapper.defaultProps = {\n\tpreview: true,\n\tonCalendarClick: () => {},\n\tusable: true,\n\tshowName: true,\n};\n\n\nexport default FieldComponentMapper","import { SET } from \"../types/prefixes\"\nimport {LOT_DRAGGING, LOT_DROPPING, COLUMN_HOVERING, FIELD_DRAGGING, SET_SIZE, LOT_HOVERING} from \"../types/ui_types\"\n\nexport const setDroppingLotId = (lotId, binId) => async dispatch => {\n\tdispatch({ type: SET + LOT_DROPPING, payload: {lotId, binId} });\n}\n\nexport const setDraggingLotId = (lotId) => async dispatch => {\n\tdispatch({ type: SET + LOT_DRAGGING, payload: {lotId} });\n}\n\nexport const setLotHovering = (lotId) => async dispatch => {\n\tdispatch({ type: SET + LOT_HOVERING, payload: {lotId} });\n}\n\n\nexport const setFieldDragging = (bool) => async dispatch => {\n\tdispatch({ type: SET + FIELD_DRAGGING, payload: bool });\n}\n\nexport const setColumnHovering = (isHoveringOverColumn) => async dispatch => {\n\tdispatch({ type: SET + COLUMN_HOVERING, payload: isHoveringOverColumn });\n}\n","import axios from 'axios';\n// import * as log from 'loglevel';\n\nimport logger from '../logger'\n\nimport { apiIPAddress } from '../settings/settings'\nconst operator = 'report_events'\nconst log = logger.getLogger('Api')\n\nexport async function getReportEvents() {\n    try {\n        const response = await axios({\n            method: 'get',\n            url: apiIPAddress() + operator, \n            headers: {\n                'X-API-Key': '123456',\n            },\n        });\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n\n}\n\nexport async function deleteReportEvent(ID) {\n    try {\n        const response = await axios({\n            method: 'DELETE',\n            url: apiIPAddress() + operator + '/' + ID,\n            headers: {\n                'Accept': 'application/json',\n                'X-API-Key': '123456',\n            },\n        });\n\n        // Success 🎉\n        // log.debug('response',response);\n        // const data = response.data;\n        // const dataJson = JSON.parse(data)\n        return response;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}\n\nexport async function postReportEvent(reportEvent) {\n    try {\n        const response = await axios({\n            method: 'POST',\n            url: apiIPAddress() + operator,\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n                'X-API-Key': '123456',\n                'Access-Control-Allow-Origin': '*'\n            },\n            data: reportEvent\n        });\n\n        // Success 🎉\n        // log.debug('response',response);\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        // log.debug('response data json',dataJson);\n\n\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n        // throw error\n    }\n}\n\nexport async function putReportEvent(reportEvent, ID) {\n    try {\n        const response = await axios({\n            method: 'PUT',\n            url: apiIPAddress() + operator + '/' + ID,\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'text/html'\n            },\n            data: reportEvent\n        });\n\n        // Success 🎉\n        // log.debug('response',response);\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}\n\nexport async function getReportAnalytics(stationId, timeSpan) {\n    try {\n        const response = await axios({\n            method: 'PUT',\n            url: apiIPAddress() + operator + '/' + stationId + '/stats',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'text/html'\n            },\n            // A timespan is {time_span: 'day', index: 0}\n            data: timeSpan\n        });\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        return dataJson;\n\n\n    } catch (error) {\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        throw error\n    }\n\n\n}\n","import { normalize } from 'normalizr';\n\n// import types\nimport {\n    GET,\n    POST,\n    DELETE,\n    PUT\n} from '../types/prefixes';\n\nimport {\n    REPORT_EVENTS,\n    REPORT_EVENT\n} from '../types/data_types';\n\nimport { api_action } from './index';\nimport * as api from '../../api/report_events_api'\n\n// import schema\n// import { scheduleSchema, schedulesSchema } from '../../normalizr/schedules_schema';\n\nimport log from \"../../logger\"\nimport {convertArrayToObject} from \"../../methods/utils/utils\";\n\nconst logger = log.getLogger(\"ReportEvents\", \"Redux\")\n\nexport const convertData = (array, key) => {\n    const initialValue = {\n        station_id: {},\n        report_button_id: {}\n    };\n    return array.reduce((obj, item) => {\n        let current = obj.station_id[item.station_id] ? obj.station_id[item.station_id] : []\n        let current1 = obj.report_button_id[item.report_button_id] ? obj.report_button_id[item.report_button_id] : []\n\n        return {\n            ...obj,\n            // [item[key]]: item,\n            _id: {\n                ...obj._id,\n                [item._id]: item\n            },\n            station_id: {\n                ...obj.station_id,\n                [item.station_id]: [...current, item._id]\n            },\n            report_button_id: {\n                ...obj.report_button_id,\n                [item.report_button_id]: [...current1, item._id]\n            }\n        };\n    }, initialValue);\n};\n\n\n// get\n// ******************************\nexport const getReportEvents = () =>  async (dispatch) => {\n\n    /*\n        Invoked in api_action()\n        Whatever is returned from this function is the payload\n        that will be dispatched to redux (if successful)\n    */\n    const callback = async () => {\n\n        // make request\n        const reportEvents = await api.getReportEvents();\n        const reportEventsObj = convertData(reportEvents, \"_id\")\n\n        // format response\n        // const normalizedSchedules = normalize(schedules, schedulesSchema);\n\n        // return payload for redux\n        return {\n            reportEventsObj\n        };\n    }\n\n    const actionName = GET + REPORT_EVENTS;\n\n    // payload is returned back\n    const payload = await api_action(actionName, callback, dispatch);\n\n    return payload;\n\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n\n// create\n// ******************************\nexport const postReportEvent = (reportEvent) =>  async dispatch => {\n\n    const callback = async () => {\n        const createdReportEvent = await api.postReportEvent(reportEvent);\n        // const normalizedSchedules = normalize(createdSchedule, scheduleSchema);\n\n        return {\n            createdReportEvent\n        };\n    }\n\n    const actionName = POST + REPORT_EVENT;\n\n    const payload = await api_action(actionName, callback, dispatch, reportEvent);\n\n    return payload\n\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// delete\n// ******************************\nexport const deleteReportEvent = (id) => async (dispatch) => {\n\n    const callback = async () => {\n        await api.deleteReportEvent(id);\n\n        return {\n            id\n        };\n    }\n\n    const actionName = DELETE + REPORT_EVENT;\n    const payload = await api_action(actionName, callback, dispatch, id);\n    return payload;\n\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// update\n// ******************************\nexport const putReportEvent = (id, reportEvent) => async dispatch => {\n\n\n    const callback = async () => {\n        const updatedReportEvent = await api.putReportEvent(reportEvent, id);\n\n        return {\n            updatedReportEvent\n        };\n    }\n\n    const actionName = PUT + REPORT_EVENT           ;\n    const payload = await api_action(actionName, callback, dispatch);\n    return payload;\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nexport const getReportAnalytics = async (stationId, timeSpan) => {\n    try {\n        const stationAnalytics = await api.getReportAnalytics(stationId, timeSpan);\n        return stationAnalytics\n    } catch (error) {\n    }\n};\n","export const WIDGET_PAGE_LOADED = 'WIDGET_PAGE_LOADED'\nexport const WIDGET_XY_COORDINATES = 'WIDGET_XY_COORDINATES'\nexport const WIDGET_LOADED = 'WIDGET_LOADED'\nexport const HOVER_STATION_INFO = 'HOVER_STATION_INFO'\n","import axios from 'axios';\n// import * as log from 'loglevel';\n\nimport logger from '../logger'\n\nimport { apiIPAddress } from '../settings/settings'\nconst operator = 'dashboards'\nconst log = logger.getLogger('Api')\n\nexport async function getDashboards() {\n    try {\n        const response = await axios({\n            method: 'get',\n            url: apiIPAddress() + operator,\n            headers: {\n                'X-API-Key': '123456',\n                'Access-Control-Allow-Origin': '*'\n            }\n        });\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n\n}\n\nexport async function deleteDashboards(ID) {\n    try {\n        const response = await axios({\n            method: 'DELETE',\n            url: apiIPAddress() + operator + '/' + ID,\n            headers: {\n                'Accept': 'application/json',\n                'X-API-Key': '123456',\n                'Access-Control-Allow-Origin': '*'\n            },\n        });\n\n        // Success 🎉\n        // log.debug('response',response);\n        // const data = response.data;\n        // const dataJson = JSON.parse(data)\n        return response;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}\n\nexport async function postDashboards(dashboards) {\n    try {\n        const response = await axios({\n            method: 'POST',\n            url: apiIPAddress() + operator,\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'application/json',\n                'Access-Control-Allow-Origin': '*'\n            },\n            data: dashboards\n        });\n\n        // Success 🎉\n        // log.debug('response',response);\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        // log.debug('response data json',dataJson);\n\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}\n\nexport async function putDashboards(dashboard, ID) {\n\n    try {\n        const response = await axios({\n            method: 'PUT',\n            url: apiIPAddress() + operator + '/' + ID,\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'text/html',\n                'Access-Control-Allow-Origin': '*'\n            },\n            data: dashboard\n        });\n\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}\n","import styled from \"styled-components\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport AssignmentOutlinedIcon from \"@material-ui/icons/AssignmentOutlined\";\n\nimport * as layoutCss from '../../../../../common_css/layout'\n\nexport const Header = styled.div`\n    ${layoutCss.headerStyle};\n    display: flex;\n    padding: 1rem;\n\n    flex-direction: row;\n    align-items: center;\n    /* justify-content: space-around; */\n    position: relative;\n\n    /* width: calc(90% - 1rem); */\n    width: 100%;\n    /* margin: 0 calc(5% + 0.5rem) 0 calc(5% + 0.5rem); */\n\n    height: 6rem;\n\n    /* background: linear-gradient(180deg, rgba(114, 187, 255, 0.47) 0%, rgba(114, 187, 255, 0) 100%); */\n\n`\n\n\n\n\nexport const Title = styled.h2`\n    color: ${props => props.theme.bg.octonary};\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz1};\n\n\n\n    user-select: none;\n\n\n    pointer-events: none;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    position: absolute;\n    text-align: center;\n    left: 0;\n    right: 0;\n    margin-left: auto;\n    margin-right: auto;\n\n    // tablet style\n    @media only screen and (max-width: ${props => props.theme.widthBreakpoint.tablet}) {\n        font-size: ${props => props.theme.fontSize.sz2};\n        max-width: 15rem;\n        text-overflow: ellipsis;\n    }\n\n`\n\n\nexport const PaceText = styled.p`\n    color: ${props => props.color};\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz3};\n    margin: 0;\n\n`\n\nexport const PaceContainer = styled.div`\n    position: absolute;\n    right: 1rem;\n    border: .2rem solid;\n    border-color: ${props => props.color};\n    border-radius: .5rem;\n    padding: .5rem;\n`\n\n\nexport const LotsTitle = styled.h2`\n    color: ${props => props.theme.bg.octonary};\n    font-family: ${props => props.theme.font.primary};\n    font-size: 1.5rem;\n    padding-right:1rem;\n    padding-top:0.4rem;\n\n`\n\nexport const LockContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    margin-bottom: 0.2rem;\n\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz5};\n    font-weight: 100;\n\n`\n\nexport const MoreIcon = styled.i`\n    font-size: 1.3rem;\n    color: ${props => props.theme.bg.quinary};\n    cursor: pointer;\n    margin-top: 1.8rem;\n`\nexport const LockIcon = styled.i`\n    position: absolute;\n    right: 8.5rem;\n    font-size: 1.3rem;\n    color: ${props => props.theme.bg.quinary};\n    cursor: pointer;\n    margin-top: 0rem;\n    margin-left: 1rem;\n`\n\nexport const SidebarButton = styled(AssignmentOutlinedIcon)`\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz1};\n\n    border:none;\n    padding:0;\n    margin:0;\n    outline: none;\n    background: transparent;\n`\n\nexport const LotsContainer = styled.div`\n    margin-right: calc(5% + 0.5rem);\n    display: flex;\n    align-items: flex-start;\n    justify-content: space-between;\n    height: ${props => props.moreLots ? '' : '3.8rem'};\n    transition: height 0.5s;\n`\n\nexport const RowContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: flex-start;\n    justify-content: flex-start;\n\n    margin-left:2rem;\n    margin-right:2rem;\n    padding-top:1rem;\n    padding-right:2rem;\n    padding-bottom: 1rem;\n    width: 90%;\n    // height: 3.5rem;\n    overflow: hidden;\n    flex-wrap: wrap;\n\n\n\n    @media only screen and (max-width: ${props => props.theme.widthBreakpoint.tablet}) {\n        margin-left: 2rem;\n        margin-right: 2rem;\n    }\n\n    transition: height 0.5s;\n`\n\nexport const ColumnContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n\n`\n\nexport const ReportIcon = styled.i`\n    font-size: 1.5rem;\n`","import  store  from \"../redux/store/index\";\nimport ls from 'local-storage'\n\nexport const mirURL = (url) => {\n    // const mirURL = url\n    const mirURL = \"10.1.10.35\";\n    const prefix = \"http://\";\n    const URL = prefix + mirURL;\n    return URL;\n};\n\nexport const apiIPAddress = () => {\n    const storeState = store.getState();\n    let apiIPAddress = \"\";\n\n    let localSettings = ls.get(\"localSettings\")\n    let parsedLocalSettings = JSON.parse(localSettings)\n    let hostServerIpAddress = parsedLocalSettings ? parsedLocalSettings.non_local_api_ip : \"\"\n    let nonLocalIp = parsedLocalSettings ? parsedLocalSettings.non_local_api : false\n    /**\n     * READ ME: Do not change IP address here. Go to the settings tab in the interface, select Non Local API IP Address and type in the api ip address\n     * If non local api is true, then the server is running on an IP address entered\n     */\n\n    if (!!hostServerIpAddress) {\n        // If there is no api use the local host\n        if (nonLocalIp===false) {\n            return apiIPAddress = 'http://' + 'localhost' + ':5000/api/'\n        } else {\n            return apiIPAddress = 'http://' + hostServerIpAddress + ':5000/api/'\n\n        }\n    } else {\n        return 'http://' + window.location.hostname + ':5000/api/'\n    }\n\n};\n\nstore.subscribe(apiIPAddress);\n","import React, { useState } from \"react\";\nimport { getIsEquivalent } from \"../../../methods/utils/utils\";\nimport {useField, useFormikContext} from \"formik\";\n\n// Updates fields in parent form\nconst useChange = (fieldName) => {\n\tconst { setFieldValue, setFieldTouched, validateOnChange, validateOnBlur, validateField, validateForm, ...context } = useFormikContext();\n\tconst [field, meta] = useField(fieldName ? fieldName : \"null\");\n\n\tlet value\n\tif(fieldName) {\n\t\tvalue = meta?.value || {}\n\t}\n\telse {\n\t\tvalue = context.values || {}\n\t}\n\n\tconst {\n\t\tchanged: changedSet\n\t} = value || {}\n\n\tconst [changed, setChanged] = useState(false);\n\tconst [initialValue, setInitialValue] = useState(value);\n\n\tReact.useEffect(() => {\n\n\t\t// if values have changed from initial values, set changed to true\n\n\t\tif(!changed) {\n\n\t\t\tconst issEquivalent = getIsEquivalent(initialValue, value)\n\n\n\t\t\tif(!issEquivalent) {\n\t\t\t\tsetChanged(true);\n\t\t\t\tsetFieldValue(fieldName ? `${fieldName}.changed` : 'changed', true);\n\t\t\t}\n\t\t}\n\n\t\telse {\n\t\t\tif(!changedSet) {\n\t\t\t\tsetChanged(false)\n\t\t\t\tsetInitialValue(value)\n\t\t\t}\n\t\t}\n\n\t\t// if values are changed back to original value, set changed to false\n\t\t// if(changed) {\n\t\t// \tconsole.log(\"beeep\")\n\t\t// \tif(issEquivalent) {\n\t\t// \t\tconsole.log(\"ayooo\")\n\t\t// \t\tsetChanged(false);\n\t\t// \t\tparentForm.setFieldValue(\"changed\", false);\n\t\t// \t}\n\t\t// }\n\n\t}, [value]);\n\n\t// handle mount and dismount\n\tReact.useEffect(() => {\n\t\t/* add any mount logic here\n\n\n\t\t */\n\n\t\t// dismount\n\t\treturn () => {\n\t\t\t// set changed to true\n\t\t\t// parentForm.setFieldValue(\"changed\", true);\n\t\t};\n\t}, []);\n};\n\nexport default useChange\n","import styled, {css} from \"styled-components\";\nimport {LightenDarkenColor} from \"../../../../../methods/utils/color_utils\";\n\nexport const borderGlowCss = css`\n    --border-width: .1rem;\n    background: none;\n\n    @keyframes moveGradient {\n        50% {\n          background-position: 100% 50%;\n        }\n      }\n\n    border-radius: var(--border-width);\n\n    &::after {\n    position: absolute;\n    content: \"\";\n    top: calc(-1 * var(--border-width));\n    left: calc(-1 * var(--border-width));\n    z-index: -1;\n    width: calc(100% + var(--border-width) * 2);\n    height: calc(100% + var(--border-width) * 2);\n    background: linear-gradient(\n        60deg,\n        /* hsl(224, 85%, 66%), */\n        /* hsl(269, 85%, 66%), */\n        /* hsl(314, 85%, 66%), */\n        /* hsl(359, 85%, 66%), */\n        hsl(44, 85%, 66%),\n        hsl(89, 85%, 66%),\n        hsl(134, 85%, 66%),\n        hsl(179, 85%, 66%)\n    );\n    background-size: 300% 300%;\n    background-position: 0 50%;\n    border-radius: calc(2 * var(--border-width));\n    animation: moveGradient 4s alternate infinite;\n}\n`\n\nexport const ContainerCss = css`\n  position: relative;\n  user-select: none;\n\n  // flex layout\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  overflow: hidden;\n\n  background: ${props => !props.invert && `linear-gradient(180deg, \n                            ${LightenDarkenColor(props.background, 20)} 0%, \n                            ${props.background} 60%, \n                            ${LightenDarkenColor(props.background, -15)} 100%)`};\n  border-radius: 0.6rem;\n\n  // margins\n  margin: 0 0 0.1rem 0;\n\n  // padding\n  padding: 0.5rem 1rem 0.5rem 1rem;\n\n  outline: none;\n  &:focus {\n    outline: none;\n  }\n\n  letter-spacing: 1.5px;\n  border: ${props => props.invert ? `1px solid ${props.background}` : 'none'};\n  box-shadow: ${props => props.clickable ? 'none' : `2px 2px 2px rgba(0, 0, 0, 0.5)`};\n  transition: all 0.1s ease 0s;\n  cursor: pointer;\n  outline: none;\n    \n  &:hover {\n    filter: brightness(110%);\n    ${props => props.hoverable && !props.clickable &&\n            {\n              boxShadow: \"3px 3px 3px rgba(0, 0, 0, 0.5)\",\n              transform: \"translateY(-1px)\",\n            }\n    }\n  }\n\n  ${props => props.clickable && !props.disabled && !props.invert && \n          `&:active {\n      background: ${`linear-gradient(180deg, \n          ${LightenDarkenColor(props.background, -20)} 0%, \n          ${props.background} 50%, \n          ${LightenDarkenColor(props.background, 20)} 100%)`\n          }\n    }`\n  }\n\n          ${props => props.disabled &&\n                  {\n                    color: props.theme.bg.quaternary,\n                    background: `linear-gradient(180deg, rgba(255,255,255,0.4) 0%, rgba(255,255,255,0.4) 100%), ${LightenDarkenColor(props.background, -60)}`,\n                    pointerEvents: \"none\",\n                  }\n          }\n\n            // --border-width: 3px;\n          ${props => props.borderGlow &&\n                  borderGlowCss\n          }\n\n          ${props => props.css};\n`\n\nexport const ErrorContainerComponent = styled.div`\n    width: auto;\n    height: auto;\n    position: absolute;\n    top: 50%;\n    right: 1rem;\n    transform: translateY(-50%);\n    margin: 0;\n    padding: 0;\n`;\n\nexport const conditionTextCss = css`\n    font: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz3};\n    max-width: 100%;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    color: ${props => props.theme.bg.octonary}\n`","import styled, {css} from 'styled-components'\nimport Modal from 'react-modal';\nimport {LightenDarkenColor} from \"../../../../methods/utils/color_utils\";\n\n\nconst borderGlowCss = css`\n    --border-width: .1rem;\n    background: none;\n\n    @keyframes moveGradient {\n        50% {\n          background-position: 100% 50%;\n        }\n      }\n\n    border-radius: var(--border-width);\n\n    &::after {\n    position: absolute;\n    content: \"\";\n    top: calc(-1 * var(--border-width));\n    left: calc(-1 * var(--border-width));\n    z-index: -1;\n    width: calc(100% + var(--border-width) * 2);\n    height: calc(100% + var(--border-width) * 2);\n    background: linear-gradient(\n        60deg,\n        /* hsl(224, 85%, 66%), */\n        /* hsl(269, 85%, 66%), */\n        /* hsl(314, 85%, 66%), */\n        /* hsl(359, 85%, 66%), */\n        hsl(44, 85%, 66%),\n        hsl(89, 85%, 66%),\n        hsl(134, 85%, 66%),\n        hsl(179, 85%, 66%)\n    );\n    background-size: 300% 300%;\n    background-position: 0 50%;\n    border-radius: calc(2 * var(--border-width));\n    animation: moveGradient 4s alternate infinite;\n}\n`\n\nexport const TextboxDiv = styled.div`\n    background-color: ${props => props.theme.bg.quinary};\n    border: none;\n    font-size: ${props => props.theme.fontSize.sz4};\n    font-family: ${props => props.theme.font.primary};\n    font-weight: 500;\n    min-height: 2rem;\n    display: flex;\n    flex-grow: 1;\n    color: ${props => props.theme.bg.octonary};\n    padding: .5rem;\n    border-radius: .5rem;\n\n    box-shadow: 0 0.1rem 0.2rem 0rem rgba(0,0,0,0.1) !important;\n    border-bottom: 2px solid ${props => props.theme.bg.quinary};\n\n    &:focus {\n        // background-color: ${props => LightenDarkenColor(props.theme.bg.quinary, 10)};\n        border-bottom: 2px solid ${props => !!props.schema ? props.theme.schema[props.schema].solid : props.theme.fg.primary};\n        color: ${props => props.theme.bg.octonary};\n        outline: none !important;\n    }\n\n    &::placeholder {\n        font-family: ${props => props.theme.font.secondary};\n        color: ${props => props.theme.bg.senary};\n    }\n`;\n\nexport const Container = styled(Modal)`\n\toutline: none !important;\n\toutline-offset: none !important;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translate(-50%, -50%);\n\tright: auto;\n\tbottom: auto;\n\n\tposition: absolute;\n\n\tz-index: 50;\n\n\tmin-width: 30rem;\n  max-width: 95%;\n  min-height: 20rem;\n  max-height: 90%;\n\n\tbackground: ${props => props.theme.bg.primary};\n\n\tdisplay: flex;\n\tflex-direction: column;\n\n\tcolor: ${props => props.theme.bg.octonary};\n\tborder-radius: 0.4rem;\n\toverflow: hidden;\n`;\n\nexport const HeaderContainer = styled.div`\n\twidth: 100%;\n\tdisplay: flex;\n\tflex-direction: column;\n\tborder-width: 0;\n\tborder-bottom-width: thin;\n\tborder-color: black;\n\tborder-style: solid;\n  border-bottom: 1px solid ${props => props.theme.bg.secondary};\n`;\n\nexport const Header = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n  flex-direction: column;\n\tpadding: 0.2rem;\n\tmargin: 0;\n\tbackground: ${props => props.theme.bg.primary};\n  border-bottom: 2px solid ${props => props.theme.bg.secondary};\n\n`\n\nexport const HeaderRow = styled.div`\n  display: flex;\n  align-self: stretch;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0;\n  margin: 0;\n`\n\nexport const Label = styled.span`\n\tpadding-left: 1rem;\n\tfont-size: ${props => props.theme.fontSize.sz3};\n\tmargin-bottom: .25rem;\n`\n\nexport const Title = styled.h2`\n\tflex: 2;\n\theight: 100%;\n\tmin-height: 100%;\n\tmargin: 1rem;\n\tpadding: 0;\n\ttext-align: left;\n\tdisplay: inline-flex;\n\tjustify-content: center;\n\talign-items: center;\n  justify-content: flex-start;\n\n    font-family: ${props => props.theme.font.primary};\n\tfont-size: ${props => props.theme.fontSize.sz2};\n\tfont-weight: ${props => props.theme.fontWeight.bold};\n`;\n\nexport const TextContainer = styled.div`\n\twidth: 100%;\n\tdisplay: flex;\n\tflex-direction: column;\n\tmargin-bottom: 1.5rem;\n\n  align-content: center;\n`;\n\nexport const BodyContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\t//padding: 1rem;\n\tflex: 1;\n\tjustify-content: space-between;\n\toverflow: hidden;\n\n  \n\n\tbackground: ${props => props.theme.bg.primary};\n`\n\nexport const ButtonForm = styled.div`\n\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: flex-end;\n\n\tmin-height: fit-content;\n`;\n\nexport const ButtonContainers= styled.div`\n\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: flex-end;\n\tmin-height: fit-content;\n  padding: 0.5rem;\n\n  background: ${props => props.theme.bg.secondary};\n`;\n\nexport const CloseIcon = styled.i`\n    font-size: 1.4rem;\n    margin: 1rem;\n    color: ${props => props.theme.bg.quaternary};\n    cursor: pointer;\n`\n\nexport const IconSelectorContainer = styled.div`\n\tbackground: ${props => props.theme.bg.quinary};\n\toverflow: auto;\n\tmin-height: 2rem;\n\twidth: 100%;\n\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tflex-wrap: wrap;\n\tborder-radius: .5rem;\n`\n\nexport const ContentContainer = styled.div`\n\t// border-radius: 1rem;\n\tdisplay: flex;\n\tflex-direction: column;\n\toverflow: hidden;\n\talign-items: center;\n  justify-content: flex-start;\n  // align-items: flex-start;\n  margin: 1rem;\n  align-items: center;\n`\nexport const ReportButtonsContainer = styled.div`\n\tdisplay: flex;\n\n\tflex-direction: column;\n\talign-items: center;\n\t// justify-content: center;\n\tflex-wrap: nowrap;\n\toverflow: auto;\n\tmin-height: 5rem;\n\twidth: 100%;\n`\n\nexport const ConditionText = styled.span`\n\tfont: ${props => props.theme.font.primary};\n\tfont-size: ${props => props.theme.fontSize.sz3};\n\tmax-width: 100 %;\n\toverflow: hidden;\n\ttext-overflow: ellipsis;\n`\n\nexport const RightContentContainer = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: ${props => props.theme.bg.senary};\n    width: 4rem;\n    border-left: 1px solid ${props => props.theme.bg.secondary};\n    height: 100%;\n    // background-color: ${props => props.theme.bg.septenary};\n\n    // padding-left: 1rem;\n    // border-top-right-radius: 0.6rem;\n    // border-bottom-right-radius: 0.6rem;\n\n\n`\n\nexport const ButtonContainer = styled.button`\n  position: relative;\n  user-select: none;\n\n  // flex layout\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  // flex-grow: 1;\n  width: 90%;\n  overflow: hidden;\n  height: 4rem;\n  min-height: 4rem;\n  line-height: 3rem;\n  min-width: 80%;\n\n  background: ${props => `linear-gradient(180deg,\n                            ${LightenDarkenColor(props.background, 20)} 0%,\n                            ${props.background} 50%,\n                            ${LightenDarkenColor(props.background, -20)} 100%)`};\n  border-radius: 0.6rem;\n  padding: 0;\n\n\n  // margins\n  margin: .5rem 0 .5rem 0;\n\n  // padding\n  // padding: 0.5rem 1rem 0.5rem 1rem;\n\n  outline: none;\n  &:focus {\n    outline: none;\n  }\n\n  letter-spacing: 1.5px;\n  border: none;\n  box-shadow: ${props => props.clickable ? 'none' : `2px 2px 2px rgba(0, 0, 0, 0.5)`};\n  transition: all 0.1s ease 0s;\n  cursor: pointer;\n  outline: none;\n\n  &:hover {\n    ${props => props.hoverable && !props.clickable &&\n\t{\n\t\tboxShadow: \"3px 3px 3px rgba(0, 0, 0, 0.5)\",\n\t\ttransform: \"translateY(-1px)\",\n\t}\n}\n  }\n\n  ${props => props.clickable && !props.disabled &&\n\t`&:active {\n      background: ${`linear-gradient(180deg,\n          ${LightenDarkenColor(props.background, -20)} 0%,\n          ${props.background} 50%,\n          ${LightenDarkenColor(props.background, 20)} 100%)`\n\t}\n    }`\n}\n\n  ${props => props.disabled &&\n\t{\n\t\tcolor: props.theme.bg.quaternary,\n\t\tbackground: `linear-gradient(180deg, rgba(255,255,255,0.4) 0%, rgba(255,255,255,0.4) 100%), ${LightenDarkenColor(props.background, -60)}`,\n\t\tpointerEvents: \"none\",\n\t}\n}\n\n    // --border-width: 3px;\n    ${props => props.borderGlow &&\n\tborderGlowCss\n}\n\n${props => props.css};\n\n`\n\nexport const AddNewButtonContainer = styled.div`\n\tdisplay: flex;\n\tjustify-content: center;\n\twidth: 100%;\n\tborder-bottom:  ${props => props.showBorder && `1px solid` + props.theme.bg.secondary};\n`\n\nexport const ColorFieldContainer = styled.div`\n\tposition: relative;\n\n`\n\n\nexport const Icon = styled.i`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin: auto auto;\n    color: green;\n    fill: green;\n    font-size: 7rem;\n    width: 14rem;\n    &:hover {\n        cursor: pointer;\n    }\n\n    &:active{\n        filter: brightness(85%)\n    }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\";\n\nimport Button from \"../../../basic/button/button\";\n\n// styles\nimport * as styled from './simple_modal.style'\n\n\nconst SimpleModal = (props) => {\n\n    const {\n        isOpen,\n        title,\n        onRequestClose,\n        onCloseButtonClick,\n        handleOnClick1,\n        handleOnClick2,\n        button_1_text,\n        button_2_text,\n        button_1_disabled,\n        button_2_disabled,\n        children,\n        contentLabel,\n        FooterContent,\n        PreBodyContent,\n        content,\n    } = props\n\n    return (\n        <styled.Container\n            isOpen={isOpen}\n            contentLabel={contentLabel}\n            onRequestClose={onRequestClose}\n            style={{\n                overlay: {\n                    zIndex: 500,\n                    backgroundColor: 'rgba(0, 0, 0, 0.4)' \n                },\n                content: {\n\n                }\n            }}\n        >\n            <styled.Header>\n                <styled.HeaderRow>\n                    <styled.Title>{title}</styled.Title>\n                    <styled.CloseIcon className=\"fa fa-times\" aria-hidden=\"true\" onClick={onCloseButtonClick}/>\n                </styled.HeaderRow>\n\n            </styled.Header>\n            <styled.BodyContainer>\n                {PreBodyContent}\n                        <styled.ContentContainer>\n                            {children}\n\n                            {content &&\n                            <span>{content}</span>\n                            }\n                        </styled.ContentContainer>\n\n                        <styled.ButtonForm>\n                            {FooterContent}\n                            <styled.ButtonContainers>\n                                <Button\n                                    style={{minWidth: '10rem'}}\n                                    secondary\n                                    onClick={handleOnClick1}\n                                    label={button_1_text}\n                                    type=\"button\"\n                                    disabled={button_1_disabled}\n                                />\n                                <Button\n                                    style={{minWidth: '10rem'}}\n                                    onClick={handleOnClick2}\n                                    label={button_2_text}\n                                    type=\"button\"\n                                    disabled={button_2_disabled}\n                                />\n                            </styled.ButtonContainers>\n                        </styled.ButtonForm>\n            </styled.BodyContainer>\n        </styled.Container>\n    );\n};\n\n// Specifies propTypes\nSimpleModal.propTypes = {\n    contentLabel: PropTypes.string,\n    isOpen: PropTypes.bool,\n    title: PropTypes.string,\n    onRequestClose: PropTypes.func,\n    onCloseButtonClick: PropTypes.func,\n    handleOnClick1: PropTypes.func,\n    handleOnClick2: PropTypes.func,\n    button_1_text: PropTypes.string,\n    button_2_text: PropTypes.string,\n};\n\n// Specifies the default values for props:\nSimpleModal.defaultProps = {\n    contentLabel: \"Simple Modal\",\n    isOpen: false,\n    title: \"Simple Modal\",\n    onRequestClose: () => {},\n    onCloseButtonClick: () => {},\n    handleOnClick1: () => {},\n    handleOnClick2: () => {},\n    button_1_text: \"Ok\",\n    button_2_text: \"Cancel\",\n    children: null,\n    button_1_disabled: false,\n    button_2_disabled: false,\n    FooterContent: null,\n    PreBodyContent: null,\n};\n\n\nexport default SimpleModal\n","import log from 'loglevel';\n// import remote from 'loglevel-plugin-remote';\n\n\n/*\n\nNote on log levels:\n\nTrace - Only when I would be \"tracing\" the code and trying to find one part of a function specifically.\n\nDebug - Information that is diagnostically helpful to people more than just developers (IT, sysadmins, etc.).\n\nlog - Equivalent to Debug\n\nInfo - Generally useful information to log (service start/stop, configuration assumptions, etc). Info I want to always have available but usually don't care about under normal circumstances. This is my out-of-the-box config level.\n\nWarn - Anything that can potentially cause application oddities, but for which I am automatically recovering. (Such as switching from a primary to backup server, retrying an operation, missing secondary data, etc.)\n\nError - Any error which is fatal to the operation, but not the service or application (can't open a required file, missing data, etc.). These errors will force user (administrator, or direct user) intervention. These are usually reserved (in my apps) for incorrect connection strings, missing services, etc.\n\n*/\n\n/* uncomment for remote logging\nconst customJSON = log => ({\n   msg: log.message,\n   level: log.level.label,\n   stacktrace: log.stacktrace\n});\n\n\nremote.apply(log, { format: customJSON, url: '/logger' });\n\n*/\n\n/*\nObject.defineProperty(log, \"category\", {\n  value: \"root\",\n  writable: true\n})\n*/\n\nconst getLogger = log.getLogger;\n\nlog.getLogger = function getLoggerAndSetCategory(name, category) {\n    const logger = getLogger(name);\n\n    if(category) {\n        Object.defineProperty(logger, \"category\", {\n          value: category,\n          writable: true\n        })\n    }\n\n    return logger;\n};\n\nlog.getCategoryLoggers = function(category) {\n  const loggers = Object.values(log.getLoggers());\n  const categoryLoggers = [];\n\n  loggers.forEach((logger, index) => {\n    if(logger.category == category) categoryLoggers.push(logger);\n  });\n\n  return categoryLoggers;\n};\n\n// var originalFactory = log.methodFactory;\n\n// log.methodFactory = function (methodName, logLevel, loggerName) {\n//     var rawMethod = originalFactory(methodName, logLevel, loggerName);\n//\n//     return function (message) {\n//         rawMethod(\"Newsflash: \" + message);\n//     };\n// };\n// log.setLevel(log.getLevel());\n\nexport default log;\n\n\n","export const GET = 'GET_';\nexport const POST = 'POST_';\nexport const DELETE = 'DELETE_';\nexport const PUT = 'PUT_';\nexport const SET = 'SET_';\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport LotSortBar from \"../lot_sort_bar/lot_sort_bar\";\nimport {\n\tBarsContainer,\n\tcolumnCss,\n\tcontainerCss,\n\tdescriptionCss,\n\tdropdownCss,\n\treactDropdownSelectCss,\n\tvalueCss\n} from \"../lot_bars.style\";\nimport LotFilterBar from \"../lot_filter_bar/lot_filter_bar\";\nimport * as styled from \"../zone_header/zone_header.style\";\n\nconst SortFilterContainer = (props) => {\n\tconst {\n\t\tsortMode,\n\t\tsetSortMode,\n\t\tsortDirection,\n\t\tsetSortDirection,\n\t\tshouldFocusLotFilter,\n\t\tsetLotFilterValue,\n\t\tselectedFilterOption,\n\t\tsetSelectedFilterOption,\n\t\tlotFilterValue,\n        containerStyle,\n\t} = props\n\n\treturn (\n\t\t<BarsContainer style={containerStyle}>\n\t\t\t{/*<styled.OptionContainer>*/}\n\t\t\t<LotSortBar\n\t\t\t\tcolumnCss={columnCss}\n\t\t\t\tcontainerCss={containerCss}\n\t\t\t\tdescriptionCss={descriptionCss}\n\t\t\t\tdropdownCss={dropdownCss}\n\t\t\t\tvalueCss={valueCss}\n\t\t\t\treactDropdownSelectCss={reactDropdownSelectCss}\n\t\t\t\tsortMode={sortMode}\n\t\t\t\tsetSortMode={setSortMode}\n\t\t\t\tsortDirection={sortDirection}\n\t\t\t\tsetSortDirection={setSortDirection}\n\t\t\t/>\n\t\t\t{/*</styled.OptionContainer>*/}\n\n\t\t\t{/*<styled.OptionContainer>*/}\n\t\t\t<LotFilterBar\n\t\t\t\tlotFilterValue={lotFilterValue}\n\t\t\t\tcolumnCss={columnCss}\n\t\t\t\tcontainerCss={containerCss}\n\t\t\t\tdescriptionCss={descriptionCss}\n\t\t\t\tdropdownCss={dropdownCss}\n\t\t\t\tvalueCss={valueCss}\n\t\t\t\treactDropdownSelectCss={reactDropdownSelectCss}\n\t\t\t\tshouldFocusLotFilter={shouldFocusLotFilter}\n\t\t\t\tsetLotFilterValue={setLotFilterValue}\n\t\t\t\tselectedFilterOption={selectedFilterOption}\n\t\t\t\tsetSelectedFilterOption={setSelectedFilterOption}\n\t\t\t/>\n\t\t\t{/*</styled.OptionContainer>*/}\n\t\t</BarsContainer>\n\t);\n};\n\nSortFilterContainer.propTypes = {\n\n};\n\nexport default SortFilterContainer;\n","import styled, { css } from \"styled-components\"\nimport Modal from \"react-modal\";\n\nexport const Container = styled(Modal)`\n  outline: none !important;\n  outline-offset: none !important;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  right: auto;\n  bottom: auto;\n\n  position: absolute;\n  z-index: 50;\n  \n    min-width: ${props => props.minWidth};\n    max-width: ${props => props.maxWidth};\n    max-height: ${props => props.maxHeight};\n    min-height: ${props => props.minHeight};\n  \n  color: ${props => props.theme.textColor};\n  \n  display: flex;\n  flex-direction: column;\n  border-radius: .4rem;\n  overflow: hidden;\n  align-items: stretch;\n`;","import React, {Component} from \"react\";\nimport PropTypes from 'prop-types';\n\nimport * as styled from \"./with_modal.style\";\n\nconst withModal = (WrappedComponent, minWidth = 'auto', maxWidth = 'auto', minHeight = 'auto', maxHeight = 'auto') => {\n    return (props) => {\n\n        const {\n            close,\n            contentLabel,\n            isOpen\n        } = props\n\n        return <styled.Container\n            minWidth={minWidth}\n            minHeight={minHeight}\n            maxWidth={maxWidth}\n            maxHeight={maxHeight}\n            isOpen={isOpen}\n            onRequestClose={() => {\n                close()\n            }}\n            contentLabel={contentLabel}\n            style={{\n                overlay: {\n                    zIndex: 500,\n                    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n                    backdropFilter: 'blur(4px)',\n                    borderRadius: '.4rem'\n\n                },\n                content: {\n                    borderRadius: '0.4rem',\n                    overflow: 'hidden'\n                }\n            }}\n        >\n            <WrappedComponent {...props} />\n        </styled.Container>\n\n    };\n}\n\nexport default withModal","import styled, {css} from \"styled-components\";\n\nexport const DatesContainer = styled.span`\n\tdisplay: inline-flex;\n\talign-items: center;\n\tbackground: ${props => props.theme.bg.secondary};\n\tjustify-content: center;\n\tpadding: .75rem;\n\tborder-radius: 0.4rem;\n\twidth: fit-content;\n\tmargin: 0;\n\n  \n  \n`\n\nconst usableCss = css`\n  &:hover {\n    cursor: pointer !important;\n    filter: brightness(105%);\n  }\n`\n\nconst notUsableCss = css`\n  &:hover {\n    cursor: default;\n  }\n`\n\nexport const DateItem = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tbackground: ${props => props.theme.bg.tertiary};\n\tborder-radius: 0.2rem;\n    width: fit-content;\n    position: relative;\n    \n    padding: .5rem 1rem;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n  \n  ${props => props.usable ? usableCss : notUsableCss};\n`\n\nexport const DateArrow = styled.i`\n\tmargin-left: 1rem;\n\tmargin-right: 1rem;\n\tcolor: ${props => props.theme.bg.senary};\n`\n\nexport const DateTitle = styled.span``\n\nexport const DateText = styled.span`\n\n`\n\nexport const BodyContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n  width: 100%;\n  min-width: 100%;\n  background: ${props => props.theme.bg.primary};\n\tpadding: 1rem;\n  align-self: stretch;\n  z-index: 1001;\n  \n\t//flex: 1;\n\tjustify-content: space-between;\n  min-height: ${props => props.minHeight};\n\n  \n  \n`\n\nexport const ContentHeader = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\twidth: 100%;\n  \tmargin-bottom: 1rem;\n\t//padding: 1rem;\n`\n\nexport const ContentTitle = styled.span`\n\tfont-size: ${props => props.theme.fontSize.sz3};\n\tfont-weight: ${props => props.theme.fontWeight.bold};\n\tfont-family: ${props => props.theme.font.primary};\n`\n\nexport const CalendarContainer = styled.div`\n\toverflow: auto;\n\t\n`","import React, {useState, useEffect} from \"react\"\n\n// components internal\nimport Calendar from \"../calendar/calendar\"\n\n// constants\nimport {BASIC_FIELD_DEFAULTS} from \"../../../constants/form_constants\"\n\n// functions external\nimport Popup from 'reactjs-popup'\nimport PropTypes from \"prop-types\"\n\n// styles\nimport * as styled from \"./calendar_placeholder.style\"\nimport {immutableSet, isNonEmptyArray} from \"../../../methods/utils/array_utils\";\nimport {jsDateToString} from \"../../../methods/utils/card_utils\";\nimport CalendarPlaceholderButton from \"../calendar_placeholder_button/calendar_placeholder_button\";\n\n\nconst CalendarPlaceholder = (props) => {\n\tconst {\n\t\tonClick,\n\t\tonStartClick,\n\t\tonEndClick,\n\t\tdefaultText,\n\t\tdefaultStartText,\n\t\tdefaultEndText,\n\t\tname,\n\t\tselectRange,\n\t\tcontainerStyle,\n\t\tusable,\n\t\tCalendarComponent,\n\t\tonChange,\n\t\tcloseOnSelect,\n\t\tminDate,\n\t\tmaxDate,\n\t\tvalue,\n\t\tPlaceholderButton,\n\t\tschema\n\t} = props\n\n\tconst [showCalendarPopup, setShowCalendarPopup] = useState(false)\n\tconst [rangeIndex, setRangeIndex] = useState(null)\n\tconst [displayName, setDisplayName] = useState(selectRange ? [defaultStartText, defaultEndText] : defaultText)\n\n\tconst closePopup = () => {\n\t\tsetShowCalendarPopup(false)\n\t\tsetRangeIndex(null)\n\t}\n\n\tuseEffect(() => {\n\t\t// value is array\n\t\tif(selectRange) {\n\t\t\tlet tempDisplayName = []\n\t\t\tif(isNonEmptyArray(value) && value[0]) {\n\t\t\t\ttempDisplayName[0] = jsDateToString(value[0])\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttempDisplayName[0] = defaultStartText\n\t\t\t}\n\t\t\tif(isNonEmptyArray(value) && value[1]) {\n\t\t\t\ttempDisplayName[1] = jsDateToString(value[1])\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttempDisplayName[1] = defaultEndText\n\t\t\t}\n\n\t\t\tsetDisplayName(tempDisplayName)\n\t\t}\n\n\t\t// value is single value\n\t\telse if(value) {\n\t\t\tsetDisplayName(jsDateToString(value))\n\t\t}\n\t\telse {\n\t\t\tsetDisplayName(defaultText)\n\t\t}\n\t}, [value])\n\n\tconst renderCalendar = () => {\n\t\treturn(\n\t\t\t<styled.BodyContainer>\n\t\t\t\t<styled.ContentHeader>\n\t\t\t\t\t<styled.ContentTitle>Select Date</styled.ContentTitle>\n\t\t\t\t\t<i\n\t\t\t\t\t\tclassName=\"fas fa-times\"\n\t\t\t\t\t\tstyle={{cursor: 'pointer'}}\n\t\t\t\t\t\tonClick={closePopup}\n\t\t\t\t\t/>\n\t\t\t\t</styled.ContentHeader>\n\n\t\t\t\t<styled.CalendarContainer>\n\t\t\t\t\t<CalendarComponent\n\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\tminDate={Number.isInteger(rangeIndex) ? (rangeIndex === 1 ? minDate : null) : minDate}\n\t\t\t\t\t\tmaxDate={Number.isInteger(rangeIndex) ? (rangeIndex === 0 ? maxDate : null) : maxDate}\n\t\t\t\t\t\tselectRange={false}\n\t\t\t\t\t\tindex={rangeIndex}\n\t\t\t\t\t\tname={name}\n\t\t\t\t\t\tonChange={(val) => {\n\t\t\t\t\t\t\tlet tempCurrVal = Number.isInteger(rangeIndex) ?\n\t\t\t\t\t\t\t\timmutableSet((isNonEmptyArray(value) && value.length > 0) ? value\n\t\t\t\t\t\t\t\t\t: BASIC_FIELD_DEFAULTS.CALENDAR_FIELD_RANGE, val, rangeIndex) ||\n\t\t\t\t\t\t\t\tBASIC_FIELD_DEFAULTS.CALENDAR_FIELD_RANGE : BASIC_FIELD_DEFAULTS.CALENDAR_FIELD_RANGE\n\n\t\t\t\t\t\t\t// setCurrentVal(selectRange ? tempCurrVal : val)\n\t\t\t\t\t\t\tonChange(selectRange ? tempCurrVal : val)\n\t\t\t\t\t\t\tcloseOnSelect && closePopup()\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</styled.CalendarContainer>\n\t\t\t</styled.BodyContainer>\n\t\t)\n\t}\n\n\tif(selectRange) return (\n\t\t<styled.DatesContainer\n\t\t\tstyle={containerStyle}\n\t\t>\n\t\t\t{typeof PlaceholderButton === \"object\" ?\n\t\t\t\tReact.cloneElement(PlaceholderButton,{\n\t\t\t\t\tlabel: displayName[0],\n\t\t\t\t\tusable: usable,\n\t\t\t\t\tindex: 0,\n\t\t\t\t\tschema,\n\t\t\t\t\tonClick: () => {\n\t\t\t\t\t\tif(usable) {\n\t\t\t\t\t\t\tonStartClick()\n\t\t\t\t\t\t\tsetRangeIndex(0)\n\t\t\t\t\t\t\tsetShowCalendarPopup(true)\n\t\t\t\t\t\t}}\n\t\t\t\t})\n\t\t\t\t:\n\t\t\t\t<PlaceholderButton\n\t\t\t\t\tschema={schema}\n\t\t\t\t\tusable={usable}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tif(usable) {\n\t\t\t\t\t\t\tonStartClick()\n\t\t\t\t\t\t\tsetRangeIndex(0)\n\t\t\t\t\t\t\tsetShowCalendarPopup(true)\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t\tlabel={displayName[0]}\n\t\t\t\t/>\n\t\t\t}\n\n\t\t\t<styled.DateArrow className=\"fas fa-arrow-right\"></styled.DateArrow>\n\n\t\t\t{typeof PlaceholderButton === \"object\" ?\n\t\t\t\tReact.cloneElement(PlaceholderButton,{\n\t\t\t\t\tlabel: displayName[1],\n\t\t\t\t\tusable,\n\t\t\t\t\tindex: 1,\n\t\t\t\t\tschema,\n\t\t\t\t\tonClick: () => {\n\t\t\t\t\t\tif(usable) {\n\t\t\t\t\t\t\tonEndClick()\n\t\t\t\t\t\t\tsetRangeIndex(1)\n\t\t\t\t\t\t\tsetShowCalendarPopup(true)\n\t\t\t\t\t\t}}\n\t\t\t\t})\n\t\t\t\t:\n\t\t\t\t<PlaceholderButton\n\t\t\t\t\tschema={schema}\n\t\t\t\t\tusable={usable}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tif(usable) {\n\t\t\t\t\t\t\tonEndClick()\n\t\t\t\t\t\t\tsetRangeIndex(1)\n\t\t\t\t\t\t\tsetShowCalendarPopup(true)\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t\tlabel={displayName[1]}\n\t\t\t\t/>\n\t\t\t}\n\n\t\t\t{showCalendarPopup &&\n\t\t\t<Popup\n\t\t\t\topen={showCalendarPopup}\n\t\t\t\tcloseOnDocumentClick={true}\n\t\t\t\tonClose={closePopup}\n\t\t\t>\n\t\t\t\t{renderCalendar()}\n\t\t\t</Popup>\n\t\t\t}\n\t\t</styled.DatesContainer>\n\t)\n\n\treturn(\n\t\t<>\n\t\t\t{typeof PlaceholderButton === \"object\" ?\n\t\t\t\tReact.cloneElement(PlaceholderButton,{\n\t\t\t\t\tlabel: displayName,\n\t\t\t\t\tusable: usable,\n\t\t\t\t\tcontainerStyle: containerStyle,\n\t\t\t\t\tschema,\n\t\t\t\t\tonClick: () => {\n\t\t\t\t\t\tif(usable) {\n\t\t\t\t\t\t\tonClick()\n\t\t\t\t\t\t\tsetShowCalendarPopup(true)\n\t\t\t\t\t\t}}\n\t\t\t\t})\n\t\t\t\t:\n\t\t\t\t<PlaceholderButton\n\t\t\t\t\tusable={usable}\n\t\t\t\t\tschema={schema}\n\t\t\t\t\tcontainerStyle={containerStyle}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tif(usable) {\n\t\t\t\t\t\t\tonClick()\n\t\t\t\t\t\t\tsetShowCalendarPopup(true)\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t\tlabel={displayName}\n\t\t\t\t/>\n\t\t\t}\n\n\t\t\t{showCalendarPopup &&\n\t\t\t<Popup\n\t\t\t\topen={showCalendarPopup}\n\t\t\t\tcloseOnDocumentClick={true}\n\t\t\t\tonClose={closePopup}\n\t\t\t>\n\t\t\t\t{renderCalendar()}\n\t\t\t</Popup>\n\t\t\t}\n\t\t</>\n\t)\n\n\t// if() {\n\t// \treturn(\n\t//\n\t// \t)\n\t// }\n\t//\n\t// return(\n\t//\n\t// )\n}\n\n// Specifies propTypes\nCalendarPlaceholder.propTypes = {\n\tcloseOnSelect: PropTypes.bool,\n\tPlaceholderButton: PropTypes.any\n}\n\n// Specifies the default values for props:\nCalendarPlaceholder.defaultProps = {\n\tsetShowCalendarPopup: () => {},\n\tonClick: () => {},\n\tusable: true,\n\tCalendarComponent: Calendar,\n\tonChange: () => {},\n\tcloseOnSelect: true,\n\tonEndClick: () => {},\n\tonStartClick: () => {},\n\tminDate: null,\n\tmaxDate: null,\n\tdefaultStartText: \"Select Start Date\",\n\tdefaultEndText: \"Select End Date\",\n\tdefaultText: \"Select Date\",\n\tPlaceholderButton: CalendarPlaceholderButton\n}\n\nexport default CalendarPlaceholder","import axios from 'axios';\nimport log from \"../logger\"\n\nimport { apiIPAddress } from '../settings/settings'\nconst operator = 'task_queue'\n\nconst logger = log.getLogger(\"TaskQueue\")\n\nexport async function getTaskQueue() {\n    try {\n        const response = await axios({\n            method: 'get',\n            url: apiIPAddress() + operator,\n            headers: {\n                'X-API-Key': '123456',\n                'Access-Control-Allow-Origin': '*'\n            }\n        });\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n\n        return dataJson;\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        throw error\n        log.debug('error', error);\n    }\n\n\n}\n\nexport async function postTaskQueue(taskQueueItem) {\n    try {\n        const response = await axios({\n            method: 'post',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'application/json',\n                'Access-Control-Allow-Origin': '*'\n            },\n            data: taskQueueItem,\n            url: apiIPAddress() + operator,\n        });\n\n        // Success 🎉\n        log.debug('postTaskQueue: response', response);\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        log.debug('dataJson', dataJson)\n        log.debug('getSchedulesdataJson', dataJson)\n        return dataJson;\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            console.error('postTaskQueue: error.response.data', error.response.data);\n            console.error('postTaskQueue: error.response.status', error.response.status);\n            console.error('postTaskQueue: error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            console.error('postTaskQueue: error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            console.error('postTaskQueue: error.message', error.message);\n        }\n        throw error\n        console.error('postTaskQueue: error', error);\n    }\n\n\n}\n\nexport async function deleteTaskQueueAll() {\n    try {\n        const response = await axios({\n            method: 'delete',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'application/json',\n                'Access-Control-Allow-Origin': '*'\n            },\n            url: apiIPAddress() + operator,\n        });\n\n        // Success 🎉\n        // log.debug('deleteTaskQueueAll: response',response);\n        const data = response.data;\n\n        return data;\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            console.error('deleteTaskQueueAll: error.response.data', error.response.data);\n            console.error('deleteTaskQueueAll: error.response.status', error.response.status);\n            console.error('deleteTaskQueueAll: error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            console.error('deleteTaskQueueAll: error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            console.error('deleteTaskQueueAll: error.message', error.message);\n        }\n        throw error\n        console.error('deleteTaskQueueAll: error', error);\n    }\n\n\n}\n\n\nexport async function deleteTaskQueueItem(id) {\n    try {\n        const response = await axios({\n            method: 'delete',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'application/json',\n                'Access-Control-Allow-Origin': '*'\n            },\n            url: apiIPAddress() + operator + '/' + id,\n        });\n\n        // Success 🎉\n        // log.debug('deleteTaskQueueItem: response',response);\n        const data = response.data;\n\n        return data;\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            console.error('deleteTaskQueueItem: error.response.data', error.response.data);\n            console.error('deleteTaskQueueItem: error.response.status', error.response.status);\n            console.error('deleteTaskQueueItem: error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            console.error('deleteTaskQueueItem: error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            console.error('deleteTaskQueueItem: error.message', error.message);\n        }\n        throw error\n    }\n}\n\nexport async function putTaskQueueItem(item, ID) {\n    try {\n        const response = await axios({\n            method: 'PUT',\n            url: apiIPAddress() + operator + '/' + ID,\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'text/html',\n                'Access-Control-Allow-Origin': '*'\n            },\n            data: item\n        });\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}\n","import axios from 'axios';\n\n\nimport { apiIPAddress } from '../settings/settings'\nconst operator = 'work_instructions'\n\n\nexport async function getWorkInstruction(id) {\n    try {\n        const response = await axios({\n            method: 'get',\n            url: apiIPAddress() + operator + \"/\" + id,\n            headers: {\n                'X-API-Key': '123456',\n                'Access-Control-Allow-Origin': '*'\n            }\n        });\n\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        return dataJson;\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n\n            console.error('error.response.data', error.response.data);\n            console.error('error.response.status', error.response.status);\n            console.error('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            console.error('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            console.error('error.message', error.message);\n        }\n        console.error('error', error);\n    }\n\n}\n\nexport async function getWorkInstructions() {\n    try {\n        const response = await axios({\n            method: 'get',\n            url: apiIPAddress() + operator,\n            headers: {\n                'X-API-Key': '123456',\n                'Access-Control-Allow-Origin': '*'\n            }\n        });\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        return dataJson;\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n\n            console.error('error.response.data', error.response.data);\n            console.error('error.response.status', error.response.status);\n            console.error('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            console.error('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            console.error('error.message', error.message);\n        }\n        console.error('error', error);\n    }\n\n}\n\nexport async function deleteWorkInstruction(ID) {\n    try {\n        const response = await axios({\n            method: 'DELETE',\n            url: apiIPAddress() + operator + '/' + ID,\n            headers: {\n                'Accept': 'application/json',\n                'X-API-Key': '123456',\n                'Access-Control-Allow-Origin': '*'\n            },\n        });\n\n        return response;\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            console.error('error.response.data', error.response.data);\n            console.error('error.response.status', error.response.status);\n            console.error('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            console.error('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            console.error('error.message', error.message);\n        }\n        console.error('error', error);\n    }\n}\n\nexport async function postWorkInstruction(workInstruction) {\n    try {\n        const response = await axios({\n            method: 'POST',\n            url: apiIPAddress() + operator,\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n                'X-API-Key': '123456',\n                'Access-Control-Allow-Origin': '*'\n            },\n            data: workInstruction\n        });\n\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        return dataJson;\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            console.error('error.response.data', error.response.data);\n            console.error('error.response.status', error.response.status);\n            console.error('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            console.error('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            console.error('error.message', error.message);\n        }\n        console.error('error', error);\n    }\n}\n\nexport async function putWorkInstruction(workInstruction, ID) {\n    try {\n        const response = await axios({\n            method: 'PUT',\n            url: apiIPAddress() + operator + '/' + ID,\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'application/json',\n                'Access-Control-Allow-Origin': '*'\n            },\n            data: workInstruction\n        });\n\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        return dataJson;\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            console.error('error.response.data', error.response.data);\n            console.error('error.response.status', error.response.status);\n            console.error('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            console.error('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            console.error('error.message', error.message);\n        }\n        console.error('error', error);\n    }\n}\n","import styled, { css } from 'styled-components'\nimport { LightenDarkenColor } from '../../../../../../methods/utils/color_utils'\n\nimport { borderGlowCss, ContainerCss, conditionTextCss } from \"../dashboard_buttons.style\"\n\n\nexport const Container = styled.button`\n    ${ContainerCss};\n    \n    // flex layout\n    flex-direction: row;\n    \n    box-shadow: 0 9px 2px -4px ${props => LightenDarkenColor(props.theme.bg.secondary, -50)}; \n    height: 4rem; \n    // line-height: 4rem; \n    margin-bottom: 1rem; \n    min-width: 80%;\n\n    padding: 0;\n    padding-left: 0.5rem;\n\n    &:active{\n        box-shadow: none;\n        filter: brightness(85%);\n    }\n`\n\nexport const ConditionText = styled.span`\n    ${conditionTextCss};\n\n    flex-grow: 1;\n`\n\nexport const IconContainer = styled.div`\n    position: absolute;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    width: 10.75rem;\n`\n\nexport const SchemaIcon = styled.i`\n    color: ${props => props.color};\n    padding: 0;\n    font-size: 2rem;\n    margin: 0;\n    height: fit-content;\n    width: fit-content;\n    // background: blue;\n\n`","import styled, { css } from 'styled-components'\n\n\nexport const overflowTextCss = css`\n  overflow: hidden;\n  //white-space: nowrap;\n  text-overflow: ellipsis;\n`\n\n\nexport const glow = (color) => css`\n\tbox-shadow: 0px 0px 5px ${color} ;\n\tborder-color: ${color};\n`\n\nexport const glow2 = (color) => css`\n\tbox-shadow: 0 0 5px ${color} ;\n\tborder-color: ${color};\n`\n\nexport const errorGlow = css`\n  ${props => glow(props.theme.bad)};\n`;\n\nexport const newGlow = css`\n  ${props => glow(props.theme.warn)};\n`;\n\nexport const goodGlow = css`\n  ${props => glow(props.theme.good)};\n`;\n\nexport const rowContainer = css`\n    display: flex;\n    flex-direction: row;\n`\n\nexport const columnContainer = css`\n    display: flex;\n    flex-direction: column;\n`\nexport const commonIcon = css`\n    //border: none;\n    //font-size: 2rem;\n    transition: all 0.25s ease;\n    color: ${props => props.color};\n\n\n    filter: brightness(${props => props.filter});\n\n    &: focus{\n        //outline: 0 !important\n    }\n    \n    &: hover {\n        cursor: pointer;\n        filter: brightness(110 %);\n    }\n\n    &: active{\n        //box-shadow: none;\n        filter: brightness(85 %);\n    }\n`\nexport const whiteGlow = css`\n  ${props => glow2(\"#00aaff\")};\n`;\n\nexport const iconButtonCss = `\n  border: none;\n  background: transparent;\n  padding: 0;\n  outline: none !important;\n`\n\nexport const disabledButtonCss = css`\n  cursor: not-allowed;\n  background: ${props => props.theme.disabled};\n  \n`\n\nexport const commonClickableIcon = css`\n  ${commonIcon};\n  \n  &:focus{\n    //outline: 0 !important\n  }\n  \n  &:hover {\n    cursor: pointer;\n    filter: brightness(110%);\n  }\n\n  &:active{\n    //box-shadow: none;\n    filter: brightness(85%);\n  }\n\n  \n\n`\n\nexport const trapezoidCss = `\n  \n  border-bottom: 50px solid #555;\n  border-left: 25px solid transparent;\n  border-right: 25px solid transparent;\n  height: 0;\n  width: 125px;\n  \n  \n  // width: 200px;\n  // height: 150px;\n  // background: red;\n  transform: perspective(10px) rotateX(1deg);\n  // margin: 50px;\n`","export const SORT_MODES = {\n\tSTART_ASCENDING: \"START_ASCENDING\",\n\tSTART_DESCENDING: \"START_DESCENDING\",\n\tEND_ASCENDING: \"END_ASCENDING\",\n\tEND_DESCENDING: \"END_DESCENDING\",\n\tNAME_ASCENDING: \"NAME_ASCENDING\",\n\tNAME_DESCENDING: \"NAME_DESCENDING\",\n\tQUANTITY_ASCENDING: \"QUANTITY_ASCENDING\",\n\tQUANTITY_DESCENDING: \"QUANTITY_DESCENDING\"\n}\n\nexport const SORT_OPTIONS = [\n\t{description: \"Name (a-z)\", sortMode: SORT_MODES.NAME_ASCENDING},\n\t{description: \"Name (z-a)\", sortMode: SORT_MODES.NAME_DESCENDING},\n\t{description: \"Quantity (Increasing)\", sortMode: SORT_MODES.QUANTITY_ASCENDING},\n\t{description: \"Quantity (Decreasing)\", sortMode: SORT_MODES.QUANTITY_DESCENDING},\n\t{description: \"Start Date (Ascending)\", sortMode: SORT_MODES.START_ASCENDING},\n\t{description: \"Start Date (Descending)\", sortMode: SORT_MODES.START_DESCENDING},\n\t{description: \"End Date (Descending)\", sortMode: SORT_MODES.END_DESCENDING},\n\t{description: \"End Date (Ascending)\", sortMode: SORT_MODES.END_ASCENDING}\n]","import { denormalize, schema } from 'normalizr';\nimport { uuidv4 } from '../methods/utils/utils';\n\n// schedule schema\nexport const scheduleSchema = new schema.Entity(\n  // key\n  'schedules',\n  // definition\n  {\n    //condition: conditionSchema\n  },\n  // options\n  {\n    idAttribute: (value, parent, key) => {\n      return value._id.$oid\n    },\n\n    // processStrategy\n    processStrategy: (value, parent, key) => {\n      return {\n        _id: {\n          $oid: value._id.$oid ? value._id.$oid : null\n        },\n        id: value._id.$oid ? value._id.$oid : null,\n        name: value.name ? value.name : '',\n\n        days_on: value.days_on ? value.days_on : {\n          friday: false,\n          monday: false,\n          saturday: false,\n          sunday: false,\n          thursday: false,\n          tuesday: false,\n          wednesday: false\n        },\n\n        interval_on:  value.interval_on ? value.interval_on : false,\n        time_interval: value.time_interval ? value.time_interval : null,\n        map_id: value.map_id ? value.map_id : null,\n\n        schedule_on: value.schedule_on ? value.schedule_on : false,\n        start_time: value.start_time ? value.start_time : null,\n\n        stop_time_on: value.stop_time_on ? value.stop_time_on : false,\n        stop_time: value.stop_time ? value.stop_time : null,\n\n        task_id: value.task_id ? value.task_id : null,\n      };\n    }\n  },\n\n);\n\n// schema for list of schedules\nexport const schedulesSchema = [scheduleSchema]\n","// import external dependencies\nimport React, {useState} from 'react';\nimport PropTypes from 'prop-types';\n\n// import styles\nimport * as styled from './button_group.style';\n\nconst ButtonGroup = props => {\n  const { ...rest } = props;\n  // Declare a new state variable, which we'll call \"count\"\n\n\n  const {\n\tContainer,\n\tcontainerProps,\n\tButtonView,\n\tbuttonViewCss,\n\tbuttonViewSelectedCss,\n\tbuttonViewProps,\n\tButton,\n\tbuttonProps,\n\tComponent,\n\tbuttons,\n\tonPress,\n\tselectedIndex,\n\tselectedIndexes,\n\tselectMultiple,\n\tcontainerStyle,\n\tcontainerCss,\n\tinnerBorderStyle,\n\tlastBorderStyle,\n\tbuttonStyle,\n\tbuttonCss,\n\ttextStyle,\n\tselectedTextStyle,\n\tselectedButtonStyle,\n\tunderlayColor,\n\tactiveOpacity,\n\tonHideUnderlay,\n\tonShowUnderlay,\n\tsetOpacityTo,\n\tdisabled,\n\tdisabledStyle,\n\tdisabledTextStyle,\n\tdisabledSelectedStyle,\n\tdisabledSelectedTextStyle,\n\n\thasError,\n\t...attributes\n  } = rest;\n\n  const buttonsLength = buttons.length\n\n  return (\n\t  <Container\n          {...containerProps}\n\t\t  css={containerCss}\n\t\t  hasError={hasError}\n\t  >\n\t\t{buttons.map((button, i, arr) => {\n\t\t  const isSelected = selectedIndex === i || selectedIndexes.includes(i);\n\t\t  const isDisabled =\n\t\t\t  disabled === true ||\n\t\t\t  (Array.isArray(disabled) && disabled.includes(i));\n\n\t\t  const isLast = i === buttonsLength - 1 // true if the current button is the last element, useful for styling\n\n\t\t  return (\n\t\t\t  <div\n\t\t\t\t  key={i}\n\t\t\t\t  style={{}}\n\t\t\t  >\n\t\t\t\t<Button\n\t\t\t\t\t{...buttonProps}\n\t\t\t\t\tisLast={isLast}\n\t\t\t\t\tactiveOpacity={activeOpacity}\n\t\t\t\t\tsetOpacityTo={setOpacityTo}\n\t\t\t\t\tunderlayColor={underlayColor}\n\t\t\t\t\tdisabled={isDisabled}\n\t\t\t\t\ttype={\"button\"}\n\t\t\t\t\thasError={hasError}\n\t\t\t\t\tschema={props.schema}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t  if (selectMultiple) {\n\t\t\t\t\t\tif (selectedIndexes.includes(i)) {\n\t\t\t\t\t\t  onPress(selectedIndexes.filter(index => index !== i));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t  onPress([...selectedIndexes, i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t  } else {\n\t\t\t\t\t\tonPress(i);\n\t\t\t\t\t  }\n\t\t\t\t\t}}\n\t\t\t\t\tstyle={{}}\n\t\t\t\t\tcss={buttonCss}\n\t\t\t\t>\n\t\t\t\t  <ButtonView\n\t\t\t\t\t  {...buttonViewProps}\n\t\t\t\t\t  isLast={isLast}\n\t\t\t\t\t  isSelected={isSelected}\n\t\t\t\t\t  style={{}}\n\t\t\t\t\t  index={i}\n\t\t\t\t\t  arr={arr}\n\t\t\t\t\t  hasError={hasError}\n\t\t\t\t\t  css={buttonViewCss}\n\t\t\t\t\t  selectedCss={buttonViewSelectedCss}\n\n\n\t\t\t\t  >\n\t\t\t\t\t{button.element ? (\n\t\t\t\t\t\t<button.element />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tstyle={{}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t  {button}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t  </ButtonView>\n\t\t\t\t</Button>\n\t\t\t  </div>\n\t\t  );\n\t\t})}\n\t  </Container>\n  );\n}\n\n// Specifies propTypes\nButtonGroup.propTypes = {\n  button: PropTypes.object,\n  Component: PropTypes.elementType,\n  onPress: PropTypes.func,\n  buttons: PropTypes.array,\n  containerStyle: PropTypes.object,\n  textStyle: PropTypes.object,\n  selectedTextStyle: PropTypes.object,\n  selectedButtonStyle: PropTypes.object,\n  underlayColor: PropTypes.string,\n  selectedIndex: PropTypes.number,\n  selectedIndexes: PropTypes.arrayOf(PropTypes.number),\n  activeOpacity: PropTypes.number,\n  onHideUnderlay: PropTypes.func,\n  onShowUnderlay: PropTypes.func,\n  setOpacityTo: PropTypes.func,\n  innerBorderStyle: PropTypes.shape({\n\tcolor: PropTypes.string,\n\twidth: PropTypes.number,\n  }),\n  lastBorderStyle: PropTypes.oneOfType([\n\tPropTypes.object,\n\tPropTypes.func,\n  ]),\n  buttonStyle: PropTypes.object,\n  selectMultiple: PropTypes.bool,\n  theme: PropTypes.object,\n  disabled: PropTypes.oneOfType([\n\tPropTypes.bool,\n\tPropTypes.arrayOf(PropTypes.number),\n  ]),\n  disabledStyle: PropTypes.object,\n  disabledTextStyle: PropTypes.object,\n  disabledSelectedStyle: PropTypes.object,\n  disabledSelectedTextStyle: PropTypes.object,\n};\n\n// Specifies the default values for props:\nButtonGroup.defaultProps = {\n  selectedIndex: null,\n  hasError: false,\n\n  selectedIndexes: [],\n  selectMultiple: false,\n  disabled: false,\n  Component: \"div\",\n  onPress: () => null,\n  onShowUnderlay: () => {},\n  Container: styled.Container,\n  //Container={<div/>}\n  ButtonView: styled.ButtonView,\n  Button: styled.Button,\n};\n\nexport { ButtonGroup };\n\n\nexport default ButtonGroup;\n","import styled, {css} from \"styled-components\"\nimport {bodyStyle, containerLayout, textSpanStyle} from \"../../../../common_css/layout\";\n\nexport const Container = styled.div`\n  //padding: 1rem;\n  //background: green;\n  ${containerLayout};\n  ${bodyStyle};\n  overflow-y: auto;\n  overflow-x: hidden;\n`\n\nexport const RowTitles = styled.div`\n  display: flex;\n  align-self: stretch;\n  background: ${props => props.theme.bg.tertiary};\n  padding: 1rem;\n  justify-content: space-between;\n  //border: 1px solid blueviolet;\n`\n\nexport const cellCss = css`\n  //border: 1px solid deeppink;\n  flex: 1;\n  display: flex;\n  justify-content: flex-start;\n`\n\n\n\nexport const Filler = styled.div`\n  //margin: auto;\n  //width: 1.75rem;\n  ${cellCss};\n  flex: .5;\n`\n\n\nexport const IndexTitle = styled.span`\n  //flex: 1;\n  ${cellCss};\n`\n\nexport const NameTitle = styled.span`\n  ${cellCss};\n`\n\nexport const StatusMessageTitle = styled.span`\n  ${cellCss};\n  \n`\n\nexport const StatusIconTitle = styled.span`\n\n`","import styled, { css } from \"styled-components\"\nimport {textSpanStyle} from \"../../../../common_css/layout\";\nimport {commonClickableIcon, commonIcon, iconButtonCss, overflowTextCss} from \"../../../../common_css/common_css\";\n\nexport const Container = styled.div`\n\talign-self: stretch;\n\t//background: darkcyan;\n\t//height: 3rem;\n\tmin-height: 4rem;\n\tmax-height: 4rem;\n\tdisplay: flex;\n\talign-items: center;\n  \n\t//border: 1px solid black;\n  justify-content: space-around;\n\n  border-bottom: 1px solid ${props => props.theme.bg.tertiary};\n  \n  padding: 1rem;\n  \n`\n\nexport const ErrorContainer = styled.div`\n\n`\n\nexport const ErrorTooltipContainerComponent = styled.div`\n\tposition: relative;\n`\n\nexport const Index = styled.span`\n\t//flex: 1;\n  ${textSpanStyle};\n  margin-right: 1rem;\n`\n\nexport const NameContainer = styled.div`\n\t//flex: 1;\n  flex: 1;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  //background: darkred;\n`\n\nexport const Name = styled.span`\n  //flex: 1;\n  ${textSpanStyle};\n`\n\nexport const ColumnWrapper = styled.div`\nflex: 1;\n  display: flex;\n  justify-content: space-between;\n  overflow: hidden;\n`\n\nexport const StatusContainer = styled.div`\n\tflex: 1;\n  overflow: hidden;\n  //background: blueviolet;\n  //border: 1px solid deeppink;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  //padding-right: 1rem;\n`\n\nexport const TooltipContainer = styled.div`\n\tposition: relative;\n`\n\nexport const StatusMessage = styled.span`\n  margin-right: 2rem;\n\t${overflowTextCss};\n`\n\nexport const StatusIcon = styled.i`\n\t${commonIcon};\n`\n\nexport const EditButton = styled.button`\n\t${iconButtonCss};\n\t${commonClickableIcon};\n  \tfont-size: 1.75rem;\n  //background: forestgreen;\n`\n\nexport const cellCss = css`\n  //padding: 5p;\n  //box-sizing: border-box;\n  width: 50%;\n  margin: 0 1rem;\n`\n\nexport const rowCss = css`\n\tmargin-bottom: .5rem;\n`\n\nexport const ListContainer = styled.ul`\n\tmargin: 0;\n  padding: 0;\n  list-style-type: circle;\n`\n\nexport const InsideTooltipContainer = styled.div`\n\t// display: flex;\n  // flex-direction: column;\n  // align-items: stretch;\n  max-width: 20rem\n`\n\nexport const ItemContainer = styled.li`\n\tdisplay: flex;\n  \tjustify-content: space-between;\n  margin: 0;\n  padding: 0;\n  list-style-type: circle;\n  ${rowCss};\n`\n\n\n\nexport const ErrorHeader = styled.div`\n\tdisplay: flex;\n  justify-content: space-between;\n  border-bottom: 1px solid whitesmoke;\n  \n  ${rowCss};\n`\n\nexport const ErrorLabel = styled.span`\n  ${cellCss};\n`\n\nexport const ErrorKey = styled.span`\n\t//margin-right: 2rem;\n  \n  ${cellCss};\n`\n\n\n\n\nexport const ErrorColumn = styled.div`\n\tdisplay: flex;\n  \n  align-items: stretch;\n  flex-direction: column;\n  ${cellCss};\n`\n\nexport const ErrorValue = styled.span`\n  \n  \n\n`","import React, {useEffect, useState, useContext } from 'react'\n\n// components external\nimport MoonLoader from \"react-spinners/MoonLoader\"\nimport PulseLoader from \"react-spinners/PulseLoader\"\n\n// components internal\nimport Button from \"../../button/button\"\nimport ErrorTooltip from \"../../form/error_tooltip/error_tooltip\"\n\n// constants\nimport {FORM_STATUS} from \"../../../../constants/lot_contants\"\n\n// functions external\nimport PropTypes from 'prop-types'\n\n// styles\nimport * as styled from \"./status_list_item.style\"\n\n// utils\nimport {isEmpty, isObject} from \"../../../../methods/utils/object_utils\"\nimport {getMessageFromError} from \"../../../../methods/utils/form_utils\"\nimport { ThemeContext } from 'styled-components'\n\nconst FADE_LOADER_COLORS = {\n\tred: \"#f01000\",\n\tyellow: \"#e3cc00\",\n\tgreen: \"#17e300\",\n\tgrey: \"#363636\"\n\n}\n\nconst StatusListItem = (props) => {\n\n\tconst {\n\t\ttitle,\n\t\terrors,\n\t\twarnings,\n\t\tresourceCode,\n\t\tresourceMessage,\n\t\tvalidationCode,\n\t\tvalidationMessage,\n\t\tonEditClick,\n\t\titem,\n\t\tindex,\n\t\tshowTopBorder,\n\t\tshowBottomBorer,\n\t\tcreated,\n\t\tonCreateClick,\n\t\tdisplayNames\n\t} = props\n\n\tconst themeContext = useContext(ThemeContext)\n\n\tconst [mappedErrors, setMappedErrors] = useState({})\n\tconst [hasErrors, setHasErrors] = useState(false)\n\tconst [mappedWarnings, setMappedWarnings] = useState({})\n\tconst [hasWarnings, setHasWarnings] = useState(false)\n\n\tuseEffect(() => {\n\t\tlet tempMappedErrors = {}\n\n\t\tObject.keys(errors).forEach((currKey) => {\n\t\t\tlet tempCurrKey = currKey\n\t\t\tlet currErrCopy = errors[currKey]\n\n\t\t\twhile(isObject(currErrCopy)) {\n\t\t\t\ttempCurrKey = Object.keys(currErrCopy)[0]\n\t\t\t\tcurrErrCopy = currErrCopy[tempCurrKey]\n\t\t\t}\n\n\t\t\tif(Object.keys(displayNames).includes(tempCurrKey)) {\n\t\t\t\ttempCurrKey = displayNames[tempCurrKey]\n\t\t\t}\n\n\t\t\ttempMappedErrors[tempCurrKey] = [getMessageFromError(currErrCopy)]\n\t\t})\n\n\t\tsetMappedErrors(tempMappedErrors)\n\t\tsetHasErrors(!isEmpty(tempMappedErrors))\n\n\t}, [errors])\n\n\tuseEffect(() => {\n\t\t// setMappedErrors(\n\t\tlet tempMappedWarnings = {}\n\n\t\tObject.keys(warnings).forEach((currKey) => {\n\t\t\tlet tempCurrKey = currKey\n\t\t\tlet currErrCopy = warnings[currKey]\n\n\t\t\twhile(isObject(currErrCopy)) {\n\t\t\t\ttempCurrKey = Object.keys(currErrCopy)[0]\n\t\t\t\tcurrErrCopy = currErrCopy[tempCurrKey]\n\t\t\t}\n\n\t\t\tif(Object.keys(displayNames).includes(tempCurrKey)) {\n\t\t\t\ttempCurrKey = displayNames[tempCurrKey]\n\t\t\t}\n\n\t\t\ttempMappedWarnings[tempCurrKey] = [getMessageFromError(currErrCopy)]\n\t\t})\n\n\t\tsetMappedWarnings(tempMappedWarnings)\n\t\tsetHasWarnings(!isEmpty(tempMappedWarnings))\n\n\t}, [warnings])\n\n\tconst submitDisabled = (validationCode !== FORM_STATUS.VALIDATION_SUCCESS) || (resourceCode === FORM_STATUS.CREATE_SUCCESS)\n\n\tconst renderErrorTooltip = (mappedErrors) => {\n\n\t\treturn(\n\t\t\t<styled.InsideTooltipContainer>\n\n\t\t\t\t<styled.ErrorHeader>\n\t\t\t\t\t<styled.ErrorLabel>Field Name</styled.ErrorLabel>\n\t\t\t\t\t<styled.ErrorLabel>Description</styled.ErrorLabel>\n\t\t\t\t</styled.ErrorHeader>\n\n\t\t\t\t<styled.ListContainer>\n\t\t\t\t{Object.entries(mappedErrors).map((currErr, currErrIndex) => {\n\t\t\t\t\tconst [ currKey, currVal ] = currErr\n\n\t\t\t\t\treturn(\n\t\t\t\t\t\t<styled.ItemContainer key={currErrIndex}>\n\t\t\t\t\t\t\t<styled.ErrorKey>{currKey}</styled.ErrorKey>\n\t\t\t\t\t\t\t<styled.ErrorColumn>\n\t\t\t\t\t\t\t{currVal.map((currItem, currItemIndex) => {\n\t\t\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t\t\t<styled.ErrorValue key={currItemIndex}>\n\t\t\t\t\t\t\t\t\t\t{currItem}\n\t\t\t\t\t\t\t\t\t</styled.ErrorValue>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</styled.ErrorColumn>\n\t\t\t\t\t\t</styled.ItemContainer>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t\t</styled.ListContainer>\n\t\t\t</styled.InsideTooltipContainer>\n\t\t)\n\n\t}\n\n\treturn (\n\t\t<styled.Container\n\t\t\t// onClick={() => onEditClick(item)}\n\t\t\tshowTopBorder={showTopBorder}\n\t\t\tshowBottomBorer={showBottomBorer}\n\t\t>\n\t\t\t<styled.NameContainer>\n\t\t\t\t<styled.Index>{index + 1}.</styled.Index>\n\t\t\t\t<styled.Name>{title}</styled.Name>\n\t\t\t</styled.NameContainer>\n\n\t\t\t<styled.StatusContainer>\n\t\t\t\t<styled.StatusMessage>{validationMessage}</styled.StatusMessage>\n\n\t\t\t\t{/* icon switch/case */}\n\t\t\t\t{\n\t\t\t\t\t{\n\t\t\t\t\t\t[FORM_STATUS.VALIDATION_START]:\n\t\t\t\t\t\t\t<MoonLoader\n\t\t\t\t\t\t\t\tloading={true}\n\t\t\t\t\t\t\t\tcolor={FADE_LOADER_COLORS.yellow}\n\t\t\t\t\t\t\t\tsize={20}\n\t\t\t\t\t\t\t/>,\n\n\t\t\t\t\t\t[FORM_STATUS.VALIDATION_SUCCESS]:\n\t\t\t\t\t\t\t<styled.StatusIcon\n\t\t\t\t\t\t\t\tclassName={\"fas fa-check\"}\n\t\t\t\t\t\t\t\tcolor={FADE_LOADER_COLORS.green}\n\t\t\t\t\t\t\t/>,\n\n\t\t\t\t\t\t[FORM_STATUS.VALIDATION_ERROR]:\n\t\t\t\t\t\t\t<ErrorTooltip\n\t\t\t\t\t\t\t\tvisible={true}\n\t\t\t\t\t\t\t\tcolor={themeContext.bad}\n\t\t\t\t\t\t\t\t// text={validationMessage}\n\t\t\t\t\t\t\t\ttooltip={renderErrorTooltip(mappedErrors)}\n\t\t\t\t\t\t\t\tContainerComponent={styled.TooltipContainer}\n\t\t\t\t\t\t\t/>,\n\t\t\t\t\t\t[FORM_STATUS.WAITING]:\n\t\t\t\t\t\t\t<PulseLoader\n\t\t\t\t\t\t\t\tloading={true}\n\t\t\t\t\t\t\t\tcolor={FADE_LOADER_COLORS.grey}\n\t\t\t\t\t\t\t\tsize={10}\n\t\t\t\t\t\t\t/>,\n\t\t\t\t\t\t[FORM_STATUS.CANCELLED]:\n\t\t\t\t\t\t\t<ErrorTooltip\n\t\t\t\t\t\t\t\tvisible={true}\n\t\t\t\t\t\t\t\ttext={validationMessage}\n\t\t\t\t\t\t\t\tContainerComponent={styled.TooltipContainer}\n\t\t\t\t\t\t\t/>,\n\t\t\t\t\t}[validationCode] ||\n\t\t\t\t\t<PulseLoader\n\t\t\t\t\t\tloading={true}\n\t\t\t\t\t\tcolor={FADE_LOADER_COLORS.grey}\n\t\t\t\t\t\tsize={10}\n\t\t\t\t\t/>\n\t\t\t\t}\n\n\t\t\t\t{hasWarnings &&\n\t\t\t\t<ErrorTooltip\n\t\t\t\t\tvisible={true}\n\t\t\t\t\tcontainerStyle={{\n\t\t\t\t\t\tmarginLeft: \".5rem\"\n\t\t\t\t\t}}\n\t\t\t\t\tcolor={\"yellow\"}\n\t\t\t\t\ttooltip={renderErrorTooltip(mappedWarnings)}\n\t\t\t\t\tContainerComponent={styled.TooltipContainer}\n\t\t\t\t/>\n\t\t\t\t}\n\t\t\t</styled.StatusContainer>\n\n\t\t\t<styled.StatusContainer style={{flex: 0.5}}>\n\t\t\t\t<Button\n\t\t\t\t\ttype={\"button\"}\n\t\t\t\t\tlabel={\"Create\"}\n\t\t\t\t\tschema={\"ok\"}\n\t\t\t\t\tdisabled={submitDisabled}\n\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\tonCreateClick(index)\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</styled.StatusContainer>\n\n\t\t\t<styled.ColumnWrapper>\n\t\t\t\t<styled.StatusContainer>\n\t\t\t\t\t<styled.StatusMessage>{resourceMessage}</styled.StatusMessage>\n\n\t\t\t\t\t{/* icon switch/case */}\n\t\t\t\t\t{\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t[FORM_STATUS.CREATE_START]:\n\t\t\t\t\t\t\t\t<MoonLoader\n\t\t\t\t\t\t\t\t\tloading={true}\n\t\t\t\t\t\t\t\t\tcolor={FADE_LOADER_COLORS.yellow}\n\t\t\t\t\t\t\t\t\tsize={20}\n\t\t\t\t\t\t\t\t/>,\n\n\t\t\t\t\t\t\t[FORM_STATUS.CREATE_SUCCESS]:\n\t\t\t\t\t\t\t\t<styled.StatusIcon\n\t\t\t\t\t\t\t\t\tclassName={\"fas fa-check\"}\n\t\t\t\t\t\t\t\t\tcolor={FADE_LOADER_COLORS.green}\n\t\t\t\t\t\t\t\t/>,\n\n\t\t\t\t\t\t\t[FORM_STATUS.CREATE_ERROR]:\n\t\t\t\t\t\t\t\t<ErrorTooltip\n\t\t\t\t\t\t\t\t\tvisible={true}\n\t\t\t\t\t\t\t\t\ttext={resourceMessage}\n\t\t\t\t\t\t\t\t\tContainerComponent={styled.TooltipContainer}\n\t\t\t\t\t\t\t\t/>,\n\n\t\t\t\t\t\t\t[FORM_STATUS.WAITING]:\n\t\t\t\t\t\t\t\t<PulseLoader\n\t\t\t\t\t\t\t\t\tloading={true}\n\t\t\t\t\t\t\t\t\tcolor={FADE_LOADER_COLORS.grey}\n\t\t\t\t\t\t\t\t\tsize={10}\n\t\t\t\t\t\t\t\t/>,\n\n\t\t\t\t\t\t\t[FORM_STATUS.CANCELLED]:\n\t\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t}[resourceCode] ||\n\t\t\t\t\t\tnull\n\t\t\t\t\t}\n\t\t\t\t</styled.StatusContainer>\n\n\t\t\t\t<styled.EditButton\n\t\t\t\t\tcolor={themeContext.bg.quaternary}\n\t\t\t\t\ttype={\"button\"}\n\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\te.preventDefault()\n\t\t\t\t\t\te.stopPropagation()\n\t\t\t\t\t\tonEditClick(item)\n\t\t\t\t\t}}\n\t\t\t\t\tclassName=\"fas fa-edit\"\n\t\t\t\t/>\n\t\t\t</styled.ColumnWrapper>\n\n\t\t</styled.Container>\n\t)\n}\n\nStatusListItem.propTypes = {\n\tshowTopBorder: PropTypes.bool,\n\tshowBottomBorer: PropTypes.bool,\n\ttitle: PropTypes.string,\n\terrors: PropTypes.object,\n\twarnings: PropTypes.object,\n\tresourceCode: PropTypes.number,\n\tresourceMessage: PropTypes.string,\n\tvalidationCode: PropTypes.number,\n\tvalidationMessage: PropTypes.string,\n\tonEditClick: PropTypes.func,\n\titem: PropTypes.object,\n\tindex: PropTypes.number,\n\tcreated: PropTypes.bool,\n\tonCreateClick: PropTypes.func,\n}\n\nStatusListItem.defaultProps = {\n\tshowTopBorder: true,\n\tshowBottomBorer: true,\n\ttitle: \"\",\n\terrors: {},\n\twarnings: {},\n\tresourceCode: 0,\n\tresourceMessage: \"\",\n\tvalidationCode: 0,\n\tvalidationMessage: \"\",\n\tonEditClick: () => {},\n\titem: {},\n\tindex: 0,\n\tcreated: false,\n\tonCreateClick: () => {}\n}\n\nexport default StatusListItem\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport * as styled from \"./status_list_body.style\"\nimport StatusListItem from \"../status_list_item/status_list_item\";\n\nconst StatusListBody = (props) => {\n\n\tconst {\n\t\tdata,\n\t\tonItemClick,\n\t\tonCreateClick,\n\t\tdisplayNames,\n\t} = props\n\n\tconst renderData = () => {\n\t\treturn data.map((currDatem, currIndex) => {\n\n\t\t\tconst {\n\t\t\t\ttitle,\n\t\t\t\terrors,\n\t\t\t\tvalidationStatus,\n\t\t\t\tresourceStatus,\n\t\t\t\twarnings,\n\t\t\t\tcreated\n\t\t\t} = currDatem || {}\n\n\t\t\tconst {\n\t\t\t\tmessage: validationMessage,\n\t\t\t\tcode: validationCode\n\t\t\t} = validationStatus || {}\n\n\t\t\tconst {\n\t\t\t\tmessage: resourceMessage,\n\t\t\t\tcode: resourceCode\n\t\t\t} = resourceStatus || {}\n\n\t\t\treturn(\n\t\t\t\t<StatusListItem\n\t\t\t\t\tdisplayNames={displayNames}\n\t\t\t\t\tonCreateClick={onCreateClick}\n\t\t\t\t\tcreated={created}\n\t\t\t\t\tkey={currIndex}\n\t\t\t\t\tindex={currIndex}\n\t\t\t\t\titem={currDatem}\n\t\t\t\t\tonEditClick={onItemClick}\n\t\t\t\t\ttitle={title}\n\t\t\t\t\terrors={errors}\n\t\t\t\t\twarnings={warnings}\n\t\t\t\t\tvalidationMessage={validationMessage}\n\t\t\t\t\tvalidationCode={validationCode}\n\t\t\t\t\tresourceMessage={resourceMessage}\n\t\t\t\t\tresourceCode={resourceCode}\n\t\t\t\t/>\n\t\t\t)\n\t\t})\n\t}\n\treturn (\n\t\t<styled.Container>\n\t\t\t<styled.RowTitles>\n\t\t\t\t{/*<styled.IndexTitle></styled.IndexTitle>*/}\n\t\t\t\t<styled.NameTitle style={{fontWeight: 'bold'}}>Lot Name</styled.NameTitle>\n\t\t\t\t<styled.StatusMessageTitle style={{fontWeight: 'bold'}}>Validation Status</styled.StatusMessageTitle>\n\t\t\t\t<styled.Filler/>\n\t\t\t\t<styled.StatusMessageTitle style={{fontWeight: 'bold'}}>Creation Status</styled.StatusMessageTitle>\n\n\n\t\t\t</styled.RowTitles>\n\n\t\t\t{renderData()}\n\t\t</styled.Container>\n\t);\n};\n\nStatusListBody.propTypes = {\n\n};\n\nexport default StatusListBody;\n","import styled, {css} from \"styled-components\"\nimport {columnRowLayout, headerStyle} from \"../../../../common_css/layout\";\n\nexport const Container = styled.div`\n  \t${columnRowLayout};\n  \t${headerStyle};\n  \tmin-height: 5rem;\n  \tdisplay: flex;\n  \tjustify-content: center;\n  \talign-items: center;\n`\n\nexport const CloseIcon = styled.i`\n    font-size: 1.4rem;\n    margin: 2rem;\n    color: ${props => props.theme.bg.quaternary};\n    cursor: pointer;\n\t\n`\n\nexport const Title = styled.h1`\n\tfont-size: ${props => props.theme.fontSize.sz2};\n\tfont-weight: ${props => props.theme.fontWeight.bold};\n\tfont-family: ${props => props.theme.font.primary};\n\tcolor: ${props => props.theme.bg.octonary};\n\tflex-grow: 1;\n\ttext-align: center;\n`","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport * as styled from \"./status_list_header.style\"\n\nconst StatusListHeader = props => {\n\treturn (\n\t\t<styled.Container>\n\t\t\t<styled.Title>Lot Creation Status</styled.Title>\n\t\t\t<styled.CloseIcon className=\"fa fa-times\" aria-hidden=\"true\" onClick={props.onCanceleClick}/>\n\t\t</styled.Container>\n\t);\n};\n\nStatusListHeader.propTypes = {\n\t\n};\n\nexport default StatusListHeader;\n","import styled, {css} from \"styled-components\"\nimport {columnRowLayout, footerStyle} from \"../../../../common_css/layout\";\n\nexport const Container = styled.div`\n  ${columnRowLayout};\n  ${footerStyle};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 5rem;\n`","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport * as styled from \"./status_list_footer.style\"\nimport Button from \"../../button/button\";\n\nconst StatusListFooter = (props) => {\n\n\tconst {\n\t\tonCloseClick,\n\t\tonShowMapperClick,\n\t\tonCanceleClick,\n\t\tonCreateAllClick\n\t} = props\n\n\treturn (\n\t\t<styled.Container>\n\t\t\t<Button\n\t\t\t\ttype={\"button\"}\n\t\t\t\tlabel={\"Create All\"}\n\t\t\t\tschema={\"lots\"}\n\t\t\t\tonClick={onCreateAllClick}\n\t\t\t/>\n\n\t\t\t<Button\n\t\t\t\ttype={\"button\"}\n\t\t\t\tschema={\"lots\"}\n\t\t\t\tlabel={\"Close\"}\n\t\t\t\tonClick={onCanceleClick}\n\t\t\t/>\n\t\t</styled.Container>\n\t);\n};\n\nStatusListFooter.propTypes = {\n\t\n};\n\nexport default StatusListFooter;\n","import styled, {css} from \"styled-components\"\nimport {containerLayout} from \"../../../common_css/layout\";\n\nexport const Container = styled.div`\n\t${containerLayout};\n  height: 90vh;\n  border-radius: 1rem;\n  overflow: hidden;\n`","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport StatusListBody from \"./status_list_body/status_list_body\"\nimport StatusListHeader from \"./status_list_header/status_list_header\"\nimport StatusListFooter from \"./status_list_footer/status_list_footer\"\n\nimport * as styled from \"./status_list.style\"\n\nconst StatusList = (props) => {\n\n\tconst {\n\t\tdata,\n\t\tonItemClick,\n\t\tonCloseClick,\n\t\tonCanceleClick,\n\t\tonShowMapperClick,\n\t\tonCreateClick,\n\t\tonCreateAllClick,\n\t\tdisplayNames\n\t} = props\n\n\treturn (\n\t\t<styled.Container>\n\t\t\t<StatusListHeader\n\t\t\t\tonCanceleClick={onCanceleClick}\n\t\t\t/>\n\n\t\t\t<StatusListBody\n\t\t\t\tdisplayNames={displayNames}\n\t\t\t\tonItemClick={onItemClick}\n\t\t\t\tdata={data}\n\t\t\t\tonCreateClick={onCreateClick}\n\t\t\t/>\n\n\t\t\t<StatusListFooter\n\t\t\t\tonCanceleClick={onCanceleClick}\n\t\t\t\tonCloseClick={onCloseClick}\n\t\t\t\tonShowMapperClick={onShowMapperClick}\n\t\t\t\tonCreateAllClick={onCreateAllClick}\n\t\t\t/>\n\t\t</styled.Container>\n\t)\n}\n\nStatusList.propTypes = {\n\n}\n\nexport default StatusList\n","import styled, {css} from \"styled-components\"\nimport {commonClickableIcon, disabledButtonCss, iconButtonCss, newGlow, trapezoidCss} from \"../../../common_css/common_css\";\nimport {containerLayout} from \"../../../common_css/layout\";\nimport theme from \"../../../theme\";\nimport { LightenDarkenColor } from '../../../methods/utils/color_utils'\n\nconst scrollCss = css`\n::-webkit-scrollbar {\n        width: 10px;\n        height: 10px;\n        margin: 1rem;\n        background: transparent;\n    }\n\n    /* Track */\n    ::-webkit-scrollbar-track {\n        background: rgba(175,175,175,0.75);\n    }\n\n    ::-webkit-scrollbar-track:hover {\n        background: rgba(175,175,175,0.6);\n    }\n\n    /* Handle */\n    ::-webkit-scrollbar-thumb {\n        background: #27272b;\n        border-radius: .5rem;\n    }\n\n    /* Handle on hover */\n    ::-webkit-scrollbar-thumb:hover {\n        background: #555;\n\n    }\n`\n\nexport const Container = styled.div`\n    display: flex;\n    ${containerLayout};\n    align-self: center;\n    overflow: hidden;\n    border-radius: 1rem;\n    flex-direction: column;\n    z-index: 5000;\n    overflow: hidden;\n    height: 90vh;\n    width: 90vw;\n    background: ${props => props.theme.bg.primary};\n`\n\nexport const Header = styled.div`\n    background: ${props => props.theme.bg.secondary};\n    box-shadow: 0px 0px 6px 1px rgba(0,0,0,0.2);\n    align-items: center;\n    display: flex;\n    flex-direction: row;\n    padding: 1rem;\n`\n\nexport const Body = styled.div`\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n    overflow: hidden;\n    // padding: 1rem;\n`\n\nexport const Footer = styled.div`\n    background: ${props => props.theme.bg.secondary};\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    box-shadow: 0px 0px 6px 1px rgba(0,0,0,0.2);\n    padding: 1rem;\n`\n\nexport const Title = styled.div`\n\tflex: 2;\n\theight: 100%;\n\tmin-height: 100%;\n\tmargin: 0;\n\tpadding: 0;\n\ttext-align: center;\n\tdisplay: inline-flex;\n\tjustify-content: center;\n\talign-items: center;\n\tdisplay: flex;\n    flex-direction: column;\n    font-size: ${props => props.theme.fontSize.sz2};\n    font-weight: ${props => props.theme.fontWeight.bold};\n\t\n`\nexport const TitleText = styled.span`\n\n`\n\nexport const SectionBreak = styled.hr`\n    border-top: 2px solid ${props => props.theme.bg.secondary};\n    width: 100%;\n    margin: 0;\n    \n`\n\n\n\n\nexport const TableContainer = styled.div`\n    padding: 1rem;\n    overflow: auto;\n    flex: 1;\n\n    \n\n    ${scrollCss};\n\n    \n    \n`\nexport const Table = styled.div`\n    width: fit-content;\n    overflow: hidden;\n\tdisplay: flex;\n`\n\nexport const Column = styled.div`\n    flex-direction: column;\n    align-self:stretch;\n    flex: 1;\n    display: flex;\n    background: ${props => props.theme.bg.primary};\n    min-width: 13rem;\n    align-items: stretch;\n\n    // border-right: 1px solid ${props => props.theme.bg.quaternary};\n    // border-bottom: 1px solid ${props => props.theme.bg.quaternary};\n`\n\nexport const Row = styled.div`\n    align-self:stretch;\n    flex: 1;\n    display: flex;\n    border: 1px solid ${props => props.theme.bg.primary};\n`\n\nexport const cellCss = css`\n    \n`\n\nexport const FieldNameTab = styled.div`\n    position: relative;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 4rem;\n    min-height: 4rem;\n`\nexport const Trapezoid = styled.div`\n    position: absolute;\n    // transform: translate(-50%, -50%);\n    z-index: 0;\n    background: ${props => props.theme.bg.secondary};\n    ${trapezoidCss};\n    width: 94.5%;\n    height: 100%;\n    border: none;\n`\n\nexport const Receptacle = styled.div`\n    position: absolute;\n    bottom: 0;\n    // transform: translate(-50%, -50%);\n    width: 100%;\n    height: 50%;\n    background: ${props => props.theme.bg.tertiary};\n    padding: 0.2rem 0;\n`\n\nexport const CloseIcon = styled.i`\n    font-size: 1.4rem;\n    margin: 1rem;\n    color: ${props => props.theme.bg.quaternary};\n    cursor: pointer;\n`\n\nexport const ReceptacleInner = styled.div`\n    position: absolute;\n    // transform: translate(-50%, -50%);\n    width: 99%;\n    height: 90%;\n    bottom: 2px;\n    border-radius: 1.8rem;\n\n    ${props => props.filled ? `\n        background: ${props.theme.bg.primary};\n        box-shadow: 0 2px 4px 0px rgba(0, 0, 0, 0.3);\n        `\n        :\n        `\n        background: ${LightenDarkenColor(props.theme.bg.secondary, 10)};\n        box-shadow: inset 0 1px 4px 1px rgba(0, 0, 0, 0.1);\n        `\n    }\n    \n`\n\nexport const ItemContainer = styled.div`\n    overflow: hidden;\n    position: relative;\n\n    // border-left: 1px solid ${props => props.theme.bg.quaternary};\n    border-right: 1px solid ${props => props.theme.bg.quaternary};\n    // border-top: 1px solid ${props => props.theme.bg.quaternary};\n    border-bottom: 1px solid ${props => props.theme.bg.quaternary};\n    \n    text-align: center;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    \n    min-height: 2rem;\n    max-height: 2rem;\n    \n    \n    \n    \n    \n    background: ${props => props.selected && LightenDarkenColor(props.theme.fg.primary, 50)}\n`\n\nexport const Cell = styled.div`\n   \n    overflow: auto;\n    ::-webkit-scrollbar {\n        display: none;\n    }\n    border-radius: .5rem;\n    flex: 1;\n    align-self: stretch;\n    text-align: center;\n    padding: 0 .5rem;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`\n\nexport const ContentContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    overflow: hidden;\n    align-self: stretch;\n    padding: 1rem 0;\n    min-height: fit-content;\n    \n`\n\nexport const FieldNamesContainer = styled.div`\n    overflow-x: auto;\n    min-height: fit-content;\n    padding: 1rem;\n    align-self: stretch;\n    ${scrollCss};\n    margin-bottom: 1rem;\n`\n\nexport const SectionTitle = styled.span`\n    margin: 0;\n    padding: 0;\n    text-align: center;\n    display: inline-flex;\n    justify-content: center;\n    align-items: center;\n    display: flex;\n    flex-direction: column;\n    font-size: ${props => props.theme.fontSize.sz2};\n    font-weight: ${props => props.theme.fontWeight.bold};\n    margin-bottom: 1rem;\n`\n\nexport const SectionDescription = styled.span`\n    margin: 0;\n    padding: 0;\n    text-align: center;\n    display: inline-flex;\n    justify-content: center;\n    align-items: center;\n    display: flex;\n    flex-direction: column;\n    font-size: ${props => props.theme.fontSize.sz4};\n    //margin-bottom: 1rem;\n    margin-top: 1rem;\n    margin: 0 1rem;\n`\n\nexport const FieldButton = styled.div`\n    background: ${props => props.disabled ? props.theme.bg.secondary : props.theme.bg.primary};\n    box-shadow: ${props => props.disabled ? 'none' : '0 2px 4px 0px rgba(0, 0, 0, 0.3)'};\n    margin: 0.5rem;\n    //padding: 1rem;\n    border-radius: 1.4rem;\n    min-width: fit-content;\n    display: flex;\n    flex-direction: column;\n    color: ${props => props.disabled ? props.theme.bg.quaternary : props.theme.bg.octonary};\n    overflow: hidden;\n    align-items: stretch;\n    pointer: grabbing;\n    height: 2.8rem;\n`\n\nexport const FieldName = styled.div`\n    font-size: ${props => props.theme.fontSize.sz3};\n    min-width: fit-content;\n    padding: .5rem 1rem;\n    pointer: grabbing;\n`\n\nexport const FieldDescription = styled.div`\n    font-size: ${props => props.theme.fontSize.sz5};\n    background: ${props => props.disabled ? \"pink\" : props.theme.bg.senary};\n    padding: .25rem;\n    display: inline-flex;\n    min-width: fit-content;\n    justify-content: center;\n    align-items: center;\n    color: ${props => props.theme.bg.secondary};\n    font-style: italic;\n`\n\n\n\n\n\nexport const SelectButton = styled.button`\n    ${iconButtonCss};\n    ${commonClickableIcon};\n    margin-right: .5rem;\n    font-size: 1.5rem;\n    color: ${props => props.color};\n    \n    &:hover {\n            \n    }\n    \n    &:active {\n    \n    }\n`\n\n\n\n\nexport const buttonViewCss = css`\n    color: ${props => props.theme.bg.quinary};\n    padding: 0;\n    margin: 0;\n    margin: 0 .25rem;\n    padding-left: .5rem;\n    padding-right: .5rem;\n    background: ${props => props.theme.bg.senary};\n  \n    &:hover {\n      cursor: pointer;\n    }\n`\n\n\nexport const buttonViewSelectedCss = css`\n    background: ${props => props.theme.bg.tertiary};\n    color: ${props => props.theme.bg.octonary};\n`\nexport const buttonCss = css`\n\tmargin: 0;\n\tpadding: 0;\n\t\n\t&:focus{\n\t}\n\t\n\t&:active{\n\t}\n\t\n\t&:hover{\n\t\tcursor: default;\n\t}\n\t\n`\n\nexport const buttonGroupContainerCss = css`\n\tdisplay: flex;\n\tflex-direction: row;\n\talign-self: center;\n\tpadding: 0;\n\tmargin: 0;\n\t\n`","import React, {useContext, useEffect, useRef, useState} from 'react'\n\n// components external\nimport {Container, Draggable} from \"react-smooth-dnd\";\n\n// components internal\nimport Button from \"../button/button\";\nimport Textbox from \"../textbox/textbox\";\nimport TextField from \"../form/text_field/text_field\";\nimport ContainerWrapper from \"../container_wrapper/container_wrapper\";\n\n// constants\nimport { FIELD_DATA_TYPES } from \"../../../constants/lot_contants\";\nimport {\n\tBASIC_FIELD_DEFAULTS,\n\tLOT_PRIMARY_FIELD_IDS,\n\tLOT_TEMPLATES_RESERVED_FIELD_NAMES\n} from \"../../../constants/form_constants\";\n\n// functions external\nimport PropTypes from \"prop-types\";\nimport set from \"lodash/set\";\nimport {ThemeContext} from \"styled-components\";\nimport {Formik} from \"formik\";\n\n// utils\nimport {immutableDelete, isArray} from \"../../../methods/utils/array_utils\";\nimport { templateMapperSchema } from \"../../../methods/utils/form_schemas\";\nimport {isObject} from \"../../../methods/utils/object_utils\";\nimport {isEqualCI} from \"../../../methods/utils/string_utils\";\n\n// style\nimport * as styled from './paste_mapper.style'\n\nconst PasteMapper = (props) => {\n\n\tconst {\n\t\tschema,\n\t\tonCancel,\n\t\tavailableFieldNames,\n\t\tvalues,\n\t\terrors,\n\t\ttouched,\n\t\tsetFieldValue,\n\t\tsetSelectedFieldNames,\n\t\tonPreviewClick,\n\t\tonCreateClick,\n\t\treset,\n\t\tresetForm,\n\t\thidden\n\t} = props\n\n\tconst {\n\t\ttable\n\t} = values || {}\n\n\tconst {\n\t\tselectedFieldNames\n\t} = values || {}\n\n\tuseEffect(() => {\n\t\tsetSelectedFieldNames(selectedFieldNames)\n\t}, [selectedFieldNames])\n\n\tuseEffect(() => {\n\t\tif(reset) resetForm()\n\t}, [reset])\n\n\n\n\tconst [fieldLabelsIndex, setFieldLabelsIndex] = useState()\n\tconst [fieldDirection, setFieldDirection] = useState(0)\n\t// const [selectedFieldNames, setSelectedFieldNames] = useState([])\n\tconst [usedAvailableFieldNames, setUsedAvailableFieldNames] = useState(availableFieldNames.map((junk) => false))\n\tconst [isRow, setIsRow] = useState(fieldDirection === 0)\n\n\tuseEffect(() => {\n\t\tsetIsRow(fieldDirection === 0)\n\t}, [fieldDirection])\n\n\tuseEffect(() => {\n\t\tlet tempFieldLabels = []\n\n\t\t// rows\n\t\tif(isRow) {\n\t\t\ttable.forEach((currCol, currColIndex) => {\n\t\t\t\tconst currFieldName = currCol[fieldLabelsIndex]\n\n\t\t\t\tlet payload = {\n\t\t\t\t\tfieldName: \"\",\n\t\t\t\t\tdataType: FIELD_DATA_TYPES.STRING\n\t\t\t\t}\n\n\t\t\t\tif(currFieldName) {\n\n\t\t\t\t\tpayload = {\n\t\t\t\t\t\tfieldName: currFieldName,\n\t\t\t\t\t\tdataType: FIELD_DATA_TYPES.STRING,\n\t\t\t\t\t\tdisplayName: currFieldName,\n\t\t\t\t\t}\n\n\t\t\t\t\tfor(const availableField of availableFieldNames) {\n\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\tfieldName: availableFieldName = \"\",\n\t\t\t\t\t\t\tdisplayName: availableDisplayName = \"\",\n\t\t\t\t\t\t} = availableField\n\n\t\t\t\t\t\tif(isEqualCI(currFieldName, availableDisplayName)) {\n\t\t\t\t\t\t\tpayload = {...availableField}\n\t\t\t\t\t\t\tbreak\t// quit looping\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\ttempFieldLabels.push(payload)\n\t\t\t})\n\t\t}\n\n\t\t// columns\n\t\telse {\n\n\t\t}\n\n\t\tsetFieldValue(\"selectedFieldNames\", tempFieldLabels)\n\n\t\t// setSelectedFieldNames(tempFieldLabels)\n\t}, [fieldLabelsIndex, fieldDirection])\n\n\tuseEffect(() => {\n\t\tlet tempUsedFieldNames = [...usedAvailableFieldNames]\n\t\tavailableFieldNames.forEach((currField, currIndex) => {\n\t\t\tconst {\n\t\t\t\tfieldName: currAvailableFieldName = \"\",\n\t\t\t\tdataType: currAvailableDataType = FIELD_DATA_TYPES.STRING,\n\t\t\t\tindex: currAvailableIndex,\n\t\t\t\tdisplayName: currAvailableDisplayName = \"\",\n\t\t\t} = currField || {}\n\n\n\t\t\ttempUsedFieldNames[currIndex] = false\n\t\t\tfor(const selectedField of selectedFieldNames) {\n\t\t\t\tconst {\n\t\t\t\t\tfieldName: currSelectedFieldName = \"\",\n\t\t\t\t\tdataType: currSelectedDataType = FIELD_DATA_TYPES.STRING,\n\t\t\t\t\tindex: currSelectedIndex,\n\t\t\t\t\tdisplayName: currSelectedDisplayName = \"\",\n\t\t\t\t} = selectedField || {}\n\n\t\t\t\tif(currAvailableDataType === FIELD_DATA_TYPES.DATE_RANGE) {\n\t\t\t\t\tif(currAvailableIndex === currSelectedIndex && isEqualCI(currSelectedDisplayName.trim(),currAvailableDisplayName.trim())) {\n\t\t\t\t\t\ttempUsedFieldNames[currIndex] = true\n\t\t\t\t\t\tbreak // no need to keep looping\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\telse {\n\t\t\t\t\tif(isEqualCI(currSelectedDisplayName.trim(), currAvailableDisplayName.trim())) {\n\t\t\t\t\t\ttempUsedFieldNames[currIndex] = true\n\t\t\t\t\t\tbreak // no need to keep looping\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\t// for(const availableField of availableFieldNames) {\n\t\t// \tconst {\n\t\t// \t\tdisplayName: availableDisplayName = \"\",\n\t\t// \t} = availableField\n\t\t//\n\t\t// \tif(isEqualCI(outputVal, availableDisplayName)) {\n\t\t// \t\tmappedOutputVal = {...availableField}\n\t\t// \t\tbreak\t// quit looping\n\t\t// \t}\n\t\t// }\n\n\t\tsetUsedAvailableFieldNames(tempUsedFieldNames)\n\t}, [availableFieldNames, selectedFieldNames])\n\n\tconst createPayload = () => {\n\t\tlet data = []\n\t\tlet templateValues = {}\n\n\t\ttable.forEach((currCol, currColIndex) => {\n\t\t\tcurrCol\n\t\t\t\t// if a row is being used for field names, filter out this row when creating payload\n\t\t\t\t.filter((currItem, currItemIndex) => {\n\t\t\t\t\tif((fieldLabelsIndex !== null) && (currItemIndex === fieldLabelsIndex)) return false\n\t\t\t\t\treturn true\n\t\t\t\t})\n\t\t\t\t.forEach((currItem, currItemIndex) => {\n\t\t\t\t\tlet destinationField = selectedFieldNames[currColIndex]\n\t\t\t\t\tlet tempDisplayName = destinationField?.displayName || \"\"\n\n\t\t\t\t\tfor(const availableField of availableFieldNames) {\n\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\tfieldName: currAvailableFieldName = \"\",\n\t\t\t\t\t\t\tdataType: currAvailableDataType = FIELD_DATA_TYPES.STRING,\n\t\t\t\t\t\t\tindex: currAvailableIndex,\n\t\t\t\t\t\t\tdisplayName: currAvailableDisplayName = \"\",\n\t\t\t\t\t\t\tfield\n\t\t\t\t\t\t} = availableField || {}\n\n\t\t\t\t\t\tif(isEqualCI(tempDisplayName.trim(), currAvailableDisplayName)) destinationField = {...availableField}\n\t\t\t\t\t}\n\n\t\t\t\t\tlet finalValue = currItem\n\n\t\t\t\t\tconst {\n\t\t\t\t\t\tdataType = FIELD_DATA_TYPES.STRING,\n\t\t\t\t\t\tindex,\n\t\t\t\t\t\tfieldPath,\n\t\t\t\t\t\tfieldName = `undefined field ${currColIndex}`,\n\t\t\t\t\t\t_id: fieldId\n\t\t\t\t\t} = destinationField || {}\n\n\t\t\t\t\t// check if field is from primary or secondary values\n\t\t\t\t\t// let isPrimaryValue = false\n\t\t\t\t\t// for(const primaryName in LOT_PRIMARY_FIELD_IDS) {\n\t\t\t\t\t// \tif(isEqualCI(fieldName, primaryName)) {\n\t\t\t\t\t// \t\tisPrimaryValue = true\n\t\t\t\t\t// \t}\n\t\t\t\t\t// }\n\n\t\t\t\t\tconst existingData = data[currItemIndex]\n\t\t\t\t\tconst {\n\t\t\t\t\t\t[fieldId]: currentFieldData\n\t\t\t\t\t} = existingData || {}\n\n\n\t\t\t\t\t/*\n\t\t\t\t\t* parse data\n\t\t\t\t\t* */\n\t\t\t\t\tif(dataType === FIELD_DATA_TYPES.DATE_RANGE) {\n\t\t\t\t\t\tconsole.log(\"date range field destinationField\",destinationField)\n\t\t\t\t\t\tlet parsedDate = new Date(currItem)\n\t\t\t\t\t\tif(isArray(currentFieldData)) {\n\t\t\t\t\t\t\tfinalValue = [...currentFieldData]\n\t\t\t\t\t\t\tfinalValue.splice(index, 0, parsedDate)\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tfinalValue = [parsedDate]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if(dataType === FIELD_DATA_TYPES.INTEGER) {\n\t\t\t\t\t\tfinalValue = parseInt(finalValue)\n\t\t\t\t\t\tif(!Number.isInteger(finalValue)) finalValue = BASIC_FIELD_DEFAULTS.NUMBER_FIELD\n\t\t\t\t\t}\n\n\t\t\t\t\tlet constructedPath = {}\n\t\t\t\t\t// if(isArray(fieldPath) && fieldPath.length > 0) {\n\t\t\t\t\t//\n\t\t\t\t\t// \t// finalValue = {\n\t\t\t\t\t// \t// \t[fieldPath[fieldPath.length - 1]]: {\n\t\t\t\t\t// \t// \t\t[fieldName]: finalValue\n\t\t\t\t\t// \t// \t}\n\t\t\t\t\t// \t// }\n\t\t\t\t\t//\n\t\t\t\t\t// \tfieldPath.forEach((currentPath, currPathIndex) => {\n\t\t\t\t\t// \t\t// if(currPathIndex === fieldPath.length - 1) return // skip last since it was done\n\t\t\t\t\t//\n\t\t\t\t\t// \t\tfinalValue = {[currentPath]: finalValue}\n\t\t\t\t\t// \t})\n\t\t\t\t\t// }\n\t\t\t\t\t// else {\n\t\t\t\t\t//\n\t\t\t\t\t// }\n\t\t\t\t\t// else{\n\t\t\t\t\t\tfinalValue = {[fieldId]: {\n\t\t\t\t\t\t\t...destinationField,\n\t\t\t\t\t\t\tvalue: finalValue\n\t\t\t\t\t\t}}\n\t\t\t\t\t// }\n\n\n\t\t\t\t\t// if(isPrimaryValue) {\n\t\t\t\t\t\tif(existingData) {\n\t\t\t\t\t\t\tdata[currItemIndex] =  {\n\t\t\t\t\t\t\t\t...existingData,\n\t\t\t\t\t\t\t\t...finalValue\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tdata.push({...finalValue})\n\t\t\t\t\t\t}\n\t\t\t\t\t// }\n\t\t\t\t\t// else {\n\t\t\t\t\t//\n\t\t\t\t\t// }\n\t\t\t\t})\n\t\t})\n\n\t\treturn data\n\t}\n\n\t// theme\n\tconst themeContext = useContext(ThemeContext);\n\n\tconst onMinusClick = (removeIndex) => {\n\t\tlet updatedTable = []\n\t\ttable.forEach((currCol, currColIndex) => {\n\t\t\tif(isArray(currCol) && currCol.length > removeIndex) {\n\t\t\t\tconst trimmedCol = immutableDelete(currCol, removeIndex)\n\t\t\t\tupdatedTable.push(trimmedCol)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tupdatedTable.push(currCol)\n\t\t\t}\n\t\t})\n\n\t\tsetFieldValue(\"table\", updatedTable)\n\t}\n\n\tconst renderTable = () => {\n\t\treturn (\n\t\t\t<styled.Table>\n\t\t\t\t{\n\t\t\t\t\t<styled.Column style={{flex: 0, minWidth: \"fit-content\"}}>\n\t\t\t\t\t\t{isArray(table[0]) && table[0].map((junk, currIndex) => {\n\n\t\t\t\t\t\t\tconst isSelected = isRow ? (currIndex === fieldLabelsIndex) : false\n\n\t\t\t\t\t\t\tif(fieldDirection === 1) {\n\t\t\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t\t\t<styled.ItemContainer>\n\t\t\t\t\t\t\t\t\t\t<Textbox\n\t\t\t\t\t\t\t\t\t\t\tplaceholder={\"Field name...\"}\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\tbackground: themeContext.bg.quaternary,\n\t\t\t\t\t\t\t\t\t\t\t\tmaxHeight: \"2rem\"\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\ttextboxContainerStyle={{\n\t\t\t\t\t\t\t\t\t\t\t\tmaxHeight: \"2rem\"\n\t\t\t\t\t\t\t\t\t\t\t}}\n\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</styled.ItemContainer>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif(currIndex === 0) {\n\t\t\t\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t<styled.ItemContainer style={{background: \"transparent\", border: \"none\",maxHeight: \"4rem\", height: \"4rem\"}}>\n\t\t\t\t\t\t\t\t\t\t\t\t{/*<div>Field Names</div>*/}\n\t\t\t\t\t\t\t\t\t\t\t</styled.ItemContainer>\n\t\t\t\t\t\t\t\t\t\t\t<styled.ItemContainer style={{background: \"transparent\", border: \"none\", alignSelf: \"flex-end\"}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t<styled.SelectButton\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype={\"button\"}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\te.preventDefault()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tisSelected ? setFieldLabelsIndex(null) : setFieldLabelsIndex(currIndex)\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{marginRight: 0}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor={'#57afff'}\n\t\t\t\t\t\t\t\t\t\t\t\t\tselected={isSelected}\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={isSelected ? \"fas fa-times-circle\" : \"fas fa-arrow-circle-right\"}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t<styled.SelectButton\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={\"fas fa-minus-circle\"}\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype={\"button\"}\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor={themeContext.schema.error.solid}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\te.preventDefault()\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonMinusClick(currIndex)\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t</styled.ItemContainer>\n\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t\t\t\t<styled.ItemContainer style={{background: \"transparent\", border: \"none\", alignSelf: \"flex-end\"}}>\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t{/* <styled.SelectButton\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={isSelected ? \"fas fa-times-circle\" : \"fas fa-arrow-circle-right\"}\n\t\t\t\t\t\t\t\t\t\t\t\ttype={\"button\"}\n\t\t\t\t\t\t\t\t\t\t\t\tselected={isSelected}\n\t\t\t\t\t\t\t\t\t\t\t\tcolor={'#57afff'}\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\te.preventDefault()\n\t\t\t\t\t\t\t\t\t\t\t\t\tisSelected ? setFieldLabelsIndex(null) : setFieldLabelsIndex(currIndex)\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/> */}\n\t\t\t\t\t\t\t\t\t\t\t<styled.SelectButton\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={\"fas fa-minus-circle\"}\n\t\t\t\t\t\t\t\t\t\t\t\tcolor={themeContext.schema.error.solid}\n\t\t\t\t\t\t\t\t\t\t\t\ttype={\"button\"}\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\te.preventDefault()\n\t\t\t\t\t\t\t\t\t\t\t\t\tonMinusClick(currIndex)\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t</styled.ItemContainer>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t})}\n\t\t\t\t\t</styled.Column>\n\n\t\t\t\t}\n\t\t\t\t{table.map((currRow, currRowIndex) => {\n\n\t\t\t\t\treturn(\n\t\t\t\t\t\t<styled.Column>\n\t\t\t\t\t\t\t{currRow\n\t\t\t\t\t\t\t\t// .filter((currItem, currItemIndex) => {\n\t\t\t\t\t\t\t\t// \tconst isSelected = isRow ? (currItemIndex === fieldLabelsIndex) : false\n\t\t\t\t\t\t\t\t//\n\t\t\t\t\t\t\t\t// \tif(!isSelected) return true\n\t\t\t\t\t\t\t\t// \treturn false\n\t\t\t\t\t\t\t\t// })\n\t\t\t\t\t\t\t\t.map((currItem, currItemIndex) => {\n\t\t\t\t\t\t\t\t\tconst isSelected = isRow ? (currItemIndex === fieldLabelsIndex) : false\n\t\t\t\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t{/**/}\n\t\t\t\t\t\t\t\t\t\t\t{(currItemIndex === 0 && fieldDirection === 0) &&\n\t\t\t\t\t\t\t\t\t\t\t<ContainerWrapper\n\t\t\t\t\t\t\t\t\t\t\t\tshowHighlight={false}\n\t\t\t\t\t\t\t\t\t\t\t\tshiftable={false}\n\t\t\t\t\t\t\t\t\t\t\t\tgroupName=\"field_names\"\n\t\t\t\t\t\t\t\t\t\t\t\tonDragStart={(dragStartParams, b, c)=>{\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tisSource,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpayload,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twillAcceptDrop\n\t\t\t\t\t\t\t\t\t\t\t\t\t} = dragStartParams\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tif(isSource) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\tonDragEnd={(dragEndParams)=>{\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tisSource,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpayload,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twillAcceptDrop\n\t\t\t\t\t\t\t\t\t\t\t\t\t} = dragEndParams\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tif(isSource) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\tonDrop={(dropResult) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tremovedIndex,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taddedIndex,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpayload\n\t\t\t\t\t\t\t\t\t\t\t\t\t} = dropResult\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tif(removedIndex !== null) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(`selectedFieldNames[${currRowIndex}]`,  {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfieldName: \"\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdataType: FIELD_DATA_TYPES.STRING,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisplayName: \"\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tif(addedIndex !== null) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst {\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t} = payload || {}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(`selectedFieldNames[${currRowIndex}]`, payload)\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\tgetChildPayload={index => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t// const selectedField = availableFieldNames[index]\n\t\t\t\t\t\t\t\t\t\t\t\t\t// return selectedField\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn values.selectedFieldNames[currRowIndex] || {}\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\tbehaviour={\"drop-zone\"}\n\t\t\t\t\t\t\t\t\t\t\t\tgetGhostParent={()=>{\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn document.body\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{minHeight: \"4rem\"}}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<styled.Receptacle></styled.Receptacle>\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t<Draggable>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<styled.FieldNameTab>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <styled.Trapezoid/> */}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<styled.ReceptacleInner filled={!!values.selectedFieldNames[currRowIndex] && values.selectedFieldNames[currRowIndex].fieldName !== \"\"}/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tinputComponent={\"input\"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcontainerStyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\talignSelf: \"center\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpadding: \"0 1rem\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tflex: .9\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={`selectedFieldNames[${currRowIndex}]`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmapInput={(inputVal) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn isObject(inputVal) ? (inputVal.displayName) : \"\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmapOutput={(outputVal) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlet mappedOutputVal = {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdataType: FIELD_DATA_TYPES.STRING,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...values.selectedFieldNames[currRowIndex],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfieldName: outputVal,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisplayName: outputVal,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfor(const availableField of availableFieldNames) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisplayName: availableDisplayName = \"\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} = availableField\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(isEqualCI(outputVal, availableDisplayName)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmappedOutputVal = {...availableField}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak\t// quit looping\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn mappedOutputVal\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder={\"Field\"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackground: 'transparent',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tborder: 'none !important',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmaxHeight: \"2rem\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: themeContext.bg.octonary,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttextAlign: 'center',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttextDecoration: 'none !important'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttextboxContainerStyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmaxHeight: \"2rem\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</styled.FieldNameTab>\n\t\t\t\t\t\t\t\t\t\t\t\t</Draggable>\n\t\t\t\t\t\t\t\t\t\t\t</ContainerWrapper>\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t<styled.ItemContainer schema={schema} selected={isSelected}>\n\t\t\t\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t\t\t\tname={`table[${currRowIndex}][${currItemIndex}]`}\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder={\"Enter data...\"}\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tborderRadius: \".5rem\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tflex: 1,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\talignSelf: \"stretch\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttextAlign: \"center\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpadding: \"0 .5rem\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\talignItems: \"center\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent: \"center\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbackground: \"transparent\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize: '0.8rem',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: themeContext.bg.octonary\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tinputComponent={\"input\"}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t{/*<styled.Cell cell={true}>*/}\n\t\t\t\t\t\t\t\t\t\t\t\t{/*\t{currItem}*/}\n\t\t\t\t\t\t\t\t\t\t\t\t{/*</styled.Cell>*/}\n\t\t\t\t\t\t\t\t\t\t\t</styled.ItemContainer>\n\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</styled.Column>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</styled.Table>\n\t\t)\n\t}\n\n\tif(!hidden) {\n\t\treturn (\n\n\t\t\t<styled.Container>\n\t\t\t\t<styled.Header>\n\t\t\t\t\t<styled.Title>Map Data</styled.Title>\n\t\t\t\t\t{/*<ButtonGroup*/}\n\t\t\t\t\t{/*\tbuttonViewCss={styled.buttonViewCss}*/}\n\t\t\t\t\t{/*\tbuttons={[\"Row\", \"Column\"]}*/}\n\t\t\t\t\t{/*\tselectedIndex={fieldDirection}*/}\n\t\t\t\t\t{/*\tonPress={(index)=>{*/}\n\t\t\t\t\t{/*\t\tsetFieldDirection(index)*/}\n\t\t\t\t\t{/*\t}}*/}\n\t\t\t\t\t{/*\tcontainerCss={styled.buttonGroupContainerCss}*/}\n\t\t\t\t\t{/*\tbuttonViewSelectedCss={styled.buttonViewSelectedCss}*/}\n\t\t\t\t\t{/*\tbuttonCss={styled.buttonCss}*/}\n\t\t\t\t\t{/*/>*/}\n\t\t\t\t\t<styled.CloseIcon className=\"fa fa-times\" aria-hidden=\"true\" onClick={onCancel}/>\n\t\t\t\t</styled.Header>\n\n\t\t\t\t<styled.Body>\n\t\t\t\t\t<styled.ContentContainer>\n\t\t\t\t\t\t<styled.SectionTitle>Available Fields</styled.SectionTitle>\n\n\t\t\t\t\t\t<styled.FieldNamesContainer style={{ }}>\n\t\t\t\t\t\t<Container\n\t\t\t\t\t\t\tgroupName=\"field_names\"\n\t\t\t\t\t\t\tonDragStart={(dragStartParams, b, c)=>{\n\t\t\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\t\t\tisSource,\n\t\t\t\t\t\t\t\t\tpayload,\n\t\t\t\t\t\t\t\t\twillAcceptDrop\n\t\t\t\t\t\t\t\t} = dragStartParams\n\n\t\t\t\t\t\t\t\tif(isSource) {\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonDragEnd={(dragEndParams)=>{\n\t\t\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\t\t\tisSource,\n\t\t\t\t\t\t\t\t\tpayload,\n\t\t\t\t\t\t\t\t\twillAcceptDrop\n\t\t\t\t\t\t\t\t} = dragEndParams\n\n\t\t\t\t\t\t\t\tif(isSource) {\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonDrop={(dropResult) => {\n\t\t\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\t\t\tremovedIndex,\n\t\t\t\t\t\t\t\t\taddedIndex,\n\t\t\t\t\t\t\t\t\tpayload\n\t\t\t\t\t\t\t\t} = dropResult\n\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tgetChildPayload={index => {\n\t\t\t\t\t\t\t\tconst selectedField = availableFieldNames[index]\n\t\t\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\t\t\tfieldName = \"\"\n\t\t\t\t\t\t\t\t} = selectedField || {}\n\n\t\t\t\t\t\t\t\treturn selectedField\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tgetGhostParent={()=>{\n\t\t\t\t\t\t\t\treturn document.body\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tbehaviour={\"drop-zone\"}\n\t\t\t\t\t\t\tstyle={{display: \"flex\", alignItems: \"center\", justifyContent: \"center\", minWidth: \"fit-content\", minHeight:\"fit-content\"}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{availableFieldNames.map((currField, currIndex) => {\n\n\t\t\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\t\t\tfieldName: currFieldName = \"\",\n\t\t\t\t\t\t\t\t\ttype: currType = \"\",\n\t\t\t\t\t\t\t\t\tdisplayName: currDisplayName = \"\",\n\t\t\t\t\t\t\t\t\tdescription,\n\t\t\t\t\t\t\t\t\tdataType\n\t\t\t\t\t\t\t\t} = currField || {}\n\n\t\t\t\t\t\t\t\t// const isDateRange = dataType === FIELD_DATA_TYPES.DATE_RANGE\n\n\t\t\t\t\t\t\t\tconst isUsed = usedAvailableFieldNames[currIndex]\n\t\t\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t\t\tisUsed ?\n\t\t\t\t\t\t\t\t\t\t<styled.FieldButton\n\t\t\t\t\t\t\t\t\t\t\tdisabled={isUsed}\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t// display: \"table-cell\",\n\t\t\t\t\t\t\t\t\t\t\t\t// verticalAlign: \"middle\",\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<styled.FieldName>{currDisplayName ? currDisplayName : currFieldName}</styled.FieldName>\n\t\t\t\t\t\t\t\t\t\t\t{description &&\n\t\t\t\t\t\t\t\t\t\t\t<styled.FieldDescription>{description}</styled.FieldDescription>\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</styled.FieldButton>\n\t\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t\t<Draggable\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\tdisplay: \"table-cell\",\n\t\t\t\t\t\t\t\t\t\t\t\tverticalAlign: \"middle\",\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tdisabled={isUsed}\n\t\t\t\t\t\t\t\t\t\t\tkey={currIndex}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<styled.FieldButton\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled={isUsed}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<styled.FieldName>{currDisplayName ? currDisplayName : currFieldName}</styled.FieldName>\n\t\t\t\t\t\t\t\t\t\t\t\t{description &&\n\t\t\t\t\t\t\t\t\t\t\t\t<styled.FieldDescription>{description}</styled.FieldDescription>\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t</styled.FieldButton>\n\t\t\t\t\t\t\t\t\t\t</Draggable>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</Container>\n\t\t\t\t\t\t</styled.FieldNamesContainer>\n\n\t\t\t\t\t\t<styled.SectionDescription>Drag one of the available fields onto a tab to map the values in that column to the field name.</styled.SectionDescription>\n\t\t\t\t\t</styled.ContentContainer>\n\n\t\t\t\t\t<styled.SectionBreak/>\n\t\t\t\t\t<styled.TableContainer>\n\t\t\t\t\t\t{renderTable()}\n\t\t\t\t\t</styled.TableContainer>\n\t\t\t\t\t<styled.SectionBreak/>\n\t\t\t\t</styled.Body>\n\n\n\n\t\t\t\t<styled.Footer>\n\t\t\t\t\t<Button\n\t\t\t\t\t\ttype={\"button\"}\n\t\t\t\t\t\tschema={schema}\n\t\t\t\t\t\tlabel={\"Preview Lots\"}\n\t\t\t\t\t\tonClick={()=>{\n\t\t\t\t\t\t\tconst payload = createPayload()\n\t\t\t\t\t\t\tonCreateClick(payload)\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tstyle={{minWidth: '14rem', minHeight: '3rem'}}\n\t\t\t\t\t/>\n\t\t\t\t\t{/*<Button*/}\n\t\t\t\t\t{/*\ttype={\"button\"}*/}\n\t\t\t\t\t{/*\tschema={schema}*/}\n\t\t\t\t\t{/*\tlabel={\"Preview Lots\"}*/}\n\t\t\t\t\t{/*\tonClick={() => {*/}\n\t\t\t\t\t{/*\t\tconst payload = createPayload()*/}\n\t\t\t\t\t{/*\t\tonPreviewClick(payload)*/}\n\t\t\t\t\t{/*\t}}*/}\n\t\t\t\t\t{/*/>*/}\n\t\t\t\t\t{/* <Button\n\t\t\t\t\t\tschema={schema}\n\t\t\t\t\t\ttype={\"button\"}\n\t\t\t\t\t\tlabel={\"Cancel\"}\n\t\t\t\t\t\tonClick={onCancel}\n\t\t\t\t\t/> */}\n\t\t\t\t</styled.Footer>\n\t\t\t</styled.Container>\n\n\t\t)\n\t}\n\telse {\n\t\treturn null\n\t}\n\n\n}\n\nexport const PasteForm = (props) => {\n\n\tconst {\n\t\tonPreviewClick,\n\t\thidden\n\t} = props\n\n\tconst [selectedFieldNames, setSelectedFieldNames] = useState([])\n\n\n\tconst handlePreviewClick = (payload) => {\n\t\tonPreviewClick && onPreviewClick(payload)\n\t}\n\n\n\treturn(\n\t\t<Formik\n\t\t\tinitialValues={{\n\t\t\t\tselectedFieldNames: [],\n\t\t\t\ttable: props.table\n\t\t\t}}\n\n\t\t\tvalidate={(values, props) => {\n\t\t\t\ttry {\n\t\t\t\t\ttemplateMapperSchema.validateSync(values, {\n\t\t\t\t\t\tabortEarly: false,\n\t\t\t\t\t\tcontext: values\n\t\t\t\t\t});\n\t\t\t\t} catch (error) {\n\t\t\t\t\tif (error.name !== \"ValidationError\") {\n\t\t\t\t\t\tthrow error;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn error.inner.reduce((errors, currentError) => {\n\t\t\t\t\t\terrors = set(errors, currentError.path, currentError.message)\n\t\t\t\t\t\treturn errors;\n\t\t\t\t\t}, {});\n\t\t\t\t}\n\t\t\t}}\n\t\t\tvalidateOnChange={true}\n\t\t\tvalidateOnMount={false} // leave false, if set to true it will generate a form error when new data is fetched\n\t\t\tvalidateOnBlur={true}\n\t\t\tenableReinitialize={false}\n\n\t\t\tonSubmit={async (values, { setSubmitting, setTouched, resetForm }) => {\n\t\t\t\t// set submitting to true, handle submit, then set submitting to false\n\t\t\t\t// the submitting property is useful for eg. displaying a loading indicator\n\t\t\t\tconst {\n\t\t\t\t\tbuttonType\n\t\t\t\t} = values\n\n\t\t\t\tsetSubmitting(true)\n\t\t\t\t// await handleSubmit(values, formMode)\n\t\t\t\tsetTouched({}) // after submitting, set touched to empty to reflect that there are currently no new changes to save\n\t\t\t\tsetSubmitting(false)\n\t\t\t}}\n\t\t>\n\t\t\t{formikProps =>\n\t\t\t\t<PasteMapper\n\t\t\t\t\tonPreviewClick={handlePreviewClick}\n\t\t\t\t\t{...formikProps}\n\t\t\t\t\t{...props}\n\t\t\t\t\tsetSelectedFieldNames={setSelectedFieldNames}\n\t\t\t\t/>\n\t\t\t}\n\t\t</Formik>\n\t)\n}\n\n// Specifies propTypes\nPasteMapper.propTypes = {\n\ttable: PropTypes.arrayOf(\t// array of array of strings\n\t\tPropTypes.arrayOf(\n\t\t\tPropTypes.string\n\t\t)\n\t)\n};\n\n// Specifies the default values for props:\nPasteMapper.defaultProps = {\n\ttable: [],\n\tschema: \"lots\",\n\tonCancel: () => {}\n};\n\n\nexport default PasteMapper\n","import styled, {css} from \"styled-components\";\nimport Modal from \"react-modal\";\nimport {commonClickableIcon, iconButtonCss} from \"../../../../../../common_css/common_css\";\n\nexport const rowCss = css`\n\tmargin-bottom: 1rem;\n`\n\nexport const Container = styled.div`\n  \n  color: ${props => props.theme.bg.octonary};\n  \n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  overflow: hidden;\n  flex: 1;\n  align-self: stretch;\n  \n  color: ${props => props.theme.bg.octonary};\n`;\n\nexport const PageSelector = styled.div`\n\tdisplay: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: .5rem;\n`\n\nexport const PageSelectorButton = styled.div`\n\t${iconButtonCss};\n  ${commonClickableIcon};\n  \n`\nexport const PageSelectorText = styled.span`\n\tmargin: 0 1rem;\n  \tfont-size: ${props => props.theme.fontSize.sz3};\n  //background: pink;\n`\n\nexport const SimpleModalText = styled.span`\n  font-size: ${props => props.theme.fontSize.sz3};\n`\n\nexport const SimpleModalTextContainer = styled.div`\n`\n","import React, { useState, useRef, useEffect, useCallback } from 'react'\n\n// actions\nimport { postCard } from \"../../../../../../redux/actions/card_actions\";\n\n// api\nimport { getCardsCount } from \"../../../../../../api/cards_api\";\n\n// components internal\nimport LotEditor from \"./lot_editor\"\nimport StatusList from \"../../../../../basic/status_list/status_list\"\nimport { PasteForm } from \"../../../../../basic/paste_mapper/paste_mapper\"\nimport SimpleModal from \"../../../../../basic/modals/simple_modal/simple_modal\";\n\n// constants\nimport {\n    BASIC_LOT_TEMPLATE,\n    BASIC_LOT_TEMPLATE_ID,\n    COUNT_FIELD, DEFAULT_COUNT_DISPLAY_NAME, DEFAULT_NAME_DISPLAY_NAME,\n    FIELD_COMPONENT_NAMES,\n    FORM_STATUS,\n    NAME_FIELD\n} from \"../../../../../../constants/lot_contants\"\n\n// functions external\nimport PropTypes from 'prop-types'\nimport { setNestedObjectValues } from \"formik\"\nimport { ValidationError } from \"yup\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\n// hooks\nimport usePrevious from \"../../../../../../hooks/usePrevious\"\n\n// utils\nimport {editLotSchema, uniqueNameSchema} from \"../../../../../../methods/utils/form_schemas\";\nimport { immutableReplace, immutableSet, isArray, isNonEmptyArray } from \"../../../../../../methods/utils/array_utils\";\nimport { convertPastePayloadToLot } from \"../../../../../../methods/utils/card_utils\";\nimport { isObject, pathStringToObject } from \"../../../../../../methods/utils/object_utils\";\nimport { getDisplayName } from \"../../../../../../methods/utils/lot_utils\";\n\n// styles\nimport * as styled from \"./lot_editor_container.style\";\nimport {postLocalSettings} from \"../../../../../../redux/actions/local_actions\";\n\nconst LotEditorContainer = (props) => {\n\n    // actions\n    const dispatch = useDispatch()\n    const dispatchPostCard = async (card) => await dispatch(postCard(card))\n    const dispatchPostLocalSettings = (settings) => dispatch(postLocalSettings(settings))\n\n    // redux state\n    const selectedLotTemplatesId = useSelector(state => { return state.lotTemplatesReducer.selectedLotTemplatesId })\n    const lotTemplates = useSelector(state => { return state.lotTemplatesReducer.lotTemplates }) || {}\n    const cards = useSelector(state => { return state.cardsReducer.cards })\n    const localReducer = useSelector(state => state.localReducer) || {}\n    const {\n        loaded: localSettingsLoaded,\n        localSettings\n    } = localReducer\n    const {\n        lastLotTemplateId = null\n    } = localSettings || {}\n\n    // component state\n    const [mappedStatus, setMappedStatus] = useState([])\t\t\t\t\t\t// array of form status objects\n    const [selectedIndex, setSelectedIndex] = useState(null)\t\t\t\t\t// current selected index for mapped data arrays (values, errors, touched, etc)\n    const [mappedValues, setMappedValues] = useState([])\t\t\t\t\t\t// array of form values objects\n    const [mappedErrors, setMappedErrors] = useState([])\t\t\t\t\t\t// array of form errors objects\n    // const [mappedWarnings, setMappedWarnings] = useState([])\t\t\t\t\t\t// array of form errors objects\n    const [mappedTouched, setMappedTouched] = useState([])\t\t\t\t\t// array of form touched objects\n    const [pasteTable, setPasteTable] = useState([])\t\t\t\t\t\t\t// array structure for mapping pasted table\n    const [disablePasteModal, setDisablePasteModal] = useState(false)\t\t\t// bool - used to determine whether or not to show the paste modal\n    const [resetPasteTable, setResetPasteTable] = useState(false)\t\t\t\t// bool - used to reset values in pasteForm\n    const [showPasteMapper, setShowPasteMapper] = useState(false)\t\t\t\t// bool - used for whether or not to render pasteForm\n    const [showSimpleModal, setShowSimpleModal] = useState(false)\t\t\t\t// bool - controls rendering of simple modal for pasting\n    const [pasteMapperHidden, setPasteMapperHidden] = useState(true)\t\t\t// bool - controls whether or not paste form is hidden (this is distinct from rendering)\n    const [showStatusList, setShowStatusList] = useState(false)\t\t\t\t// bool - controls whether or not to show statusList\n    const [createdLot, setCreatedLot] = useState(false)\t\t\t\t// bool - controls whether or not to show statusList\n    const [fieldNameArr, setFieldNameArr] = useState([])\n    const [lotTemplate, setLotTemplate] = useState([])\n    const {\n        name: lotTemplateName = \"\"\n    } = lotTemplate || {}\n    const [lotTemplateId, setLotTemplateId] = useState(null)\n    const [card, setCard] = useState(cards[props.cardId] || null)\n    const [collectionCount, setCollectionCount] = useState(null)\n    const [lazyCreate, setLazyCreate] = useState(false)\n\n    const [cardNames, setCardNames] = useState([])\n    const [showStatusListLazy, setShowStatusListLazy] = useState(null)\n\n    const previousSelectedIndex = usePrevious(selectedIndex) // needed for useEffects\n\n    const formRef = useRef(null)\t// gets access to form state\n    const {\n        current\n    } = formRef || {}\n\n    const {\n        values = {},\n        touched = {},\n        errors = {},\n        // status = {},\n        setValues = () => { },\n        setErrors = () => { },\n        resetForm = () => { },\n        setTouched = () => { },\n        setFieldValue = () => { },\n        setStatus = () => { },\n    } = current || {}\n\n    /*\n    * This effect is used to update the current predicted lotNumber on an interval\n    * The lotNumber here is just used for display, the actual assigned lotNumber should be handled on the backend\n    * */\n    useEffect(() => {\n        getCount()\n        let lotNumberTimer = setInterval(() => {\n            getCount()\n        }, 5000)\n\n        return () => {\n            clearInterval(lotNumberTimer)\n        }\n    }, [])\n\n    // when card id changes, update card\n    useEffect(() => {\n        setCard(cards[props.cardId] || null)\n    }, [props.cardId])\n\n    /*\n    * This effect is used to determine which lotTemplateId / lotTemplate to use\n    * */\n    useEffect(() => {\n        let tempLotTemplateId = selectedLotTemplatesId  // set template id to selected template from redux - set by sidebar when you pick a template\n\n        // if a template isn't provided by redux, check if card has template id\n        if (!tempLotTemplateId && isObject(card) && card?.lotTemplateId) {\n            tempLotTemplateId = card?.lotTemplateId\n        }\n\n        // if card also doesn't have template id, use lastLotTemplateId from localstorage\n        if (!tempLotTemplateId) tempLotTemplateId = lastLotTemplateId\n\n        // get lottemplate using id\n        let tempLotTemplate = lotTemplates[tempLotTemplateId]\n\n        // if the template wasn't found, default everything to use BASIC_LOT_TEMPLATE\n        if (!lotTemplates[tempLotTemplateId]) {\n            tempLotTemplateId = BASIC_LOT_TEMPLATE_ID\n            tempLotTemplate = BASIC_LOT_TEMPLATE\n        }\n\n        setLotTemplateId(tempLotTemplateId)\n        setLotTemplate(tempLotTemplate)\n    }, [selectedLotTemplatesId, card, lotTemplates, lastLotTemplateId])\n\n\n    /*\n    * This effect is used to update localSettings with the last used lotTemplateId\n    * */\n    useEffect(() => {\n        // only post to local settings if localsettings have been loaded. Otherwise this could overwrite the stored localsettings with the initial (default) values\n        if(localSettingsLoaded && (lotTemplateId !== null) && (lastLotTemplateId !== lotTemplateId)) {\n            const {\n                localSettings\n            } = localReducer || {}\n\n            dispatchPostLocalSettings({\n                ...localSettings,\n                lastLotTemplateId: lotTemplateId,\n            })\n        }\n    }, [lotTemplateId, localSettingsLoaded, lastLotTemplateId])\n\n\n    /*\n    * This effect is used as a callback to call createLot after other useStates have run.\n    * */\n    useEffect(() => {\n        if (lazyCreate) {\n            setLazyCreate(false)\n            createLot(selectedIndex, onAddCallback)\n        }\n    }, [lazyCreate])\n\n    useEffect(() => {\n        if(!showStatusListLazy) {\n            setShowStatusListLazy(null)\n            if(showStatusList) {\n                setShowStatusList(false)\n            }\n        }\n    }, [showStatusListLazy])\n\n    /*\n    * This hook is used for updating mappedValues, errors, touched state from form values when selectedIndex is changed\n    * */\n    useEffect(() => {\n        if (isArray(mappedValues) && mappedValues.length > 0 && selectedIndex !== previousSelectedIndex && previousSelectedIndex !== null) {\n            setMappedValues(immutableReplace(mappedValues, values, previousSelectedIndex))\t// update mapped values\n            setMappedTouched(immutableReplace(mappedTouched, touched, previousSelectedIndex))\t// update mapped touched\n            // setMappedStatus(immutableReplace(mappedStatus, status, previousSelectedIndex))\t// update mapped status\n        }\n\n    }, [values, selectedIndex])\n\n    /*\n    * This hook is used for updating form values from stored mapped state when selectedIndex is changed\n    * */\n    useEffect(() => {\n        if (isArray(mappedValues) && mappedValues.length > 0 && mappedValues[selectedIndex] && selectedIndex !== previousSelectedIndex) {\n            // get mapped state for current selectedIndex value\n            const currMappedValue = mappedValues[selectedIndex] || {}\n            const currMappedError = mappedErrors[selectedIndex] || {}\n            const currMappedTouched = mappedTouched[selectedIndex] || {}\n            const currMappedStatus = mappedStatus[selectedIndex] || {}\n\n            resetForm()\t// reset when switching\n\n            // update form state\n            setValues(currMappedValue)\n            setErrors(currMappedError)\n            setTouched(currMappedTouched)\n            setStatus(currMappedStatus)\n        }\n    }, [mappedValues, selectedIndex])\n\n\n    /*\n    * Updates collectionCount state var, used for displaying predicted lot number\n    * */\n    const getCount = async () => {\n        const count = await getCardsCount()\n        setCollectionCount(count)\n    }\n\n    /*\n    * This function handles the logic for when the create button in the paste form is clicked\n    * */\n    const handlePasteFormCreateClick = (payload) => {\n\n        let tempMappedValues = []\n\n        setPasteMapperHidden(true)\t\t// hide paste form\n        setShowPasteMapper(false)\t\t\t// don't render paste form\n        setPasteTable([])\t\t\t\t\t// clear pasteTable\n        setShowStatusList(true)\t\t\t// display statusList\n\n        // run validation for each lot\n        payload.forEach((currMappedLot, currMappedLotIndex) => {\n\n            let newLot = convertPastePayloadToLot(currMappedLot, lotTemplate, props.processId)\t\t// convert to lot format\n            tempMappedValues.push(newLot)\n\n            // update status\n            setMappedStatus((previous) => {\n                const previousStatus = previous[selectedIndex] || {}\n                return immutableSet(previous, {\n                    ...previousStatus,\n                    validationStatus: {\n                        message: `Validating lot.`,\n                        code: FORM_STATUS.VALIDATION_START\n                    },\n                    resourceStatus: {\n                        message: `-`,\n                        code: FORM_STATUS.NOT_STARTED\n                    },\n                }, currMappedLotIndex)\n            })\n\n            // set touched\n            const updatedTouched = setNestedObjectValues(newLot, true)\n            setMappedTouched((previous) => {\n                const previousTouched = previous[currMappedLotIndex] || {}\n                return immutableSet(previous, {\n                    ...previousTouched,\n                    ...updatedTouched\n                }, currMappedLotIndex)\n            })\n\n            validateLot(newLot, currMappedLotIndex)\t\t// validate that bad boy\n        })\n\n        setMappedValues(tempMappedValues)\t\t\t\t// set mapped values to payload provided from paste form\n    }\n\n    /*\n    * This effect runs whenever lotTemplate changes\n    * It sets fieldNameArr to an array of all the fieldNames in the current template.\n    * If there is no change in fieldNameArr, no update is performed. Otherwise it updates the array whenever lotTemplate changes\n    *\n    * This is necessary in order to update initialValues when a lotTemplate is edited\n    * */\n    useEffect(() => {\n        // get fields\n        const {\n            fields\n        } = lotTemplate || {}\n\n        // check if array to prevent errors\n        if (isArray(fields)) {\n\n            let newFieldNameArr = [] // initialze arr for storing fieldNames\n\n            fields.forEach((currRow) => {\t// loop through rows\n                currRow.forEach((currItem) => {\t// loop through items\n\n                    // extract properties\n                    const {\n                        fieldName,\n                        component,\n                        dataType,\n                        _id\n                    } = currItem || {}\n\n                    if (component === FIELD_COMPONENT_NAMES.CALENDAR_START_END) {\n                        newFieldNameArr.push({ _id, fieldName: `${fieldName}`, index: 0, dataType: dataType, displayName: `${fieldName} (start)` })\n                        newFieldNameArr.push({ _id, fieldName: `${fieldName}`, index: 1, dataType: dataType, displayName: `${fieldName} (end)` })\n                    }\n                    else {\n                        newFieldNameArr.push({ _id, fieldName, dataType: component, displayName: fieldName })\n                    }\n\n                })\n            })\n\n            setFieldNameArr([\n                // ...REQUIRED_FIELDS,\n                {\n                    ...NAME_FIELD,\n                    displayName: getDisplayName(lotTemplate, \"name\", DEFAULT_NAME_DISPLAY_NAME)\n                },\n                {\n                    ...COUNT_FIELD,\n                    displayName: getDisplayName(lotTemplate, \"count\", DEFAULT_COUNT_DISPLAY_NAME)\n                },\n                ...newFieldNameArr,\n            ])\n        }\n    }, [lotTemplate])\n\n    useEffect(() => {\n        let tempCardNames = []\n\n        Object.values(cards).forEach((currCard) => {\n            const {\n                name,\n                _id: currLotId\n            } = currCard || {}\n\n            tempCardNames.push({name, id: currLotId})\n        })\n\n        setCardNames(tempCardNames)\n    }, [cards])\n\n    /*\n    * listen for paste event to migrate excel data\n    * */\n    useEffect(() => {\n        // add event listener to 'paste'\n        document.addEventListener(\"paste\", onPasteEvent);\n\n        // on dismount remove the event pasteListener\n        return () => {\n            document.removeEventListener(\"paste\", onPasteEvent);\n        };\n    }, [disablePasteModal])\n\n    const handleValidate = (values) => {\n        if (selectedIndex !== null) {\n            validateLot(values, selectedIndex)\n        }\n    }\n\n    const setPending = (index) => {\n        const values = mappedValues[index]\n        if (values._id) return\n\n        // update status\n        setMappedStatus((previous) => {\n            const previousStatus = previous[index] || {}\n            return immutableSet(previous, {\n                ...previousStatus,\n                resourceStatus: {\n                    message: `Waiting.`,\n                    code: FORM_STATUS.WAITING\n                }\n            }, index)\n        })\n    }\n\n    /*\n    * handles logic for creating a lot from mappedValues\n    * */\n    const createLot = async (index, cb) => {\n        if(!createdLot) setCreatedLot(true)\n        const values = mappedValues[index]\n        if (values._id) return\t// lot was already created, don't try creating it again\n\n        // update status\n        setMappedStatus((previous) => {\n            const previousStatus = previous[index] || {}\n            return immutableSet(previous, {\n                ...previousStatus,\n                resourceStatus: {\n                    message: `Started.`,\n                    code: FORM_STATUS.CREATE_START\n                }\n            }, index)\n        })\n\n        // re-run validation right before submitting to ensure there are no errors\n        try {\n            const validationResult = validateLot(values, index)\n\n            const hasErrors = validationResult instanceof ValidationError\n\n            if (hasErrors) {\n                // update status - found errors so create is cancelled\n                setMappedStatus((previous) => {\n                    const previousStatus = previous[index] || {}\n                    return immutableSet(previous, {\n                        ...previousStatus,\n                        resourceStatus: {\n                            message: `Creation cancelled due to validation errors.`,\n                            code: FORM_STATUS.VALIDATION_ERROR\n                        }\n                    }, index)\n                })\n            }\n            else {\n                // no errors, POST it\n                const {\n                    name: newName,\n                    bins: newBins,\n                    processId: newProcessId,\n                    fields\n                } = values || {}\n\n                const submitItem = {\n                    name: newName,\n                    bins: newBins,\n                    process_id: newProcessId,\n                    lotTemplateId: lotTemplateId,\n                    fields,\n                    lotNumber: index //collectionCount + index\n                }\n\n                await dispatchPostCard(submitItem)\n                    .then((result) => {\n                        if (result) {\n                            // successfully POSTed\n                            const {\n                                _id = null\n                            } = result || {}\n\n                            // update status, POST success\n                            setMappedStatus((previous) => {\n                                const previousStatus = previous[index] || {}\n                                return immutableSet(previous, {\n                                    ...previousStatus,\n                                    resourceStatus: {\n                                        message: `Successfully created lot!`,\n                                        code: FORM_STATUS.CREATE_SUCCESS\n                                    }\n                                }, index)\n                            })\n\n                            // update values (only difference should be ID added and maybe lotNumber was different\n                            setMappedValues((previous) => {\n                                return immutableSet(previous, {\n                                    ...result\n                                }, index)\n                            })\n\n                            // call callback if provided\n                            cb && cb(_id)\n                        }\n\n                        else {\n                            // POST error, update status\n                            setMappedStatus((previous) => {\n                                const previousStatus = previous[index] || {}\n                                return immutableSet(previous, {\n                                    ...previousStatus,\n                                    resourceStatus: {\n                                        message: `Error creating lot.`,\n                                        code: FORM_STATUS.CREATE_ERROR\n                                    }\n                                }, index)\n                            })\n                        }\n                    })\n                    .catch((err) => {\n\n                        setMappedStatus((previous) => {\n                            const previousStatus = previous[index] || {}\n                            return immutableSet(previous, {\n                                ...previousStatus,\n                                resourceStatus: {\n                                    message: `Error creating lot.`,\n                                    code: FORM_STATUS.CREATE_ERROR\n                                }\n                            }, index)\n                        })\n                    })\n            }\n        }\n\n        catch(err) {\n            console.error(\"create err\",err)\n        }\n    }\n\n    /*\n    * runs async validation for a lot and  updates its status\n    * */\n    const validateLot = (values, index) => {\n        try {\n            uniqueNameSchema.validateSync({\n                name: values.name,\n                cardNames: cardNames,\n            }, {abortEarly: false})\n\n            setMappedStatus((previous) => {\n                const previousStatus = previous[index] || {}\n                return immutableSet(previous, {\n                    ...previousStatus,\n                    warnings: {}\n                }, index)\n            })\n        }\n        catch(err) {\n            const {\n                inner = [],\n                // message\n            } = err || {}\n\n            let lotErrors = {}\n\n            // collect errors\n            inner.forEach((currErr) => {\n                const {\n                    // errors,\n                    path,\n                    message,\n                    value\n                } = currErr || {}\n\n                const {\n                    fieldName\n                } = value || {}\n\n                const errorObj = isObject(value) ? {[fieldName]: message} : pathStringToObject(path, \".\", message)\n\n                lotErrors = {\n                    ...lotErrors,\n                    ...errorObj\n                }\n            })\n\n            // set touched\n            const updatedTouched = setNestedObjectValues(values, true)\n            setMappedTouched((previous) => {\n                const previousTouched = previous[index] || {}\n                return immutableSet(previous, {\n                    ...previousTouched,\n                    ...updatedTouched\n                }, index)\n            })\n\n            // set errors\n            setMappedStatus((previous) => {\n                const previousStatus = previous[index] || {}\n                return immutableSet(previous, {\n                    ...previousStatus,\n                    warnings: lotErrors\n                }, index)\n            })\n        }\n\n        try {\n            editLotSchema.validateSync(values, { abortEarly: false })\n\n            // clear errors and  touched\n            setMappedErrors((previous) => {\n                return immutableSet(previous, {}, index)\n            })\n            setMappedTouched((previous) => {\n                const previousTouched = previous[index] || {}\n                return immutableSet(previous, {\n                    ...previousTouched\n                }, index)\n            })\n\n            // update status with success\n            setMappedStatus((previous) => {\n                const previousStatus = previous[index] || {}\n                return immutableSet(previous, {\n                    ...previousStatus,\n                    validationStatus: {\n                        message: `Successfully validated lot!`,\n                        code: FORM_STATUS.VALIDATION_SUCCESS\n                    }\n                }, index)\n            })\n        }\n\n        catch(err) {\n            // oh no there was an error\n            const {\n                inner = [],\n                // message\n            } = err || {}\n\n            let lotErrors = {}\n\n            // collect errors\n            inner.forEach((currErr) => {\n                const {\n                    // errors,\n                    path,\n                    message,\n                    value\n                } = currErr || {}\n\n                const {\n                    fieldName\n                } = value || {}\n\n                const errorObj = isObject(value) ? {[fieldName]: message} : pathStringToObject(path, \".\", message)\n\n                lotErrors = {\n                    ...lotErrors,\n                    ...errorObj\n                }\n            })\n\n            // update status with errors\n            setMappedStatus((previous) => {\n                const previousStatus = previous[index] || {}\n                return immutableSet(previous, {\n                    ...previousStatus,\n                    validationStatus: {\n                        message: `Error validating lot.`,\n                        code: FORM_STATUS.VALIDATION_ERROR\n                    }\n                }, index)\n            })\n\n            // set errors\n            setMappedErrors((previous) => {\n                return immutableSet(previous, lotErrors, index)\n            })\n\n            // set touched\n            const updatedTouched = setNestedObjectValues(lotErrors, true)\n            setMappedTouched((previous) => {\n                const previousTouched = previous[index] || {}\n                return immutableSet(previous, {\n                    ...previousTouched,\n                    ...updatedTouched\n                }, index)\n            })\n\n            return err\n        }\n\n        // return\n    }\n\n    /*\n    * Event handler for paste events\n    *\n    * converts tabular data to an array of arrays structure (1 column X n rows)\n    * */\n    const onPasteEvent = useCallback((e) => {\n        const plainText = e.clipboardData.getData('text/plain')\t// get clipboard data\n\n        var rows = plainText.split(\"\\n\");\n        let table = []\n\n        for (var y in rows) {\n\n            var cells = rows[y].split(\"\\t\")\n\n            for (const x in cells) {\n\n                if (table[x]) {\n                    table[x].push(cells[x])\n                }\n                else {\n                    table.push([cells[x]])\n                }\n            }\n        }\n\n        setPasteTable(table)\t// set paste table\n\n        // need to call setShowSimpleModal with tiny delay in order to allow normal pasting\n        if (!disablePasteModal) {\n            setTimeout(() => {\n                setShowSimpleModal(true)\n            }, 0)\n        }\n\n        return true\n    }, [disablePasteModal])\n\n    /*\n    * callback function used in createLot when submit is called from inside lot editor\n    *\n    * Updates form values with id of created lot\n    * */\n    const onAddCallback = (id) => {\n        setFieldValue(\"_id\", id)\n    }\n\n    return (\n        <styled.Container>\n            {showStatusList &&\n                <StatusList\n                    displayNames={lotTemplate?.displayNames || {}}\n                    onItemClick={(item) => {\n                        setSelectedIndex(item.index)\n                        setShowStatusListLazy(false)\n                    }}\n                    onCreateClick={createLot}\n                    onCreateAllClick={async () => {\n                        for (let i = 0; i < mappedValues.length; i++) {\n                            setPending(i)\n                        }\n                        for (let i = 0; i < mappedValues.length; i++) {\n                            await createLot(i)\n                        }\n                    }}\n                    onCanceleClick={() => {\n                        setShowStatusList(false)\n                        setPasteTable([])\n                        setSelectedIndex(null)\n                        setMappedValues([])\n\n                        if(createdLot) {\n                            props.close()\n                        }\n                    }}\n\n                    onShowMapperClick={() => {\n                        setShowStatusList(false)\n                        setShowPasteMapper(true)\n                        setPasteMapperHidden(false)\n                    }}\n                    data={mappedValues.map((currValue, currIndex) => {\n                        const {\n                            name\n                        } = currValue\n\n                        const wholeVal = mappedValues[currIndex]\n\n                        const {\n                            _id\n                        } = wholeVal\n\n                        const currStatus = mappedStatus[currIndex] || {}\n                        return {\n                            errors: mappedErrors[currIndex] || {},\n                            title: name,\n                            created: !!_id,\n                            ...currStatus,\n                            index: currIndex\n                        }\n                    })}\n\n                />\n            }\n            {showPasteMapper &&\n                <PasteForm\n                    hidden={pasteMapperHidden}\n                    reset={resetPasteTable}\n                    availableFieldNames={[\n                        ...fieldNameArr,\n\n                    ]}\n                    onCancel={() => {\n                        setShowPasteMapper(false)\n                        setPasteMapperHidden(true)\n                        setPasteTable([])\t// clear table\n                    }}\n\n                    table={pasteTable}\n                    // onPreviewClick={(payload) => {\n                    // \t// setShowPasteMapper(false)\n                    // \t// setShowProcessSelector(true)\n                    // \tsetMappedValues(payload)\n                    // \tsetSelectedIndex(0)\n                    // \tsetPasteMapperHidden(true)\n                    // }}\n                    onCreateClick={(payload) => {\n                        handlePasteFormCreateClick(payload)\n                    }}\n                />\n            }\n\n            {showSimpleModal &&\n                <SimpleModal\n                    isOpen={true}\n                    title={\"Paste Event Detected\"}\n                    onRequestClose={() => setShowSimpleModal(false)}\n                    onCloseButtonClick={() => setShowSimpleModal(false)}\n                    handleOnClick2={() => {\n                        setShowPasteMapper(true)\n                        setPasteMapperHidden(false)\n                        setShowSimpleModal(false)\n\n                        setResetPasteTable(true)\n                        setTimeout(() => {\n                            setResetPasteTable(false)\n                        }, 250)\n                        setDisablePasteModal(false)\n\n                    }}\n                    handleOnClick1={() => {\n                        setShowSimpleModal(false)\n                        setDisablePasteModal(true)\n                    }}\n                    button_2_text={\"Yes\"}\n                    button_1_text={\"No\"}\n\n                >\n                    <styled.SimpleModalText>A paste event was detected. Would you like to use pasted data to create lots?</styled.SimpleModalText>\n                </SimpleModal>\n            }\n\n            <LotEditor\n                cardNames={cardNames}\n                lotTemplateName={lotTemplateName}\n                onAddClick={() => {\n                    /*\n                    * Note: createLot function uses mappedValues and the index within mappedValues to retrieve data for which lot to create\n                    * Therefore, before createLot is called, mappedValues must be updated.\n                    *\n                    * If you call setMappedValues and then directly call createLot, createLot will run before mappedValues is updated.\n                    *\n                    * Therefore, instead of directly calling createLot, lazyCreate is set to true. A useEffect hook listens for changes to lazyCreate, and then calls createLot when lazyCreate is true. This ensures mappedValues is updated before createLot is called\n                    *\n                    *\n                    * */\n                    // const newValue = convertLotToExcel(values, lotTemplateId)\t\t\t\t\t\t// convert form values format to mapped excel format\n                    setMappedValues(immutableReplace(mappedValues, values, selectedIndex))\t\t// update mapped state\n                    setMappedErrors(immutableReplace(mappedErrors, errors, selectedIndex))\t\t\t// update mapped state\n                    setMappedTouched(immutableReplace(mappedTouched, touched, selectedIndex))\t\t// update mapped state\n                    setLazyCreate(true)\t\t\t\t\t\t\t\t\t\t\t\t\t\t// have to submit in round-about way in order to ensure other state variables are up-to-date first\n                }}\n                collectionCount={parseInt((collectionCount + 1))}\n                lotTemplateId={lotTemplateId}\n                lotTemplate={lotTemplate}\n                showProcessSelector={props.showProcessSelector || (isArray(mappedValues) && mappedValues.length > 0)}\n                hidden={showStatusList || showPasteMapper}\n                onShowCreateStatusClick={() => {\n                    setShowStatusList(true)\n                    setSelectedIndex(null)\n                }}\n\n                disabledAddButton={(isArray(mappedValues) && mappedValues.length > 0)}\n                formRef={formRef}\n                showCreationStatusButton={(isArray(mappedValues) && mappedValues.length > 0)}\n                showPasteIcon={isNonEmptyArray(pasteTable)}\n                onPasteIconClick={() => {\n                    setShowPasteMapper(true)\n                    setPasteMapperHidden(false)\n                    setResetPasteTable(true)\n                    setTimeout(() => {\n                        setResetPasteTable(false)\n                    }, 250)\n                    setDisablePasteModal(false)\n                }}\n                {...props}\n                cardId={(props.cardId !== null) ? props.cardId : values._id ? values._id : null}\n                onValidate={handleValidate}\n                footerContent={() =>\n                    (isArray(mappedValues) && mappedValues.length > 0) &&\n                    <styled.PageSelector>\n                        <styled.PageSelectorButton className=\"fas fa-chevron-left\"\n                            onClick={() => {\n                                if (selectedIndex > 0) {\n                                    setSelectedIndex(selectedIndex - 1)\n                                }\n                            }}\n                        />\n                        <styled.PageSelectorText>{selectedIndex + 1}/{mappedValues.length}</styled.PageSelectorText>\n                        <styled.PageSelectorButton className=\"fas fa-chevron-right\"\n                            onClick={() => {\n                                if (selectedIndex < mappedValues.length - 1) {\n                                    setSelectedIndex(selectedIndex + 1)\n                                }\n\n                            }}\n                        />\n                    </styled.PageSelector>\n                }\n            />\n        </styled.Container>\n    );\n};\n\nLotEditorContainer.propTypes = {\n\n};\n\nexport default LotEditorContainer;\n","export const SCHEDULES = 'SCHEDULES';\nexport const SCHEDULE = 'SCHEDULE';\nexport const CARD = 'CARD';\nexport const CARDS = 'CARDS';\nexport const WORK_INSTRUCTION = 'WORK_INSTRUCTION';\nexport const WORK_INSTRUCTIONS = 'WORK_INSTRUCTIONS';\nexport const SHOW_EDITOR = 'CARDS';\nexport const SHOW_FORM_EDITOR = 'SHOW__FORM_EDITOR';\nexport const LOT = 'LOT';\nexport const LOT_TEMPLATE = 'LOT_TEMPLATE';\nexport const LOT_TEMPLATES = 'LOT_TEMPLATES';\nexport const LOTS = 'LOTS';\nexport const PROCESS_CARDS = 'PROCESS_CARDS';\nexport const CARD_HISTORY = 'CARD_HISTORY';\nexport const DATA_PAGE = 'DATA_PAGE';\nexport const JUNK = 'JUNK';\nexport const REPORT_EVENT = 'REPORT_EVENT';\nexport const REPORT_EVENTS = 'REPORT_EVENTS';\nexport const DASHBOARDS = 'DASHBOARDS';\nexport const DASHBOARD = 'DASHBOARD';\nexport const SHOW_BARCODE_MODAL = 'SHOW_BARCODE_MODAL';\n","import styled, {css} from 'styled-components'\n\nexport const InfoText = styled.span`\n\tcolor: white;\n  \tfont-size: ${props => props.theme.fontSize.sz3};\n`","import React, {useEffect, useState} from \"react\";\nimport PropTypes from 'prop-types';\n\nimport {Formik, useFormik} from 'formik';\n\nimport SimpleModal from \"../simple_modal/simple_modal\";\nimport NumberField from \"../../form/number_field/number_field\";\n\nimport * as styled from \"./quantity_modal.style\"\nimport {getSubmitDisabled} from \"../../../../methods/utils/form_utils\";\n\nconst QuantityModal = (props) => {\n\tconst {\n\t\tmaxValue,\n\t\tminValue,\n\t\thandleOnClick2,\n\t\tinfoText,\n\t\tvalidationSchema,\n\t} = props\n\n\treturn (\n\t\t<Formik\n\t\t\tinitialValues={{\n\t\t\t\tquantity: maxValue\n\t\t\t}}\n\t\t\tvalidationSchema={validationSchema}\n\t\t\tvalidateOnChange={true}\n\t\t\tvalidateOnMount={false} // leave false, if set to true it will generate a form error when new data is fetched\n\t\t\tvalidateOnBlur={true}\n\t\t\tonSubmit={(values)=>{\n\t\t\t\t// alert(JSON.stringify(values, null, 2));\n\t\t\t}} // this is necessary\n\n\t\t>\n\t\t\t{formikProps => {\n\t\t\t\tconst {\n\t\t\t\t\tvalues,\n\t\t\t\t\terrors,\n\t\t\t\t\ttouched\n\t\t\t\t} = formikProps\n\n\t\t\t\tconst submitDisabled = getSubmitDisabled(formikProps)\n\n\t\t\t\tconst {\n\t\t\t\t\tquantity = 0\n\t\t\t\t} = values || {}\n\n\t\t\t\treturn(\n\t\t\t\t\t<SimpleModal\n\t\t\t\t\t\t{...props}\n\t\t\t\t\t\thandleOnClick2={() => {\n\t\t\t\t\t\t\thandleOnClick2(quantity)\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tbutton_1_disabled={submitDisabled}\n\t\t\t\t\t>\n\n\t\t\t\t\t\t<styled.InfoText>{infoText}</styled.InfoText>\n\t\t\t\t\t\t<NumberField\n\t\t\t\t\t\t\tminValue={minValue}\n\t\t\t\t\t\t\tmaxValue={maxValue}\n\t\t\t\t\t\t\tname={\"quantity\"}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t</SimpleModal>\n\t\t\t\t)\n\t\t\t}}\n\t\t</Formik>\n\n\t);\n};\n\nQuantityModal.propTypes = {\n\n};\nQuantityModal.defaultProps = {\n\thandleOnClick1: () => {}\n};\n\n\n\nexport default QuantityModal;\n","//This API is used to handle calls to the local storage\n\nimport logger from '../logger'\nimport ls from 'local-storage'\nimport {\n    BrowserView,\n    MobileView,\n    isBrowser,\n    isMobile\n} from \"react-device-detect\";\nimport {defaultLocalSettings} from \"../constants/local_settings_constants\";\n\nconst log = logger.getLogger('LocalStorage')\n\nexport async function getLoggers() {\n\n    // retrieve data from localStorage\n    // currently stored under the key \"logger-config-123\"\n    // this key could be set to a user id to save settings for a specific user\n    var loggerConfig = localStorage.getItem(\"logger-config-123\");\n    if (loggerConfig) {\n        loggerConfig = JSON.parse(loggerConfig);\n        return loggerConfig;\n    }\n\n}\n\nexport async function postLoggers(settings) {\n\n    const loggerConfig = localStorage.setItem(\"logger-config-123\", JSON.stringify(settings));\n    return loggerConfig;\n}\n\n\nexport const postLocalSettings = async (settings) => {\n  const locStorage = ls.set(\"localSettings\", JSON.stringify(settings));\n  return locStorage\n}\n\n\nexport const getLocalSettings = async () => {\n  const localSettings = ls.get(\"localSettings\");\n\n  if (localSettings !== null) {\n      const locSettings = JSON.parse(localSettings);\n      return locSettings;\n  }\n  else {\n    await postLocalSettings(defaultLocalSettings)\n    return defaultLocalSettings\n  }\n\n}\n\nexport const deleteLocalSettings = async () => {\n    localStorage.removeItem(\"local-settings-config\");\n}\n","import { useRef, useEffect } from 'react'\n\n/**\n * This will take a value and store its current state\n * This can be used to see if the stored state has changed\n * For example: Does the new state differ from the previous state\n * @param {var} val \n */\nconst usePrevious = (val) => {\n    const ref = useRef()\n    useEffect(() => {\n        ref.current = val;\n    })\n    return ref.current\n}\n\nexport default usePrevious","import store from '../../redux/store/index'\nimport { BIN_IDS } from \"../../constants/lot_contants\";\nimport { isNonEmptyArray } from \"./array_utils\";\nimport { callOnStations } from \"./processes_utils\";\nimport { getLoadStationId, getUnloadStationId } from './route_utils'\n\nexport const getChildPositions = (stationID) => {\n    const positionsState = store.getState().positionsReducer\n    const positions = positionsState.positions_actions\n\n    let childrenArray = []\n\n    positions.forEach(position => {\n        !!position.parent && position.parent === stationID && childrenArray.push(position._id)\n    })\n\n}\n\nexport const getStationName = (stationId) => {\n\n    if (stationId === BIN_IDS.QUEUE) {\n        return \"Queue\"\n    }\n    else if (stationId === BIN_IDS.FINISH) {\n        return \"Finish\"\n    }\n\n    const stations = store.getState().stationsReducer.stations || {}\n    const station = stations[stationId] || {}\n    const {\n        name = \"\"\n    } = station\n\n    return name\n}\n\nexport const getPositionAttributes = (positionId, attributes) => {\n    const storeState = store.getState()\n    const positions = storeState.positionsReducer.positions || {}\n\n    let positionAttributes = {}\n\n    const isAttributesNotEmpty = isNonEmptyArray(attributes)\n\n    const position = positions[positionId] || {}\n\n    if (isAttributesNotEmpty) {\n        attributes.forEach((currAttribute) => {\n            positionAttributes[currAttribute] = position[currAttribute]\n        })\n    }\n    else {\n        positionAttributes = { ...position }\n    }\n\n    return positionAttributes\n}\n\n// Returns a list of processes this station belongs to\nexport const getStationProcesses = (stationID) => {\n\n    const storeState = store.getState()\n    const processes = storeState.processesReducer.processes\n    const routes = storeState.tasksReducer.tasks\n    const stationProcesses = []\n    Object.values(processes).forEach((currProcess) => {\n        if (currProcess && currProcess.routes && Array.isArray(currProcess.routes)) {\n            for (let i = 0; i < currProcess.routes.length; i++) {\n                const routeID = currProcess.routes[i]\n                const route = routes[routeID]\n                const unloadStationId = getUnloadStationId(route)\n                const loadStationId = getLoadStationId(route)\n\n                if (unloadStationId === stationID && !stationProcesses.includes(stationID)) {\n                    stationProcesses.push(currProcess._id)\n                    break\n                }\n                else if (loadStationId === stationID && !stationProcesses.includes(stationID)) {\n                    stationProcesses.push(currProcess._id)\n                    break\n                }\n            }\n        }\n    }\n    )\n    return stationProcesses\n}","\n// regex for time string\nexport const timeStringRegex = /^(?:(?:([01]?\\d|2[0-3]):)?([0-5]?\\d):)?([0-5]?\\d)$/\n\n// regex for OID's\nexport const oidRegex = /^([0-2])((\\.0)|(\\.[1-9][0-9]*))*$/\n\n// valid if input does NOT match \"broken\" or \"BROKEN\"\nexport const notBrokenRegex = /^(?!.*(broken|.*BROKEN))/;\n\n// valid if input does NOT match \"TASK DELETED\"\nexport const notTaskDeletedRegex = /^(?!.*(TASK DELETED))/;\n\nexport const hoursRegex = /^(2[0-4]|1[0-9]|0[0-9]|[0-9])$/\nexport const minutesRegex = /^(5[0-9]|4[0-9]|3[0-9]|2[0-9]|1[0-9]|[0-9])$/\nexport const secondsRegex = /^(5[0-9]|4[0-9]|3[0-9]|2[0-9]|1[0-9]|[0-9])$/","// TASKS types\nexport const TASKS = 'TASKS';\nexport const TASK = 'TASK';\n\nexport const ANALYSIS = 'ANALYSIS';\n\nexport const GET_TASKS = 'GET_TASKS'\nexport const GET_TASKS_STARTED = 'GET_TASKS_STARTED'\nexport const GET_TASKS_SUCCESS = 'GET_TASKS_SUCCESS'\nexport const GET_TASKS_FAILURE = 'GET_TASKS_FAILURE'\n\nexport const GET_TASK = 'GET_TASK'\nexport const GET_TASK_STARTED = 'GET_TASK_STARTED'\nexport const GET_TASK_SUCCESS = 'GET_TASK_SUCCESS'\nexport const GET_TASK_FAILURE = 'GET_TASK_FAILURE'\n\nexport const POST_TASK = 'POST_TASK'\nexport const POST_TASK_STARTED = 'POST_TASK_STARTED'\nexport const POST_TASK_SUCCESS = 'POST_TASK_SUCCESS'\nexport const POST_TASK_FAILURE = 'POST_TASK_FAILURE'\n\nexport const PUT_TASK = 'PUT_TASK'\nexport const PUT_TASK_STARTED = 'PUT_TASK_STARTED'\nexport const PUT_TASK_SUCCESS = 'PUT_TASK_SUCCESS'\nexport const PUT_TASK_FAILURE = 'PUT_TASK_FAILURE'\n\nexport const DELETE_TASK = 'DELETE_TASK'\nexport const DELETE_TASK_STARTED = 'DELETE_TASK_STARTED'\nexport const DELETE_TASK_SUCCESS = 'DELETE_TASK_SUCCESS'\nexport const DELETE_TASK_FAILURE = 'DELETE_TASK_FAILURE'\n\nexport const ADD_TASK = 'ADD_TASK'\nexport const SET_TASKS = 'SET_TASKS'\nexport const UPDATE_TASK = 'UPDATE_TASK'\nexport const UPDATE_TASKS = 'UPDATE_TASKS'\nexport const REMOVE_TASK = 'REMOVE_TASK'\nexport const REMOVE_TASKS = 'REMOVE_TASKS'\nexport const SET_TASK_ATTRIBUTES = 'SET_TASK_ATTRIBUTES'\nexport const VALIDATE_TASK = 'VALIDATE_TASK'\nexport const SELECT_TASK = 'SELECT_TASK'\nexport const SET_SELECTED_TASK = 'SET_SELECTED_TASK'\nexport const DESELECT_TASK = 'DESELECT_TASK'\nexport const EDITING_TASK = 'EDITING_TASK'\nexport const SET_SELECTED_HOVERING_TASK = 'SET_SELECTED_HOVERING_TASK'\nexport const SET_SHOW_ROUTE_CONFIRMATION = 'SET_SHOW_ROUTE_CONFIRMATION'\nexport const SET_ROUTE_CONFIRMATION_LOCATION = 'SET_ROUTE_CONFIRMATION_LOCATION'\nexport const AUTO_ADD_ROUTE = 'AUTO_ADD_ROUTE'\n","import axios from 'axios';\nimport { apiIPAddress } from '../settings/settings'\nimport * as log from 'loglevel';\n\nconst operator = 'tasks'\n\nexport async function getTasks() {\n    try {\n        const response = await axios({\n            method: 'get',\n            url: apiIPAddress() + operator,\n            headers: {\n                'X-API-Key': '123456',\n                'Access-Control-Allow-Origin': '*'\n            }\n        });\n\n        // Success 🎉\n        // log.debug('getTasks :res:',response);\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        // log.debug('getTasks: dataJson: ', dataJson)\n        return dataJson;\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            console.error('error.response.data', error.response.data);\n            console.error('error.response.status', error.response.status);\n            console.error('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            console.error('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            console.error('error.message', error.message);\n        }\n        throw error\n        console.error('error', error);\n    }\n\n\n};\n\nexport async function getTask(id) {\n    // log.debug('getTask: id: ', id)\n    try {\n        const response = await axios({\n            method: 'get',\n            url: apiIPAddress() + operator + '/' + id,\n            headers: {\n                'X-API-Key': '123456',\n                'Access-Control-Allow-Origin': '*'\n            }\n        });\n        // Success 🎉\n        // log.debug('getTask: response: ', response);\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        // log.debug('getTask: dataJson:', dataJson)\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            console.error('getTask: error.response.data', error.response.data);\n            console.error('getTask: error.response.status', error.response.status);\n            console.error('getTask: error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            console.error('getTask: error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            console.error('getTask: error.message', error.message);\n        }\n        throw error\n        console.error('getTask: error', error);\n    }\n\n\n};\n\nexport async function postTask(task) {\n    // log.debug('postTask task:',task, JSON.stringify(task));\n    try {\n        const response = await axios({\n            method: 'post',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'text/html',\n                'Access-Control-Allow-Origin': '*'\n            },  \n            url: apiIPAddress() + operator,\n            data: JSON.stringify(task)\n        });\n\n        // Success 🎉\n        // log.debug('postTask: response: ', response);\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        // log.debug('postTask: dataJson: ', dataJson)\n        return dataJson;\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            console.error('postTask: error.response.data', error.response.data);\n            console.error('postTask: error.response.status', error.response.status);\n            console.error('postTask: error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            console.error('postTask: error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            console.error('postTask: error.message', error.message);\n        }\n        throw error\n        console.error('postTask: error', error);\n    }\n\n\n};\n\nexport async function deleteTask(id) {\n    // log.debug('deleteTask: id:',id)\n\n    try {\n        const response = await axios({\n            method: 'delete',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'application/json',\n                'Access-Control-Allow-Origin': '*'\n            },\n            url: apiIPAddress() + operator + '/' + id\n        });\n\n        // Success 🎉\n        // log.debug('deleteTask: response',response);\n        const data = response.data;\n\n        return response;\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        throw error\n        log.debug('error', error);\n    }\n\n\n};\n\nexport async function putTask(task, id) {\n    try {\n        const response = await axios({\n            method: 'put',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'application/json',\n                'Access-Control-Allow-Origin': '*'\n            },\n            url: apiIPAddress() + operator + '/' + id,\n            data: JSON.stringify(task)\n        });\n\n        // Success 🎉\n        // log.debug('putTask: response: ',response);\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        // log.debug('putTask: dataJson:', dataJson)\n        return dataJson;\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        throw error\n        log.debug('error', error);\n    }\n\n\n}\n","import {\n    GET_TASKS_STARTED,\n    GET_TASKS_SUCCESS,\n    GET_TASKS_FAILURE,\n\n    POST_TASK_STARTED,\n    POST_TASK_SUCCESS,\n    POST_TASK_FAILURE,\n\n    PUT_TASK_STARTED,\n    PUT_TASK_SUCCESS,\n    PUT_TASK_FAILURE,\n\n    DELETE_TASK_STARTED,\n    DELETE_TASK_SUCCESS,\n    DELETE_TASK_FAILURE,\n\n    ADD_TASK,\n    SET_TASKS,\n    UPDATE_TASK,\n    UPDATE_TASKS,\n    REMOVE_TASK,\n    SET_TASK_ATTRIBUTES,\n    SELECT_TASK,\n    SET_SELECTED_TASK,\n    DESELECT_TASK,\n    EDITING_TASK,\n    REMOVE_TASKS,\n    SET_SELECTED_HOVERING_TASK,\n    SET_SHOW_ROUTE_CONFIRMATION,\n    SET_ROUTE_CONFIRMATION_LOCATION,\n    AUTO_ADD_ROUTE,\n} from '../types/tasks_types'\n\nimport { deepCopy } from '../../methods/utils/utils';\n\nimport * as api from '../../api/tasks_api'\nimport * as processesActions from \"./processes_actions\";\nimport * as dashboardsActions from \"./dashboards_actions\";\n\n// get\n// ******************************\nexport const getTasks = () => {\n    return async (dispatch) => {\n\n        function onStart() {\n            dispatch({ type: GET_TASKS_STARTED });\n        }\n        function onSuccess(response) {\n            dispatch({ type: GET_TASKS_SUCCESS, payload: response });\n            return response;\n        }\n        function onError(error) {\n            dispatch({ type: GET_TASKS_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const tasks = await api.getTasks();\n\n            const normalizedTasks = {}\n            tasks.map((task) => {\n                normalizedTasks[task._id] = task\n                return task\n            })\n\n            return onSuccess(normalizedTasks);\n        } catch (error) {\n            return onError(error);\n        }\n    };\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// get task details\n// ******************************\n// export const getTask = (task_id) => {\n//   return async dispatch => {\n\n//     function onStart() {\n//       dispatch({ type: GET_TASK_STARTED });\n//     }\n//     function onSuccess(response) {\n//       dispatch({ type: GET_TASK_SUCCESS, payload: response });\n//       return response;\n//     }\n//     function onError(error) {\n//       dispatch({ type: GET_TASK_FAILURE, payload: error });\n//       return error;\n//     }\n\n//     try {\n//       onStart();\n//       const task_details = await api.getTask(task_id);\n//       return onSuccess(task_details);\n//     } catch (error) {\n//       return onError(error);\n//     }\n//   };\n// };\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// post\n// ******************************\nexport const postTask = (task) => {\n    return async dispatch => {\n\n        function onStart() {\n            dispatch({ type: POST_TASK_STARTED });\n        }\n        const onSuccess = async (newTask) => {\n            await dispatch({ type: POST_TASK_SUCCESS, payload: newTask });\n            return newTask;\n        }\n        function onError(error) {\n            dispatch({ type: POST_TASK_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            if(!!task.new){\n                delete task.new\n            }\n            if(task.changed) {\n                delete task.changed\n            }\n            const newTask = await api.postTask(task);\n            return onSuccess(newTask);\n        } catch (error) {\n            return onError(error);\n        }\n    };\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// put\n// ******************************\nexport const putTask = (task, ID) => {\n    return async dispatch => {\n        function onStart() {\n            dispatch({ type: PUT_TASK_STARTED });\n        }\n        function onSuccess(updateTask) {\n            dispatch({ type: PUT_TASK_SUCCESS, payload: updateTask });\n            return updateTask;\n        }\n        function onError(error) {\n            dispatch({ type: PUT_TASK_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            let taskCopy = deepCopy(task)\n            if(!!taskCopy.new){\n                delete taskCopy.new\n            }\n            if(taskCopy.changed) {\n                delete taskCopy.changed\n            }\n            // delete taskCopy._id\n            const updateTask = await api.putTask(taskCopy, ID);\n            return onSuccess(updateTask)\n        } catch (error) {\n            return onError(error)\n        }\n    }\n}\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// delete\n// ******************************\nexport const deleteTask = (ID) => {\n    return async dispatch => {\n        function onStart() {\n            dispatch({ type: DELETE_TASK_STARTED });\n        }\n        function onSuccess(response) {\n            dispatch({ type: DELETE_TASK_SUCCESS, payload: ID });\n            return response;\n        }\n        function onError(error) {\n            dispatch({ type: DELETE_TASK_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            await api.deleteTask(ID);\n            return onSuccess(ID)\n        } catch (error) {\n            return onError(error)\n        }\n    }\n}\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// delete\n// ******************************\nexport const deleteRouteClean = (routeId) => {\n    return async (dispatch, getState) => {\n\n        // remove route from all dashboards\n        await dispatch(dashboardsActions.removeRouteFromAllDashboards(routeId))\n\n        // remove route from all processes\n        await dispatch(processesActions.removeRouteFromAllProcesses(routeId))\n\n        // delete route\n        await dispatch(deleteTask(routeId));\n    }\n}\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// PUT clean\n// ******************************\nexport const putRouteClean = (route, routeId) => {\n    return async (dispatch, getState) => {\n\n        // put task\n        await dispatch(putTask(route, routeId));\n\n        // remove buttons associated with route at dashboards at the wrong station\n        await dispatch(dashboardsActions.removeRouteFromWrongDashboards(route))\n\n        // handle adding buttons to dashboards\n        await dispatch(dashboardsActions.addRouteToDashboards(route))\n    }\n}\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// POST clean\n// ******************************\nexport const postRouteClean = (route) => {\n    return async (dispatch, getState) => {\n\n        // post route\n        await dispatch(postTask(route));\n\n        // remove buttons associated with route at dashboards at the wrong station\n        await dispatch(dashboardsActions.removeRouteFromWrongDashboards(route))\n\n        // handle adding buttons to dashboards\n        await dispatch(dashboardsActions.addRouteToDashboards(route))\n    }\n}\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n//\n// ******************************\nexport const saveFormRoute = (formRoute) => {\n    return async (dispatch) => {\n\n        // extract values\n        const {\n            unsaved,        // remove key\n            new: isNew,     // remove key\n            changed,        // remove key\n            needsSubmit,    // remove key\n            obj = {},\n            ...remainingRoute\n        } = formRoute\n        // get objectId\n        const {\n            _id: objectId\n        } = obj || {}\n\n        // create payload\n        const payload = {\n            ...remainingRoute,\n            obj: objectId\n        }\n\n        // create new route\n        if(isNew) {\n            await dispatch(postRouteClean(payload))\n        }\n\n        // update existing route\n        else {\n            await dispatch(putRouteClean(payload, payload._id))\n        }\n    }\n}\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n\nexport const addTask = (task) => {\n    return { type: ADD_TASK, payload: { task } }\n}\n\nexport const setTasks = (tasks) => {\n    return { type: SET_TASKS, payload: tasks}\n}\n\nexport const updateTask = (task) => {\n    return { type: UPDATE_TASK, payload: { task } }\n}\n\nexport const updateTasks = (tasks) => {\n    return { type: UPDATE_TASKS, payload: { tasks } }\n}\n\nexport const removeTask = (id) => {\n    return { type: REMOVE_TASK, payload: { id } }\n}\n\nexport const removeTasks = (ids) => {\n    return { type: REMOVE_TASKS, payload: { ids } }\n}\n\nexport const setTaskAttributes = (id, attr) => {\n    return { type: SET_TASK_ATTRIBUTES, payload: { id, attr } }\n}\n\nexport const selectTask = (id) => {\n    return { type: SELECT_TASK, payload: { id } }\n}\n\nexport const setSelectedTask = (task) => {\n    return { type: SET_SELECTED_TASK, payload: { task }}\n}\n\nexport const setSelectedHoveringTask = (task) => {\n    return { type: SET_SELECTED_HOVERING_TASK, payload: { task }}\n}\n\nexport const deselectTask = () => {\n    return { type: DESELECT_TASK }\n}\n\nexport const editingTask = (bool) => {\n    return { type: EDITING_TASK, payload: bool }\n}\n\nexport const showRouteConfirmation = (bool) => {\n    return { type: SET_SHOW_ROUTE_CONFIRMATION, payload: bool }\n}\n\nexport const setRouteConfirmationLocation = (id) => {\n    return { type: SET_ROUTE_CONFIRMATION_LOCATION, payload: id }\n}\n\nexport const autoAddRoute = (bool) => {\n    return { type: AUTO_ADD_ROUTE, payload: bool }\n}\n","import React, { useContext, useEffect, useRef, useState } from 'react'\n\n// components internal\nimport DropDownSearch from \"../../../../basic/drop_down_search_v2/drop_down_search\"\nimport RotateButton from \"../../../../basic/rotate_button/rotate_button\"\n\n// functions external\nimport PropTypes from 'prop-types'\nimport { ThemeContext } from \"styled-components\"\nimport { useSelector } from \"react-redux\"\nimport { isMobile } from \"react-device-detect\"\n\n// styles\nimport * as styled from \"../zone_header/zone_header.style\"\n\n// utils\nimport { getAllTemplateFields } from \"../../../../../methods/utils/lot_utils\"\nimport {\n    FIELD_DATA_TYPES,\n    LOT_FILTER_OPTIONS,\n    LOT_SORT_OPTIONS,\n    SORT_DIRECTIONS\n} from \"../../../../../constants/lot_contants\"\n\nconst LotSortBar = (props) => {\n\n    const {\n        sortMode,\n        setSortMode,\n        setSortDirection,\n    } = props\n\n    const lotTemplates = useSelector(state => { return state.lotTemplatesReducer.lotTemplates }) || {}\n\n    const [lotSortOptions, setLotSortOptions] = useState([...Object.values(LOT_SORT_OPTIONS)])\n    const [open, setOpen] = useState(isMobile ? false : true)\n\n    useEffect(() => {\n        const templateFields = getAllTemplateFields()\n\n        let tempLotSortOptions = [...Object.values(LOT_SORT_OPTIONS)]\n\n        templateFields.forEach((currTemplateField) => {\n\n            const {\n                dataType,\n                label\n            } = currTemplateField\n\n            if (dataType === FIELD_DATA_TYPES.DATE_RANGE) {\n                tempLotSortOptions.push({\n                    ...currTemplateField,\n                    label: `${label} (start)`,\n                    index: 0,\n                    fieldName: label\n                })\n                tempLotSortOptions.push({\n                    ...currTemplateField,\n                    label: `${label} (end)`,\n                    index: 1,\n                    fieldName: label\n                })\n            }\n            else {\n                tempLotSortOptions.push({\n                    ...currTemplateField,\n                    fieldName: label\n                })\n            }\n        })\n\n        setLotSortOptions(tempLotSortOptions)\n    }, [lotTemplates])\n\n    const themeContext = useContext(ThemeContext)\n\n    return (\n        <styled.ColumnContainer\n            open={open}\n            style={{\n                padding: open ? \".25rem 1rem 0 1rem\" : \"1rem\"\n            }}\n        >\n            <styled.Description\n                css={props.descriptionCss}\n                onClick={() => setOpen(!open)}\n            >\n                <styled.ExpandContractIcon\n                    className={open ? \"fas fa-chevron-down\" : \"fas fa-chevron-right\"}\n                    onClick={() => setOpen(!open)}\n                />\n                Sort\n            </styled.Description>\n            {open &&\n                <styled.ContentContainer>\n                    <styled.ItemContainer\n                        style={{\n                            flexWrap: \"nowrap\"\n                        }}\n                    >\n                        <styled.OptionContainer>\n                            <DropDownSearch\n                                valueCss={props.valueCss}\n                                options={lotSortOptions}\n                                onChange={(values) => {\n                                    // set sort mode\n                                    setSortMode(values[0])\n                                }}\n                                values={[sortMode]}\n                                labelField={\"label\"}\n                                valueField={\"label\"}\n                                schema={\"lots\"}\n                                style={{\n                                    borderTopRightRadius: 0,\n                                    borderBottomRightRadius: 0,\n                                    minWidth: \"15rem\",\n                                    maxWidth: \"15rem\",\n                                    background: themeContext.bg.tertiary\n                                }}\n                            />\n                            <RotateButton\n                                schema={\"lots\"}\n                                iconName1={\"fas fa-arrow-up\"}\n                                containerCss={styled.rotateButtonContainerCss}\n                                iconCss={styled.rotateButtonIconCss}\n                                onStateOne={() => {\n                                    // set sort direction\n                                    setSortDirection(SORT_DIRECTIONS.ASCENDING)\n                                }}\n                                onStateTwo={() => {\n                                    // set sort direction\n                                    setSortDirection(SORT_DIRECTIONS.DESCENDING)\n                                }}\n                            />\n                        </styled.OptionContainer>\n                    </styled.ItemContainer>\n                </styled.ContentContainer>\n            }\n        </styled.ColumnContainer>\n    )\n}\n\nLotSortBar.propTypes = {\n    setSortMode: PropTypes.func,\n    sortMode: PropTypes.any,\n    setSortDirection: PropTypes.func,\n}\n\nLotSortBar.defaultProps = {\n    sortMode: {},\n    setSortMode: () => { },\n    setSortDirection: () => { }\n}\n\nexport default LotSortBar\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as styled from \"../../zone_header/zone_header.style\";\n\nconst FlagButton = (props) => {\n\n\tconst {\n\t\tcolor,\n\t\tstyle,\n\t\tonClick,\n\t\t...rest\n\t} = props\n\n\treturn (\n\t\t<styled.FlagButton\n\t\t\tstyle={style}\n\t\t\ttype={\"button\"}\n\t\t\tcolor={color}\n\t\t\tclassName=\"fas fa-square\"\n\t\t\tonClick={onClick}\n\t\t\t{...rest}\n\t\t/>\n\t);\n};\n\nFlagButton.propTypes = {\n\tcolor: PropTypes.string,\n\tonClick: PropTypes.func\n};\n\nFlagButton.defaultTypes = {\n\tcolor: \"\",\n\tonClick: () => {},\n};\n\nexport default FlagButton;\n","import React, {useContext, useEffect, useRef, useState} from 'react'\n\n// components internal\nimport DropDownSearch from \"../../../../basic/drop_down_search_v2/drop_down_search\"\nimport Textbox from \"../../../../basic/textbox/textbox\"\nimport FlagButton from \"./flag_button/flag_button\"\nimport CalendarPlaceholder from \"../../../../basic/calendar_placeholder/calendar_placeholder\"\n\n// constants\nimport {\n    FIELD_DATA_TYPES, FLAG_OPTIONS,\n    LOT_FILTER_OPTIONS,\n} from \"../../../../../constants/lot_contants\"\nimport {BASIC_FIELD_DEFAULTS} from \"../../../../../constants/form_constants\"\n\n// functions external\nimport PropTypes from 'prop-types'\nimport {ThemeContext} from \"styled-components\"\nimport {useSelector} from \"react-redux\"\nimport { isMobile } from \"react-device-detect\"\n\n// utils\nimport {immutableDelete, immutableReplace, isArray, isNonEmptyArray} from \"../../../../../methods/utils/array_utils\"\nimport {getAllTemplateFields} from \"../../../../../methods/utils/lot_utils\"\n\n// styles\nimport * as styled from \"../zone_header/zone_header.style\"\nimport AdvancedCalendarPlaceholderButton\n    , {FILTER_DATE_OPTIONS} from \"../../../../basic/advanced_calendar_placeholder_button/advanced_calendar_placeholder_button\"\nimport {newPositionTemplate} from \"../../../../../constants/position_constants\";\n\nconst VALUE_MODES = {\n    TEXT_BOX: \"TEXT_BOX\",\n    DATE_RANGE: \"DATE_RANGE\",\n    SINGLE_DATE: \"SINGLE_DATE\",\n    FLAGS: \"FLAGS\"\n}\n\nconst LotFilterBar = (props) => {\n\n    const {\n        setLotFilterValue,\n        lotFilterValue,\n        selectedFilterOption,\n        setSelectedFilterOption,\n        shouldFocusLotFilter,\n    } = props\n\n    // theme\n    const themeContext = useContext(ThemeContext)\n\n    // redux state\n    const lotTemplates = useSelector(state => {return state.lotTemplatesReducer.lotTemplates}) || {}\n\n    // component state\n    const [lotFilterOptions, setLotFilterOptions] = useState([...Object.values(LOT_FILTER_OPTIONS)])    // array of options for field to filter by\n    const [open, setOpen] = useState(isMobile ? shouldFocusLotFilter : true) // is filter options open ?\n    const [valueMode, setValueMode] = useState()      // used as var in switch statement to control what component to render for entering filter value (ex: use a textbox for strings, calendar picker for dates)\n\n    /*\n    * This effect is used to set valueMode based on the current selected filter option (name / date type)\n    * */\n    useEffect(() => {\n        const {\n            label,\n            dataType\n        } = selectedFilterOption || {}\n\n\n        // for flags, use flags mode\n        if(label === LOT_FILTER_OPTIONS.flags.label) {\n            setValueMode(VALUE_MODES.FLAGS)\n        }\n\n        // for date range, use date range mode\n        else if(dataType === FIELD_DATA_TYPES.DATE_RANGE) {\n            setValueMode((VALUE_MODES.DATE_RANGE))\n        }\n\n        // for date, use date mode\n        else if(dataType === FIELD_DATA_TYPES.DATE) {\n            setValueMode(VALUE_MODES.SINGLE_DATE)\n        }\n\n        // everything else, use a text box\n        else {\n          setValueMode(VALUE_MODES.TEXT_BOX)\n        }\n\n    }, [selectedFilterOption])\n\n    /*\n    * This effect is used to set the filter options\n    *\n    * This is dependent on lotTemplates, as the available fields may change when a template does\n    * */\n    useEffect(() => {\n        const templateFields = getAllTemplateFields()\n\n        let tempLotFilterOptions = [...Object.values(LOT_FILTER_OPTIONS)]\n\n        templateFields.forEach((currTemplateField) => {\n            const {\n                dataType,\n                label\n            } = currTemplateField\n\n            tempLotFilterOptions.push(currTemplateField)\n        })\n\n        setLotFilterOptions(tempLotFilterOptions)\n    }, [lotTemplates])\n\n\n\n    return (\n        <styled.ColumnContainer\n            open={open}\n            style={{\n                flex: (open && valueMode === VALUE_MODES.TEXT_BOX) && 1,\n                padding: open ? \".25rem 1rem 0 1rem\" : \"1rem\",\n                maxWidth: valueMode === VALUE_MODES.TEXT_BOX && \"30rem\"\n            }}\n        >\n            <styled.Description\n                css={props.descriptionCss}\n                onClick={()=>setOpen(!open)}\n            >\n                <styled.ExpandContractIcon\n                    className={open ? \"fas fa-chevron-down\" : \"fas fa-chevron-right\"}\n                    onClick={()=>setOpen(!open)}\n                />\n                Filter\n            </styled.Description>\n\n            {/* only show content when open */}\n            {open &&\n            <styled.ContentContainer>\n                <styled.ItemContainer>\n                    <styled.OptionContainer>\n                        <DropDownSearch\n                            // reactDropdownSelectCss={props.reactDropdownSelectCss}\n                            // dropdownCss={props.dropdownCss}\n                            // valueCss={props.valueCss}\n                            options={lotFilterOptions}\n                            onChange={(values) => {\n                                // *** selected new option ***\n                                const newFilterOption = values[0]\n\n                                // updated selectedFilterOption\n                                setSelectedFilterOption(newFilterOption)\n                                const {\n                                    dataType\n                                } = newFilterOption\n\n                                // update filter value to appropriate default based on dataType\n\n                                let newFilterValue = null // null is suitable for most, use as default\n                                switch(dataType) {\n                                    case FIELD_DATA_TYPES.DATE_RANGE:\n                                        newFilterValue = BASIC_FIELD_DEFAULTS.CALENDAR_FIELD_RANGE\n                                        break\n                                    case FIELD_DATA_TYPES.DATE:\n                                        newFilterValue = BASIC_FIELD_DEFAULTS.CALENDAR_FIELD\n                                        break\n                                }\n                                setLotFilterValue(newFilterValue)\n                            }}\n                            values={[selectedFilterOption]}\n                            labelField={\"label\"}\n                            valueField={\"label\"}\n                            schema={\"lots\"}\n                            style={{\n                                minWidth: \"15rem\",\n                                maxWidth: \"15rem\",\n                                overflow: 'visible',\n                                background: themeContext.bg.tertiary,\n                            }}\n                            containerStyle={{\n                                marginRight: \"1rem\",\n                            }}\n                        />\n                    </styled.OptionContainer>\n\n                    <styled.OptionContainer\n                    style={{flex:1}}>\n                        { // render different component for entering value depending on value type\n                            {\n                                [VALUE_MODES.FLAGS]:\n                                    <div\n                                        style={{flex: 3}}\n                                    >\n                                        <DropDownSearch\n                                            multi={true}\n                                            options={Object.values(FLAG_OPTIONS)}\n                                            onChange={(values) => {\n                                                setLotFilterValue(values)\n                                            }}\n                                            onRemoveItem={(values) => {\n                                                setLotFilterValue(values)\n                                            }}\n                                            onClearAll={() => {\n                                                setLotFilterValue([])\n                                            }}\n                                            labelField={\"id\"}\n                                            valueField={\"id\"}\n                                            schema={\"lots\"}\n                                            contentRenderer={({ props, state, methods }) => {\n\n                                                const {\n                                                    values = []\n                                                } = state || {}\n                                                const value = state.values[0]\n\n                                                return (\n                                                    <styled.FlagsContainer style={{minWidth: '4rem', paddingRight: '1rem'}}>\n                                                        {isArray(values) && values.map(currVal => {\n                                                            const {\n                                                                color: currColor,\n                                                                id: currColorId\n                                                            } = currVal || {}\n\n                                                            return (\n                                                                <styled.FlagButton\n                                                                    style={{\n                                                                        margin: \"0rem .1rem\",\n                                                                    }}\n                                                                    key={currColorId}\n                                                                    type={\"button\"}\n                                                                    color={currColor}\n                                                                    onClick={(event) => {\n                                                                        event.stopPropagation()\n                                                                        methods.dropDown('open')\n                                                                    }}\n                                                                    schema={props.schema}\n                                                                    className=\"fas fa-square\"\n                                                                />\n                                                            )\n                                                        })}\n\n                                                    </styled.FlagsContainer>\n                                                )\n                                            }}\n                                            itemRenderer={({ item, itemIndex, props, state, methods }) => {\n                                                const {\n                                                    color: currColor,\n                                                    id: currColorId\n                                                } = item\n\n                                                const isSelected = methods.isSelected(item)\n\n                                                return(\n                                                    <FlagButton\n                                                        style={{\n                                                            paddingTop: \".5rem\",\n                                                            paddingBottom: \".5rem\",\n                                                        }}\n                                                        selected={isSelected}\n                                                        key={currColorId}\n                                                        type={\"button\"}\n                                                        color={currColor}\n                                                        role=\"option\"\n                                                        tabIndex=\"-1\"\n                                                        onClick={item.disabled ? undefined : () => methods.addItem(item)}\n                                                        onKeyPress={item.disabled ? undefined : () => methods.addItem(item)}\n                                                        schema={props.schema}\n                                                        className={isSelected ? \"fas fa-check-square\" : \"fas fa-square\"}\n                                                    />\n                                                )\n                                            }}\n                                            style={{\n                                                minWidth: \"10rem\",\n                                                flex: 1,\n                                                background: themeContext.bg.tertiary,\n                                                alignSelf: \"stretch\",\n                                            }}\n                                        />\n                                    </div>,\n\n                                [VALUE_MODES.TEXT_BOX]:\n                                    <Textbox\n                                        placeholder='Filter lots...'\n                                        onChange={(e) => {\n                                            setLotFilterValue(e.target.value)\n                                        }}\n                                        focus={shouldFocusLotFilter}\n                                        inputStyle={{\n                                            height: \"100%\",\n                                            background: themeContext.bg.tertiary,\n                                        }}\n                                        style={{\n                                            alignSelf: \"stretch\",\n                                            flex: 1,\n                                            minWidth: \"5rem\"\n                                            // width: \"5rem\"\n                                        }}\n                                        schema={\"lots\"}\n                                    />,\n                                [VALUE_MODES.DATE_RANGE]:\n                                    <CalendarPlaceholder\n                                        schema={\"lots\"}\n                                        PlaceholderButton={<AdvancedCalendarPlaceholderButton\n                                            filterValue={lotFilterValue}\n                                            onOptionClick={(index, option) => {\n\t\t\t\t\t\t\t\t\t\t\t\t// this function toggles option in lotFilerValue at index\n\n                                                const {\n                                                    options: prevOptions = []\n                                                } = lotFilterValue[index] || {}\n\n                                                // spread current options\n                                                let newOptions = [...prevOptions]\n\n                                                // get index of new option (if it exists)\n                                                const optionIndex = prevOptions.indexOf(option)\n\n                                                // if it doesn't exist, add it\n                                                if(optionIndex === -1) {\n                                                    const equalsIndex = prevOptions.indexOf(FILTER_DATE_OPTIONS.EQUAL)\n                                                    if(equalsIndex !== -1) {\n                                                        /*\n                                                            if we are adding the \"greater than\" condition\n                                                                check if less than condition already exists\n                                                                remove it if it does, as having less than, equal to, and greater than would include everything, which is pointless\n                                                        */\n                                                        if(option === FILTER_DATE_OPTIONS.GREATER_THAN) {\n                                                            const lessThanIndex = prevOptions.indexOf(FILTER_DATE_OPTIONS.LESS_THAN)\n                                                            if(lessThanIndex !== -1) {\n                                                                newOptions = immutableDelete(newOptions, lessThanIndex)\n                                                            }\n                                                        }\n\n                                                        /*\n                                                            if we are adding the \"less than\" condition\n                                                                check if greater than condition already exists\n                                                                remove it if it does, as having less than, equal to, and greater than would include everything, which is pointless\n                                                         */\n                                                        else if(option === FILTER_DATE_OPTIONS.LESS_THAN) {\n                                                            const greaterThanIndex = prevOptions.indexOf(FILTER_DATE_OPTIONS.GREATER_THAN)\n                                                            if(greaterThanIndex !== -1) {\n                                                                newOptions = immutableDelete(newOptions, greaterThanIndex)\n                                                            }\n                                                        }\n                                                    }\n                                                    else {\n                                                        // if we are adding equals condition, and the current number of conditions is one less than the max, adding the equals will have all conditions, which does not filtering, so remove one\n                                                        if(prevOptions.length === Object.values(FILTER_DATE_OPTIONS).length - 1) {\n                                                            newOptions = immutableDelete(newOptions, 0)\n                                                        }\n                                                    }\n\n                                                    newOptions.push(option)\n                                                }\n                                                // if it does, remove it\n                                                else {\n                                                    newOptions = immutableDelete(newOptions, optionIndex)\n                                                }\n\n                                                // set filterValue with updated option\n                                                setLotFilterValue(immutableReplace(lotFilterValue, {\n                                                    ...lotFilterValue[index],\n                                                    options: newOptions\n                                                }, index))\n                                            }}\n                                        />}\n                                        minDate={isNonEmptyArray(lotFilterValue) ? lotFilterValue[0]?.value : null}\n                                        maxDate={isNonEmptyArray(lotFilterValue) ? lotFilterValue[1]?.value : null}\n                                        value={isNonEmptyArray(lotFilterValue) ? lotFilterValue.map((currValue) => currValue?.value) : BASIC_FIELD_DEFAULTS.CALENDAR_FIELD_RANGE}\n                                        containerStyle={{\n                                            background: \"transparent\",\n                                            padding: \"0\",\n                                            margin: 0,\n                                        }}\n                                        onChange={(val) => {\n                                            // this function updates lot filter value\n\n                                            setLotFilterValue(val.map((currItem, currIndex) => {\n                                                const prevValue = isNonEmptyArray(lotFilterValue) ? lotFilterValue[currIndex] : {} // previous value\n                                                return {\n                                                    options: [FILTER_DATE_OPTIONS.EQUAL],   // default to use EQUALS option\n                                                    ...prevValue,                           // spread previous attributes\n                                                    value: currItem,                        // update value\n                                                }\n                                            }))\n                                        }}\n                                        usable={true}\n                                        selectRange={true}\n                                    />,\n                                [VALUE_MODES.SINGLE_DATE]:\n                                    <CalendarPlaceholder\n                                        schema={\"lots\"}\n                                        PlaceholderButton={<AdvancedCalendarPlaceholderButton\n                                            filterValue={lotFilterValue}\n                                            onOptionClick={(index, option) => {\n                                                // this function toggles option in lotFilerValue (index ignored since its single value)\n                                                const {\n                                                    options: prevOptions = []\n                                                } = lotFilterValue || {}\n\n                                                // spread prev options\n                                                let newOptions = [...prevOptions]\n\n                                                // get index of option (if it exists)\n                                                const optionIndex = prevOptions.indexOf(option)\n\n                                                // if it doesn't exist, add it\n                                                if(optionIndex === -1) {\n                                                    const equalsIndex = prevOptions.indexOf(FILTER_DATE_OPTIONS.EQUAL)\n                                                    if(equalsIndex !== -1) {\n                                                        /*\n                                                            if we are adding the \"greater than\" condition\n                                                                check if less than condition already exists\n                                                                remove it if it does, as having less than, equal to, and greater than would include everything, which is pointless\n                                                        */\n                                                        if(option === FILTER_DATE_OPTIONS.GREATER_THAN) {\n                                                            const lessThanIndex = prevOptions.indexOf(FILTER_DATE_OPTIONS.LESS_THAN)\n                                                            if(lessThanIndex !== -1) {\n                                                                newOptions = immutableDelete(newOptions, lessThanIndex)\n                                                            }\n                                                        }\n\n                                                        /*\n                                                            if we are adding the \"less than\" condition\n                                                                check if greater than condition already exists\n                                                                remove it if it does, as having less than, equal to, and greater than would include everything, which is pointless\n                                                         */\n                                                        else if(option === FILTER_DATE_OPTIONS.LESS_THAN) {\n                                                            const greaterThanIndex = prevOptions.indexOf(FILTER_DATE_OPTIONS.GREATER_THAN)\n                                                            if(greaterThanIndex !== -1) {\n                                                                newOptions = immutableDelete(newOptions, greaterThanIndex)\n                                                            }\n                                                        }\n                                                    }\n                                                    else {\n                                                        // if we are adding equals condition, and the current number of conditions is one less than the max, adding the equals will have all conditions, which does not filtering, so remove one\n                                                        if(prevOptions.length === Object.values(FILTER_DATE_OPTIONS).length - 1) {\n                                                            newOptions = immutableDelete(newOptions, 0)\n                                                        }\n                                                    }\n\n                                                    newOptions.push(option)\n                                                }\n\n                                                // if it does exist, remove it\n                                                else {\n                                                    newOptions = immutableDelete(newOptions, optionIndex)\n                                                }\n\n                                                // update filter value with updated options\n                                                setLotFilterValue({\n                                                    ...lotFilterValue,\n                                                    options: newOptions\n                                                })\n                                            }}\n                                        />}\n                                        containerStyle={{\n                                            width: \"8rem\",\n                                            height: \"36px\",\n                                            boxShadow: \"0 0.1rem 0.2rem 0rem rgba(0,0,0,0.1)\",\n                                        }}\n                                        value={lotFilterValue?.value}\n                                        onChange={(val) => {\n                                            // update filer value\n                                            setLotFilterValue({\n                                                options: [FILTER_DATE_OPTIONS.EQUAL],   // by default, use EQUAL condition\n                                                ...lotFilterValue,                      // include previous attributes (also prevents overwriting conditions with the equal that was just added if conditions have already been set)\n                                                value: val,                             // set the actual value\n                                            })\n                                        }}\n                                        usable={true}\n                                    />\n                            }[valueMode] ||\n                            null\n                        }\n                    </styled.OptionContainer>\n                </styled.ItemContainer>\n            </styled.ContentContainer>\n            }\n        </styled.ColumnContainer>\n    )\n}\n\nLotFilterBar.propTypes = {\n    setLotFilterValue: PropTypes.func,\n    lotFilterValue: PropTypes.any,\n    selectedFilterOption: PropTypes.object,\n    setSelectedFilterOption: PropTypes.func,\n    shouldFocusLotFilter: PropTypes.bool,\n}\n\nLotFilterBar.defaultProps = {\n    setLotFilterValue: () => {},\n    lotFilterValue: null,\n    selectedFilterOption: () => {},\n    setSelectedFilterOption: () => {},\n    shouldFocusLotFilter: false,\n}\n\nexport default LotFilterBar\n","import { useEffect } from \"react\";\n\n// custom hook that listens for clicks outside of the ref component,\n// and calls the provided handler when outside click is detected\nfunction useOnClickOutside(ref, handler) {\n    useEffect(\n        () => {\n            const listener = event => {\n                // Do nothing if clicking ref's element or descendent elements\n                if (!ref.current || ref.current.contains(event.target)) {\n                    return;\n                }\n\n                handler(event)\n            }\n\n            document.addEventListener('mousedown', listener, {passive:true})\n            document.addEventListener('touchstart', listener, {passive:true})\n\n            return () => {\n                document.removeEventListener('mousedown', listener, {passive:true})\n                document.removeEventListener('touchstart', listener, {passive:true})\n            }\n        },\n        // Add ref and handler to effect dependencies\n        // It's worth noting that because passed in handler is a new ...\n        // ... function on every render that will cause this effect ...\n        // ... callback/cleanup to run every render. It's not a big deal ...\n        // ... but to optimize you can wrap handler in useCallback before ...\n        // ... passing it into this hook.\n        [ref, handler]\n    )\n}\n\nexport default useOnClickOutside\n\n// EXAMPLE\n\n// // Usage\n// function App() {\n//     // Create a ref that we add to the element for which we want to detect outside clicks\n//     const ref = useRef();\n//     // State for our modal\n//     const [isModalOpen, setModalOpen] = useState(false);\n//     // Call hook passing in the ref and a function to call on outside click\n//     useOnClickOutside(ref, () => setModalOpen(false));\n\n//     return (\n//       <div>\n//         {isModalOpen ? (\n//           <div ref={ref}>\n//             👋 Hey, I'm a modal. Click anywhere outside of me to close.\n//           </div>\n//         ) : (\n//           <button onClick={() => setModalOpen(true)}>Open Modal</button>\n//         )}\n//       </div>\n//     );\n//   }\n","export const SET_CONDITIONS_API = 'SET_CONDITIONS_API';\nexport const SET_SCHEDULES_API = 'SET_SCHEDULES_API';\nexport const SET_DASHBOARDS_API = 'SET_DASHBOARDS_API';\nexport const SET_SKILLS_API = 'SET_SKILLS_API';\nexport const SET_DASHBOARD_BUTTONS_API = 'SET_DASHBOARD_BUTTONS_API';\nexport const SET_STATUS_API = 'SET_STATUS_API';\nexport const SET_TASK_QUEUE_API = 'SET_TASK_QUEUE_API';\nexport const SET_TASKS_API = 'SET_TASKS_API';\nexport const STOP_API_CALLS = 'STOP_API_CALLS'\n\nexport const GET_ = 'GET_';\nexport const POST_ = 'POST_';\nexport const DELETE_ = 'DELETE_';\nexport const PUT_ = 'PUT_';\n\nexport const _STARTED = '_STARTED';\nexport const _SUCCESS = '_SUCCESS';\nexport const _FAILURE = '_FAILURE';\n","import styled, {css} from 'styled-components'\nimport {hexToRGBA, RGB_Linear_Shade, LightenDarkenColor} from \"../../../methods/utils/color_utils\";\n\nconst activeStyle = css`\n\tbox-shadow: none;\n\ttransform: translateY(0px);\n\tcolor:  ${props => RGB_Linear_Shade(-0.1, hexToRGBA(props.color))};\n\tbackground-color:  ${props => RGB_Linear_Shade(-0.1, hexToRGBA(props.backgroundColor))};\n`\n\nconst hoverStyle = css`\n\tbox-shadow: 0px 5px 2px -2px rgba(0, 0, 0, 0.3);\n\ttransform: translateY(-1px);\n\tcolor:  ${props => RGB_Linear_Shade(0.01, hexToRGBA(props.color))};\n\tbackground-color:  ${props => RGB_Linear_Shade(0.01, hexToRGBA(props.backgroundColor))};\n`\n\nexport const Container = styled.button`\n  width: ${props => props.width};\n  height: ${props => props.height};\n  color: ${props => props.theme.fg.red};\n  \n  // flex layout\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\t\n  // margins\n  margin: 0;\n  \n  outline: none;\n  &:focus {\n\toutline: none;\n  }\n  \n\tborder: thin solid ${props => props.theme.bg.tertiary};\n\tborder-radius: .5rem;\n\t// box-shadow: 1px 1px 5px rgba(0, 0, 0, 0.5);\n\ttransition: all 0.2s ease 0s;\n\tcursor: pointer;\n\toutline: none;\n\t\n  \n  \n  &:hover {\n\t${props => props.hoverable && hoverStyle}\n  }\n  \n  &:active {\n\t${props => props.clickable && activeStyle}\n  }\n  \n//   ${props=> props.active && activeStyle}\n  \n  &:focus {\n    outline: none;\n  }\n  \n  ${props => props.disabled &&\n\t{\n\t\t// backgroundImage: `linear-gradient(to bottom right, grey, white)`,\n\t\tpointerEvents: \"none\",\n\t}\n\t\n\t\n}\n  \n\tbackground-color: ${props => LightenDarkenColor(props.theme.bg.tertiary,20)};\n\tpadding: .5rem;\n`\n","import React, {useEffect, useRef, useState} from 'react'\nimport PropTypes from 'prop-types'\n\n// Import Styles\nimport * as style from './bounce_button.style'\nimport DashboardButton from \"../../widgets/widget_pages/dashboards_page/dashboard_buttons/dashboard_button/dashboard_button\"\nimport useOnClickOutside from \"../../../hooks/useOnClickOutside\";\n\nconst BounceButton = (props => {\n\n    const {\n        color,\n        children,\n        onClick,\n        disabled,\n        width,\n        height,\n        clickable,\n        hoverable,\n        containerStyle,\n        Component,\n        backgroundColor,\n        active,\n        onClickOutside\n    } = props\n\n    const ref = useRef() // ref for useOnClickOutside\n    useOnClickOutside(ref, onClickOutside) // calls onClickOutside when click outside of element\n\n    return(\n        <style.Container\n            disabled={disabled}\n            width={width}\n            height={height}\n            onClick={onClick}\n            clickable={clickable}\n            hoverable={hoverable}\n            color={color}\n            backgroundColor={backgroundColor}\n            style={containerStyle}\n            active={active}\n            ref={ref}\n        >\n            { children}\n        </style.Container>\n    )\n\n})\n\n\n// Specifies propTypes\nBounceButton.propTypes = {\n    clickable: PropTypes.bool,\n    hoverable: PropTypes.bool,\n    active: PropTypes.bool,\n    onClick: PropTypes.func,\n    onClickOutside: PropTypes.func,\n    disabled: PropTypes.bool\n}\n\n// Specifies the default values for props:\nBounceButton.defaultProps = {\n    clickable: true,\n    hoverable: true,\n    onClick: () => {},\n    onClickOutside: () => {},\n    disabled: false,\n    width: \"auto\",\n    height: \"auto\",\n    backgroundColor: \"#FFFFFF\",\n    active: false,\n\n}\n\nexport default BounceButton\n","import styled, { css } from 'styled-components'\n\nexport const Container = styled.div`\n  position: relative;\n  overflow: hidden;\n  align-self: stretch;\n  display: flex;\n  flex-direction: ${props => props.axis === 'y' ? 'column' : 'row'};\n`\n\nexport const ScrollContainer = styled.div`\n  display: flex;\n  flex-direction: ${props => props.axis === 'y' ? 'column' : 'row'};\n  position: relative;\n  overflow-y: auto;\n  overflow-x: auto;\n  align-self: stretch;\n  align-items: center;\n  flex: 1;\n`\n\nexport const ContentContainer = styled.div`\n\theight: fit-content;\n\tmin-height: fit-content;\n  display: flex;\n  flex-direction: ${props => props.axis === 'y' ? 'column' : 'row'};\n  padding: 0 1rem;\n\t//max-height: fit-content;\n  //background: pink;\n  align-items: center;\n  \n  \n  align-self: stretch;\n`\n\nexport const Divider = styled.div`\n    border: 0;\n    position: absolute;\n    height: ${props => props.axis === 'y' ? '1px' : '100%'};\n    top: 0;\n    left: 0;\n    background: transparent;\n    box-shadow: ${props => props.axis === 'y' ?  'inset 0 12px 12px -12px rgba(0, 0, 0, 0.75)': 'inset 12px 0 12px -10px  rgba(0, 0, 0, 0.75)'};\n    width: ${props => props.axis === 'y' ?  '100%': '1px'};\n    padding-bottom: ${props => props.axis === 'y' ?  '12px': '0'};\n    padding-right: ${props => props.axis === 'x' ?  '12px': '0'};\n    z-index: 10000;\n  \n  opacity: ${props => props.visible ? 1 : 0};\n  transition: opacity ${props => props.transition} ease;\n`\n\n","import React, {useEffect, useRef, useState} from 'react'\n\n// functions extenral\nimport PropTypes from 'prop-types'\n\n// hooks\nimport useScrollInfo from \"../../../hooks/useScrollInfo\"\n\n// styles\nimport * as styled from \"./scroll_container.style\"\n\n\nconst ScrollContainer = (props) => {\n\n\tconst {\n\t\tchildren,\n\t\taxis,\n\t\tsetScrolling,\n\t\tcontainerStyle,\n\t\tthreshold,\n\t\tdividerTransition\n\t} = props\n\n\tconst [scrollInfo, setRef] = useScrollInfo()\n\n\tconst [showDivider, setShowDivider] = useState(false)\n\n\tuseEffect(() => {\n\t\tsetShowDivider(axis === 'y' ? scrollInfo?.y?.value > threshold : scrollInfo?.x?.value > threshold)\n\t\tsetScrolling(axis === 'y' ? scrollInfo?.y?.value > threshold : scrollInfo?.x?.value > threshold)\n\n\t\treturn () => {\n\n\t\t}\n\t}, [scrollInfo])\n\n\treturn (\n\t\t<styled.Container\n\t\t\tstyle={containerStyle}\n\t\t>\n\t\t\t<styled.Divider axis={axis} visible={showDivider} transition={dividerTransition}/>\n\n\t\t\t<styled.ScrollContainer\n\t\t\t\tref={setRef}\n\t\t\t>\n\t\t\t\t<styled.ContentContainer>\n\t\t\t\t\t{children}\n\t\t\t\t</styled.ContentContainer>\n\t\t\t</styled.ScrollContainer>\n\t\t</styled.Container>\n\t)\n}\n\nScrollContainer.propTypes = {\n\tchildren: PropTypes.any,\n\tthreshold: PropTypes.number,\n\tdividerTransition: PropTypes.string,\n}\n\nScrollContainer.defaultProps = {\n\taxis: 'y',\n\tsetScrolling: () => null,\n\tthreshold: 1,\n\tdividerTransition: '0s'\n}\n\nexport default ScrollContainer\n","import styled from 'styled-components'\nimport { hexToRGBA, LightenDarkenColor } from '../../../methods/utils/color_utils'\n\nexport const TextboxContainer = styled.div`\n    ${props => props.flex &&\n        `\n        display: flex;\n        flex-grow: 1`\n    }\n\n    padding: 0;\n    margin: 0;\n\n    position: relative;\n`\n\n\nexport const TextboxLabel = styled.h1`\n    font-size: ${props => props.theme.fontSize.sz2};\n    font-family: ${props => props.theme.font.primary};\n    color: ${props => props.theme.bg.octonary};\n    margin-top: .6rem;\n    margin-right: 0.5rem;\n    line-height: 1rem;\n`;\n\nexport const TextboxInput = styled.input`\n    background-color: ${props => props.theme.bg.secondary};\n    border: none;\n    font-size: ${props => props.theme.fontSize.sz4};\n    font-family: ${props => props.theme.font.primary};\n    font-weight: 500;\n    display: flex;\n    flex-grow: 1;\n    color: ${props => props.theme.bg.octonary};\n\n    box-shadow: 0 0.1rem 0.2rem 0rem rgba(0,0,0,0.1);\n    border-bottom: 2px solid ${props => props.theme.bg.secondary};\n\n    &:focus {\n        background-color: ${props => props.theme.bg.secondary};\n        border-bottom: 2px solid ${props => !!props.schema ? props.theme.schema[props.schema].solid : props.theme.schema.default.solid};\n        color: ${props => props.theme.bg.octonary};\n        outline: none !important;\n    }\n\n    &::placeholder {\n        font-family: ${props => props.theme.font.secondary};\n        color: ${props => props.theme.bg.senary};\n    }\n`;\n\nexport const FakeTextboxInput = styled.div`\n    background-color: ${props => props.theme.bg.secondary};\n    border: none;\n    font-size: ${props => props.theme.fontSize.sz4};\n    font-family: ${props => props.theme.font.primary};\n    font-weight: 500;\n    display: flex;\n    flex-grow: 1;\n    color: ${props => props.theme.bg.octonary};\n\n    box-shadow: 0 0.1rem 0.2rem 0rem rgba(0,0,0,0.1) !important;\n    border-bottom: 2px solid ${props => props.theme.bg.secondary};\n\n    &:focus {\n        border-bottom: 2px solid ${props => !!props.schema ? props.theme.schema[props.schema].solid : props.theme.fg.primary};\n        color: ${props => props.theme.bg.octonary};\n        outline: none !important;\n    }\n\n    &::placeholder {\n        font-family: ${props => props.theme.font.secondary};\n        color: ${props => props.theme.bg.senary};\n    }\n`;\n\nexport const TextboxArea = styled.textarea`\n    background-color: ${props => props.theme.bg.secondary};\n    border: none;\n    font-size: ${props => props.theme.fontSize.sz4};\n    font-family: ${props => props.theme.font.primary};\n    font-weight: 500;\n    display: flex;\n    flex-grow: 1;\n    color: ${props => props.theme.bg.octonary};\n    \n    resize: ${props => props.readOnly && 'none'};\n\n    box-shadow: 0 0.1rem 0.2rem 0rem rgba(0,0,0,0.1) !important;\n    border-bottom: 2px solid ${props => props.theme.bg.secondary};\n\n    &:focus {\n        background-color: ${props => props.theme.bg.secondary};\n        border-bottom: 2px solid ${props => !!props.schema ? props.theme.schema[props.schema].solid : props.theme.schema.default.solid};\n        color: ${props => props.theme.bg.octonary};\n        outline: none !important;\n    }\n\n    &::placeholder {\n        font-family: ${props => props.theme.font.secondary};\n        color: ${props => props.theme.bg.senary};\n    }\n`;\n","import React, { useEffect, useRef } from 'react'\nimport * as styled from './textbox.style'\n\nexport default function Textbox(props) {\n\n    let InputComponent;\n    if (props.lines) { InputComponent = props.inputAreaComponent }\n    else { InputComponent = props.inputComponent }\n\n    const inputRef = useRef(null)\n\n    useEffect(() => {\n        if (props.focus == true) {\n            inputRef.current.focus()\n        }\n    }, [props.focus])\n\n    useEffect(() => {\n        if (props.keepFocus === true) {\n            inputRef.current.focus()\n        }\n    })\n\n    return (\n        <React.Fragment>\n            {(!props.inline && props.label) && <styled.TextboxLabel style={props.labelStyle}>{props.label}</styled.TextboxLabel>}\n            <styled.TextboxContainer className=\"form-group\" style={{ ...props.style }}>\n                {props.inline && <styled.TextboxLabel style={props.labelStyle}>{props.label}</styled.TextboxLabel>}\n                <InputComponent\n                    ref={inputRef}\n                    className={\"form-control \" + props.className}\n                    placeholder={props.placeholder}\n                    style={{...props.inputStyle}}\n                    value={props.value}\n                    onChange={props.onChange}\n                    onKeyPress={props.onKeyPress}\n                    rows={props.lines}\n                    type={props.type}\n                    defaultValue={props.defaultValue}\n                    disabled={props.disabled || !props.usable}\n                    readOnly={props.readOnly || !props.usable}\n                    schema={props.schema}\n                    onBlur={props.onBlur}\n                    onFocus={props.onFocus}\n                    style={props.inputStyle}\n                />\n                {props.tooltip}\n            </styled.TextboxContainer>\n        </React.Fragment>\n    )\n\n}\n\nTextbox.defaultProps = {\n    inputAreaComponent: styled.TextboxArea,\n    inputComponent: styled.TextboxInput,\n    autofocus: false,\n    flex: false,\n    usable: true,\n    inline: false,\n    labelStyle: null,\n    onBlur: () => { },\n    onFocus: () => { },\n}\n","import styled, { css } from 'styled-components';\n\nexport const Container = styled.div`\n    width: 100%;\n    background: transparent;\n    border-color: transparent;\n    border-width: 0;\n    \n    ${props => props.css};\n`\n\nexport const Button = styled.button`\n    width: 100%;\n\n    background: transparent;\n    outline: none !important;\n    outline-offset: none !important;\n    border-color: transparent;\n    border-width: 0;\n\n    margin-bottom: 0.5rem;\n    \n    ${props => props.css};\n    \n`\n\n// export const ButtonViewCss = styled.div`\n//   color: ${props => (props.whiteColor ? 'white' : 'black')};\n//   flex-grow: 1;\n\n//     @media (max-width: ${props => props.theme.widthBreakpoint.tiny}) {\n//         height: 7rem;\n//         line-height: 7rem;\n//     }\n\n//     background: ${props => props.isSelected ? props.theme.fg.primary : 'transparent'};\n//     color: ${props => props.isSelected ? props.theme.bg.primary : props.theme.bg.octonary};\n\n//     outline: none !important;\n//     outline-offset: none !important;\n//     padding: .75rem;\n//     margin-left: -0.2rem;\n//     margin-bottom: .5rem;\n//     border-radius: .3rem;\n//     border-width: .15rem;\n//     border-color: ${props => props.theme.fg.primary};\n//     border-style: solid;\n\n\n//     font-size: ${props => props.theme.fontSize.sz4};\n//     font-family: ${props => props.theme.font.primary};\n//     font-weight: 400;\n//     @media ${props => props.theme.widthBreakpoint.mobileL} {\n//       padding: .25rem;\n//       fontSize: ${props => props.theme.fontSize.sz5};\n//     }\n// `;\n\nexport const buttonViewSelectedCss = css`\n\tcolor: ${props => props.theme.bg.primary};\n\tbackground-color: ${props => props.theme.fg.primary};\n`\n\n\nexport const ButtonView = styled.div`\n\n    flex-grow: 1;\n\n    @media (max-width: ${props => props.theme.widthBreakpoint.tiny}) {\n        height: 7rem;\n        line-height: 7rem;\n    }\n\n    background-color: transparent;\n    color: ${props => props.theme.bg.octonary};\n\n    outline: none !important;\n    outline-offset: none !important;\n    padding: .75rem;\n    margin-left: -0.2rem;\n    margin-bottom: .5rem;\n    border-radius: .3rem;\n    border-width: .15rem;\n    /* border-color: ${props => props.theme.fg.primary}; */\n    border-color: transparent;\n    border-style: solid;\n\n\n    font-size: ${props => props.theme.fontSize.sz4};\n    font-family: ${props => props.theme.font.primary};\n    font-weight: 400;\n    @media ${props => props.theme.widthBreakpoint.mobileL} {\n      padding: .25rem;\n      fontSize: ${props => props.theme.fontSize.sz5};\n    }\n    \n    ${props => props.css};\n    ${props => props.isSelected && buttonViewSelectedCss};\n    ${props => props.isSelected && props.selectedCss};\n`\n","export const isControlAndShift = (event) => {\n\treturn isShift(event) && isControl(event)\n}\n\nexport const isShift = (event) => {\n\treturn event.shiftKey\n}\n\nexport const isControl = (event) => {\n\treturn event.ctrlKey || event.metaKey\n}\n\n","import styled, {css} from \"styled-components\";\n\nconst HilButtonCss = css`\n  border: none;\n\n    border-radius: 1rem;\n    box-shadow: 0 0.1rem 0.2rem 0rem #303030;\n    height: 100%;\n    min-height: 4rem;\n    max-height: 7rem;\n    //width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    transition: background-color 0.25s ease, filter 0.1s ease;\n    background-color: ${props => props.color};\n    \n    filter: brightness(${props => props.filter});\n\n    &:focus{\n        outline: 0 !important\n    }\n\n    &:active{\n        box-shadow: none;\n        filter: brightness(85%);\n    }\n`\n\nexport const HilButtonText = styled.p`\n    color:  ${props => props.color};\n    font-size: 2rem;\n    margin: 0;\n    padding: 0;\n    filter: brightness(50%);\n    \n    -moz-user-select: none;\n    -webkit-user-select: none; \n    -ms-user-select:none; \n    user-select:none;\n    -o-user-select:none;\n    \n    ${props => props.css && props.css};\n`\n\n\nexport const Container = styled.button`\n    ${HilButtonCss};\n    align-items: center;\n    justify-content: flex-start;\n    //align-self: stretch;\n\n    display: flex;\n    flex-direction: row;\n    padding: 0rem 3rem;\n    align-items: center;\n    ${props => props.disabled && \"filter: grayscale(80%)\"};\n    \n    ${props => props.css && props.css};\n`\n\nexport const HilIcon = styled.i`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    //margin: auto auto;\n    color:  ${props => props.color};\n    fill: green;\n    font-size: 2.5rem;\n    filter: brightness(50%);\n    margin-right: 2rem;\n    width: 2rem;\n    \n    ${props => props.css && props.css};\n`","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nimport * as styled from \"./hil_button.style\";\nimport FlexibleContainer from \"../../basic/flexible_container/flexible_container\";\n\nconst HilButton = (props) => {\n\n\tconst {\n\t\tlabel,\n\t\tonClick,\n\t\tcolor,\n\t\ticonColor,\n\t\ticonName,\n\t\ttextColor,\n\t\tcontainerCss,\n\t\ticonCss,\n\t\ttextCss\n\t} = props\n\n\treturn (\n\t\t<FlexibleContainer>\n\t\t<styled.Container\n\t\t\tcolor={color}\n\t\t\tonClick={onClick}\n\t\t\tcss={containerCss}\n\t\t>\n\t\t\t{iconName &&\n\t\t\t<styled.HilIcon\n\t\t\t\tclassName={iconName}\n\t\t\t\tcolor={color}\n\t\t\t\tcss={iconCss}\n\n\t\t\t/>\n\t\t\t}\n\t\t\t<styled.HilButtonText\n\t\t\t\t// style=\"-moz-user-select: none; -webkit-user-select: none; -ms-user-select:none; user-select:none;-o-user-select:none;\"\n\t\t\t\tunselectable=\"on\"\n\t\t\t\tonselectstart=\"return false;\"\n\t\t\t\tonmousedown=\"return false;\"\n\t\t\t\tcolor={color}\n\t\t\t\tcss={textCss}\n\t\t\t>\n\t\t\t\t{label}\n\t\t\t</styled.HilButtonText>\n\t\t</styled.Container>\n\t\t</FlexibleContainer>\n\t);\n};\n\nHilButton.propTypes = {\n\tlabel: PropTypes.string,\n\tonClick: PropTypes.string\n};\n\nHilButton.defaultProps = {\n\tlabel: \"\",\n\tonClick: () => {},\n};\n\nexport default HilButton;\n","import axios from 'axios';\nimport * as log from 'loglevel';\n\nimport { apiIPAddress } from '../settings/settings'\n\nconst operator = 'stations'\n\nexport async function getStations() {\n    try {\n        const response = await axios({\n            method: 'GET',\n            url: apiIPAddress() + operator,\n            headers: {\n                'X-API-Key': '123456',\n                'Access-Control-Allow-Origin': '*'\n            }\n        });\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        throw error\n    }\n\n\n}\n\nexport async function deleteStation(ID) {\n    try {\n        const response = await axios({\n            method: 'DELETE',\n            url: apiIPAddress() + operator + '/' + ID,\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'application/json',\n                'Access-Control-Allow-Origin': '*'\n            },\n        });\n\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n\n        return dataJson\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}\n\n\nexport async function postStation(station) {\n    try {\n        const response = await axios({\n            method: 'POST',\n            url: apiIPAddress() + operator,\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'application/json',\n                'Access-Control-Allow-Origin': '*'\n            },\n            data: JSON.stringify(station)\n        });\n\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}\n\nexport async function putStation(station, ID) {\n\n    try {\n        const response = await axios({\n            method: 'PUT',\n            url: apiIPAddress() + operator + '/' + ID,\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'text/html',\n                'Access-Control-Allow-Origin': '*'\n            },\n            data: station\n        });\n\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}\n\nexport async function getStationAnalytics(id, timeSpan) {\n    try {\n        const response = await axios({\n            method: 'PUT',\n            url: apiIPAddress() + operator + '/' + id + '/stats',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'text/html',\n                'Access-Control-Allow-Origin': '*'\n            },\n            // A timespan is {time_span: 'day', index: 0}\n            data: timeSpan\n        });\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n\n        return dataJson;\n\n\n    } catch (error) {\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        throw error\n    }\n\n\n}","import { normalize, schema } from 'normalizr';\n\nimport {\n    GET_STATIONS_STARTED,\n    GET_STATIONS_SUCCESS,\n    GET_STATIONS_FAILURE,\n\n    POST_STATION_STARTED,\n    POST_STATION_SUCCESS,\n    POST_STATION_FAILURE,\n\n    PUT_STATION_STARTED,\n    PUT_STATION_SUCCESS,\n    PUT_STATION_FAILURE,\n\n    DELETE_STATION_STARTED,\n    DELETE_STATION_SUCCESS,\n    DELETE_STATION_FAILURE,\n\n    ADD_STATION,\n    UPDATE_STATION,\n    UPDATE_STATIONS,\n    REMOVE_STATION,\n    SET_STATION_ATTRIBUTES,\n    SET_SELECTED_STATION,\n    EDITING_STATION,\n} from '../types/stations_types'\n\nimport uuid from 'uuid';\n\n// Import External Actions\nimport { deleteTask } from './tasks_actions'\nimport { deletePosition, putPosition, postPosition } from './positions_actions'\nimport { deleteDashboard, postDashboard } from './dashboards_actions'\n\n// Import utils\nimport { deepCopy } from '../../methods/utils/utils';\n\n// Import Schema\nimport { stationsSchema } from '../../normalizr/schema'\n\n// Import API\nimport * as api from '../../api/stations_api'\n\n// Import Store\nimport store from '../store/index'\n\n// get\n// ******************************\nexport const getStations = () => {\n    return async dispatch => {\n\n        function onStart() {\n            dispatch({ type: GET_STATIONS_STARTED });\n        }\n        function onSuccess(stations) {\n            dispatch({ type: GET_STATIONS_SUCCESS, payload: stations });\n            return stations;\n        }\n        function onError(error) {\n            dispatch({ type: GET_STATIONS_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const stations = await api.getStations();\n\n            const normalizedStations = !!normalize(stations, stationsSchema)?.entities?.stations ? normalize(stations, stationsSchema)?.entities?.stations : {}\n\n            return onSuccess(normalizedStations);\n        } catch (error) {\n            return onError(error);\n        }\n    };\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// post\n// ******************************\nexport const postStation = (station) => {\n    return async dispatch => {\n\n        function onStart() {\n            dispatch({ type: POST_STATION_STARTED });\n        }\n        function onSuccess(station) {\n            dispatch({ type: POST_STATION_SUCCESS, payload: station });\n            return station;\n        }\n        function onError(error) {\n            dispatch({ type: POST_STATION_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            let stationCopy = deepCopy(station)\n            stationCopy = await dispatch(onPostStation(stationCopy))\n            delete stationCopy.temp\n            delete stationCopy.new\n            const newStation = await api.postStation(stationCopy);\n            return onSuccess(newStation);\n        } catch (error) {\n            return onError(error);\n        }\n    };\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// put\n// ******************************\nexport const putStation = (station) => {\n    return async dispatch => {\n        function onStart() {\n            dispatch({ type: PUT_STATION_STARTED });\n        }\n        function onSuccess(station) {\n            dispatch({ type: PUT_STATION_SUCCESS, payload: station });\n            return station;\n        }\n        function onError(error) {\n            dispatch({ type: PUT_STATION_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            let stationCopy = deepCopy(station)\n            await dispatch(onSaveChildren())\n            delete stationCopy.temp\n            const updateStation = await api.putStation(stationCopy, stationCopy._id);\n            return onSuccess(updateStation)\n        } catch (error) {\n            return onError(error)\n        }\n    }\n}\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// put\n// ******************************\nexport const putStationWithoutSavingChildren = (station) => {\n    return async dispatch => {\n        function onStart() {\n            dispatch({ type: PUT_STATION_STARTED });\n        }\n        function onSuccess(station) {\n            dispatch({ type: PUT_STATION_SUCCESS, payload: station });\n            return station;\n        }\n        function onError(error) {\n            dispatch({ type: PUT_STATION_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            let stationCopy = deepCopy(station)\n            delete stationCopy.temp\n            const updateStation = await api.putStation(stationCopy, stationCopy._id);\n            return onSuccess(updateStation)\n        } catch (error) {\n            return onError(error)\n        }\n    }\n}\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// delete\n// ******************************\nexport const deleteStation = (ID) => {\n    return async dispatch => {\n        function onStart() {\n            dispatch({ type: DELETE_STATION_STARTED });\n        }\n        function onSuccess(id) {\n            dispatch({ type: DELETE_STATION_SUCCESS, payload: id });\n            return id;\n        }\n        function onError(error) {\n            dispatch({ type: DELETE_STATION_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const station = await dispatch(onDeleteStation(ID))\n            const removeStation = await api.deleteStation(station._id);\n            return onSuccess(ID)\n        } catch (error) {\n            return onError(error)\n        }\n    }\n}\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n\n// get Station Analytics\n// ******************************\nexport const getStationAnalytics = async (id, timeSpan) => {\n    try {\n        const stationAnalytics = await api.getStationAnalytics(id, timeSpan);\n        return stationAnalytics\n    } catch (error) {\n    }\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nexport const addStation = (station) => {\n    return { type: ADD_STATION, payload: station }\n}\n\nexport const updateStation = (station) => {\n    return { type: UPDATE_STATION, payload: station }\n}\n\nexport const updateStations = (stations, selectedStation, d3) => {\n    return { type: UPDATE_STATIONS, payload: { stations, selectedStation, d3 } }\n}\n\nexport const removeStation = (id) => {\n    // Have to use dispatch here because of onRemoveStationFunction\n    return async dispatch => {\n\n        const updatedId = await dispatch(onRemoveStation(id))\n        dispatch({ type: REMOVE_STATION, payload: updatedId })\n    }\n}\n\nexport const setStationAttributes = (id, attr) => {\n    return { type: SET_STATION_ATTRIBUTES, payload: { id, attr } }\n}\n\nexport const setSelectedStation = (station) => {\n    return { type: SET_SELECTED_STATION, payload: station }\n}\n\nexport const setEditingStation = (bool) => {\n    return { type: EDITING_STATION, payload: bool }\n}\n\n\n/**\n * Removes Station that is not on the backend yet\n * If the station has children, it deletes those as well\n * @param {*} id\n */\nconst onRemoveStation = (id) => {\n    const stationsState = store.getState().stationsReducer\n    let station = !!stationsState.selectedStation ? stationsState.selectedStation : stationsState.stations[id]\n\n    return async dispatch => {\n\n        if (!!station.children) {\n\n            // TODO: Fix this, in positions, it'll put the station to tell it's deleted, but the station is about to be deleted, so no need to put\n            station.children.forEach(async position => {\n\n                // Passes in true to tell that the deleted postion's associated station is being deleted too\n                // This way, it wont update the station\n                await dispatch(deletePosition(position, true))\n            })\n        }\n        return station._id\n    }\n}\n\n\nconst onDeleteStation = (id) => {\n\n    return async dispatch => {\n\n        const stationsState = store.getState().stationsReducer\n        const positionsState = store.getState().positionsReducer\n        const tasksState = store.getState().tasksReducer\n\n        let station = !!stationsState.selectedStation ? stationsState.selectedStation : stationsState.stations[id]\n\n        // If the station has children, delete them\n        if (!!station.children) {\n\n            // TODO: Fix this, in positions, it'll put the station to tell it's deleted, but the station is about to be deleted, so no need to put\n            station.children.forEach(async position => {\n\n                // Passes in true to tell that the deleted postion's associated station is being deleted too\n                // This way, it wont update the station\n                await dispatch(deletePosition(position, true))\n            })\n        }\n\n\n        // If the position is new, just remove it from the local station\n        // Since the position is new, it does not exist in the backend and there can't be any associated tasks\n        if (!!station.new) {\n            dispatch(removeStation(station._id))\n            return null\n        }\n\n        // Else delete in backend and delete any associated tasks\n        else {\n\n            // Delete associated dashboards\n            station.dashboards.forEach(async dashboard => {\n                await dispatch(deleteDashboard(dashboard))\n            })\n\n            // Sees if any tasks are associated with the position and delete them\n            const tasks = tasksState.tasks\n            Object.values(tasks).filter(task => {\n                return task.load.station === station._id || task.unload.station === station._id\n            }).forEach(async relevantTask => {\n                await dispatch(deleteTask(relevantTask._id))\n            })\n\n\n        }\n        return station\n    }\n}\n\nconst onPostStation = (station) => {\n    return async dispatch => {\n        // Add dashboard\n        let defaultDashboard = {\n            name: \"\",\n            locked: false,\n            buttons: [],\n            station: station._id\n        }\n\n        //// Now post the dashboard, and on return tie that dashboard to location.dashboards and put the location\n        const postedDashboard = await dispatch(postDashboard(defaultDashboard))\n        station.dashboards = [postedDashboard._id.$oid]\n\n        // Save Children\n        await dispatch(onSaveChildren())\n\n        return station\n    }\n}\n\nconst onSaveChildren = () => {\n\n    return async dispatch => {\n        const positionsState = store.getState().positionsReducer\n        const selectedStationChildrenCopy = positionsState.selectedStationChildrenCopy\n\n        // If there children Children Position, save them\n        if (!!selectedStationChildrenCopy) {\n            Object.values(selectedStationChildrenCopy).map(async (child, ind) => {\n                // Post\n                if (!!child.new) {\n                    await dispatch(postPosition(child))\n\n                }\n                // Put\n                else {\n                    await dispatch(putPosition(child))\n\n                }\n            })\n        }\n\n        return\n    }\n}\n","/**\n *  Goes through all the tasks and finds any tasks that belong to that location.\n *  It then sees if that task belongs to that location either as load or unload task.\n *  Then adds the key: taskID and value: object ID to be used for the object builder\n * */ \nexport const handleParseTaskBasedOnLoadUnload = (tasks, stationID) => {\n\n    let parsedTasks = { load: {}, unload: {} }\n\n    Object.values(tasks).forEach(task => {\n\n        // If station is load\n        if (task.load.station == stationID) {\n            parsedTasks.load = {\n                ...parsedTasks.load,\n                [task._id]: task.obj\n            }\n\n            // If station is unload\n        } else if (task.unload.station == stationID) {\n            parsedTasks.unload = {\n                ...parsedTasks.unload,\n                [task._id]: task.obj\n            }\n        }\n    })\n    return parsedTasks\n}\n\nexport const isEmpty = (obj) => {\n    for(var prop in obj) {\n        if(obj.hasOwnProperty(prop)) {\n            return false;\n        }\n    }\n\n    return JSON.stringify(obj) === JSON.stringify({});\n}\n\nexport const isObject = (item) => {\n    return ((typeof item === 'object') && (item !== null))\n}\n\nexport const pathStringToObject = (path, delimitter, value) => {\n    const pathItems = path.split(delimitter)\n\n    let obj = {\n        [pathItems[pathItems.length - 1]]: value\n    }\n    for(let i = pathItems.length - 2; i >= 0; i--) {\n        obj = {\n            [pathItems[i]]: {...obj}\n        }\n    }\n\n    return obj\n}","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport {Document, Page} from \"react-pdf\";\n\nimport { pdfjs } from 'react-pdf';\nimport * as styled from './pdf_viewer.style'\nimport PageSelector from \"../page_selector/page_selector\";\nimport Button from \"../button/button\";\nimport MoonLoader from \"react-spinners/MoonLoader\";\nimport {LoaderContainer} from \"./pdf_viewer.style\";\n\npdfjs.GlobalWorkerOptions.workerSrc = require(\"pdfjs-dist/build/pdf.worker.entry.js\");\n\nconst PdfViewer = (props) => {\n\n\tconst {\n\t\tonOkClick,\n\t\tonCancelClick,\n\t\tfile\n\t} = props\n\n\tconst [numPages, setNumPages] = useState(null);\n\tconst [pageNumber, setPageNumber] = useState(1);\n\tconst [loaded, setLoaded] = useState(false)\n\n\tfunction onDocumentLoadSuccess({ numPages }) {\n\t\tsetNumPages(numPages);\n\t\tsetPageNumber(1)\n\t\tsetLoaded(true)\n\t}\n\n\tfunction changePage(offset) {\n\t\tsetPageNumber(prevPageNumber => prevPageNumber + offset);\n\t}\n\n\tfunction previousPage() {\n\t\tchangePage(-1);\n\t}\n\n\tfunction nextPage() {\n\t\tchangePage(1);\n\t}\n\n\treturn (\n\t\t<styled.Container>\n\t\t\t{!loaded &&\n\t\t\t<styled.LoaderContainer>\n\t\t\t\t<MoonLoader\n\t\t\t\t\tloading={true}\n\t\t\t\t\tcolor={\"#4a4a4a\"}\n\t\t\t\t\tsize={50}\n\t\t\t\t/>\n\t\t\t</styled.LoaderContainer>\n\t\t\t}\n\t\t\t<styled.DocumentOuterContainer loaded={loaded}>\n\t\t\t\t<styled.DocumentContainer>\n\t\t\t\t\t<Document\n\t\t\t\t\t\tfile={file}\n\t\t\t\t\t\tonLoadSuccess={onDocumentLoadSuccess}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Page pageNumber={pageNumber} />\n\t\t\t\t\t</Document>\n\t\t\t\t</styled.DocumentContainer>\n\n\t\t\t\t<PageSelector\n\t\t\t\t\tvalue={pageNumber}\n\t\t\t\t\t// disabled={pageNumber <= 1}\n\t\t\t\t\t// onClick={previousPage}\n\t\t\t\t\tonBack={previousPage}\n\t\t\t\t\tonForward={nextPage}\n\t\t\t\t\tmaxValue={numPages}\n\t\t\t\t/>\n\t\t\t</styled.DocumentOuterContainer>\n\t\t</styled.Container>\n\t);\n};\n\nPdfViewer.propTypes = {\n\tonOkClick: PropTypes.func,\n\t\tonCancelClick: PropTypes.func,\n};\n\nPdfViewer.defaultProps = {\n\tonOkClick: () => null,\n\t\tonCancelClick: () => null,\n};\n\nexport default PdfViewer;\n","import styled from \"styled-components\";\nimport {Calendar} from \"react-calendar\";\n\nexport const StyledCalendar = styled(Calendar)`\n    font-family: ${props => props.theme.font.primary};\n\n.react-calendar {\n    width: 350px;\n    max-width: 100%;\n    background: white;\n    border: 1px solid #a0a096;\n    font-family: Arial, Helvetica, sans-serif;\n    line-height: 1.125em;\n  }\n  .react-calendar--doubleView {\n    width: 700px;\n  }\n  .react-calendar--doubleView .react-calendar__viewContainer {\n    display: flex;\n    margin: -0.5em;\n  }\n  .react-calendar--doubleView .react-calendar__viewContainer > * {\n    width: 50%;\n    margin: 0.5em;\n  }\n  .react-calendar,\n  .react-calendar *,\n  .react-calendar *:before,\n  .react-calendar *:after {\n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n    box-sizing: border-box;\n  }\n  .react-calendar button {\n    margin: 0;\n    border: 0;\n    outline: none;\n\n  }\n  .react-calendar button:enabled:hover {\n    cursor: pointer;\n  }\n  .react-calendar__navigation {\n    height: 44px;\n\tmargin-bottom: 1em;\n    //margin: 0 16em 1em 16em;\n  }\n  .react-calendar__navigation button {\n    min-width: 44px;\n    background: none;\n    border: none;\n  }\n  .react-calendar__navigation button:enabled:hover,\n  .react-calendar__navigation button:enabled:focus {\n    background-color: #e6e6e6;\n  }\n  .react-calendar__navigation button[disabled] {\n    background-color: #f0f0f0;\n  }\n  .react-calendar__month-view__weekdays {\n    text-align: center;\n    text-transform: uppercase;\n    font-weight: bold;\n    font-size: 0.75em;\n  }\n  .react-calendar__month-view__weekdays__weekday {\n    padding: 0.5em;\n  }\n  .react-calendar__month-view__weekNumbers {\n    font-weight: bold;\n  }\n  .react-calendar__month-view__weekNumbers .react-calendar__tile {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 0.75em;\n    padding: calc(0.75em / 0.75) calc(0.5em / 0.75);\n    \n  }\n  .react-calendar__month-view__days__day--weekend {\n    color: ${props => props.theme.bad};\n  }\n  .react-calendar__month-view__days__day--neighboringMonth {\n    color: #757575;\n  }\n  .react-calendar__year-view .react-calendar__tile,\n  .react-calendar__decade-view .react-calendar__tile,\n  .react-calendar__century-view .react-calendar__tile {\n    padding: 2em 0.5em;\n  }\n  .react-calendar__tile {\n    max-width: 100%;\n    text-align: center;\n    padding: 0.75em 0.5em;\n    background: none;\n    border: none;\n  }\n  .react-calendar__tile:disabled {\n    background-color: #f0f0f0;\n  }\n  .react-calendar__tile:enabled:hover,\n  .react-calendar__tile:enabled:focus {\n    background-color: #e6e6e6;\n  }\n  .react-calendar__tile--now {\n    background: #e8f4ff;\n  }\n  .react-calendar__tile--now:enabled:hover,\n  .react-calendar__tile--now:enabled:focus {\n    background: #e8f4ff;\n  }\n  .react-calendar__tile--hasActive {\n    background: #76baff;\n  }\n  .react-calendar__tile--hasActive:enabled:hover,\n  .react-calendar__tile--hasActive:enabled:focus {\n    background: #76baff;\n  }\n  .react-calendar__tile--active {\n    background: #76baff;\n    color: white;\n  }\n  .react-calendar__tile--active:enabled:hover,\n  .react-calendar__tile--active:enabled:focus {\n    background: #76baff;\n  }\n  .react-calendar--selectRange .react-calendar__tile--hover {\n    background-color: #e6e6e6;\n  }\n  \n\n`","import React from 'react'\n\n// functions external\nimport PropTypes from 'prop-types'\n\n// styles\nimport * as styled from \"./calendar.style\"\n\nconst Calendar = (props) => {\n\n\tconst {\n\t\tvalue,\n\n\t\t...rest\n\t} = props\n\n\treturn (\n\t\t<styled.StyledCalendar\n\t\t\t{...rest}\n\t\t\tvalue={value}\n\t\t/>\n\t)\n}\n\nCalendar.propTypes = {\n\n}\n\nCalendar.defaultTypes = {\n\tvalue: null\n}\n\nexport default Calendar\n","import styled, { css } from 'styled-components'\nimport {commonClickableIcon, iconButtonCss} from \"../../../common_css/common_css\";\n\nexport const Container = styled.div`\n\tdisplay: flex;\n  \talign-items: center;\n  \tcolor: ${props => props.theme.textColor};\n`\n\nexport const Selector = styled.button`\n\t${commonClickableIcon};\n  \t${iconButtonCss};\n  font-size: 2rem;\n`\n\nexport const Text = styled.span`\n\tfont-size: 2rem;\n  \tmargin: 0 1rem;\n`","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport * as styled from './page_selector.style'\n\nconst PageSelector = (props) => {\n\n\tconst {\n\t\tvalue,\n\t\tonBack,\n\t\tonForward,\n\t\tmaxValue\n\t} = props\n\n\treturn (\n\t\t<styled.Container>\n\t\t\t<styled.Selector\n\t\t\t\tclassName=\"fas fa-chevron-left\"\n\t\t\t\tonClick={onBack}\n\t\t\t\tdisabled={value <= 1}\n\t\t\t/>\n\n\t\t\t<styled.Text>\n\t\t\t\t{`${value} / ${maxValue}`}\n\t\t\t</styled.Text>\n\n\t\t\t<styled.Selector\n\t\t\t\tclassName=\"fas fa-chevron-right\"\n\t\t\t\tonClick={onForward}\n\t\t\t\tdisabled={value === maxValue}\n\t\t\t/>\n\t\t</styled.Container>\n\n\t);\n};\n\nPageSelector.propTypes = {\n\n};\n\nPageSelector.defaultProps = {\n\n};\n\nexport default PageSelector;\n","import { isMobile } from \"react-device-detect\";\n\n\nexport const defaultLocalSettings = {\n    non_local_api_ip: '',\n    non_local_api: false,\n    mapViewEnabled: isMobile ? false : true,\n    toggleDevOptions: false,\n    currentMapId: null,\n    authenticated: null,\n    refreshToken: null,\n    accessToken: null,\n}\n","const colors = [\"lime\", \"fuchsia\", \"aqua\", \"orange\", \"blanchedalmond\", \"coral\", \"darkcyan\", \"deeppink\", 'gold', \"lightcyan\", \"lightgreen\"]\nlet itemCount = 0\n\n// creates a unique debug style to make it easier to visualize the layout of items\nexport const getDebugStyle = () => {\n\tconst style =  {\n\t\tbackgroundColor: colors[itemCount]\n\t}\n\n\titemCount = itemCount + 1\n\treturn style\n}\n\n\n","export const ADD_TASK_ALERT_TYPE = {\n    TASK_EXISTS: \"TASK_EXISTS\",\n    TASK_ADDED: \"TASK_ADDED\",\n    ADDING: \"ADDING\",\n    REPORT_SEND_SUCCESS: \"REPORT_SEND_SUCCESS\",\n    REPORT_SEND_FAILURE: \"REPORT_SEND_FAILURE\",\n    KICK_OFF_SUCCESS: \"KICK_OFF_SUCCESS\",\n    KICK_OFF_FAILURE: \"KICK_OFF_FAILURE\",\n    FINISH_SUCCESS: \"FINISH_SUCCESS\",\n    FINISH_FAILURE: \"FINISH_FAILURE\",\n}\n\nexport const PAGES = {\n    DASHBOARDS: \"Dashboards\",\n    EDITING: \"Editing\",\n    DASHBOARD: \"Dashboard\"\n}\n\nexport const DASHBOARD_BUTTON_COLORS = [\n    {\n        hex: '#FF4B4B',\n        label: \"Red\"\n    },\n    {\n        hex: '#56d5f5',\n        label: \"Blue\"\n    },\n    {\n        hex: '#50de76',\n        label: \"Green\"\n    },\n    {\n        hex: '#f2ae41',\n        label: \"Orange\"\n    },\n    {\n        hex: '#c7a0fa',\n        label: \"Purple\"\n    }\n]\n\nexport const OPERATION_TYPES = {\n    REPORT: {\n        schema: \"error\",\n        name: \"Report\",\n        key: \"REPORT\",\n        _id: 0\n    },\n    KICK_OFF: {\n        schema: \"kick_off\",\n        key: \"KICK_OFF\",\n        name: \"Kick off\",\n        _id: 1\n    },\n    FINISH: {\n        schema: \"finish\",\n        key: \"FINISH\",\n        name: \"Finish\",\n        _id: 2\n    }\n}\n\nexport const TYPES = {\n    // ALL: {\n    //     name: \"ALL\",\n    //     iconName: \"fal fa-globe\"\n    // },\n    ROUTES: {\n        name: \"Routes\",\n        iconName: \"fas fa-route\",\n        key: \"ROUTES\"\n    },\n    OPERATIONS: {\n        name: \"Operations\",\n        iconName: \"fas fa-sticky-note\",\n        key: \"OPERATIONS\"\n    }\n}\n","import styled from 'styled-components'\n\nexport const Container = styled.div`\n\tdisplay: flex;\n\talign-self: stretch;\n\tjustify-content: center;\n\t\n\tbutton {\n\t\tflex: 1;\n\t}\n`","import React from 'react'\n\n// functions external\nimport PropTypes from 'prop-types'\n\n// style\nimport * as styled from './flexible_container.style'\n\nconst FlexibleContainer = props => {\n\n\tconst {\n\t\tchildren\n\t} = props\n\n\treturn (\n\t\t<styled.Container>\n\t\t\t{children}\n\t\t</styled.Container>\n\t)\n}\n\nFlexibleContainer.propTypes = {\n\tchildren: PropTypes.any\n}\n\nexport default FlexibleContainer\n","import styled, {css} from \"styled-components\";\n\nexport const Container = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n`\n\n\n\nexport const Caption = styled.span`\n  color: ${props => props.theme.textColor};\n  font-size: ${props => props.theme.fontSize.sz4};\n  white-space: nowrap;\n`\n\n\n","import React from 'react'\n\n// functions external\nimport PropTypes from 'prop-types'\n\n// components internal\nimport WobbleButton from \"../../../../../../basic/wobble_button/wobble_button\"\n\n// styles\nimport * as styled from \"./labeled_button.style\"\n\nconst LabeledButton = (props) => {\n\n\tconst {\n\t\tlabel,\n\t\tchildren,\n\t\tcontainerStyle\n\t} = props\n\n\treturn (\n\t\t<styled.Container\n\t\t\tstyle={containerStyle}\n\t\t>\n\t\t\t{children}\n\t\t\t<styled.Caption>{label}</styled.Caption>\n\t\t</styled.Container>\n\t)\n}\n\nLabeledButton.propTypes = {\n\tlabel: PropTypes.string,\n}\n\nLabeledButton.defaultProps = {\n\tlabel: \"\",\n}\n\nexport default LabeledButton\n","import { isObject } from \"./object_utils\";\nimport {\n    BASIC_LOT_TEMPLATE,\n    BASIC_LOT_TEMPLATE_ID, BIN_IDS,\n    FIELD_DATA_TYPES,\n    LOT_FILTER_OPTIONS\n} from \"../../constants/lot_contants\";\nimport store from '../../redux/store/index'\nimport lotTemplatesReducer from \"../../redux/reducers/lot_templates_reducer\";\nimport { toIntegerOrZero } from \"./number_utils\";\nimport { useSelector } from \"react-redux\";\nimport { FILTER_DATE_OPTIONS } from \"../../components/basic/advanced_calendar_placeholder_button/advanced_calendar_placeholder_button\";\n\n// Import external utils\nimport { immutableDelete, immutableReplace, isArray, isNonEmptyArray } from \"./array_utils\";\nimport { capitalizeFirstLetter, isEqualCI, isString } from \"./string_utils\";\nimport { getProcessStations } from './processes_utils'\nimport { getLoadStationId } from './route_utils'\n\nexport const getDisplayName = (lotTemplate, fieldName, fallback) => {\n    let returnVal\n    if (isObject(lotTemplate?.displayNames) && lotTemplate.displayNames[fieldName]) {\n        returnVal = lotTemplate.displayNames[fieldName]\n    }\n\n    return isString(returnVal) ? returnVal : fallback ? fallback : \"\"\n}\n\nexport const getBinName = (binId) => {\n    const stations = store.getState().stationsReducer.stations || {}\n\n    if (binId === BIN_IDS.QUEUE) {\n        return \"Queue\"\n    }\n    else if (binId === BIN_IDS.FINISH) {\n        return \"Finish\"\n    }\n    else {\n        const station = stations[binId] || {}\n        const {\n            name = \"\"\n        } = station\n\n        return name\n    }\n}\n\nexport const testFilterOption = (filterOptions, filterValue, testValue) => {\n    if (!isNonEmptyArray(filterOptions)) return true\n\n    for (const currOption of (filterOptions || [])) {\n        if (currOption === FILTER_DATE_OPTIONS.EQUAL) {\n            if (testValue && testValue.toDateString() === filterValue.toDateString()) {\n                return true\n            }\n        }\n        else if (currOption === FILTER_DATE_OPTIONS.LESS_THAN) {\n            if (testValue - filterValue < 0) return true\n        }\n        else if (currOption === FILTER_DATE_OPTIONS.GREATER_THAN) {\n            if (testValue - filterValue > 0) return true\n        }\n    }\n\n    return false\n}\n\nexport const getMatchesFilter = (lot, filterValue, filterMode) => {\n    const {\n        dataType: filterDataType,\t\t\t\t\t\t\t// eg. \"STRING\"\n        label,\t\t\t\t\t\t\t\t// eg. \"Dates (start)\"\n        _id: fieldId,\n        fieldName: filterFieldName,\t\t\t\t\t\t\t// eg. \"dates\"\n        lotTemplateId: filterTemplateId, \t// eg. 123\n    } = filterMode || {}\n\n    const {\n        lotTemplateId,\n        [filterFieldName]: fieldValue\n    } = lot || {}\n\n    // first filter known/required fields\n    switch (filterMode.label) {\n\n        // name (string)\n        case LOT_FILTER_OPTIONS.name.label: {\n            if (filterValue) {\n                return lot.name.toLowerCase().includes((filterValue || \"\").toLowerCase())\n            }\n            return true\n            break\n        }\n\n        //  lot number (treated as string when formatted)\n        case LOT_FILTER_OPTIONS.lotNumber.label: {\n            if (filterValue) {\n                const formattedLotNumber = formatLotNumber(lot.lotNumber)\n                return formattedLotNumber.toLowerCase().includes((filterValue || \"\").toLowerCase())\n            }\n            return true\n            break\n        }\n\n        // flags (array of ints)\n        case LOT_FILTER_OPTIONS.flags.label: {\n            if (isArray(filterValue) && filterValue.length > 0) {\n                if (isArray(lot.flags)) {\n                    for (const filterFlag of filterValue) {\n                        const {\n                            id: currFilterId\n                        } = filterFlag\n\n                        if (!lot.flags.includes(currFilterId)) return false\n                    }\n                    return true\n                }\n                return false\n            }\n            return true\n            break\n        }\n\n        // now must filter by data type\n        default: {\n            if (isObject(filterMode)) {\n\n                let fieldInLot = false\n                let fieldValue = null\n\n                const lotField = getLotField(\"fieldName\", filterFieldName, lot)\n                if (lotField) {\n                    fieldInLot = true\n                    fieldValue = lotField.value\n                }\n\n                if (fieldInLot || lotTemplateId === filterTemplateId) {\n                    if (!filterValue) return true\n\n                    switch (filterDataType) {\n                        case FIELD_DATA_TYPES.URL: {\n                            // not implemented yet\n                            return true\n                        }\n                        case FIELD_DATA_TYPES.EMAIL: {\n                            // not implemented yet\n                            return true\n                        }\n                        case FIELD_DATA_TYPES.DATE: {\n                            const {\n                                value,\n                                options: filterOptions\n                            } = filterValue || {}\n\n                            if (value) {\n                                return testFilterOption(filterOptions, value, fieldValue ? new Date(fieldValue) : null)\n                            }\n\n                            // if no filter value, default true\n                            else {\n                                return true\n                            }\n                        }\n                        case FIELD_DATA_TYPES.DATE_RANGE: {\n                            let matchesFilter = false\n\n                            if ((isNonEmptyArray(filterValue) && filterValue.length > 0)) {\n                                // extract first filter properties\n                                const {\n                                    value: filterValue1,\n                                    options: filterOptions1\n                                } = filterValue[0] || {}\n\n                                // extract second filter properties\n                                const {\n                                    value: filterValue2,\n                                    options: filterOptions2\n                                } = filterValue[1] || {}\n\n                                if (isNonEmptyArray(fieldValue) && fieldValue.length > 0) {\n\n                                    // check first filter\n                                    if (filterValue1) {\n                                        // check if fieldValue matches filter value\n                                        matchesFilter = testFilterOption(filterOptions1, filterValue1, new Date(fieldValue[0]))\n                                    }\n                                    else {\n                                        // no filter value, so default to match\n                                        matchesFilter = true\n                                    }\n\n                                    // check second filter\n                                    if (filterValue2) {\n                                        matchesFilter = (testFilterOption(filterOptions2, filterValue2, new Date(fieldValue[1]))) && matchesFilter // && since both filters must match\n                                    }\n                                    else {\n                                        matchesFilter = true && matchesFilter // && since both filters must match\n                                    }\n\n                                    // matches?\n                                    return matchesFilter\n                                }\n\n                                // there is filter value, but no field value.\n                                else {\n                                    return false\n                                }\n                            }\n\n                            // no filter value, default matches to true\n                            return true\n                        }\n\n                        case FIELD_DATA_TYPES.STRING: {\n                            // simple string compare, make lowercase for case insensitive\n                            return fieldValue.toLowerCase().includes((filterValue || \"\").toLowerCase())\n                        }\n\n                        case FIELD_DATA_TYPES.INTEGER: {\n                            // simple ===, but also make sure they're ints\n                            return toIntegerOrZero(fieldValue) === toIntegerOrZero(filterValue)\n                        }\n                        default: {\n                            // unknown dateType, return true\n                            return true\n                        }\n                    }\n                }\n                else {\n                    return false\n                }\n            }\n            else {\n                // no filter mode selected, return true\n                return true\n            }\n        }\n    }\n}\n\nexport const getLotField = (searchKey, searchValue, lot) => {\n    for (const field of lot.fields.flat()) {\n        const {\n            [searchKey]: currValue\n        } = field || {}\n\n        if (currValue === searchValue) {\n            return field\n        }\n    }\n\n    return null\n}\n\nexport const formatLotNumber = (lotNumber) => {\n    return (isString(lotNumber) || Number.isInteger(lotNumber)) ?\n        `RM-${parseInt(lotNumber).toLocaleString('en-US', { minimumIntegerDigits: 6, useGrouping: false })}`\n        :\n        ``\n}\n\nexport const getLotTotalQuantity = ({ bins }) => {\n    let totalQuantity = 0\n\n    if (isObject(bins)) {\n        Object.values(bins).forEach(currBin => {\n            const {\n                count\n            } = currBin || {}\n\n            totalQuantity = totalQuantity + parseInt(count)\n        })\n    }\n\n    return totalQuantity\n}\n\nexport const getBinQuantity = ({ bins }, binId) => {\n    const {\n        [binId]: currentBin\n    } = bins || {}\n\n    const {\n        count\n    } = currentBin || {}\n    return count\n}\n\nexport const getIsCardAtBin = ({ bins }, binId) => {\n    return !!getBinQuantity({ bins }, binId)\n}\n\nexport const getCardsInBin = (cards, binId, processId) => {\n\treturn Object.values(cards).filter((card, ind) => {\n\t\t\t\treturn getIsCardAtBin(card, binId) && (!processId || card.process_id === processId)\n\t\t\t})\n}\n\nexport const getAllTemplateFields = () => {\n    const lotTemplates = {\n        [BASIC_LOT_TEMPLATE_ID]: { ...BASIC_LOT_TEMPLATE },\n        ...(store.getState().lotTemplatesReducer.lotTemplates || {})\n    }\n\n    let templateFields = []\n\n    Object.values(lotTemplates).forEach((currLotTemplate) => {\n        const {\n            fields,\n            _id: lotTemplateId\n        } = currLotTemplate || {}\n\n        fields.forEach((currRow) => {\n            currRow.forEach((currField) => {\n\n                const {\n                    component,\t\t//\"CALENDAR_START_END\"\n                    dataType,\t\t//\"DATE_RANGE\"\n                    fieldName,\t\t//\"dates\"\n                    key,\t\t\t//1\n                    _id,\t\t\t//1\n                } = currField || {}\n\n                const item = {\n                    // label: `${capitalizeFirstLetter(fieldName)} (${convertDataTypeContantToDisplay(dataType)})`,\n                    label: fieldName,\n                    dataType,\n                    component,\n                    fieldName,\n                    lotTemplateId,\n                    _id\n                }\n\n                let alreadyExists = false\n                templateFields.forEach((currTemplateField) => {\n                    const {\n                        label: currExistingLabel,\n                        dataType: currExistingDataType,\n                        component: currExistingComponent\n                    } = currTemplateField || {}\n\n                    if ((isEqualCI(item.label, currExistingLabel)) && (item.dataType === currExistingDataType)) {\n                        alreadyExists = true\n                    }\n                })\n\n                if (!alreadyExists) {\n                    templateFields.push(item)\n                }\n            })\n        })\n    })\n\n    return templateFields\n}\n\n/*\n* Returns array of lots custom fields\n* Each field field includes dataType, fieldName, and value\n* */\nexport const getCustomFields = (lotTemplateId, lot, includeNonPreview) => {\n    const lotTemplates = store.getState().lotTemplatesReducer.lotTemplates || {}\n    const lotTemplate = lotTemplateId === BASIC_LOT_TEMPLATE_ID ? BASIC_LOT_TEMPLATE : (lotTemplates[lotTemplateId] || {})\n\n    let customFieldValues = []\n\n    const { syncWithTemplate } = lot || {}\n\n    // if sync with template, use fields from template. Otherwise use fields from lot\n    const fields = syncWithTemplate ? (lotTemplate.fields) : (lot?.fields || lotTemplate.fields)\n\n    // loop through fields and get relevant data\n    if (isArray(fields)) {\n        fields.flat().forEach((currField) => {\n            const {\n                dataType,\n                fieldName,\n                showInPreview,\n                _id\n            } = currField\n\n            // if includeNonPreview, add all.\n            // otherwise, only add if lot has showInPreview set to true\n            if (includeNonPreview || (!includeNonPreview && showInPreview)) {\n                customFieldValues.push({\n                    dataType,\n                    fieldName,\n                    value: syncWithTemplate ? getLotField(\"_id\", _id, lot)?.value : currField?.value,\n                })\n            }\n        })\n    }\n\n    return customFieldValues\n}\n\nexport const getLotAfterBinMerge = (lotToMove, currentBinId, destinationBinId) => {\n    const {\n        bins: oldBins,\n        ...unchangedLotAttributes\n    } = lotToMove || {}\n\n    const {\n        [currentBinId]: movedBin,\n        [destinationBinId]: destinationBin,\n        ...unchangedBins\n    } = oldBins || {}\n\n    if (movedBin) {\n        // already contains items in destinationBin\n        if (destinationBin && movedBin) {\n            const oldCount = parseInt(destinationBin?.count || 0)\n            const movedCount = parseInt(movedBin?.count || 0)\n\n            return {\n                ...unchangedLotAttributes,\n                bins: {\n                    ...unchangedBins,\n                    [destinationBinId]: {\n                        ...destinationBin,\n                        count: oldCount + movedCount\n                    }\n                }\n\n            }\n        }\n\n        // no items in bin\n        else {\n            return {\n                ...unchangedLotAttributes,\n                bins: {\n                    ...unchangedBins,\n                    [destinationBinId]: {\n                        ...movedBin,\n                    }\n                }\n            }\n        }\n    }\n}\n\n\nexport const getCurrentRouteForLot = (lot, stationID) => {\n    let currentRoute\n\n    const processes = store.getState().processesReducer.processes || {}\n    const routes = store.getState().tasksReducer.tasks || {}\n\n    const lotProcess = processes[lot.process_id]\n\n    for (let i = 0; i < lotProcess.routes.length; i++) {\n        const loadStation = routes[lotProcess.routes[i]].load.station\n        if (loadStation === stationID) {\n            currentRoute = routes[lotProcess.routes[i]]\n            break\n        }\n    }\n    return currentRoute\n}\n\nexport const getPreviousRouteForLot = (lot, stationID) => {\n    let prevRoute\n\n    const processes = store.getState().processesReducer.processes || {}\n    const routes = store.getState().tasksReducer.tasks || {}\n\n    const lotProcess = processes[lot.process_id]\n\n    for (let i = 0; i < lotProcess.routes.length; i++) {\n        const loadStation = routes[lotProcess.routes[i]].load.station\n        const unloadStation = routes[lotProcess.routes[i]].unload.station\n        if (loadStation === stationID) {\n            prevRoute = routes[lotProcess.routes[i - 1]]\n            break\n        } else if (unloadStation === stationID) {\n            prevRoute = routes[lotProcess.routes[i]]\n            break\n        }\n    }\n    return prevRoute\n}\n\n\nexport const moveLot = (lot, destinationBinId, startBinId, quantity) => {\n\n        let updatedLot = {...lot}\n\n            const oldBins = lot.bins ? lot.bins : {}\n\n            const {\n                [startBinId]: startBin,\n                [destinationBinId]: destinationBin,\n                ...remainingOldBins\n            } = oldBins || {}\n\n            if(startBin) {\n                // handle updating lot\n                {\n                    const destinationBinQuantity = parseInt(destinationBin?.count || 0)\n                    const startBinQuantity = parseInt(startBin?.count || 0)\n\n                    if(quantity > startBinQuantity) return false\n\n                    updatedLot = {\n                        ...updatedLot,\n                        bins: {\n                            ...remainingOldBins,\n                            [startBinId]: {\n                                ...startBin,\n                                count: startBinQuantity - quantity\n                            },\n                            [destinationBinId]: {\n                                ...destinationBin,\n                                count:  destinationBinQuantity + quantity\n                            }\n                        }\n                    }\n                }\n            }\n\n            return updatedLot\n        // }\n}\n","import styled, {css} from \"styled-components\";\nimport {Form} from \"formik\";\nimport {commonClickableIcon, iconButtonCss} from \"../../../../../../common_css/common_css\";\nimport {containerLayout} from \"../../../../../../common_css/layout\";\nimport SyncProblemIcon from \"@material-ui/icons/SyncProblem\";\nimport SyncIcon from \"@material-ui/icons/Sync\";\n\nexport const rowCss = css`\n\t// margin-bottom: 1rem;\n`\n\nexport const Container = styled.div`\n  ${containerLayout};\n  overflow: hidden;\n  flex: 1;\n  align-self: stretch;\n  //background: red;\n`;\n\nexport const Header = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\tpadding: 1rem 0.5rem;\n\tmargin: 0;\n\tbackground: ${props => props.theme.bg.secondary};\n\tz-index: 10;\n\tbox-shadow: 0px 0px 6px 1px rgba(0,0,0,0.2);\n`\n\nexport const CloseIcon = styled.i`\n    font-size: 1.4rem;\n    //margin: 2rem;\n  \tright: 2rem;\n  \tposition: absolute;\n    color: ${props => props.theme.bg.quaternary};\n    cursor: pointer;\n\t\n`\n\nexport const LotNumberContainer = styled.div`\n  background: ${props => props.theme.bg.quinary};\n`\n\nexport const NameContainer = styled.div`\n  align-self: stretch;\n  padding: 1rem 1rem 1rem 0;\n\tbackground: ${props => props.theme.bg.primary};\n  flex-direction: column;\n\tflex: 1;\n  //align-self: center;\n  display: flex;\n  align-items: flex-start;\n  margin: 0.5rem 2rem;\n`\n\nexport const NameLabel = styled.span`\n\tmargin-right: 1rem;\n  white-space: nowrap ;\n  width: fit-content;\n`\n\nexport const CloseButton = styled.button`\n\theight: 100%;\n\twidth: 3rem;\n\n`\n\nexport const Title = styled.div`\n\tflex: 2;\n\theight: 100%;\n\tmin-height: 100%;\n\tmargin: 0;\n\tpadding: 0;\n\ttext-align: center;\n\tdisplay: inline-flex;\n\tjustify-content: center;\n\talign-items: center;\n\tdisplay: flex;\n  \tflex-direction: column;\n\tfont-size: ${props => props.theme.fontSize.sz2};\n\tfont-weight: ${props => props.theme.fontWeight.bold};\n\tfont-family: ${props => props.theme.font.primary};\n\t\n`\nexport const TitleText = styled.span`\n\n`\n\n\n\nexport const InfoText = styled.span`\n  font-size: ${props => props.theme.fontSize.sz3};\n  // font-weight: ${props => props.theme.fontWeight.bold};\n  font-family: ${props => props.theme.font.primary};\n  color: ${props => props.highlight ? props.theme.schema[props.schema].solid : props.textColor};\n`\n\nexport const SectionContainer = styled.div`\n\tborder-bottom: 3px solid ${props => props.theme.bg.secondary};\n  //padding: 0 1rem;\n  flex: 1;\n  display: flex;\n  flex-direction: column;  \n`\n\nexport const TheBody = styled.div`\n  position: relative;\n  overflow: auto;\n  flex: 1;\n  display: flex;\n  flex-direction: column;  \n\t\n\n\n`\n\n\n\nexport const ScrollContainer = styled.div`\n  position: relative;\n  overflow: auto;\n  flex: 1;\n  display: flex;\n  //height: 50rem;\n  flex-direction: column;\n  //background: blue;\n  \n\n`\n\n\n\n\nexport const ProcessFieldContainer = styled.div`\n  //margin-bottom: 1rem;\n  display: flex;\n  flex-direction: column;\n  padding: 1rem;\n  padding-bottom: 0;\n  //width: auto;\n`\n\n\nexport const ProcessOptionsContainer = styled.div`\n\t//margin-bottom: 1rem;\n  display: flex;\n  overflow-x: auto;\n  overflow-y: hidden;\n  position: relative;\n  \n  \n  box-shadow: ${props => props.hasError && \"0 0 5px red\"}; \n\n  background: ${props => props.theme.bg.primary}; \n  padding: 1rem;\n  border-radius: 1rem;\n  \n  padding-bottom: 1rem;\n  \n  ::-webkit-scrollbar {\n    height: 10px;\n  }\n\n  /* Track */\n  ::-webkit-scrollbar-track {\n    background: rgba(100,100,100,0.2);\n    opacity: 10%;\n  }\n\n  ::-webkit-scrollbar-track:hover {\n    background: rgba(100,100,100,0.6);\n    border-left: 1px solid rgba(100,100,100,0.6);\n    border-right: 1px solid rgba(100,100,100,0.6);\n  }\n\n  /* Handle */\n  ::-webkit-scrollbar-thumb {\n    background: ${props => props.theme.bg.secondary};\n    border-radius: .5rem;\n  }\n\n  /* Handle on hover */\n  ::-webkit-scrollbar-thumb:hover {\n    background: #555;\n\n  }\n`\nexport const ProcessName = styled.span`\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`\n\nexport const ProcessOption = styled.div`\n\n\t&:hover {\n\t\tcursor: pointer;\n\t}\n\t\n\ttext-shadow: 0.05rem 0.05rem 0.2rem #303030;\n\t&:hover {\n\t\tcursor: pointer;\n\t\tfilter: brightness(140%);\n\t}\n\t\n\t&:active{\n\t\tfilter: brightness(85%);\n\t\ttext-shadow: none;\n\t}\n  \n  \tbackground: ${props => props.theme.bg.senary};\n\t\n  \tpadding: 1rem;\n\tborder-radius: 1rem;\n  \tmargin-right: 1rem;\n  \n\tmin-width: 10rem;\n\tmax-width: 10rem;\n\twidth: 10rem;\n\t\n\tdisplay: inline-flex;\n\tjustify-content: center;\n\talign-items: center;\n\t\n\t${props => (!props.isSelected && props.containsSelected) && \"filter: grayscale(50%)\"};\n\t${props => props.isSelected && \"filter: brightness(130%)\"};\n\ttransition: all 0.5s ease;\n\t\n\tfont-size: ${props => props.theme.fontSize.sz3};\n\tfont-weight: ${props => props.theme.fontWeight.normal};\n\tfont-family: ${props => props.theme.font.primary};\n  \n\toverflow: hidden;\n\twhite-space: nowrap;\n\ttext-overflow: ellipsis;\n`\n\n\n\nconst mainCss = css`\n\tdisplay: flex;\n\tflex-direction: column;\n\tflex: 1;\n\twidth: 100%;\n\tmax-width: 100%;\n\toverflow: hidden;\n\tmax-height: 100%;\n\theight: 100%;\n\t// max-height: 100%;\n\t// overflow-x: hidden;\n\tborder-radius: .5rem;\n\tposition: relative;\n\t\n\toverflow: hidden;\n\tbackground: ${props => props.theme.bg.primary};\n\tflex: 1;\n\tjustify-content: space-between;\n`\n\nexport const StyledForm = styled(Form)`\n    ${mainCss};\n  \n\ttransition: all .5s ease;\n\tfilter: ${props => props.loading && \"blur(5px)\"};\n`;\n\nexport const SubContainer = styled.div`\n  ${mainCss};\n`\n\n\n\nexport const ContentContainer = styled.div`\n\tdisplay: flex;\n\tpadding: 1rem;\n\tflex-direction: column;\n\tmax-height: 100%;\n\toverflow: hidden;\n\tflex: 1;\n\tjustify-content: space-between;\n`\n\n\n\nexport const BodyContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n  width: 100%;\n  min-width: 100%;\n  background: ${props => props.theme.bg.primary};\n\tpadding: 1rem;\n  align-self: stretch;\n  \n\t//flex: 1;\n\tjustify-content: space-between;\n  min-height: ${props => props.minHeight};\n  \n`\n\nexport const WidgetContainer = styled.div`\n\tdisplay: flex;\n\tpadding-left: 1rem;\n\tcolor: ${props => props.theme.schema.lots.solid};\n\tfont-size: 1.4rem;\n\tjustify-content: center;\n\tcursor: pointer;\n\t\n\t${rowCss};\n`\n\nexport const Icon = styled.i`\n\tfont-size: 2rem;\n\tcolor: ${props => props.color};\n\tfont-family: ${props => props.theme.font.primary};\n\tmargin-right: 1rem;\n`\n\n\n\n\n\nexport const CountInput = styled.input`\n\twidth: fit-content;\n`\n\n\n\nexport const QuantityErrorContainerComponent = styled.div`\n    width: auto;\n    height: auto;\n    position: absolute;\n    top: 50%;\n    right: 2.5rem;\n    transform: translateY(-50%);\n    margin: 0;\n    padding: 0;\n    ${props => props.iconContainerCss};\n`;\n\nexport const ObjectName = styled.span`\n\tdisplay: flex;\n`\n\nexport const InputContainer = styled.div`\n\tflex: 1;\n`\n\n\nexport const Footer = styled.div`\n  background: ${props => props.theme.bg.tertiary};\n  display: flex;\n  flex-direction: column;\n`\n\nexport const ButtonContainer = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\twidth: 100%;\n\tjustify-content: center;\n\talign-self: center;\n\tpadding: 1.5rem;\n\n\tbackground: ${props => props.theme.bg.secondary};\n\tz-index: 10;\n\tbox-shadow: 0px 0px 6px 1px rgba(0,0,0,0.2);\n`\n\nexport const DatesContainer = styled.span`\n\tdisplay: inline-flex;\n\talign-items: center;\n\tbackground: ${props => props.theme.bg.quinary};\n\tjustify-content: center;\n\tpadding: .75rem;\n\tborder-radius: 1rem;\n  width: fit-content;\n  margin: 0;\n`\n\nexport const ObjectInfoContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n`\n\nexport const DateItem = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tbackground: ${props => props.theme.bg.secondary};\n\tborder-radius: 1rem;\n\t\n\tpadding: .5rem;\n\talign-items: center;\n\tjustify-content: center;\n\t\n\t&:hover {\n\t\tcursor: pointer;\n\t}\n\t\n`\n\nexport const ErrorTooltipContainer = styled.div`\n\tmargin-left: 1rem;\n`\n\nexport const DateArrow = styled.i`\n\tmargin-left: 1rem;\n\tmargin-right: 1rem;\n\tcolor: ${props => props.theme.bg.senary};\n`\n\nexport const DateTitle = styled.span``\n\nexport const DateText = styled.span`\n\n`\n\nexport const TimeText = styled.span`\n\n`\n\nexport const StationContainer = styled.div`\n\t${rowCss};\n`\n\n// history\n\nexport const ContentHeader = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\twidth: 100%;\n  \tmargin-bottom: 1rem;\n\t//padding: 1rem;\n`\n\nexport const FieldsHeader = styled.div`\n  align-self: stretch;\n\tdisplay: flex;\n  //padding: 1rem;\n  flex-direction: column;\n\t//justify-content: space-between;\n\twidth: 100%;\n  \t//margin-bottom: 1rem;\n  border-bottom: 2px solid ${props => props.theme.bg.secondary};\n\t//padding: 1rem;\n`\n\nexport const ContentTitle = styled.span`\n\tfont-size: ${props => props.theme.fontSize.sz3};\n\tfont-weight: ${props => props.theme.fontWeight.bold};\n\tfont-family: ${props => props.theme.font.primary};\n`\n\nexport const ContentValue = styled.span`\n  font-size: ${props => props.theme.fontSize.sz3};\n  font-weight: ${props => props.theme.fontWeight.normal};\n  font-family: ${props => props.theme.font.primary};\n`\n\n// export const InfoText = styled.span`\n//   font-size: ${props => props.theme.fontSize.sz3};\n//   font-weight: ${props => props.theme.fontWeight.no};\n// `\n\nexport const FieldLabel = styled.span`\n\tfont-size: ${props => props.theme.fontSize.sz3};\n\tfont-weight: ${props => props.theme.fontWeight.bold};\n\tfont-family: ${props => props.theme.font.primary};\n\twhite-space: nowrap ;\n\tmargin-right: 2rem;\n\tmargin-bottom: .5rem;\n`\n\nconst fieldValueCss = css`\n /* background-color: ${props => props.theme.bg.secondary}; */\n  border: none;\n  font-size: ${props => props.theme.fontSize.sz4};\n  font-family: ${props => props.theme.font.primary};\n  font-weight: bold;\n  white-space: nowrap;\n  \n  flex-grow: 1;\n  color: ${props => props.theme.textColor};\n\n  /* box-shadow: 0 0.1rem 0.2rem 0rem rgba(0,0,0,0.1) !important; */\n  /* border-bottom: 2px solid ${props => props.theme.bg.secondary}; */\n  \n  cursor: default;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nexport const LotName = styled.span`\n  ${fieldValueCss};\n  padding: 0 .5rem;\n`\n\nexport const LotNumber = styled.div`\n\t${fieldValueCss};\n\t\n\tpadding: 0 2rem;\n`\n\nexport const TemplateButton = styled.button`\n  ${iconButtonCss};\n  ${commonClickableIcon};\n  font-size: 2.5rem;\n  \n`\n\nexport const PasteIcon = styled.button`\n\n\t${iconButtonCss};\n  \t${commonClickableIcon};\n\tfont-size: 2.5rem;\n\n    animation: blinker 1s linear infinite;\n\n  @keyframes blinker {\n\t0% {\n\t  opacity: 0.5;\n\t}\n    50% {\n      //opacity: .2;\n\t  opacity: 1;\n      filter: brightness(120%);\n    }\n\t\n\t100% {\n      opacity: 0.5;\n\t}\n\t\n  }\n  \n`\n\n\n\nexport const CalendarContainer = styled.div`\n\toverflow: auto;\n\t\n\t${rowCss};\n`\nexport const PopupFooter = styled.div`\n  paddding: 1rem;\n  display: flex;\n  overflow: auto;\n  height: 3rem;\n`\n\nconst rowCss2 = css`\n  display: flex;\n  align-items: center;\n`\n\nexport const RowContainer = styled.div`\n\t${rowCss2};\n`\n\nexport const SubHeader = styled.div`\n\tdisplay: flex;\n  align-self: stretch;\n  align-items: center;\n  justify-content: space-between;\n  background: ${props => props.theme.bg.primary};\n  padding: 0.5rem;\n  border-bottom: 3px solid ${props => props.theme.bg.secondary};\n  \n`\nexport const IconRow = styled.div`\n  ${rowCss2};\n  align-items: center;\n  >div {\n    margin: 0 .5rem;\n  }\n`\n\nexport const ColumnContainer = styled.div`\n\tdisplay: flex;\n  flex-direction: column;\n  flex: 1;\n  align-self: stretch;\n  \n\t// margin-bottom: 1rem;\n  \n`\n\nexport const FadeLoaderCSS = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\n\n\nexport const HistoryBodyContainer = styled.div`\n\tdisplay: flex;\n\tpadding: 1rem;\n\tflex-direction: column;\n\toverflow-y: auto;\n\toverflow-x: hidden;\n\tflex: 1;\n\tborder-bottom: 3px solid ${props => props.theme.bg.secondary};\n\tborder-top: 3px solid ${props => props.theme.bg.secondary};\n`\n\nexport const HistoryItemContainer = styled.div`\n\tdisplay: flex;\n\tpadding: 1rem;\n\tbackground: rgba(200,0,200,0.2);\n\tmargin-bottom: 1rem;\n\tborder-radius: 1rem;\n\tbackground: ${props => props.theme.bg.primary};\n  \tbox-shadow: ${props => props.theme.cardShadow};\n`\n\nconst textCommon = css`\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n`\n\nconst historyContainerCommon = css`\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tflex-direction: column;\n`\n\nexport const HistoryDateContainer = styled.div`\n\t${historyContainerCommon};\n\tflex: 1;\n\talign-items: flex-end;\n`\n\n\nexport const HistoryDateText = styled.span`\n\t${textCommon};\n`\n\nexport const HistoryUserContainer = styled.div`\n\t${historyContainerCommon};\n\t// display: inline-flex;\n\t\n\t\n`\nexport const HistoryUserText = styled.span`\n\t${textCommon};\n\tbackground: ${props => props.theme.bg.quaternary};\n\tpadding: .5rem 1rem;\n\tborder-radius: .5rem;\n\tcolor: ${props => props.theme.bg.primary};\n\n`\n\nexport const HistoryInfoContainer = styled.div`\n\t${historyContainerCommon};\n\tflex: 2;\n\talign-items: flex-start;\n\tmargin: 0 1rem 0 1rem;\n\t\n`\n\nexport const HistoryInfoText = styled.span`\n\tdisplay: flex;\n\tjustify-content: flex-start;\n\talign-items: flex-start;\n`\n\nexport const TimePickerContainer = styled.div`\n\tflex: 1;\n\tflex-direction: column;\n\tdisplay: flex;\n\toverflow: hidden;\n`\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport const TemplateNameContainer = styled.div`\n  margin: 0 auto;\n  padding: 1rem 0;\n  align-self: center;\n  display: flex;\n  align-items: center;\n`\n\n\n\nexport const SyncProblem = styled(SyncProblemIcon)`\n  ${iconButtonCss};\n  ${commonClickableIcon};\n`\n\nexport const Sync = styled(SyncIcon)`\n  ${iconButtonCss};\n  ${commonClickableIcon};\n  color: ${props => props.sync ? \"#00d6d0\" : \"#a9a9a9\"};\n  transition: all 2s ease;\n`\n\n\n","import axios from 'axios';\nimport * as log from 'loglevel';\n\nimport { apiIPAddress } from '../settings/settings'\n\nconst operator = 'positions'\n\nconst logger = log.getLogger('Positions_Api', \"Position\");\n\nexport async function getPositions() {\n    try {\n        const response = await axios({\n            method: 'get',\n            url: apiIPAddress() + operator,\n            headers: {\n                'X-API-Key': '123456',\n                'Access-Control-Allow-Origin': '*'\n            }\n        });\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        throw error\n    }\n\n\n}\n\nexport async function deletePosition(ID) {\n    try {\n        const response = await axios({\n            method: 'DELETE',\n            url: apiIPAddress() + operator + '/' + ID,\n            headers: {\n                'Accept': 'application/json',\n                'X-API-Key': '123456',\n                'Access-Control-Allow-Origin': '*'\n            },\n        });\n\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}\n\n\nexport async function postPosition(position) {\n    try {\n        const response = await axios({\n            method: 'POST',\n            url: apiIPAddress() + operator,\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'application/json',\n                'Access-Control-Allow-Origin': '*'\n            },\n            data: JSON.stringify(position)\n        });\n\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}\n\nexport async function putPosition(position, ID) {\n\n    try {\n        const response = await axios({\n            method: 'PUT',\n            url: apiIPAddress() + operator + '/' + ID,\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'text/html',\n                'Access-Control-Allow-Origin': '*'\n            },\n            data: position\n        });\n\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}\n\n","import { normalize, schema } from 'normalizr';\n\nimport {\n    GET_POSITIONS_STARTED,\n    GET_POSITIONS_SUCCESS,\n    GET_POSITIONS_FAILURE,\n\n    POST_POSITION_STARTED,\n    POST_POSITION_SUCCESS,\n    POST_POSITION_FAILURE,\n\n    PUT_POSITION_STARTED,\n    PUT_POSITION_SUCCESS,\n    PUT_POSITION_FAILURE,\n\n    DELETE_POSITION_STARTED,\n    DELETE_POSITION_SUCCESS,\n    DELETE_POSITION_FAILURE,\n\n    ADD_POSITION,\n    UPDATE_POSITION,\n    UPDATE_POSITIONS,\n    REMOVE_POSITION,\n    SET_POSITION_ATTRIBUTES,\n    REVERT_CHILDREN,\n    SET_SELECTED_POSITION,\n    EDITING_POSITION,\n    SET_SELECTED_STATION_CHILDREN_COPY\n} from '../types/positions_types'\n\nimport uuid from 'uuid';\n\nimport * as api from '../../api/positions_api'\n\n// Import Schema\nimport { positionsSchema } from '../../normalizr/schema'\n\n// Import External Actions\nimport { putStation, putStationWithoutSavingChildren, setStationAttributes, setSelectedStation, updateStation } from './stations_actions'\nimport { deleteTask } from './tasks_actions'\nimport { putDevices } from './devices_actions'\n\n// Import Utils\nimport { deepCopy } from '../../methods/utils/utils';\n\n// Import Store\nimport store from '../store/index'\n\n// get\n// ******************************\nexport const getPositions = () => {\n    return async dispatch => {\n\n        function onStart() {\n            dispatch({ type: GET_POSITIONS_STARTED });\n        }\n        function onSuccess(positions) {\n            dispatch({ type: GET_POSITIONS_SUCCESS, payload: positions });\n            return positions;\n        }\n        function onError(error) {\n            dispatch({ type: GET_POSITIONS_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const positions = await api.getPositions();\n\n            let normalizedPositions = !!normalize(positions, positionsSchema).entities.positions ? normalize(positions, positionsSchema).entities.positions : {}\n\n            // Filter out entry positions\n            Object.values(normalizedPositions).map((pos) => {\n                if (pos.type === 'shelf_entry_position' || pos.type === \"charger_entry_position\") {\n                    delete normalizedPositions[pos._id]\n                }\n            })\n\n            return onSuccess(normalizedPositions);\n        } catch (error) {\n            return onError(error);\n        }\n    };\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// post\n// ******************************\nexport const postPosition = (position) => {\n    return async dispatch => {\n\n        function onStart() {\n            dispatch({ type: POST_POSITION_STARTED });\n        }\n        function onSuccess(position) {\n            dispatch({ type: POST_POSITION_SUCCESS, payload: position });\n            return position;\n        }\n        function onError(error) {\n            dispatch({ type: POST_POSITION_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            if (!('_id' in position)) {\n                position._id = uuid.v4()\n            }\n\n            // Was used for a bug that didnt exist\n            // if (position.rotation > 180) {\n            //     position.rotation = position.rotation - 360\n            // }\n\n            // else if (position.rotation < -180) {\n            //     position.rotation = position.rotation + 360\n            // }\n\n            delete position.temp\n            delete position.new\n            position.change_key = 'new'\n            const postedPosition = await api.postPosition(position);\n            return onSuccess(postedPosition);\n        } catch (error) {\n            return onError(error);\n        }\n    };\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// put\n// ******************************\nexport const putPosition = (position) => {\n    return async dispatch => {\n        function onStart() {\n            dispatch({ type: PUT_POSITION_STARTED });\n        }\n        function onSuccess(position) {\n            dispatch({ type: PUT_POSITION_SUCCESS, payload: position });\n            return position;\n        }\n        function onError(error) {\n            dispatch({ type: PUT_POSITION_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            let positionCopy = deepCopy(position)\n            delete positionCopy.temp\n\n            // Tells the backend that a position has changed\n            if (positionCopy.change_key !== 'deleted') positionCopy.change_key = 'changed'\n            const updatePosition = await api.putPosition(positionCopy, positionCopy._id);\n            return onSuccess(updatePosition)\n        } catch (error) {\n            return onError(error)\n        }\n    }\n}\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// delete\n// ******************************\nexport const deletePosition = (id, stationDelete) => {\n    return async dispatch => {\n        function onStart() {\n            dispatch({ type: DELETE_POSITION_STARTED });\n        }\n        function onSuccess(id) {\n            dispatch({ type: DELETE_POSITION_SUCCESS, payload: id });\n            return id;\n        }\n        function onError(error) {\n            dispatch({ type: DELETE_POSITION_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            let positionCopy = await dispatch(onDeletePosition(id, stationDelete))\n            // If theres a position copy then tell the backend is deleted\n            // There wouldnt be a position copy because the position did not exist on the backend\n            if (!!positionCopy) {\n                delete positionCopy.temp\n                // IMPORTANT!: Putting with change_key as deleted instead of deleting because it was causing back end issues\n                // Tells the backend that a position has been deleted\n                positionCopy.change_key = 'deleted'\n                const updatePosition = await dispatch(putPosition(positionCopy))\n                return onSuccess(positionCopy._id)\n            }\n            else {\n                return\n            }\n\n        } catch (error) {\n            return onError(error)\n        }\n    }\n}\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nexport const addPosition = (position) => {\n    return { type: ADD_POSITION, payload: position }\n}\n\nexport const updatePosition = (position) => {\n    return { type: UPDATE_POSITION, payload: position }\n}\n\nexport const revertChildren = (position) => {\n    return { type: REVERT_CHILDREN, payload: position }\n}\n\nexport const updatePositions = (positions, selectedPosition, childrenPositions, d3) => {\n    return { type: UPDATE_POSITIONS, payload: { positions, selectedPosition, childrenPositions, d3 } }\n}\n\nexport const removePosition = (id) => {\n    return { type: REMOVE_POSITION, payload: id }\n}\n\nexport const setPositionAttributes = (id, attr) => {\n    return { type: SET_POSITION_ATTRIBUTES, payload: { id, attr } }\n}\n\nexport const setSelectedPosition = (position) => {\n    return { type: SET_SELECTED_POSITION, payload: position }\n}\n\nexport const setEditingPosition = (bool) => {\n    return { type: EDITING_POSITION, payload: bool }\n}\n\nexport const setSelectedStationChildrenCopy = (positions) => {\n    return { type: SET_SELECTED_STATION_CHILDREN_COPY, payload: positions }\n}\n\nconst onDeletePosition = (id, stationDelete) => {\n    return async dispatch => {\n        const stationsState = store.getState().stationsReducer\n        const positionsState = store.getState().positionsReducer\n        const tasksState = store.getState().tasksReducer\n        const devicesState = store.getState().devicesReducer\n\n        let position = deepCopy(positionsState.positions[id])\n\n        // If the position has a parent then remove from parent\n        if (!!position.parent && !stationDelete) {\n\n            let selectedStation = deepCopy(stationsState.selectedStation)\n            // If there is an associated parent station\n            if (!!selectedStation) {\n                // Remove the position from the list of children\n                const positionIndex = selectedStation.children.indexOf(position._id)\n                if (!!position.new) {\n                    selectedStation.children.splice(positionIndex, 1)\n                    dispatch(updateStation(selectedStation))\n\n                }\n\n                else {\n                    let children = deepCopy(selectedStation.children)\n                    children.splice(positionIndex, 1)\n                    dispatch(setStationAttributes(selectedStation._id, { children }))\n\n                    // This goes through and finds any nwe children that might be in the chidlren array\n                    // If the child is new, delete it from the array\n                    // A new child will not have been saved yet, and since this is deleting and saving the parent station then the children array will also be saved\n                    let newChildIndex = []\n                    children.forEach(child => {\n                        if (!!positionsState.selectedStationChildrenCopy[child].new) {\n                            let newChildInd = children.indexOf[child]\n                            newChildIndex.push(newChildInd)\n                        }\n                    })\n\n                    // Revers the array because this index is being used for deletes\n                    // If it starts at the begining and deletes that one, then the next index will have changed\n                    newChildIndex.reverse()\n                    newChildIndex.forEach(child => {\n                        children.splice(child, 1)\n                    })\n\n                    await dispatch(putStationWithoutSavingChildren({ ...selectedStation, children: children, }))\n                }\n\n            }\n\n        }\n\n        // Remove from stations copy if need be\n        if (!!positionsState.selectedStationChildrenCopy) {\n            // Update the ChildrenCopy\n            let copyOfCopy = deepCopy(positionsState.selectedStationChildrenCopy)\n            delete copyOfCopy[position._id]\n            dispatch(setSelectedStationChildrenCopy(\n                copyOfCopy\n            ))\n        }\n\n\n        // If the position is new, just remove it from the local station\n        // Since the position is new, it does not exist in the backend and there can't be any associated tasks\n        if (!!position.new) {\n            dispatch(removePosition(position._id))\n            return null\n        }\n\n        // Else delete in backend and delete any associated tasks\n        else {\n            const tasks = tasksState.tasks\n\n            // Sees if any tasks are associated with the position and delete them\n            Object.values(tasks).filter(task => {\n                return task.load.position == position._id || task.unload.position == position._id\n            }).forEach(async relevantTask => {\n                await dispatch(deleteTask(relevantTask._id))\n            })\n\n            const devices = devicesState.devices\n            // See if the position belonged as an idle location for a device\n            Object.values(devices).filter(device => {\n                return !!device.idle_location && device.idle_location === position._id\n            }).forEach(async relevantDevice => {\n                relevantDevice.idle_location = null\n                await dispatch(putDevices(relevantDevice, relevantDevice._id))\n            })\n\n\n        }\n        return position\n    }\n}","import styled, { css } from \"styled-components\"\nimport Modal from \"react-modal\";\nimport {containerLayout} from \"../../../../../../common_css/layout\";\nimport {commonClickableIcon, iconButtonCss} from \"../../../../../../common_css/common_css\";\n\n\nexport const TemplateNameContainer = styled.div`\n  margin: 0 auto;\n  padding: 1rem 0;\n  align-self: center;\n  display: flex;\n  align-items: center;\n`\n\nexport const CloseButton = styled.button`\n\t${commonClickableIcon};\n\t${iconButtonCss};\n  font-size: 2rem;\n  position: absolute;\n  margin: 0.3rem 0.5rem 0.3rem 0.5rem;\n  border: 1px solid ${props => props.color};\n  border-radius: 0.35rem;\n  padding: .25rem .5rem\n`\n\nexport const Header = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\tpadding: 1rem 0.5rem;\n\tmargin: 0;\n\tbackground: ${props => props.theme.bg.secondary};\n\tz-index: 10;\n\tbox-shadow: 0px 0px 6px 1px rgba(0,0,0,0.2);\n\talign-self: stretch;\n  //position: relative;\n`\n\nexport const TemplateLabel = styled.span`\n\tmargin-right: 1rem;\n  white-space: nowrap ;\n  width: fit-content;\n  font-size: ${props => props.theme.fontSize.sz2};\n  font-family: ${props => props.theme.font.primary};\n`\n\nexport const Container2 = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  align-items: center;\n  overflow: hidden;\n  background: ${props => props.theme.bg.primary};\n`;\n\nexport const WorkInstructionsContainer = styled.div`\n    margin-left: 2rem;\n    margin-right: 2rem;\n`\n\nexport const ContentContainer = styled.div`\n    align-self: stretch;\n    display: flex;\n    flex-direction: column;\n    overflow-y: auto;\n`\n\nexport const Label = styled.span`\n    font-size: ${props => props.theme.fontSize.sz2};\n    font-weight: ${props => props.theme.fontWeight};\n`\n\nexport const TheBody = styled.div`\n  position: relative;\n  overflow: auto;\n  flex: 1;\n  display: flex;\n  flex-direction: column;  \n\n`\n\nexport const ButtonContainer = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\twidth: 100%;\n\tjustify-content: center;\n\talign-self: center;\n\tpadding: 1.5rem;\n\n\tbackground: ${props => props.theme.bg.secondary};\n\tz-index: 10;\n\tbox-shadow: 0px 0px 6px 1px rgba(0,0,0,0.2);\n`\n","import styled, { css } from \"styled-components\"\n\nconst transitionTime = '.5s'\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  transition: all ease ${transitionTime};\n  box-shadow: 0px 5px 5px rgba(0, 0, 0, 0.2);\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n  background: linear-gradient(217deg, rgba(0, 0, 0, 0.49), rgba(0, 0, 0, 0.09) 70.71%),\n  linear-gradient(127deg, rgba(0, 0, 0, 0.33), rgba(0, 0, 0, 0.28) 70.71%),\n  linear-gradient(336deg, rgba(0, 0, 0, 0.28), rgba(0, 0, 0, 0.29) 70.71%);\n  border-radius: .3rem;\n`\n// box-shadow: rgba(50, 50, 93, 0.25) 0px 13px 27px -5px, rgba(0, 0, 0, 0.3) 0px 8px 16px -8px;\n// box-shadow: rgba(50, 50, 93, 0.25) 0px 50px 100px -20px, rgba(0, 0, 0, 0.3) 0px 30px 60px -30px, rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset;\n\n// ,\n\nexport const StationsContainer = styled.div`\n    display: flex;\n\n    padding: 1rem 0;\n`\n\nexport const NameContainer = styled.div`\n    align-self: stretch;\n    padding: .5rem 1rem;\n    display: flex;\n    align-items: center;\n    justify-content: center;  \n`\n\nexport const ProcessName = styled.span`\n    color: ${props => props.theme.schema.lots.solid};\n    font-size: ${props => props.theme.fontSize.sz2};\n    font-weight: ${props => props.theme.fontWeight.bold};\n    white-space: nowrap;\n`","import styled, { css } from \"styled-components\"\n\nexport const Container = styled.div`\n    background: red;\n    display: flex;\n    align-self: stretch;\n`\n\nexport const ProcessName = styled.span`\n    color: ${props => props.theme.schema.lots.solid};\n    font-size: ${props => props.theme.fontSize.sz2};\n    font-weight: ${props => props.theme.fontWeight.bold};\n`","import styled, { css } from \"styled-components\"\n\nexport const Container = styled.div`\n    background: ${props => props.theme.bg.primary};\n    display: flex;\n    align-self: stretch;\n    margin: 0 1rem;\n    display: flex;\n    flex-direction: column;\n    box-shadow: 7px 5px 10px rgba(0,0,0,0.2);\n    // border: thin solid rgba(0,0,0,0.3);\n    color: ${props => props.theme.textColor};\n    border-radius: .3rem;\n    width: fit-content;\n  \tmin-width: 10rem;\n`\n\nexport const TooltipContainer = styled.div`\n    margin-right: 1rem;\n`\n\nexport const ValidityIcon = styled.i`\n    color: ${props => props.valid ? props.theme.good : props.theme.bad};\n    margin-right: 1rem;\n`\n\nexport const FieldLabel = styled.span`\n    white-space: nowrap;\n`\n\nexport const InstructionContainer = styled.button`\n    display: flex;\n    align-items: center;\n    border: none;\n    background: transparent;\n    \n    transition: all .2s ease;\n    padding: .25rem .5rem;\n    border-radius: .2rem;\n    :hover {\n        background-color: rgba(0,0,0,0.2);\n    }\n    :active {\n        background-color: rgba(0,0,0,0.4);\n    }\n`\n\nexport const Name = styled.span`\n    margin: 0;\n    padding: 0;\n    font-weight: ${props => props.theme.fontWeight.bold};\n    font-size: ${props => props.theme.fontSize.sz3};\n    // background: red;\n`\n\nexport const Header = styled.div`\n    display: flex;\n    align-self: stretch;\n    justify-content: center;\n    position: relative;\n    margin: .25rem .5rem;\n    align-items: center;\n`\n\n\nexport const Body = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-self: stretch;\n    flex: 1;\n    padding: .5rem;\n    \n    div:not(:first-child) {\n      margin-top: .25rem;\n\t}\n`","import styled, { css } from \"styled-components\"\nimport {commonClickableIcon, iconButtonCss} from \"../../../common_css/common_css\";\n\nexport const EditIcon = styled.button`\n    ${commonClickableIcon};\n    ${iconButtonCss};\n    font-size: ${props => props.size};\n`","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport * as styled from './edit_button.style'\n\nconst EditButton = props => {\n\n    const {\n        color,\n        onClick,\n        size,\n        style,\n    } = props\n\n    return (\n        <styled.EditIcon\n            className={'far fa-edit'}\n            color={color}\n            size={size}\n            style={style}\n            onClick={onClick}\n        />\n    );\n};\n\nEditButton.propTypes = {\n    color: PropTypes.string,\n    onClick: PropTypes.func,\n    size: PropTypes.string,\n};\n\nEditButton.defaultProps = {\n    color: '#42adf5',\n    onClick: () => null,\n    size: '1.25rem',\n};\n\nexport default EditButton;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport * as styled from './station_work_instructions.style'\nimport EditButton from \"../../../../../../../basic/edit_button/edit_button\";\nimport {isString} from \"../../../../../../../../methods/utils/string_utils\";\nimport {FIELD_COMPONENT_DATA_TYPES, FIELD_DATA_TYPES} from \"../../../../../../../../constants/lot_contants\";\nimport {convertValue} from \"../../../../../../../../methods/utils/card_utils\";\nimport ErrorTooltip from \"../../../../../../../basic/form/error_tooltip/error_tooltip\";\n\nconst VALIDITY_STATUSES = {\n    VALID: \"VALID\",\n    NO_VALUE: \"NO VALUE\",\n    VALUE_ERROR: \"ERROR RETRIEVING VALUE\"\n}\nconst StationWorkInstructions = props => {\n\n    const {\n        name,\n        workInstructions,\n        onEditClick,\n        processId,\n        stationId,\n    } = props\n\n    const checkWorkInstructionValue = (value, component) => {\n\n        const dataType = FIELD_COMPONENT_DATA_TYPES[component]\n\n        if(value) {\n            switch (dataType) {\n\n\n                case FIELD_DATA_TYPES.PDF: {\n                    // for pdf document to have data, value must have truthy data attribute\n                    const {data, id} = value || {}\n\n                    if(data) {\n                        return VALIDITY_STATUSES.VALID\n                    }\n                    else if(id && !data) {\n                        return VALIDITY_STATUSES.VALUE_ERROR\n                    }\n                    else {\n                        return VALIDITY_STATUSES.NO_VALUE\n                    }\n                }\n                default: {\n                    // otherwise, if there is a truthy value attribute, set to true\n                    return VALIDITY_STATUSES.VALID\n                }\n            }\n        }\n\n        return false\n    }\n\n    const renderWorkInstructions = () => {\n        return workInstructions.fields.map((workInstruction, index) => {\n\n            const {label, value, component} = workInstruction || {}\n\n            let isValid\n            let iconClassName\n\n            const validityStatus = checkWorkInstructionValue(value, component)\n            switch(validityStatus) {\n                case VALIDITY_STATUSES.VALID: {\n                    isValid = true\n                    iconClassName = 'fas fa-check'\n                    break\n                }\n                case VALIDITY_STATUSES.NO_VALUE: {\n                    isValid = false\n                    iconClassName = 'fas fa-times'\n                    break\n                }\n                case VALIDITY_STATUSES.VALUE_ERROR: {\n                    isValid = false\n                    iconClassName = 'fas fa-times'\n                    break\n                }\n                default: {\n                    isValid = false\n                    iconClassName = 'fas fa-times'\n                }\n\n            }\n\n            return(\n                <styled.InstructionContainer\n                    key={index}\n                    onClick={() => onEditClick({processId, stationId, index})}\n                >\n                    {validityStatus === VALIDITY_STATUSES.VALUE_ERROR ?\n                        <ErrorTooltip\n                            visible={true}\n                            // color={'#32a852'}\n                            text={'Error retrieving data.'}\n                            ContainerComponent={styled.TooltipContainer}\n                        />\n                        :\n                        <styled.ValidityIcon\n                            className={iconClassName}\n                            valid={isValid}\n                        />\n                    }\n                    <styled.FieldLabel>{label}</styled.FieldLabel>\n                </styled.InstructionContainer>\n            )\n        })\n    }\n\n    return (\n        <styled.Container>\n            <styled.Header>\n                <EditButton\n                    style={{\n                        position: 'absolute',\n                        left: 0\n                    }}\n                    onClick={() => onEditClick({processId, stationId})}\n                />\n                <styled.Name>{name}</styled.Name>\n            </styled.Header>\n\n            <styled.Body>\n                {renderWorkInstructions()}\n            </styled.Body>\n        </styled.Container>\n    );\n};\n\nStationWorkInstructions.propTypes = {\n    onEditClick: PropTypes.func,\n    workInstructions: PropTypes.object\n};\n\nStationWorkInstructions.defaultProps = {\n    onEditClick: () => null,\n    workInstructions: {fields: []}\n};\n\n\n\nexport default StationWorkInstructions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {SkuContext} from '../../sku_editor'\nimport StationWorkInstructions from \"./station_work_instructions\";\n\nconst SkuContextStationWorkInstructions = props => {\n\n    const {\n        processId,\n        stationId\n    } = props\n\n    return (\n        <SkuContext.Consumer>\n            {({setShowInstructionEditor, showInstructionEditor}) => {\n                return(\n                    <StationWorkInstructions\n                        processId={processId}\n                        stationId={stationId}\n                        onEditClick={(value) => {\n                            setShowInstructionEditor(value)\n                        }}\n                        {...props}\n                    />\n                )\n            }}\n        </SkuContext.Consumer>\n    );\n};\n\nSkuContextStationWorkInstructions.propTypes = {\n\n};\n\nSkuContextStationWorkInstructions.defaultProps = {\n\n};\n\nexport default SkuContextStationWorkInstructions;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport * as styled from \"./process_work_intructions.style\";\nimport StationWorkInstructions from \"../station_work_instructions/station_work_instructions\";\nimport {useSelector} from \"react-redux\";\nimport ScrollContainer from \"../../../../../../../basic/scroll_container/scroll_container\";\nimport SkuContextStationWorkInstructions from \"../station_work_instructions/sku_context_station_work_instructions\";\n\nconst ProcessWorkInstructions = props => {\n    const {\n        name,\n        stationIds,\n        containerStyle,\n        workInstructions,\n        processId\n    } = props\n\n    const stations = useSelector(state => { return state.stationsReducer.stations }) || {}\n\n    const [scrolling, setScrolling] = useState(false)\n\n    const renderStations = () => {\n        return stationIds.map(stationId => {\n\n            const station = stations[stationId] || {}\n            // console.log('stationId',stationId)\n            // console.log('station',station)\n\n            const {\n                name\n            } = station\n            // console.log('station',station)\n            return(\n                <SkuContextStationWorkInstructions\n                    stationId={stationId}\n                    key={stationId}\n                    processId={processId}\n                    workInstructions={workInstructions[stationId]}\n                    name={name}\n                />\n            )\n        })\n    }\n\n    return (\n        <styled.Container\n            style={containerStyle}\n            scrolling={scrolling}\n        >\n            <styled.NameContainer scrolling={scrolling}>\n                <styled.ProcessName>{name}</styled.ProcessName>\n            </styled.NameContainer>\n\n            {/**/}\n                <ScrollContainer\n                    dividerTransition={'0.25s'}\n                    threshold={2}\n                    containerStyle={{\n                        // padding: '1rem 0'\n                        // border: scrolling && '1px solid black'\n                    }}\n                    axis={'x'}\n                    setScrolling={setScrolling}\n                >\n                    <styled.StationsContainer>\n                {renderStations()}\n                    </styled.StationsContainer>\n                </ScrollContainer>\n            {/*</styled.StationsContainer>*/}\n        </styled.Container>\n    );\n};\n\nProcessWorkInstructions.propTypes = {\n    name: PropTypes.string,\n    stations: PropTypes.array,\n    workInstructions: PropTypes.object\n};\n\nProcessWorkInstructions.defaultProps = {\n    name: '',\n    stations: [],\n    workInstructions: {}\n};\n\nexport default ProcessWorkInstructions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {useSelector} from \"react-redux\";\n\nimport * as styled from './work_instructions.style'\nimport ProcessWorkInstructions from \"./process_work_intructions/process_work_intructions\";\nimport {getProcessStations} from \"../../../../../../../methods/utils/processes_utils\";\n\nconst WorkInstructions = props => {\n\n    const {\n        workInstructions\n    } = props\n\n    const processes = useSelector(state => { return state.processesReducer.processes }) || {}\n    const tasks = useSelector(state => { return state.tasksReducer.tasks }) || {}\n\n    const renderProcesses = () => {\n        // console.log('asdasds')\n        return Object.values(processes).map(process => {\n            const {\n                name,\n                _id: processId,\n                routes\n            } = process\n\n            const stations = getProcessStations(process, tasks)\n\n            return(\n                <ProcessWorkInstructions\n                    key={processId}\n                    workInstructions={workInstructions[processId]}\n                    containerStyle={{margin: '1rem 0'}}\n                    name={name}\n                    stationIds={Object.keys(stations)}\n                    processId={processId}\n                />\n            )\n        })\n    }\n    return (\n        <div style={{}}>\n            {renderProcesses()}\n        </div>\n    );\n};\n\nWorkInstructions.propTypes = {\n    workInstructions: PropTypes.object\n};\n\nWorkInstructions.defaultProps = {\n    workInstructions: {}\n};\n\nexport default WorkInstructions;\n","import styled, { css } from \"styled-components\"\n\nexport const Container = styled.div`\n    flex: 1;\n    align-self: stretch;\n    background: ${props => props.theme.bg.primary};\n    display: flex;\n    flex-direction: column;\n  \toverflow: hidden;\n`\n\nexport const StationName = styled.span`\n    font-size: ${props => props.theme.fontSize.sz2};\n    font-weight: ${props => props.theme.fontWeight.bold};\n    \n`\n\nexport const Header = styled.div`\n  background: ${props => props.theme.bg.secondary};\n    display: flex;\n    align-self: stretch;\n    align-items: center;\n    justify-content: center;\n    padding: .5rem 1rem;\n  //margin-bottom: 1rem;\n`\n\nexport const Footer = styled.div`\n  background: ${props => props.theme.bg.secondary};\n    display: flex;\n    align-self: stretch;\n    align-items: center;\n    justify-content: center;\n    padding: .5rem 1rem;\n  \tmin-height: 3rem;\n`\n\nexport const FieldsContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-self: stretch;\n    flex: 1;\n    padding: 0 1rem 1rem 1rem;\n  padding-top: 1rem;\n    \n    \n  \n  overflow-y: auto;\n`\nexport const FieldContainer = styled.div`\n    display: flex;\n    align-items: center;\n  flex-wrap: wrap;\n  justify-content: center;\n  //background: blue;\n\n  :not(:first-child) {\n    margin-top: 1rem;\n  }\n  \n  //overflow: hidden;\n   \n`\n\nexport const ComponentContainer = styled.div`\n\t//overflow-y: auto;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nexport const FieldName = styled.span`\n    font-size: ${props => props.theme.fontSize.sz3};\n    margin-right: 1rem;\n  font-weight: ${props => props.theme.fontWeight.bold};\n`","import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\n\nimport * as styled from './instruction_editor.style'\nimport {useSelector} from \"react-redux\";\nimport FieldComponentMapper from \"../../../lot_template_editor/field_component_mapper/field_component_mapper\";\nimport {\n    FIELD_COMPONENT_DATA_TYPES,\n    FIELD_COMPONENT_NAMES,\n    FIELD_DATA_TYPES\n} from \"../../../../../../../../constants/lot_contants\";\nimport Button from \"../../../../../../../basic/button/button\";\n\nconst InstructionEditor = props => {\n\n    const {\n        stationId,\n        processId,\n        fields,\n        selectedIndex,\n        close\n    } = props\n\n    const stations = useSelector(state => { return state.stationsReducer.stations }) || {}\n\n    const [station, setStation] = useState({})\n    const {\n        name\n    } = station || {}\n\n    useEffect(() => {\n        setStation(stations[stationId] || {})\n    }, [stationId])\n\n    const renderFields = () => {\n        return fields\n            .filter((field, index) => selectedIndex >= 0 ? index === selectedIndex : true)\n            .map((field, index) => {\n                const {\n                    label,\n                    value,\n                    component\n                } = field\n\n                const dataType = FIELD_COMPONENT_DATA_TYPES[component]\n\n                return(\n                    <styled.FieldContainer>\n                        <styled.FieldName>{label}</styled.FieldName>\n\n                        <FieldComponentMapper\n                            component={component}\n                            mapInput={(val) => {\n                                switch(dataType) {\n                                    // for pdf, the data comes as object {id, data}\n                                    // we just want the data for the field\n                                    case FIELD_DATA_TYPES.PDF: {\n                                        return val?.data\n                                    }\n                                    default: {\n                                        return val\n                                    }\n                                }\n                                    return val?.data\n                            }}\n                            mapOutput={(val) => {\n                                switch(dataType) {\n                                    // for pdf, the output is just the file, but we want to store the file and id\n                                    // we just want the data for the field\n                                    case FIELD_DATA_TYPES.PDF: {\n                                        return {\n                                            data: val,\n                                            id: null,\n                                            formMeta: {\n                                                changed: true\n                                            }\n                                        }\n                                    }\n                                    default: {\n                                        return val\n                                    }\n                                }\n                                    return val?.data\n                            }}\n\n                            fieldName={`workInstructions[${processId}][${stationId}].fields[${selectedIndex >= 0 ? selectedIndex : index}].value`}\n                            preview={false}\n                            showName={false}\n                        />\n                    </styled.FieldContainer>\n                )\n            })\n    }\n\n    return (\n        <styled.Container>\n            <styled.Header>\n                <styled.StationName>{name}</styled.StationName>\n            </styled.Header>\n\n            <styled.FieldsContainer>{renderFields()}</styled.FieldsContainer>\n\n            <styled.Footer>\n                <Button\n                    schema={'ok'}\n                    label={'Ok'}\n                    onClick={close}\n                />\n            </styled.Footer>\n        </styled.Container>\n    );\n};\n\nInstructionEditor.propTypes = {\n    // width: PropTypes.string\n};\n\nInstructionEditor.defaultProps = {\n    width: '10%'\n};\n\n\n\nexport default InstructionEditor;\n","import {getProcessStations} from \"./processes_utils\";\nimport {FIELD_COMPONENT_NAMES} from \"../../constants/lot_contants\";\n\nexport const iterateWorkInstructionFields = async (workInstructions, callback) => {\n    await iterateWorkInstructions(workInstructions, async (instructionObjects, processId, stationId) => {\n        const {fields} = instructionObjects\n\n        let index = 0\n        for(const field of fields) {\n            await callback(field, processId, stationId, index)\n            index = index + 1\n        }\n    })\n}\n\nexport const iterateWorkInstructionsSync = (workInstructions, callback) => {\n    for(const processEntry of Object.entries(workInstructions || {})) {\n        const [processId, stationObjs] = processEntry\n\n        for(const stationEntry of Object.entries(stationObjs|| {})) {\n            const [stationId, instructionObjects] = stationEntry\n\n            callback(instructionObjects, processId, stationId)\n        }\n    }\n}\n\nexport const iterateWorkInstructions = async (workInstructions, callback) => {\n    for(const processEntry of Object.entries(workInstructions || {})) {\n        const [processId, stationObjs] = processEntry\n\n        for(const stationEntry of Object.entries(stationObjs)) {\n            const [stationId, instructionObjects] = stationEntry\n\n            await callback(instructionObjects, processId, stationId)\n        }\n    }\n}\n\nexport const getDefaultWorkInstructions = (processes, tasks) => {\n    let workInstructions = {}\n\n    Object.values(processes).forEach(process => {\n        const {\n            _id: processId\n        } = process\n\n        workInstructions[processId] = {}\n\n        const stationIds = getProcessStations(process, tasks)\n        Object.keys(stationIds).forEach(stationId => {\n            // workInstructions[processId]\n            workInstructions[processId][stationId] = {\n                stationId,\n                fields: [\n                    {\n                        label: 'Cycle Time',\n                        value: null,\n                        component: FIELD_COMPONENT_NAMES.TIME_SELECTOR,\n                    },\n                    {\n                        label: 'Work Instructions',\n                        value: null,\n                        component: FIELD_COMPONENT_NAMES.PDF_SELECTOR,\n                    }\n                ]\n            }\n        })\n    })\n\n    return workInstructions\n}\n","import axios from 'axios';\n\nimport log from '../logger';\n\nimport {apiIPAddress} from '../settings/settings';\nconst operator = 'image';\nconst logger = log.getLogger('Images', 'Images');\n\nexport async function getImage() {\n  try {\n\n    const response = await axios({\n      method: 'get',\n      url: apiIPAddress() + operator,\n      headers: {\n        'X-API-Key': '123456',\n      }\n      //responseType: 'blob'\n    });\n\n    // Success\n    const data = response.data;\n    logger.debug(\"getImage data\", data)\n\n    const dataJson = JSON.parse(data);\n    logger.debug(\"getImage dataJson\", dataJson)\n    return dataJson;\n\n\n} catch (error) {\n\n    // Error 😨\n    if (error.response) {\n        /*\n         * The request was made and the server responded with a\n         * status code that falls out of the range of 2xx\n         */\n        logger.debug('error.response.data', error.response.data);\n        logger.debug('error.response.status',error.response.status);\n        logger.debug('error.response.headers',error.response.headers);\n    } else if (error.request) {\n        /*\n         * The request was made but no response was received, `error.request`\n         * is an instance of XMLHttpRequest in the browser and an instance\n         * of http.ClientRequest in Node.js\n         */\n        logger.debug('error.request', error.request);\n    } else {\n        // Something happened in setting up the request and triggered an Error\n        logger.debug('error.message', error.message);\n    }\n    logger.debug('error', error);\n  }\n\n}\n\nexport async function postImage(data) {\n    try {\n\n        const response = await axios({\n            method: 'POST',\n            url: apiIPAddress() + operator,\n            headers: {\n                'Content-Type': undefined,\n                'X-API-Key': '123456',\n                'Accept': 'application/json',\n                'Access-Control-Allow-Origin': '*'\n            },\n            data\n        });\n\n        // Success\n        const responseData = response.data;\n\n        const responseDataJson = JSON.parse(responseData);\n        return responseDataJson;\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n\t\t\t * The request was made and the server responded with a\n\t\t\t * status code that falls out of the range of 2xx\n\t\t\t */\n            logger.debug('error.response.data', error.response.data);\n            logger.debug('error.response.status',error.response.status);\n            logger.debug('error.response.headers',error.response.headers);\n        } else if (error.request) {\n            /*\n\t\t\t * The request was made but no response was received, `error.request`\n\t\t\t * is an instance of XMLHttpRequest in the browser and an instance\n\t\t\t * of http.ClientRequest in Node.js\n\t\t\t */\n            logger.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            logger.debug('error.message', error.message);\n        }\n        logger.debug('error', error);\n    }\n\n}\n","import axios from 'axios';\n\n\nimport {apiIPAddress} from '../settings/settings';\nconst operator = 'pdf';\n\n\nexport async function getPdfs() {\n  try {\n\n    const response = await axios({\n      method: 'get',\n      url: apiIPAddress() + operator,\n      headers: {\n        'X-API-Key': '123456',\n      }\n    });\n\n    // Success\n    const data = response.data;\n\n    const dataJson = JSON.parse(data);\n    return dataJson;\n\n\n} catch (error) {\n\n    // Error 😨\n    if (error.response) {\n        /*\n         * The request was made and the server responded with a\n         * status code that falls out of the range of 2xx\n         */\n        console.error('error.response.data', error.response.data);\n        console.error('error.response.status',error.response.status);\n        console.error('error.response.headers',error.response.headers);\n    } else if (error.request) {\n        /*\n         * The request was made but no response was received, `error.request`\n         * is an instance of XMLHttpRequest in the browser and an instance\n         * of http.ClientRequest in Node.js\n         */\n        console.error('error.request', error.request);\n    } else {\n        // Something happened in setting up the request and triggered an Error\n        console.error('error.message', error.message);\n    }\n    console.error('error', error);\n  }\n\n}\n\nexport function b64toBlob(b64Data, contentType) {\n    contentType = contentType || '';\n    var sliceSize = 512;\n    b64Data = b64Data.replace(/^[^,]+,/, '');\n    b64Data = b64Data.replace(/\\s/g, '');\n    var byteCharacters = window.atob(b64Data);\n    var byteArrays = [];\n\n    for (var offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n        var slice = byteCharacters.slice(offset, offset + sliceSize);\n\n        var byteNumbers = new Array(slice.length);\n        for (var i = 0; i < slice.length; i++) {\n            byteNumbers[i] = slice.charCodeAt(i);\n        }\n\n        var byteArray = new Uint8Array(byteNumbers);\n\n        byteArrays.push(byteArray);\n    }\n\n    let blob = new Blob(byteArrays, {type: contentType});\n    return blob;\n}\n\nexport async function getPdf(id) {\n    try {\n\n        const response = await axios({\n            method: 'get',\n            url: apiIPAddress() + operator + \"/\" + id,\n            headers: {\n                'X-API-Key': '123456',\n                'Access-Control-Allow-Origin': '*'\n            }\n        });\n        // Success 🎉\n        const data = response.data;\n\n        const blobData = b64toBlob(data, 'application/pdf')\n\n        return blobData;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n\t\t\t * The request was made and the server responded with a\n\t\t\t * status code that falls out of the range of 2xx\n\t\t\t */\n            console.error('error.response.data', error.response.data);\n            console.error('error.response.status',error.response.status);\n            console.error('error.response.headers',error.response.headers);\n        } else if (error.request) {\n            /*\n\t\t\t * The request was made but no response was received, `error.request`\n\t\t\t * is an instance of XMLHttpRequest in the browser and an instance\n\t\t\t * of http.ClientRequest in Node.js\n\t\t\t */\n            console.error('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            console.error('error.message', error.message);\n        }\n        console.error('error', error);\n    }\n\n}\n\nexport async function postPdf(pdf) {\n    try {\n\n        console.log('postPdfpostPdfpostPdfpostPdfpostPdfpostPdf')\n\n        const response = await axios({\n            method: 'POST',\n            url: apiIPAddress() + operator,\n            headers: {\n                // 'Content-Type': 'multipart/form-data',\n                'X-API-Key': '123456',\n                // 'Accept': 'application/json',\n                // 'Access-Control-Allow-Origin': '*'\n            },\n            data: pdf,\n        });\n\n        // Success\n        const responseData = response.data;\n\n\n        const responseDataJson = JSON.parse(responseData);\n        return responseDataJson;\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n\t\t\t * The request was made and the server responded with a\n\t\t\t * status code that falls out of the range of 2xx\n\t\t\t */\n            console.error('error.response.data', error.response.data);\n            console.error('error.response.status',error.response.status);\n            console.error('error.response.headers',error.response.headers);\n        } else if (error.request) {\n            /*\n\t\t\t * The request was made but no response was received, `error.request`\n\t\t\t * is an instance of XMLHttpRequest in the browser and an instance\n\t\t\t * of http.ClientRequest in Node.js\n\t\t\t */\n            console.error('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            console.error('error.message', error.message);\n        }\n        console.error('error', error);\n    }\n\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport useChange from \"../useChange\";\n\nconst ChangeDetector = props => {\n\n\tuseChange()\n\treturn (\n\t\t<div>\n\n\t\t</div>\n\t);\n};\n\nChangeDetector.propTypes = {\n\n};\n\nexport default ChangeDetector;\n","import React, {useContext, useState, createContext, useRef, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport LotCreatorForm from \"../lot_template_editor/template_form\";\nimport * as styled from \"./sku_editor.style\";\nimport {isMobile} from \"react-device-detect\";\nimport ScaleWrapper from \"../../../../../basic/scale_wrapper/scale_wrapper\";\nimport LotEditor from \"../card_editor/lot_editor\";\nimport {immutableReplace, isArray, isNonEmptyArray} from \"../../../../../../methods/utils/array_utils\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {convertValue, getFormCustomFields} from \"../../../../../../methods/utils/card_utils\";\nimport LotFields from \"../card_editor/lot_fields/lot_fields\";\nimport {\n    BASIC_LOT_TEMPLATE, DEFAULT_COUNT_DISPLAY_NAME, DEFAULT_DISPLAY_NAMES,\n    DEFAULT_NAME_DISPLAY_NAME, FIELD_COMPONENT_DATA_TYPES, FIELD_COMPONENT_NAMES, FIELD_DATA_TYPES,\n    getDefaultFields\n} from \"../../../../../../constants/lot_contants\";\nimport Button from \"../../../../../basic/button/button\";\nimport LotEditorMainContent from \"../card_editor/lot_editor_main_content/lot_editor_main_content\";\nimport BackButton from \"../../../../../basic/back_button/back_button\";\nimport TextField from \"../../../../../basic/form/text_field/text_field\";\nimport Textbox from \"../../../../../basic/textbox/textbox\";\nimport {isObject} from \"../../../../../../methods/utils/object_utils\";\nimport {LotFormSchema} from \"../../../../../../methods/utils/form_schemas\";\nimport set from \"lodash/set\";\nimport {Formik} from \"formik\";\nimport {FORM_MODES} from \"../../../../../../constants/scheduler_constants\";\nimport {\n    postLotTemplate,\n    putLotTemplate,\n    setSelectedLotTemplate\n} from \"../../../../../../redux/actions/lot_template_actions\";\nimport {ThemeContext} from \"styled-components\";\nimport WorkInstructions from \"./work_instructions/work_instructions\";\nimport {getProcessStations} from \"../../../../../../methods/utils/processes_utils\";\nimport withModal from \"../../../../../../higher_order_components/with_modal/with_modal\";\nimport InstructionEditor from \"./work_instructions/instruction_editor/instruction_editor\";\nimport useChange from \"../../../../../basic/form/useChange\";\nimport {\n    getDefaultWorkInstructions,\n    iterateWorkInstructionFields, iterateWorkInstructions, iterateWorkInstructionsSync\n} from \"../../../../../../methods/utils/workinstruction_utils\";\nimport {postImage} from \"../../../../../../api/image_api\";\nimport {getPdf, getPdfs, postPdf} from \"../../../../../../api/pdf_api\";\nimport PdfViewer from \"../../../../../basic/pdf_viewer/pdf_viewer\";\nimport PdfViewerModal from \"../../../../../basic/pdf_viewer/pdf_viewer_modal\";\nimport {postWorkInstruction} from \"../../../../../../redux/actions/work_instructions_actions\";\nimport {putWorkInstruction} from \"../../../../../../api/work_instructions_api\";\nimport {isString} from \"../../../../../../methods/utils/string_utils\";\nimport ChangeDetector from \"../../../../../basic/form/change_detector/change_detector\";\n\nconst InstructionEditorModal = withModal(InstructionEditor, 'auto', '90%', 'auto', '90%')\n\nexport const SkuContext = createContext()\nconst buttonStyle = {marginBottom: '0rem', marginTop: 0}\n\n\n\nconst SkuEditor = (props) => {\n\n    const {\n        selectedLotTemplatesId,\n        lotTemplateId,\n        close\n    } = props\n\n    const themeContext = useContext(ThemeContext)\n\n    const formRef = useRef(null)\n    const {\n        resetForm = () => {}\n    } = formRef?.current || {}\n\n    const dispatch = useDispatch()\n    const dispatchSetSelectedLotTemplate = (id) => dispatch(setSelectedLotTemplate(id))\n    const dispatchPutLotTemplate = async (lotTemplate, id) => await dispatch(putLotTemplate(lotTemplate, id))\n    const dispatchPostWorkInstruction = async (workInstruction) => await dispatch(postWorkInstruction(workInstruction))\n    const dispatchPutWorkInstruction = async (workInstruction, id) => await dispatch(putWorkInstruction(workInstruction, id))\n    const dispatchPostLotTemplate= async (lotTemplate) => await dispatch(postLotTemplate(lotTemplate))\n\n    const lotTemplate = useSelector(state => { return state.lotTemplatesReducer.lotTemplates[selectedLotTemplatesId] })\n    const reduxWorkInstructions = useSelector(state => { return state.workInstructionsReducer.workInstructions }) || {}\n    const processes = useSelector(state => { return state.processesReducer.processes }) || {}\n    const tasks = useSelector(state => { return state.tasksReducer.tasks }) || {}\n\n    const [formMode, setFormMode] = useState(selectedLotTemplatesId ? FORM_MODES.UPDATE : FORM_MODES.CREATE) // if cardId was passed, update existing. Otherwise create new\n    const [showInstructionEditor, setShowInstructionEditor] = useState(false)\n    const [editingFields, setEditingFields] = useState(false)\n    const [confirmDeleteTemplateModal, setConfirmDeleteTemplateModal] = useState(false);\n    const [pdfs, setPdfs] = useState({});\n    const [loaded, setLoaded] = useState(false);\n\n    const fields = getFormCustomFields(lotTemplate?.fields || [])\n\n    /*\n\t* reset form if template id changes\n\t* */\n    useEffect(() => {\n        resetForm()\n    }, [selectedLotTemplatesId])\n\n    /*\n    * this use-effect loads all the pdfs in the templates work instructions.\n    * Since the files may be large, they're only retrieved in the context of this component instead of being stored in redux\n    * */\n    useEffect(() => {\n        checkForPdfs()\n        return () => {};\n    }, [lotTemplate?.workInstructions]);\n\n    /*\n    * This goes through each work instruction, checks if it has a PDF, and if so, loads it from the backend and stores them in state\n    * */\n    const checkForPdfs = async () => {\n        // loop through all work instructions\n        await iterateWorkInstructions(lotTemplate?.workInstructions,  async (workInstructionId, processId, stationId) => {\n\n            // get work instruction from redux\n            const workInstruction = reduxWorkInstructions[workInstructionId]\n\n            const {\n                fields = []\n            } = workInstruction || {}\n\n            // loop through fields\n            for(const field of fields) {\n                const {\n                    value: pdfId,\n                    component,\n                    label\n                } = field || {}\n\n                // get data type\n                const dataType = FIELD_COMPONENT_DATA_TYPES[component]\n\n                /*\n                * handle dataTypes as necessary\n                * */\n                switch (dataType) {\n\n                    case FIELD_DATA_TYPES.PDF: {\n                        // get the pdf using the value in the work instruction (which is just the id of the pdf)\n                        if(isString(pdfId)) {\n                            const pdf = await getPdf(pdfId)\n\n                            // add pdf to pds object, with the id as the key\n                            setPdfs((prevState => {\n                                return {...prevState, [pdfId]: pdf}\n                            }))\n                            break\n                        }\n                    }\n                    default: {\n                    }\n                }\n            }\n        })\n\n        if(!loaded) setLoaded(true)\n    }\n\n\n    const handleSubmit = async (values, formMode) => {\n\n        const {\n            fields,\n            name,\n            displayNames,\n            workInstructions = {}\n        } = values\n\n        let response\n\n        // first handle work instructions\n        let mappedWorkInstructions = {} // stores workInstructions with values converted for storage (if necessary)\n\n        await iterateWorkInstructionFields(workInstructions, async (field, processId, stationId, index) => {\n            const {\n                value,\n                component,\n                label\n            } = field\n\n            // create objects for process and station\n            if(!mappedWorkInstructions[processId]) mappedWorkInstructions[processId] = {}\n            if(!mappedWorkInstructions[processId][stationId]) mappedWorkInstructions[processId][stationId] = {fields: []}\n\n            // get data type\n            const dataType = FIELD_COMPONENT_DATA_TYPES[component]\n\n            // some data may have to be handled differently (ex: PDFs)\n            switch (dataType) {\n\n                case FIELD_DATA_TYPES.PDF: {\n                    // pdf files shouldn't be stored directly in db, instead need to post separately and just store the id in db\n                    if(value) {\n                        const {data} = value || {}\n\n                        let formData = new FormData();\n                        if(data) formData.set('pdf', data, 'pdf'); // only set formData if there is data\n\n                        let pdfId = value?.id\n\n                        if(pdfId) {\n                            // entity exists, PUT\n                            // not yey implemented\n                        }\n                        else {\n                            // entity doesn't exist yet, POST\n                            const postedPdf = await postPdf(formData) // post it\n                            pdfId = postedPdf?._id\n                        }\n\n                        // replace value with id of pdf, so only id is stored in the work instruction\n                        mappedWorkInstructions[processId][stationId].fields[index] = {...field, value: pdfId}\n                    }\n                    else {\n                        // if no value, make sure its set to null\n                        mappedWorkInstructions[processId][stationId].fields[index] = {...field, value: null}\n                    }\n                    break\n                }\n                default: {\n                    // otherwise just spread the field\n                    mappedWorkInstructions[processId][stationId].fields[index] = {...field}\n                }\n            }\n        })\n\n        // now must post/put each individual work instruction\n        let templateWorkInstructions = {}\n        await iterateWorkInstructions(mappedWorkInstructions, async (instructionObjects, processId, stationId) => {\n            // just initializing each process / station attribute here, can probably find a nicer way to do this\n            if(!templateWorkInstructions[processId]) templateWorkInstructions[processId] = {}\n            if(!templateWorkInstructions[processId][stationId]) templateWorkInstructions[processId][stationId] = null\n\n            // get id\n            let workInstructionId = instructionObjects?._id\n\n            // if has id, PUT, otherwise POST\n            if(workInstructionId) {\n                // update\n                const result = await dispatchPutWorkInstruction(instructionObjects, workInstructionId)\n            }\n            else {\n                // create\n                const result = await dispatchPostWorkInstruction(instructionObjects)\n                workInstructionId = result._id\n            }\n\n            // just store the id of the work instruction in the actual lot template\n            templateWorkInstructions[processId][stationId] = workInstructionId\n        })\n\n        // finally, save the lot template itself, which has the id's of the work instruction entities\n\n        // update (PUT)\n        if(formMode === FORM_MODES.UPDATE) {\n            response = await dispatchPutLotTemplate({fields, name, displayNames, workInstructions: templateWorkInstructions}, lotTemplateId)\n        }\n\n        // // create (POST)\n        else {\n            response = await dispatchPostLotTemplate({fields, name, displayNames, workInstructions: templateWorkInstructions})\n\n            if(!(response instanceof Error)) {\n                const {\n                    lotTemplate: createdLotTemplate\n                } = response || {}\n\n                const {\n                    _id: createdLotTemplateId,\n                } = createdLotTemplate || {}\n\n                dispatchSetSelectedLotTemplate(createdLotTemplateId)\n            }\n            else {\n                console.error(\"postResult\",response)\n            }\n        }\n\n        return response;\n    }\n\n    /*\n    * this function gets initial values for workInstructions\n    * */\n    const getInitialWorkInstructions = () => {\n        // if the template has work instructions, parse em out\n        if(lotTemplate?.workInstructions) {\n\n            const mappedWorkInstructions = {}\n\n            // iterate through work instructions (do sync since this can't be used asynchronously in the formik component (or maybe it can if you look into it more)\n            iterateWorkInstructionsSync(lotTemplate.workInstructions,  (workInstructionId, processId, stationId) => {\n                if(!mappedWorkInstructions[processId]) mappedWorkInstructions[processId] = {}\n                if(!mappedWorkInstructions[processId][stationId]) mappedWorkInstructions[processId][stationId] = {}\n\n                // get work instruction entity from redux using id\n                const workInstructionObj = reduxWorkInstructions[workInstructionId]\n                const {\n                    fields = [],\n                    _id\n                } = workInstructionObj || {}\n\n                // create mutable copy of work instruction so you can change it without changing redux state\n                let mappedWorkInstructionObj = {fields: fields.map(field => {\n                        return {...field}\n                    }), _id}\n\n                // loop through fields for any necessary conversions (ex: PDF )\n                let index = 0\n                for(const field of fields) {\n                    const {\n                        value,\n                        component\n                    } = field\n\n                    const dataType = FIELD_COMPONENT_DATA_TYPES[component]\n\n                    const mappedField = {...field} // spread field so you can change it without unwanted side-effects\n\n                    if(value) {\n                        switch (dataType) {\n\n                            case FIELD_DATA_TYPES.PDF: {\n                                // only pdf ID is saved in WI, so replace value with the actual pdf\n                                if(value) {\n                                    mappedField.value = {\n                                        data: pdfs[value],\n                                        id: value\n                                    }\n                                    break\n                                }\n                            }\n                            default: {\n                                // otherwise use generic converter (ex date-strings to moment)\n                                const convertedValue = convertValue(value, dataType)\n                                mappedField.value = convertedValue\n                            }\n                        }\n                    }\n\n                    // update the field in the WI object\n                    mappedWorkInstructionObj.fields[index] = {...mappedField}\n\n                    index = index + 1\n                }\n\n                // update workInstructions object\n                mappedWorkInstructions[processId][stationId] = mappedWorkInstructionObj\n            })\n\n            return mappedWorkInstructions\n        }\n\n        // lot template doesn't have WI's, so use defaults\n        return getDefaultWorkInstructions(processes, tasks)\n    }\n\n    if(!loaded) return null\n\n    return (\n        <Formik\n            innerRef={formRef}\n            initialValues={{\n                fields: lotTemplate ?\n                    lotTemplate.fields\n                    :\n                    getDefaultFields(),\n                workInstructions: getInitialWorkInstructions(),\n                name: lotTemplate ? lotTemplate.name : \"\",\n                changed: false,\n                displayNames: lotTemplate ?\n                    isObject(lotTemplate.displayNames) ?\n                        {\n                            name: lotTemplate?.displayNames?.name || DEFAULT_NAME_DISPLAY_NAME ,\n                            count: lotTemplate?.displayNames?.count || DEFAULT_COUNT_DISPLAY_NAME\n                        }\n                        :\n                        DEFAULT_DISPLAY_NAMES\n                    :\n                    DEFAULT_DISPLAY_NAMES\n            }}\n\n            validate={(values, props) => {\n                try {\n                    LotFormSchema.validateSync(values, {\n                        abortEarly: false,\n                        context: values\n                    });\n                } catch (error) {\n                    if (error.name !== \"ValidationError\") {\n                        throw error;\n                    }\n\n                    return error.inner.reduce((errors, currentError) => {\n                        errors = set(errors, currentError.path, currentError.message)\n                        return errors;\n                    }, {});\n                }\n            }}\n            validateOnChange={true}\n            validateOnMount={false}\n            validateOnBlur={true}\n            enableReinitialize={true}\n            onSubmit={async (values, { setSubmitting, setTouched, resetForm }) => {\n                // set submitting to true, handle submit, then set submitting to false\n                // the submitting property is useful for eg. displaying a loading indicator\n                const {\n                    buttonType\n                } = values\n\n                setSubmitting(true)\n\n                const submitPromise = await handleSubmit(values, formMode)\n                setSubmitting(false)\n\n                if(!(submitPromise instanceof Error) && submitPromise !== undefined) {\n                    close()\n                }\n\n                return submitPromise;\n            }}\n        >\n            {formikProps => {\n\n                const {\n                    values = {},\n                    submitForm = () => null,\n                    isSubmitting = false,\n                    submitCount = 0,\n                    errors = {},\n                    touched = {},\n                    setFieldValue = {}\n                } = formikProps\n\n                const errorCount = Object.keys(errors).length > 0 // get number of field errors\n                const touchedCount = Object.values(touched).length // number of touched fields\n                const submitDisabled = ((((errorCount > 0)) || (touchedCount === 0) || isSubmitting) && ((submitCount > 0)) ) || !values.changed // disable if there are errors or no touched field, and form has been submitted at least once\n\n                return(\n\n                    <>\n                        <ChangeDetector/>\n\n                        {showInstructionEditor &&\n                        <InstructionEditorModal\n                            isOpen={true}\n                            width={'fit-content'}\n                            height={'fit-content'}\n                            stationId={showInstructionEditor?.stationId}\n                            processId={showInstructionEditor?.processId}\n                            selectedIndex={showInstructionEditor?.index}\n                            fields={values?.workInstructions[showInstructionEditor?.processId][showInstructionEditor?.stationId]?.fields}\n                            close={() => setShowInstructionEditor(false)}\n                        />\n                        }\n                        <styled.Container2>\n                            <SkuContext.Provider\n                                value={{\n                                    setShowInstructionEditor,\n                                    showInstructionEditor\n                                }}\n                            >\n                                <styled.Header>\n                                    {editingFields ?\n                                        <BackButton\n                                            containerStyle={{position: 'absolute'}}\n                                            secondary\n                                            onClick={()=>setEditingFields(false)}\n                                            schema={'error'}\n                                        />\n                                        :\n                                        <styled.CloseButton\n                                            color={themeContext.schema.error.solid}\n                                            className={'fas fa-times'}\n                                            onClick={close}\n                                        />\n                                    }\n\n                                    <styled.TemplateNameContainer>\n                                        <styled.TemplateLabel>SKU</styled.TemplateLabel>\n                                        <TextField\n                                            name={\"name\"}\n                                            onChange={() => setFieldValue('changed', true)}\n                                            placeholder={\"Enter template name...\"}\n                                            InputComponent={Textbox}\n                                            style={{minWidth: \"25rem\", fontSize: themeContext.fontSize.sz2}}\n                                            inputStyle={{background: themeContext.bg.tertiary}}\n                                        />\n                                    </styled.TemplateNameContainer>\n                                </styled.Header>\n\n                                {editingFields ?\n                                    <LotCreatorForm\n                                        onBackClick={()=>setEditingFields(false)}\n                                        formikProps={formikProps}\n                                        isOpen={true}\n                                        onAfterOpen={null}\n                                        lotTemplateId={lotTemplateId}\n                                        formMode={formMode}\n                                        setFormMode={setFormMode}\n                                        confirmDeleteTemplateModal={confirmDeleteTemplateModal}\n                                        setConfirmDeleteTemplateModal={setConfirmDeleteTemplateModal}\n                                    />\n                                    :\n                                    <styled.ContentContainer>\n                                        <div\n                                            style={{\n                                                width: '50%',\n                                                position: 'relative',\n                                                marginTop: '3rem',\n                                                marginBottom: '3rem',\n                                                alignSelf: 'center'\n                                            }}\n                                        >\n                                            <div\n                                                style={{\n                                                    position: 'absolute',\n                                                    top: 0,\n                                                    left: 0,\n                                                    right: 0,\n                                                    bottom: 0,\n                                                    background: 'rgba(0,0,0,0.15)',\n                                                    justifyContent: 'center',\n                                                    display: 'flex',\n                                                    alignItems: 'center',\n                                                    zIndex: 1000\n                                                }}\n                                            >\n                                                <Button\n                                                    label={'Edit Fields'}\n                                                    schema={'lots'}\n                                                    style={{\n                                                        zIndex: 1000,\n                                                        flex: 1,\n                                                        maxWidth: '30rem'\n                                                    }}\n                                                    onClick={()=>setEditingFields(true)}\n                                                />\n                                            </div>\n                                            <ScaleWrapper\n                                                scaleFactor={.7}\n                                            >\n                                                <styled.TheBody>\n                                                    <LotEditorMainContent\n                                                        fields={fields}\n                                                        usable={false}\n                                                        preview={true}\n                                                    />\n                                                </styled.TheBody>\n                                            </ScaleWrapper>\n                                        </div>\n\n                                        <styled.WorkInstructionsContainer>\n                                            <styled.Label>Work Instructions</styled.Label>\n                                            <WorkInstructions\n                                                workInstructions={values.workInstructions}\n                                            />\n                                        </styled.WorkInstructionsContainer>\n                                    </styled.ContentContainer>\n                                }\n                            </SkuContext.Provider>\n                            <styled.ButtonContainer style={{width: \"100%\"}}>\n                                <Button\n                                    style={{...buttonStyle}}\n                                    onClick={async () => {\n                                        submitForm()\n                                    }}\n                                    schema={\"ok\"}\n                                    disabled={submitDisabled}\n                                >\n                                    {formMode === FORM_MODES.UPDATE ? \"Save Template\" : \"Create Template\"}\n                                </Button>\n\n                                {formMode === FORM_MODES.UPDATE &&\n                                <Button\n                                    style={buttonStyle}\n                                    onClick={()=>setConfirmDeleteTemplateModal(true)}\n                                    schema={\"error\"}\n                                >\n                                    Delete Template\n                                </Button>\n                                }\n\n                            </styled.ButtonContainer>\n                        </styled.Container2>\n                    </>\n                )\n            }}\n\n        </Formik>\n    );\n};\n\nSkuEditor.propTypes = {\n\n};\n\nSkuEditor.defaultProps = {\n    close: () => null\n};\n\nexport default (SkuEditor)\n","import styled from 'styled-components';\nimport TimePicker from 'rc-time-picker';\nimport {css} from 'styled-components'\n\n\nexport const ProcessFieldContainer = styled.div`\n    margin-bottom: 1rem;\n    display: flex;\n    flex-direction: column;\n    //width: auto;\n`\n\n\nexport const ProcessOptionsContainer = styled.div`\n    //margin-bottom: 1rem;\n    display: flex;\n    overflow-x: auto;\n    overflow-y: hidden;\n    position: relative;\n\n\n    box-shadow: ${props => props.hasError && \"0 0 5px red\"};\n\n    background: ${props => props.theme.bg.secondary};\n    padding: 1rem;\n    border-radius: 1rem;\n\n    padding-bottom: 1rem;\n\n    ::-webkit-scrollbar {\n        height: 10px;\n    }\n\n    /* Track */\n    ::-webkit-scrollbar-track {\n        background: rgba(100,100,100,0.2);\n        opacity: 10%;\n    }\n\n    ::-webkit-scrollbar-track:hover {\n        background: rgba(100,100,100,0.6);\n        border-left: 1px solid rgba(100,100,100,0.6);\n        border-right: 1px solid rgba(100,100,100,0.6);\n    }\n\n    /* Handle */\n    ::-webkit-scrollbar-thumb {\n        background: ${props => props.theme.bg.secondary};\n        border-radius: .5rem;\n    }\n\n    /* Handle on hover */\n    ::-webkit-scrollbar-thumb:hover {\n        background: #555;\n\n    }\n`\nexport const ProcessName = styled.span`\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`\n\nexport const ProcessOption = styled.div`\n\n\t&:hover {\n\t\tcursor: pointer;\n\t}\n\t\n\t&:hover {\n\t\tcursor: pointer;\n\t\tfilter: brightness(140%);\n\t}\n\t\n\t&:active{\n\t\tfilter: brightness(85%);\n\t\ttext-shadow: none;\n\t}\n  \n  \tbackground: ${props => props.theme.bg.tertiary};\n\t\n  \tpadding: 1rem;\n\tborder-radius: 1rem;\n  \tmargin-right: 1rem;\n  \n\tmin-width: 10rem;\n\tmax-width: 10rem;\n\twidth: 10rem;\n\t\n\tdisplay: inline-flex;\n\tjustify-content: center;\n\talign-items: center;\n\t\n\t${props => (!props.isSelected && props.containsSelected) && \"filter: grayscale(50%)\"};\n\t${props => props.isSelected && \"filter: brightness(130%)\"};\n\ttransition: all 0.5s ease;\n\t\n\tfont-size: ${props => props.theme.fontSize.sz3};\n\tfont-weight: ${props => props.theme.fontWeight.normal};\n  \n\toverflow: hidden;\n\twhite-space: nowrap;\n\ttext-overflow: ellipsis;\n`\n\nexport const ErrorTooltipContainerComponent = styled.div`\n\t//align-self: center;\n  width: auto;\n  height: auto;\n  position: absolute;\n  z-index: 500;\n  top: 50%;\n  right: 1rem;\n  transform: translateY(-50%);\n  margin: 0;\n  padding: 0;\n`\n\n\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { useField, useFormikContext } from \"formik\";\n\nimport ErrorTooltip from '../error_tooltip/error_tooltip';\nimport * as styled from './scrolling_buttons_field.style'\n\nimport log from \"../../../../logger\";\nconst logger = log.getLogger(\"ScrollingButtonField\");\n\nconst ScrollingButtonField = ({\n\t\t\t\t\t\tvalueKey,\n\t\t\t\t\t\tlabelKey,\n\t\t\t\t\t\tonBlur,\n\t\t\t\t\t\tonFocus,\n\t\t\t\t\t\tonChange,\n\t\t\t\t\t\tErrorTooltipContainerComponent,\n\t\t\t\t\t\toptions,\n\t\t\t\t\t\t...props }) => {\n\n\t// get formik data\n\tconst { setFieldValue, setFieldTouched, validateOnChange, validateOnBlur, validateField, validateForm, ...context } = useFormikContext();\n\tconst [field, meta] = useField(props);\n\n\t// extract field data\n\tconst {\n\t\tvalue: fieldValue,\n\t\tname: fieldName\n\t} = field\n\n\t// extract meta data\n\tconst { touched, error } = meta\n\n\t// does the field contain an error?\n\tconst hasError = touched && error\n\n\treturn (\n\t\t<div style={{position: \"relative\"}}>\n\t\t\t<ErrorTooltip\n\t\t\t\tvisible={hasError}\n\t\t\t\ttext={error}\n\t\t\t\tContainerComponent={ErrorTooltipContainerComponent}\n\t\t\t/>\n\t\t\t<styled.ProcessOptionsContainer\n\t\t\t\thasError={hasError}\n\t\t\t>\n\t\t\t\t{options\n\n\t\t\t\t\t// each option must contain value and label - filter out any that don't\n\t\t\t\t\t.filter((currOption) => {\n\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\t[valueKey]: currValue = null,\n\t\t\t\t\t\t\t[labelKey]: currLabel = null\n\t\t\t\t\t\t} = currOption\n\n\t\t\t\t\t\tif(currValue && currLabel) {\n\t\t\t\t\t\t\treturn true\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// give warning to developer that item is missing parameter(s)\n\t\t\t\t\t\t\tif(!currValue) logger.warn(\"Option is missing value\")\n\t\t\t\t\t\t\tif(!currLabel) logger.warn(\"Option is missing label\")\n\n\t\t\t\t\t\t\treturn false\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\n\t\t\t\t\t// map remaining options content\n\t\t\t\t\t.map((currOption) => {\n\n\t\t\t\t\tconst {\n\t\t\t\t\t\t[valueKey]: currValue = \"\",\n\t\t\t\t\t\t[labelKey]: currLabel = \"\"\n\t\t\t\t\t} = currOption\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<styled.ProcessOption\n\t\t\t\t\t\t\tkey={currValue}\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tsetFieldValue(fieldName, currValue)\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tisSelected={currValue === fieldValue}\n\t\t\t\t\t\t\tcontainsSelected={fieldValue}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<styled.ProcessName>{currLabel}</styled.ProcessName>\n\t\t\t\t\t\t</styled.ProcessOption>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</styled.ProcessOptionsContainer>\n\t\t</div>\n\t);\n};\n\n// Specifies propTypes\nScrollingButtonField.propTypes = {\n\tErrorTooltipContainerComponent: PropTypes.elementType\n};\n\n// Specifies the default values for props:\nScrollingButtonField.defaultProps = {\n\tErrorTooltipContainerComponent: styled.ErrorTooltipContainerComponent\n};\n\nexport default ScrollingButtonField;\n","import React, { useContext, useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { DraggableCore } from \"react-draggable\";\n\nimport {\n    isMobile\n} from \"react-device-detect\";\n\nimport * as style from \"../lot_sidebars.style\"\nimport { ThemeContext } from \"styled-components\";\n\n\nimport log from '../../../../../../../../logger'\n\nimport {setFieldDragging} from \"../../../../../../../../redux/actions/card_page_actions\";\nimport {setSelectedLotTemplate} from \"../../../../../../../../redux/actions/lot_template_actions\";\nimport {BASIC_LOT_TEMPLATE_ID, SIDE_BAR_MODES} from \"../../../../../../../../constants/lot_contants\";\nimport Button from \"../../../../../../../basic/button/button\";\n\nconst logger = log.getLogger(\"TemplateSelectorSidebar\")\n\n\nconst TemplateSelectorSidebar = (props) => {\n\n    const {\n        showFields,\n        onTemplateEditClick,\n        selectedLotTemplatesId,\n        minWidth,\n        onCloseClick,\n    } = props\n\n\n    /*\n    * Tests sidebar width to  determine if styling should be for small or large width\n    * Returns true if width is less than breakpoint, and false otherwise\n    * */\n    const testSize = (width) => {\n        return width < 500\n    }\n\n    // theme\n    const themeContext = useContext(ThemeContext);\n\n    // actions\n    const dispatch = useDispatch()\n    const dispatchSetFieldDragging = (bool) => dispatch(setFieldDragging(bool))\n    const dispatchSetSelectedLotTemplate = (id) => dispatch(setSelectedLotTemplate(id))\n\n\n    const lotTemplates = useSelector(state => {return state.lotTemplatesReducer.lotTemplates})\n\n    const [width, setWidth] = useState(\n        isMobile ? window.innerWidth :\n        window.innerWidth < 2000 ? 450 : 450\n    ); // used for tracking sidebar dimensions\n    const [isSmall, setSmall] = useState(testSize(width)); // used for tracking sidebar dimensions\n\n    const [type, setType] = useState(showFields ? SIDE_BAR_MODES.FIELDS.name : SIDE_BAR_MODES.TEMPLATES.name); // used for tracking sidebar dimensions\n\n    const getTemplateButtons = () => {\n        return (\n\n            <style.ListContainer>\n                {!isMobile &&\n                    <Button \n                        schema={'lots'}\n                        secondary\n                        onClick={() => {\n                            dispatchSetSelectedLotTemplate(null)\n                            onTemplateEditClick(null)\n                        }}\n                        style={{\n                            marginBottom: '1rem',\n                            height: '3rem',\n                        }}\n                    >\n                        <i style={{marginRight: '1rem'}} className=\"fa fa-plus\" aria-hidden=\"true\"/>\n                        Create New Template\n                    </Button>\n                }\n                <style.LotTemplateButton\n                    isSelected={selectedLotTemplatesId === BASIC_LOT_TEMPLATE_ID}\n                    onClick={() => {\n                        dispatchSetSelectedLotTemplate(BASIC_LOT_TEMPLATE_ID)\n                        isMobile && onCloseClick()\n                    }}\n                >\n                    <style.TemplateIcon\n                        isSelected={selectedLotTemplatesId === BASIC_LOT_TEMPLATE_ID}\n                        className={SIDE_BAR_MODES.TEMPLATES.iconName}\n                    />\n\n                    <style.TemplateName\n                        isSelected={selectedLotTemplatesId === BASIC_LOT_TEMPLATE_ID}\n                    >Basic</style.TemplateName>\n                </style.LotTemplateButton>\n                {\n                    Object.values(lotTemplates).map((currTemplate, currIndex) => {\n                        const {\n                            fields,\n                            name,\n                            _id: currTemplateId\n                        } = currTemplate\n                        //\n\n                        const isSelected = selectedLotTemplatesId === currTemplateId\n\n                        return <style.LotTemplateButton\n                            key={currTemplateId}\n                            isSelected={isSelected}\n                            onClick={() => {\n                                dispatchSetSelectedLotTemplate(currTemplateId)\n                                isMobile && onCloseClick()\n                            }}\n                        >\n                            <style.TemplateIcon\n                                // style={{marginRight: \"5rem\"}}\n                                isSelected={isSelected}\n                                className={SIDE_BAR_MODES.TEMPLATES.iconName}\n                            />\n                            \n\n                           <style.TemplateName\n                               isSelected={isSelected}\n                           >{name}</style.TemplateName>\n\n                            {!isMobile &&\n                                <style.EditTemplateIcon\n                                    isSelected={isSelected}\n                                    onClick={()=>{\n                                        dispatchSetSelectedLotTemplate(currTemplateId)\n                                        onTemplateEditClick(null)\n                                    }}\n                                    type={\"button\"}\n                                    className={\"fas fa-edit\"}\n                                />\n                            }\n                        </style.LotTemplateButton>\n                    })\n                }\n            </style.ListContainer>\n        )\n    }\n\n    const handleDrag = (e, ui) => {\n        setWidth(width + ui.deltaX)\n        setSmall(testSize(Math.max(minWidth, width + ui.deltaX)))  // check if width is less than styling breakpoint and update isSmall\n    }\n\n    return (\n            <style.SidebarContent\n                key=\"sidebar-content\"\n                style={{ width: width, minWidth: minWidth }}\n            >\n                <style.Container>\n                    {getTemplateButtons()}\n                    {/* <style.FooterContainer\n                        style={{justifyContent: \"center\"}}\n                    >\n                        <Button\n                            onClick={onCloseClick}\n                            schema={\"lots\"}\n                            type={\"button\"}\n                            label={\"Close\"}\n                        />\n                    </style.FooterContainer> */}\n                </style.Container>\n\n                <DraggableCore key=\"handle\" onDrag={handleDrag} >\n                    <style.ResizeBar>\n                        <style.ResizeHandle></style.ResizeHandle>\n                    </style.ResizeBar>\n                </DraggableCore>\n            </style.SidebarContent>\n    )\n}\n\n// Specifies propTypes\nTemplateSelectorSidebar.propTypes = {\n    showFields: PropTypes.bool,\n    showTemplates: PropTypes.bool,\n    showNew: PropTypes.bool,\n    onTemplateClick: PropTypes.func,\n    onTemplateEditClick: PropTypes.func,\n};\n\n// Specifies the default values for props:\nTemplateSelectorSidebar.defaultProps = {\n    showFields: true,\n    showTemplates: true,\n    showNew: true,\n    onTemplateClick: () => {},\n    onTemplateEditClick: () => {},\n    onCloseClick: () => {},\n    minWidth: 450\n};\n\nexport default TemplateSelectorSidebar\n","import styled, {css} from 'styled-components'\nimport Modal from 'react-modal';\nimport {LightenDarkenColor} from \"../../../../methods/utils/color_utils\";\n\n\nconst borderGlowCss = css`\n    --border-width: .1rem;\n    background: none;\n\n    @keyframes moveGradient {\n        50% {\n          background-position: 100% 50%;\n        }\n      }\n\n    border-radius: var(--border-width);\n\n    &::after {\n    position: absolute;\n    content: \"\";\n    top: calc(-1 * var(--border-width));\n    left: calc(-1 * var(--border-width));\n    z-index: -1;\n    width: calc(100% + var(--border-width) * 2);\n    height: calc(100% + var(--border-width) * 2);\n    background: linear-gradient(\n        60deg,\n        /* hsl(224, 85%, 66%), */\n        /* hsl(269, 85%, 66%), */\n        /* hsl(314, 85%, 66%), */\n        /* hsl(359, 85%, 66%), */\n        hsl(44, 85%, 66%),\n        hsl(89, 85%, 66%),\n        hsl(134, 85%, 66%),\n        hsl(179, 85%, 66%)\n    );\n    background-size: 300% 300%;\n    background-position: 0 50%;\n    border-radius: calc(2 * var(--border-width));\n    animation: moveGradient 4s alternate infinite;\n}\n`\n\n\nexport const TextboxDiv = styled.div`\n    background-color: ${props => props.theme.bg.primary};\n    border: none;\n    font-size: ${props => props.theme.fontSize.sz4};\n    font-family: ${props => props.theme.font.primary};\n    font-weight: 500;\n    min-height: 2rem;\n    display: flex;\n    flex-grow: 1;\n    color: ${props => props.theme.bg.octonary};\n    padding: .5rem;\n    border-radius: .5rem;\n\n    box-shadow: 0 0.1rem 0.2rem 0rem rgba(0,0,0,0.1) !important;\n    border-bottom: 2px solid ${props => props.theme.bg.quinary};\n\n    &:focus {\n        // background-color: ${props => LightenDarkenColor(props.theme.bg.quinary, 10)};\n        border-bottom: 2px solid ${props => !!props.schema ? props.theme.schema[props.schema].solid : props.theme.fg.primary};\n        color: ${props => props.theme.bg.octonary};\n        outline: none !important;\n    }\n\n    &::placeholder {\n        font-family: ${props => props.theme.font.secondary};\n        color: ${props => props.theme.bg.senary};\n    }\n`;\n\nexport const ListItem = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 100%;\n    text-overflow: ellipsis;\n    justify-content: space-between;\n    background: ${props => props.theme.bg.secondary};\n\n    &:hover {\n        background: ${props => LightenDarkenColor(props.theme.bg.secondary, -10)};\n        cursor: pointer;\n    }\n\n    margin-left: 0rem;\n    margin-right: .5rem;\n    margin-top: 0rem;\n    margin-bottom: 1rem;\n    border-radius: 0.5rem;\n\n    border-color: ${props=>props.theme.bg.quaternary};\n`\nexport const ListItemTitle = styled.h1`\n\n    font-family: ${props => props.theme.font.primary};\n    /* font-size: ${props => props.theme.fontSize.sz3}; */\n    font-size: 1rem;\n    font-weight: 500;\n    color: ${props => props.theme.bg.octonary};\n    user-select: none;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    margin-left: 0.5rem;\n    margin-right: 1rem;\n    margin-bottom: 0rem;\n\n    text-align: center;\n\n`\n\nexport const HoverContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    width: 100%;\n    height: 100%;\n    padding: 1rem 0rem .5rem 0.3rem;\n    margin-left: 1.5rem;\n    &:hover {\n        cursor: pointer;\n    }\n\n`\n\nexport const ListItemIcon = styled.i`\n\n    font-size: 1.3rem;\n    color: ${props => props.theme.schema.locations.solid};\n    padding-left: 0.8rem;\n\n    &:hover {\n        cursor: pointer;\n    }\n`\n\nexport const Container = styled(Modal)`\n\toutline: none !important;\n\toutline-offset: none !important;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translate(-50%, -50%);\n\tright: auto;\n\tbottom: auto;\n\n\tposition: absolute;\n\n\tz-index: 50;\n\n\tmin-width: 30rem;\n    max-width: 95%;\n    min-height: 10rem;\n    max-height: 95%;\n\n\tbackground: ${props => props.theme.bg.primary};\n\n\tdisplay: flex;\n\tflex-direction: column;\n\n\tcolor: ${props => props.theme.bg.octonary};\n\tborder-radius: 0.4rem;\n\toverflow: hidden;\n`;\n\nexport const HeaderContainer = styled.div`\n\twidth: 100%;\n\tdisplay: flex;\n\tflex-direction: column;\n\tborder-width: 0;\n\tborder-bottom: 2px solid ${props => props.theme.bg.quinary};\n\tmargin-bottom: 2rem;\n`;\n\nexport const Header = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\tpadding: 0;\n\tmargin: 0;\n\tmax-height: 5rem;\n\tbackground: ${props => props.theme.bg.primary};\n    border-bottom: 2px solid ${props => props.theme.bg.secondary};\n\n`\nexport const Label = styled.span`\n\tpadding-left: 1rem;\n\tfont-size: ${props => props.theme.fontSize.sz3};\n\tmargin-bottom: .25rem;\n`\nexport const CloseIcon = styled.i`\n    font-size: 1.4rem;\n    margin: 1rem;\n    color: ${props => props.theme.bg.quaternary};\n    cursor: pointer;\n`\n\nexport const Title = styled.h2`\n\tflex: 2;\n\theight: 100%;\n\tmin-height: 100%;\n\tmargin: 1rem;\n\tpadding: 0;\n\ttext-align: left;\n\tdisplay: inline-flex;\n\tjustify-content: center;\n\talign-items: center;\n\n\tfont-size: ${props => props.theme.fontSize.sz2};\n\tfont-weight: ${props => props.theme.fontWeight.bold};\n`;\n\nexport const TextContainer = styled.div`\n\twidth: 100%;\n\tdisplay: flex;\n\tflex-direction: column;\n\tmargin-bottom: 1.5rem;\n`;\n\nexport const BodyContainer = styled.div`\n\tdisplay: flex;\n  flex-direction: ${props => !!props.generated ? \"row\" : \"column\"};\n\tpadding: 1rem;\n\tjustify-content: center;\n  text-align: center;\n\toverflow: hidden;\n\n\tbackground: ${props => props.theme.bg.primary};\n`\n\nexport const ButtonForm = styled.div`\n\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: center;\n\tmin-height: fit-content;\n\n    margin-top: 2rem;\n`;\n\nexport const IconSelectorContainer = styled.div`\n\tbackground: ${props => props.theme.bg.primary};\n\toverflow: auto;\n\tmin-height: 2rem;\n\twidth: 100%;\n\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tflex-wrap: wrap;\n\tborder-radius: .5rem;\n`\n\nexport const ContentContainer = styled.div`\n\tbackground: ${props => props.theme.bg.primary};\n\t// border-radius: 1rem;\n\tdisplay: flex;\n\tflex-direction: column;\n\toverflow: hidden;\n\tmargin-bottom: 1rem;\n\talign-items: center;\n`\nexport const ReportButtonsContainer = styled.div`\n\tdisplay: flex;\n\n\tflex-direction: column;\n\talign-items: center;\n\t// justify-content: center;\n\tflex-wrap: nowrap;\n\toverflow: auto;\n\tmin-height: 5rem;\n\twidth: 100%;\n`\n\nexport const ConditionText = styled.span`\n\tfont: ${props => props.theme.font.primary};\n\tfont-size: ${props => props.theme.fontSize.sz3};\n\tmax-width: 100 %;\n\toverflow: hidden;\n\ttext-overflow: ellipsis;\n`\n\nexport const RightContentContainer = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: ${props => props.theme.bg.primary};\n    width: 4rem;\n    border-left: 1px solid ${props => props.theme.bg.secondary};\n    height: 100%;\n    // background-color: ${props => props.theme.bg.septenary};\n\n    // padding-left: 1rem;\n    // border-top-right-radius: 0.6rem;\n    // border-bottom-right-radius: 0.6rem;\n\n\n`\n\nexport const ButtonContainer = styled.button`\n  position: relative;\n  user-select: none;\n\n  // flex layout\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  // flex-grow: 1;\n  width: 90%;\n  overflow: hidden;\n  height: 4rem;\n  min-height: 4rem;\n  line-height: 3rem;\n  min-width: 80%;\n\n  background: ${props => `linear-gradient(180deg,\n                            ${LightenDarkenColor(props.background, 20)} 0%,\n                            ${props.background} 50%,\n                            ${LightenDarkenColor(props.background, -20)} 100%)`};\n  border-radius: 0.6rem;\n  padding: 0;\n\n\n  // margins\n  margin: .5rem 0 .5rem 0;\n\n  // padding\n  // padding: 0.5rem 1rem 0.5rem 1rem;\n\n  outline: none;\n  &:focus {\n    outline: none;\n  }\n\n  letter-spacing: 1.5px;\n  border: none;\n  box-shadow: ${props => props.clickable ? 'none' : `2px 2px 2px rgba(0, 0, 0, 0.5)`};\n  transition: all 0.1s ease 0s;\n  cursor: pointer;\n  outline: none;\n\n  &:hover {\n    ${props => props.hoverable && !props.clickable &&\n\t{\n\t\tboxShadow: \"3px 3px 3px rgba(0, 0, 0, 0.5)\",\n\t\ttransform: \"translateY(-1px)\",\n\t}\n}\n  }\n\n  ${props => props.clickable && !props.disabled &&\n\t`&:active {\n      background: ${`linear-gradient(180deg,\n          ${LightenDarkenColor(props.background, -20)} 0%,\n          ${props.background} 50%,\n          ${LightenDarkenColor(props.background, 20)} 100%)`\n\t}\n    }`\n}\n\n  ${props => props.disabled &&\n\t{\n\t\tcolor: props.theme.bg.quaternary,\n\t\tbackground: `linear-gradient(180deg, rgba(255,255,255,0.4) 0%, rgba(255,255,255,0.4) 100%), ${LightenDarkenColor(props.background, -60)}`,\n\t\tpointerEvents: \"none\",\n\t}\n}\n\n    // --border-width: 3px;\n    ${props => props.borderGlow &&\n\tborderGlowCss\n}\n\n${props => props.css};\n\n`\n\nexport const AddNewButtonContainer = styled.div`\n\tdisplay: flex;\n\tjustify-content: center;\n\twidth: 100%;\n\tborder-bottom:  ${props => props.showBorder && `1px solid` + props.theme.bg.secondary};\n`\n\nexport const ColorFieldContainer = styled.div`\n\tposition: relative;\n\n`\n\n\nexport const Icon = styled.i`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin: auto auto;\n    color: green;\n    fill: green;\n    font-size: 7rem;\n    width: 14rem;\n    &:hover {\n        cursor: pointer;\n    }\n\n    &:active{\n        filter: brightness(85%)\n    }\n`\n","import React, {useEffect, useState} from \"react\";\nimport Modal from 'react-modal';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport { useHistory } from 'react-router-dom'\n\n\nimport Button from \"../../../basic/button/button\";\nimport Textbox from \"../../../basic/textbox/textbox\";\nimport LotContainer from \"../../../../components/side_bar/content/cards/lot/lot_container\"\n\n// actions\nimport {showBarcodeModal} from '../../../../redux/actions/card_actions'\n// styles\nimport * as styled from './barcode_modal.style'\n\nconst BarcodeModal = (props) => {\n\n    const {\n        isOpen,\n        title,\n        close,\n        dashboard,\n        onSubmit,\n        handleClose,\n        children,\n        barcodeId,\n    } = props\n\n    const cards = useSelector(state => state.cardsReducer.cards)\n    const stations = useSelector(state =>state.stationsReducer.stations)\n    const barcodeModal = useSelector(state => state.cardsReducer.showBarcodeModal)\n\n    const dispatch = useDispatch()\n    const dispatchShowBarcodeModal = (bool) => dispatch(showBarcodeModal(bool))\n    const history = useHistory()\n    var JsBarcode = require(\"jsbarcode\")\n    const buttonStyle = {marginBottom: '0rem', marginTop: 0}\n\n    const [generated, setGenerated] = useState(false)\n    useEffect(() => {\n  \t}, [])\n\n    return (\n        <styled.Container\n            isOpen={isOpen}\n            contentLabel=\"Confirm Delete Modal\"\n            onRequestClose={close}\n            style={{\n                overlay: {\n                    zIndex: 500,\n                    backgroundColor: 'rgba(0, 0, 0, 0.4)'\n                },\n                content: {\n\n                }\n            }}\n        >\n            <styled.Header>\n            <styled.Title\n                onClick = {()=>{\n                }}\n            >{title}\n            </styled.Title>\n                <styled.CloseIcon className=\"fa fa-times\" aria-hidden=\"true\" onClick={()=>{handleClose(); setGenerated(false)}}/>\n            </styled.Header>\n            <styled.BodyContainer generated = {generated}>\n\n                {!generated &&\n                  <Button\n                    schema={'lots'}\n                    type={\"button\"}\n                    style={{...buttonStyle, marginBottom: '0rem', marginTop: 0}}\n                    onClick={() => {\n                      JsBarcode(\"#barcode\", barcodeId)\n                      setGenerated(true)\n                    }}\n                  >\n                  Load Barcode\n                  </Button>\n                }\n\n                <svg\n                  id = \"barcode\"\n                >\n                </svg>\n\n            </styled.BodyContainer>\n        </styled.Container>\n    );\n};\n\nexport default BarcodeModal\n","import axios from 'axios';\n// import * as log from 'loglevel';\n\nimport logger from '../logger'\n\nimport { apiIPAddress } from '../settings/settings'\nconst operator = 'cards'\nconst log = logger.getLogger('Api')\n\nexport async function getCardHistory(ID) {\n    try {\n        const response = await axios({\n            method: 'get',\n            url: apiIPAddress() + operator + '/' + ID + '/card_history',\n            headers: {\n                'X-API-Key': '123456',\n                'Access-Control-Allow-Origin': '*'\n            }\n        });\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n\n}","import { normalize } from 'normalizr';\n\n// import types\nimport {\n    GET,\n    POST,\n    DELETE,\n    PUT\n} from '../types/prefixes';\n\nimport {\n    CARD_HISTORY,\n} from '../types/data_types';\n\nimport { api_action } from './index';\n\nimport log from \"../../logger\"\nimport * as api from \"../../api/card_history_api\";\nimport {convertArrayToObject} from \"../../methods/utils/utils\";\n\nconst logger = log.getLogger(\"Card History\", \"Redux\")\n\n// get\n// ******************************\nexport const getCardHistory = (cardId) =>  async (dispatch) => {\n\n    const callback = async () => {\n\n        // make request\n        const card = await api.getCardHistory(cardId);\n        console.log(\"getCardHistory lot\",card)\n\n        // const cardsObj = convertArrayToObject(cards, \"_id\")\n        // console.log(\"getCards cardsObj\",cardsObj)\n\n        // format response\n        // const normalizedSchedules = normalize(schedules, schedulesSchema);\n\n        // return payload for redux\n        return {\n            cardHistory: card,\n        };\n    }\n\n    const actionName = GET + CARD_HISTORY;\n\n    // payload is returned back\n    const payload = await api_action(actionName, callback, dispatch);\n\n    return payload;\n\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n","import React  from \"react\";\n\n// Updates fields in parent form\nconst useWarn = (validationSchema, {status, setStatus, values}) => {\n\n\tReact.useEffect(() => {\n\n\t\tvalidationSchema.validate(values, {abortEarly: false})\n\t\t\t.then(() => {\n\t\t\t\tsetStatus({\n\t\t\t\t\t...status,\n\t\t\t\t\twarnings: {}\n\t\t\t\t})\n\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tlet warnings = {}\n\n\t\t\t\terr.inner.forEach((currErr) => {\n\t\t\t\t\tconst {\n\t\t\t\t\t\tpath,\n\t\t\t\t\t\tmessage\n\t\t\t\t\t} = currErr\n\n\t\t\t\t\twarnings[path] = message\n\t\t\t\t})\n\n\t\t\t\tsetStatus({\n\t\t\t\t\t...status,\n\t\t\t\t\twarnings\n\t\t\t\t})\n\t\t\t});\n\n\n\t}, [values]);\n\n};\n\nexport default useWarn\n","import React, {useState, useEffect, useRef, useContext, useCallback} from \"react\";\n\n// api\nimport {getCardsCount} from \"../../../../../../api/cards_api\";\n\n// external functions\nimport PropTypes from \"prop-types\";\nimport {Formik, setNestedObjectValues} from \"formik\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {\n\tisMobile\n} from \"react-device-detect\";\n\n// external components\nimport FadeLoader from \"react-spinners/FadeLoader\"\nimport Popup from 'reactjs-popup';\n\n\n// internal components\nimport CalendarField, {CALENDAR_FIELD_MODES} from \"../../../../../basic/form/calendar_field/calendar_field\";\nimport TextField from \"../../../../../basic/form/text_field/text_field\";\nimport Textbox from \"../../../../../basic/textbox/textbox\";\nimport DropDownSearchField from \"../../../../../basic/form/drop_down_search_field/drop_down_search_field\";\nimport Button from \"../../../../../basic/button/button\";\nimport BackButton from '../../../../../basic/back_button/back_button'\nimport ButtonGroup from \"../../../../../basic/button_group/button_group\";\nimport ScrollingButtonField from \"../../../../../basic/form/scrolling_buttons_field/scrolling_buttons_field\";\nimport NumberField from \"../../../../../basic/form/number_field/number_field\";\nimport FieldComponentMapper from \"../lot_template_editor/field_component_mapper/field_component_mapper\";\nimport TemplateSelectorSidebar from \"./lot_sidebars/template_selector_sidebar/template_selector_sidebar\";\nimport SubmitErrorHandler from \"../../../../../basic/form/submit_error_handler/submit_error_handler\";\nimport LotCreatorForm from \"../lot_template_editor/template_form\";\nimport ConfirmDeleteModal from '../../../../../basic/modals/confirm_delete_modal/confirm_delete_modal'\nimport BarcodeModal from '../../../../../basic/modals/barcode_modal/barcode_modal'\n\n// actions\nimport {deleteCard, getCard, postCard, putCard, showBarcodeModal} from \"../../../../../../redux/actions/card_actions\";\nimport {getCardHistory} from \"../../../../../../redux/actions/card_history_actions\";\nimport {getLotTemplates, setSelectedLotTemplate} from \"../../../../../../redux/actions/lot_template_actions\";\nimport { pageDataChanged } from \"../../../../../../redux/actions/sidebar_actions\";\n\n\n// constants\nimport {FORM_MODES} from \"../../../../../../constants/scheduler_constants\";\nimport {\n\tCONTENT,\n\tDEFAULT_COUNT_DISPLAY_NAME,\n\tDEFAULT_NAME_DISPLAY_NAME, defaultBins,\n\tFORM_BUTTON_TYPES, getDefaultBins, IGNORE_LOT_SYNC_WARNING, QUEUE_BIN_ID,\n\tSIDE_BAR_MODES\n} from \"../../../../../../constants/lot_contants\";\n\n// utils\nimport {\n\tgetFormCustomFields,\n\tparseMessageFromEvent\n} from \"../../../../../../methods/utils/card_utils\";\nimport {\n\tCARD_SCHEMA_MODES,\n\tuniqueNameSchema,\n\tgetCardSchema,\n} from \"../../../../../../methods/utils/form_schemas\";\nimport {getProcessStations} from \"../../../../../../methods/utils/processes_utils\";\nimport {isEmpty, isObject} from \"../../../../../../methods/utils/object_utils\";\nimport {isArray} from \"../../../../../../methods/utils/array_utils\";\nimport {formatLotNumber, getDisplayName} from \"../../../../../../methods/utils/lot_utils\";\n\n// import styles\nimport * as styled from \"./lot_editor.style\"\nimport * as FormStyle from \"../lot_template_editor/lot_form_creator/lot_form_creator.style\"\n\n// hooks\nimport useWarn from \"../../../../../basic/form/useWarn\";\n\n// logger\nimport log from '../../../../../../logger'\nimport { ThemeContext } from \"styled-components\";\nimport {getIsEquivalent} from \"../../../../../../methods/utils/utils\";\nimport SimpleModal from \"../../../../../basic/modals/simple_modal/simple_modal\";\nimport usePrevious from \"../../../../../../hooks/usePrevious\";\nimport WobbleButton from \"../../../../../basic/wobble_button/wobble_button\";\nimport {postLocalSettings} from \"../../../../../../redux/actions/local_actions\";\nimport LabeledButton from \"./labeled_button/labeled_button\";\nimport SkuEditor from \"../sku_editor/sku_editor\";\nimport LotFields from \"./lot_fields/lot_fields\";\nimport LotEditorMainContent from \"./lot_editor_main_content/lot_editor_main_content\";\n\n\nconst logger = log.getLogger(\"CardEditor\")\nlogger.setLevel(\"debug\")\n\nconst FormComponent = (props) => {\n\n\tconst {\n\t\tshowCreationStatusButton,\n\t\tonShowCreateStatusClick,\n\t\tshowPasteIcon,\n\t\tonPasteIconClick,\n\t\tdisabledAddButton,\n\t\tlotNumber,\n\t\tcard,\n\t\tsetShowSkuEditor,\n\t\tshowSkuEditor,\n\t\tlotTemplate,\n\t\tlotTemplateId,\n\t\tbins,\n\t\tbinId,\n\t\tsetBinId,\n\t\tclose,\n\t\tisOpen,\n\t\tprocessId,\n\t\terrors,\n\t\tvalues,\n\t\tstatus,\n\t\ttouched,\n\t\tfooterContent,\n\t\tisSubmitting,\n\t\tsubmitCount,\n\t\tsetFieldValue,\n\t\tonSubmit,\n\t\tformikProps,\n\t\tprocessOptions,\n\t\tcontent,\n\t\tsetContent,\n\t\tonAddClick,\n\t\tloaded,\n\t\tcardNames,\n\t\tuseCardFields,\n\t\tsetUseCardFields\n\t} = props\n\n\tconst {\n\t\t_id: cardId,\n\t\tsyncWithTemplate\n\t} = values || {}\n\n\tconst {\n\t\tfields: cardFields = []\n\t} = card || {}\n\n\tconst {\n\t\tfields: templateFields = []\n\t} = lotTemplate || {}\n\n\tconst formMode = cardId ? FORM_MODES.UPDATE : FORM_MODES.CREATE\n\n\tconst themeContext = useContext(ThemeContext);\n\n\n\t// actions\n\tconst dispatch = useDispatch()\n\tconst dispatchSetSelectedLotTemplate = (id) => dispatch(setSelectedLotTemplate(id))\n\tconst dispatchPutCard = async (card, ID) => await dispatch(putCard(card, ID))\n\tconst dispatchDeleteCard = async (cardId, processId) => await dispatch(deleteCard(cardId, processId))\n\tconst dispatchPageDataChanged = (bool) => dispatch(pageDataChanged(bool))\n\tconst dispatchPostLocalSettings = (settings) => dispatch(postLocalSettings(settings))\n\tconst dispatchShowBarcodeModal = (bool) => dispatch(showBarcodeModal(bool))\n\t// redux state\n\tconst currentProcess = useSelector(state => { return state.processesReducer.processes[processId] })\n\tconst cardHistory = useSelector(state => { return state.cardsReducer.cardHistories[cardId] })\n\tconst routes = useSelector(state => { return state.tasksReducer.tasks })\n\tconst stations = useSelector(state => { return state.stationsReducer.stations })\n\tconst processes = useSelector(state => { return state.processesReducer.processes }) || {}\n\tconst localReducer = useSelector(state => state.localReducer) || {}\n\tconst barcodeModal = useSelector(state => state.cardsReducer.showBarcodeModal)\n\tconst processesArray = Object.values(processes)\n\n\tconst [showTemplateSelector, setShowTemplateSelector] = useState(false)\n\tconst [finalProcessOptions, setFinalProcessOptions] = useState([])\n\tconst [showProcessSelector, setShowProcessSelector] = useState(props.showProcessSelector)\n\tconst [confirmDeleteModal, setConfirmDeleteModal] = useState(false);\n\tconst [templateFieldsChanged, setTemplateFieldsChanged] = useState(false);\n\tconst [loadingTemplateValues, setLoadingTemplateValues] = useState(false);\n\n\tconst [showFieldModal, setShowFieldModal] = useState(false)\n\tconst [checkedCardAndTemplateFields, setCheckedCardAndTemplateFields] = useState(false)\n\n\n\tconst [warningValues, setWarningValues] = useState()\n\n\tuseEffect(() => {\n\t\tsetWarningValues({\n\t\t\tname: values.name,\n\t\t\tcardNames,\n\t\t\t_id: cardId\n\t\t})\n\t}, [values.name, cardNames])\n\n\tuseWarn(uniqueNameSchema, {\n\t\tsetStatus: formikProps.setStatus,\n\t\tstatus,\n\t\tvalues: warningValues\n\t})\n\n\t// derived state\n\tconst selectedBinName = stations[binId] ?\n\t\tstations[binId].name :\n\t\tbinId === \"QUEUE\" ? \"Queue\" : \"Finished\"\n\n\tconst processStationIds = getProcessStations(currentProcess, routes) // get object with all station's belonging to the current process as keys\n\tconst availableBins = !isEmpty(bins) ? Object.keys(bins) : [\"QUEUE\"]\n\n\tconst errorCount = Object.keys(errors).length > 0 // get number of field errors\n\tconst touchedCount = Object.values(touched).length // number of touched fields\n\tconst submitDisabled = ((errorCount > 0) || (touchedCount === 0) || isSubmitting) && (submitCount > 0) // disable if there are errors or no touched field, and form has been submitted at least once\n\n\tuseEffect(() => {\n\t\tformikProps.validateForm()\n\t}, [])\n\n\t/*\n\t* handles when enter key is pressed\n\t*\n\t* This effect attaches an event listener to the keydown event\n\t* The listener effect listens for 'Enter' and 'NumpadEnter' events\n\t* If either of these events occur, the form will be submitted\n\t* */\n\tuseEffect(() => {\n\t\t// keydown event listener\n\n\t\t// add event listener to 'keydown'\n\t\tdocument.addEventListener(\"keydown\", enterListener);\n\n\t\t// on dismount remove the event listener\n\t\treturn () => {\n\t\t\tdocument.removeEventListener(\"keydown\", enterListener);\n\t\t};\n\t}, [values])\n\n\tconst enterListener = useCallback((event) => {\n\n\t\t// check if event code corresponds to enter\n\t\tif (event.code === \"Enter\" || event.code === \"NumpadEnter\" || event.code === 13 || event.key === \"Enter\") {\n\t\t\t// prevent default actions\n\t\t\tevent.preventDefault()\n\t\t\tevent.stopPropagation()\n\n\n\t\t\tif(formMode === FORM_MODES.UPDATE) {\n\t\t\t\t// if the form mode is set to UPDATE, the default action of enter should be to save the lot\n\t\t\t\t// this is done by setting buttonType to SAVE and submitting the form\n\n\t\t\t\tswitch(content){\n\t\t\t\t\tcase CONTENT.MOVE:\n\t\t\t\t\t\tonSubmit(values, FORM_BUTTON_TYPES.MOVE_OK)\n\t\t\t\t\t\tbreak\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tonSubmit(values, FORM_BUTTON_TYPES.SAVE)\n\t\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// if the form mode is set to CREATE (the only option other than UPDATE), the default action of the enter key should be to add the lot\n\t\t\t\tonSubmit(values, FORM_BUTTON_TYPES.ADD)\n\t\t\t}\n\n\t\t}\n\t}, [values])\n\n\t/*\n\t*\n\t* */\n\tconst handleDeleteClick = async (selectedBin) => {\n\t\tconst {\n\t\t\t[selectedBin]: currentBin,\n\t\t\t...remainingBins\n\t\t} = bins\n\n\t\tvar submitItem = {\n\t\t\t...card,\n\t\t\tbins: {...remainingBins},\n\t\t}\n\n\t\tlet requestSuccessStatus = false\n\n\t\t// if there are no remaining bins, delete the card\n\t\tif(isEmpty(remainingBins)) {\n\t\t\tdispatchDeleteCard(cardId, processId)\n\t\t}\n\n\t\t// otherwise update the card to contain only the remaining bins\n\t\telse {\n\t\t\tconst result = await dispatchPutCard(submitItem, cardId)\n\n\t\t\t// check if request was successful\n\t\t\tif(!(result instanceof Error)) {\n\t\t\t\trequestSuccessStatus = true\n\t\t\t}\n\t\t}\n\n\t\tclose()\n\t}\n\n\n\n\tuseEffect(() => {\n\t\tif(!checkedCardAndTemplateFields && (formMode !== FORM_MODES.CREATE) && !values.syncWithTemplate) {\n\t\t\tconst cardFieldsWithoutValue = values.fields.map((currRow) => {\n\n\t\t\t\treturn currRow.map((currField) => {\n\t\t\t\t\tconst {\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t\t...rest\n\t\t\t\t\t} = currField || {}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...rest\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t})\n\n\t\t\tconst isEquivalent = getIsEquivalent(templateFields, cardFieldsWithoutValue)\n\n\t\t\tconst ignoreSyncWarning = localReducer?.localSettings?.[IGNORE_LOT_SYNC_WARNING]?.[cardId]\n\n\t\t\tif(!ignoreSyncWarning) {\n\t\t\t\tsetShowFieldModal(!isEquivalent)\n\t\t\t}\n\n\t\t\tsetTemplateFieldsChanged(!isEquivalent)\n\t\t\tsetCheckedCardAndTemplateFields(true)\n\t\t}\n\t}, [templateFields, cardFields])\n\n\tconst previousTemplateId = usePrevious(lotTemplateId)\n\n\n\t/*\n\t* This effect sets default values when the lotTemplate changes.\n\t*\n\t* This must be dont in the formComponent so it has access to setFieldValue, which is a prop from formik\n\t*\n\t* It checks values to see if it already contains a key for the current lotTemplateId\n\t* If the key already exists, nothing is done. Otherwise it creates the key and sets the intialvalues using getInitialValues\n\t* */\n\tuseEffect( () => {\n\t\t// extract sub object for current lotTemplateId\n\t\tconst {\n\t\t\t[lotTemplateId]: templateValues = [],\n\t\t\tfields = [],\n\t\t\tsyncWithTemplate\n\t\t} = values || {}\n\n\t\t// switch templates\n\t\tif(previousTemplateId !== lotTemplateId && (previousTemplateId !== null) && (previousTemplateId !== undefined)) {\n\t\t\tsetFieldValue(previousTemplateId, fields)\n\n\t\t\tsetUseCardFields(false)\n\n\t\t\t// if doesn't contain values for current object, set initialValues\n\t\t\tsetFieldValue(\"fields\", getFormCustomFields(templateFields,\n\t\t\t\t[...cardFields, ...templateValues]))\n\t\t}\n\n\t\t// update in current template\n\t\telse {\n\t\t\tsetFieldValue(\"fields\", getFormCustomFields((useCardFields && !syncWithTemplate) ? cardFields : templateFields,\n\t\t\t\t[...cardFields, ...fields]))\n\t\t}\n\n\t}, [lotTemplateId, lotTemplate, useCardFields, syncWithTemplate])\n\n\n\n\tuseEffect( () => {\n\t\tif(isArray(processOptions)) {\n\t\t\tsetFinalProcessOptions(processOptions)\n\t\t}\n\t\telse if(isArray(processesArray)) {\n\t\t\tsetFinalProcessOptions(processesArray.map((currProcess) => currProcess._id))\n\t\t}\n\t\telse {\n\t\t\tsetFinalProcessOptions([])\n\t\t}\n\n\t}, [processOptions, processes])\n\n\t/*\n\t* This function gets a list of names and ids for the stations button group\n\t* */\n\tconst getButtonGroupOptions = () => {\n\t\tvar buttonGroupNames = []\n\t\tvar buttonGroupIds = []\n\n\t\t// loop through availableBins. add name of each bin to buttonGroupNames, add id to buttonGroupIds\n\t\tavailableBins.forEach((currBinId) =>{\n\t\t\tif(stations[currBinId]) {\n\t\t\t\tbuttonGroupNames.push(stations[currBinId].name)\n\t\t\t\tbuttonGroupIds.push(currBinId)\n\t\t\t}\n\t\t})\n\n\t\t// add queue to beginning of arrays\n\t\tif(bins[\"QUEUE\"]) {\n\t\t\tbuttonGroupNames.unshift(\"Queue\")\n\t\t\tbuttonGroupIds.unshift(\"QUEUE\")\n\t\t}\n\n\t\t// add finished to end of arrays\n\t\tif(bins[\"FINISH\"]) {\n\t\t\tbuttonGroupNames.push(\"Finished\")\n\t\t\tbuttonGroupIds.push(\"FINISH\")\n\t\t}\n\n\t\treturn [buttonGroupNames, buttonGroupIds]\n\t}\n\n\tconst [buttonGroupNames, buttonGroupIds] = getButtonGroupOptions()\n\n\tuseEffect(() => {\n\n\t\tif(!isOpen && content) setContent(null)\n\n\t\treturn () => {\n\t\t}\n\t}, [isOpen])\n\n\tuseEffect(() => {\n\n\t\treturn() => {\n\t\t\tdispatchPageDataChanged(false)\n\t\t}\n\n\t},[])\n\n\t/*\n\t* Renders content for moving some or all of a lot from one bin to another\n\t* */\n\tconst renderMoveContent = () => {\n\n\t\t// get destination options for move\n\t\t// the destination options include\n\t\tconst destinationOptions = [...Object.values(stations).filter((currStation) => {\n\t\t\tif((currStation._id !== binId) && processStationIds[currStation._id]) return true\n\t\t})]\n\t\tif(binId !== \"QUEUE\") destinationOptions.unshift({name: \"Queue\", _id: \"QUEUE\"}) // add queue\n\t\tif(binId !== \"FINISH\") destinationOptions.push({name: \"Finished\", _id: \"FINISH\"}) // add finished\n\n\t\tconst maxValue = bins[binId]?.count || 0\n\n\t\treturn(\n\t\t\t<styled.BodyContainer\n\t\t\t\tminHeight={\"20rem\"}\n\t\t\t>\n\t\t\t\t<div>\n\t\t\t\t\t<styled.ContentHeader style={{flexDirection: \"column\"}}>\n\t\t\t\t\t\t<styled.ContentTitle>Move lot</styled.ContentTitle>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<styled.InfoText style={{marginRight: \"1rem\"}}>Current Station</styled.InfoText>\n\t\t\t\t\t\t\t<styled.InfoText schema={\"lots\"} highlight={true}>{selectedBinName}</styled.InfoText>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</styled.ContentHeader>\n\t\t\t\t\t<div style={{display: \"flex\", flexDirection: \"column\", alignItems: \"center\", marginBottom: \"1rem\"}}>\n\t\t\t\t\t\t<styled.InfoText>Select Quantity to Move</styled.InfoText>\n\t\t\t\t\t\t<styled.InfoText style={{marginBottom: \"1rem\"}}>{maxValue} Items Available</styled.InfoText>\n\t\t\t\t\t\t<NumberField\n\t\t\t\t\t\t\tmaxValue={maxValue}\n\t\t\t\t\t\t\tminValue={1}\n\t\t\t\t\t\t\tname={\"moveCount\"}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\", marginBottom: \"1rem\"}}>\n\t\t\t\t\t\t<styled.InfoText style={{marginBottom: \"1rem\"}}>Select Lot Destination</styled.InfoText>\n\n\t\t\t\t\t\t<DropDownSearchField\n\t\t\t\t\t\t\tcontainerSyle={{minWidth: \"35%\"}}\n\t\t\t\t\t\t\tpattern={null}\n\t\t\t\t\t\t\tname=\"moveLocation\"\n\t\t\t\t\t\t\tlabelField={'name'}\n\t\t\t\t\t\t\toptions={destinationOptions}\n\t\t\t\t\t\t\tvalueField={\"_id\"}\n\t\t\t\t\t\t\tfixedHeight={false}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</styled.BodyContainer>\n\t\t)\n\t}\n\n\tconst fields=(useCardFields && !values.syncWithTemplate) ? isArray(cardFields) ? cardFields : isArray(lotTemplate?.fields) ? lotTemplate.fields : []\n\t\t: isArray(lotTemplate?.fields) ? lotTemplate.fields : []\n\n\t// renders history content\n\tconst renderHistory = () => {\n\t\tconst {\n\t\t\tevents = []\n\t\t} = cardHistory || {}\n\n\t\treturn(\n\t\t\t<styled.BodyContainer>\n\t\t\t\t<styled.ContentHeader style={{}}>\n\t\t\t\t\t<styled.ContentTitle>History</styled.ContentTitle>\n\t\t\t\t</styled.ContentHeader>\n\n\n\t\t\t\t<styled.HistoryBodyContainer>\n\t\t\t\t\t{events.map((currEvent) => {\n\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\tdescription,\n\t\t\t\t\t\t\tusername,\n\t\t\t\t\t\t\tdata,\n\t\t\t\t\t\t\tdate: {$date: date}\n\t\t\t\t\t\t} = currEvent\n\n\t\t\t\t\t\tvar jsDate = new Date(date);\n\t\t\t\t\t\tvar currentDate = new Date();\n\t\t\t\t\t\tconst diffTime = Math.abs(currentDate - jsDate);\n\t\t\t\t\t\tconst diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n\n\t\t\t\t\t\tvar {\n\t\t\t\t\t\t\tbins,\n\t\t\t\t\t\t\t...modifiedData\n\t\t\t\t\t\t} = data\n\n\t\t\t\t\t\t// handle route_id change\n\t\t\t\t\t\tif(Object.keys(modifiedData).includes(\"route_id\")) {\n\t\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\t\troute_id: {\n\t\t\t\t\t\t\t\t\tnew: newRouteId,\n\t\t\t\t\t\t\t\t\told: oldRouteId\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t...rest\n\t\t\t\t\t\t\t} = modifiedData\n\n\t\t\t\t\t\t\tmodifiedData = {\n\t\t\t\t\t\t\t\t...rest, \"route\": {\n\t\t\t\t\t\t\t\t\tnew: routes[newRouteId] ? routes[newRouteId].name : \"\",\n\t\t\t\t\t\t\t\t\told: routes[oldRouteId] ? routes[oldRouteId].name : \"\",\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet messages = parseMessageFromEvent(name, username, modifiedData)\n\n\t\t\t\t\t\tif(messages.length === 0) return null\n\n\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t<styled.HistoryItemContainer>\n\t\t\t\t\t\t\t\t<styled.HistoryUserContainer>\n\t\t\t\t\t\t\t\t\t<styled.HistoryUserText>{username}</styled.HistoryUserText>\n\t\t\t\t\t\t\t\t</styled.HistoryUserContainer>\n\t\t\t\t\t\t\t\t<styled.HistoryInfoContainer>\n\t\t\t\t\t\t\t\t\t{messages.map((currMessage) => {\n\t\t\t\t\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t\t\t\t\t<styled.HistoryInfoText>\n\t\t\t\t\t\t\t\t\t\t\t\t{currMessage}\n\t\t\t\t\t\t\t\t\t\t\t</styled.HistoryInfoText>\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t</styled.HistoryInfoContainer>\n\t\t\t\t\t\t\t\t<styled.HistoryDateContainer>\n\t\t\t\t\t\t\t\t\t<styled.HistoryDateText>{jsDate.toLocaleString()}</styled.HistoryDateText>\n\t\t\t\t\t\t\t\t</styled.HistoryDateContainer>\n\t\t\t\t\t\t\t</styled.HistoryItemContainer>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t</styled.HistoryBodyContainer>\n\t\t\t</styled.BodyContainer>\n\t\t)\n\t}\n\n\n\n\tconst renderProcessSelector = () => {\n\n\t\treturn(\n\t\t\t<styled.ProcessFieldContainer>\n\t\t\t\t<styled.ContentHeader style={{marginBottom: \".5rem\"}}>\n\t\t\t\t\t<styled.ContentTitle>Select Process</styled.ContentTitle>\n\t\t\t\t</styled.ContentHeader>\n\n\t\t\t\t<ScrollingButtonField\n\t\t\t\t\tname={\"processId\"}\n\t\t\t\t\tvalueKey={\"value\"}\n\t\t\t\t\tlabelKey={\"label\"}\n\t\t\t\t\toptions={\n\t\t\t\t\t\tfinalProcessOptions.map((currProcessId, currIndex) => {\n\t\t\t\t\t\t\tconst currProcess = processes[currProcessId] || {}\n\t\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\t\tname: currProcessName = \"\"\n\t\t\t\t\t\t\t} = currProcess\n\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tlabel: currProcessName,\n\t\t\t\t\t\t\t\t\tvalue: currProcessId\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</styled.ProcessFieldContainer>\n\t\t)\n\t}\n\n\tconst renderForm = () => {\n\t\treturn(\n\t\t\t<styled.StyledForm\n\t\t\t\tloading={loadingTemplateValues}\n\t\t\t>\n\n\t\t\t\t<ConfirmDeleteModal\n\t\t\t\t\t\tisOpen={!!confirmDeleteModal}\n\t\t\t\t\t\ttitle={\"Are you sure you want to delete this Lot Card?\"}\n\t\t\t\t\t\tbutton_1_text={\"Yes\"}\n\t\t\t\t\t\tbutton_2_text={\"No\"}\n\t\t\t\t\t\thandleClose={() => setConfirmDeleteModal(null)}\n\t\t\t\t\t\thandleOnClick1={() => {\n\t\t\t\t\t\t\thandleDeleteClick(binId)\n\t\t\t\t\t\t\tsetConfirmDeleteModal(null)\n\t\t\t\t\t\t}}\n\t\t\t\t\t\thandleOnClick2={() => {\n\t\t\t\t\t\t\t\tsetConfirmDeleteModal(null)\n\t\t\t\t\t\t}}\n\t\t\t\t/>\n\n\t\t\t\t<BarcodeModal\n\t\t\t\t\t\tisOpen={!!barcodeModal}\n\t\t\t\t\t\ttitle={\"RM-\" + lotNumber + \" Barcode\" }\n\t\t\t\t\t\thandleClose={() => {\n\t\t\t\t\t\t\tdispatchShowBarcodeModal(false)\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tbarcodeId = {\"RM-\" + lotNumber}\n\t\t\t\t/>\n\t\t\t\t<styled.Header>\n\t\t\t\t\t{((content === CONTENT.CALENDAR) || (content === CONTENT.HISTORY) || (content === CONTENT.MOVE))  &&\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tstyle={{position: \"absolute\"}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t<BackButton\n\t\t\t\t\t\t\tonClick={()=>setContent(null)}\n\t\t\t\t\t\t\tschema={'error'}\n\t\t\t\t\t\t\tsecondary\n\t\t\t\t\t\t>\n\t\t\t\t\t\t</BackButton>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\n\t\t\t\t\t{content === CONTENT.HISTORY &&\n\t\t\t\t\t\t<styled.Title>\n\t\t\t\t\t\t\tLot History\n\t\t\t\t\t\t</styled.Title>\n\t\t\t\t\t}\n\t\t\t\t\t{content === CONTENT.MOVE &&\n\t\t\t\t\t\t<styled.Title>\n\t\t\t\t\t\t\tMove Lot\n\t\t\t\t\t\t</styled.Title>\n\t\t\t\t\t}\n\t\t\t\t\t{content !== CONTENT.HISTORY && content !== CONTENT.MOVE &&\n\t\t\t\t\t\t<styled.Title>\n\t\t\t\t\t\t\t{formMode === FORM_MODES.CREATE ?\n\t\t\t\t\t\t\t\t\"Create Lot\"\n\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\"Edit Lot\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</styled.Title>\n\t\t\t\t\t}\n\n\n\t\t\t\t\t<styled.CloseIcon className=\"fa fa-times\" aria-hidden=\"true\" onClick={close}/>\n\t\t\t\t</styled.Header>\n\n\t\t\t\t<styled.RowContainer style={{flex: 1, alignItems: \"stretch\", overflow: \"hidden\"}}>\n\t\t\t\t\t{(showTemplateSelector) &&\n\t\t\t\t\t<TemplateSelectorSidebar\n\t\t\t\t\t\tshowFields={false}\n\t\t\t\t\t\tonTemplateEditClick={() => {\n\t\t\t\t\t\t\tsetShowSkuEditor(true)\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonCloseClick={() => {\n\t\t\t\t\t\t\tsetShowTemplateSelector(!showTemplateSelector)\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tselectedLotTemplatesId={lotTemplateId}\n\t\t\t\t\t\t// minWidth={isMobile ? 1000 : 450}\n\t\t\t\t\t/>\n\t\t\t\t\t}\n\n\t\t\t\t\t<styled.ScrollContainer>\n\n\t\t\t\t\t\t<styled.FieldsHeader>\n\n\t\t\t\t\t\t\t<styled.SubHeader>\n\t\t\t\t\t\t\t\t<styled.IconRow>\n\t\t\t\t\t\t\t\t\t<LabeledButton\n\t\t\t\t\t\t\t\t\t\tlabel={\"Select Template\"}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<styled.TemplateButton\n\t\t\t\t\t\t\t\t\t\t\ttype={\"button\"}\n\t\t\t\t\t\t\t\t\t\t\tclassName={showTemplateSelector ? \"fas fa-times\" : SIDE_BAR_MODES.TEMPLATES.iconName}\n\t\t\t\t\t\t\t\t\t\t\tcolor={themeContext.schema.lots.solid}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tsetShowTemplateSelector(!showTemplateSelector)\n\t\t\t\t\t\t\t\t\t\t\t\tdispatchSetSelectedLotTemplate(lotTemplateId)\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</LabeledButton>\n\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<styled.ContentTitle>Selected Template: </styled.ContentTitle>\n\t\t\t\t\t\t\t\t\t\t<styled.ContentValue>{lotTemplate.name}</styled.ContentValue>\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<LabeledButton\n\t\t\t\t\t\t\t\t\t\tlabel={\"Sync with Template\"}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{templateFieldsChanged ?\n\t\t\t\t\t\t\t\t\t\t\t<WobbleButton\n\t\t\t\t\t\t\t\t\t\t\t\trepeat={false}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<styled.SyncProblem\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{fontSize: 40, color: \"#fc9003\"}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setShowFieldModal(true)}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</WobbleButton>\n\t\t\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t\t\t<styled.Sync\n\t\t\t\t\t\t\t\t\t\t\t\tsync={values.syncWithTemplate}\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{fontSize: 40}}\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => setFieldValue(\"syncWithTemplate\", !values.syncWithTemplate)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</LabeledButton>\n\t\t\t\t\t\t\t\t</styled.IconRow>\n\n\n\t\t\t\t\t\t\t\t{showPasteIcon &&\n\t\t\t\t\t\t\t\t<LabeledButton\n\t\t\t\t\t\t\t\t\tlabel={\"Pasted Data\"}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<styled.PasteIcon\n\t\t\t\t\t\t\t\t\t\ttype={\"button\"}\n\t\t\t\t\t\t\t\t\t\tclassName=\"fas fa-paste\"\n\t\t\t\t\t\t\t\t\t\tcolor={\"#ffc20a\"}\n\t\t\t\t\t\t\t\t\t\tonClick={onPasteIconClick}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</LabeledButton>\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tschema={'lots'}\n\t\t\t\t\t\t\t\t\ttype={\"button\"}\n\t\t\t\t\t\t\t\t\tdisabled={submitDisabled}\n\t\t\t\t\t\t\t\t\tstyle={{...buttonStyle, marginBottom: '0rem', marginTop: 0}}\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tdispatchShowBarcodeModal(true)\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tGenerate Barcode\n\t\t\t\t\t\t\t\t</Button>\n\n\t\t\t\t\t\t\t</styled.SubHeader>\n\n\t\t\t\t\t\t\t{(showProcessSelector || !values.processId) && renderProcessSelector()}\n\n\t\t\t\t\t\t</styled.FieldsHeader>\n\n\t\t\t\t\t\t{(content === null) &&\n\t\t\t\t\t\t\t<LotEditorMainContent\n\t\t\t\t\t\t\t\tfields={fields}\n\t\t\t\t\t\t\t\tformMode={formMode}\n\t\t\t\t\t\t\t\tlotNumber={lotNumber}\n\t\t\t\t\t\t\t\tbuttonGroupNames={buttonGroupNames}\n\t\t\t\t\t\t\t\tlotTemplate={lotTemplate}\n\t\t\t\t\t\t\t\tbuttonGroupIds={buttonGroupIds}\n\t\t\t\t\t\t\t\tbinId={binId}\n\t\t\t\t\t\t\t\tsetBinId={setBinId}\n\t\t\t\t\t\t\t\tpreview={false}\n\t\t\t\t\t\t\t\tcontent={content}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{(content === CONTENT.HISTORY) &&\n\t\t\t\t\t\t\trenderHistory()\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{(content === CONTENT.MOVE) &&\n\t\t\t\t\t\t\trenderMoveContent()\n\t\t\t\t\t\t}\n\n\t\t\t\t\t</styled.ScrollContainer>\n\t\t\t\t</styled.RowContainer>\n\n\t\t\t\t<styled.Footer>\n\t\t\t\t\t{/* render buttons for appropriate content */}\n\t\t\t\t\t{(isMobile && showTemplateSelector) ?\n\t\t\t\t\t<styled.ButtonContainer>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttype={\"button\"}\n\t\t\t\t\t\t\tstyle={{...buttonStyle, }}\n\t\t\t\t\t\t\tonClick={() => setShowTemplateSelector(false)}\n\t\t\t\t\t\t\tschema={\"lots\"}\n\t\t\t\t\t\t\t// secondary\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tBack to Editor\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</styled.ButtonContainer>\n\t\t\t\t\t:\n\t\t\t\t\t<styled.ButtonContainer>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t[CONTENT.HISTORY]:\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tstyle={{...buttonStyle}}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => setContent(null)}\n\t\t\t\t\t\t\t\t\t\t\tschema={\"error\"}\n\t\t\t\t\t\t\t\t\t\t\tsecondary\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tGo Back\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</>,\n\t\t\t\t\t\t\t\t[CONTENT.MOVE]:\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tdisabled={submitDisabled}\n\t\t\t\t\t\t\t\t\t\t\tstyle={{...buttonStyle, width: \"8rem\"}}\n\t\t\t\t\t\t\t\t\t\t\ttype={\"button\"}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tonSubmit(values, FORM_BUTTON_TYPES.MOVE_OK)\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tschema={\"ok\"}\n\t\t\t\t\t\t\t\t\t\t\tsecondary\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tOk\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\ttype={\"button\"}\n\t\t\t\t\t\t\t\t\t\t\tstyle={buttonStyle}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => setContent(null)}\n\t\t\t\t\t\t\t\t\t\t\tschema={\"error\"}\n\t\t\t\t\t\t\t\t\t\t\t// secondary\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t}[content] ||\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t{showCreationStatusButton &&\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\ttype={\"button\"}\n\t\t\t\t\t\t\t\t\tlabel={\"Back to Creation Status\"}\n\t\t\t\t\t\t\t\t\tonClick={onShowCreateStatusClick}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t{formMode === FORM_MODES.CREATE ?\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t{disabledAddButton &&\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tschema={'lots'}\n\t\t\t\t\t\t\t\t\t\t\ttype={\"button\"}\n\t\t\t\t\t\t\t\t\t\t\tdisabled={submitDisabled}\n\t\t\t\t\t\t\t\t\t\t\tstyle={{...buttonStyle, marginBottom: '0rem', marginTop: 0}}\n\t\t\t\t\t\t\t\t\t\t\tonClick={onAddClick}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tAdd\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t{!disabledAddButton &&\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tschema={'lots'}\n\t\t\t\t\t\t\t\t\t\t\ttype={\"button\"}\n\t\t\t\t\t\t\t\t\t\t\tdisabled={submitDisabled}\n\t\t\t\t\t\t\t\t\t\t\tstyle={{...buttonStyle, marginBottom: '0rem', marginTop: 0}}\n\t\t\t\t\t\t\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\t\t\t\t\t\t\tonSubmit(values, FORM_BUTTON_TYPES.ADD)\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tAdd\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t{!disabledAddButton &&\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tschema={'lots'}\n\t\t\t\t\t\t\t\t\t\t\ttype={\"button\"}\n\t\t\t\t\t\t\t\t\t\t\tsecondary\n\t\t\t\t\t\t\t\t\t\t\tdisabled={submitDisabled}\n\t\t\t\t\t\t\t\t\t\t\tstyle={{...buttonStyle, marginBottom: '0rem', marginTop: 0}}\n\t\t\t\t\t\t\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\t\t\t\t\t\t\tonSubmit(values, FORM_BUTTON_TYPES.ADD_AND_NEXT)\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tAdd & Next\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t<>\n\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tschema={'lots'}\n\t\t\t\t\t\t\t\t\t\t\ttype={\"button\"}\n\t\t\t\t\t\t\t\t\t\t\tdisabled={submitDisabled}\n\t\t\t\t\t\t\t\t\t\t\tstyle={{...buttonStyle, marginBottom: '0rem', marginTop: 0}}\n\t\t\t\t\t\t\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\t\t\t\t\t\t\tonSubmit(values, FORM_BUTTON_TYPES.SAVE)\n\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tSave Lot\n\t\t\t\t\t\t\t\t\t\t</Button>\n\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tschema={'lots'}\n\t\t\t\t\t\t\t\t\t\t\ttype={\"button\"}\n\t\t\t\t\t\t\t\t\t\t\tstyle={{...buttonStyle, marginBottom: '0rem', marginTop: 0}}\n\t\t\t\t\t\t\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\t\t\t\t\t\t\tsetContent(CONTENT.MOVE)\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tsecondary\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tMove Lot\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tschema={'delete'}\n\t\t\t\t\t\t\t\t\t\t\tstyle={{...buttonStyle, marginBottom: '0rem', marginTop: 0}}\n\t\t\t\t\t\t\t\t\t\t\ttype={\"button\"}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => setConfirmDeleteModal(true)}\n\t\t\t\t\t\t\t\t\t\t\ttertiary\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<i style={{marginRight: \".5rem\"}} className=\"fa fa-trash\" aria-hidden=\"true\"/>\n\t\t\t\t\t\t\t\t\t\t\tDelete Lot\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t}\n\n\t\t\t\t\t</styled.ButtonContainer>\n\t\t\t\t\t}\n\n\n\t\t\t\t\t{footerContent()}\n\t\t\t\t</styled.Footer>\n\t\t\t</styled.StyledForm>\n\t\t)\n\t}\n\n\n\t\treturn(\n\t\t\t<>\n\t\t\t\t{showFieldModal &&\n\t\t\t\t<SimpleModal\n\t\t\t\t\tcontent={\"The template used by this lot has changed. Would you like to sync the lot to match the template?\"}\n\t\t\t\t\tisOpen={showFieldModal}\n\t\t\t\t\ttitle={\"Lot Template has Changed\"}\n\t\t\t\t\tonRequestClose={()=>setShowFieldModal(false)}\n\t\t\t\t\tonCloseButtonClick={()=>setShowFieldModal(false)}\n\t\t\t\t\thandleOnClick1={()=> {\n\t\t\t\t\t\t// setUseCardFields(false)\n\t\t\t\t\t\tsetFieldValue(\"syncWithTemplate\", true)\n\t\t\t\t\t\tsetShowFieldModal(false)\n\t\t\t\t\t\tsetTemplateFieldsChanged(false)\n\t\t\t\t\t\tsetCheckedCardAndTemplateFields(false)\n\n\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\tlocalSettings\n\t\t\t\t\t\t} = localReducer || {}\n\n\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\t[IGNORE_LOT_SYNC_WARNING]: ignoreSyncWarning,\n\t\t\t\t\t\t} = localSettings || {}\n\n\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\t[cardId]: ignoreThisLot,\n\t\t\t\t\t\t\t...rest\n\t\t\t\t\t\t} = ignoreSyncWarning || {}\n\n\n\t\t\t\t\t\tdispatchPostLocalSettings({\n\t\t\t\t\t\t\t...localSettings,\n\t\t\t\t\t\t\t[IGNORE_LOT_SYNC_WARNING]: {\n\t\t\t\t\t\t\t\t...rest,\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}}\n\t\t\t\t\thandleOnClick2={()=> {\n\t\t\t\t\t\tsetShowFieldModal(false)\n\n\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\tlocalSettings\n\t\t\t\t\t\t} = localReducer || {}\n\n\t\t\t\t\t\tdispatchPostLocalSettings({\n\t\t\t\t\t\t\t...localSettings,\n\t\t\t\t\t\t\t[IGNORE_LOT_SYNC_WARNING]: {\n\t\t\t\t\t\t\t\t[cardId] : true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}}\n\t\t\t\t\tbutton_1_text={\"Yes\"}\n\t\t\t\t\tbutton_2_text={\"no\"}\n\t\t\t\t\tcontentLabel={\"Update Lot\"}\n\t\t\t\t/>\n\t\t\t\t}\n\n\t\t\t\t{renderForm()}\n\t\t\t\t<SubmitErrorHandler\n\t\t\t\t\tsubmitCount={submitCount}\n\t\t\t\t\tisValid={formikProps.isValid}\n\t\t\t\t\tonSubmitError={() => {}}\n\t\t\t\t\tformik={formikProps}\n\t\t\t\t/>\n\t\t\t</>\n\t\t)\n\n}\n\n\n\n// overwrite default button text color since it's hard to see on the lots background color\n// const buttonStyle = {color: \"black\"}\nconst buttonStyle = {marginBottom: '0rem', marginTop: 0}\n\n\nconst LotEditor = (props) => {\n\n\tconst {\n\t\tisOpen,\n\t\tinitialBin,\n\t\tonAddClick,\n\t\tfooterContent,\n\t\tlotTemplateId,\n\t\tlotTemplate,\n\t\thidden,\n\t\tonShowCreateStatusClick,\n\t\tshowCreationStatusButton,\n\t\tshowPasteIcon,\n\t\tonSubmit,\n\t\tclose,\n\t\tprocessId,\n\t\tprocessOptions,\n\t\tshowProcessSelector,\n\t\tdisabledAddButton,\n\t\tcollectionCount,\n\t\tinitialValues,\n\t\tformRef,\n\t\tonValidate,\n\t\tonPasteIconClick,\n\t\tcardNames,\n\t\tshowSkuEditor,\n\t\tsetShowSkuEditor,\n\t} = props\n\n\t// redux state\n\tconst cards = useSelector(state => { return state.cardsReducer.cards })\n\tconst selectedLotTemplatesId = useSelector(state => {return state.lotTemplatesReducer.selectedLotTemplatesId})\n\n\t// actions\n\tconst dispatch = useDispatch()\n\tconst onPostCard = async (card) => await dispatch(postCard(card))\n\tconst onGetCard = async (cardId) => await dispatch(getCard(cardId))\n\tconst onPutCard = async (card, ID) => await dispatch(putCard(card, ID))\n\tconst dispatchGetLotTemplates = async () => await dispatch(getLotTemplates())\n\tconst dispatchSetSelectedLotTemplate = (id) => dispatch(setSelectedLotTemplate(id))\n\n\t// component state\n\tconst [cardId, setCardId] = useState(props.cardId) //cardId and binId are stored as internal state but initialized from props (if provided)\n\tconst [binId, setBinId] = useState(props.binId || \"QUEUE\")\n\tconst [content, setContent] = useState(null)\n\tconst [loaded, setLoaded] = useState(false)\n\tconst [formMode, ] = useState(props.cardId ? FORM_MODES.UPDATE : FORM_MODES.CREATE) // if cardId was passed, update existing. Otherwise create new\n\tconst [useCardFields, setUseCardFields] = useState(props.cardId ? true : false)\n\n\n\t// get card object from redux by cardId\n\tconst card = cards[cardId] || null\n\tconst [lotNumber, setLotNumber] = useState((card && card.lotNumber !== null) ? card.lotNumber : collectionCount)\n\n\t// extract card attributes\n\tconst {\n\t\tbins = {}\n\t} = card || {}\n\n\t/*\n\t*\n\t* */\n\tconst handleGetCard = async (cardId) => {\n\t\tif(cardId) {\n\t\t\tconst result = await onGetCard(cardId)\n\t\t}\n\t\t// if(!loaded) {\n\t\t// \tsetLoaded(true)\n\t\t// }\n\t}\n\n\tuseEffect(() => {\n\t\tsetCardId(props.cardId)\n\t}, [props.cardId])\n\n\n\tuseEffect(() => {\n\t\tsetLotNumber((card && card.lotNumber !== null) ? card.lotNumber : collectionCount)\n\t}, [card, collectionCount])\n\n\n\t/*\n\t*\n\t* */\n\tuseEffect( () => {\n\t\thandleGetCard(cardId)\n\t\tvar timer = setInterval(()=> {\n\t\t\thandleGetCard(cardId)\n\t\t\tdispatchGetLotTemplates()\n\t\t},5000)\n\n\t\treturn () => {\n\t\t\tclearInterval(timer)\n\t\t}\n\n\t}, [cardId])\n\n\t/*\n\t* if card exists, set form mode to update\n\t* */\n\tuseEffect( () => {\n\n\t\tif(collectionCount !== null) {\n\t\t\t// editing existing card\n\t\t\tif(cardId) {\n\t\t\t\tif(card) {\n\n\t\t\t\t\t// if card has template, template and card must be loaded\n\t\t\t\t\tif(card?.lotTemplateId) {\n\t\t\t\t\t\tif(lotTemplate && !loaded) {\n\t\t\t\t\t\t\tsetLoaded(true)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// No template, only need card to set loaded\n\t\t\t\t\telse if(!loaded) {\n\t\t\t\t\t\tsetLoaded(true) // if card already exists, set loaded to true\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// creating new, set loaded to true\n\t\t\telse {\n\t\t\t\tif(!loaded) setLoaded(true)\n\t\t\t}\n\t\t}\n\n\t}, [card, lotTemplate, lotTemplateId, collectionCount])\n\n\tif(loaded) {\n\t\treturn(\n\t\t\t\t<styled.Container>\n\t\t\t\t\t<Formik\n\t\t\t\t\t\tinnerRef={formRef}\n\t\t\t\t\t\tinitialValues={{\n\t\t\t\t\t\t\t_id: card ? card._id : null,\n\t\t\t\t\t\t\tprocessId: processId,\n\t\t\t\t\t\t\tsyncWithTemplate: card ? (card.syncWithTemplate || false) : false,\n\t\t\t\t\t\t\tmoveCount: card?.bins[binId]?.count || 0,\n\t\t\t\t\t\t\tmoveLocation: [],\n\t\t\t\t\t\t\tname: card ? card.name : ``,\n\t\t\t\t\t\t\tbins: card && card.bins ?\n\t\t\t\t\t\t\t\tcard.bins\n\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\tgetDefaultBins(initialBin),\n\t\t\t\t\t\t\tfields: getFormCustomFields((useCardFields && !card?.syncWithTemplate) ? ( card?.fields || []) : lotTemplate.fields, card?.fields ? card?.fields : null)\n\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tvalidationSchema={getCardSchema((content === CONTENT.MOVE) ? CARD_SCHEMA_MODES.MOVE_LOT : CARD_SCHEMA_MODES.EDIT_LOT, bins[binId]?.count ? bins[binId].count : 0)}\n\t\t\t\t\t\tvalidate={onValidate}\n\t\t\t\t\t\tvalidateOnChange={true}\n\t\t\t\t\t\t// validateOnMount={true} // leave false, if set to true it will generate a form error when new data is fetched\n\t\t\t\t\t\tvalidateOnBlur={true}\n\t\t\t\t\t\tonSubmit={()=>{}} // this is necessary\n\n\t\t\t\t\t\t// enableReinitialize={true} // leave false, otherwise values will be reset when new data is fetched for editing an existing item\n\t\t\t\t\t>\n\t\t\t\t\t\t{formikProps => {\n\t\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\t\tsetSubmitting,\n\t\t\t\t\t\t\t\tsetTouched,\n\t\t\t\t\t\t\t\tresetForm,\n\t\t\t\t\t\t\t\tsetFieldValue,\n\t\t\t\t\t\t\t\tvalidateForm,\n\t\t\t\t\t\t\t\tsetErrors,\n\t\t\t\t\t\t\t\tsubmitForm\n\n\t\t\t\t\t\t\t} = formikProps\n\n\t\t\t\t\t\t\tconst handleSubmit = async (values, buttonType) => {\n\t\t\t\t\t\t\t\tsetSubmitting(true)\n\t\t\t\t\t\t\t\tawait submitForm()\n\n\t\t\t\t\t\t\t\tconst submissionErrors = await validateForm()\n\n\t\t\t\t\t\t\t\t// abort if there are errors\n\t\t\t\t\t\t\t\tif(!isEmpty(submissionErrors)) {\n\t\t\t\t\t\t\t\t\tsetSubmitting(false)\n\t\t\t\t\t\t\t\t\treturn false\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tonSubmit && onSubmit()\n\n\t\t\t\t\t\t\t\tlet requestResult\n\n\t\t\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\t\t\t_id,\n\t\t\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\t\t\tchanged,\n\t\t\t\t\t\t\t\t\tnew: isNew,\n\t\t\t\t\t\t\t\t\tbins,\n\t\t\t\t\t\t\t\t\tmoveCount,\n\t\t\t\t\t\t\t\t\tmoveLocation,\n\t\t\t\t\t\t\t\t\tprocessId: selectedProcessId,\n\t\t\t\t\t\t\t\t\t[lotTemplateId]: templateValues,\n\t\t\t\t\t\t\t\t\tfields,\n\t\t\t\t\t\t\t\t\tsyncWithTemplate\n\t\t\t\t\t\t\t\t} = values || {}\n\n\n\t\t\t\t\t\t\t\tif(content === CONTENT.MOVE) {\n\t\t\t\t\t\t\t\t\t// moving card need to update count for correct bins\n\t\t\t\t\t\t\t\t\tif(moveCount && moveLocation) {\n\n\t\t\t\t\t\t\t\t\t\tvar submitItem = {\n\t\t\t\t\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\t\t\t\t\tbins,\n\t\t\t\t\t\t\t\t\t\t\tlotNumber,\n\t\t\t\t\t\t\t\t\t\t\tflags: isObject(card) ? (card.flags || []) : [],\n\t\t\t\t\t\t\t\t\t\t\tprocess_id: card.process_id,\n\t\t\t\t\t\t\t\t\t\t\tlotTemplateId,\n\t\t\t\t\t\t\t\t\t\t\tfields,\n\t\t\t\t\t\t\t\t\t\t\tsyncWithTemplate\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t/*\n\t\t\t\t\t\t\t\t\t\t* if lot items are being moved to a different bin, the submitItem's bins key needs to be updated\n\t\t\t\t\t\t\t\t\t\t* namely, the count field for the destination and origin bins needs to updated\n\t\t\t\t\t\t\t\t\t\t*\n\t\t\t\t\t\t\t\t\t\t* The destination bin's count should be incremented by the number of items being moved\n\t\t\t\t\t\t\t\t\t\t* The current bin's count should be decremented by the number of items being moved\n\t\t\t\t\t\t\t\t\t\t*\n\t\t\t\t\t\t\t\t\t\t* */\n\n\t\t\t\t\t\t\t\t\t\t// get count and location info for move from form values\n\t\t\t\t\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\t\t\t\t\tname: moveName,\n\t\t\t\t\t\t\t\t\t\t\t_id: destinationBinId,\n\t\t\t\t\t\t\t\t\t\t} = moveLocation[0]\n\n\t\t\t\t\t\t\t\t\t\t// extract destination, current, and remaining bins\n\t\t\t\t\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\t\t\t\t\t[destinationBinId]: destinationBin,\n\t\t\t\t\t\t\t\t\t\t\t[binId]: currentBin,\n\t\t\t\t\t\t\t\t\t\t\t...unalteredBins\n\t\t\t\t\t\t\t\t\t\t} = bins\n\n\t\t\t\t\t\t\t\t\t\t// update counts of current and destination bins\n\t\t\t\t\t\t\t\t\t\tconst currentBinCount = parseInt(currentBin ? currentBin.count : 0) - moveCount\n\t\t\t\t\t\t\t\t\t\tconst destinationBinCount = parseInt(destinationBin ? destinationBin.count : 0) + moveCount\n\n\t\t\t\t\t\t\t\t\t\t// update bins\n\t\t\t\t\t\t\t\t\t\tvar updatedBins\n\n\t\t\t\t\t\t\t\t\t\tif(currentBinCount) {\n\t\t\t\t\t\t\t\t\t\t\t// both the current bin and the destination bin have items, so update both lots and spread the remaining\n\n\t\t\t\t\t\t\t\t\t\t\tupdatedBins = {\n\t\t\t\t\t\t\t\t\t\t\t\t...unalteredBins, \t\t\t// spread remaining bins\n\t\t\t\t\t\t\t\t\t\t\t\t[destinationBinId]: {\t\t// update destination bin's count, keep remaining attributes\n\t\t\t\t\t\t\t\t\t\t\t\t\t...destinationBin,\n\t\t\t\t\t\t\t\t\t\t\t\t\tcount: destinationBinCount\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t[binId]: {\t\t\t// update current bin's count, keep remaining attributes\n\t\t\t\t\t\t\t\t\t\t\t\t\t...currentBin,\n\t\t\t\t\t\t\t\t\t\t\t\t\tcount: currentBinCount\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\t\t// if currentBinCount is 0, the bin no longer has any items associated with the lot, so remove it\n\t\t\t\t\t\t\t\t\t\t\tupdatedBins = {\n\t\t\t\t\t\t\t\t\t\t\t\t...unalteredBins,\n\t\t\t\t\t\t\t\t\t\t\t\t[destinationBinId]: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t...destinationBin,\n\t\t\t\t\t\t\t\t\t\t\t\t\tcount: destinationBinCount\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t// update submit items bins\n\t\t\t\t\t\t\t\t\t\tsubmitItem = {\n\t\t\t\t\t\t\t\t\t\t\t...submitItem,\n\t\t\t\t\t\t\t\t\t\t\tbins: updatedBins,\n\t\t\t\t\t\t\t\t\t\t\tfields,\n\t\t\t\t\t\t\t\t\t\t\tsyncWithTemplate\n\t\t\t\t\t\t\t\t\t\t\t// fields\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t// update card\n\t\t\t\t\t\t\t\t\t\trequestResult = onPutCard(submitItem, values._id)\n\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t// update (PUT)\n\t\t\t\t\t\t\t\t\tif(values._id) {\n\n\t\t\t\t\t\t\t\t\t\tvar submitItem = {\n\t\t\t\t\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\t\t\t\t\tbins,\n\t\t\t\t\t\t\t\t\t\t\tflags: isObject(card) ? (card.flags || []) : [],\n\t\t\t\t\t\t\t\t\t\t\tprocess_id: isObject(card) ? (card.process_id || processId) : (processId),\n\t\t\t\t\t\t\t\t\t\t\tlotTemplateId,\n\t\t\t\t\t\t\t\t\t\t\tlotNumber,\n\t\t\t\t\t\t\t\t\t\t\tfields,\n\t\t\t\t\t\t\t\t\t\t\tsyncWithTemplate\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\trequestResult = onPutCard(submitItem, values._id)\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// create (POST)\n\t\t\t\t\t\t\t\t\telse {\n\n\t\t\t\t\t\t\t\t\t\tconst submitItem = {\n\t\t\t\t\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\t\t\t\t\tbins,\n\t\t\t\t\t\t\t\t\t\t\tflags: [],\n\t\t\t\t\t\t\t\t\t\t\tprocess_id: processId ? processId : selectedProcessId,\n\t\t\t\t\t\t\t\t\t\t\tlotTemplateId,\n\t\t\t\t\t\t\t\t\t\t\tlotNumber,\n\t\t\t\t\t\t\t\t\t\t\tfields,\n\t\t\t\t\t\t\t\t\t\t\tsyncWithTemplate\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\trequestResult = await onPostCard(submitItem)\n\n\n\t\t\t\t\t\t\t\t\t\tif(!(requestResult instanceof Error)) {\n\t\t\t\t\t\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\t\t\t\t\t\t_id = null\n\t\t\t\t\t\t\t\t\t\t\t} = requestResult || {}\n\n\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(\"_id\", _id)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\t\tconsole.error(\"requestResult error\",requestResult)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tsetTouched({}) // after submitting, set touched to empty to reflect that there are currently no new changes to save\n\t\t\t\t\t\t\t\tsetSubmitting(false)\n\n\t\t\t\t\t\t\t\tswitch(buttonType) {\n\t\t\t\t\t\t\t\t\tcase FORM_BUTTON_TYPES.ADD:\n\t\t\t\t\t\t\t\t\t\tresetForm()\n\t\t\t\t\t\t\t\t\t\tclose()\n\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\tcase FORM_BUTTON_TYPES.MOVE_OK:\n\t\t\t\t\t\t\t\t\t\tresetForm()\n\t\t\t\t\t\t\t\t\t\tclose()\n\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\tcase FORM_BUTTON_TYPES.ADD_AND_NEXT:\n\t\t\t\t\t\t\t\t\t\tresetForm()\n\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\tcase FORM_BUTTON_TYPES.SAVE:\n\t\t\t\t\t\t\t\t\t\tclose()\n\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\treturn requestResult\n\t\t\t\t\t\t\t\t// return true\n\t\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\t\tif(hidden) return null\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<FormComponent\n\t\t\t\t\t\t\t\t\tuseCardFields={useCardFields}\n\t\t\t\t\t\t\t\t\tsetUseCardFields={setUseCardFields}\n\t\t\t\t\t\t\t\t\tcardNames={cardNames}\n\t\t\t\t\t\t\t\t\tonAddClick={onAddClick}\n\t\t\t\t\t\t\t\t\tfooterContent={footerContent}\n\t\t\t\t\t\t\t\t\tshowCreationStatusButton={showCreationStatusButton}\n\t\t\t\t\t\t\t\t\tlotNumber={lotNumber}\n\t\t\t\t\t\t\t\t\tcollectionCount={collectionCount}\n\t\t\t\t\t\t\t\t\tonSubmit={handleSubmit}\n\t\t\t\t\t\t\t\t\tsetShowSkuEditor={setShowSkuEditor}\n\t\t\t\t\t\t\t\t\tshowSkuEditor={showSkuEditor}\n\t\t\t\t\t\t\t\t\tlotTemplate={lotTemplate}\n\t\t\t\t\t\t\t\t\tlotTemplateId={lotTemplateId}\n\t\t\t\t\t\t\t\t\tdisabledAddButton={disabledAddButton}\n\t\t\t\t\t\t\t\t\tloaded={loaded}\n\t\t\t\t\t\t\t\t\tonShowCreateStatusClick={onShowCreateStatusClick}\n\t\t\t\t\t\t\t\t\tprocessId={processId}\n\t\t\t\t\t\t\t\t\tclose={close}\n\t\t\t\t\t\t\t\t\tformMode={formMode}\n\t\t\t\t\t\t\t\t\tshowPasteIcon={showPasteIcon}\n\t\t\t\t\t\t\t\t\t{...formikProps}\n\t\t\t\t\t\t\t\t\tbins={bins}\n\t\t\t\t\t\t\t\t\tbinId={binId}\n\t\t\t\t\t\t\t\t\tsetBinId={setBinId}\n\t\t\t\t\t\t\t\t\tcardId={cardId}\n\t\t\t\t\t\t\t\t\tisOpen={isOpen}\n\t\t\t\t\t\t\t\t\tformikProps={formikProps}\n\t\t\t\t\t\t\t\t\tprocessOptions={processOptions}\n\t\t\t\t\t\t\t\t\tshowProcessSelector={showProcessSelector}\n\t\t\t\t\t\t\t\t\tcontent={content}\n\t\t\t\t\t\t\t\t\tsetContent={setContent}\n\t\t\t\t\t\t\t\t\tcard={card}\n\t\t\t\t\t\t\t\t\tonPasteIconClick={onPasteIconClick}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}}\n\t\t\t\t\t</Formik>\n\t\t\t\t</styled.Container>\n\t\t)\n\t}\n\n\t// if not done loading data, show loader icon\n\telse {\n\t\treturn (\n\t\t\t<FadeLoader\n\t\t\t\tcss={styled.FadeLoaderCSS}\n\t\t\t\theight={5}\n\t\t\t\twidth={3}\n\t\t\t\tloading={true}\n\t\t\t/>\n\t\t)\n\t}\n\n\n}\n\n// Specifies propTypes\nLotEditor.propTypes = {\n\tbinId: PropTypes.string,\n\tshowProcessSelector: PropTypes.bool,\n};\n\n// Specifies the default values for props:\nLotEditor.defaultProps = {\n\tbinId: \"QUEUE\",\n\tinitialBin: QUEUE_BIN_ID,\n\tshowProcessSelector: false,\n\tprovidedValues: []\n};\n\nexport default LotEditor\n","import styled from \"styled-components\"\n\nexport const Container = styled.div`\n  \n  animation: ${props => props.wobble && \"wobble 1s linear infinite\"};\n  @keyframes wobble {\n    0% {\n      transform: translateX(0%);\n    }\n    15% {\n      transform: translateX(-25%) rotate(-5deg);\n    }\n    30% {\n      transform: translateX(20%) rotate(3deg);\n    }\n    45% {\n      transform: translateX(-15%) rotate(-3deg);\n    }\n    60% {\n      transform: translateX(10%) rotate(2deg);\n    }\n    75% {\n      transform: translateX(-5%) rotate(-1deg);\n    }\n    100% {\n      transform: translateX(0%);\n    }\n  }\n`\n","import React, { useState, useEffect, } from 'react';\nimport PropTypes from 'prop-types';\n\nimport * as styled from './wobble_button.style'\n\n/*\n* A button that wobbles\n* */\nconst WobbleButton = (props) => {\n\n\tconst {\n\t\tcontainerStyle,\n\t\tonDuration,\t\t// how long should it wobble\n\t\toffDuration,\t// how long should it pause between wobbles\n\t\tchildren,\t\t// children to render\n\t\trepeat,\n\t} = props\n\n\tconst [wobble, setWobble] = useState(true)\n\n\tuseEffect(() => {\n\t\tlet timeout = setTimeout(() => {\n\t\t\tif((repeat && !wobble) || wobble) setWobble(!wobble)\n\t\t}, wobble ? onDuration : offDuration)\n\n\t\treturn () => {\n\t\t\tclearTimeout(timeout)\n\t\t}\n\n\t}, [wobble])\n\n\treturn (\n\t\t<styled.Container\n\t\t\twobble={wobble}\n\t\t\tstyle={containerStyle}\n\t\t>\n\t\t\t{children}\n\t\t</styled.Container>\n\t);\n};\n\nWobbleButton.propTypes = {\n\tonDuration: PropTypes.number,\n\toffDuration: PropTypes.number,\n\trepeat: PropTypes.bool\n};\n\nWobbleButton.defaultProps = {\n\tonDuration: 1000,\n\toffDuration: 5000,\n\trepeat: true,\n};\nexport default WobbleButton;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n`\n\nexport const Row = styled.div`\n    display: flex;\n`\n\nexport const FieldContainer = styled.div`\n  margin: 1rem;\n  flex: 1;\n  align-self: center;\n  justify-content: center;\n  display: flex;\n`","import React from 'react';\n\nimport * as styled from \"./lot_fields.style\";\nimport FieldComponentMapper from \"../../lot_template_editor/field_component_mapper/field_component_mapper\";\n\nconst LotFields = (props) => {\n\n    const {\n        fields,\n        preview,\n        usable\n    } = props\n\n    /*\n\t* Renders fields\n\t* */\n    const renderFields = () => {\n\n        return (\n            <styled.Container>\n\n                {fields.map((currRow, currRowIndex) => {\n\n                    const isLastRow = currRowIndex === fields.length - 1\n                    return <div\n                        style={{flex: isLastRow && 1, display: isLastRow && \"flex\", flexDirection: \"column\"}}\n                        key={currRowIndex}\n                    >\n                        <styled.Row>\n\n                            {currRow.map((currItem, currItemIndex) => {\n                                const {\n                                    _id: dropContainerId,\n                                    component,\n                                    fieldName,\n                                    dataType,\n                                    key,\n                                    required,\n                                    showInPreview,\n                                } = currItem || {}\n\n                                // get full field name\n                                const fullFieldName = `fields[${currRowIndex}][${currItemIndex}].value`\n\n                                return <styled.FieldContainer\n                                    key={dropContainerId}\n                                >\n                                    <FieldComponentMapper\n                                        required={required}\n                                        fieldId={dropContainerId}\n                                        displayName={fieldName}\n                                        preview={preview}\n                                        usable={usable}\n                                        component={component}\n                                        fieldName={fullFieldName}\n                                    />\n                                </styled.FieldContainer>\n                            })}\n\n                        </styled.Row>\n                    </div>\n                })}\n            </styled.Container>\n        )\n    }\n\n    return (renderFields());\n};\n\nLotFields.propTypes = {\n\n};\n\nLotFields.defaultProps = {\n    preview: false,\n    usable: true\n};\n\n\n\nexport default LotFields;\n","import { denormalize, schema } from 'normalizr';\nimport { uuidv4 } from '../methods/utils/utils';\n\n// schema for single task queue item schema\nexport const taskQueueItemSchema = new schema.Entity(\n  // key\n  'taskQueue',\n  // definition\n  {\n    //condition: conditionSchema\n  },\n  // options\n  {\n    idAttribute: (value, parent, key) => {\n      return value._id\n    },\n\n    // processStrategy\n    processStrategy: (value, parent, key) => {\n      return value;\n    }\n  },\n\n);\n\n// schema for list of task queue items\nexport const taskQueueSchema = [taskQueueItemSchema]\n","export const toIntegerOrZero = (value) => {\n\treturn Number.isInteger(value) ?\n\t\tvalue\n\t\t:\n\t\tNumber.isInteger(parseInt(value)) ?\n\t\t\tparseInt(value)\n\t\t\t:\n\t\t\t0\n}","export const STARTED = '_STARTED';\nexport const SUCCESS = '_SUCCESS';\nexport const FAILURE = '_FAILURE';\nexport const SELECTED = '_SELECTED';\nexport const KICK_OFF_ENABLED = '_KICK_OFF_ENABLED';\nexport const FINISH_ENABLED = '_FINISH_ENABLED';","import { normalize } from 'normalizr';\n\n// import types\nimport {\n    GET,\n    POST,\n    DELETE,\n    PUT\n} from '../types/prefixes';\n\nimport {\n    WORK_INSTRUCTIONS,\n    WORK_INSTRUCTION,\n} from '../types/data_types';\n\nimport { api_action } from './index';\nimport * as api from '../../api/work_instructions_api'\n\n// import schema\nimport { scheduleSchema, schedulesSchema } from '../../normalizr/schedules_schema';\n\nimport log from \"../../logger\"\nimport {convertArrayToObject} from \"../../methods/utils/utils\";\n\nconst logger = log.getLogger(\"Cards\", \"Redux\")\nlogger.setLevel(\"debug\")\n\n\n\n// get\n// ******************************\nexport const getWorkInstruction = (id) =>  async (dispatch) => {\n\n    /*\n        Invoked in api_action()\n        Whatever is returned from this function is the payload\n        that will be dispatched to redux (if successful)\n    */\n    const callback = async () => {\n\n        // make request\n        const workInstruction = await api.getWorkInstruction(id);\n\n        // const cardsObj = convertArrayToObject(cards, \"_id\")\n        // console.log(\"getCard cardsObj\",cardsObj)\n\n        // format response\n        // const normalizedSchedules = normalize(schedules, schedulesSchema);\n\n        // return payload for redux\n        return {\n            workInstruction,\n        };\n    }\n\n    const actionName = GET + WORK_INSTRUCTION;\n\n    // payload is returned back\n    const payload = await api_action(actionName, callback, dispatch, id);\n\n    return payload;\n\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// get\n// ******************************\nexport const getWorkInstructions = () =>  async (dispatch) => {\n\n    /*\n        Invoked in api_action()\n        Whatever is returned from this function is the payload\n        that will be dispatched to redux (if successful)\n    */\n    const callback = async () => {\n\n        // make request\n        const workInstructions = await api.getWorkInstructions();\n\n        const workInstructionsObj = convertArrayToObject(workInstructions, \"_id\")\n\n        // return payload for redux\n        return {\n            workInstructions: workInstructionsObj,\n        };\n    }\n\n    const actionName = GET + WORK_INSTRUCTIONS;\n\n    // payload is returned back\n    const payload = await api_action(actionName, callback, dispatch);\n\n    return payload;\n\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n\n// create\n// ******************************\nexport const postWorkInstruction = (workInstruction) =>  async dispatch => {\n\n    const callback = async () => {\n        const createdWorkInstruction = await api.postWorkInstruction(workInstruction);\n        // const normalizedSchedules = normalize(createdSchedule, scheduleSchema);\n\n        return {\n            workInstruction: createdWorkInstruction,\n        };\n    }\n    //\n    const actionName = POST + WORK_INSTRUCTION;\n\n    const payload = await api_action(actionName, callback, dispatch, workInstruction);\n\n    return payload.workInstruction\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// delete\n// ******************************\nexport const deleteWorkInstruction = (id) => async (dispatch) => {\n\n    const callback = async () => {\n        await api.deleteWorkInstruction(id);\n\n        return {\n            id,\n        };\n    }\n    //\n    const actionName = DELETE + WORK_INSTRUCTION;\n    const payload = await api_action(actionName, callback, dispatch, id);\n    return payload;\n\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// update\n// ******************************\nexport const putCard = (workInstruction, id) => async dispatch => {\n\n    const callback = async () => {\n        const response = await api.putWorkInstruction(workInstruction, id);\n\n        return {\n            workInstruction: response,\n        };\n    }\n\n    const actionName = PUT + WORK_INSTRUCTION;\n    const payload = await api_action(actionName, callback, dispatch, { workInstruction, id});\n    return workInstruction;\n};\n\n\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n","import React, {useState, useEffect, useRef} from 'react';\nimport { createPortal } from \"react-dom\";\nimport DropDownSearch, {DefaultReactDropdownSelect} from \"../components/basic/drop_down_search_v2/drop_down_search\";\n\nconst Portal = (props) => {\n\n\tconst {\n\t\tchildren,\n\t\tmountElement\n\t} = props\n\n\tconst mount = document.getElementById(mountElement);\n\tconst el = document.createElement(\"div\");\n\n\tuseEffect(() => {\n\t\tmount && mount.appendChild(el);\n\n\t\treturn () => mount && mount.removeChild(el);\n\t}, [el, mount]);\n\n\treturn createPortal(children, el)\n};\n\n\nPortal.defaultProps = {\n\tmountElement: \"root\",\n};\nexport default Portal;","import { deepCopy } from './utils'\nimport { isObject } from \"./object_utils\";\nimport store from \"../../redux/store\";\nimport { getLoadStationId, getUnloadStationId } from \"./route_utils\";\nimport { useSelector } from \"react-redux\";\nimport { isArray, isNonEmptyArray } from \"./array_utils\";\n\n/**\n * This function checks to see if a process is broken. \n * A process is broken because it has dissjointed routes, theres a gap between an unload station and a load station between 2 consecutive routes\n * \n * \n * @param {object} processRoutes Process to check and see if it is broken\n * @param {object} routes All routes\n */\nexport const isBrokenProcess = (routes) => {\n\n    // can't be broken if there is only 1 route\n    if (routes.length > 1) {\n        // Loops through and\n        for (let i = 0; i < routes.length - 1; i++) {\n            const currentRoute = routes[i]\n            const nextRoute = routes[i + 1]\n\n            const unloadStationId = getUnloadStationId(currentRoute)\n            const loadStationId = getLoadStationId(nextRoute)\n\n\n            if (unloadStationId !== loadStationId) {\n                // Have to return the current route index plus 1 because if the route that is before the broken route is the first route in s process, then the index is 0, which is considered falsy\n                return i + 1\n            }\n        }\n    }\n\n    return 0\n\n}\n\n/**\n * This function returns true if the route you are deleting will break the Process\n * \n * Currently the way it tells if it will break the process is to tell if its not the first or last route in a process\n * If it is the first or last route, then the process does not break\n * \n * RETURNS FALSE IF DELETE DOES NOT BREAK PROCESS\n * It returns an int of where the break will be (int's are truthy)\n * \n * @param {array} processRoutes Selected Process\n * @param {object} routeId Selected Route\n */\nexport const willRouteDeleteBreakProcess = (routes, routeId) => {\n\n    // if not first or last route\n    if (routeId !== routes[routes.length - 1]._id && routeId !== routes[0]._id) {\n\n        const copyProcessRoutes = deepCopy(routes)\n        const index = copyProcessRoutes.findIndex((currRoute) => currRoute._id === routeId)\n        copyProcessRoutes.splice(index, 1)\n\n        return isBrokenProcess(copyProcessRoutes)\n    }\n    else {\n        return false\n    }\n}\n\n/**\n * This checks to see if the route being added to the process will fix the broken process\n * \n * The way it tells is by getting the route before the break and checks to see if the new route's load location is the route before breaks unload location.\n * If thats the case than we see if the route after break's load station is the new routes unload location.\n * \n * If the new route's load and unload location fix the missing gap then it fixes that part of the broken process\n * \n * Perform a check to see if there's still another part of the process is broken after fix\n * If it's fix then the process is not broken anymore, if not, update the break point\n * \n * RETURNS FALSE IF THE PROCESS IS FIXED\n * It returns an int of where the new break is if it's still broken (int's are truthy)\n * \n * @param {object} processRoutes Selected Process\n * @param {int} brokenIndex index of broken route\n * @param {object} route New Route\n */\nexport const willRouteAdditionFixProcess = (routes, brokenIndex, route) => {\n    const copyRoutes = deepCopy(routes)\n    const routeBeforeBreak = routes[brokenIndex - 1]\n    const routeAfterBreak = routes[brokenIndex]\n\n    if (getUnloadStationId(routeBeforeBreak) === getLoadStationId(route) && getLoadStationId(routeAfterBreak) === getUnloadStationId(route)) {\n\n        copyRoutes.splice(brokenIndex, 0, route) // splice route into arr\n\n        if (!!isBrokenProcess(copyRoutes)) {\n            return isBrokenProcess(copyRoutes)\n        }\n        else {\n            return false\n        }\n    }\n\n    copyRoutes.splice(brokenIndex, 0, route)\n    if (!!isBrokenProcess(copyRoutes)) {\n        return isBrokenProcess(copyRoutes)\n    }\n    else {\n        return false\n    }\n}\n\n/**\n * This returns the list of ***UNIQUE*** station ids belonging to a process\n *\n * In order to get the list of station ids, this function first gets the list of route ids belonging to the process from the process's routes key\n *\n * For each route id, the corresponding route object is retrieved from the routes object\n *\n * From each route object, the unload and load objects are extracted\n * from the unload and load objects, the station id is extracted\n *\n * Each station id is added to an object to accumulate all stations belonging to the process\n * NOTE: an object is used for this purpose since it efficiently and automatically ensures that each entry will be unique (since object keys are unique).\n *      If an array is desired, simply call Object.keys() on the returned object where needed\n *\n * RETURNS an object containing the key of each station contained in the process with value set as true\n *\n * @param {object} process The process to get stations from\n * @param {object} routes Object containing all routes with each route's id as keys\n */\nexport const getProcessStations = (process, routes) => {\n    const { routes: routeIds = [] } = process || {}\n\n    // object that will contain {stationId: true} for each station in the process\n    // an object is used instead of an array because an object can only contain a key once\n    // if an array was used, the array would have to be checked each time a station is added to ensure duplicates aren't added\n    var stationIds = {}\n\n    // loop through each routeId, get the load / unload station of the route and add it to the stationIds obj\n    routeIds.forEach((currRouteId) => {\n\n        // get route from id\n        const currRoute = routes[currRouteId] || {} // default to empty obj\n\n        // get unload and load objects\n        const {\n            unload = {},\n            load = {}\n        } = currRoute\n\n        // get unload station id\n        const {\n            station: unloadStationId\n        } = unload\n\n        // get load station id\n        const {\n            station: loadStationId\n        } = load\n\n        // if unloadStationId and loadStationId exist, add to stationIds obj\n        if (loadStationId) stationIds[loadStationId] = true\n        if (unloadStationId) stationIds[unloadStationId] = true\n    })\n\n    // return stationIds obj\n    return stationIds\n}\n\n/**\n * This returns the list of ***UNIQUE*** station ids belonging to a process\n *\n * In order to get the list of station ids, this function first gets the list of route ids belonging to the process from the process's routes key\n *\n * For each route id, the corresponding route object is retrieved from the routes object\n *\n * From each route object, the unload and load objects are extracted\n * from the unload and load objects, the station id is extracted\n *\n * Each station id is added to an object to accumulate all stations belonging to the process\n * NOTE: an object is used for this purpose since it efficiently and automatically ensures that each entry will be unique (since object keys are unique).\n *      If an array is desired, simply call Object.keys() on the returned object where needed\n *\n * RETURNS an object containing the key of each station contained in the process with value set as true\n *\n * @param {object} process The process to get stations from\n * @param {object} routes Object containing all routes with each route's id as keys\n */\n export const getProcessStationsSorted = (process, routes) => {\n    const { routes: routeIds = [] } = process || {}\n\n    // object that will contain {stationId: true} for each station in the process\n    // an object is used instead of an array because an object can only contain a key once\n    // if an array was used, the array would have to be checked each time a station is added to ensure duplicates aren't added\n    var stationIds = []\n\n    // loop through each routeId, get the load / unload station of the route and add it to the stationIds obj\n    routeIds.forEach((currRouteId, index) => {\n\n        // get route from id\n        const currRoute = routes[currRouteId] || {} // default to empty obj\n\n        // get unload and load objects\n        const {\n            unload = {},\n            load = {}\n        } = currRoute\n\n        // get unload station id\n        const {\n            station: unloadStationId\n        } = unload\n\n        // get load station id\n        const {\n            station: loadStationId\n        } = load\n\n        // if unloadStationId and loadStationId exist, add to stationIds obj\n        if (loadStationId && index == 0) stationIds.push(loadStationId)\n        if (unloadStationId) stationIds.push(unloadStationId)\n    })\n\n    // return stationIds obj\n    return stationIds\n}\n\n\n\n/**\n * Gets all stations that belong to a process when editing that process\n * Editing a process has the actual object vs the id of the route inside it's routes array\n * @param {*} process \n * @returns \n */\nexport const getProcessStationsWhileEditing = (process) => {\n    let stationIds = []\n    const { routes } = process || []\n    routes.forEach((route) => {\n        const loadStation = route.load.station\n        const unloadStation = route.unload.station\n        if (!stationIds.includes(loadStation)) {\n            stationIds.push(loadStation)\n        }\n\n        if (!stationIds.includes(unloadStation)) {\n            stationIds.push(unloadStation)\n        }\n    })\n\n    return stationIds\n}\n\nexport const getProcessName = (processId) => {\n    const processes = store.getState().processesReducer.processes || {}\n    const process = processes[processId] || {}\n    const {\n        name = \"\"\n    } = process\n\n    return name\n}\n\nexport const getPreviousRoute = (processRoutes, currentRouteId) => {\n    const storeState = store.getState()\n    const routes = storeState.tasksReducer.tasks\n    var previousRoute\n\n    const currentRouteindex = processRoutes.findIndex((currItem) => {\n        if (isObject(currItem)) {\n            return currItem._id === currentRouteId\n        }\n        else {\n            return currItem === currentRouteId\n        }\n\n    })\n\n    if (currentRouteindex > 0) {\n        previousRoute = processRoutes[currentRouteindex - 1]\n    }\n    else {\n        previousRoute = processRoutes[processRoutes.length - 1]\n    }\n\n    if (!isObject(previousRoute)) {\n        return routes[previousRoute]\n    }\n    else {\n        return previousRoute\n    }\n\n}\n\nexport const callOnStations = (processId, callback) => {\n    const storeState = store.getState()\n    const routes = storeState.tasksReducer.tasks || {}\n    const process = storeState.processesReducer.processes[processId] || {}\n\n    let prevLoadStationId\t\t// tracks previous load station id when looping through routes\n    let prevUnloadStationId\t\t// tracks previous unload station id when looping through routes\n    let stationIds = []\n\n    // loop through routes, get load / unload station id and create entry in tempCardsSorted for each station\n    process.routes && process.routes.forEach((currRouteId, index) => {\n\n        // get current route and load / unload station ids\n        const currRoute = routes[currRouteId]\n        const loadStationId = getLoadStationId(currRoute)\n        const unloadStationId = getUnloadStationId(currRoute)\n\n        // only add loadStation entry if the previous unload wasn't identical (in order to avoid duplicates)\n        if (prevUnloadStationId !== loadStationId) {\n            callback(loadStationId)\n        }\n\n        // add entry in tempCardsSorted\n        callback(unloadStationId)\n\n        // update prevLoadStationId and prevUnloadStationId\n        prevLoadStationId = loadStationId\n        prevUnloadStationId = unloadStationId\n    })\n}\n\nexport const getStationIds = (processId) => {\n    let stationIds = []\n\n    const callback = (stationId) => {\n        stationIds.push(stationId)\n    }\n\n    callOnStations(processId, callback)\n\n    return stationIds\n}\n\nexport const getStationAttributes = (processId, attributes) => {\n    const storeState = store.getState()\n    const stations = storeState.stationsReducer.stations || {}\n\n    let stationAttributes = []\n\n    const isAttributesNotEmpty = isNonEmptyArray(attributes)\n\n    const callback = (stationId) => {\n        const station = stations[stationId]\n\n        let currentStationAttributes\n\n        if (isAttributesNotEmpty) {\n            currentStationAttributes = {}\n            attributes.forEach((currAttribute) => {\n                currentStationAttributes[currAttribute] = station[currAttribute]\n            })\n        }\n        else {\n            currentStationAttributes = { ...station }\n        }\n\n        stationAttributes.push(currentStationAttributes)\n    }\n\n    callOnStations(processId, callback)\n\n    return stationAttributes\n}\n\n// Gets the previous station that is a warehouse\n// If it is a warehouse, it returns that station,\n// If not, it returns false\nexport const getPreviousWarehouseStation = (processID, stationID) => {\n    const storeState = store.getState()\n    const routes = storeState.tasksReducer.tasks || {}\n    const process = storeState.processesReducer.processes[processID] || {}\n    const stations = storeState.stationsReducer.stations || {}\n\n\n    const processStations = Object.keys(getProcessStations(process, routes))\n    const currStationIndex = processStations.findIndex(el => el === stationID)\n    const warehouseID = processStations[currStationIndex - 1]\n    const warehouse = stations[warehouseID]\n\n    if (!!warehouse && warehouse?.type === 'warehouse') {\n        return warehouse\n    }\n    else {\n        return false\n    }\n}\n\n\n\n","import styled from \"styled-components\";\nimport {Container} from \"react-smooth-dnd\";\n\nexport const RowContainer = styled.div`\n\tdisplay: flex;\n  \n  \t//flex: 1;\n  \t//align-self: stretch;\n  //background: cyan;\n  align-items: center;\n  \n  \n  \n  //padding: .5rem;\n  \n  \n\t// margin-bottom: 1rem;\n`\n\nexport const ColumnContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n`\n\nexport const ExtraStyledContainer = styled.div`\n  && .smooth-dnd-container {\n    background: ${props => props.theme.bg.quinary} !important;\n    border-radius: 1rem;\n  }\n\n`","import {useEffect, useState} from \"react\"\n\nconst SubmitErrorHandler = ({ submitCount, isValid, onSubmitError }) => {\n    const [lastHandled, setLastHandled] = useState(0)\n    useEffect(() => {\n        if (submitCount > lastHandled && !isValid) {\n            onSubmitError()\n            setLastHandled(submitCount)\n        }\n    }, [submitCount, isValid, onSubmitError, lastHandled])\n\n    return null\n}\n\nexport default SubmitErrorHandler","import { useEffect, useRef, useState, useCallback } from 'react';\n\n\n// Edge has a bug where scrollHeight is 1px bigger than clientHeight when there's no scroll.\nconst isEdge = typeof navigator !== 'undefined' && /Edge\\/\\d./i.test(window.navigator.userAgent);\n\n\n// Small hook to use ResizeOberver if available. This fixes some issues when the component is resized.\n// This needs a polyfill to work on all browsers. The polyfill is not included in order to keep the package light.\nfunction useResizeObserver(ref, callback) {\n\tuseEffect(() => {\n\t\tif (typeof window !== 'undefined' && window.ResizeObserver) {\n\t\t\tconst resizeObserver = new ResizeObserver((entries) => {\n\t\t\t\tcallback(entries[0].contentRect);\n\t\t\t});\n\n\t\t\tif(ref.current) {\n\t\t\t\tresizeObserver.observe(ref.current);\n\t\t\t}\n\n\n\t\t\treturn () => {\n\t\t\t\tresizeObserver.disconnect();\n\t\t\t};\n\t\t}\n\t}, [ref]);\n};\n\n\nfunction throttle(func, wait) {\n\tlet context, args, result;\n\tlet timeout = null;\n\tlet previous = 0;\n\tconst later = function () {\n\t\ttimeout = null;\n\t\tresult = func.apply(context, args);\n\t\tif (!timeout) {\n\t\t\tcontext = args = null;\n\t\t}\n\t};\n\treturn function () {\n\t\tconst now = Date.now();\n\t\tconst remaining = wait - (now - previous);\n\t\tcontext = this;\n\t\targs = arguments;\n\t\tif (remaining <= 0 || remaining > wait) {\n\t\t\tif (timeout) {\n\t\t\t\tclearTimeout(timeout);\n\t\t\t\ttimeout = null;\n\t\t\t}\n\t\t\tprevious = now;\n\t\t\tresult = func.apply(context, args);\n\t\t\tif (!timeout) {\n\t\t\t\tcontext = args = null;\n\t\t\t}\n\t\t} else if (!timeout) {\n\t\t\ttimeout = setTimeout(later, remaining);\n\t\t}\n\t\treturn result;\n\t};\n}\n\nfunction useScrollInfo() {\n\tconst [scroll, setScroll] = useState({ x: {}, y: {} });\n\tconst ref = useRef(null);\n\tconst previousScroll = useRef(null);\n\n\tuseResizeObserver(ref, () => {\n\t\tupdate();\n\t});\n\n\tconst throttleTime = 50;\n\n\tfunction update() {\n\t\tconst element = ref.current;\n\t\tlet maxY = element.scrollHeight - element.clientHeight;\n\t\tconst maxX = element.scrollWidth - element.clientWidth;\n\n\t\t// Edge has a bug where scrollHeight is 1px bigger than clientHeight when there's no scroll.\n\t\tif (isEdge && maxY === 1 && element.scrollTop === 0) {\n\t\t\tmaxY = 0;\n\t\t}\n\n\t\tconst percentageY = maxY !== 0 ? element.scrollTop / maxY : null;\n\t\tconst percentageX = maxX !== 0 ? element.scrollLeft / maxX : null;\n\n\t\tlet classNameY = 'no-scroll-y';\n\t\tif (percentageY === 0) {\n\t\t\tclassNameY = 'scroll-top';\n\t\t} else if (percentageY === 1) {\n\t\t\tclassNameY = 'scroll-bottom';\n\t\t} else if (percentageY) {\n\t\t\tclassNameY = 'scroll-middle-y';\n\t\t}\n\n\t\tlet classNameX = 'no-scroll-x';\n\t\tif (percentageX === 0) {\n\t\t\tclassNameX = 'scroll-left';\n\t\t} else if (percentageX === 1) {\n\t\t\tclassNameX = 'scroll-right';\n\t\t} else if (percentageX) {\n\t\t\tclassNameX = 'scroll-middle-x';\n\t\t}\n\n\t\tconst previous = previousScroll.current;\n\n\t\tconst scrollInfo = {\n\t\t\tx: {\n\t\t\t\tpercentage: percentageX,\n\t\t\t\tvalue: element.scrollLeft,\n\t\t\t\ttotal: maxX,\n\t\t\t\tclassName: classNameX,\n\t\t\t\tdirection: previous ? Math.sign(element.scrollLeft - previous.x.value) : 0,\n\t\t\t},\n\t\t\ty: {\n\t\t\t\tpercentage: percentageY,\n\t\t\t\tvalue: element.scrollTop,\n\t\t\t\ttotal: maxY,\n\t\t\t\tclassName: classNameY,\n\t\t\t\tdirection: previous ? Math.sign(element.scrollTop - previous.y.value) : 0,\n\t\t\t}\n\t\t};\n\t\tpreviousScroll.current = scrollInfo;\n\t\tsetScroll(scrollInfo);\n\t}\n\n\tconst throttledUpdate = throttle(update, throttleTime);\n\n\tconst setRef = useCallback(node => {\n\t\tif (node) {\n\t\t\t// When the ref is first set (after mounting)\n\t\t\tnode.addEventListener('scroll', throttledUpdate);\n\t\t\tif (!window.ResizeObserver) {\n\t\t\t\twindow.addEventListener('resize', throttledUpdate);  // Fallback if ResizeObserver is not available\n\t\t\t}\n\t\t\tref.current = node;\n\t\t\tthrottledUpdate();  // initialization\n\t\t} else if (ref.current) {\n\t\t\t// When unmounting\n\t\t\tref.current.removeEventListener('scroll', throttledUpdate);\n\t\t\tif (!window.ResizeObserver) {\n\t\t\t\twindow.removeEventListener('resize', throttledUpdate);\n\t\t\t}\n\t\t}\n\t}, []);\n\n\n\treturn [scroll, setRef, ref];\n}\n\n\nexport default useScrollInfo;","// schedules types\n\n// get multiple\n// ***************\nexport const GET_SCHEDULES = 'GET_SCHEDULES'\nexport const GET_SCHEDULES_STARTED = 'GET_SCHEDULES_STARTED'\nexport const GET_SCHEDULES_SUCCESS = 'GET_SCHEDULES_SUCCESS'\nexport const GET_SCHEDULES_FAILURE = 'GET_SCHEDULES_FAILURE'\n// ~~~~~~~~~~~~~~~\n\n// get single\n// ***************\nexport const GET_SCHEDULE = 'GET_SCHEDULE'\nexport const GET_SCHEDULE_STARTED = 'GET_SCHEDULE_STARTED'\nexport const GET_SCHEDULE_SUCCESS = 'GET_SCHEDULE_SUCCESS'\nexport const GET_SCHEDULE_FAILURE = 'GET_SCHEDULE_FAILURE'\n// ~~~~~~~~~~~~~~~\n\n// post\n// ***************\nexport const POST_SCHEDULE = 'POST_SCHEDULE'\nexport const POST_SCHEDULE_STARTED = 'POST_SCHEDULE_STARTED'\nexport const POST_SCHEDULE_SUCCESS = 'POST_SCHEDULE_SUCCESS'\nexport const POST_SCHEDULE_FAILURE = 'POST_SCHEDULE_FAILURE'\n// ~~~~~~~~~~~~~~~\n\n// delete\n// ***************\nexport const DELETE_SCHEDULE = 'DELETE_SCHEDULE'\nexport const DELETE_SCHEDULE_STARTED = 'DELETE_SCHEDULE_STARTED'\nexport const DELETE_SCHEDULE_SUCCESS = 'DELETE_SCHEDULE_SUCCESS'\nexport const DELETE_SCHEDULE_FAILURE = 'DELETE_SCHEDULE_FAILURE'\n// ~~~~~~~~~~~~~~~\n\n// PUT\n// ***************\nexport const PUT_SCHEDULE = 'PUT_SCHEDULE'\nexport const PUT_SCHEDULE_STARTED = 'PUT_SCHEDULE_STARTED'\nexport const PUT_SCHEDULE_SUCCESS = 'PUT_SCHEDULE_SUCCESS'\nexport const PUT_SCHEDULE_FAILURE = 'PUT_SCHEDULE_FAILURE'\n// ~~~~~~~~~~~~~~~\n\n// ADD\n// ***************\nexport const ADD_SCHEDULES = 'ADD_SCHEDULES'\nexport const ADD_SCHEDULES_STARTED = 'ADD_SCHEDULES_STARTED'\nexport const ADD_SCHEDULES_SUCCESS = 'ADD_SCHEDULES_SUCCESS'\nexport const ADD_SCHEDULES_FAILURE = 'ADD_SCHEDULES_FAILURE'\n// ~~~~~~~~~~~~~~~\n\n// UPDATE\n// ***************\nexport const UPDATE_SCHEDULE = 'UPDATE_SCHEDULE'\nexport const UPDATE_SCHEDULE_STARTED = 'UPDATE_SCHEDULE_STARTED'\nexport const UPDATE_SCHEDULE_SUCCESS = 'UPDATE_SCHEDULE_SUCCESS'\nexport const UPDATE_SCHEDULE_FAILURE = 'UPDATE_SCHEDULE_FAILURE'\n// ~~~~~~~~~~~~~~~\n\n// add unsaved schedules\n// ***************\nexport const ADD_SCHEDULES_UNSAVED = 'ADD_SCHEDULES_UNSAVED';\n// ~~~~~~~~~~~~~~~\n\nexport const DELETE_SCHEDULES = 'DELETE_SCHEDULES'\n","import {\n  GET_SCHEDULES_STARTED,\n  GET_SCHEDULES_SUCCESS,\n  GET_SCHEDULES_FAILURE,\n\n  POST_SCHEDULE_STARTED,\n  POST_SCHEDULE_SUCCESS,\n  POST_SCHEDULE_FAILURE,\n\n  DELETE_SCHEDULES,\n\n  ADD_SCHEDULES,\n  DELETE_SCHEDULE_STARTED,\n  DELETE_SCHEDULE_SUCCESS,\n  DELETE_SCHEDULE_FAILURE,\n\n  PUT_SCHEDULE_STARTED,\n  PUT_SCHEDULE_SUCCESS,\n  PUT_SCHEDULE_FAILURE,\n\n  UPDATE_SCHEDULE,\n} from '../types/schedule_types';\n\nimport { clone_object } from '../../methods/utils/utils';\n\nconst defaultState = {\n  schedules: {},\n  error: {},\n  pending: false\n};\n\nexport default function schedulesReducer(state = defaultState, action) {\n  var schedules = {}\n\n  switch (action.type) {\n\n    // get\n    // ***************\n    case GET_SCHEDULES_SUCCESS:\n      return  Object.assign({}, state, {\n        schedules: {...state.schedules, ...action.payload.schedulesObj},\n        pending: false\n      });\n\n    case GET_SCHEDULES_FAILURE:\n      return  Object.assign({}, state, {\n        error: action.payload,\n        pending: false\n      });\n\n    case GET_SCHEDULES_STARTED:\n      return  Object.assign({}, state, {\n        pending: true\n      });\n    // ~~~~~~~~~~~~~~~\n\n    // create\n    // ***************\n    case POST_SCHEDULE_SUCCESS:\n      schedules = clone_object(state.schedules);\n      console.log('CREATE_SCHEDULE_SUCCESS schedules before delete ', schedules)\n      console.log('CREATE_SCHEDULE_SUCCESS action.payload ', action.payload)\n      delete schedules[action.payload.oldScheduleId];\n      console.log('CREATE_SCHEDULE_SUCCESS schedules after delete', schedules)\n      //schedules[action.payload.createdSchedule._id.$oid] = action.payload.createdSchedule;\n      console.log('CREATE_SCHEDULE_SUCCESS schedules after add', schedules)\n\n      return  Object.assign({}, state, {\n        schedules: {...schedules, ...action.payload.createdSchedules},\n        pending: false\n      });\n\n\n    case POST_SCHEDULE_FAILURE:\n      return  Object.assign({}, state, {\n        error: action.payload,\n        pending: false\n      });\n\n    case POST_SCHEDULE_STARTED:\n      return  Object.assign({}, state, {\n        pending: true\n      });\n    // ~~~~~~~~~~~~~~~\n\n    // delete\n    // ***************\n    case DELETE_SCHEDULE_SUCCESS:\n      schedules = clone_object(state.schedules);\n      delete schedules[action.payload.scheduleId];\n\n      return  Object.assign({}, state, {\n        schedules: {...schedules},\n        pending: false\n      });\n\n\n    case DELETE_SCHEDULE_FAILURE:\n      return  Object.assign({}, state, {\n        error: action.payload,\n        pending: false\n      });\n\n    case DELETE_SCHEDULE_STARTED:\n      return  Object.assign({}, state, {\n        pending: true\n      });\n    // ~~~~~~~~~~~~~~~\n\n    // update\n    // ***************\n    case PUT_SCHEDULE_SUCCESS:\n      //schedules = clone_object(state.schedules);\n      //schedules[action.payload.scheduleId] = action.payload.schedules;\n\n      return  Object.assign({}, state, {\n        schedules: {...state.schedules, ...action.payload.schedules},\n        pending: false\n      });\n\n\n    case PUT_SCHEDULE_FAILURE:\n      return  Object.assign({}, state, {\n        error: action.payload,\n        pending: false\n      });\n\n    case PUT_SCHEDULE_STARTED:\n      return  Object.assign({}, state, {\n        pending: true\n      });\n    // ~~~~~~~~~~~~~~~\n\n    case ADD_SCHEDULES:\n      return  Object.assign({}, state, {\n        schedules: {...state.schedules, ...action.schedules}\n      });\n\n    case DELETE_SCHEDULES:\n        schedules = clone_object(state.schedules)\n        action.scheduleIds.forEach((scheduleId, index, scheduleIds)=> {\n          delete schedules[scheduleId];\n        })\n\n        return  Object.assign({}, state, {\n\n          schedules: {...schedules}\n        });\n\n    case UPDATE_SCHEDULE:\n        schedules = clone_object(state.schedules);\n        delete schedules[action.scheduleId];\n        schedules[action.schedule.id] = action.schedule\n\n        return  Object.assign({}, state, {\n          schedules: {...schedules}\n        });\n\n    default:\n      return state\n  }\n}\n","import {\n    GET_SKILLS,\n    GET_SKILLS_STARTED,\n    GET_SKILLS_SUCCESS,\n    GET_SKILLS_FAILURE,\n\n    POST_SKILLS,\n    POST_SKILLS_STARTED,\n    POST_SKILLS_SUCCESS,\n    POST_SKILLS_FAILURE,\n\n    PUT_SKILLS,\n    PUT_SKILLS_STARTED,\n    PUT_SKILLS_SUCCESS,\n    PUT_SKILLS_FAILURE,\n\n    DELETE_SKILLS,\n    DELETE_SKILLS_STARTED,\n    DELETE_SKILLS_SUCCESS,\n    DELETE_SKILLS_FAILURE\n} from '../types/skills_types'\n\nimport { deepCopy } from '../../methods/utils/utils.js'\n\n\nconst defaultState = {\n  skills: [],\n  error: {},\n  pending: false,\n  currentSkill : {},\n  skillUpdated : false,\n  allFieldsFilled: false,\n};\n\nlet index;\n\nexport default function skillsReducer(state = defaultState, action) {\n    let skillsClone = {}\n\n    switch (action.type) {\n\n        case 'SKILL_SELECTED':\n            return {\n                ...state,\n                currentSkill: action.payload\n            }\n\n        case 'ALL_FIELDS_FILLED':\n            return{\n                ...state,\n                allFieldsFilled: action.payload\n            }\n\n        case 'SKILL_UPDATED':\n            return{\n                ...state,\n                skillUpdated: action.payload\n            }\n\n        case GET_SKILLS:\n            break;\n\n        case GET_SKILLS_STARTED:\n            return  Object.assign({}, state, {\n                pending: true\n            });\n\n        case GET_SKILLS_SUCCESS:\n            return  Object.assign({}, state, {\n                skills: [...action.payload],\n                pending: false\n            });\n\n        case GET_SKILLS_FAILURE:\n            return  Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case POST_SKILLS:\n            break;\n\n        case POST_SKILLS_STARTED:\n            return  Object.assign({}, state, {\n                pending: true\n            });\n\n        case POST_SKILLS_SUCCESS:\n            skillsClone = deepCopy(state.skills);\n            return  Object.assign({}, state, {\n                skills: [...skillsClone, action.payload],\n                pending: false\n            });\n\n        case POST_SKILLS_FAILURE:\n            return  Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case PUT_SKILLS:\n            break;\n\n        case PUT_SKILLS_STARTED:\n            return  Object.assign({}, state, {\n                pending: true\n            });\n\n        case PUT_SKILLS_SUCCESS:\n            skillsClone = deepCopy(state.skills);\n            index = skillsClone.findIndex(s => {\n                return s._id.$oid === action.payload._id.$oid;\n            });\n            skillsClone.splice(index, 1, action.payload);\n            return  Object.assign({}, state, {\n                skills: skillsClone,\n                pending: false\n            });\n\n        case PUT_SKILLS_FAILURE:\n            return  Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case DELETE_SKILLS:\n            break;\n\n        case DELETE_SKILLS_STARTED:\n            return  Object.assign({}, state, {\n                pending: true\n            });\n\n        case DELETE_SKILLS_SUCCESS:\n            skillsClone = deepCopy(state.skills);\n            index = skillsClone.findIndex(s => {\n                return s._id.$oid === action.payload.skillId;\n            })\n            skillsClone.splice(index, 1);\n            return  Object.assign({}, state, {\n                skills: skillsClone,\n                pending: false\n            });\n\n        case DELETE_SKILLS_FAILURE:\n            return  Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        default:\n            return state;\n\n    }\n}\n","export const GET_SKILLS = 'GET_SKILLS'\nexport const GET_SKILLS_STARTED = 'GET_SKILLS_STARTED'\nexport const GET_SKILLS_SUCCESS = 'GET_SKILLS_SUCCESS'\nexport const GET_SKILLS_FAILURE = 'GET_SKILLS_FAILURE'\n\nexport const POST_SKILLS = 'POST_SKILLS'\nexport const POST_SKILLS_STARTED = 'POST_SKILLS_STARTED'\nexport const POST_SKILLS_SUCCESS = 'POST_SKILLS_SUCCESS'\nexport const POST_SKILLS_FAILURE = 'POST_SKILLS_FAILURE'\n\nexport const PUT_SKILLS = 'PUT_SKILLS'\nexport const PUT_SKILLS_STARTED = 'PUT_SKILLS_STARTED'\nexport const PUT_SKILLS_SUCCESS = 'PUT_SKILLS_SUCCESS'\nexport const PUT_SKILLS_FAILURE = 'PUT_SKILLS_FAILURE'\n\nexport const DELETE_SKILLS = 'DELETE_SKILLS'\nexport const DELETE_SKILLS_STARTED = 'DELETE_SKILLS_STARTED'\nexport const DELETE_SKILLS_SUCCESS = 'DELETE_SKILLS_SUCCESS'\nexport const DELETE_SKILLS_FAILURE = 'DELETE_SKILLS_FAILURE'\n","import {\n    GET_STATIONS_STARTED,\n    GET_STATIONS_SUCCESS,\n    GET_STATIONS_FAILURE,\n\n    POST_STATION_STARTED,\n    POST_STATION_SUCCESS,\n    POST_STATION_FAILURE,\n\n    PUT_STATION_STARTED,\n    PUT_STATION_SUCCESS,\n    PUT_STATION_FAILURE,\n\n    DELETE_STATION_STARTED,\n    DELETE_STATION_SUCCESS,\n    DELETE_STATION_FAILURE,\n\n    ADD_STATION,\n    SET_SELECTED_STATION,\n    UPDATE_STATION,\n    SET_STATION_ATTRIBUTES,\n    UPDATE_STATIONS,\n    REMOVE_STATION,\n    EDITING_STATION\n\n} from '../types/stations_types'\n\n// Import Utils\nimport { deepCopy } from '../../methods/utils/utils';\nimport { compareExistingVsIncomingLocations } from '../../methods/utils/locations_utils'\nimport {isEmpty} from \"../../methods/utils/object_utils\";\n\nconst defaultState = {\n    stations: {},\n\n    selectedStation: null,\n\n    editingStation: false,\n\n    d3: {},\n\n    error: {},\n    pending: false,\n}\n\nexport default function stationsReducer(state = defaultState, action) {\n    let stationsCopy\n    /**\n     * Updates the state of stations to include the incoming payload station.\n     * If the payload is the current selected Station, then update that as well\n     * @param {object} station\n     */\n    const onUpdateStation = (station) => {\n        return {\n            ...state,\n            stations: {\n                ...state.stations,\n                [station._id]: station\n            },\n            // If the post station is the selectedStation, then update selected station\n            selectedStation: (state.selectedStation !== null && state.selectedStation._id === station._id) && station,\n            pending: false,\n        }\n    }\n\n    switch (action.type) {\n\n        // ======================================== //\n        //                                          //\n        //                UTILS                     //\n        //                                          //\n        // ======================================== //\n\n        // Adds station to front-end without adding it to the backend\n        case ADD_STATION:\n            return onUpdateStation(action.payload)\n\n        // Sets Stations Attributes\n        case SET_STATION_ATTRIBUTES:\n            // If there is a selected station and the payload is that station, then edit the selected station and dont edit the station in state\n            if (!!state.selectedStation && action.payload.id === state.selectedStation._id) {\n                return {\n                    ...state,\n                    selectedStation: {\n                        ...state.selectedStation,\n                        ...action.payload.attr\n                    }\n                }\n            }\n\n            else {\n                let updatedStation = state.stations[action.payload.id]\n                Object.assign(updatedStation, action.payload.attr)\n                return onUpdateStation(updatedStation)\n            }\n\n        // Sets a selected Station\n        case SET_SELECTED_STATION:\n            return {\n                ...state,\n                selectedStation: action.payload\n            }\n\n        // Updates a station locally on the front-end\n        case UPDATE_STATION:\n            return onUpdateStation(action.payload)\n\n        // Upates stations locally on the front-end\n        case UPDATE_STATIONS:\n            return {\n                ...state,\n                stations: action.payload.stations,\n                selectedStation: !!action.payload.selectedStation ? action.payload.selectedStation : state.selectedStation,\n                d3: !!action.payload.d3 ? action.payload.d3 : state.d3\n            }\n\n        case EDITING_STATION:\n            return {\n                ...state,\n                editingStation: action.payload\n            }\n\n        case REMOVE_STATION:\n            stationsCopy = deepCopy(state.stations)\n            delete stationsCopy[action.payload]\n            return {\n                ...state,\n                stations: stationsCopy\n            }\n\n        // ========== GET ========== //\n        case GET_STATIONS_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        case GET_STATIONS_SUCCESS:\n            if(isEmpty(state.d3)) {\n                return {\n                    ...state,\n                    stations: {...action.payload},\n                    pending: false\n                }\n            }\n\n            else {\n                const parsedStations = compareExistingVsIncomingLocations(deepCopy(action.payload), deepCopy(state.stations), state.d3)\n\n                return {\n                    ...state,\n                    stations: parsedStations,\n                    pending: false\n                }\n            }\n\n\n        case GET_STATIONS_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        // ========== POST ========== //\n        case POST_STATION_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        case POST_STATION_SUCCESS:\n            return onUpdateStation(action.payload)\n\n        case POST_STATION_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        // ========== PUT ========== //\n        case PUT_STATION_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        case PUT_STATION_SUCCESS:\n            return onUpdateStation(action.payload)\n\n        case PUT_STATION_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        // ========== DELETE ========== //\n        case DELETE_STATION_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        case DELETE_STATION_SUCCESS:\n            stationsCopy = deepCopy(state.stations)\n            delete stationsCopy[action.payload]\n            return {\n                ...state,\n                stations: stationsCopy,\n                selectedStation: null,\n                pending: false,\n                hello: true,\n            }\n\n        case DELETE_STATION_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        default:\n            return state\n    }\n\n}\n","import {\n    GET,\n    POST,\n    DELETE,\n    PUT\n} from '../types/prefixes';\n\nimport {\n    SUCCESS,\n} from '../types/suffixes'\n\nimport {\n    WORK_INSTRUCTION,\n    WORK_INSTRUCTIONS\n} from '../types/data_types'\n\nconst defaultState = {\n    workInstructions: {},\n    pending: false\n};\n\nexport default function workInstructionsReducer(state = defaultState, action) {\n\n    switch (action.type) {\n        case GET + WORK_INSTRUCTION + SUCCESS:\n            return {\n                ...state,\n                workInstructions: {...state.workInstructions, [action.payload.workInstruction._id]: action.payload.workInstruction},\n                pending: false,\n            }\n\n        case GET + WORK_INSTRUCTIONS + SUCCESS:\n            return {\n                ...state,\n                workInstructions: {...state.workInstructions, ...action.payload.workInstructions},\n                pending: false,\n            }\n\n        case PUT + WORK_INSTRUCTION + SUCCESS:\n            return {\n                ...state,\n                workInstructions: {...state.workInstructions, [action.payload.workInstruction._id]: action.payload.workInstruction},\n                pending: false,\n            }\n\n        case POST + WORK_INSTRUCTION + SUCCESS:\n            return {\n                ...state,\n                workInstructions: {...state.workInstructions, [action.payload.workInstruction._id]: action.payload.workInstruction},\n                pending: false,\n            }\n\n        case DELETE + WORK_INSTRUCTION + SUCCESS:\n            const { [action.payload.id]: value, ...rest } = state.workInstructions; // extracts payload from rest\n\n            return {\n                ...state,\n                workInstructions: {...rest},\n                pending: false,\n            }\n\n        default:\n            return state\n    }\n}\n","import {\n    GET_POSITIONS_STARTED,\n    GET_POSITIONS_SUCCESS,\n    GET_POSITIONS_FAILURE,\n\n    POST_POSITION_STARTED,\n    POST_POSITION_SUCCESS,\n    POST_POSITION_FAILURE,\n\n    PUT_POSITION_STARTED,\n    PUT_POSITION_SUCCESS,\n    PUT_POSITION_FAILURE,\n\n    DELETE_POSITION_STARTED,\n    DELETE_POSITION_SUCCESS,\n    DELETE_POSITION_FAILURE,\n\n    ADD_POSITION,\n    SET_SELECTED_POSITION,\n    UPDATE_POSITION,\n    SET_POSITION_ATTRIBUTES,\n    UPDATE_POSITIONS,\n    REMOVE_POSITION,\n    EDITING_POSITION,\n    SET_SELECTED_STATION_CHILDREN_COPY\n\n} from '../types/positions_types'\n\n// Import Utils\nimport { deepCopy } from '../../methods/utils/utils';\nimport { compareExistingVsIncomingLocations } from '../../methods/utils/locations_utils'\n\nconst defaultState = {\n    positions: {},\n\n    selectedPosition: null,\n\n    editingPosition: false,\n    selectedStationChildrenCopy: null,\n\n    d3: {},\n\n    error: {},\n    pending: false,\n}\n\nconst positionsReducer = (state = defaultState, action) => {\n    let positionsCopy\n\n    /**\n     * Updates the state of positions to include the incoming payload position.\n     * If the payload is the current selected Position, then update that as well\n     * @param {object} position \n     */\n    const onUpdatePosition = (position) => {\n        return {\n            ...state,\n            positions: {\n                ...state.positions,\n                [position._id]: position\n            },\n            // If the post position is the selectedPosition, then update selected position\n            selectedPosition: state.selectedPosition !== null && state.selectedPosition._id === position._id && position,\n            pending: false,\n        }\n    }\n\n    switch (action.type) {\n\n        // ========== UTILS ========== //\n\n        // Adds position to front-end without adding it to the backend\n        case ADD_POSITION:\n            return onUpdatePosition(action.payload)\n\n        // Sets Positions Attributes\n        case SET_POSITION_ATTRIBUTES:\n            // If editing a child position then update the position in the childrencopy\n            if (!!state.selectedStationChildrenCopy && action.payload.id in state.selectedStationChildrenCopy) {\n                return {\n                    ...state,\n                    selectedStationChildrenCopy: {\n                        ...state.selectedStationChildrenCopy,\n                        [action.payload.id]: {\n                            ...state.selectedStationChildrenCopy[action.payload.id],\n                            ...action.payload.attr,\n                        }\n                    },\n                }\n            }\n\n            // If there is a selected station and the payload is that station, then edit the selected station and dont edit the station in state\n            else if (!!state.selectedPosition && action.payload.id === state.selectedPosition._id) {\n                return {\n                    ...state,\n                    selectedPosition: {\n                        ...state.selectedPosition,\n                        ...action.payload.attr\n                    }\n                }\n            }\n\n            else {\n                let updatedPosition = state.positions[action.payload.id]\n                Object.assign(updatedPosition, action.payload.attr)\n                return onUpdatePosition(updatedPosition)\n            }\n\n        // Sets a selected Position\n        case SET_SELECTED_POSITION:\n            return {\n                ...state,\n                selectedPosition: action.payload\n            }\n\n        // Updates a position locally on the front-end\n        case UPDATE_POSITION:\n            return onUpdatePosition(action.payload)\n\n        // Upates positions locally on the front-end\n        case UPDATE_POSITIONS:\n            // TODO Comment\n            return {\n                ...state,\n                positions: action.payload.positions,\n                selectedPosition: !!action.payload.selectedPosition ? action.payload.selectedPosition : state.selectedPosition,\n                selectedStationChildrenCopy: !!action.payload.childrenPositions ? action.payload.childrenPositions : state.selectedStationChildrenCopy,\n                d3: !!action.payload.d3 ? action.payload.d3 : state.d3\n            }\n\n        case EDITING_POSITION:\n            return {\n                ...state,\n                editingPosition: action.payload\n            }\n\n        case SET_SELECTED_STATION_CHILDREN_COPY:\n            return {\n                ...state,\n                selectedStationChildrenCopy: action.payload\n            }\n\n        case REMOVE_POSITION:\n            positionsCopy = deepCopy(state.positions)\n            delete positionsCopy[action.payload]\n            // positionsCopy.delete(action.payload)\n            return {\n                ...state,\n                positions: positionsCopy\n            }\n\n        // ========== GET ========== //\n        case GET_POSITIONS_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        case GET_POSITIONS_SUCCESS:\n\n            const parsedPositions = compareExistingVsIncomingLocations(deepCopy(action.payload), deepCopy(state.positions), state.d3)\n\n            return {\n                ...state,\n                positions: parsedPositions,\n                pending: false\n            }\n\n        case GET_POSITIONS_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        // ========== POST ========== //\n        case POST_POSITION_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        case POST_POSITION_SUCCESS:\n            return onUpdatePosition(action.payload)\n\n        case POST_POSITION_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        // ========== PUT ========== //\n        case PUT_POSITION_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        case PUT_POSITION_SUCCESS:\n            if (action.payload.change_key === 'deleted') {\n                return state\n            }\n            return onUpdatePosition(action.payload)\n\n        case PUT_POSITION_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        // ========== DELETE ========== //\n        case DELETE_POSITION_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        case DELETE_POSITION_SUCCESS:\n            positionsCopy = deepCopy(state.positions)\n            delete positionsCopy[action.payload]\n            return {\n                ...state,\n                positions: positionsCopy,\n                selectedPosition: null,\n                pending: false,\n            }\n\n        case DELETE_POSITION_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        default:\n            return state\n    }\n\n}\n\nexport default positionsReducer","import {\n    GET_OBJECTS,\n    GET_OBJECTS_STARTED,\n    GET_OBJECTS_SUCCESS,\n    GET_OBJECTS_FAILURE,\n\n    POST_OBJECT,\n    POST_OBJECT_STARTED,\n    POST_OBJECT_SUCCESS,\n    POST_OBJECT_FAILURE,\n\n    PUT_OBJECT,\n    PUT_OBJECT_STARTED,\n    PUT_OBJECT_SUCCESS,\n    PUT_OBJECT_FAILURE,\n\n    DELETE_OBJECT,\n    DELETE_OBJECT_STARTED,\n    DELETE_OBJECT_SUCCESS,\n    DELETE_OBJECT_FAILURE,\n\n    ADD_OBJECT,\n    UPDATE_OBJECT,\n    UPDATE_OBJECTS,\n    REMOVE_OBJECT,\n    SET_OBJECT_ATTRIBUTES,\n    SELECT_OBJECT,\n    DESELECT_OBJECT,\n    SET_ROUTE_OBJECT,\n    SET_EDITING_OBJECT,\n    SET_SELECTED_OBJECT\n} from '../types/objects_types'\n\nimport { deepCopy } from '../../methods/utils/utils';\n\n\nconst defaultState = {\n    objects: {},\n    selectedObject: null,\n    editingObject: false,\n\n\n    error: {},\n    pending: false\n};\n\nexport default function objectsReducer(state = defaultState, action) {\n    let objectsCopy = {}\n\n    switch (action.type) {\n\n        // ======================================== //\n        //                                          //\n        //              Get Objects               //\n        //                                          //\n        // ======================================== //\n        case GET_OBJECTS:\n            break;\n\n        case GET_OBJECTS_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        case GET_OBJECTS_SUCCESS:\n            objectsCopy = deepCopy(action.payload)\n            return {\n                ...state,\n                objects: action.payload,\n                pending: false\n            }\n\n        case GET_OBJECTS_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        // ======================================== //\n        //                                          //\n        //             Post Objects               //\n        //                                          //\n        // ======================================== //\n\n        case POST_OBJECT:\n            break;\n\n        case POST_OBJECT_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        case POST_OBJECT_SUCCESS:\n            objectsCopy = deepCopy(state.objects)\n            objectsCopy[action.payload._id] = action.payload\n            return {\n                ...state,\n                objects: objectsCopy,\n                pending: false,\n\n            }\n\n        case POST_OBJECT_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        // ======================================== //\n        //                                          //\n        //             Put Objects                //\n        //                                          //\n        // ======================================== //\n\n        case PUT_OBJECT:\n            break;\n\n        case PUT_OBJECT_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        case PUT_OBJECT_SUCCESS:\n            objectsCopy = deepCopy(state.objects)\n            objectsCopy[action.payload._id] = action.payload\n\n            return {\n                ...state,\n                objects: objectsCopy\n            }\n\n        case PUT_OBJECT_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case DELETE_OBJECT:\n            break;\n\n        case DELETE_OBJECT_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        case DELETE_OBJECT_SUCCESS:\n            objectsCopy = deepCopy(state.objects)\n            delete objectsCopy[action.payload]\n\n            return {\n                ...state,\n                objects: objectsCopy\n            }\n\n        case DELETE_OBJECT_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n\n\n        // ======================================== //\n        //                                          //\n        //             Objects Utils              //\n        //                                          //\n        // ======================================== //\n\n        case ADD_OBJECT:\n            objectsCopy = deepCopy(state.objects)\n            objectsCopy[action.payload.object._id] = action.payload.object\n            return {\n                ...state,\n                objects: objectsCopy,\n                selectedObject: objectsCopy[action.payload.object._id],\n            }\n\n        case UPDATE_OBJECT:\n            objectsCopy = deepCopy(state.objects)\n            objectsCopy[action.payload.object._id] = action.payload.object\n\n            if (state.selectedObject !== null) {\n                return {\n                    ...state,\n                    objects: objectsCopy,\n                    selectedObject: objectsCopy[state.selectedObject._id]\n                }\n            } else {\n                return {\n                    ...state,\n                    objects: objectsCopy\n                }\n            }\n\n        case UPDATE_OBJECTS:\n            objectsCopy = deepCopy(action.payload.objects)\n\n            if (state.selectedObject !== null) {\n                return {\n                    ...state,\n                    objects: deepCopy(action.payload.objects),\n                    selectedObject: deepCopy(action.payload.objects[state.selectedObject._id])\n                }\n            } else {\n                return {\n                    ...state,\n                    objects: deepCopy(action.payload.objects)\n                }\n            }\n\n        case REMOVE_OBJECT:\n            objectsCopy = deepCopy(state.objects)\n            delete objectsCopy[action.payload.id]\n\n            return {\n                ...state,\n                objects: objectsCopy,\n            }\n\n\n        case SET_OBJECT_ATTRIBUTES:\n\n            objectsCopy = deepCopy(state.objects)\n            objectsCopy = {\n                ...objectsCopy,\n                [state.selectedObject._id]: {\n                    ...state.selectedObject,\n                    ...action.payload,\n                }\n            }\n\n            // Object.assign(objectsCopy[action.payload.id], action.payload.attr)\n            return {\n                ...state,\n                objects: objectsCopy,\n                selectedObject: deepCopy(objectsCopy[state.selectedObject._id])\n            }\n\n\n        case SELECT_OBJECT:\n            objectsCopy = deepCopy(state.objects)\n            return {\n                ...state,\n                selectedObject: objectsCopy[action.payload.id]\n            }\n\n        case DESELECT_OBJECT:\n            return {\n                ...state,\n                selectedObject: null,\n            }\n\n        case SET_SELECTED_OBJECT:\n            return {\n                ...state,\n                selectedObject: action.payload.object\n            }\n\n            case SET_ROUTE_OBJECT:\n                return {\n                    ...state,\n                    routeObject: action.payload.object\n                }\n\n            case SET_EDITING_OBJECT:\n                return {\n                    ...state,\n                    editingObject: action.payload.bool\n                }\n\n        default:\n            return state;\n    }\n}\n","import {\n  SET_CONDITIONS_API,\n  SET_SCHEDULES_API,\n  SET_STATUS_API,\n  SET_TASK_QUEUE_API,\n  SET_TASKS_API,\n} from '../types/api_types';\n\nimport {\n  SET\n} from \"../types/prefixes\"\n\nimport {\n  DATA_PAGE\n} from \"../types/data_types\"\n\nconst defaultState = {\n  conditionsApi: null,\n  schedulesApi: null,\n  dashboardsApi: null,\n  skillsApi: null,\n  dashboardButtonsApi: null,\n  statusApi: null,\n  taskQueueApi: null,\n  tasksApi: null,\n  page: null,\n};\n\nexport default function apiReducer(state = defaultState, action) {\n\n  switch (action.type) {\n\n    case SET + DATA_PAGE:\n      return {\n        ...state,\n        page: action.payload,\n      }\n\n    case SET_CONDITIONS_API:\n      return  Object.assign({}, state, {\n        conditionsApi: action.payload,\n      });\n\n    case SET_SCHEDULES_API:\n      return  Object.assign({}, state, {\n        schedulesApi: action.payload,\n      });\n\n    case SET_STATUS_API:\n      return  Object.assign({}, state, {\n        statusApi: action.payload,\n      });\n\n    case SET_TASK_QUEUE_API:\n      return  Object.assign({}, state, {\n        taskQueueApi: action.payload,\n      });\n\n    case SET_TASKS_API:\n      return  Object.assign({}, state, {\n        tasksApi: action.payload,\n      });\n\n    default:\n      return state\n  }\n\n}\n","import {\n    GET_DASHBOARDS,\n    GET_DASHBOARDS_STARTED,\n    GET_DASHBOARDS_SUCCESS,\n    GET_DASHBOARDS_FAILURE,\n\n    POST_DASHBOARD,\n    POST_DASHBOARD_STARTED,\n    POST_DASHBOARD_SUCCESS,\n    POST_DASHBOARD_FAILURE,\n\n    PUT_DASHBOARD,\n    PUT_DASHBOARD_STARTED,\n    PUT_DASHBOARD_SUCCESS,\n    PUT_DASHBOARD_FAILURE,\n\n    DELETE_DASHBOARD,\n    DELETE_DASHBOARD_STARTED,\n    DELETE_DASHBOARD_SUCCESS,\n    DELETE_DASHBOARD_FAILURE,\n\n    DASHBOARD_OPEN,\n} from '../types/dashboards_types'\n\nimport { deepCopy } from '../../methods/utils/utils';\nimport {SET} from \"../types/prefixes\";\nimport {DASHBOARD} from \"../types/data_types\";\nimport {FINISH_ENABLED, KICK_OFF_ENABLED} from \"../types/suffixes\";\n\n\nconst defaultState = {\n\n    dashboards: null,\n    kickOffEnabledDashboards: {}, // key = dashboard id - value = list of processes where the processes first station is the same as the dashboard's station\n    finishEnabledDashboards: {}, // key = dashboard id - value = list of processes where the processes first station is the same as the dashboard's station\n\n    error: {},\n    pending: false,\n\n    dashboardOpen: false,\n};\n\nexport default function dashboardsReducer(state = defaultState, action) {\n    let dashboardsCopy = {}\n\n    switch (action.type) {\n\n        case SET + DASHBOARD + KICK_OFF_ENABLED: {\n            const {\n                dashboardId,\n                kickOffEnabled\n            } = action.payload\n\n            return {\n                ...state,\n                kickOffEnabledDashboards: {...state.kickOffEnabledDashboards, [dashboardId]: kickOffEnabled},\n            }\n        }\n\n\n        case SET + DASHBOARD + FINISH_ENABLED: {\n            const {\n                dashboardId,\n                finishEnabled\n            } = action.payload\n\n            return {\n                ...state,\n                finishEnabledDashboards: {...state.finishEnabledDashboards, [dashboardId]: finishEnabled},\n            }\n        }\n\n\n\n        case DASHBOARD_OPEN:\n            return {\n                ...state,\n                dashboardOpen: action.payload\n            }\n\n        // ======================================== //\n        //                                          //\n        //              Get Dashboards              //\n        //                                          //\n        // ======================================== //\n        case GET_DASHBOARDS:\n            break;\n\n        case GET_DASHBOARDS_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        case GET_DASHBOARDS_SUCCESS:\n            dashboardsCopy = deepCopy(action.payload)\n            return {\n                ...state,\n                dashboards: action.payload,\n                pending: false\n            }\n\n        case GET_DASHBOARDS_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        // ======================================== //\n        //                                          //\n        //             Post Dashboards               //\n        //                                          //\n        // ======================================== //\n\n        case POST_DASHBOARD:\n            break;\n\n        case POST_DASHBOARD_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        case POST_DASHBOARD_SUCCESS:\n            return {\n                ...state,\n                dashboards: {...state.dashboards, [action.payload._id.$oid]: action.payload},\n                pending: false,\n\n            }\n\n        case POST_DASHBOARD_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        // ======================================== //\n        //                                          //\n        //             Put Dashboards                //\n        //                                          //\n        // ======================================== //\n\n        case PUT_DASHBOARD:\n            break;\n\n        case PUT_DASHBOARD_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        case PUT_DASHBOARD_SUCCESS:\n\n            return {\n                ...state,\n                dashboards: {...state.dashboards, [action.payload._id.$oid]: action.payload},\n            }\n\n        case PUT_DASHBOARD_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case DELETE_DASHBOARD:\n            break;\n\n        case DELETE_DASHBOARD_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        case DELETE_DASHBOARD_SUCCESS:\n            dashboardsCopy = deepCopy(state.dashboards)\n\n            delete dashboardsCopy[action.payload]\n\n            return {\n                ...state,\n                dashboards: dashboardsCopy\n            }\n\n        case DELETE_DASHBOARD_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n\n        default:\n            return state;\n    }\n}\n","export const CLEAR_ERROR = 'CLEAR_ERROR';\n","import {\n  CLEAR_ERROR\n} from '../types/error_types';\n\nconst defaultState = {};\n\nexport default function errorReducer(state = defaultState, action) {\n\n  const { type, payload } = action;\n  const matches = /(.*)_(STARTED|FAILURE)/.exec(type);\n\n  if(type === CLEAR_ERROR) {\n    console.log('clearing error')\n    //delete stateClone[]\n    return {\n      ...state,\n      // Store errorMessage\n      // e.g. stores errorMessage when receiving GET_TODOS_FAILURE\n      //      else clear errorMessage when receiving GET_TODOS_REQUEST\n      [payload]: '',\n    };\n  }\n\n  // not a *_REQUEST / *_FAILURE actions, so we ignore them\n  if (!matches) return state;\n\n  const [, requestName, requestState] = matches;\n  //console.log('errorReducer matches', matches)\n  //console.log('errorReducer requestName', requestName)\n  //console.log('errorReducer requestState', requestState)\n\n\n  return {\n    ...state,\n    // Store errorMessage\n    // e.g. stores errorMessage when receiving GET_TODOS_FAILURE\n    //      else clear errorMessage when receiving GET_TODOS_REQUEST\n    [requestName]: requestState === 'FAILURE' ? payload : '',\n  };\n};\n","import {\n    GET_STATUS_STARTED,\n    GET_STATUS_SUCCESS,\n    GET_STATUS_FAILURE,\n\n    POST_STATUS_STARTED,\n    POST_STATUS_SUCCESS,\n    POST_STATUS_FAILURE,\n} from '../types/status_types';\n\nconst defaultState = {\n    status: {},\n    pending: false,\n    hilTimer: String.fromCharCode(160),\n\n};\n\nexport default function statusReducer(state = defaultState, action) {\n\n    switch (action.type) {\n\n        // get\n        // ***************\n        case GET_STATUS_SUCCESS:\n            return Object.assign({}, state, {\n                status: action.payload,\n                pending: false\n            });\n\n        case GET_STATUS_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case GET_STATUS_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n        // ~~~~~~~~~~~~~~~\n\n        // post\n        // ***************\n        case POST_STATUS_SUCCESS:\n            return Object.assign({}, state, {\n                pending: false,\n                status: { ...state.status, ...action.payload },\n            });\n\n        case POST_STATUS_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case POST_STATUS_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n        // ~~~~~~~~~~~~~~~\n\n        default:\n            return state\n    }\n}\n","import {\n    TASK_QUEUE_ALL,\n    TASK_QUEUE_ITEM,\n    GET_TASK_QUEUE_STARTED,\n    GET_TASK_QUEUE_SUCCESS,\n    GET_TASK_QUEUE_FAILURE,\n\n    POST_TASK_QUEUE_STARTED,\n    POST_TASK_QUEUE_SUCCESS,\n    POST_TASK_QUEUE_FAILURE,\n\n    PUT_TASK_QUEUE_STARTED,\n    PUT_TASK_QUEUE_SUCCESS,\n    PUT_TASK_QUEUE_FAILURE,\n\n    TASK_QUEUE_OPEN,\n    INCREMENT_GET_DATA_FAILURE_COUNT,\n    SET_SHOW_MODAL_ID,\n} from '../types/task_queue_types';\n\nimport {\n    DELETE_,\n\n    _STARTED,\n    _SUCCESS,\n    _FAILURE,\n} from '../types/api_types';\n\nimport { clone_object, deepCopy } from '../../methods/utils/utils';\n\nconst defaultState = {\n    taskQueue: {},\n    pending: false,\n    error: '',\n    taskQueueItemClicked: '',\n    hilTimers: {},\n    hilResponse: '',\n    activeHilDashboards: {},\n    localHumanTask: null,\n    taskQueueOpen: false,\n    getFailureCount: 1,\n    showModalID: null\n};\n\nexport default function taskQueueReducer(state = defaultState, action) {\n    let taskQueue = {}\n    switch (action.type) {\n\n        /**\n         * HILs?\n         */\n        case 'TASK_QUEUE_ITEM_CLICKED':\n            return {\n                ...state,\n                taskQueueItemClicked: action.payload\n            }\n\n        case 'HIL_TIMERS':\n            return {\n                ...state,\n                hilTimers: action.payload,\n            }\n\n        // Used for immediate HIL response input\n        case 'HIL_RESPONSE':\n            return {\n                ...state,\n                hilResponse: action.payload,\n            }\n\n        // Used for when a human task is clicked, should only show dashboard on the clicked tablet\n        case 'LOCAL_HUMAN_TASK':\n            return {\n                ...state,\n                localHumanTask: action.payload,\n            }\n\n        // Used to set first in, first out dashboard HILs\n        // Not 100% tested, but in theory should work\n        case 'ACTIVE_HIL_DASHBOARDS':\n            return {\n                ...state,\n                activeHilDashboards: action.payload,\n            }\n\n\n        // get\n        // ***************\n        case GET_TASK_QUEUE_SUCCESS:\n\n          let taskQueue = {}\n\n          if (action.payload === undefined) {\n              taskQueue = {}\n          }\n          else taskQueue = Object.assign(taskQueue, action.payload)\n\n\n        Object.values(taskQueue).forEach((item)=> {\n          if(item.hil_response===false){\n            delete taskQueue[item._id]\n          }\n        })\n\n            return Object.assign({}, state, {\n                taskQueue: taskQueue,\n                pending: false\n            });\n\n        case GET_TASK_QUEUE_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case GET_TASK_QUEUE_STARTED:\n\n            return {\n                ...state,\n                pending: true,\n            }\n        // ~~~~~~~~~~~~~~~\n\n        // post\n        // ***************\n        case POST_TASK_QUEUE_SUCCESS:\n            return {\n                ...state,\n                taskQueue: {\n                    ...state.taskQueue,\n                    [action.payload.createdTaskQueueItem._id]: action.payload.createdTaskQueueItem\n                },\n                error: '',\n                pending: false,\n            }\n\n        case POST_TASK_QUEUE_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case POST_TASK_QUEUE_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n        // ~~~~~~~~~~~~~~~\n\n        // put\n        // ***************\n        case PUT_TASK_QUEUE_SUCCESS:\n\n            const updatedTaskQ = deepCopy({\n                ...action.payload.item,\n                _id: { $oid: action.payload.ID }\n\n            })\n            let forceUpdate = {}\n\n            forceUpdate = Object.assign(forceUpdate, updatedTaskQ)\n\n              return {\n                  ...state,\n                  taskQueue: {\n                      ...state.taskQueue,\n                      [action.payload.ID]: forceUpdate,\n                  },\n                  error: '',\n                  pending: false,\n              }\n\n        case PUT_TASK_QUEUE_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case PUT_TASK_QUEUE_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n        // ~~~~~~~~~~~~~~~\n\n        // delete\n        // ***************\n        case DELETE_ + TASK_QUEUE_ALL + _SUCCESS:\n            return Object.assign({}, state, {\n                taskQueue: {},\n                pending: false\n            });\n\n        case DELETE_ + TASK_QUEUE_ALL + _FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case DELETE_ + TASK_QUEUE_ALL + _STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n        // ~~~~~~~~~~~~~~~\n\n        // delete\n        // ***************\n        case DELETE_ + TASK_QUEUE_ITEM + _SUCCESS:\n            taskQueue = clone_object(state.taskQueue);\n            delete taskQueue[action.payload.id];\n\n            return Object.assign({}, state, {\n                taskQueue: { ...taskQueue },\n                pending: false\n            });\n\n        case DELETE_ + TASK_QUEUE_ITEM + _FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case DELETE_ + TASK_QUEUE_ITEM + _STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        case TASK_QUEUE_OPEN:\n            return {\n                ...state,\n                taskQueueOpen: action.payload,\n            }\n\n        case INCREMENT_GET_DATA_FAILURE_COUNT:\n            return {\n                ...state,\n                getFailureCount: state.getFailureCount + 1,\n            }\n\n        case SET_SHOW_MODAL_ID:\n            return {\n              ...state,\n              showModalID: action.payload,\n            }\n\n        // ~~~~~~~~~~~~~~~\n\n        default:\n            return state\n    }\n}\n","// keyboard types\n\n\n// ***************\nexport const ON_BLUR = 'ON_BLUR';\nexport const ON_FOCUS = 'ON_FOCUS';\n// ~~~~~~~~~~~~~~~\n","import {\n  ON_BLUR,\n  ON_FOCUS\n} from '../types/keyboard_types';\n\nconst defaultState = {\n\n  target: null,\n  focused: false,\n  showKeyboard: false\n};\n\nexport default function keyboardReducer(state = defaultState, action) {\n  switch (action.type) {\n\n    case ON_FOCUS:\n      return  Object.assign({}, state, {\n        target: action.target,\n        focused: true,\n        showKeyboard: true\n      });\n\n      case ON_BLUR:\n        return  Object.assign({}, state, {\n          target: null,\n          focused: false,\n          showKeyboard: false\n        });\n\n\n\n    default:\n      return state\n  }\n}\n","import {\n    GET_TASKS,\n    GET_TASKS_STARTED,\n    GET_TASKS_SUCCESS,\n    GET_TASKS_FAILURE,\n\n    POST_TASK,\n    POST_TASK_STARTED,\n    POST_TASK_SUCCESS,\n    POST_TASK_FAILURE,\n\n    PUT_TASK,\n    PUT_TASK_STARTED,\n    PUT_TASK_SUCCESS,\n    PUT_TASK_FAILURE,\n\n    DELETE_TASK,\n    DELETE_TASK_STARTED,\n    DELETE_TASK_SUCCESS,\n    DELETE_TASK_FAILURE,\n\n    ADD_TASK,\n    SET_TASKS,\n    UPDATE_TASK,\n    UPDATE_TASKS,\n    REMOVE_TASK,\n    SET_TASK_ATTRIBUTES,\n    SELECT_TASK,\n    SET_SELECTED_TASK,\n    DESELECT_TASK,\n    EDITING_TASK, REMOVE_TASKS,\n    SET_SELECTED_HOVERING_TASK,\n    SET_SHOW_ROUTE_CONFIRMATION,\n    SET_ROUTE_CONFIRMATION_LOCATION,\n    AUTO_ADD_ROUTE,\n\n} from '../types/tasks_types'\n\nimport { deepCopy } from '../../methods/utils/utils';\nimport { isObject } from \"../../methods/utils/object_utils\";\n\n\nconst defaultState = {\n    tasks: {},\n    selectedTask: null,\n    selectedHoveringTask: null,\n\n    error: {},\n    pending: false,\n    showRouteConfirmation: false,\n    routeConfirmationLocation: null,\n    autoAddRoute: false\n};\n\nexport default function tasksReducer(state = defaultState, action) {\n    let tasksCopy = {};\n\n    switch (action.type) {\n\n        // ======================================== //\n        //                                          //\n        //              Get Tasks               //\n        //                                          //\n        // ======================================== //\n        case GET_TASKS:\n            break;\n\n        case GET_TASKS_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        case GET_TASKS_SUCCESS:\n            tasksCopy = deepCopy(action.payload)\n            return {\n                ...state,\n                tasks: action.payload,\n                pending: false\n            }\n\n        case GET_TASKS_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        // ======================================== //\n        //                                          //\n        //             Post Tasks               //\n        //                                          //\n        // ======================================== //\n\n        case POST_TASK:\n            break;\n\n        case POST_TASK_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        case POST_TASK_SUCCESS:\n            const ID = deepCopy(action.payload._id)\n            return {\n                ...state,\n                tasks: {\n                    ...state.tasks,\n                    [ID]: action.payload,\n                },\n                pending: false,\n\n            }\n\n        case POST_TASK_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        // ======================================== //\n        //                                          //\n        //             Put Tasks                //\n        //                                          //\n        // ======================================== //\n\n        case PUT_TASK:\n            break;\n\n        case PUT_TASK_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        case PUT_TASK_SUCCESS:\n            return {\n                ...state,\n                tasks: {\n                    ...state.tasks,\n                    [action.payload._id]: action.payload,\n                }\n            }\n\n        case PUT_TASK_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case DELETE_TASK:\n            break;\n\n        case DELETE_TASK_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        case DELETE_TASK_SUCCESS:\n            tasksCopy = deepCopy(state.tasks)\n            delete tasksCopy[action.payload]\n\n            return {\n                ...state,\n                tasks: tasksCopy\n            }\n\n        case DELETE_TASK_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n\n\n        // ======================================== //\n        //                                          //\n        //             Tasks Utils              //\n        //                                          //\n        // ======================================== //\n\n        case ADD_TASK:\n            tasksCopy = deepCopy(state.tasks)\n            tasksCopy[action.payload.task._id] = action.payload.task\n            return {\n                ...state,\n                tasks: tasksCopy\n            }\n\n        case SET_TASKS:\n            return {\n                ...state,\n                tasks: {\n                    ...state.tasks,\n                    ...action.payload\n                }\n            }\n\n        case UPDATE_TASK:\n            tasksCopy = deepCopy(state.tasks)\n            tasksCopy[action.payload.task._id] = action.payload.task\n\n            if (state.selectedTask !== null) {\n                return {\n                    ...state,\n                    tasks: tasksCopy,\n                    selectedTask: tasksCopy[state.selectedTask._id]\n                }\n            } else {\n                return {\n                    ...state,\n                    tasks: tasksCopy\n                }\n            }\n\n        case UPDATE_TASKS:\n            tasksCopy = deepCopy(action.payload.tasks)\n\n            if (state.selectedTask !== null) {\n                return {\n                    ...state,\n                    tasks: deepCopy(action.payload.tasks),\n                    selectedTask: deepCopy(action.payload.tasks[state.selectedTask._id])\n                }\n            } else {\n                return {\n                    ...state,\n                    tasks: deepCopy(action.payload.tasks)\n                }\n            }\n\n        case REMOVE_TASK: {\n            const {\n                [action.payload.id]: taskToRemove,  // extract task to remove\n                ...remainingTasks                   // all other tasks are left here\n            } = state.tasks\n\n            return {\n                ...state,\n                tasks: { ...remainingTasks },         // keep all tasks but the one to remove\n            }\n        }\n\n        case REMOVE_TASKS: {\n\n\n            let temp = { ...state.tasks }\n\n            action.payload.ids.forEach((currId) => {\n                const {\n                    [currId]: removed,\n                    ...remainingTasks\n                } = temp\n\n                temp = remainingTasks\n            })\n\n            return {\n                ...state,\n                tasks: { ...temp },         // keep all tasks but the one to remove\n            }\n        }\n\n\n        case SET_TASK_ATTRIBUTES: {\n            var newState\n\n            if (isObject(state.selectedTask) && state.selectedTask._id === action.payload.id) {\n                newState = {\n                    ...state,\n                    tasks: state.tasks[action.payload.id] ?\n                        {\n                            ...state.tasks,\n                            [action.payload.id]: { ...state.tasks[action.payload.id], ...action.payload.attr },\n                        }\n                        :\n                        {\n                            ...state.tasks\n                        },\n                    selectedTask: {\n                        ...state.selectedTask,\n                        ...action.payload.attr\n                    }\n                }\n            } else {\n                newState = {\n                    ...state,\n                    tasks: state.tasks[action.payload.id] ? {\n                        ...state.tasks,\n                        [action.payload.id]: { ...state.tasks[action.payload.id], ...action.payload.attr },\n                    }\n                        :\n                        {\n                            ...state.tasks\n                        }\n                }\n            }\n\n            return newState\n\n        }\n\n\n        case SELECT_TASK:\n            return {\n                ...state,\n                selectedTask: state.tasks[action.payload.id]\n            }\n\n        case SET_SELECTED_TASK:\n            return {\n                ...state,\n                selectedTask: action.payload.task\n            }\n\n        case SET_SELECTED_HOVERING_TASK:\n            return {\n                ...state,\n                selectedHoveringTask: action.payload.task\n            }\n\n        case DESELECT_TASK:\n            return {\n                ...state,\n                selectedTask: null,\n            }\n\n        case EDITING_TASK:\n            return {\n                ...state,\n                editingTask: action.payload,\n            }\n\n        case SET_SHOW_ROUTE_CONFIRMATION:\n            return {\n                ...state,\n                showRouteConfirmation: action.payload,\n            }\n\n            case SET_ROUTE_CONFIRMATION_LOCATION:\n                return {\n                    ...state,\n                    routeConfirmationLocation: action.payload,\n                }\n\n            case AUTO_ADD_ROUTE:\n                return {\n                    ...state,\n                    autoAddRoute: action.payload,\n                }\n        default:\n            return state;\n    }\n}\n","let GET_SOUNDS = 'GET_SOUNDS';\nlet GET_SOUNDS_STARTED = 'GET_SOUNDS_STARTED';\nlet GET_SOUNDS_SUCCESS = 'GET_SOUNDS_SUCCESS';\nlet GET_SOUNDS_FAILURE = 'GET_SOUNDS_FAILURE';\n\nconst defaultState = {\n    sounds: {},\n    error: {},\n    pending: false\n};\n\nexport default function soundsReducer(state = defaultState, action) {\n\n    switch (action.type) {\n        case GET_SOUNDS:\n            break;\n\n        case GET_SOUNDS_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        case GET_SOUNDS_SUCCESS:\n            return {\n                ...state,\n                sounds: action.payload,\n                pending: false\n            }\n\n        case GET_SOUNDS_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        default:\n            return state;\n\n    }\n}\n","import {\n    GET_SETTINGS,\n    GET_SETTINGS_STARTED,\n    GET_SETTINGS_SUCCESS,\n    GET_SETTINGS_FAILURE,\n\n    POST_SETTINGS,\n    POST_SETTINGS_STARTED,\n    POST_SETTINGS_SUCCESS,\n    POST_SETTINGS_FAILURE,\n    DEVICE_ENABLED,\n\n} from '../types/setting_types'\n\nconst defaultState = {\n    settings: {\n        loggers: {\n            Dashboards: false,\n            Scheduler: false,\n            Tasks: false,\n            Objects: false,\n            ModelViewer: false,\n            Api: false,\n            ReduxLogger: false,\n            All: false,\n        },\n        shiftDetails: {\n            startOfShift: '07:00',\n            endOfShift: '15:00',\n            expectedOutput: null,\n            breaks: {\n                break1: {\n                    enabled: false,\n                    startOfBreak: '08:30',\n                    endOfBreak: '9:00',\n                },\n                break2: {\n                    enabled: false,\n                    startOfBreak: '11:00',\n                    endOfBreak: '12:00',\n                },\n                break3: {\n                    enabled: false,\n                    startOfBreak: '13:00',\n                    endOfBreak: '14:00',\n                },\n            },\n        },\n    },\n\n    error: {},\n    pending: false,\n    enableLogger: '',\n    muteReducer: false,\n    deviceEnabled: false,\n    apiSim: false,\n\n    mapApps: {\n        heatmap: true\n    }\n}\n\nexport const mirUrl = (state = defaultState) => {\n    return state.settings\n}\n\nconst settingsReducer = (state = defaultState, action) => {\n    switch (action.type) {\n\n        case 'apiSim':\n            return {\n                ...state,\n                apiSim: action.payload\n            }\n\n        case DEVICE_ENABLED:\n            return {\n                ...state,\n                deviceEnabled: action.payload,\n            };\n\n        // ======================================== //\n        //                                          //\n        //              Get SETTINGS                //\n        //                                          //\n        // ======================================== //\n        case GET_SETTINGS:\n            break;\n\n        case GET_SETTINGS_SUCCESS:\n            return {\n                ...state,\n                settings: {\n                    ...state.settings,\n                    ...action.payload,\n                    loggers: { ...state.settings.loggers, ...action.payload.loggers },\n                },\n                pending: false,\n            }\n\n        case GET_SETTINGS_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case GET_SETTINGS_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        // ======================================== //\n        //                                          //\n        //             Post SETTINGS                //\n        //                                          //\n        // ======================================== //\n        case POST_SETTINGS:\n            break;\n\n        case POST_SETTINGS_SUCCESS:\n            return {\n                ...state,\n                settings: { ...state.settings, ...action.payload },\n                pending: false,\n\n            }\n\n        case POST_SETTINGS_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case POST_SETTINGS_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n        // ~~~~~~~~~~~~~~~\n\n        default:\n            return {\n                ...state\n            }\n    }\n    return state\n}\n\nexport default settingsReducer\n","export const GET_MODELS = 'GET_MODELS';\nexport const GET_MODELS_STARTED = 'GET_MODELS_STARTED';\nexport const GET_MODELS_SUCCESS = 'GET_MODELS_SUCCESS';\nexport const GET_MODELS_FAILURE = 'GET_MODELS_FAILURE';\n","import {\n  GET_MODELS,\n  GET_MODELS_STARTED,\n  GET_MODELS_SUCCESS,\n  GET_MODELS_FAILURE,\n} from '../types/models_types';\n\nconst defaultState = {\n  models: [],\n  error: {},\n  pending: false\n};\n\nexport default function modelsReducer(state = defaultState, action) {\n\n    switch (action.type) {\n        case GET_MODELS:\n            break;\n\n        case GET_MODELS_STARTED:\n            return  Object.assign({}, state, {\n                pending: true\n            });\n\n        case GET_MODELS_SUCCESS:\n            return  Object.assign({}, state, {\n                models: [...action.payload],\n                pending: false\n            });\n\n        case GET_MODELS_FAILURE:\n            return  Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        default:\n            return state;\n    }\n}\n","export const GET_SKILL_TEMPLATES = 'GET_SKILL_TEMPLATES'\nexport const GET_SKILL_TEMPLATES_STARTED = 'GET_SKILL_TEMPLATES_STARTED'\nexport const GET_SKILL_TEMPLATES_SUCCESS = 'GET_SKILL_TEMPLATES_SUCCESS'\nexport const GET_SKILL_TEMPLATES_FAILURE = 'GET_SKILL_TEMPLATES_FAILURE'","import {\n    GET_SKILL_TEMPLATES,\n    GET_SKILL_TEMPLATES_STARTED,\n    GET_SKILL_TEMPLATES_SUCCESS,\n    GET_SKILL_TEMPLATES_FAILURE,\n} from '../types/skill_templates_types'\n\n\n\nconst defaultState = {\n    skillTemplates: [],\n    error: {},\n    pending: false,\n    returnedSkillTemplates : [],\n  };\n  \n  \nexport default function skillTemplatesReducer(state = defaultState, action) {\n    // let skillsClone = state.skills.map(skill => deepCopy(skill));\n    switch (action.type) {\n\n        case 'SKILL_TEMPLATES_RETURNED':\n            return {\n                ...state,\n                returnedSkillTemplates: action.payload\n            }\n\n        case GET_SKILL_TEMPLATES:\n            break;\n\n        case GET_SKILL_TEMPLATES_STARTED:\n            return  Object.assign({}, state, {\n                pending: true\n            });\n\n        case GET_SKILL_TEMPLATES_SUCCESS:\n            return  {\n            ...state,\n            skillTemplates: action.payload\n            };\n\n        case GET_SKILL_TEMPLATES_FAILURE:\n            return  Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        default:\n            return state;  \n    }\n}\n","export const GET_POSES = 'GET_POSES';\nexport const GET_POSES_STARTED = 'GET_POSES_STARTED';\nexport const GET_POSES_SUCCESS = 'GET_POSES_SUCCESS';\nexport const GET_POSES_FAILURE = 'GET_POSES_FAILURE';\n\nexport const GET_POSE = 'GET_POSE';\nexport const GET_POSE_STARTED = 'GET_POSE_STARTED';\nexport const GET_POSE_SUCCESS = 'GET_POSE_SUCCESS';\nexport const GET_POSE_FAILURE = 'GET_POSE_FAILURE';\n","import {\n  GET_POSES_STARTED,\n  GET_POSES_SUCCESS,\n  GET_POSES_FAILURE,\n} from '../types/poses_types';\n\nconst defaultState = {\n    poses: {},\n    error: {},\n    pending: false\n};\n\nexport default function posesReducer(state = defaultState, action) {\n    switch(action.type) {\n\n        case GET_POSES_SUCCESS:\n            return  Object.assign({}, state, {\n              poses: {...action.payload},\n              pending: false\n            });\n\n        case GET_POSES_FAILURE:\n            return  Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case GET_POSES_STARTED:\n            return  Object.assign({}, state, {\n                pending: true\n            });\n\n        default:\n            return state\n\n    }\n}\n","export function getActionName(actionType) {\n if (typeof actionType !== 'string') {\n   return null;\n }\n\n return actionType\n   .split(\"_\")\n   .slice(0, -1)\n   .join(\"_\");\n}\n","import {\n    STARTED,\n    SUCCESS,\n    FAILURE\n} from '../types/suffixes';\n\n\nimport { getActionName } from \"../../methods/utils/redux_utils\";\n\nconst requestStatusReducer = (state = {}, action) => {\n\n    const { type } = action;\n    const actionName = getActionName(type);\n\n    if (!actionName) {\n        return {\n             ...state,\n        }\n    }\n\n    if (type.endsWith(STARTED)) {\n        return {\n             ...state,\n             [actionName]: {\n                 pending: true\n             }\n        };\n    }\n\n    if (type.endsWith(SUCCESS) || type.endsWith(FAILURE)) {\n        return {\n             ...state,\n             [actionName]: {\n                 pending: false\n             }\n        };\n    }\n\n    return {\n        ...state\n    };\n};\n\nexport default requestStatusReducer;\n","import {\n    GET_MAPS,\n    GET_MAPS_STARTED,\n    GET_MAPS_SUCCESS,\n    GET_MAPS_FAILURE,\n\n    GET_MAP,\n    GET_MAP_STARTED,\n    GET_MAP_SUCCESS,\n    GET_MAP_FAILURE,\n\n    SET_MAP_ATTRIBUTES,\n    SET_CURRENT_MAP,\n} from '../types/map_types'\n\nimport { deepCopy } from '../../methods/utils/utils'\n\nconst defaultState = {\n    maps: [],\n    currentMap: {},\n\n    error: {},\n    pending: false,\n    reduxZoom: 2\n};\n\nexport default function mapReducer(state=defaultState, action) {\n    let currentMapCopy = {}\n\n    switch (action.type) {\n\n        // ======================================== //\n        //                                          //\n        //              Get All Maps                //\n        //                                          //\n        // ======================================== //\n\n        case GET_MAPS:\n            break;\n\n        case GET_MAPS_STARTED:\n            return  Object.assign({}, state, {\n                pending: true\n            });\n\n        case GET_MAPS_SUCCESS:\n            return  {\n                ...state,\n                maps: action.payload,\n                pending: false\n            }\n\n        case GET_MAPS_FAILURE:\n            return  Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        // ======================================== //\n        //                                          //\n        //            Get Map Details               //\n        //                                          //\n        // ======================================== //\n\n        case GET_MAP:\n            break;\n\n        case GET_MAP_STARTED:\n            return  Object.assign({}, state, {\n                pending: true\n            });\n\n        case GET_MAP_SUCCESS:\n            currentMapCopy = deepCopy(action.payload)\n            currentMapCopy.d3 = {\n                scale: 1,\n                translate: [0,0],\n                boundingClientHeight: null\n            }\n\n            return{\n                ...state,\n                currentMap: currentMapCopy,\n                pending: false\n            }\n\n        case GET_MAP_FAILURE:\n            return  Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        // ======================================== //\n        //                                          //\n        //            Map Utility Funcs             //\n        //                                          //\n        // ======================================== //\n\n        case SET_MAP_ATTRIBUTES:\n            currentMapCopy = deepCopy(state.currentMap)\n            Object.assign(currentMapCopy, {...action.payload.attr})\n\n            return {\n                ...state,\n                currentMap: currentMapCopy\n            }\n\n        case SET_CURRENT_MAP:\n            return {\n                ...state,\n                currentMap: action.payload\n            }\n\n        default:\n            return state;\n    }\n}\n","import {\n    SET_MODE,\n    SET_ACTION,\n    SET_WIDTH,\n    SET_OPEN,\n    PAGE_DATA_CHANGED, SET_CONFIRM_DELETE,\n    SHOW_LOT_SCAN_MODAL,\n} from '../types/sidebar_types'\n\n\nconst defaultState = {\n    mode: 'locations',\n    action: null,\n    width: 450,\n    open: false,\n    pageDataChanged:false,\n    showConfirmDeleteModal: false,\n    confirmDeleteCallback: null,\n    showLotScanModal: false,\n};\n\nexport default function sidebarReducer(state = defaultState, action) {\n\n    switch (action.type) {\n\n        case SET_CONFIRM_DELETE: {\n            return {\n                ...state,\n                showConfirmDeleteModal: action.payload.show,\n                confirmDeleteCallback: action.payload.callback,\n            }\n        }\n\n        case SET_MODE:\n            return {\n                ...state,\n                mode: action.payload.mode\n            }\n\n        case SET_ACTION:\n            return {\n                ...state,\n                action: action.payload.action\n            }\n\n        case SET_WIDTH:\n            return {\n                ...state,\n                width: action.payload\n            }\n\n        case SET_OPEN:\n            return {\n                ...state,\n                open: action.payload\n            }\n\n        case PAGE_DATA_CHANGED:\n            return {\n                ...state,\n                pageDataChanged: action.payload\n            }\n\n        case SHOW_LOT_SCAN_MODAL:\n            return {\n                ...state,\n                showLotScanModal: action.payload\n            }\n\n\n        default:\n            return state;\n    }\n}\n","import {\n  WIDGET_PAGE_LOADED,\n  WIDGET_XY_COORDINATES,\n  WIDGET_LOADED,\n  HOVER_STATION_INFO,\n\n} from '../types/widget_types'\n\n\n  const defaultState = {\n    widgetPageLoaded: false,\n    widgetXYCoordinates: {x: '', y: ''},\n    widgetLoaded: false,\n    hoverStationInfo: null,\n};\n\nconst widgetReducer = (state = defaultState, action) => {\n\n\n    switch (action.type) {\n        case WIDGET_PAGE_LOADED:\n            return {\n                ...state,\n                widgetPageLoaded: action.payload\n            }\n\n        case WIDGET_XY_COORDINATES:\n            return {\n                ...state,\n                widgetXYCoordinates: action.payload\n            }\n\n          case WIDGET_LOADED:\n              return {\n                  ...state,\n                  widgetLoaded: action.payload,\n              }\n\n          case HOVER_STATION_INFO:\n              return {\n                  ...state,\n                  hoverStationInfo: action.payload.info,\n              }\n\n\n        default:\n            return state\n    }\n}\n\nexport default widgetReducer\n","import {\n    GET_DEVICES,\n    GET_DEVICES_STARTED,\n    GET_DEVICES_SUCCESS,\n    GET_DEVICES_FAILURE,\n\n    POST_DEVICES,\n    POST_DEVICES_STARTED,\n    POST_DEVICES_SUCCESS,\n    POST_DEVICES_FAILURE,\n\n    PUT_DEVICES,\n    PUT_DEVICES_STARTED,\n    PUT_DEVICES_SUCCESS,\n    PUT_DEVICES_FAILURE,\n\n    DELETE_DEVICES,\n    DELETE_DEVICES_STARTED,\n    DELETE_DEVICES_SUCCESS,\n    DELETE_DEVICES_FAILURE,\n} from '../types/devices_types'\n\nimport { deepCopy, getIsEquivalent } from '../../methods/utils/utils';\nimport { convertRealToD3 } from '../../methods/utils/map_utils'\n\nconst defaultState = {\n    devices: {},\n    d3: null,\n    selectedDevice: null,\n}\n\nconst devicesReducer = (state = defaultState, action) => {\n    let devicesClone = {}\n    let currentDevice = ''\n\n    // ======================================== //\n    //                                          //\n    //         DEVICE UTILITY FUNCTIONS         //\n    //                                          //\n    // ======================================== //\n    const setDevices = (devices) => {\n\n        if(Object.keys(devices).length === 0) return\n\n        // What this does is update the devices X and Y positions based on the values in the backend.\n        // When the RMStudio initially loads, the devices X and Y is calculated in the map_view container, but those values aren't put to the backend.\n        // When a get call is made, the state.devices is overwritten with the backend data (data without X and Y coords). This removes the device from the map view, which we dont want.\n        // This function takes care of that and adds new X and Y coordinates on every get call. state.d3 is added in mapview\n        if (!getIsEquivalent(devices, state.devices)) {\n            devicesClone = deepCopy(devices)\n            // devicesClone = devices\n\n            Object.keys(devicesClone).map((key, ind) => {\n                const updatedDevice = devices[key]\n                if (updatedDevice.position !== undefined) {\n\n                    // On page load, the d3 state will be null. This is here so that devices wont be undifened on page load\n                    if (state.d3 === null) {\n                        devicesClone[key] = {\n                            ...devicesClone[key],\n                            position: {\n                                ...devicesClone[key].position,\n                                x: updatedDevice.position.pos_x,\n                                y: updatedDevice.position.pos_y,\n                            }\n                        }\n                    }\n\n                    else {\n                        let [x, y] = convertRealToD3([updatedDevice.position.pos_x, updatedDevice.position.pos_y], state.d3)\n                        devicesClone[key] = {\n                            ...devicesClone[key],\n                            position: {\n                                ...devicesClone[key].position,\n                                x: x,\n                                y: y,\n                            }\n                        }\n                    }\n                }\n                return devicesClone\n            })\n        } else {\n            return state\n        }\n        return {\n            ...state,\n            devices: { ...devicesClone },\n            pending: false,\n        }\n    }\n\n\n    switch (action.type) {\n\n        // ======================================== //\n        //                                          //\n        //              Get Devices                 //\n        //                                          //\n        // ======================================== //\n        case GET_DEVICES:\n            break;\n\n        case GET_DEVICES_SUCCESS:\n\n            // Fix for when action.payload is undefined\n            let devices = !!action.payload ? action.payload : {}\n            return setDevices(devices)\n\n        case GET_DEVICES_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case GET_DEVICES_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        // ======================================== //\n        //                                          //\n        //             Post Devices                 //\n        //                                          //\n        // ======================================== //\n        case POST_DEVICES:\n            break;\n\n        case POST_DEVICES_SUCCESS:\n            devicesClone = deepCopy(state.devices)\n            devicesClone[action.payload._id.$oid] = action.payload\n\n            return {\n                ...state,\n                devices: devicesClone,\n                pending: false,\n            }\n\n\n        case POST_DEVICES_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case POST_DEVICES_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n        // ~~~~~~~~~~~~~~~\n\n        // ======================================== //\n        //                                          //\n        //              Put Devices                 //\n        //                                          //\n        // ======================================== //\n        case PUT_DEVICES:\n            break;\n\n        case PUT_DEVICES_SUCCESS:\n            // Find the corresponding device and replace it with the new one\n            currentDevice = action.payload\n\n            devicesClone = deepCopy(state.devices)\n\n            devicesClone[currentDevice._id] = currentDevice\n\n            return setDevices(devicesClone)\n\n        case PUT_DEVICES_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case PUT_DEVICES_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n        // ~~~~~~~~~~~~~~~\n\n        // ======================================== //\n        //                                          //\n        //           Delete Devices                 //\n        //                                          //\n        // ======================================== //\n        case DELETE_DEVICES:\n            break;\n\n        case DELETE_DEVICES_SUCCESS:\n\n            devicesClone = deepCopy(state.devices)\n\n            delete devicesClone[action.payload]\n            return {\n                ...state,\n                devices: devicesClone\n            }\n\n        case DELETE_DEVICES_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case DELETE_DEVICES_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n\n        // ~~~~~~~~~~~~~~~\n\n        // ======================================== //\n        //                                          //\n        //             Utilities                    //\n        //                                          //\n        // ======================================== //\n        case 'UPDATE_DEVICES':\n            return {\n                ...state,\n                devices: deepCopy(action.payload.devices),\n                // devices: action.payload.devices,\n                d3: action.payload.d3,\n            }\n\n        case 'SET_SELECTED_DEVICE':\n            return {\n                ...state,\n                selectedDevice: action.payload\n\n            }\n\n        default:\n            return state\n\n\n\n\n    }\n}\n\nexport default devicesReducer\n","import {\n    TOGGLE_NOTIFICATION_TASK_QUEUE,\n} from '../types/notifications_types'\n\n\nconst defaultState = {\n    hiddenNotifications: {},\n    notifications: [\n        {\n            type: \"station_alert\",\n            label: \"Workstation 3\",\n            message: \"Takt time is 10s slower than normal\",\n            priority: \"warning\",\n            dateTime: new Date(2020, 7, 25, 11, 34)\n        },\n        {\n            type: \"device_alert\",\n            label: \"MiR 3\",\n            message: \"Battery low\",\n            priority: \"critical\",\n            dateTime: new Date(2020, 7, 24, 15, 12)\n        },\n        {\n            type: \"station_alert\",\n            label: \"Shipping\",\n            message: \"Station has denyed task request 'Finished Cartridges to Shipping'\",\n            priority: \"alert\",\n            dateTime: new Date(2020, 7, 22, 15, 54)\n        },\n        {\n            type: \"station_alert\",\n            label: \"Workstation 4\",\n            message: \"Takt time is 8s faster than normal\",\n            priority: \"alert\",\n            dateTime: new Date(2020, 7, 10, 16, 32)\n        }\n\n    ],\n\n    toggleNotificationTaskQueue: 'taskQueue'\n}\n\nconst notificationsReducer = (state = defaultState, action) => {\n    switch (action.type) {\n        case 'HIDDEN_NOTIFICATIONS':\n\n            // Need to assign to new object because React doesn't see the object change as a state change. \n            // This makes react think a state change is happening so the component rerenders\n            const newPayload = { ...action.payload }\n\n            return {\n                ...state,\n                hiddenNotifications: newPayload,\n            }\n\n        case TOGGLE_NOTIFICATION_TASK_QUEUE:\n            return {\n                ...state,\n                toggleNotificationTaskQueue: action.payload,\n            }\n\n        default:\n            return state\n    }\n}\n\nexport default notificationsReducer","export const GET_EVENTS = 'GET_EVENTS'\nexport const GET_EVENTS_STARTED = 'GET_EVENTS_STARTED'\nexport const GET_EVENTS_SUCCESS = 'GET_EVENTS_SUCCESS'\nexport const GET_EVENTS_FAILURE = 'GET_EVENTS_FAILURE'\n\nexport const POST_EVENTS = 'POST_EVENTS'\nexport const POST_EVENTS_STARTED = 'POST_EVENTS_STARTED'\nexport const POST_EVENTS_SUCCESS = 'POST_EVENTS_SUCCESS'\nexport const POST_EVENTS_FAILURE = 'POST_EVENTS_FAILURE'\n\nexport const PUT_EVENTS = 'PUT_EVENTS'\nexport const PUT_EVENTS_STARTED = 'PUT_EVENTS_STARTED'\nexport const PUT_EVENTS_SUCCESS = 'PUT_EVENTS_SUCCESS'\nexport const PUT_EVENTS_FAILURE = 'PUT_EVENTS_FAILURE'\n\nexport const DELETE_EVENTS = 'DELETE_EVENTS'\nexport const DELETE_EVENTS_STARTED = 'DELETE_EVENTS_STARTED'\nexport const DELETE_EVENTS_SUCCESS = 'DELETE_EVENTS_SUCCESS'\nexport const DELETE_EVENTS_FAILURE = 'DELETE_EVENTS_FAILURE'\n","import {\n    GET_EVENTS,\n    GET_EVENTS_STARTED,\n    GET_EVENTS_SUCCESS,\n    GET_EVENTS_FAILURE,\n\n    POST_EVENTS,\n    POST_EVENTS_STARTED,\n    POST_EVENTS_SUCCESS,\n    POST_EVENTS_FAILURE,\n\n    PUT_EVENTS,\n    PUT_EVENTS_STARTED,\n    PUT_EVENTS_SUCCESS,\n    PUT_EVENTS_FAILURE,\n\n    DELETE_EVENTS,\n    DELETE_EVENTS_STARTED,\n    DELETE_EVENTS_SUCCESS,\n    DELETE_EVENTS_FAILURE,\n} from '../types/events_types'\n\nimport { deepCopy } from '../../methods/utils/utils';\n\nconst defaultState = {\n    events: {},\n}\n\nconst eventsReducer = (state = defaultState, action) => {\n    \n    let eventsClone = {}\n    let currentEvent = ''\n\n    switch (action.type) {\n\n        // ======================================== //\n        //                                          //\n        //              Get Events                 //\n        //                                          //\n        // ======================================== //\n        case GET_EVENTS:\n            break;\n\n        case GET_EVENTS_SUCCESS:\n\n\n            return {\n    \n                ...state,\n                events: { ...action.payload },\n                pending: false,\n            }\n\n\n        case GET_EVENTS_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case GET_EVENTS_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        // ======================================== //\n        //                                          //\n        //             Post Events                 //\n        //                                          //\n        // ======================================== //\n        case POST_EVENTS:\n            break;\n\n        case POST_EVENTS_SUCCESS:\n\n            eventsClone = deepCopy(state.events)\n\n            eventsClone[action.payload._id.$oid] = action.payload\n\n            return {\n                ...state,\n                events: eventsClone,\n                pending: false\n            }\n\n\n        case POST_EVENTS_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case POST_EVENTS_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n        // ~~~~~~~~~~~~~~~\n\n        // ======================================== //\n        //                                          //\n        //              Put Events              //\n        //                                          //\n        // ======================================== //\n        case PUT_EVENTS:\n            break;\n\n        case PUT_EVENTS_SUCCESS:\n            // Find the corresponding event and replace it with the new one\n            currentEvent = JSON.parse(action.payload)\n\n            eventsClone = deepCopy(state.events)\n\n            eventsClone[currentEvent._id.$oid] = currentEvent\n\n            return {\n                ...state,\n                events: { ...eventsClone }\n            }\n\n        case PUT_EVENTS_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case PUT_EVENTS_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n        // ~~~~~~~~~~~~~~~\n\n        // ======================================== //\n        //                                          //\n        //           Delete Events                 //\n        //                                          //\n        // ======================================== //\n        case DELETE_EVENTS:\n            break;\n\n        case DELETE_EVENTS_SUCCESS:\n\n            eventsClone = deepCopy(state.events)\n\n            delete eventsClone[action.payload]\n\n            return {\n                ...state,\n                events: eventsClone\n            }\n\n        case DELETE_EVENTS_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case DELETE_EVENTS_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n        // ~~~~~~~~~~~~~~~\n\n        // ======================================== //\n        //                                          //\n        //             Utilities                    //\n        //                                          //\n        // ======================================== //\n        case 'UPDATE_EVENTS':\n            return {\n                ...state,\n                events: deepCopy(action.payload.events)\n            }\n\n        default:\n            return state\n\n\n    }\n}\n\nexport default eventsReducer","import {\n    GET_REFRESH_TOKEN,\n    GET_REFRESH_TOKEN_STARTED,\n    GET_REFRESH_TOKEN_SUCCESS,\n    GET_REFRESH_TOKEN_FAILURE,\n\n\n    POST_REFRESH_TOKEN,\n    POST_REFRESH_TOKEN_STARTED,\n    POST_REFRESH_TOKEN_SUCCESS,\n    POST_REFRESH_TOKEN_FAILURE,\n\n} from '../types/authentication_types'\n\nconst defaultState = {\n\n    refreshToken: '',\n    cognitoUserSession: null,\n\n    error: {},\n    pending: false,\n\n    // Authenticated?\n    authenticated: false\n\n};\n\nexport default function authenticationReducer(state = defaultState, action) {\n\n    switch (action.type) {\n\n        case 'AUTHENTICATE_USER':\n            return{\n                ...state,\n                cognitoUserSession: action.payload,\n                authenticated: true\n            }\n\n        case 'POST_COGNITO_USER_SESSION':\n            return{\n                ...state,\n                cognitoUserSession: action.payload,\n                authenticated: true\n            }\n\n        // ======================================== //\n        //                                          //\n        //              Get Refresh Token           //\n        //                                          //\n        // ======================================== //\n        case GET_REFRESH_TOKEN:\n            break;\n\n        case GET_REFRESH_TOKEN_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        case GET_REFRESH_TOKEN_SUCCESS:\n            return {\n                ...state,\n                refreshToken: action.payload,\n                pending: false\n            }\n\n        case GET_REFRESH_TOKEN_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        // ======================================== //\n        //                                          //\n        //             Post Refresh Token           //\n        //                                          //\n        // ======================================== //\n\n        case POST_REFRESH_TOKEN:\n            break;\n\n        case POST_REFRESH_TOKEN_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        case POST_REFRESH_TOKEN_SUCCESS:\n\n            return {\n                ...state,\n                refreshToken: action.payload,\n                pending: false,\n\n            }\n\n        case POST_REFRESH_TOKEN_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n\n        default:\n            return state;\n\n    }\n}","import {\n    GET_PROCESSES,\n    GET_PROCESSES_STARTED,\n    GET_PROCESSES_SUCCESS,\n    GET_PROCESSES_FAILURE,\n\n    POST_PROCESSES,\n    POST_PROCESSES_STARTED,\n    POST_PROCESSES_SUCCESS,\n    POST_PROCESSES_FAILURE,\n\n    PUT_PROCESSES,\n    PUT_PROCESSES_STARTED,\n    PUT_PROCESSES_SUCCESS,\n    PUT_PROCESSES_FAILURE,\n\n    DELETE_PROCESSES,\n    DELETE_PROCESSES_STARTED,\n    DELETE_PROCESSES_SUCCESS,\n    DELETE_PROCESSES_FAILURE,\n    EDITING_PROCESS,\n} from '../types/processes_types'\n\nimport { deepCopy } from '../../methods/utils/utils';\n\nconst defaultState = {\n    // processes: {'qqq':{\n    //     id: 'qqq',\n    //     name: 'Fakey McFake Fake',\n    //     routes: [\n    //         \"5fa06a9dfacd1af9a74c1925\",\n    //         \"5fa06aa4facd1af9a74c1926\",\n    //         \"5fa06ac3facd1af9a74c1927\",\n    //     ],\n    // },},\n    processes: {},\n    selectedProcess: null,\n    fixingProcess: false,\n}\n\nconst processesReducer = (state = defaultState, action) => {\n    let processesClone = {}\n\n    switch (action.type) {\n\n        // ======================================== //\n        //                                          //\n        //              Get Processes               //\n        //                                          //\n        // ======================================== //\n        case GET_PROCESSES:\n            break;\n\n        case GET_PROCESSES_SUCCESS:\n            return {\n                ...state,\n                processes: action.payload,\n                pending: false,\n            }\n\n        case GET_PROCESSES_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case GET_PROCESSES_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        // ======================================== //\n        //                                          //\n        //             Post Processes                 //\n        //                                          //\n        // ======================================== //\n        case POST_PROCESSES:\n            break;\n\n        case POST_PROCESSES_SUCCESS:\n            processesClone = deepCopy(state.processes)\n            processesClone[action.payload._id] = action.payload\n\n            return {\n                ...state,\n                processes: processesClone,\n                pending: false\n            }\n\n\n        case POST_PROCESSES_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case POST_PROCESSES_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n        // ~~~~~~~~~~~~~~~\n\n        // ======================================== //\n        //                                          //\n        //              Put Processes                 //\n        //                                          //\n        // ======================================== //\n        case PUT_PROCESSES:\n            break;\n\n        case PUT_PROCESSES_SUCCESS:\n            return {\n                ...state,\n                processes: {\n                    ...state.processes,\n                    [action.payload._id]: action.payload\n                },\n                pending: false\n            }\n\n        case PUT_PROCESSES_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case PUT_PROCESSES_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n        // ~~~~~~~~~~~~~~~\n\n        // ======================================== //\n        //                                          //\n        //           Delete Processes                 //\n        //                                          //\n        // ======================================== //\n        case DELETE_PROCESSES:\n            break;\n\n        case DELETE_PROCESSES_SUCCESS:\n\n            processesClone = deepCopy(state.processes)\n\n            delete processesClone[action.payload]\n            return {\n                ...state,\n                processes: processesClone\n            }\n\n        case DELETE_PROCESSES_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case DELETE_PROCESSES_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n        // ~~~~~~~~~~~~~~~\n\n        // ======================================== //\n        //                                          //\n        //             Utilities                    //\n        //                                          //\n        // ======================================== //\n        case 'UPDATE_PROCESSES':\n            return {\n                ...state,\n                processes: deepCopy(action.payload.processes),\n                // processes: action.payload.processes,\n                d3: action.payload.d3,\n            }\n\n        case 'SET_SELECTED_PROCESS':\n            return {\n                ...state,\n                selectedProcess: action.payload\n\n            }\n\n        case EDITING_PROCESS:\n            return {\n                ...state,\n                editingProcess: action.payload,\n            }\n\n        case 'SET_FIXING_PROCESS':\n            return {\n                ...state,\n                fixingProcess: action.payload\n            }\n\n        default:\n            return state\n\n\n    }\n}\n\nexport default processesReducer\n","// import types\nimport {\n  GET,\n  POST,\n  DELETE,\n  PUT\n} from '../types/prefixes';\n\nimport {\n  REPORT_EVENTS,\n  REPORT_EVENT\n} from '../types/data_types';\n\nimport {\n  STARTED,\n  SUCCESS,\n  FAILURE\n} from '../types/suffixes';\n\nconst defaultState = {\n  reportEvents: {},\n  id: {},\n  dashboard_id: {},\n  station_id: {},\n  report_button_id: {},\n  error: {},\n  pending: false\n};\n\nexport default function reportEventsReducer(state = defaultState, action) {\n\n  switch (action.type) {\n\n    // get\n    // ***************\n    case GET + REPORT_EVENTS + SUCCESS:\n      return  Object.assign({}, state, {\n        reportEvents: {...state.reportEvents, ...action.payload.reportEventsObj},\n        pending: false\n      });\n\n    case GET + REPORT_EVENTS + FAILURE:\n      return  Object.assign({}, state, {\n        error: action.payload,\n        pending: false\n      });\n\n    case GET + REPORT_EVENTS + STARTED:\n      return  Object.assign({}, state, {\n        pending: true\n      });\n    // ~~~~~~~~~~~~~~~\n\n    // create\n    // ***************\n    case POST + REPORT_EVENT + SUCCESS:\n      const created = action.payload.createdReportEvent\n\n      return  Object.assign({}, state, {\n        reportEvents: {\n          ...state.reportEvents,\n          _id: {\n            ...state.reportEvents._id,\n            [created.report_button_id]: created\n          }\n        },\n        pending: false\n      });\n\n\n    case POST + REPORT_EVENT + FAILURE:\n      return  Object.assign({}, state, {\n        error: action.payload,\n        pending: false\n      });\n\n    case POST + REPORT_EVENT + STARTED:\n      return  Object.assign({}, state, {\n        pending: true\n      });\n    // ~~~~~~~~~~~~~~~\n\n    // delete\n    // ***************\n    case DELETE + REPORT_EVENT + SUCCESS:\n\n      const {\n        [action.payload.id]: old,\n          ...rest\n      } = state.reportEvents._id\n\n      return  Object.assign({}, state, {\n        reportEvents: {\n          ...state.reportEvents,\n          _id: {...rest,}\n        },\n        pending: false\n      });\n\n\n    case  DELETE + REPORT_EVENT + FAILURE:\n      return  Object.assign({}, state, {\n        error: action.payload,\n        pending: false\n      });\n\n    case  DELETE + REPORT_EVENT + STARTED:\n      return  Object.assign({}, state, {\n        pending: true\n      });\n    // ~~~~~~~~~~~~~~~\n\n    // update\n    // ***************\n    case  PUT + REPORT_EVENT + SUCCESS:\n\n      return  Object.assign({}, state, {\n        reportEvents: {\n          ...state.reportEvents,\n          _id: {\n            ...state.reportEvents._id,\n            [action.payload.updatedReportEvent.report_button_id]: action.payload.updatedReportEvent\n          }\n        },\n        pending: false\n      });\n\n\n    case PUT + REPORT_EVENT + FAILURE:\n      return  Object.assign({}, state, {\n        error: action.payload,\n        pending: false\n      });\n\n    case PUT + REPORT_EVENT + STARTED:\n      return  Object.assign({}, state, {\n        pending: true\n      });\n    // ~~~~~~~~~~~~~~~\n\n    default:\n      return state\n  }\n}\n","import {\n  GET,\n  POST,\n  DELETE,\n  PUT\n} from '../types/prefixes';\n\nimport {\n  SUCCESS,\n} from '../types/suffixes'\n\nimport {\n  CARD,\n  CARDS,\n  CARD_HISTORY,\n  PROCESS_CARDS,\n  SHOW_EDITOR,\n  SHOW_FORM_EDITOR,\n  SHOW_BARCODE_MODAL\n\n} from '../types/data_types'\n\nconst defaultState = {\n\n  cards: {},\n  processCards: {},\n  cardHistories: {},\n  error: {},\n  pending: false,\n  showEditor:false,\n  showFormEditor:false,\n  showBarcodeModal: false,\n\n};\n\nexport default function cardsReducer(state = defaultState, action) {\n  let processCards = {}\n\n  switch (action.type) {\n    case GET + CARD + SUCCESS:\n      return {\n        ...state,\n        cards: {...state.cards, [action.payload.card._id]: action.payload.card},\n        pending: false,\n      }\n\n    case GET + CARDS + SUCCESS:\n\n      Object.values(action.payload.cards).forEach((card,index) => {\n        if(processCards[card.process_id]) {\n          processCards[card.process_id][card._id] = card\n        } else {\n          processCards[card.process_id] = {\n            [card._id]: card\n          }\n        }\n\n      })\n      return {\n        ...state,\n        cards: {...state.cards, ...action.payload.cards},\n        processCards: processCards,\n        pending: false,\n      }\n\n    case GET + PROCESS_CARDS + SUCCESS:\n      return {\n        ...state,\n        processCards: {...state.processCards, [action.payload.processId]: {\n          ...state.processCards[action.payload.processId], ...action.payload.cards\n          }},\n        pending: false,\n      }\n\n    case PUT + CARD + SUCCESS:\n      return {\n        ...state,\n        cards: {...state.cards, [action.payload.card._id]: action.payload.card},\n        processCards: {...state.processCards, [action.payload.processId]: {\n            ...state.processCards[action.payload.processId], [action.payload.card._id]: action.payload.card\n          }},\n        pending: false,\n      }\n\n    case POST + CARD + SUCCESS:\n      return {\n        ...state,\n        cards: {...state.cards, [action.payload.card._id]: action.payload.card},\n        processCards: {...state.processCards, [action.payload.processId]: {\n            ...state.processCards[action.payload.processId], [action.payload.card._id]: action.payload.card\n          }},\n        pending: false,\n      }\n\n    case DELETE + CARD + SUCCESS:\n      const { [action.payload.cardId]: value, ...rest } = state.cards; // extracts payload lot from rest\n      const {\n\n        [action.payload.processId]: {[action.payload.cardId]: removedCard, ...remaining} ,\n        ...unchangedProcessGroups\n\n      } = state.processCards; // extracts payload lot from rest\n\n      return {\n        ...state,\n        cards: {...rest},\n        processCards: {...unchangedProcessGroups, [action.payload.processId]: remaining},\n        pending: false,\n      }\n\n    case GET + CARD_HISTORY + SUCCESS:\n      return {\n        ...state,\n        cardHistories: {...state.cardHistories, [action.payload.cardHistory.card_id]: action.payload.cardHistory},\n        pending: false,\n      }\n\n    case POST + CARD_HISTORY + SUCCESS:\n      return {\n        ...state,\n        cardHistories: {...state.cardHistories, [action.payload.cardHistory.card_id]: action.payload.cardHistory},\n        pending: false,\n      }\n\n    case PUT + CARD_HISTORY + SUCCESS:\n      return {\n        ...state,\n        cardHistories: {...state.cardHistories, [action.payload.cardHistory.card_id]: action.payload.cardHistory},\n        pending: false,\n      }\n\n      case SHOW_EDITOR:\n          return {\n              ...state,\n              showEditor: action.payload,\n          }\n\n    case SHOW_FORM_EDITOR:\n      return {\n        ...state,\n        showFormEditor: action.payload,\n      }\n\n    case SHOW_BARCODE_MODAL:\n      return {\n        ...state,\n        showBarcodeModal: action.payload,\n      }\n\n    default:\n      return state\n  }\n}\n","import {\n  GET,\n  POST,\n  DELETE,\n  PUT\n} from '../types/prefixes';\n\nimport {\n  SUCCESS,\n} from '../types/suffixes'\n\nimport {\n  LOT,\n  LOTS,\n} from '../types/data_types'\n\n\n\nconst defaultState = {\n  lots: {},\n};\n\nexport default function lotsReducer(state = defaultState, action) {\n\n  switch (action.type) {\n    case GET + LOT + SUCCESS:\n      return {\n        ...state,\n        lots: {...state.lots, [action.payload.lot._id]: action.payload.lot},\n      }\n\n    case GET + LOTS + SUCCESS:\n      return {\n        ...state,\n        lots: {...state.lots, ...action.payload.lots},\n      }\n\n    case PUT + LOT + SUCCESS:\n      return {\n        ...state,\n        lots: {...state.lots, [action.payload.lot._id]: action.payload.lot},\n      }\n\n    case POST + LOT + SUCCESS:\n      return {\n        ...state,\n        lots: {...state.lots, [action.payload.lot._id]: action.payload.lot},\n      }\n\n    case DELETE + LOT + SUCCESS:\n      const { [action.payload.lotId]: value, ...rest } = state.lots; // extracts payload lot from rest\n\n      return {\n        ...state,\n        lots: {...rest},\n      }\n\n    default:\n      return state\n  }\n}\n","import { SET } from \"../types/prefixes\"\nimport {LOT_DRAGGING, COLUMN_HOVERING, LOT_HOVERING, FIELD_DRAGGING, SET_SIZE, LOT_DROPPING} from \"../types/ui_types\"\n\n\nconst defaultState = {\n\tisCardDragging: false,\n\tisFieldDragging: null,\n\tisHoveringOverColumn: false,\n\thoveringLotId: null,\n\tsizes: {},\n\tdroppedLotInfo: {},\n\tdraggingLotId: null\n}\n\nconst cardPageReducer = (state = defaultState, action) => {\n\n\n\tswitch (action.type) {\n\t\tcase SET + LOT_DROPPING:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdroppedLotInfo: action.payload\n\t\t\t}\n\n\t\tcase SET + LOT_DRAGGING:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdraggingLotId: action.payload.lotId\n\t\t\t}\n\n\t\tcase SET + LOT_HOVERING: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\thoveringLotId: action.payload.lotId\n\t\t\t}\n\t\t}\n\n\n\n\t\tcase SET + FIELD_DRAGGING:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisFieldDragging: action.payload\n\t\t\t}\n\n\t\tcase SET_SIZE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tsizes: {...state.sizes, [action.payload.processId]: action.payload.size},\n\t\t\t}\n\n\t\tcase SET + COLUMN_HOVERING:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisHoveringOverColumn: action.payload\n\t\t\t}\n\n\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport default cardPageReducer","import { combineReducers } from 'redux'\nimport schedulesReducer from './schedules_reducer_v2';\nimport skillsReducer from './skills_reducer';\nimport stationsReducer from './stations_reducer';\nimport workInstructionsReducer from './work_instructions_reducer';\nimport positionsReducer from './positions_reducer'\nimport objectsReducer from './objects_reducer';\nimport apiReducer from './api_reducer';\nimport dashboardsReducer from './dashboards_reducer'\nimport errorReducer from './error_reducer';\nimport statusReducer from './status_reducer';\nimport taskQueueReducer from './task_queue_reducer';\nimport keyboardReducer from './keyboard_reducer';\nimport tasksReducer from './tasks_reducer';\nimport soundsReducer from './sounds_reducer';\nimport settingsReducer from './settings_reducer';\nimport localReducer from './local_reducer';\nimport modelsReducer from './models_reducer'\nimport skillTemplatesReducer from './skill_templates_reducer'\nimport posesReducer from './poses_reducer';\nimport requestStatusReducer from './request_status_reducer';\nimport taskAnalysisReducer from './task_analysis_reducer'\nimport mapReducer from './map_reducer'\nimport lotTemplatesReducer from './lot_templates_reducer'\nimport sidebarReducer from './sidebar_reducer'\nimport widgetReducer from './widget_reducer'\nimport devicesReducer from './devices_reducer'\nimport notificationsReducer from './notifications_reducer'\nimport eventsReducer from './events_reducer'\nimport authenticationReducer from './authentication_reducer'\nimport processesReducer from './processes_reducer'\nimport reportEventsReducer from './report_events_reducer'\nimport cardsReducer from './cards_reducer'\nimport lotsReducer from './lots_reducer'\nimport cardPageReducer from \"./card_page_reducer\"\n\n// TEST\n\nexport default combineReducers({\n    cardPageReducer,\n    lotTemplatesReducer,\n    workInstructionsReducer,\n    apiReducer,\n    reportEventsReducer,\n    cardsReducer,\n    lotsReducer,\n    schedulesReducer,\n    skillsReducer,\n    positionsReducer,\n    stationsReducer,\n    objectsReducer,\n    dashboardsReducer,\n    errorReducer,\n    statusReducer,\n    taskQueueReducer,\n    keyboardReducer,\n    soundsReducer,\n    tasksReducer,\n    settingsReducer,\n    localReducer,\n    modelsReducer,\n    skillTemplatesReducer,\n    posesReducer,\n    requestStatusReducer,\n    taskAnalysisReducer,\n    mapReducer,\n    sidebarReducer,\n    widgetReducer,\n    devicesReducer,\n    notificationsReducer,\n    eventsReducer,\n    authenticationReducer,\n    processesReducer,\n})\n","import {createStore, applyMiddleware, compose} from 'redux';\nimport { createLogger } from 'redux-logger'\nimport reducers from '../reducers/index';\nimport thunk from 'redux-thunk';\n\nimport log_module from '../../logger.js';\n\nconst reduxLogger = log_module.getLogger('ReduxLogger');\n\nvar logger = createLogger({logger: reduxLogger, level: \"info\"});\n\n// const muteReducer = () => {\n//   if(reducers.settingsReducer.muteReducer){\n//     return applyMiddleware(thunk)\n//   } else {\n//     return applyMiddleware(logger, thunk)\n//   }\n// }\n\nconst composeEnhancers =\n  typeof window === 'object' &&\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n      // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n      // actionCreators,\n      trace: true,\n      traceLimit: 25,\n    }) : compose;\n\nconst enhancer = composeEnhancers(\n  applyMiddleware(logger, thunk),\n  // other store enhancers if any\n);\n\nconst store = createStore(reducers, enhancer);\n\nif (module.hot) {\n  module.hot.accept('../reducers/index.js', () => {\n    // const nextReducer = combineReducers(require('../reducers'))\n    // store.replaceReducer(nextReducer)\n    store.replaceReducer(require('../reducers/index.js').default)\n  })\n}\n\nexport default store\n","import styled, { css } from 'styled-components'\nimport { getDebugStyle } from \"../../../methods/utils/style_utils\";\nimport * as commonCss from \"../../../common_css/common_css\";\n\n\n// shared styles\n// ******************************\nexport const textStyle = css`\n\tfont-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz3};\n    color: ${props => props.warning ? props.theme.okay : props.theme.fg.primary};\n`\n// ******************************\n\nexport const Container = styled.div`\n    width: 100%;\n\n    padding-left: .5rem;\n    padding-right: .5rem;\n    padding-top: .5rem;\n    padding-bottom: .5rem;\n\n    position: relative;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n\n    border-radius: 0.5rem;\n    border: thin solid ${props => props.theme.bg.primary};\n    background-color: transparent;\n    /* // optional overwrite styles passed as css in props */\n    ${props => props.css};\n\n    /* // uncomment to show debug styles */\n    /* // ${getDebugStyle()}; */\n\n    ${props => props.selectable && (props.isSelected ? selectedCss : notSelectedCss)};\n    \n    \n\n`\n\nconst selectedCss = css`\n\n`\n\nconst notSelectedCss = css`\n  filter: contrast(70%);\n    &:hover {\n        filter: contrast(100%);\n    }\n`\n\n\n\n\nexport const Title = styled.span`\n    // align-self: flex-start;\n    // ${textStyle};\n\t\toverflow-wrap: break-word;\n\n    display: inline-flex;\n  \talign-items: center;\n\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz4};\n    font-weight: 500;\n    color: ${props => props.theme.bg.primary};\n\n    /* // optional overwrite styles passed as css in props */\n    ${props => props.css};\n\n    /* // uncomment to show debug styles */\n    // ${getDebugStyle()};\n`\n\nexport const Status = styled.span`\n\n    display: inline-flex;\n  \talign-items: center;\n\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz4};\n    font-weight: 500;\n\t\tcolor: ${props => props.theme.bg.quaternary};\n`\n\nexport const LeftContentContainer = styled.div`\n\t/* // overwrite styles passed as css in props */\n    ${props => props.css};\n\t\toverflow-wrap: break-word;\n`\n\nexport const ContentContainer = styled.div`\n\tflex: 1;\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\n\n\t// optional overwrite styles passed as css in props\n    ${props => props.css};\n\n    // uncomment to show debug styles\n    // ${getDebugStyle()};\n\n`\n\nexport const RightContentContainer = styled.div`\n\t// overwrite styles passed as css in props\n    ${props => props.css};\n`\n\n\nexport const Description = styled.span`\n    align-self: flex-start;\n\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz4};\n    color: ${props => props.theme.bg.senary};\n    cursor: pointer;\n    white-space: pre-line;\n\n    // optional overwrite styles passed as css in props\n    ${props => props.css};\n\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport * as style from './basic_list_item.style'\n\nfunction BasicListItem(props) {\n\n\t// extract props\n\tconst {\n\t\tLeftContentContainer,\n\t\tleftContentContainerCss,\n\t\tleftContentContainerProps,\n\t\tleftContent,\n\t\tRightContentContainer,\n\t\trightContentContainerCss,\n\t\trightContentContainerProps,\n\t\trightContent,\n\t\tContentContainer,\n\t\tcontentContainerCss,\n\t\tcontentContainerProps,\n\t\tContainer,\n\t\tcontainerCss,\n\t\t containerProps,\n\t\ttitle,\n\t\tTitle,\n\t\ttitleCss,\n\t\ttitleProps,\n\t\tonClick,\n\t\tonMouseEnter,\n\t\tonMouseLeave,\n\t\tStatus,\n\t\tstatus,\n\t\tisSelected,\n\t\tselectable\n\t} = props\n\n\treturn (\n\t\t<Container\n\t\t\tisSelected={isSelected}\n\t\t\tselectable={selectable}\n\t\t\t{...containerProps}\n            css={containerCss}\n\t\t>\n\t\t\t<LeftContentContainer css={leftContentContainerCss} {...leftContentContainerProps}>\n\t\t\t\t{leftContent && leftContent}\n\t\t\t</LeftContentContainer>\n\n\t\t\t<ContentContainer\n\t\t\t\t{...contentContainerProps}\n\t\t\t\tcss={contentContainerCss}\n\t\t\t\tonClick={onClick}\n\t\t\t\tonMouseEnter = {onMouseEnter}\n\t\t\t\tonMouseLeave = {onMouseLeave}\n\t\t\t>\n\t\t\t\t<Title css={titleCss}{...titleProps}>\n\t\t\t\t\t{title}\n\t\t\t\t</Title>\n\n                <Status>\n                    {status}\n                </Status>\n\t\t\t</ContentContainer>\n\n\t\t\t<RightContentContainer css={rightContentContainerCss} {...rightContentContainerProps}>\n\t\t\t\t{rightContent && rightContent}\n\t\t\t</RightContentContainer>\n\t\t</Container>\n\t)\n}\n\nBasicListItem.propTypes = {\n\tContainer: PropTypes.elementType,\n\tLeftContentContainer: PropTypes.elementType,\n\tRightContentContainer: PropTypes.elementType,\n\tContentContainer: PropTypes.elementType,\n    Title: PropTypes.elementType,\n    Status: PropTypes.elementType,\n\ttitle: PropTypes.string,\n\tcontainerCss: PropTypes.object,\n\tleftContentContainerCss: PropTypes.object,\n\trightContentContainerCss: PropTypes.object,\n\ttitleCss: PropTypes.object,\n\tcontentContainerCss: PropTypes.object,\n\tisSelected: PropTypes.bool,\n\tselectable: PropTypes.bool,\n}\n\nBasicListItem.defaultProps = {\n\tContainer: style.Container,\n\tLeftContentContainer: style.LeftContentContainer,\n\tRightContentContainer: style.RightContentContainer,\n\tContentContainer: style.ContentContainer,\n    Title: style.Title,\n    Status: style.Status,\n\ttitle: \"\",\n\tcontainerCss: {},\n\ttitleCss: {},\n\tleftContentContainerCss: {},\n\trightContentContainerCss: {},\n\tcontentContainerCss: {},\n\tisSelected: false,\n\tselectable: false,\n}\n\nexport default BasicListItem\n","import styled, {css} from \"styled-components\";\n\nimport RemoveIcon from '@material-ui/icons/Remove';\n\nexport const containerCss = css`\n\tbackground-color: #FFFFFF;\n\tborder-color: transparent;\n\tborder-width: 2px;\n\tcolor: transparent;\n    height: 4.5rem;\n    width: 100%;\n    padding: .25rem;\n\n\t\t&:hover{\n\t\t\t\tborder-color: #798fd9;\n\n\t\t}\n\n`\n\nexport const titleCss = css`\n    color: #000000;\n    margin-right: .5rem;\n\t\twidth:100%;\n\t\tword-break: break-word;\n\n\n`\n\nexport const contentContainerCss = css`\n    flex-direction: row;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    /* white-space: nowrap; */\n\n    /* justify-content: flex-start; */\n`\n\nexport const rightContentContainerCss = css`\n\twidth: auto;\n\tmargin-left: .5rem;\n\tmargin-right: .25rem;\n\tdisplay: flex;\n\talign-items: center;\n`\n\n\nexport const StyledRemoveIcon = styled(RemoveIcon)`\n\tpadding: 0;\n\tmargin: 0;\n`\n\nexport const Spacer = styled.div`\n\theight: 0.4rem;\n\twidth: 100%;\n`\n\nexport const ItemDiv = styled.div`\n    &:hover{\n        cursor: pointer;\n    }\n`\n","import React, {useContext, useEffect, useState} from 'react';\n\nimport BasicListItem from \"../../basic/basic_list_item/basic_list_item\";\nimport BounceButton from \"../../basic/bounce_button/bounce_button\";\n\nimport * as style from \"./task_queue_item.style\"\nimport { deleteTaskQueueItem } from \"../../../redux/actions/task_queue_actions\";\nimport { getStatus } from \"../../../redux/actions/status_actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport log from \"../../../logger\"\nimport IconButton from \"../../basic/icon_button/icon_button\";\nimport { ThemeContext } from \"styled-components\";\n\nimport * as taskActions from '../../../redux/actions/tasks_actions'\n\nconst logger = log.getLogger(\"TaskQueueListItem\")\n\nconst TaskQueueListItem = (props) => {\n\n    // extract props\n    const {\n        id,\n        item,\n        task,\n        onClick,\n        type,\n        ...rest\n    } = props\n\n    // dispatch\n    const dispatch = useDispatch()\n    // theme\n    const themeContext = useContext(ThemeContext);\n\n    const tasks = useSelector(state => { return state.tasksReducer.tasks })\n    const editingTask = useSelector(state => state.tasksReducer.editingTask)\n    const selectedTask = useSelector(state => state.tasksReducer.selectedTask) || {}\n    const {\n        _id: selectedTaskId\n    } = selectedTask\n\n    const {\n        _id: taskId\n    } = task || {}\n\n    const [isSelected, setIsSelected] = useState(false)\n\n    // update isSelected based on if current items task id matches the selectedTask's id\n    useEffect(() => {\n        if(!isSelected && (selectedTaskId === taskId)) {\n            setIsSelected(true)\n        }\n        else if(selectedTask && (selectedTaskId !== taskId)) {\n            setIsSelected(false)\n        }\n    }, [id, selectedTaskId])\n\n    const handleClick = async () => {\n        await dispatch(deleteTaskQueueItem(id))\n        dispatch(getStatus(props.statusApi))\n    }\n\n    /**\n     * This is probably being used to display HILs\n     */\n    const handleTaskItemClicked = () => {\n        if(item.task_id !== 'custom_task'){\n            dispatch({ type: 'TASK_QUEUE_ITEM_CLICKED', payload: id })\n        }\n    }\n\n    const handleMouseEnter = async () => {\n        if (!editingTask && !!tasks[item.task_id]) {\n            await dispatch(taskActions.selectTask(item.task_id))\n        }\n    }\n\n    const handleMouseLeave = async () => {\n        // only deselect if not currently editing\n        if(!editingTask) {\n            await dispatch(taskActions.deselectTask())\n        }\n    }\n\n    return (\n        <style.ItemDiv>\n            <BasicListItem\n                selectable={editingTask}\n                isSelected={isSelected}\n                {...rest}\n                onClick={handleTaskItemClicked}\n                onMouseEnter={handleMouseEnter}\n                onMouseLeave={handleMouseLeave}\n\n                titleCss={style.titleCss}\n                containerCss={style.containerCss}\n                rightContentContainerCss={style.rightContentContainerCss}\n                contentContainerCss={style.contentContainerCss}\n                rightContent={\n                    <>\n                        <IconButton\n                            color={themeContext.fg.primary}\n                        >\n                            {type == 'human' ?\n                                <i className=\"fas fa-user\"></i>\n                                :\n                                <i className=\"fas fa-robot\"></i>\n                            }\n                        </IconButton>\n\n                        <IconButton\n                            color={themeContext.fg.primary}\n                            onClick={handleClick}\n                        >\n                            <style.StyledRemoveIcon\n                                fontSize={\"large\"}\n                            />\n                        </IconButton>\n                    </>\n\n                }\n            />\n            {/*CANT USE MARGIN FOR SPACING ITEMS IN REACT LIST - IT CAUSES A WEIRD FLICKERING ISSUE AND PREVENTS REACT-LIST METHODS FROM WORKING CORRECTLY*/}\n            {/*USER EMPTY DIV INSTEAD FOR NOW*/}\n            <style.Spacer />\n        </style.ItemDiv>\n    )\n}\n\nexport default TaskQueueListItem\n","import styled, {css} from 'styled-components';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  overflow: hidden;\n  width: 100%;\n`\n\nexport const Header = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\twidth: 100%;\n\t/* box-shadow: 2px 2px 10px black; */\n\tpadding: 1rem;\n\tpadding-top: 1.5rem;\n\t/* background-color: ${props => props.theme.bg.quinary}; */\n    justify-content: space-between;\n`\n\nexport const Title = styled.h1`\n    font-family: ${props => props.theme.font.primary};\n    font-size: 2rem;\n    font-weight: 500;\n    color: ${props => props.theme.schema[props.schema].solid};\n`\n\nexport const ClearIcon = styled(DeleteForeverIcon)`\n\n`\n\nexport const ListContainer = styled.div`\n\twidth: 100%;\n\tflex: 1;\n\n    padding: .1rem;\n    padding-top: 1.5rem;\n\n\toverflow: auto;\n\n\t// optionally style scroll bar\n\t::-webkit-scrollbar {\n\t}\n\t::-webkit-scrollbar-thumb {\n\t}\n`\n","import React, { useEffect, useRef, useState } from 'react';\n\n// external functions\nimport { useDispatch, useSelector } from 'react-redux';\n\n// external components\nimport ReactList from 'react-list';\n\n// import utils\nimport { clone_object } from '../../methods/utils/utils';\n\n// import actions\nimport { deleteTaskQueueAll } from '../../redux/actions/task_queue_actions';\nimport { getStatus } from '../../redux/actions/status_actions';\nimport { getTasks, setSelectedTask } from \"../../redux/actions/tasks_actions\";\n\n\n// components\nimport TaskQueueItem from \"./task_queue_item/task_queue_item\"\n\n// styles\nimport * as style from './task_queue.style'\n\n// logging\nimport log from '../../logger.js';\n\nconst logger = log.getLogger(\"TaskQueueMenu\");\n\nconst TaskQueueMenu = (props) => {\n\n    const tasks = useSelector(state => { return state.tasksReducer.tasks })\n    const selectedTask = useSelector(state => state.tasksReducer.selectedTask)\n\n    const onDeleteTaskQueueAll = () => dispatch(deleteTaskQueueAll()) // Clear Task Q\n    const onGetStatus = (props) => dispatch(getStatus(props))\t// fetch update to status\n\n\n\n    const taskQueue = useSelector(state => {\n\n        const taskQueue = state.taskQueueReducer.taskQueue\n        var taskQueueClone = [];\n        if (taskQueue) {\n            Object.values(taskQueue).forEach((queueItem, index) => {\n                let queueItemClone = clone_object(queueItem);\n                // Sees if task is a custom task\n                let task = {}\n                if (queueItem.task_id == 'custom_task') {\n                    task = {\n                        name: 'Simple Move',\n                        mission_status: 'Austin, Please Add Mission Status',\n                    }\n                } else {\n                    task = tasks ? tasks[queueItem.task_id] : {}\n\n                }\n\n                // skip if associated task isn't found\n                if (task) {\n\n                    // If task is a handoff and not a device, don't show in task q\n                    if (task.handoff === true && queueItem?.device_type !== 'MiR_100') return\n\n                    queueItemClone.task = task;\n                    queueItemClone.name = task.name;\n                    taskQueueClone.push(queueItemClone);\n                } else {\n                    // no matching task found, log warning\n                    // logger.warn(\"Queue item found without corresponding task\", {queueItem})\n                }\n            })\n        }\n\n        return taskQueueClone\n    })\n\n\n    // dispatch\n    const dispatch = useDispatch()\n\n    const itemRenderer = (index, key) => {\n\n\n        // get item from task queue based on index\n        const item = taskQueue[index]\n        const type = item.device_type\n        // extract properties\n        const { name } = item\n        const id = item?._id\n        const status = item.mission_status\n        const task = tasks[item.task_id]\n\n        // return the component with the items properties as props\n        return (\n            <TaskQueueItem\n                title={name}\n                status={status}\n                id={id}\n                key={key}\n                type={type}\n                item={item}\n                task={task}\n            />\n        )\n    }\n\n    const clearTaskQueue = async () => {\n        onDeleteTaskQueueAll()\n        onGetStatus(props.statusApi)\n    }\n\n    return (\n        <style.Container>\n\n            <style.ListContainer>\n\n                <ReactList\n                    itemRenderer={itemRenderer}\n                    length={taskQueue.length}\n                    type='uniform'\n                    style={{ width: '100%' }}\n                />\n            </style.ListContainer>\n        </style.Container>\n    );\n}\n\nexport default TaskQueueMenu;\n","import styled, {css} from \"styled-components\";\n\nexport const Container = styled.div`\n  //   max-width: ${props => props.width};\n  //   min-width: ${props => props.width};\n  //   width: ${props => props.width};\n  //\n  //   max-height: ${props => props.height};\n  //   min-height: ${props => props.height};\n  //   height: ${props => props.height};\n  // //width: auto;\n  //   background: red;\n\t// position: relative;\n`\n\nexport const ScaleContainer = styled.div`\n\t//transform: scale(${props => props.scaleFactor}) translate(${props => `-12.3%`}, ${props => `-12.3%`});\n\t//position: absolute;\n  //left: 0;\n  zoom: ${props => props.scaleFactor};\n`","import React, {useEffect, useRef, useState} from 'react';\nimport PropTypes from 'prop-types';\n\nimport * as styled from \"./scale_wrapper.style\"\n\nconst ScaleWrapper = (props) => {\n\n    const {\n        children,\n        scaleFactor\n    } = props\n\n    const [size, setSize] = useState({\n        offsetWidth: undefined,\n        offsetHeight: undefined,\n        offsetLeft: undefined,\n        offsetTop: undefined,\n    })\n    const {\n        offsetHeight,\n        offsetWidth,\n        offsetTop,\n        offsetLeft\n    } = size || {}\n\n    const sizeRef = useRef(null)\n    const {\n        offsetHeight: refOffsetHeight,\n        offsetWidth: refOffsetWidth,\n        offsetTop: refOffsetTop,\n        offsetLeft: refOffsetLeft\n    } = sizeRef.current || {}\n\n    useEffect(() => {\n\n        // if sizeRef is assigned\n        if (sizeRef.current) {\n\n            const {\n                offsetHeight,\n                offsetWidth,\n                offsetTop,\n                offsetLeft\n            } = sizeRef.current || {}\n\n            // set zoneSize\n            setSize({\n                offsetHeight,\n                offsetWidth,\n                offsetTop,\n                offsetLeft\n            });\n        }\n\n    }, [sizeRef, refOffsetWidth, refOffsetHeight])\n\n    return (\n        <styled.Container\n            width={`${Math.round(offsetWidth * scaleFactor)}px`}\n            height={`${Math.round(offsetHeight * scaleFactor)}px`}\n        >\n            <styled.ScaleContainer\n                ref={sizeRef}\n                scaleFactor={scaleFactor}\n            >\n                {children}\n\n            </styled.ScaleContainer>\n\n        </styled.Container>\n    );\n};\n\nScaleWrapper.propTypes = {\n    scaleFactor: PropTypes.number,\n};\n\nScaleWrapper.defaultProps = {\n    scaleFactor: 0.5,\n};\n\nexport default ScaleWrapper;\n","import styled, {css} from \"styled-components\";\n\nconst usableCss = css`\n  &:hover {\n    cursor: pointer !important;\n    filter: brightness(105%);\n  }\n`\n\nconst notUsableCss = css`\n  &:hover {\n    cursor: default;\n  }\n`\n\nexport const DateItem = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tbackground: ${props => props.theme.bg.tertiary};\n\tborder-radius: 0.2rem;\n    width: fit-content;\n    position: relative;\n    min-width: 10rem;\n    \n    padding: .5rem 1rem;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n  \n  ${props => props.usable ? usableCss : notUsableCss};\n`\n\nexport const DateText = styled.span`\n\n`","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport * as styled from './calendar_placeholder_button.style'\n\nconst CalendarPlaceholderButton = (props) => {\n\n\tconst {\n\t\tusable,\n\t\tonClick,\n\t\tlabel,\n\t\tcontainerStyle\n\t} = props\n\n\treturn (\n\t\t<styled.DateItem\n\t\t\tusable={usable}\n\t\t\tonClick={onClick}\n\t\t\tstyle={containerStyle}\n\t\t>\n\t\t\t<styled.DateText>{label}</styled.DateText>\n\t\t</styled.DateItem>\n\t);\n};\n\nCalendarPlaceholderButton.propTypes = {\n\tusable: PropTypes.bool,\n\tlabel: PropTypes.string,\n\tonClick: PropTypes.func,\n};\n\nCalendarPlaceholderButton.defaultProps = {\n\tusable: true,\n\tlabel: \"\",\n\tonClick: () => {},\n};\n\nexport default CalendarPlaceholderButton;\n","import styled, {css} from \"styled-components\";\n\nexport const lastItemCss = css`\n  border: none;\n`\nexport const Row = styled.div`\n    display: flex;\n    width: 100%;\n    justify-content: space-between;\n    padding: .25rem 0 .25rem 0;\n  \n  \t${props => props.isLast && lastItemCss};\n`\n\nexport const Label = styled.span`\n    font-size: ${props => props.theme.fontSize.sz4};\n    font-weight: 600;\n\tcolor:  ${props => props.theme.bg.septenary};\n\tfont-family: ${props => props.theme.font.primary};\n`\n\nexport const DatesContainer = styled.span`\n\tdisplay: inline-flex;\n\talign-items: center;\n\tjustify-content: center;\n    width: fit-content;\n    \n`\n\nexport const DateItem = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: center;\n\n\t\n\t&:hover {\n\t\tcursor: pointer;\n\t}\n\t\n`\n\nexport const DateText = styled.span`\ncolor:  ${props => props.theme.bg.septenary};\nfont-size: ${props => props.theme.fontSize.sz4};\nfont-family: ${props => props.theme.font.primary};\n`\n\nexport const DateArrow = styled.i`\n\tmargin-left: .35rem;\n\tmargin-right: .35rem;\n\tcolor: ${props => props.theme.bg.secondary};\n\t// font-family: ${props => props.theme.font.primary};\n`","import React, { useEffect, useState } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport * as styled from \"./lot_date_range_row.style\";\nimport { isArray } from \"../../../../../../methods/utils/array_utils\";\nimport { dateRangeToStrings } from \"../../../../../../methods/utils/card_utils\";\nimport { capitalizeFirstLetter } from '../../../../../../methods/utils/string_utils'\n\nconst LotDateRangeRow = (props) => {\n\n    const {\n        dateRange,\n        label,\n        isLast,\n        defaultStartText,\n        defaultEndText,\n        labelStyle,\n        dateStyle,\n    } = props\n\n    const [startDateText, setStartDateText] = useState(\"Start\")\n    const [endDateText, setEndDateText] = useState(\"End\")\n\n    useEffect(() => {\n        const [tempStartDateText, tempEndDateText] = dateRangeToStrings(dateRange)\n        setStartDateText(tempStartDateText)\n        setEndDateText(tempEndDateText)\n    }, [dateRange])\n\n    return (\n        <styled.Row isLast={isLast}>\n            <styled.Label style={labelStyle}>{capitalizeFirstLetter(label)}</styled.Label>\n            <styled.DatesContainer>\n                <styled.DateItem>\n                    <styled.DateText style={dateStyle}>{startDateText ? startDateText : defaultStartText}</styled.DateText>\n                </styled.DateItem>\n\n                <styled.DateArrow className=\"fas fa-arrow-right\"></styled.DateArrow>\n\n                <styled.DateItem>\n                    <styled.DateText style={dateStyle}>{endDateText ? endDateText : defaultEndText}</styled.DateText>\n                </styled.DateItem>\n            </styled.DatesContainer>\n        </styled.Row>\n    );\n};\n\nLotDateRangeRow.propTypes = {\n\n};\n\nLotDateRangeRow.defaultProps = {\n    defaultStartText: \"Start\",\n    defaultEndText: \"End\",\n};\n\n\n\nexport default LotDateRangeRow;\n","import styled, {css} from \"styled-components\";\n\nexport const lastItemCss = css`\n  border: none;\n`\nexport const Row = styled.div`\n    display: flex;\n    width: 100%;\n    justify-content: space-between;\n    padding: .25rem 0 .25rem 0;\n  \n  \t${props => props.isLast && lastItemCss};\n`\n\nexport const Label = styled.span`\n    font-size: ${props => props.theme.fontSize.sz4};\n    font-weight: 600;\n\tcolor:  ${props => props.theme.bg.septenary};\n\tfont-family: ${props => props.theme.font.primary};\n`\n\nexport const DatesContainer = styled.span`\n\tdisplay: inline-flex;\n\talign-items: center;\n\tjustify-content: center;\n    width: fit-content;\n    \n`\n\nexport const DateItem = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: center;\n\n\t\n\t&:hover {\n\t\tcursor: pointer;\n\t}\n\t\n`\n\nexport const DateText = styled.span`\ncolor:  ${props => props.theme.bg.septenary};\nfont-size: ${props => props.theme.fontSize.sz4};\nfont-family: ${props => props.theme.font.primary};\n`\n\nexport const DateArrow = styled.i`\n\tmargin-left: .35rem;\n\tmargin-right: .35rem;\n\tcolor: ${props => props.theme.bg.tertiary};\n`","import React, { useEffect, useState } from 'react'\n\n// functions external\nimport PropTypes from 'prop-types'\n\n// styles\nimport * as styled from \"./lot_date_row.style\"\n\n// utils\nimport { jsDateToString } from \"../../../../../../methods/utils/card_utils\"\nimport { capitalizeFirstLetter } from '../../../../../../methods/utils/string_utils'\n\nconst LotDateRow = (props) => {\n\n    const {\n        date,\n        label,\n        isLast,\n        defaultDateText,\n        labelStyle,\n        dateStyle,\n    } = props\n\n    const [dateText, setDateText] = useState(\"Date\")\n\n    useEffect(() => {\n        setDateText(jsDateToString(date))\n    }, [date])\n\n    return (\n        <styled.Row isLast={isLast}>\n            <styled.Label style={labelStyle}>{capitalizeFirstLetter(label)}</styled.Label>\n\n            <styled.DateItem>\n                <styled.DateText style={dateStyle}>{dateText ? dateText : defaultDateText}</styled.DateText>\n            </styled.DateItem>\n        </styled.Row>\n    )\n}\n\nLotDateRow.propTypes = {\n    defaultDateText: PropTypes.string\n}\n\nLotDateRow.defaultProps = {\n    defaultDateText: \"Date\",\n}\n\nexport default LotDateRow\n","import styled, { css } from \"styled-components\";\nimport { commonClickableIcon, commonIcon, glow, iconButtonCss } from \"../../../../../../common_css/common_css\";\n\nexport const FlagButton = styled.button`\n\t  ${iconButtonCss};\n  \t${commonClickableIcon};\n  \tmargin: 0.2rem 0.5rem;\n    list-style: none;\n    font-size: 1.5rem;\n    cursor: pointer !important;\n`\n\nexport const FlagsContainer = styled.div`\n    display: flex;\n    padding: 0.5rem 0.2rem;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n`","import React, { useState, useEffect } from 'react'\n\n// Import Styles\nimport * as styled from './lot_flags.style'\n\n// constants\nimport { FLAG_OPTIONS } from \"../../../../../../constants/lot_contants\"\nimport PropTypes from \"prop-types\";\n\nconst LotFlags = (props) => {\n\n    const {\n        flags,\n        containerStyle,\n    } = props\n\n    return (\n        <styled.FlagsContainer\n            style={{\n                padding: 0,\n                margin: '0.5rem 0',\n                flexDirection: 'row',\n                flexWrap: 'wrap',\n                width: 'fit-content',\n                justifyContent: 'flex-start',\n                ...containerStyle\n            }}\n        >\n            {flags.length > 0 ?\n                <>\n                    {flags.map((currFlagId) => {\n                        const flagOption = FLAG_OPTIONS[currFlagId]\n                        const {\n                            color: currColor\n                        } = flagOption\n\n                        return (\n                            <styled.FlagButton\n                                key={currFlagId}\n                                type={\"button\"}\n                                selected={true}\n                                color={currColor}\n                                className=\"fas fa-square\"\n                                style={{\n                                    margin: \"0 .55rem\",\n                                    padding: 0,\n                                    fontSize: \"1rem\",\n                                    transform: 'scaleX(2)'\n                                }}\n                            />\n                        )\n                    })\n\n                    }\n\n                </>\n                :\n                <styled.FlagButton\n                    type={\"button\"}\n                    selected={true}\n                    color={'rgba(0, 0, 0, 0.3)'}\n                    className=\"fas fa-square\"\n                    style={{\n                        margin: \"0 .55rem\",\n                        padding: 0,\n                        fontSize: \"1rem\",\n                        transform: 'scaleX(2)'\n                    }}\n                />\n            }\n        </styled.FlagsContainer>\n    )\n}\n\n// Specifies propTypes\nLotFlags.propTypes = {\n    flags: PropTypes.array\n}\n\n// Specifies the default values for props:\nLotFlags.defaultProps = {\n    flags: [],\n}\n\nexport default LotFlags","import styled, {css} from 'styled-components'\n\nexport const Container = styled.button`\n  transition: all 0.2s ease;\n  \n  align-self: stretch;\n  padding: 0 1rem;\n  background: ${props => props.theme.bg.secondary};\n  width: 3.5rem;\n  border: none;\n  border-left: 1px solid ${props => props.theme.bg.quaternary};\n  //border-bottom: 1px solid ${props => props.theme.bg.quinary};\n  outline: none !important;\n  \n  color: ${props => props.theme.textColor};\n\n  &:active {\n    border-bottom: 1px solid ${props => props.theme.schema[props.schema].solid};\n    color: ${props => props.theme.schema[props.schema].solid};\n  }\n  \n  ${props => props.css && props.css};\n`\n\nexport const Icon = styled.i`\n  transition: all 0.2s ease;\n  transition: ${props => `transform ${props.rotationTime}ms ease`};\n  ${props => props.rotate && `transform: rotate(180deg)`};\n  \n  ${props => props.css && props.css};\n`","import React, {useState, useEffect} from 'react'\nimport PropTypes from 'prop-types'\n\n// styles\nimport * as styled from \"./rotate_button.style\"\n\n// component constant\nconst STATES = {\n\tSTATE_ONE: \"STATE_ONE\",\n\tSTATE_TWO: \"STATE_TWO\"\n}\n\nconst RotateButton = props => {\n\tconst {\n\t\ticonName1,\n\t\trotationTime,\n\t\tonStateOne,\n\t\tonStateTwo,\n\t\tcontainerCss,\n\t\ticonCss,\n\t\tschema\n\t} = props\n\n\tconst [currentState, setCurrentState] = useState(STATES.STATE_ONE)\t// rotation state\n\tconst [rotate, setRotate] = useState(false)\n\n\n\t/*\n\t* sets rotate when currentState changes and calls appropriate callback funcs\n\t* */\n\tuseEffect(() => {\n\t\tif(currentState === STATES.STATE_ONE) {\n\t\t\tsetRotate(false)\n\t\t\tonStateOne()\n\n\t\t}\n\t\telse {\n\t\t\tsetRotate(true)\n\t\t\tonStateTwo()\n\t\t}\n\t}, [currentState])\n\n\treturn (\n\t\t<styled.Container\n\t\t\tcss={containerCss}\n\t\t\tschema={schema}\n\t\t\tonClick={() => {\n\t\t\t\tsetCurrentState(currentState === STATES.STATE_ONE ? STATES.STATE_TWO : STATES.STATE_ONE)\n\t\t\t}}\n\t\t>\n\t\t\t<styled.Icon\n\t\t\t\tschema={schema}\n\t\t\t\tcss={iconCss}\n\t\t\t\trotate={rotate}\n\t\t\t\trotationTime={rotationTime}\n\t\t\t\tclassName={iconName1}\n\t\t\t>\n\t\t\t</styled.Icon>\n\t\t</styled.Container>\n\t)\n}\n\nRotateButton.propTypes = {\n\ticonName1: PropTypes.string,\n\trotationTime: PropTypes.number,\n\tonStateOne: PropTypes.func,\n\tonStateTwo: PropTypes.func,\n}\n\nRotateButton.defaultProps = {\n\ticonName1: \"\",\n\trotationTime: 500,\n\tonStateOne: () => {},\n\tonStateTwo: () => {},\n\tschema: \"default\"\n}\n\nexport default RotateButton\n","import styled, {css} from \"styled-components\";\n\nexport const buttonViewCss = css`\n\t// border-right: ${props => !props.isLast && `solid ${props.theme.bg.quaternary} thin`}; // dont show border on last item\n\tcolor: ${props => props.theme.bg.quinary};\n\tpadding: 0;\n\tmargin: 0;\n\tpadding-left: .5rem;\n\tpadding-right: .5rem;\n\tfont-size: ${props => props.theme.fontSize.sz3};\n\tfont-family: ${props => props.theme.font.primary};\n`\n\nexport const ObjectLabel = styled.span`\n\tdisplay: inline-flex;\n\tmargin-right: 1rem;\n\tfont-family: ${props => props.theme.font.primary};\n\tfont-weight: bold;\n  align-items: center;\n  text-align: center;\n`\n\nexport const buttonGroupContainerCss = css`\n\tdisplay: flex;\n\tflex-direction: row;\n\talign-self: center;\n\tpadding: 0;\n\t//margin: 0 0 1rem 0;\n  width: fit-content;\n  \n\t\n`\n\nexport const buttonViewSelectedCss = css`\n\tbackground: transparent;\n\tcolor: ${props => props.theme.schema[\"lots\"].solid};\n`\n\nexport const buttonCss = css`\n\tmargin: 0;\n\tpadding: 0;\n  \n\t\n\t&:focus{\n\t}\n\t\n\t&:active{\n\t}\n\t\n\t&:hover{\n\t\tcursor: default;\n\t}\n\t\n`\n\nconst fieldValueCss = css`\n /* background-color: ${props => props.theme.bg.secondary}; */\n  border: none;\n  font-size: ${props => props.theme.fontSize.sz4};\n  font-family: ${props => props.theme.font.primary};\n  font-weight: bold;\n  white-space: nowrap;\n  \n  flex-grow: 1;\n  color: ${props => props.theme.textColor};\n\n  /* box-shadow: 0 0.1rem 0.2rem 0rem rgba(0,0,0,0.1) !important; */\n  /* border-bottom: 2px solid ${props => props.theme.bg.secondary}; */\n  \n  cursor: default;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nconst rowCss2 = css`\n  display: flex;\n  align-items: center;\n`\n\nexport const RowContainer = styled.div`\n\t${rowCss2};\n`\n\nexport const LotNumber = styled.div`\n\t${fieldValueCss};\n\t\n\tpadding: 0 2rem;\n`\n\nexport const NameContainer = styled.div`\n  align-self: stretch;\n  padding: 1rem 1rem 1rem 0;\n\tbackground: ${props => props.theme.bg.primary};\n  flex-direction: column;\n\tflex: 1;\n  //align-self: center;\n  display: flex;\n  align-items: flex-start;\n  margin: 0.5rem 2rem;\n`\n\nexport const FieldsHeader = styled.div`\n  align-self: stretch;\n\tdisplay: flex;\n  //padding: 1rem;\n  flex-direction: column;\n\t//justify-content: space-between;\n\twidth: 100%;\n  \t//margin-bottom: 1rem;\n  border-bottom: 2px solid ${props => props.theme.bg.secondary};\n\t//padding: 1rem;\n`\n\nexport const FieldLabel = styled.span`\n\tfont-size: ${props => props.theme.fontSize.sz3};\n\tfont-weight: ${props => props.theme.fontWeight.bold};\n\tfont-family: ${props => props.theme.font.primary};\n\twhite-space: nowrap ;\n\tmargin-right: 2rem;\n\tmargin-bottom: .5rem;\n`\n\nexport const FieldTitle = styled.span`\n  font-size: ${props => props.theme.fontSize.sz3};\n  font-weight: ${props => props.theme.fontWeight.bold};\n  font-family: ${props => props.theme.font.primary};\n  align-self: center;\n`\n\n","import React, {useContext} from 'react';\nimport PropTypes from 'prop-types';\nimport * as styled from \"./lot_editor_main_content.style\";\nimport * as sharedStyles from \"../lot_editor.style\";\nimport LotFields from \"../lot_fields/lot_fields\";\nimport {isArray} from \"../../../../../../../methods/utils/array_utils\";\nimport {FORM_MODES} from \"../../../../../../../constants/scheduler_constants\";\nimport ButtonGroup from \"../../../../../../basic/button_group/button_group\";\nimport {formatLotNumber, getDisplayName} from \"../../../../../../../methods/utils/lot_utils\";\nimport {\n    DEFAULT_COUNT_DISPLAY_NAME,\n    DEFAULT_NAME_DISPLAY_NAME,\n    SIDE_BAR_MODES\n} from \"../../../../../../../constants/lot_contants\";\nimport NumberField from \"../../../../../../basic/form/number_field/number_field\";\nimport LabeledButton from \"../labeled_button/labeled_button\";\nimport WobbleButton from \"../../../../../../basic/wobble_button/wobble_button\";\nimport TextField from \"../../../../../../basic/form/text_field/text_field\";\nimport Textbox from \"../../../../../../basic/textbox/textbox\";\nimport NumberInput from \"../../../../../../basic/number_input/number_input\";\nimport {ThemeContext} from \"styled-components\";\n\nconst LotEditorMainContent = (props) => {\n\n    const {\n        fields,\n        formMode,\n        buttonGroupNames,\n        lotTemplate,\n        buttonGroupIds,\n        binId,\n        setBinId,\n        lotNumber,\n        content,\n        preview,\n    } = props\n\n    const themeContext = useContext(ThemeContext)\n\n    // renders main content\n    const renderMainContent = () => {\n        return(\n            <>\n                <styled.FieldsHeader>\n\n                    <styled.RowContainer>\n                        <styled.NameContainer style={{flex: 0}}>\n                            <styled.FieldLabel>Lot Number</styled.FieldLabel>\n                            <styled.LotNumber>{formatLotNumber(lotNumber)}</styled.LotNumber>\n                        </styled.NameContainer>\n\n                        <styled.NameContainer>\n                            <styled.FieldLabel>{getDisplayName(lotTemplate, \"name\", DEFAULT_NAME_DISPLAY_NAME)}</styled.FieldLabel>\n                            {preview ?\n                                <Textbox\n                                    style={{alignSelf: 'stretch'}}\n                                />\n                                :\n                                <TextField\n                                    disabled={content !== null}\n                                    inputStyle={content !== null ? {\n                                        background: \"transparent\",\n                                        border: \"none\",\n                                        boxShadow: \"none\",\n\n                                    } : {}}\n                                    style={content !== null ? {\n                                        background: \"transparent\",\n                                        border: \"none\",\n                                        boxShadow: \"none\",\n                                    } : {}}\n                                    name={\"name\"}\n                                    type={\"text\"}\n                                    placeholder={\"Enter name...\"}\n                                    InputComponent={Textbox}\n                                    schema={\"lots\"}\n                                />\n                            }\n                        </styled.NameContainer>\n                    </styled.RowContainer>\n                </styled.FieldsHeader>\n\n                <sharedStyles.SectionContainer>\n                    <sharedStyles.TheBody>\n                        <LotFields\n                            preview={preview}\n                            fields={fields}\n                        />\n                    </sharedStyles.TheBody>\n                </sharedStyles.SectionContainer>\n                <sharedStyles.BodyContainer>\n                    {formMode === FORM_MODES.UPDATE &&\n                    <div\n                        style={{\n                            display: \"flex\",\n                            flexDirection: \"column\",\n                            marginBottom: \"2rem\",\n                        }}\n                    >\n                        <styled.FieldTitle>Station</styled.FieldTitle>\n\n                        <ButtonGroup\n                            buttonViewCss={styled.buttonViewCss}\n                            buttons={buttonGroupNames}\n                            selectedIndex={buttonGroupIds.findIndex((ele) => ele === binId)}\n                            onPress={(selectedIndex)=>{\n                                setBinId(buttonGroupIds[selectedIndex])\n                                // setFieldValue(\"selectedBin\", buttonGroupIds[selectedIndex])\n                                // setSelectedBin(availableBins[selectedIndex])\n                            }}\n                            containerCss={styled.buttonGroupContainerCss}\n                            buttonViewSelectedCss={styled.buttonViewSelectedCss}\n                            buttonCss={styled.buttonCss}\n                        />\n                    </div>\n                    }\n\n                    <div style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\"}}>\n                        <sharedStyles.ObjectInfoContainer>\n                            <styled.ObjectLabel>{getDisplayName(lotTemplate, \"count\", DEFAULT_COUNT_DISPLAY_NAME)}</styled.ObjectLabel>\n                            {preview ?\n                                <NumberInput\n                                    themeContext={themeContext}\n                                />\n                                :\n                                <NumberField\n                                    minValue={1}\n                                    name={`bins.${binId}.count`}\n                                />\n                            }\n\n                        </sharedStyles.ObjectInfoContainer>\n                    </div>\n                </sharedStyles.BodyContainer>\n            </>\n        )\n    }\n\n    return (\n        renderMainContent()\n    );\n};\n\nLotEditorMainContent.propTypes = {\n\n};\n\nLotEditorMainContent.defaultProps = {\n    buttonGroupNames: [],\n    buttonGroupIds: [],\n    lotNumber: 1\n};\n\n\nexport default LotEditorMainContent;\n","import styled, { css } from 'styled-components'\n\nimport { hexToRGBA, RGB_Linear_Shade, LightenDarkenColor } from '../../../../../../methods/utils/color_utils';\nimport { borderGlowCss, ContainerCss, conditionTextCss } from \"../dashboard_buttons.style\"\n\n\nconst ButtonStyle = css`\n    height: 100%;\n    outline: none;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    &:focus {\n      outline: none;\n    }\n    padding: 0;\n    margin: 0;\n    letter-spacing: 1.5px;\n    border: none;\n    transition: all 0.1s ease 0s;\n    cursor: pointer;\n    outline: none;\n    \n    ${props => props.clickable && !props.disabled &&\n        `&:active {\n            background: ${`linear-gradient(180deg, \n                ${LightenDarkenColor(props.background, -20)} 0%, \n                ${props.background} 50%, \n                ${LightenDarkenColor(props.background, 20)} 100%)`\n        }\n        }`\n    }\n    \n    ${props => props.disabled &&\n    {\n        color: props.theme.bg.quaternary,\n        background: `linear-gradient(180deg, rgba(255,255,255,0.4) 0%, rgba(255,255,255,0.4) 100%), ${LightenDarkenColor(props.background, -60)}`,\n        pointerEvents: \"none\",\n    }\n    }\n    \n`\n\nexport const Header = styled.div`\n    margin: 0;\n    padding: 0;\n    width: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 1.5rem;\n`\n\nexport const ContentContainer = styled.div`\n    display: flex;\n    flex: 2;\n    width: 100%;\n    overflow: hidden;\n`\n\nexport const RobotButton = styled.div`\n    flex: 3;\n    ${ButtonStyle};\n    justify-content: space-around;\n    align-items: center;\n    background: rgba(0,0,0,0);\n    display: flex;\n    flex-direction: column;\n\n`\n\nexport const HumanButton = styled.button`\n    ${ButtonStyle};\n    flex: 1;\n    border-left: 1px solid ${props => props.theme.bg.secondary};\n    background: ${props => `linear-gradient(180deg, \n                            ${LightenDarkenColor(props.background, -40)} 0%, \n                            ${LightenDarkenColor(props.background, -50)} 50%, \n                            ${LightenDarkenColor(props.background, -60)} 100%)`};\n`\n\nexport const Container = styled.button`\n    ${ContainerCss};\n    \n    // flex layout\n    flex-direction: row;\n    \n    box-shadow: 0 9px 2px -4px ${props => LightenDarkenColor(props.theme.bg.secondary, -50)}; \n    height: 4rem; \n    // line-height: 4rem; \n    margin-bottom: 1rem; \n    flex-grow: 1;\n\n    padding: 0;\n    padding-left: 0.5rem;\n\n    &:active{\n        box-shadow: none;\n        filter: brightness(85%);\n    }\n  \n\n`\n\nexport const ConditionText = styled.span`\n${conditionTextCss};\n\nflex-grow: 1;\n`\n\nexport const IconContainer = styled.div`\n    position: absolute;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    width: 10.75rem;\n`","import React, { useStat, useContext } from 'react';\nimport useWindowSize from '../../../../../../hooks/useWindowSize';\nimport PropTypes from 'prop-types';\n\n// import components\nimport ErrorTooltip from \"../../../../../basic/form/error_tooltip/error_tooltip\";\nimport { SchemaIcon } from \"../dashboard_button/dashboard_button.style\";\n\n// Import Styles\nimport * as style from './dashboard_split_button.style'\nimport { ThemeContext } from 'styled-components'\nimport * as dashboard_buttons_style from '../dashboard_buttons.style'\n\n// import logging\nimport log from '../../../../../../logger'\nimport { DEVICE_CONSTANTS } from \"../../../../../../constants/device_constants\";\n\nconst logger = log.getLogger(\"Dashboards\", \"EditDashboard\");\n\nconst widthBreakPoint = 1000;\n\nconst DashboardSplitButton = (props => {\n    const {\n        color,\n        title,\n        children,\n        onClick,\n        taskID,\n        disabled,\n        width,\n        height,\n        clickable,\n        hoverable,\n        containerStyle,\n        containerCss,\n        error,\n        iconColor,\n        type\n    } = props\n\n    const theme = useContext(ThemeContext);\n\n    const size = useWindowSize()\n    const windowWidth = size.width\n\n    const mobileMode = windowWidth < widthBreakPoint;\n\n    return (\n        <div style={{ display: 'flex', position: 'relative', flexDirection: 'row', minWidth: '80%', width: '100%' }}>\n            <style.Container\n                type={\"button\"}\n                disabled={disabled}\n                height={height}\n                clickable={clickable}\n                hoverable={hoverable}\n                background={color}\n                borderGlow={taskID === 'hil_success'}\n                style={{ ...containerStyle, maxWidth: '20%', alignText: 'center', marginRight: '0.5rem' }}\n                css={containerCss}\n                onClick={clickable ? () => onClick(DEVICE_CONSTANTS.HUMAN) : null}\n            >\n                <div style={{ flexGrow: '1', display: 'flex', alignItems: 'center', alignContent: 'center', justifyContent: 'center', height: '100%' }}>\n                    <SchemaIcon className={\"fas fa-user\"} color={iconColor} style={{ margin: '0' }}></SchemaIcon>\n                    {!mobileMode &&\n                        <style.ConditionText style={{flexGrow: '0', marginLeft: '0.5rem'}}>Run as worker</style.ConditionText>\n                    }\n                </div>\n            </style.Container>\n\n            <style.Container\n                type={\"button\"}\n                disabled={disabled}\n                width={width}\n                height={height}\n                clickable={clickable}\n                hoverable={hoverable}\n                background={color}\n                borderGlow={taskID === 'hil_success'}\n                style={containerStyle}\n                css={containerCss}\n                onClick={clickable ? () => onClick(DEVICE_CONSTANTS.MIR_100) : null}\n            >\n\n                <style.ConditionText style={null}>{title}</style.ConditionText>\n\n                <>\n                    <svg viewBox=\"0 0 300 67\" fill={theme.bg.primary} height='100%' width=\"12rem\" preserveAspectRatio=\"none\" style={{ minWidth: '12rem' }}>\n                        <path d=\"M300,8v51c0,4.4-3.6,8-8,8H8.8L63.5,0H292C296.4,0,300,3.6,300,8z\" />\n                    </svg>\n                    <style.IconContainer>\n                        <SchemaIcon className={\"icon-cart\"} style={{ fontSize: \"1rem\" }} color={iconColor}></SchemaIcon>\n                    </style.IconContainer>\n                </>\n                {/* <style.RobotButton\n                    background={color}\n                    clickable={clickable}\n                    onClick={clickable ? () => onClick(taskID, DEVICE_CONSTANTS.MIR_100) : null}\n\n                >\n                    \n                    \n                </style.RobotButton> */}\n\n\n\n                {/* {children && children}\n                <ErrorTooltip\n                    visible={error}\n                    text={error}\n                    ContainerComponent={dashboard_buttons_style.ErrorContainerComponent}\n                /> */}\n            </style.Container>\n        </div>\n    )\n})\n\n// Specifies propTypes\nDashboardSplitButton.propTypes = {\n    clickable: PropTypes.bool,\n    hoverable: PropTypes.bool,\n    title: PropTypes.string,\n    taskID: PropTypes.string,\n    onClick: PropTypes.func,\n    disabled: PropTypes.bool\n};\n\n// Specifies the default values for props:\nDashboardSplitButton.defaultProps = {\n    clickable: true,\n    hoverable: true,\n    title: \"\",\n    taskID: \"\",\n    onClick: () => { },\n    disabled: false\n\n};\n\nexport default (DashboardSplitButton)\n","import styled from 'styled-components';\nimport TimePicker from 'rc-time-picker';\nimport {css} from 'styled-components'\n\nexport const DefaultLabelComponent = styled.label`\n`;\n\nexport const DefaultFieldContainer = styled.div`\n`;\n\nexport const DefaultContentContainer = styled.div`\n    flex-direction: row;\n    align-items: center;\n    width: 100%;\n    position: relative;\n    display: flex;\n`;\n\nexport const DefaultInputContainer = styled.div`\n    // width: 90%;\n    flex: 1;\n    align-items: center;\n    margin: 0;\n    padding: 0;\n    position: relative;\n   \n`;\n\nexport const DefaultInputComponent = styled.input`\n    //  background: ${props =>  props.hasError && props.theme.bad};\n`;\n\nexport const IconContainerComponent = styled.div`\n    width: auto;\n    height: auto;\n    position: absolute;\n    top: 50%;\n    right: 1rem;\n    transform: translateY(-50%);\n    margin: 0;\n    padding: 0;\n    // background: magenta;\n    \n    ${props => props.iconContainerCss};\n    \n`;\n\n","import React, { useContext, useEffect } from \"react\";\nimport PropTypes from 'prop-types';\nimport { useField, useFormikContext } from \"formik\";\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport ErrorTooltip from '../error_tooltip/error_tooltip';\nimport useChange from '../../../basic/form/useChange'\nimport * as styled from './text_field.style'\nimport { getMessageFromError } from \"../../../../methods/utils/form_utils\";\n\nimport { pageDataChanged } from '../../../../redux/actions/sidebar_actions'\nimport { ThemeContext } from \"styled-components\";\n\n\nconst TextField = ({\n    InputComponent,\n    ErrorComponent,\n    LabelComponent,\n    InputContainer,\n    fieldLabel,\n    onBlur,\n    onFocus,\n    onChange,\n    inputStyleFunc,\n    IconContainerComponent,\n    ContentContainer,\n    inputContainerStyle,\n    errorTooltipContainerStyle,\n    showErrorStyle,\n    containerStyle,\n    FieldContainer,\n    mapInput,\n    mapOutput,\n    inputProps,\n    style,\nform,\n    ...props }) => {\n\n    const { setFieldValue, setFieldTouched, validateOnChange, validateOnBlur, validateField, status, validateForm, ...context } =  useFormikContext() || {}\n    const [field, meta] = useField(props);\n    const { touched, error } = meta\n    const {\n        name: fieldName\n    } = field\n\n    const {\n        warnings\n    } = status || {}\n\n    const {\n        [fieldName]: warning\n    } = warnings || {}\n\n    const themeContext = useContext(ThemeContext)\n\n    const hasError = touched && error\n    const hasWarning = touched && warning\n\n    const errorMessage = getMessageFromError(error)\n    const warningMessage = getMessageFromError(warning)\n\n    return (\n        <>\n            {fieldLabel &&\n                <LabelComponent hasError={hasError} htmlFor={props.id || props.name}>{fieldLabel}</LabelComponent>\n            }\n            <ContentContainer style={containerStyle}>\n                <InputContainer>\n                    <InputComponent\n                        className='form-control'\n                        {...field}\n                        {...inputProps}\n                        {...props}\n\n                        style={{ ...style}}\n                        inputStyle={{\n                            ...props.inputStyle,\n                            boxShadow:  (hasError && showErrorStyle) && `0 0 5px red`,\n                            border: (hasError && showErrorStyle) && \"1px solid red\",\n                        }}\n                        value={mapInput(field.value)}\n                        onChange={(event) => {\n                            // update touched if necessary\n                            if (!touched) {\n                                setFieldTouched(fieldName, true)\n                            }\n\n                            setFieldValue(fieldName, mapOutput(event.target.value)) // update field value\n\n                            onChange(event) // call additional onChange prop if necessary\n                        }}\n                        // set field touched and call onBlur prop\n                        onBlur={(event) => {\n                            // update touched if necessary\n                            if (!touched) {\n                                setFieldTouched(fieldName, true)\n                            }\n\n                            // validateOnBlur && validateField(field.name) // validate if necessary\n                            // validateField(field.name) // validate if necessary\n\n                            onBlur(event) // call onBlur prop if passed\n                        }}\n                        tooltip={\n                            <ErrorTooltip\n                                visible={hasError || hasWarning}\n                                text={hasError ? errorMessage : hasWarning ? warningMessage : null}\n                                color={hasWarning && !hasError ? themeContext.warn : themeContext.bad}\n                                ContainerComponent={IconContainerComponent}\n                                containerStyle={errorTooltipContainerStyle}\n                            />\n                        }\n                    />\n\n                </InputContainer>\n\n            </ContentContainer>\n\n\n\n        </>\n    );\n};\n\n/* *\n*\n* Returns style for input component\n* Accepts hasError prop, which can be used to change styling based on presence of errors\n*\n* */\nconst defaultInputStyleFunc = (hasError, showErrorStyle) => {\n    return {\n        boxShadow:  hasError && `0 0 1px red !important`,\n        border: hasError && \"1px solid red\",\n\n    }\n}\n\n// Specifies propTypes\nTextField.propTypes = {\n    LabelComponent: PropTypes.elementType,\n    InputComponent: PropTypes.elementType,\n    InputContainer: PropTypes.elementType,\n    onBlur: PropTypes.func,\n    onFocus: PropTypes.func,\n    onChange: PropTypes.func,\n    inputStyleFunc: PropTypes.func,\n    fieldLabel: PropTypes.string,\n    IconContainerComponent: PropTypes.elementType,\n    ContentComponent: PropTypes.elementType,\n    style: PropTypes.object,\n    showErrorStyle: PropTypes.bool,\n};\n\n// Specifies the default values for props:\nTextField.defaultProps = {\n    LabelComponent: styled.DefaultLabelComponent,\n    InputComponent: styled.DefaultInputComponent,\n    InputContainer: styled.DefaultInputContainer,\n    onBlur: () => { },\n    onFocus: () => { },\n    onChange: () => { },\n    fieldLabel: \"\",\n    inputStyleFunc: defaultInputStyleFunc,\n    IconContainerComponent: styled.IconContainerComponent,\n    ContentContainer: styled.DefaultContentContainer,\n    FieldContainer: styled.DefaultFieldContainer,\n    style: {},\n    validateOnBlur: false,\n    showErrorStyle: false,\n    mapInput: (val) => val,\n    mapOutput: (val) => val,\n    form: true,\n};\n\nexport default TextField;\n","import {\n    SET_MODE,\n    SET_ACTION,\n    SET_WIDTH,\n    SET_OPEN,\n    PAGE_DATA_CHANGED, SET_CONFIRM_DELETE,\n    SHOW_LOT_SCAN_MODAL,\n} from '../types/sidebar_types'\n\nexport const setMode = (mode) => {\n    return { type: SET_MODE, payload: {mode}}\n}\n\nexport const setAction = (action) => {\n    return { type: SET_ACTION, payload: {action} }\n}\n\nexport const setWidth = (width) => {\n    return { type: SET_WIDTH, payload: width }\n}\n\nexport const setOpen = (state) => {\n    return { type: SET_OPEN, payload: state}\n}\n\nexport const pageDataChanged = (state) => {\n    return { type: PAGE_DATA_CHANGED, payload: state}\n}\n\nexport const setConfirmDelete = (show, callback) => {\n    return { type: SET_CONFIRM_DELETE, payload: {show, callback}}\n}\n\nexport const showLotScanModal = (show) => {\n    return { type: SHOW_LOT_SCAN_MODAL, payload: show }\n}\n","export const GET_OBJECTS = 'GET_OBJECTS'\nexport const GET_OBJECTS_STARTED = 'GET_OBJECTS_STARTED'\nexport const GET_OBJECTS_SUCCESS = 'GET_OBJECTS_SUCCESS'\nexport const GET_OBJECTS_FAILURE = 'GET_OBJECTS_FAILURE'\n\nexport const GET_OBJECT = 'GET_OBJECT'\nexport const GET_OBJECT_STARTED = 'GET_OBJECT_STARTED'\nexport const GET_OBJECT_SUCCESS = 'GET_OBJECT_SUCCESS'\nexport const GET_OBJECT_FAILURE = 'GET_OBJECT_FAILURE'\n\nexport const POST_OBJECT = 'POST_OBJECT'\nexport const POST_OBJECT_STARTED = 'POST_OBJECT_STARTED'\nexport const POST_OBJECT_SUCCESS = 'POST_OBJECT_SUCCESS'\nexport const POST_OBJECT_FAILURE = 'POST_OBJECT_FAILURE'\n\nexport const PUT_OBJECT = 'PUT_OBJECT'\nexport const PUT_OBJECT_STARTED = 'PUT_OBJECT_STARTED'\nexport const PUT_OBJECT_SUCCESS = 'PUT_OBJECT_SUCCESS'\nexport const PUT_OBJECT_FAILURE = 'PUT_OBJECT_FAILURE'\n\nexport const DELETE_OBJECT = 'DELETE_OBJECT'\nexport const DELETE_OBJECT_STARTED = 'DELETE_OBJECT_STARTED'\nexport const DELETE_OBJECT_SUCCESS = 'DELETE_OBJECT_SUCCESS'\nexport const DELETE_OBJECT_FAILURE = 'DELETE_OBJECT_FAILURE'\n\nexport const ADD_OBJECT = 'ADD_OBJECT'\nexport const UPDATE_OBJECT = 'UPDATE_OBJECT'\nexport const UPDATE_OBJECTS = 'UPDATE_OBJECTS'\nexport const REMOVE_OBJECT = 'REMOVE_OBJECT'\nexport const SET_OBJECT_ATTRIBUTES = 'SET_OBJECT_ATTRIBUTES'\nexport const VALIDATE_OBJECT = 'VALIDATE_OBJECT'\nexport const SELECT_OBJECT = 'SELECT_OBJECT'\nexport const SET_SELECTED_OBJECT = 'SET_SELECTED_OBJECT'\nexport const DESELECT_OBJECT = 'DESELECT_OBJECT'\nexport const SET_ROUTE_OBJECT = 'SET_ROUTE_OBJECT'\nexport const SET_EDITING_OBJECT = 'SET_EDITING_OBJECT'\n","import React from 'react'\n\nconst defaultWidgetPages = ['dashboards']\n\nexport const DeviceTypes = {\n\n    generic: {\n        icon: 'icon-rmLogo',\n        primaryColor: '#FF4B4B',\n        startGradientColor: '#FF4B4B',\n        stopGradientColor: '#ff2424',\n        svgPath: 'M195.33,232.27c1.06,1.43.51,2.6-1.24,2.6H172a7.18,7.18,0,0,1-5.09-2.6l-58.8-79.35h35.12a29.27,29.27,0,1,0,0-58.53H96.36V234.87H73V71h70.24a52.68,52.68,0,0,1,10,104.4ZM263.64,71.13,214.18,120.6l-14-14a1.35,1.35,0,0,0-.83-.29l-.21,0a1.29,1.29,0,0,0-1.09,1.28,1.1,1.1,0,0,0,0,.26s0,.09,0,.13a57.16,57.16,0,0,1,.65,28.85l0,.13a1.1,1.1,0,0,0,0,.26,1.33,1.33,0,0,0,.29.83,1.45,1.45,0,0,0,.18.17l.6.6,8.15,8.16h0l6.27,6.27,16.32-16.31,33.15-33.15V235h23.41V71.13Z',\n        widgetPages: defaultWidgetPages,\n    },\n\n    trident: {\n        icon: 'icon-trident',\n        primaryColor: '#d7841e',\n        startGradientColor: '#d7a31e',\n        stopGradientColor: '#d7841e',\n        svgPath: \"M171.27,213.07c-2.27-1-3-2.87-2.94-5.29.06-12.66,0-25.33,0-38v-2.61c-6,2.49-11.87,4.64-17.47,7.29a98.76,98.76,0,0,0-10.57,6.33c-1.52,1-3,1.62-4.73.73s-2.06-2.35-2.18-4.09c-1.64-23.93-5.32-47.51-12.67-70.41-4.15-13-9.45-25.4-17.78-36.34A56.17,56.17,0,0,0,90.15,58.17a15.14,15.14,0,0,1-2-1.55,3.57,3.57,0,0,1-.94-4,3.4,3.4,0,0,1,3.59-2.53,91.1,91.1,0,0,1,11.31,1.47,67.94,67.94,0,0,1,37.43,22.22c1.29,1.48,2.14,3,1.3,4.92s-2.53,2.45-4.49,2.37a10.46,10.46,0,0,0-1.11.06c7.69,22,14.86,44.08,17.35,67.37l15.7-5.31V73.57a43.06,43.06,0,0,0-4.71,2.35c-2.11,1.37-3.8,1.61-5.32.39s-1.91-2.94-.87-5.24q9.39-20.74,18.8-41.49a4,4,0,0,1,3.76-2.65,4,4,0,0,1,3.9,2.72Q193.19,50.32,202.57,71c1.08,2.39.75,4.12-.89,5.39s-3.17.91-5.32-.49a43.24,43.24,0,0,0-4.67-2.32V143.2l15.69,5.3c2.5-23.14,9.63-45.25,17.41-67.43-.78,0-1.37,0-1.95,0a3.8,3.8,0,0,1-3.72-2.42,3.89,3.89,0,0,1,.79-4.22A68.45,68.45,0,0,1,240,58.15a69.71,69.71,0,0,1,27.48-8.07c2.46-.2,4.39.37,5.61,2.64V54.9a27.37,27.37,0,0,1-3.28,3.27,59.26,59.26,0,0,0-12.89,12.7c-8.23,10.85-13.49,23.18-17.61,36-7.36,22.88-11,46.46-12.7,70.39-.12,1.79-.45,3.38-2.2,4.26s-3.32.15-4.89-.84c-3.41-2.18-6.82-4.39-10.4-6.28a89.42,89.42,0,0,0-17.47-6.79v2.17c0,12.66,0,25.32,0,38,0,2.42-.66,4.24-2.93,5.29Z\",\n        widgetPages: [...defaultWidgetPages, 'statistics'],\n    },\n    arm: {\n        icon: 'icon-arm',\n        primaryColor: '#1e9cd7',\n        startGradientColor: '#1e9cd7',\n        stopGradientColor: '#005b97',\n        svgPath: 'M173.7,172.2a22.64,22.64,0,1,1-22.64,22.64A22.64,22.64,0,0,1,173.7,172.2Zm.08-4L125.61,65.38A22.53,22.53,0,0,1,103.37,75.8l48.17,102.84a22.53,22.53,0,0,1,22.24-10.42ZM82,49.35a22.64,22.64,0,1,0,22.64-22.63A22.64,22.64,0,0,0,82,49.35ZM240.43,25,127.3,34.91a22.5,22.5,0,0,1,2.14,24.46l113.13-9.9A22.55,22.55,0,0,1,240.43,25Zm1.43,10.68a13.21,13.21,0,1,0,13.21-13.21A13.22,13.22,0,0,0,241.86,35.69ZM250,81.74a57.78,57.78,0,0,0,4.17,13.78,3.78,3.78,0,0,0,.17.35l8.11-1.42-2.61-14.76,6.92-1.22,2.61,14.75,8.1-1.42c0-.14,0-.27,0-.4A57.9,57.9,0,0,0,276.7,77a57.32,57.32,0,0,0-4.18-13.78l-2.61-14.83-23.34,4.12,2.62,14.83A57.43,57.43,0,0,0,250,81.74Zm11.36-.88,5.47,31,2.45,7.46,2.17-.39-.25-7.84-5.46-31Z',\n        widgetPages: [...defaultWidgetPages, 'statistics'],\n    },\n    cart: {\n        icon: 'icon-cart',\n        deviceFontSize: '2.5rem',\n        primaryColor: '#03ffa3',\n        startGradientColor: '#03ffa3',\n        stopGradientColor: '#00b673',\n        svgPath:\n            <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 400 400\">\n                <path d=\"M285,90a35,35,0,0,1-35-35,39.83,39.83,0,0,1,2.05-11.22A2.67,2.67,0,0,0,249.37,40H150.63A2.67,2.67,0,0,0,148,43.78,39.83,39.83,0,0,1,150,55a35,35,0,0,1-35,35,39.83,39.83,0,0,1-11.22-2A2.67,2.67,0,0,0,100,90.63V309.37a2.67,2.67,0,0,0,3.78,2.68A39.83,39.83,0,0,1,115,310a35,35,0,0,1,35,35A39.83,39.83,0,0,1,148,356.22a2.67,2.67,0,0,0,2.68,3.78h98.74a2.67,2.67,0,0,0,2.68-3.78A39.83,39.83,0,0,1,250,345a35,35,0,0,1,35-35,39.83,39.83,0,0,1,11.22,2.05,2.67,2.67,0,0,0,3.78-2.68V90.63A2.67,2.67,0,0,0,296.22,88,39.83,39.83,0,0,1,285,90ZM159.38,167a12.9,12.9,0,0,1,2.61-6.38l36.69-45.94a16.33,16.33,0,0,1,4.83-4.13c1.27-.55,5,2.41,6.42,4.13l36.69,45.94a12.9,12.9,0,0,1,2.61,6.38c.07,1.78-5,3.24-7.24,3.24H166.62C164.42,170.19,159.32,168.73,159.38,167ZM250,248.06a13,13,0,0,1-6.61,1.94H168a13,13,0,0,1-6.61-1.94c-1.44-1.07.6-6,2-7.69l36.69-45.93a16.64,16.64,0,0,1,4.82-4.14c1.28-.55,5.05,2.42,6.43,4.14L248,240.37C249.39,242.09,251.43,247,250,248.06Z\" />\n                <circle cx=\"115\" cy=\"55\" r=\"30\" />\n                <circle cx=\"285\" cy=\"55\" r=\"30\" />\n                <circle cx=\"115\" cy=\"345\" r=\"30\" />\n                <circle cx=\"285\" cy=\"345\" r=\"30\" />\n            </svg>,\n\n        widgetPages: defaultWidgetPages,\n    },\n    rmVision: {\n        icon: 'icon-rmVision',\n        primaryColor: '#eb008a',\n        startGradientColor: '#eb008a',\n        stopGradientColor: '#9e005d',\n        svgPath: \"M306.33,121.46a54.29,54.29,0,0,1-3.68,6.06c-17.81,22.3-38.44,41.43-63.28,55.73-16.35,9.41-33.78,15.74-52.75,17a105.48,105.48,0,0,1-44.93-7.08c-21.83-8.29-40.59-21.41-57.72-37a239.89,239.89,0,0,1-27.6-29.84c-3.59-4.6-3.61-8.11,0-12.69,17.93-22.74,38.79-42.24,64-56.77,19.78-11.41,40.89-18.3,64.05-17.27a112.79,112.79,0,0,1,45.15,12c29.9,14.68,53.82,36.52,74.31,62.41a31.48,31.48,0,0,1,2.47,4.5ZM72.5,119.81c.93,1.1,1.56,2,2.29,2.71,7.68,7.88,15,16.13,23.16,23.53C113.61,160.33,131,172,151.3,178.87a86,86,0,0,0,37.38,4.47c16.4-1.8,31.28-7.88,45.3-16.28,18.21-10.92,33.79-25,47.92-40.72,1.85-2.06,3.61-4.2,5.59-6.51-4.85-5.25-9.4-10.44-14.24-15.35C257,88,239,73.8,217.53,64.5A95,95,0,0,0,184,56.26c-17.93-.84-34.42,4.16-50.12,12.28-17.55,9.07-32.74,21.32-46.56,35.31C82.25,109,77.49,114.41,72.5,119.81Z M229.92,120.19c-.2,27.69-22.78,50-50.26,49.71a49.92,49.92,0,1,1,50.26-49.71Zm-16.65-.12A33.29,33.29,0,1,0,180,153.29,33.33,33.33,0,0,0,213.27,120.07Z M176.11,135.28h-4.3V141c0,1.28-.18,1.46-1.44,1.46h-5.2c0,.84,0,1.63,0,2.41,0,.13.21.28.35.38A2.37,2.37,0,1,1,162,148a2.33,2.33,0,0,1,1-2.71.76.76,0,0,0,.37-.77c0-.85,0-1.71,0-2.56s.26-1.24,1.27-1.25H170v-5.44h-4.24c-.71,0-1-.33-1-1,0-1.19,0-2.38,0-3.56V130h-5.4c0,.22,0,.43,0,.65v4.75c0,.91-.29,1.19-1.2,1.2h-1.63a2.2,2.2,0,0,0-2.14.79,2.23,2.23,0,0,1-3.37-.11,2.36,2.36,0,0,1,.32-3.43,2.29,2.29,0,0,1,3.35.49,1,1,0,0,0,1.08.52c.59,0,1.38.14,1.72-.17s.11-1.1.12-1.68c0-1.23,0-2.45,0-3.68,0-.85.28-1.12,1.14-1.12h6v-4.26a4.22,4.22,0,0,0-.49,0h-8.74a.76.76,0,0,0-.76.39,2.29,2.29,0,0,1-2.65,1,2.37,2.37,0,0,1,0-4.54,2.4,2.4,0,0,1,2.73,1,.76.76,0,0,0,.49.35c3.12,0,6.25,0,9.37,0,0,0,0,0,.09-.06v-4.19h-.51c-2.92,0-5.83,0-8.75,0a.75.75,0,0,0-.74.4,2.3,2.3,0,0,1-2.67,1,2.36,2.36,0,0,1,0-4.51,2.3,2.3,0,0,1,2.68.94.86.86,0,0,0,.85.45h9.16V111.8H164c-1.75,0-3.5,0-5.25,0-.94,0-1.2-.25-1.2-1.18,0-1.6,0-3.21,0-4.81,0-.52-.15-.72-.67-.66a3.66,3.66,0,0,1-.81,0,1.55,1.55,0,0,0-1.61.7,2.28,2.28,0,0,1-3.42.1,2.36,2.36,0,0,1,.09-3.41,2.31,2.31,0,0,1,3.42.29,1.25,1.25,0,0,0,1.23.59c.79,0,1.58,0,2.37,0s1.13.3,1.13,1.14c0,1.58,0,3.16,0,4.75V110h5.44v-3.35c0-1.91,0-1.91,1.91-1.91h3.19a.54.54,0,0,0,.16,0V99.31h-5.39c-.93,0-1.2-.27-1.21-1.18s0-1.8,0-2.69a1,1,0,0,0-.37-.67A2.46,2.46,0,0,1,162,92a2.4,2.4,0,0,1,2.28-1.64,2.36,2.36,0,0,1,2.25,1.67,2.41,2.41,0,0,1-1,2.72.81.81,0,0,0-.36.5c0,.72,0,1.45,0,2.24.27,0,.49,0,.71,0h4.68c1,0,1.25.24,1.26,1.26v5.9h4.27c0-.21,0-.41,0-.61,0-2.86,0-5.71,0-8.56a.86.86,0,0,0-.45-.85,2.28,2.28,0,0,1-1-2.62,2.36,2.36,0,0,1,4.53,0,2.41,2.41,0,0,1-1,2.69.93.93,0,0,0-.4.59q0,4.56,0,9.12c0,.08,0,.16,0,.27h4.24v-1.08c0-2.7,0-5.41,0-8.12a.8.8,0,0,0-.41-.8,2.3,2.3,0,0,1-1-2.67A2.39,2.39,0,0,1,183,90.38a2.36,2.36,0,0,1,2.29,1.7,2.43,2.43,0,0,1-1,2.68.94.94,0,0,0-.39.6c0,3,0,6.09,0,9.13a1.31,1.31,0,0,0,0,.22h4.23c0-.21,0-.43,0-.64V98.75c0-.93.26-1.19,1.2-1.19,1.56,0,3.12,0,4.68,0h.76c0-.83,0-1.6,0-2.36,0-.18-.27-.37-.46-.51a2.37,2.37,0,0,1,1.22-4.31,2.36,2.36,0,0,1,2.32,1.47,2.32,2.32,0,0,1-.89,2.86.8.8,0,0,0-.42.8c0,.87,0,1.75,0,2.62s-.29,1.17-1.16,1.17H190c0,.22-.05.36-.05.5v4.94c1,0,2,0,2.91,0,2.51,0,2.43-.1,2.4,2.43,0,.93,0,1.86,0,2.83h5.4c0-.23,0-.45,0-.67v-4.68c0-1,.27-1.25,1.27-1.25.8,0,1.59,0,2.38,0a1,1,0,0,0,1-.49A2.3,2.3,0,0,1,208,102a2.38,2.38,0,0,1,0,4.51,2.33,2.33,0,0,1-2.72-1,.76.76,0,0,0-.75-.41c-.66,0-1.33,0-2,0,0,.28,0,.5,0,.72v4.69c0,1-.25,1.23-1.22,1.23-1.75,0-3.5,0-5.25,0h-.69v4.28l.56,0h8.63a.8.8,0,0,0,.8-.41,2.29,2.29,0,0,1,2.66-1,2.37,2.37,0,0,1,0,4.54,2.41,2.41,0,0,1-2.69-1c-.12-.17-.35-.39-.54-.39-3.12,0-6.24,0-9.41,0v4.23c.16,0,.33,0,.51,0h8.69a.81.81,0,0,0,.79-.43,2.32,2.32,0,0,1,2.68-.95,2.37,2.37,0,0,1,0,4.52,2.28,2.28,0,0,1-2.63-.92,1,1,0,0,0-1-.49c-2.79,0-5.58,0-8.37,0h-.71v4.31H201c1.35,0,1.49.15,1.49,1.53v5.12c.84,0,1.6,0,2.37,0,.18,0,.36-.29.5-.48a2.37,2.37,0,0,1,4.31,1.24,2.39,2.39,0,0,1-1.48,2.32,2.3,2.3,0,0,1-2.81-.85.92.92,0,0,0-.91-.47c-.88,0-1.75,0-2.63,0s-1.09-.31-1.1-1.11c0-1.58,0-3.17,0-4.75V130h-5.44v3.93c0,1.08-.24,1.32-1.32,1.32h-4v5.41l.7,0h4.74c.89,0,1.17.28,1.18,1.15s0,1.8,0,2.69a1,1,0,0,0,.36.68,2.47,2.47,0,0,1,1,2.74,2.41,2.41,0,0,1-2.26,1.66,2.36,2.36,0,0,1-2.26-1.65,2.31,2.31,0,0,1,1-2.71.75.75,0,0,0,.39-.76c0-.66,0-1.32,0-2.06h-5.25c-1.19,0-1.4-.2-1.4-1.37v-5.78h-4.3v.58q0,4.29,0,8.56a.86.86,0,0,0,.44.86,2.3,2.3,0,0,1,1,2.67,2.37,2.37,0,0,1-4.52,0,2.41,2.41,0,0,1,.94-2.7c.19-.14.42-.39.42-.59,0-3.08,0-6.16,0-9.24a.68.68,0,0,0,0-.15h-4.19c0,.19,0,.37,0,.55,0,2.87,0,5.75,0,8.62a.87.87,0,0,0,.45.85,2.3,2.3,0,0,1,.95,2.63,2.37,2.37,0,0,1-4.52.05,2.27,2.27,0,0,1,.88-2.64,1,1,0,0,0,.51-1C176.1,141.34,176.11,138.34,176.11,135.28Zm17.34-1.81V106.55H166.53v26.92Zm-29.3-40h.27c.16-.23.41-.44.46-.69a.5.5,0,0,0-.59-.61.84.84,0,0,0-.57.57C163.7,93,164,93.22,164.15,93.46Zm13.72-.76c-.44-.26-.7-.55-.94-.53s-.49.37-.53.6a.49.49,0,0,0,.62.57C177.27,93.29,177.47,93,177.87,92.7Zm5.13-.82c-.28.4-.6.66-.56.85a1,1,0,0,0,.6.61.5.5,0,0,0,.57-.63C183.55,92.46,183.29,92.26,183,91.88Zm12.54,1.58h.27c.17-.22.5-.47.47-.66s-.36-.45-.57-.67c-.2.19-.55.37-.57.58S195.39,93.21,195.54,93.46ZM152.62,105h.27c.16-.23.48-.49.44-.67a.92.92,0,0,0-.6-.6c-.16,0-.54.35-.56.56S152.45,104.76,152.62,105Zm55.33-.53v-.3c-.24-.16-.49-.46-.72-.45a.81.81,0,0,0-.57.56.79.79,0,0,0,.53.58C207.43,104.88,207.7,104.61,208,104.47Zm-55.26,13.41c.32-.41.6-.6.65-.85a.49.49,0,0,0-.56-.63.84.84,0,0,0-.6.52C152.15,117.16,152.43,117.43,152.69,117.88Zm55.43-.87c-.38-.29-.57-.56-.82-.62a.5.5,0,0,0-.64.56.94.94,0,0,0,.6.61C207.45,117.6,207.71,117.29,208.12,117Zm-54.66,6.18v-.29c-.24-.17-.49-.47-.73-.46a.78.78,0,0,0-.56.56c0,.2.31.56.52.59S153.2,123.34,153.46,123.19Zm53.66.54h.27c.16-.23.48-.5.43-.68s-.38-.43-.6-.64c-.19.2-.54.4-.55.61S207,123.49,207.12,123.73Zm-53.67,12.16v-.28c-.21-.17-.41-.43-.65-.49a.5.5,0,0,0-.65.55.89.89,0,0,0,.53.61C152.93,136.3,153.2,136,153.45,135.89Zm53.67.53h.26c.16-.23.42-.44.46-.69a.49.49,0,0,0-.6-.59c-.24.05-.57.36-.57.56S207,136.17,207.12,136.42ZM165,147.4l0-.28c-.24-.16-.48-.46-.71-.45s-.6.39-.57.55a1,1,0,0,0,.59.61C164.49,147.87,164.76,147.55,165,147.4Zm12.14-.87h-.27c-.16.23-.41.43-.46.68a.51.51,0,0,0,.58.62.89.89,0,0,0,.59-.57C177.58,147,177.28,146.78,177.12,146.53Zm6.76.71c-.39-.28-.64-.61-.83-.57s-.44.37-.65.58c.22.21.41.53.66.58S183.5,147.53,183.88,147.24Zm12.53.13v-.26c-.24-.16-.5-.45-.73-.44s-.5.35-.55.58a.49.49,0,0,0,.6.59C196,147.8,196.18,147.54,196.41,147.37Z M179.94,130.75H170.5c-1,0-1.25-.26-1.25-1.26v-19c0-1,.26-1.25,1.26-1.25h19c1,0,1.26.26,1.26,1.26v19c0,1-.27,1.26-1.26,1.26ZM171,129H189V111H171Z M187.75,118c0,.77,0,1.54,0,2.31s-.32,1-.85,1-.9-.35-.9-1c0-1.53,0-3.07,0-4.6,0-.64.32-1,.85-1s.89.36.9,1S187.75,117.18,187.75,118Z\",\n        widgetPages: [...defaultWidgetPages, 'view'],\n    },\n\n    shelf: {\n        primaryColor: '#fb7c4e',\n        svgPath:\n            <>\n                <rect x=\"358.42\" width=\"28\" height=\"71\" rx=\"10\" />\n                <rect x=\"0.42\" width=\"28\" height=\"71\" rx=\"10\" />\n                <rect y=\"216.99\" width=\"28\" height=\"71\" rx=\"10\" />\n                <rect x=\"358.42\" y=\"217\" width=\"28\" height=\"71\" rx=\"10\" />\n                <path d=\"M371.72,85.5h-5.89a20.71,20.71,0,0,1-20.71-20.7V36.7A10.7,10.7,0,0,0,334.42,26H52.84a10.7,10.7,0,0,0-10.7,10.7V64.8A20.71,20.71,0,0,1,21.43,85.5H15.12A10.7,10.7,0,0,0,4.42,96.2v95.58a10.7,10.7,0,0,0,10.7,10.71H21a20.71,20.71,0,0,1,20.71,20.7V251.3A10.7,10.7,0,0,0,52.42,262H334a10.7,10.7,0,0,0,10.7-10.7V223.2a20.71,20.71,0,0,1,20.71-20.7h6.31a10.7,10.7,0,0,0,10.7-10.7V96.2A10.7,10.7,0,0,0,371.72,85.5ZM166,177.5H100a10,10,0,0,1-8.19-15.74l33-47a10,10,0,0,1,16.37,0l33,47A10,10,0,0,1,166,177.5Zm120.82,0h-66a10,10,0,0,1-8.18-15.74l33-47a10,10,0,0,1,16.37,0l33,47A10,10,0,0,1,286.83,177.5Z\" />\n            </>\n\n\n    }\n\n}\nexport const DEVICE_CONSTANTS = {\n    HUMAN: \"human\",\n    MIR_100: 'MiR_100'\n}","export const daysOfTheWeek = {\n    0: 'monday',\n    1: 'tuesday',\n    2: 'wednesday',\n    3: 'thursday',\n    4: 'friday',\n    5: 'saturday',\n    6: 'sunday'\n}\n\nexport const TEMP_NEW_SCHEDULE_ID = \"TEMP_NEW_SCHEDULE_ID\"\nexport const DEFAULT_TASK_ID = \"DEFAULT_TASK_ID\"\n\nexport const FORM_MODES = {\n    CREATE: \"CREATE\",\n    UPDATE: \"UPDATE\"\n}\n\nexport const deviceSchedule = {\n    id: null,\n    enabled: false,\n    name: null,\n    position: null,\n    days_on: [],\n    time: '12:00',\n}","import { normalize } from 'normalizr';\n\nimport {\n    TASK_QUEUE,\n    TASK_QUEUE_ALL,\n    TASK_QUEUE_ITEM,\n\n    TASK_QUEUE_OPEN,\n    INCREMENT_GET_DATA_FAILURE_COUNT,\n    SET_SHOW_MODAL_ID\n} from '../types/task_queue_types';\n\nimport {\n    GET_,\n    POST_,\n    DELETE_,\n    PUT_,\n\n    _STARTED,\n    _SUCCESS,\n    _FAILURE,\n} from '../types/api_types';\n\nimport { taskQueueSchema } from '../../normalizr/task_queue_schema';\nimport uuid from 'uuid';\nimport * as api from '../../api/task_queue_api'\n\n\n// get\n// ******************************\nexport const getTaskQueue = () => {\n    return async dispatch => {\n\n        function onStart() {\n            dispatch({ type: GET_ + TASK_QUEUE + _STARTED });\n        }\n        function onSuccess(taskQueue) {\n            dispatch({ type: GET_ + TASK_QUEUE + _SUCCESS, payload: taskQueue });\n            return taskQueue;\n        }\n        function onError(error) {\n            dispatch({ type: GET_ + TASK_QUEUE + _FAILURE, payload: error });\n            dispatch({ type: INCREMENT_GET_DATA_FAILURE_COUNT, payload: null })\n            return error;\n        }\n\n        try {\n            onStart();\n\n            const taskQueue = await api.getTaskQueue();\n            const normalizedData = normalize(taskQueue, taskQueueSchema);\n            return onSuccess(normalizedData.entities.taskQueue);\n        } catch (error) {\n            return onError(error);\n        }\n    };\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// create\n// ******************************\nexport const postTaskQueue = (queueItem) => {\n    return async dispatch => {\n\n        function onStart() {\n            dispatch({ type: POST_ + TASK_QUEUE + _STARTED, payload: queueItem });\n        }\n        function onSuccess(createdTaskQueueItem, oldTaskQueueItemId) {\n            const payload = { createdTaskQueueItem, oldTaskQueueItemId };\n            dispatch({ type: POST_ + TASK_QUEUE + _SUCCESS, payload });\n            return (\n                createdTaskQueueItem\n            );\n        }\n        function onError(error) {\n            dispatch({ type: POST_ + TASK_QUEUE + _FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const createdTaskQueueItem = await api.postTaskQueue(queueItem);\n            return onSuccess(createdTaskQueueItem, queueItem.id);\n        } catch (error) {\n            return onError(error);\n        }\n    };\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// update\n// ******************************\nexport const putTaskQueue = (item, ID) => {\n    return async dispatch => {\n\n        function onStart() {\n            dispatch({ type: PUT_ + TASK_QUEUE + _STARTED, payload: { item, ID } });\n        }\n        function onSuccess(item, ID) {\n            const payload = { item, ID };\n            dispatch({ type: PUT_ + TASK_QUEUE + _SUCCESS, payload });\n            return payload\n\n        }\n        function onError(error) {\n            dispatch({ type: PUT_ + TASK_QUEUE + _FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const taskQueueItem = await api.putTaskQueueItem(item, ID);\n            return onSuccess(item, ID);\n        } catch (error) {\n            return onError(error);\n        }\n    };\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// delete all\n// ******************************\nexport const deleteTaskQueueAll = () => {\n    return async dispatch => {\n\n        function onStart() {\n            dispatch({ type: DELETE_ + TASK_QUEUE_ALL + _STARTED });\n        }\n        function onSuccess(response) {\n            dispatch({ type: DELETE_ + TASK_QUEUE_ALL + _SUCCESS });\n            return response;\n        }\n        function onError(error) {\n            dispatch({ type: DELETE_ + TASK_QUEUE_ALL + _FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const response = await api.deleteTaskQueueAll();\n            return onSuccess(response);\n        } catch (error) {\n            return onError(error);\n        }\n    };\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// delete all\n// ******************************\nexport const deleteTaskQueueItem = (id) => {\n    return async dispatch => {\n\n        function onStart() {\n            dispatch({ type: DELETE_ + TASK_QUEUE_ITEM + _STARTED });\n        }\n        function onSuccess(response, id) {\n            const payload = { id }\n            dispatch({ type: DELETE_ + TASK_QUEUE_ITEM + _SUCCESS, payload });\n            return response;\n        }\n        function onError(error) {\n            dispatch({ type: DELETE_ + TASK_QUEUE_ITEM + _FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const response = await api.deleteTaskQueueItem(id);\n            return onSuccess(response, id);\n        } catch (error) {\n            return onError(error);\n        }\n    };\n};\n\n/**\n @param {*} props\n */\n\nexport const handlePostTaskQueue = (props) => {\n    const {\n        dashboardID,\n        tasks,\n        taskQueue,\n        lotID,\n        Id,\n        custom,\n        fromSideBar,\n        deviceType,\n        hil_response\n    } = props\n\n    return async dispatch => {\n        // If a custom task then add custom task key to task q\n        if (Id === 'custom_task') {\n\n            return await dispatch(postTaskQueue(\n                {\n                    _id: uuid.v4(), dashboardID,\n                    \"task_id\": Id,\n                    'custom_task': custom,\n                    \"device_type\": deviceType,\n                    hil_response,\n                }\n            ))\n        }\n\n        else {\n\n            let inQueue = false\n\n            if (!!taskQueue) {\n                Object.values(taskQueue).map((item) => {\n                    // If its in the Q and not a handoff, then alert the user saying its already there\n                    if (item.task_id === Id && !tasks[item.task_id].handoff && item.device_type === deviceType) inQueue = true\n                })\n            }\n\n            // add alert to notify task has been added\n            if (!inQueue) {\n                // If the task is a human task, its handled a little differently compared to a normal task\n                // Set hil_response to null because the backend does not dictate the load hil message\n                // Since the task is put into the q but automatically assigned to the person that clicks the button\n                if (deviceType === 'human') {\n\n                    const postTask = {\n                        _id: uuid.v4(),\n                        \"device_type\": deviceType,\n                        \"task_id\": Id,\n                        dashboard: dashboardID,\n                        hil_response: null,\n                        showModal: null,\n                        lot_id: lotID,\n                    }\n                    await dispatch({ type: 'LOCAL_HUMAN_TASK', payload: postTask._id })\n                    const postToQueue = dispatch(postTaskQueue(postTask))\n\n                    if (fromSideBar) {\n                        postToQueue.then(item => {\n                            const id = item?._id\n                            dispatch({ type: 'TASK_QUEUE_ITEM_CLICKED', payload: id })\n                        })\n                    }\n                }\n\n                else {\n                    await dispatch(postTaskQueue(\n                        {\n                            _id: uuid.v4(),\n                            \"device_type\": deviceType,\n                            \"task_id\": Id,\n                            lot_id: lotID,\n                        })\n                    )\n                }\n            }\n        }\n    };\n};\n\n\nexport const taskQueueOpen = (bool) => {\n    return { type: TASK_QUEUE_OPEN, payload: bool }\n};\n\nexport const setShowModalId = (id) => {\n    return { type: SET_SHOW_MODAL_ID, payload: id }\n}\n\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n","// This reducer is for api calls to local storage\n\nimport {\n  GET_LOGGERS,\n  GET_LOGGERS_STARTED,\n  GET_LOGGERS_SUCCESS,\n  GET_LOGGERS_FAILURE,\n\n  POST_LOGGERS,\n  POST_LOGGERS_STARTED,\n  POST_LOGGERS_SUCCESS,\n  POST_LOGGERS_FAILURE,\n\n  GET_LOCAL_SETTINGS,\n  GET_LOCAL_SETTINGS_STARTED,\n  GET_LOCAL_SETTINGS_SUCCESS,\n  GET_LOCAL_SETTINGS_FAILURE,\n\n  POST_LOCAL_SETTINGS,\n  POST_LOCAL_SETTINGS_STARTED,\n  POST_LOCAL_SETTINGS_SUCCESS,\n  POST_LOCAL_SETTINGS_FAILURE,\n\n  STOP_API_CALLS,\n  SET_TEMP_SIGN_IN_DATA,\n\n} from '../types/local_types';\nimport {defaultLocalSettings} from \"../../constants/local_settings_constants\";\n\n\nconst defaultState = {\n    loggers: {\n        /*\n        All: {\n          enabled: false,\n          level: 0,\n          name: \"All\"\n        },\n        Dashboards: {\n          enabled: false,\n          level: 0,\n          name: \"Dashboards\"\n        },\n        Scheduler: {\n          enabled: false,\n          level: 0,\n          name: \"Scheduler\"\n        },\n        Tasks: {\n          enabled: false,\n          level: 0,\n          name: \"Tasks\"\n        },\n        Objects: {\n          enabled: false,\n          level: 0,\n          name: \"Objects\"\n        },\n        Api: {\n          enabled: false,\n          level: 0,\n          name: \"Api\"\n        },\n        ReduxLogger: {\n          enabled: false,\n          level: 0,\n          name: \"ReduxLogger\"\n        }\n        */\n    },\n\n    localSettings: defaultLocalSettings,\n\n    devicesEnabled: false,\n    disableAll: false,\n    enableAll: false,\n    loaded: false,\n};\n\nconst localReducer = (state = defaultState, action) => {\n    switch(action.type) {\n\n    // ======================================== //\n    //                                          //\n    //              Get SETTINGS                //\n    //                                          //\n    // ======================================== //\n        case GET_LOGGERS:\n            break;\n\n        case GET_LOGGERS_SUCCESS:\n            return  {\n                ...state,\n                ...action.payload,\n                loggers: {\n                  ...state.loggers, ...action.payload.loggers\n                },\n\n                pending: false,\n                loaded: true,\n            }\n\n        case GET_LOGGERS_FAILURE:\n            return  Object.assign({}, state, {\n                error: action.payload,\n                pending: false,\n                loaded: true,\n            });\n\n        case GET_LOGGERS_STARTED:\n            return  Object.assign({}, state, {\n                pending: true\n            });\n\n    // ======================================== //\n    //                                          //\n    //             Post LOGGERS                //\n    //                                          //\n    // ======================================== //\n        case POST_LOGGERS:\n            break;\n\n        case POST_LOGGERS_SUCCESS:\n            return{\n                ...state,\n                 ...action.payload,\n                pending: false\n            }\n\n        case POST_LOGGERS_FAILURE:\n            return  Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case POST_LOGGERS_STARTED:\n            return  Object.assign({}, state, {\n                pending: true\n            });\n\n    // ======================================== //\n    //                                          //\n    //          Get Local Settings              //\n    //                                          //\n    // ======================================== //\n        case GET_LOCAL_SETTINGS:\n            break\n\n        case GET_LOCAL_SETTINGS_SUCCESS:\n            return  {\n                ...state,\n                localSettings: action.payload,\n                pending: false,\n                loaded: true,\n            }\n\n        case GET_LOCAL_SETTINGS_FAILURE:\n            return  Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case GET_LOCAL_SETTINGS_STARTED:\n            return  Object.assign({}, state, {\n                pending: true\n            });\n\n    // ======================================== //\n    //                                          //\n    //           Post Local Settings            //\n    //                                          //\n    // ======================================== //\n        case POST_LOCAL_SETTINGS:\n            break;\n\n        case POST_LOCAL_SETTINGS_SUCCESS:\n            return{\n                ...state,\n                localSettings: {\n                    ...state.localSettings,\n                    ...action.payload\n                },\n                pending: false\n            }\n\n        case POST_LOCAL_SETTINGS_FAILURE:\n            return  Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case POST_LOCAL_SETTINGS_STARTED:\n            return  Object.assign({}, state, {\n                pending: true\n            });\n\n        case STOP_API_CALLS:\n            return {\n                ...state,\n                stopAPICalls: action.payload,\n            }\n\n\n\n        // ~~~~~~~~~~~~~~~\n        default:\n            return {\n                ...state\n            }\n    }\n\n    return state\n}\n\nexport default localReducer\n","import {\n    TASKS,\n    TASK,\n    ANALYSIS,\n} from '../types/tasks_types';\n\nimport {\n    GET_,\n\n    _STARTED,\n    _SUCCESS,\n    _FAILURE,\n} from '../types/api_types';\n\n\nconst defaultState = {\n    tasksAnalysis: {},\n    taskAnalysis: {}\n};\n\n\nexport default function taskAnalysisReducer(state = defaultState, action) {\n\n\n    switch (action.type) {\n\n        // GET\n        // ***************\n\n        // multi\n        case GET_ + TASKS + ANALYSIS + _SUCCESS:\n            return {\n                ...state,\n                tasksAnalysis: action.payload,\n                pending: false\n            }\n\n        case GET_ + TASKS + ANALYSIS + _FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case GET_ + TASKS + ANALYSIS + _STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        // single\n        case GET_ + TASK + ANALYSIS + _SUCCESS:\n            return {\n                ...state,\n                taskAnalysis: action.payload,\n                pending: false\n            };\n\n        case GET_ + TASK + ANALYSIS + _FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case GET_ + TASK + ANALYSIS + _STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n        // ~~~~~~~~~~~~~~~\n\n        default:\n            return state\n    }\n}\n","import {\n  GET,\n  POST,\n  DELETE,\n  PUT, SET\n} from '../types/prefixes';\n\nimport {\n  STARTED,\n  SUCCESS,\n  FAILURE, SELECTED\n} from '../types/suffixes'\n\nimport {\n  LOT_TEMPLATE,\n  LOT_TEMPLATES\n} from '../types/data_types'\n\n\n\nconst defaultState = {\n  lotTemplates: {},\n  selectedLotTemplatesId: \"\"\n};\n\nexport default function lotTemplatesReducer(state = defaultState, action) {\n\n  switch (action.type) {\n    case GET + LOT_TEMPLATE + SUCCESS:\n      return {\n        ...state,\n        lotTemplates: {...state.lotTemplates, [action.payload.lotTemplate._id]: action.payload.lotTemplate},\n        pending: false,\n      }\n\n    case GET + LOT_TEMPLATES + SUCCESS:\n      return {\n        ...state,\n        lotTemplates: {...state.lotTemplates, ...action.payload.lotTemplates},\n        pending: false,\n      }\n\n    case POST + LOT_TEMPLATE + SUCCESS:\n    case PUT + LOT_TEMPLATE + SUCCESS:\n      return {\n        ...state,\n        lotTemplates: {...state.lotTemplates, [action.payload.lotTemplate._id]: action.payload.lotTemplate},\n        pending: false,\n      }\n\n    case DELETE + LOT_TEMPLATE + SUCCESS:\n      const { [action.payload.id]: value, ...rest } = state.lotTemplates; // extracts payload from rest\n\n      return {\n        ...state,\n        lotTemplates: {...rest},\n        pending: false,\n      }\n\n      case SET + LOT_TEMPLATE + SELECTED: {\n        return {\n          ...state,\n          selectedLotTemplatesId: action.payload\n        }\n      }\n\n    default:\n      return state\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport withModal from \"../../../higher_order_components/with_modal/with_modal\";\nimport PdfViewer from \"./pdf_viewer\";\n\nimport * as styled from './pdf_viewer.style'\nimport {Document, Page} from \"react-pdf\";\nimport PageSelector from \"../page_selector/page_selector\";\nimport Button from \"../button/button\";\n\nconst PdfViewerModal = props => {\n\n\tconst {\n\t\tonOkClick,\n\t\tonCancelClick,\n\t\tfile\n\t} = props\n\n\treturn (\n\t\t<styled.Container>\n\t\t\t<styled.Header>\n\t\t\t\t<styled.Title>Review Document</styled.Title>\n\t\t\t</styled.Header>\n\n\t\t\t<styled.Body>\n\t\t\t\t<PdfViewer\n\t\t\t\t\tfile={file}\n\t\t\t\t/>\n\t\t\t</styled.Body>\n\n\t\t\t<styled.Footer>\n\t\t\t\t<Button\n\t\t\t\t\tlabel={'Ok'}\n\t\t\t\t\tschema={'ok'}\n\t\t\t\t\tonClick={onOkClick}\n\t\t\t\t/>\n\n\t\t\t\t<Button\n\t\t\t\t\tlabel={'Cancel'}\n\t\t\t\t\tschema={'error'}\n\t\t\t\t\tonClick={onCancelClick}\n\t\t\t\t/>\n\t\t\t</styled.Footer>\n\n\t\t</styled.Container>\n\t);\n};\n\nPdfViewerModal.propTypes = {\n\n};\n\nPdfViewerModal.defaultProps = {\n\n};\n\n\nexport default withModal(PdfViewerModal,'auto', '80%', '80%', '80%')\n","import styled from \"styled-components\";\n\nexport const WidgetText = styled.span`\n\tfont-size: ${props => props.labelSize ? props.labelSize : props.theme.fontSize.sz6};\n\tfont-family: ${props => props.theme.font.primary};\n\t\n\ttext-align: center;\n\talign-self:center;\n\t\n\tcolor: ${props => props.selected ? props.theme.bg.octonary : props.theme.bg.primary};\n\t\n\twhite-space: nowrap;\n\toverflow: hidden;\n\ttext-overflow: ellipsis;\n`;\n\n\nexport const WidgetIcon = styled.i`\n    font-size: 2.2rem;\n    color: ${props =>  props.color };\n\n    @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n        font-size: 2rem;\n    }\n    \n    font-size: 2.2rem;\n    margin-bottom:0.3rem;\n    align-self:center;\n\n    @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n        font-size: 2rem;\n    }\n`\n\nexport const WidgetButton = styled.button`\n\tdisplay:flex;\n\tposition: relative;\n    flex-direction: column;\n    justify-content: center;\n    \n    border: none;\n    border-radius: 1rem;\n    text-align: center;\n    width: 4rem;\n    min-width: 4rem;\n    height: 4rem;\n    max-height: 4rem;\n    min-height: 4rem;\n    outline:none;\n    overflow: hidden;\n    \n    padding-top:.5rem;\n\n    box-shadow: 0 0.1rem 0.2rem 0rem #303030;\n\n    background-color: ${props => props.selected ? props.theme.bg.quaternary : props.theme.bg.septenary};\n\n    transition: background-color 0.25s ease, box-shadow 0.1s ease;\n\n    &:hover{\n        background-color: ${props => props.theme.bg.senary};\n    }\n\n    &:focus{\n        outline: 0 !important\n    }\n\n    &:active{\n        box-shadow: none;\n    }\n\n    @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n        width: 3.5rem;\n        height: 3.5rem;\n        border-radius: .5rem;\n        \n    }\n`;","import React, { useContext, useEffect, useRef, useState } from 'react'\n\n// actions\nimport {setSelectedLotTemplate} from \"../../../../../../../redux/actions/lot_template_actions\"\nimport {setFieldDragging} from \"../../../../../../../redux/actions/card_page_actions\"\n\n// components external\nimport { DraggableCore } from \"react-draggable\"\nimport { Container, Draggable } from 'react-smooth-dnd'\n\n// components internal\nimport FieldComponentMapper from \"../field_component_mapper/field_component_mapper\"\nimport WidgetButton from \"../../../../../../basic/widget_button/widget_button\"\n\n// functions external\nimport PropTypes from 'prop-types'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ThemeContext } from \"styled-components\"\n\n// logging\nimport log from '../../../../../../../logger'\n\n// utils\nimport {uuidv4} from \"../../../../../../../methods/utils/utils\"\n\n// constants\nimport {LOT_EDITOR_SIDEBAR_OPTIONS, SIDE_BAR_MODES, TEMPLATE_FIELD_KEYS} from \"../../../../../../../constants/lot_contants\"\n\n// styles\nimport * as style from \"../../card_editor/lot_sidebars/lot_sidebars.style\"\n\n// logger\nconst logger = log.getLogger(\"LotEditorSidebar\")\n\nconst LotTemplateEditorSidebar = (props) => {\n\n    const {\n        showFields,\n        showTemplates,\n        showNew,\n    } = props\n\n    const minWidth = 450\n\n    /*\n    * Tests sidebar width to  determine if styling should be for small or large width\n    * Returns true if width is less than breakpoint, and false otherwise\n    * */\n    const testSize = (width) => {\n        return width < 500\n    }\n\n    // theme\n    const themeContext = useContext(ThemeContext)\n\n    // actions\n    const dispatch = useDispatch()\n    const dispatchSetFieldDragging = (bool) => dispatch(setFieldDragging(bool))\n    const dispatchSetSelectedLotTemplate = (id) => dispatch(setSelectedLotTemplate(id))\n\n\n    const lotTemplates = useSelector(state => {return state.lotTemplatesReducer.lotTemplates})\n    const selectedLotTemplatesId = useSelector(state => {return state.lotTemplatesReducer.selectedLotTemplatesId})\n\n    const [width, setWidth] = useState(window.innerWidth < 2000 ? 450 : 450) // used for tracking sidebar dimensions\n    const [isSmall, setSmall] = useState(testSize(width)) // used for tracking sidebar dimensions\n\n    const [type, setType] = useState(showFields ? SIDE_BAR_MODES.FIELDS.name : SIDE_BAR_MODES.TEMPLATES.name) // used for tracking sidebar dimensions\n\n\n    const getFieldTemplates = () => {\n\n        return (\n            <style.ListContainer>\n                <Container\n                    groupName=\"lot_field_buttons\"\n                    onDragStart={(dragStartParams)=>{\n                        const {\n                            isSource,\n                            payload,\n                            willAcceptDrop\n                        } = dragStartParams\n\n                        const {\n                            component,\n                            key,\n                            _id\n                        } = payload\n\n                        if(isSource) {\n                            dispatchSetFieldDragging(_id)\n                        }\n\n                    }}\n                    onDragEnd={(dragEndParams)=>{\n                        const {\n                            isSource,\n                            payload,\n                            willAcceptDrop\n                        } = dragEndParams\n\n                        const {\n                            component,\n                            key,\n                            _id\n                        } = payload\n\n                        if(isSource) {\n                            dispatchSetFieldDragging(null)\n                        }\n                    }}\n                    onDrop={(dropResult,b) => {\n                        const {\n                            addedIndex,\n                            payload,\n                            removedIndex\n                        } = dropResult\n\n                        dispatchSetFieldDragging(null)\n                    }}\n                    getChildPayload={index => {\n                        const selected = Object.entries(LOT_EDITOR_SIDEBAR_OPTIONS)[index]\n                        const payload = {\n                            ...selected[1],\n                            _id: uuidv4(),\n                            [TEMPLATE_FIELD_KEYS.FIELD_NAME]: \"\",\n                            [TEMPLATE_FIELD_KEYS.REQUIRED]: false,              // set to true to default checked when added\n                            [TEMPLATE_FIELD_KEYS.SHOW_IN_PREVIEW]: false,       // set to true to default checked when added\n                        }\n                        return payload\n                    }}\n                    getGhostParent={()=>{\n                        return document.body\n                    }}\n                    style={{\n                        position: \"relative\",\n                        alignSelf: \"stretch\",\n                        flex: 1,\n                        overflowY: \"auto\",\n                        overflowX: \"hidden\",\n                        // justifyContent: 'center',\n                        alignItems: 'center',\n                        alignContent: 'center',\n                        display: 'flex',\n                        flexDirection: 'column'\n                    }}\n                >\n                {\n                    Object.entries(LOT_EDITOR_SIDEBAR_OPTIONS).map((currOption, currIndex) => {\n                        const key = currOption[0]\n                        const value = currOption[1]\n                        return <Draggable\n                            key={currIndex}\n                            style={{\n                                marginBottom: \"1.5rem\",\n                                display: \"flex\",\n                                justifyContent: \"center\",\n                                alignItems: \"center\",\n\n                                width: 'fit-content',\n\n                                background: themeContext.bg.secondary,\n                                boxShadow: '0 2px 4px 0px rgba(0, 0, 0, 0.3)',\n                                padding: '1rem',\n                                borderRadius: '0.5rem',\n                                zIndex: 12,\n                                cursor: 'move'\n                            }}\n                        >\n                            <div style={{width: \"fit-content\"}}>\n                                <FieldComponentMapper\n                                    component={value.component}\n                                    usable={false}\n                                />\n                            </div>\n                        </Draggable>\n                    })\n                }\n                </Container>\n            </style.ListContainer>\n        )\n    }\n\n    const getTemplateButtons = () => {\n        return (\n\n            <style.ListContainer>\n                <style.LotTemplateButton\n                    isSelected={!selectedLotTemplatesId}\n                    onClick={() => dispatchSetSelectedLotTemplate(null)}\n                >\n\n                    <style.TemplateName\n                        isSelected={!selectedLotTemplatesId}\n                    >New</style.TemplateName>\n                </style.LotTemplateButton>\n                {\n                    Object.values(lotTemplates).map((currTemplate, currIndex) => {\n                        const {\n                            fields,\n                            name,\n                            _id: currTemplateId\n                        } = currTemplate\n                        //\n\n                        const isSelected = selectedLotTemplatesId === currTemplateId\n\n                        return <style.LotTemplateButton\n                            id={currTemplateId}\n                            isSelected={isSelected}\n                            onClick={() => dispatchSetSelectedLotTemplate(currTemplateId)}\n                        >\n                            <style.TemplateIcon\n                                isSelected={isSelected}\n                                className={SIDE_BAR_MODES.TEMPLATES.iconName}\n                            />\n                           <style.TemplateName\n                               isSelected={isSelected}\n                           >{name}</style.TemplateName>\n                        </style.LotTemplateButton>\n                    })\n                }\n            </style.ListContainer>\n        )\n    }\n\n    let renderButtons = () => {}\n\n    switch(type) {\n        case SIDE_BAR_MODES.FIELDS.name: {\n            renderButtons = getFieldTemplates\n            break\n        }\n\n        case SIDE_BAR_MODES.TEMPLATES.name: {\n            renderButtons = getTemplateButtons\n            break\n        }\n\n        default:\n            break\n    }\n\n    const handleDrag = (e, ui) => {\n        setWidth(width + ui.deltaX)\n        setSmall(testSize(Math.max(minWidth, width + ui.deltaX)))  // check if width is less than styling breakpoint and update isSmall\n\n    }\n\n    const renderNavButtons = () => {\n        return(\n            Object.entries(SIDE_BAR_MODES)\n                .filter((currEntry, index) => {\n                    const [currKey, currValue] = currEntry\n\n                    if(currValue.name === SIDE_BAR_MODES.FIELDS.name && !showFields) {\n                        return false\n                    }\n                    if(currValue.name === SIDE_BAR_MODES.TEMPLATES.name && !showTemplates) {\n                        return false\n                    }\n                    return true\n\n                })\n                .map((currEntry, index) => {\n                const [currKey, currValue] = currEntry\n\n                return (\n                    <WidgetButton\n                        containerStyle={{marginRight: \"1rem\"}}\n                        label={currValue.name}\n                        color={currValue.color}\n                        iconClassName={currValue.iconName}\n                        selected={type === currValue.name}\n                        onClick={()=>setType(currValue.name)}\n                        labelSize={\"0.5rem\"}\n                    />\n                )\n            })\n        )\n    }\n\n    return (\n            <style.SidebarContent\n                key=\"sidebar-content\"\n                style={{ width: width, minWidth: minWidth }}\n            >\n\n                <style.Container>\n                    <style.TitleText>Draggable Input Elements</style.TitleText>\n                    {renderButtons()}\n\n                    {/* <style.FooterContainer>\n                        {renderNavButtons()}\n                    </style.FooterContainer> */}\n                </style.Container>\n\n                <DraggableCore key=\"handle\" onDrag={handleDrag} >\n                    <style.ResizeBar>\n                        <style.ResizeHandle></style.ResizeHandle>\n                    </style.ResizeBar>\n                </DraggableCore>\n            </style.SidebarContent>\n    )\n}\n\n// Specifies propTypes\nLotTemplateEditorSidebar.propTypes = {\n    showFields: PropTypes.bool,\n    showTemplates: PropTypes.bool,\n    showNew: PropTypes.bool,\n}\n\n// Specifies the default values for props:\nLotTemplateEditorSidebar.defaultProps = {\n    showFields: true,\n    showTemplates: true,\n    showNew: true,\n\n}\n\nexport default LotTemplateEditorSidebar\n","import styled from 'styled-components';\nimport {css} from 'styled-components'\nimport {borderGlowCss} from \"../../../widgets/widget_pages/dashboards_page/dashboard_buttons/dashboard_buttons.style\";\nimport {commonClickableIcon, newGlow} from \"../../../../common_css/common_css\";\n\n\nexport const IconContainerComponent = styled.div`\n    width: auto;\n    height: auto;\n    position: absolute;\n    top: 50%;\n    right: 2rem;\n    transform: translateY(-50%);\n    margin: 0;\n    padding: 0;\n`;\n\nexport const DefaultContainerComponent = styled.div`\n  display: flex;\n  align-items: flex-start;\n  flex-direction: column;\n  padding: 1rem;\n\n  border-radius: .5rem;\n  width: 100%;\n  height: 100%;\n  background: ${props => props.theme.bg.secondary};\n\n  >div {\n    margin-bottom: .5rem;\n  }\n  \n`\n\nexport const FieldComponentContainer = styled.div`\n  display: flex;\n  align-self: stretch;\n  //padding: 0 1rem 0 1rem;\n  \n  border-radius: 0rem 0rem 0.5rem 0.5rem;\n  z-index: 5;\n  transition: all ease 0.5s;\n  align-items: center;\n  position: relative;\n  min-width: 14rem;\n  align-items: center;\n  justify-content: center;\n  \n  // background: ${props => props.updateColor ? props.theme.bg.secondary : \"transparent\"};\n\n  \n`\n\nexport const DeleteContainer = styled.div`\n  background: ${props => props.updateColor ? \"red\" : \"transparent\"};\n  padding: .5rem 1rem;\n  border-top-right-radius: 1rem;\n  border-bottom-right-radius: 1rem;\n`\n\nexport const DeleteIcon = styled.i`\n  ${commonClickableIcon};\n  margin: 0 1rem;\n`\n\nexport const AlignIcon = styled.i`\n  ${commonClickableIcon};\n  //color: #ec0000;\n  margin: 0 .5rem;\n`\n\nexport const StyleContainer = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 50%;\n  transform: translateX(-50%);\n  \n`\n\nexport const CheckItems = styled.div`\n  display: flex;\n`\n\nexport const checkboxCss = css`\n  margin-right: .5rem;\n`\n\nexport const CheckItemLabel = styled.span`\n  font-size: ${props => props.theme.fontSize.sz4};\n  color: ${props => props.theme.textColor};\n  white-space: nowrap;\n`\n\nexport const Row = styled.div`\n  display: flex;\n  align-items: center;\n  &:not(:first-child) {\n    margin-left: 1rem;\n  }\n`\n\nexport const LabelContainer = styled.div`\n  position: relative;\n  transition: all 1s ease;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nexport const GapFiller = styled.div`\n  position: absolute;\n  left: 0;\n  top: 0;\n  bottom: 0;\n  right: -.1rem;\n  border-top-left-radius: 1rem;\n  border-bottom-left-radius: 1rem;\n  z-index: 1;\n`\n\nexport const errorCss = css`\n    box-shadow: 0 0 5px red;\n    border: 1px solid red;\n    \n    &:focus{\n        outline: 0 !important;\n        box-shadow: 0 0 5px red;\n        border: 1px solid red;\n    }\n`\n","import styled from 'styled-components'\n\n\nexport const Checkbox = styled.input`\n  --active: #275EFE;\n  --active-inner: #fff;\n  --focus: 2px rgba(39, 94, 254, .3);\n  --border: #BBC1E1;\n  --border-hover: #275EFE;\n  --background: #fff;\n  --disabled: #F6F8FF;\n  --disabled-inner: #E1E6F9;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  height: 21px;\n  outline: none;\n  display: inline-block;\n  vertical-align: top;\n  position: relative;\n  margin: 0;\n  cursor: pointer;\n  border: 1px solid var(--bc, var(--border));\n  background: var(--b, var(--background));\n  transition: background .3s, border-color .3s, box-shadow .2s;\n  &:after {\n    content: '';\n    display: block;\n    left: 0;\n    top: 0;\n    position: absolute;\n    transition: transform var(--d-t, .3s) var(--d-t-e, ease), opacity var(--d-o, .2s);\n  }\n  &:checked {\n    --b: var(--active);\n    --bc: var(--active);\n    --d-o: .3s;\n    --d-t: .6s;\n    --d-t-e: cubic-bezier(.2, .85, .32, 1.2);\n  }\n  &:disabled {\n    --b: var(--disabled);\n    cursor: not-allowed;\n    opacity: .9;\n    &:checked {\n      --b: var(--disabled-inner);\n      --bc: var(--border);\n    }\n    & + label {\n      cursor: not-allowed;\n    }\n  }\n  &:hover {\n    &:not(:checked) {\n      &:not(:disabled) {\n        --bc: var(--border-hover);\n      }\n    }\n  }\n  &:focus {\n    box-shadow: 0 0 0 var(--focus);\n  }\n  &:not(.switch) {\n    width: 21px;\n    &:after {\n      opacity: var(--o, 0);\n    }\n    &:checked {\n      --o: 1;\n    }\n  }\n  & + label {\n    font-size: 14px;\n    line-height: 21px;\n    display: inline-block;\n    vertical-align: top;\n    cursor: pointer;\n    margin-left: 4px;\n  }\n\n  &:not(.switch) {\n    border-radius: 7px;\n    &:after {\n      width: 5px;\n      height: 9px;\n      border: 2px solid var(--active-inner);\n      border-top: 0;\n      border-left: 0;\n      left: 7px;\n      top: 4px;\n      transform: rotate(var(--r, 20deg));\n    }\n    &:checked {\n      --r: 43deg;\n    }\n  }\n  &.switch {\n    width: 38px;\n    border-radius: 11px;\n    &:after {\n      left: 2px;\n      top: 2px;\n      border-radius: 50%;\n      width: 15px;\n      height: 15px;\n      background: var(--ab, var(--border));\n      transform: translateX(var(--x, 0));\n    }\n    &:checked {\n      --ab: var(--active-inner);\n      --x: 17px;\n    }\n    &:disabled {\n      &:not(:checked) {\n        &:after {\n          opacity: .6;\n        }\n      }\n    }\n  }\n\n\n  * {\n    box-sizing: inherit;\n    &:before,\n    &:after {\n      box-sizing: inherit;\n    }\n  }\n\n  ${props => props.css && props.css};\n`\n\nexport const Label = styled.label`\n    margin-right: 1.5rem;\n`","import React from \"react\";\nimport { useField, useFormikContext } from \"formik\";\n\nimport * as styled from './checkbox_field.style'\nimport FieldWrapper from \"../field_wrapper/field_wrapper\";\nimport Checkbox from \"../../checkbox/checkbox\";\nconst CheckboxField = ({ children, ...props }) => {\n\n\tconst {\n\t\tcss,\n\t\tCheckBoxComponent,\n\t\t...rest\n\t} = props\n\n\t// We need to tell useField what type of input this is\n\t// since React treats radios and checkboxes differently\n\t// than inputs/select/textarea.\n\tconst [field, meta] = useField({ ...props, type: 'checkbox' });\n\treturn (\n\t\t<CheckBoxComponent\n\t\t\tcss={css}\n\t\t\t{...field}\n\t\t\t{...rest}\n\t\t/>\n\t);\n};\n\n// Specifies propTypes\nCheckboxField.propTypes = {\n\n};\n\n// Specifies the default values for props:\nCheckboxField.defaultProps = {\n\tCheckBoxComponent: Checkbox\n};\n\nexport default CheckboxField;\n","import React from 'react'\nimport * as styled from './checkbox.style'\n\nconst Checkbox = (props) => {\n\n    const {\n        onClick,\n        checked,\n        title,\n        css,\n        ...rest\n    } = props\n\n    return(\n        <styled.Checkbox\n            css={css}\n            type='checkbox'\n            onClick={onClick}\n            checked={checked}\n            {...rest}\n        />\n    )\n}\n\nexport default Checkbox\n","import React, {useEffect, useRef, useState, useContext} from \"react\";\nimport PropTypes from 'prop-types';\nimport { useField, useFormikContext } from \"formik\";\n\nimport ErrorTooltip from '../error_tooltip/error_tooltip';\nimport * as styled from './field_wrapper.style'\nimport NumberInput from \"../../number_input/number_input\";\nimport TextField from \"../text_field/text_field\";\nimport Textbox from \"../../textbox/textbox\";\nimport { ThemeContext } from \"styled-components\";\nimport { LightenDarkenColor } from '../../../../methods/utils/color_utils'\nimport CheckboxField from \"../checkbox_field/checkbox_field\";\nimport {TEMPLATE_FIELD_KEYS} from \"../../../../constants/lot_contants\";\n\nconst FieldWrapper = (props) => {\n\n\tconst {\n\t\tContainerComponent,\n\t\tchildren,\n\t\tonDeleteClick,\n\t\tcontainerStyle,\n\t\tfieldPath\n\t} = props\n\n\tconst themeContext = useContext(ThemeContext);\n\n\treturn (\n\t\t<ContainerComponent\n\t\t\tstyle={containerStyle}\n\t\t>\n\t\t\t<styled.CheckItems>\n\t\t\t\t<styled.Row>\n\t\t\t\t\t<CheckboxField\n\t\t\t\t\t\tcss={styled.checkboxCss}\n\t\t\t\t\t\tname={`${fieldPath}.${TEMPLATE_FIELD_KEYS.REQUIRED}`}\n\t\t\t\t\t/>\n\t\t\t\t\t<styled.CheckItemLabel>Require</styled.CheckItemLabel>\n\t\t\t\t</styled.Row>\n\n\t\t\t\t<styled.Row>\n\t\t\t\t\t<CheckboxField\n\t\t\t\t\t\tcss={styled.checkboxCss}\n\t\t\t\t\t\tname={`${fieldPath}.${TEMPLATE_FIELD_KEYS.SHOW_IN_PREVIEW}`}\n\t\t\t\t\t/>\n\t\t\t\t\t<styled.CheckItemLabel>Show in cards</styled.CheckItemLabel>\n\t\t\t\t</styled.Row>\n\t\t\t</styled.CheckItems>\n\n\t\t\t<styled.LabelContainer>\n\t\t\t\t<TextField\n\t\t\t\t\tplaceholder={\"Field name...\"}\n\t\t\t\t\tInputComponent={Textbox}\n\t\t\t\t\tname={`${fieldPath}.fieldName`}\n\t\t\t\t\tstyle={{}}\n\t\t\t\t\ttextboxContainerStyle={{zIndex: 5}}\n\t\t\t\t\tinputStyle={{\n\t\t\t\t\t\tfontSize: '1rem',\n\t\t\t\t\t\tflex: 1,\n\t\t\t\t\t\ttextAlign: 'center',\n\t\t\t\t\t\tbackground: LightenDarkenColor(themeContext.bg.secondary, 10)}\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t\t<styled.DeleteIcon\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tonDeleteClick()\n\t\t\t\t\t}}\n\t\t\t\t\tcolor={LightenDarkenColor(themeContext.bad, 30)}\n\t\t\t\t\tclassName={\"fas fa-trash\"}\n\t\t\t\t/>\n\t\t\t</styled.LabelContainer>\n\n\t\t\t<styled.FieldComponentContainer>\n\t\t\t\t{children}\n\t\t\t</styled.FieldComponentContainer>\n\t\t</ContainerComponent>\n\t);\n};\n\n// Specifies propTypes\nFieldWrapper.propTypes = {\n\n};\n\n// Specifies the default values for props:\nFieldWrapper.defaultProps = {\n\tContainerComponent: styled.DefaultContainerComponent,\n};\n\nexport default FieldWrapper;\n","import styled, {css} from 'styled-components'\n\nexport const ColumnContainer = styled.div`\n\tdisplay: flex;\n  \tflex-direction: column;\n  flex: ${props => props.deleted ? 0 : 1};\n  transition: opacity 0.4s ease;\n  transition: flex 0.4s ease;\n  transition: height 0.4s ease;\n  transition: all 0.4s ease;\n\n  opacity: ${props => props.deleted && 0};\n  width: ${props => props.deleted ? 0 : \"fit-content\"};\n  min-width: ${props => props.deleted ? 0 : \"fit-content\"};\n  max-height: ${props => props.deleted ? 0 : \"fit-content\"};\n  overflow: hidden;\n  align-self: stretch;\n`\n\nexport const RowContainer = styled.div`\n\tdisplay: flex;\n\tflex: 1;\n\talign-items: center;\n`\n\nconst hoverCss = css`\n  background: black;\n  padding: 1rem;\n`\nexport const LeftContainer = styled.div`\n\tbackground: red;\n  \tflex: 1;\n  \talign-self: stretch;\n\t${props => props.hovering && hoverCss};\n`\n\nexport const RightContainer = styled.div`\n\tbackground: green;\n\tflex: 1;\n\talign-self: stretch;\n\t${props => props.hovering && hoverCss};\n`\n\nexport const TopContainer = styled.div`\n\tbackground: orange; \n\tflex: 1;\n\talign-self: stretch;\n\t${props => props.hovering && hoverCss};\n`\n\n\nexport const BottomContainer = styled.div`\n  background: purple;\n\tflex: 1;\n\talign-self: stretch;\n\t// height: ${props => props.hovering ? \"1rem\" : \".5rem\"};\n\t${props => props.hovering && hoverCss};\n`\n\n","import {Container, Draggable} from \"react-smooth-dnd\";\n\n// components internal\nimport {LOT_EDITOR_SIDEBAR_OPTIONS} from \"../lot_template_editor_sidebar/lot_template_editor_sidebar\";\nimport FieldWrapper from \"../../../../../../basic/form/field_wrapper/field_wrapper\";\nimport ContainerWrapper from \"../../../../../../basic/container_wrapper/container_wrapper\";\nimport FieldComponentMapper from \"../field_component_mapper/field_component_mapper\";\n\n// functions external\nimport React, {useEffect, useState, useContext} from \"react\";\nimport { ThemeContext } from 'styled-components'\nimport {useDispatch, useSelector} from \"react-redux\";\n\n// actions\nimport {setFieldDragging} from \"../../../../../../../redux/actions/card_page_actions\";\n\n// constants\nimport {FIELD_COMPONENT_NAMES} from \"../../../../../../../constants/lot_contants\";\n\n// styles\nimport * as styled from \"./drop_container.style\"\n\nconst DropContainer = (props) => {\n\tconst {\n\t\tid,\n\t\tonTopDrop,\n\t\tonBottomDrop,\n\t\tonLeftDrop,\n\t\tonRightDrop,\n\t\tonCenterDrop,\n\t\tcomponent,\n\t\tonDragTopEnter,\n\t\tonDragTopLeave,\n\t\tonDragBottomEnter,\n\t\tonDragBottomLeave,\n\t\tonDeleteClick,\n\t\ttop,\n\t\tbottom,\n\t\tleft,\n\t\tright,\n\t\tpreview,\n\t\tindexPattern,\n\t\tfieldName,\n\t\tpayload,\n\t\tsetDraggingRow,\n\t\tclearDraggingRow,\n\t\tsetHoveringRow,\n\t\tcurrRowIndex,\n\t\tclearHoveringRow,\n\t\thoveringRow,\n\n\t} = props\n\n\tconst dispatch = useDispatch()\n\tconst dispatchSetFieldDragging = (bool) => dispatch(setFieldDragging(bool))\n\n\tconst draggingFieldId = useSelector(state=> {return state.cardPageReducer.isFieldDragging})\n\n\tconst [deleted, setDeleted] = useState(false)\n\tconst [isThisFieldDragging, setIsThisFieldDragging] = useState(false)\n\tconst [hoveringTop, setHoveringTop] = useState(false)\n\tconst [hoveringBottom, setHoveringBottom] = useState(false)\n\tconst [hoveringLeft, setHoveringLeft] = useState(false)\n\tconst [hoveringRight, setHoveringRight] = useState(false)\n\n\tconst themeContext = useContext(ThemeContext);\n\n\tuseEffect(() => {\n\t\tconst topRowIndex = currRowIndex-1\n\t\tconst bottomRowIndex = currRowIndex\n\n\t\tif(hoveringTop && hoveringRow !== topRowIndex) {\n\t\t\tsetHoveringRow(topRowIndex)\n\t\t}\n\t\telse if(hoveringBottom && hoveringRow !== bottomRowIndex) {\n\t\t\tsetHoveringRow(bottomRowIndex)\n\t\t}\n\n\t\telse if(!hoveringTop && hoveringRow === topRowIndex) {\n\t\t\tclearHoveringRow()\n\t\t}\n\n\t\telse if(!hoveringBottom && hoveringRow === bottomRowIndex) {\n\t\t\tclearHoveringRow()\n\t\t}\n\n\n\t}, [hoveringTop, hoveringBottom])\n\n\tuseEffect( () => {\n\t\tlet timeout\n\n\t\tif(deleted) {\n\t\t\ttimeout = setTimeout(() => {\n\t\t\t\tonDeleteClick(id)\n\t\t\t}, 500)\n\t\t}\n\n\t\treturn () => {\n\t\t\tclearTimeout(timeout)\n\t\t}\n\t}, [deleted]);\n\n\tuseEffect( () => {\n\t\tif(draggingFieldId && (draggingFieldId === id)) {\n\t\t\tif(!isThisFieldDragging) setIsThisFieldDragging(true)\n\t\t}\n\t\telse if(isThisFieldDragging) {\n\t\t\tsetIsThisFieldDragging(false)\n\t\t}\n\n\t}, [draggingFieldId]);\n\n\n\tuseEffect( () => {\n\t\tsetDeleted(false)\n\n\t\treturn () => {\n\t\t}\n\t}, [id]);\n\n\tconst shouldAcceptDrop = (sourceContainerOptions, payload) => {\n\t\treturn true\n\t}\n\n\treturn (\n\t\t<styled.ColumnContainer isThisFieldDragging={isThisFieldDragging} deleted={deleted || isThisFieldDragging }>\n\t\t\t{/* Insert a New Row Above */}\n\t\t\t{top &&\n\t\t\t<ContainerWrapper\n\t\t\t\tonDrop={(dropResult)=>onTopDrop(dropResult)}\n\t\t\t\tshouldAcceptDrop={shouldAcceptDrop}\n\t\t\t\t// getGhostParent={()=>document.body}\n\t\t\t\tgroupName=\"lot_field_buttons\"\n\t\t\t\tgetChildPayload={index =>\n\t\t\t\t\tindex\n\t\t\t\t}\n\t\t\t\tstyle={{ alignSelf: \"stretch\", display: \"flex\"}}\n\t\t\t\t// style={{overflow: \"auto\",height: \"100%\", padding: \"1rem 1rem 2rem 1rem\" }}\n\t\t\t>\n\t\t\t\t<styled.TopContainer\n\t\t\t\t\t// hovering={hoveringTop}\n\t\t\t\t/>\n\t\t\t</ContainerWrapper>\n\t\t\t}\n\n\n\t\t\t{/* Insert Into Current Row*/}\n\t\t\t<styled.RowContainer>\n\t\t\t\t{!isThisFieldDragging &&\n\t\t\t\t<ContainerWrapper\n\t\t\t\t\tonDrop={(dropResult)=>onLeftDrop(id, dropResult)}\n\t\t\t\t\tshouldAcceptDrop={()=>{return true}}\n\t\t\t\t\tshowHighlight={false}\n\t\t\t\t\tgetGhostParent={()=>document.body}\n\t\t\t\t\tgroupName=\"lot_field_buttons\"\n\t\t\t\t\tgetChildPayload={index =>\n\t\t\t\t\t\tindex\n\t\t\t\t\t}\n\t\t\t\t\thovering={hoveringLeft}\n\t\t\t\t\tisRow={false}\n\t\t\t\t\tstyle={{alignSelf: \"stretch\"}}\n\t\t\t\t/>\n\t\t\t\t}\n\n\t\t\t\t<Container\n\t\t\t\t\tgroupName=\"lot_field_buttons\"\n\t\t\t\t\tonDragStart={(dragStartParams, b, c)=>{\n\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\tisSource,\n\t\t\t\t\t\t\tpayload,\n\t\t\t\t\t\t\twillAcceptDrop\n\t\t\t\t\t\t} = dragStartParams\n\n\t\t\t\t\t\tif(isSource) {\n\t\t\t\t\t\t\tdispatchSetFieldDragging(id)\n\t\t\t\t\t\t\tsetDraggingRow()\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}}\n\t\t\t\t\tonDragEnd={(dragEndParams)=>{\n\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\tisSource,\n\t\t\t\t\t\t\tpayload,\n\t\t\t\t\t\t\twillAcceptDrop\n\t\t\t\t\t\t} = dragEndParams\n\n\t\t\t\t\t\tif(isSource) {\n\t\t\t\t\t\t\tdispatchSetFieldDragging(null)\n\t\t\t\t\t\t\tclearDraggingRow()\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}}\n\t\t\t\t\tonDrop={(dropR) => {\n\t\t\t\t\t\tdispatchSetFieldDragging(null)\n\t\t\t\t\t\tclearDraggingRow()\n\t\t\t\t\t}}\n\t\t\t\t\tgetChildPayload={index => {\n\t\t\t\t\t\treturn payload\n\t\t\t\t\t}}\n\t\t\t\t\tgetGhostParent={()=>{\n\t\t\t\t\t\treturn document.body\n\t\t\t\t\t}}\n\t\t\t\t\tdragClass={\"dragging-field\"}\n\t\t\t\t\tstyle={{flex: 1, display: \"flex\"}}\n\t\t\t\t>\n\t\t\t\t\t<Draggable\n\t\t\t\t\t\tkey={id}\n\t\t\t\t\t\tstyle={{flex: 1}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<div style={{position: \"relative\", display: \"flex\", justifyContent: \"center\" }}>\n\t\t\t\t\t\t\t{(draggingFieldId !== null) &&\n\t\t\t\t\t\t\t<div style={{border: `2px solid ${themeContext.bg.secondary}`, position: \"absolute\", display: \"flex\", flexDirection: \"column\", alignItems: \"stretch\", left: 0, bottom: 0, top: 0, right: 0}}>\n\t\t\t\t\t\t\t\t<ContainerWrapper\n\t\t\t\t\t\t\t\t\tonHoverChange={(hoverState) => setHoveringTop(hoverState)}\n\t\t\t\t\t\t\t\t\tshowHighlight={false}\n\t\t\t\t\t\t\t\t\tonDrop={(dropResult)=>onTopDrop(dropResult)}\n\t\t\t\t\t\t\t\t\tshouldAcceptDrop={()=>{return true}}\n\t\t\t\t\t\t\t\t\tgetGhostParent={()=>document.body}\n\t\t\t\t\t\t\t\t\tgroupName=\"lot_field_buttons\"\n\t\t\t\t\t\t\t\t\tgetChildPayload={index =>\n\t\t\t\t\t\t\t\t\t\tindex\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tisRow={false}\n\t\t\t\t\t\t\t\t\tstyle={{flex: 0.1, zIndex: 10}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div style={{display: \"flex\", flex: 5}}>\n\t\t\t\t\t\t\t\t\t<ContainerWrapper\n\t\t\t\t\t\t\t\t\t\tshowHighlight={false}\n\t\t\t\t\t\t\t\t\t\tonHoverChange={(hoverState) => setHoveringLeft(hoverState)}\n\t\t\t\t\t\t\t\t\t\tonDrop={(dropResult)=>onLeftDrop(id, dropResult)}\n\t\t\t\t\t\t\t\t\t\tshouldAcceptDrop={()=>{return true}}\n\t\t\t\t\t\t\t\t\t\tgetGhostParent={()=>document.body}\n\t\t\t\t\t\t\t\t\t\tgroupName=\"lot_field_buttons\"\n\t\t\t\t\t\t\t\t\t\tgetChildPayload={index =>\n\t\t\t\t\t\t\t\t\t\t\tindex\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tisRow={false}\n\t\t\t\t\t\t\t\t\t\tstyle={{flex: 1, alignSelf: \"stretch\", zIndex: 50}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<ContainerWrapper\n\t\t\t\t\t\t\t\t\t\tshowHighlight={false}\n\t\t\t\t\t\t\t\t\t\tonHoverChange={(hoverState) => setHoveringRight(hoverState)}\n\t\t\t\t\t\t\t\t\t\tonDrop={(dropResult)=>onRightDrop(id, dropResult)}\n\t\t\t\t\t\t\t\t\t\tshouldAcceptDrop={()=>{return true}}\n\t\t\t\t\t\t\t\t\t\tgetGhostParent={()=>document.body}\n\t\t\t\t\t\t\t\t\t\tgroupName=\"lot_field_buttons\"\n\t\t\t\t\t\t\t\t\t\tgetChildPayload={index =>\n\t\t\t\t\t\t\t\t\t\t\tindex\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tisRow={false}\n\t\t\t\t\t\t\t\t\t\tstyle={{flex: 1, alignSelf: \"stretch\", zIndex: 50}}\n\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<ContainerWrapper\n\t\t\t\t\t\t\t\t\tshowHighlight={false}\n\t\t\t\t\t\t\t\t\tonHoverChange={(hoverState) => setHoveringBottom(hoverState)}\n\t\t\t\t\t\t\t\t\tonDrop={(dropResult)=>onBottomDrop(dropResult)}\n\t\t\t\t\t\t\t\t\tshouldAcceptDrop={()=>{return true}}\n\t\t\t\t\t\t\t\t\tgetGhostParent={()=>document.body}\n\t\t\t\t\t\t\t\t\tgroupName=\"lot_field_buttons\"\n\t\t\t\t\t\t\t\t\tgetChildPayload={index =>\n\t\t\t\t\t\t\t\t\t\tindex\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tisRow={false}\n\t\t\t\t\t\t\t\t\tstyle={{flex: 0.15, zIndex: 10}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t{preview ?\n\t\t\t\t\t\t\t\t<FieldComponentMapper\n\t\t\t\t\t\t\t\t\tusable={false}\n\t\t\t\t\t\t\t\t\tcomponent={component}\n\t\t\t\t\t\t\t\t\tfieldName={fieldName}\n\t\t\t\t\t\t\t\t\tcontainerStyle={{width: \"100%\", height: '100%'}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t<FieldWrapper\n\t\t\t\t\t\t\t\t\tcontainerStyle={{flex: (component === FIELD_COMPONENT_NAMES.TEXT_BOX || component === FIELD_COMPONENT_NAMES.TEXT_BOX_BIG) && 1}}\n\t\t\t\t\t\t\t\t\t// name={`fields[${indexPattern[0]}][${indexPattern[1]}.fieldName]`}\n\t\t\t\t\t\t\t\t\tfieldPath={`fields[${indexPattern[0]}][${indexPattern[1]}]`}\n\t\t\t\t\t\t\t\t\tonDeleteClick={() => setDeleted(true)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<FieldComponentMapper\n\t\t\t\t\t\t\t\t\t\tusable={false}\n\t\t\t\t\t\t\t\t\t\tstyle={{flex: 1}}\n\t\t\t\t\t\t\t\t\t\t// fieldName={fieldName}\n\t\t\t\t\t\t\t\t\t\tcomponent={component}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FieldWrapper>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Draggable>\n\t\t\t\t</Container>\n\n\t\t\t\t{/* Insert Into New Row Below*/}\n\t\t\t\t{(right && !isThisFieldDragging) &&\n\t\t\t\t<ContainerWrapper\n\t\t\t\t\tonDrop={(dropResult)=>onRightDrop(id, dropResult)}\n\t\t\t\t\thovering={hoveringRight}\n\t\t\t\t\tshouldAcceptDrop={()=>{return true}}\n\t\t\t\t\tgetGhostParent={()=>document.body}\n\t\t\t\t\tgroupName=\"lot_field_buttons\"\n\t\t\t\t\tisRow={false}\n\t\t\t\t\tgetChildPayload={index =>\n\t\t\t\t\t\tindex\n\t\t\t\t\t}\n\t\t\t\t\tshowHighlight={false}\n\t\t\t\t\tstyle={{alignSelf: \"stretch\"}}\n\t\t\t\t/>\n\t\t\t\t}\n\t\t\t</styled.RowContainer>\n\n\t\t\t{bottom &&\n\t\t\t<ContainerWrapper\n\t\t\t\tonDrop={(dropResult)=>onBottomDrop(dropResult)}\n\t\t\t\tshouldAcceptDrop={()=>{return true}}\n\t\t\t\t// getGhostParent={()=>document.body}\n\t\t\t\tgroupName=\"lot_field_buttons\"\n\t\t\t\tgetChildPayload={index =>\n\t\t\t\t\tindex\n\t\t\t\t}\n\t\t\t\tstyle={{alignSelf: \"stretch\", display: \"flex\"}}\n\t\t\t>\n\t\t\t\t<styled.BottomContainer\n\t\t\t\t/>\n\t\t\t</ContainerWrapper>\n\t\t\t}\n\t\t</styled.ColumnContainer>\n\n\t)\n}\n\n// Specifies propTypes\nDropContainer.propTypes = {\n};\n\n// Specifies the default values for props:\nDropContainer.defaultProps = {\n\ttop: true,\n\tbottom: true,\n\tleft: true,\n\tright: true,\n};\n\n\n\n\nexport default DropContainer","import React, {useEffect, useState} from \"react\";\n\nimport * as styled from \"./lot_form_creator.style\"\nimport {immutableDelete, immutableInsert, immutableReplace, isArray} from \"../../../../../../../methods/utils/array_utils\";\nimport {arraysEqual, uuidv4} from \"../../../../../../../methods/utils/utils\";\nimport DropContainer from \"../drop_container/drop_container\";\nimport Textbox from \"../../../../../../basic/textbox/textbox\";\nimport {Container} from \"react-smooth-dnd\";\nimport FieldWrapper from \"../../../../../../basic/form/field_wrapper/field_wrapper\";\nimport ContainerWrapper from \"../../../../../../basic/container_wrapper/container_wrapper\";\nimport {FIELD_COMPONENT_NAMES, LOT_EDITOR_SIDEBAR_OPTIONS} from \"../lot_template_editor_sidebar/lot_template_editor_sidebar\";\nimport TextField from \"../../../../../../basic/form/text_field/text_field\";\nimport {useSelector} from \"react-redux\";\n\nconst LotFormCreator = (props) => {\n\n\tconst {\n\t\tpreview,\n\t\tformMode,\n\t\terrors,\n\t\tvalues,\n\t\ttouched,\n\t\tisSubmitting,\n\t\tsubmitCount,\n\t\tsetFieldValue,\n\t\tsubmitForm,\n\t\tloaded,\n\t\tfieldName,\n\t\tfieldParent,\n\t} = props\n\n\tconst draggingFieldId = useSelector(state=> {return state.cardPageReducer.isFieldDragging})\n\tconst [draggingRow, setDraggingRow] = useState(null)\n\tconst [hoveringRow, setHoveringRow] = useState(null)\n\n\tconst {\n\t\tfields: items = []\n\t} = values || {}\n\n\n\tconst findArrLocation = (id, arr, prev) => {\n\t\tlet indices = [...prev]\n\t\tlet found = false\n\n\t\tarr.forEach((currItem, currIndex) => {\n\n\t\t\tif (isArray(currItem)) {\n\t\t\t\tlet [newIndices, newFound] = findArrLocation(id, currItem, [currIndex])\n\t\t\t\tif(newFound) {\n\t\t\t\t\tfound = true\n\t\t\t\t\tif(newIndices.length > 0) indices = [...indices, ...newIndices]\n\t\t\t\t}\n\n\n\n\t\t\t} else {\n\t\t\t\tif(currItem._id === id) {\n\t\t\t\t\tfound = true\n\t\t\t\t\tindices = [...indices, currIndex]\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\treturn [indices, found]\n\t}\n\n\tconst handleVerticalDrop = (dropResult, currRowIndex) => {\n\t\tconst {\n\t\t\tremovedIndex,\n\t\t\taddedIndex,\n\t\t\tpayload\n\t\t} = dropResult\n\n\t\tconst {\n\t\t\tkey,\n\t\t\tcomponent,\n\t\t\t_id: payloadId\n\t\t} = payload\n\n\t\tif(addedIndex !== null) {\n\t\t\tconst [oldSelected, oldIndexPattern, oldFinalIndex, ] = getSelected(payloadId)\n\n\t\t\tlet updatedData\n\t\t\tlet removedImmutable\n\t\t\tlet removedLastItemInRow\n\t\t\tif(isArray(oldIndexPattern) && oldIndexPattern.length > 0) {\n\t\t\t\tremovedImmutable = immutableDelete(oldSelected, oldFinalIndex)\n\t\t\t\tif(removedImmutable.length === 0) {\n\t\t\t\t\tremovedLastItemInRow = true\n\t\t\t\t\tupdatedData = immutableDelete(items, oldIndexPattern[0])\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tupdatedData = getUpdate(items, oldIndexPattern, removedImmutable)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst movingDown = (currRowIndex > oldIndexPattern[0]) && removedLastItemInRow\n\t\t\tif(!(removedLastItemInRow && (currRowIndex === (oldIndexPattern[0] + 1)))) {\n\t\t\t\tconst newItem = {\n\t\t\t\t\t...payload\n\t\t\t\t}\n\n\t\t\t\tconst withInsert = immutableInsert(updatedData ? updatedData : items, [newItem], movingDown ? currRowIndex - 1 : currRowIndex)\n\t\t\t\tsetFieldValue(\"fields\", withInsert)\n\t\t\t}\n\t\t}\n\n\t}\n\n\tconst handleSideDrop = (id, dropResult, isRight) => {\n\t\tconst {\n\t\t\taddedIndex,\n\t\t\tpayload\n\t\t} = dropResult\n\n\t\tconst {\n\t\t\t_id: payloadId\n\t\t} = payload\n\n\t\tif(addedIndex !== null) {\n\n\t\t\tconst [oldSelected, oldIndexPattern, oldFinalIndex, ] = getSelected(payloadId)\n\t\t\tconst [selected, indexPattern, finalIndex, isRow] = getSelected(id)\n\n\t\t\tconst patternsAreEqual = arraysEqual(oldIndexPattern, indexPattern)\n\n\t\t\tconst noMoveRight = (oldFinalIndex === (finalIndex + 1)) && isRight\n\t\t\tconst noMoveLeft = (oldFinalIndex === (finalIndex - 1)) && !isRight\n\n\t\t\tif(patternsAreEqual && (noMoveRight || noMoveLeft)) {\n\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet updatedData\n\t\t\t\tlet removedImmutable\n\t\t\t\tlet removedLastItemInRow\n\t\t\t\tif(isArray(oldIndexPattern) && oldIndexPattern.length > 0) {\n\t\t\t\t\tremovedImmutable = immutableDelete(oldSelected, oldFinalIndex)\n\n\t\t\t\t\tif(removedImmutable.length === 0) {\n\t\t\t\t\t\tupdatedData = immutableDelete(items, oldIndexPattern[0])\n\t\t\t\t\t\tremovedLastItemInRow = true\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tupdatedData = getUpdate(items, oldIndexPattern, removedImmutable)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst newItem = {\n\t\t\t\t\t...payload\n\t\t\t\t}\n\n\t\t\t\tconst didThing = removedLastItemInRow && indexPattern[0] > oldIndexPattern[0]\n\t\t\t\tconst selected_IMMUTABLE = immutableInsert(patternsAreEqual ? removedImmutable : selected, newItem,(isRight && !patternsAreEqual) ? finalIndex + 1 : finalIndex)\n\t\t\t\tupdatedData = getUpdate(updatedData ? updatedData : items, didThing ? [indexPattern[0] - 1] : indexPattern, selected_IMMUTABLE)\n\t\t\t\tsetFieldValue(\"fields\", updatedData, true)\n\t\t\t}\n\t\t}\n\t}\n\n\tconst getSelected = (id) => {\n\n\t\tlet [indexPattern, found] = findArrLocation(id, items, [])\n\t\tconst finalIndex = indexPattern.pop()\n\n\t\tlet selected = [...items]\n\t\tlet isRow = (indexPattern.length % 2 === 0)\n\n\t\tif (isArray(indexPattern)) {\n\n\n\t\t\tindexPattern.forEach((currIndex) => {\n\n\t\t\t\tselected = selected[currIndex]\n\t\t\t})\n\t\t}\n\n\t\treturn [selected, indexPattern, finalIndex, isRow]\n\t}\n\n\tconst getUpdate = (arr, indexPattern, element) => {\n\n\t\tlet trimmedIndexPattern = [...indexPattern]\n\t\t// trimmedIndexPattern.pop()\n\n\t\tlet listRef = element\n\t\tlet currItem = element\n\t\tif(trimmedIndexPattern.length > 0) {\n\t\t\tlet removedIndex = trimmedIndexPattern[0]// = trimmedIndexPattern.pop()\n\t\t\twhile (trimmedIndexPattern.length > 1) {\n\t\t\t\tremovedIndex = trimmedIndexPattern.pop()\n\t\t\t\tlistRef = immutableReplace(getNested(arr, trimmedIndexPattern), currItem, removedIndex)\n\t\t\t\tcurrItem = listRef\n\t\t\t}\n\t\t\tif(trimmedIndexPattern.length === 1) removedIndex = trimmedIndexPattern.pop()\n\t\t\tlistRef = immutableReplace(arr, listRef, removedIndex)\n\t\t}\n\t\telse {\n\t\t\treturn element\n\t\t}\n\n\t\treturn listRef\n\t}\n\n\tconst getNested = (arr, indices) => {\n\t\tlet item = arr\n\t\tindices.forEach((curr) => {\n\t\t\titem = item[curr]\n\t\t})\n\t\treturn item\n\n\t}\n\n\tconst handleCenterDrop = (id, dropResult) => {}\n\n\tconst handleDeleteClick = (id) => {\n\t\tconst [selected, indexPattern, finalIndex, isRow] = getSelected(id)\n\n\t\tconst selected_IMMUTABLE = immutableDelete(selected, finalIndex)\n\n\t\tlet updatedData\n\t\tif(selected_IMMUTABLE.length > 0) {\n\t\t\tupdatedData = getUpdate(items, indexPattern, selected_IMMUTABLE)\n\t\t}\n\t\telse {\n\t\t\tupdatedData = immutableDelete(items, indexPattern.pop())\n\t\t}\n\n\t\tsetFieldValue(\"fields\", updatedData, true)\n\n\n\t}\n\n\tconst mapContainers = (items, mode, prevItems, indexPattern, thisIndex) => {\n\n\t\treturn (\n\t\t\t<styled.ColumnContainer>\n\t\t\t\t<ContainerWrapper\n\t\t\t\t\tonDrop={(dropResult)=>{\n\t\t\t\t\t\thandleVerticalDrop(dropResult, 0)\n\t\t\t\t\t}}\n\t\t\t\t\tshouldAcceptDrop={()=>{return true}}\n\t\t\t\t\t// getGhostParent={()=>document.body}\n\t\t\t\t\tgroupName=\"lot_field_buttons\"\n\t\t\t\t\tgetChildPayload={index =>\n\t\t\t\t\t\tindex\n\t\t\t\t\t}\n\t\t\t\t\thovering={hoveringRow === -1}\n\t\t\t\t\tshowHighlight={false}\n\t\t\t\t\tisRow={true}\n\t\t\t\t\tstyle={{ background: \"coral\", width: !mode && \"1rem\", height: mode && \"1rem\", alignSelf: \"stretch\", flex: items.length === 0 && 1}}\n\t\t\t\t\t// style={{overflow: \"auto\",height: \"100%\", padding: \"1rem 1rem 2rem 1rem\" }}\n\t\t\t\t/>\n\t\t\t\t{items.map((currRow, currRowIndex) => {\n\n\t\t\t\t\tconst isLastRow = currRowIndex === items.length - 1\n\t\t\t\t\treturn <div\n\t\t\t\t\t\tstyle={{flex: isLastRow && 1, display: isLastRow && \"flex\", flexDirection: \"column\"}}\n\t\t\t\t\t\tkey={currRowIndex}\n\t\t\t\t\t>\n\n\t\t\t\t\t<styled.RowContainer>\n\n\t\t\t\t\t\t{currRow.map((currItem, currItemIndex) => {\n\t\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\t\t_id: dropContainerId,\n\t\t\t\t\t\t\t\tcomponent,\n\t\t\t\t\t\t\t\tfieldName\n\t\t\t\t\t\t\t} = currItem || {}\n\n\t\t\t\t\t\t\tconst isLastItem = currItemIndex === currRow.length - 1\n\t\t\t\t\t\t\tconst indexPattern = [currRowIndex, currItemIndex]\n\t\t\t\t\t\t\tconst isOnlyItem = currRow.length === 1\n\n\t\t\t\t\t\t\treturn <DropContainer\n\t\t\t\t\t\t\t\tcurrRowIndex={currRowIndex}\n\t\t\t\t\t\t\t\tsetDraggingRow={() => setDraggingRow(currRowIndex)}\n\t\t\t\t\t\t\t\tclearDraggingRow={() => setDraggingRow(null)}\n\t\t\t\t\t\t\t\thoveringRow={hoveringRow}\n\t\t\t\t\t\t\t\tsetHoveringRow={(val) => setHoveringRow(val)}\n\t\t\t\t\t\t\t\tclearHoveringRow={() => setHoveringRow(null)}\n\t\t\t\t\t\t\t\tfieldName={fieldName}\n\t\t\t\t\t\t\t\tpayload={items[currRowIndex][currItemIndex]}\n\t\t\t\t\t\t\t\tkey={dropContainerId}\n\t\t\t\t\t\t\t\tindexPattern={indexPattern}\n\t\t\t\t\t\t\t\tonDeleteClick={handleDeleteClick}\n\t\t\t\t\t\t\t\tcomponent={component}\n\t\t\t\t\t\t\t\tid={dropContainerId}\n\t\t\t\t\t\t\t\tonBottomDrop={(dropResult) => handleVerticalDrop(dropResult, currRowIndex + 1)}\n\t\t\t\t\t\t\t\tonTopDrop={(dropResult) => handleVerticalDrop(dropResult, currRowIndex)}\n\t\t\t\t\t\t\t\tonLeftDrop={(id, dropResult) => handleSideDrop(id, dropResult, false)}\n\t\t\t\t\t\t\t\tonRightDrop={(id, dropResult) => handleSideDrop(id, dropResult, true)}\n\t\t\t\t\t\t\t\tonCenterDrop={handleCenterDrop}\n\t\t\t\t\t\t\t\ttop={false}\n\t\t\t\t\t\t\t\tbottom={false}\n\t\t\t\t\t\t\t\tright={true}\n\t\t\t\t\t\t\t\tleft={true}\n\t\t\t\t\t\t\t\tpreview={preview}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t})}\n\n\t\t\t\t\t</styled.RowContainer>\n\n\t\t\t\t\t\t{!((draggingRow === currRowIndex) && (currRow.length === 1)) &&\n\t\t\t\t\t\t<ContainerWrapper\n\t\t\t\t\t\t\tonDrop={(dropResult)=>{\n\t\t\t\t\t\t\t\thandleVerticalDrop(dropResult, currRowIndex + 1)\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\thovering={hoveringRow === currRowIndex}\n\t\t\t\t\t\t\tshouldAcceptDrop={()=>{return true}}\n\t\t\t\t\t\t\tgetGhostParent={()=>document.body}\n\t\t\t\t\t\t\tgroupName=\"lot_field_buttons\"\n\t\t\t\t\t\t\tgetChildPayload={index =>\n\t\t\t\t\t\t\t\tindex\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tshowHighlight={false}\n\t\t\t\t\t\t\tisRow={true}\n\t\t\t\t\t\t\tstyle={{minHeight: isLastRow && \"10rem\",flex: isLastRow ? 1 : 0, background: \"coral\", width: !mode && \"1rem\", height: mode && \"1rem\"}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\n\t\t\t\t\t</div>\n\t\t\t\t})}\n\t\t\t</styled.ColumnContainer>\n\t\t)\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{mapContainers(items, true, items)}\n\t\t</>\n\t)\n\n}\n\nexport default LotFormCreator","import React, {useState, useEffect, useContext} from \"react\";\n\n// external functions\nimport PropTypes from \"prop-types\";\nimport {Formik} from \"formik\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport FadeLoader from \"react-spinners/FadeLoader\"\n\n// internal components\nimport TextField from \"../../../../../basic/form/text_field/text_field\";\nimport Textbox from \"../../../../../basic/textbox/textbox\";\nimport Button from \"../../../../../basic/button/button\";\nimport BackButton from '../../../../../basic/back_button/back_button';\nimport ConfirmDeleteModal from '../../../../../basic/modals/confirm_delete_modal/confirm_delete_modal'\n\n// actions\nimport { pageDataChanged } from \"../../../../../../redux/actions/sidebar_actions\"\n\n// constants\nimport {FORM_MODES} from \"../../../../../../constants/scheduler_constants\";\n\n// utils\nimport {LotFormSchema} from \"../../../../../../methods/utils/form_schemas\";\nimport {isObject} from \"../../../../../../methods/utils/object_utils\";\nimport set from \"lodash/set\";\n\n// import styles\nimport * as styled from \"../card_editor/lot_editor.style\"\n\n// logger\nimport log from '../../../../../../logger'\nimport LotTemplateEditorSidebar from \"./lot_template_editor_sidebar/lot_template_editor_sidebar\";\nimport LotFormCreator from \"./lot_form_creator/lot_form_creator\";\nimport SubmitErrorHandler from \"../../../../../basic/form/submit_error_handler/submit_error_handler\";\nimport {\n\tdeleteLotTemplate,\n\tgetLotTemplate, getLotTemplates,\n\tpostLotTemplate,\n\tputLotTemplate, setSelectedLotTemplate\n} from \"../../../../../../redux/actions/lot_template_actions\";\nimport NumberInput from \"../../../../../basic/number_input/number_input\";\nimport useChange from \"../../../../../basic/form/useChange\";\nimport {\n\tDEFAULT_COUNT_DISPLAY_NAME,\n\tDEFAULT_DISPLAY_NAMES,\n\tDEFAULT_NAME_DISPLAY_NAME,\n\tEMPTY_DEFAULT_FIELDS, getDefaultFields\n} from \"../../../../../../constants/lot_contants\";\nimport {ThemeContext} from \"styled-components\";\n\n\nconst disabledStyle = {\n\t// filter: \"contrast(50%)\"\n}\nconst logger = log.getLogger(\"CardEditor\")\nlogger.setLevel(\"debug\")\n\nconst buttonStyle = {marginBottom: '0rem', marginTop: 0}\n\nconst FormComponent = (props) => {\n\n\tconst {\n\t\tformMode,\n\t\tlotTemplateId,\n\t\tclose,\n\t\tonDeleteClick,\n\t\terrors,\n\t\tvalues,\n\t\ttouched,\n\t\tisSubmitting,\n\t\tsubmitCount,\n\t\tsubmitForm,\n\t\tformikProps,\n\t\tonBackClick,\n\t\tloaded,\n\t\tconfirmDeleteTemplateModal,\n\t\tsetConfirmDeleteTemplateModal\n\t} = props\n\n\tconst themeContext = useContext(ThemeContext)\n\n\t// useChange()\n\n\t// component state\n\tconst [preview, ] = useState(false)\n\n\n\t/*\n\t* handles when enter key is pressed\n\t*\n\t* This effect attaches an event listener to the keydown event\n\t* The listener effect listens for 'Enter' and 'NumpadEnter' events\n\t* If either of these events occur, the form will be submitted\n\t* */\n\tuseEffect(() => {\n\t\t// keydown event listener\n\t\tconst listener = event => {\n\n\t\t\t// check if event code corresponds to enter\n\t\t\tif (event.code === \"Enter\" || event.code === \"NumpadEnter\" || event.code === 13 || event.key === \"Enter\") {\n\t\t\t\t// prevent default actions\n\t\t\t\tevent.preventDefault()\n\t\t\t\tevent.stopPropagation()\n\t\t\t\tsubmitForm()\n\n\t\t\t}\n\t\t}\n\n\t\t// add event listener to 'keydown'\n\t\tdocument.addEventListener(\"keydown\", listener);\n\n\t\t// on dismount remove the event listener\n\t\treturn () => {\n\t\t\tdocument.removeEventListener(\"keydown\", listener);\n\t\t};\n\t}, [])\n\n\treturn(\n\t\t<styled.StyledForm>\n\t\t\t<ConfirmDeleteModal\n\t\t\t\t\tisOpen={!!confirmDeleteTemplateModal}\n\t\t\t\t\ttitle={\"Are you sure you want to delete this Lot Template?\"}\n\t\t\t\t\tbutton_1_text={\"Yes\"}\n\t\t\t\t\tbutton_2_text={\"No\"}\n\t\t\t\t\thandleClose={()=>setConfirmDeleteTemplateModal(null)}\n\t\t\t\t\thandleOnClick1={() => {\n\t\t\t\t\t\t\tsetConfirmDeleteTemplateModal(null)\n\t\t\t\t\t\t\tonDeleteClick()\n\t\t\t\t\t\t\tclose()\n\t\t\t\t\t}}\n\t\t\t\t\thandleOnClick2={() => {\n\t\t\t\t\t\t\tsetConfirmDeleteTemplateModal(null)\n\t\t\t\t\t}}\n\t\t\t/>\n\t\t\t<SubmitErrorHandler\n\t\t\t\tsubmitCount={submitCount}\n\t\t\t\tisValid={formikProps.isValid}\n\t\t\t\tonSubmitError={() => {}}\n\t\t\t\tformik={formikProps}\n\t\t\t/>\n\n\n\t\t\t<styled.RowContainer style={{flex: 1, alignItems: \"stretch\", overflow: \"hidden\"}}>\n\t\t\t\t<LotTemplateEditorSidebar/>\n\n\t\t\t\t<styled.ScrollContainer>\n\t\t\t\t\t<styled.SectionContainer>\n\t\t\t\t\t\t<styled.FieldsHeader\n\t\t\t\t\t\t\tstyle={disabledStyle}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<styled.NameContainer>\n\t\t\t\t\t\t\t\t{/*<styled.LotName>Lot Name</styled.LotName>*/}\n\t\t\t\t\t\t\t\t<TextField\n\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tfontSize: themeContext.fontSize.sz3,\n\t\t\t\t\t\t\t\t\t\tfontWeight: themeContext.fontWeight.bold,\n\t\t\t\t\t\t\t\t\t\twhiteSpace: \"nowrap\" ,\n\t\t\t\t\t\t\t\t\t\tmarginRight: \"2rem\",\n\t\t\t\t\t\t\t\t\t\tmarginBottom: \".5rem\",\n\t\t\t\t\t\t\t\t\t\twidth: \"20rem\"\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tschema='lots'\n\t\t\t\t\t\t\t\t\tinputStyle={{fontSize: '1rem'}}\n\t\t\t\t\t\t\t\t\tname={\"displayNames.name\"}\n\t\t\t\t\t\t\t\t\tInputComponent={Textbox}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tflexDirection: \"row\",\n\t\t\t\t\t\t\t\t\t\talignItems: \"center\",\n\t\t\t\t\t\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\t\t\t\t\t\tposition: \"relative\",\n\t\t\t\t\t\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<Textbox\n\t\t\t\t\t\t\t\t\t\tstyle={{flex: 1}}\n\t\t\t\t\t\t\t\t\t\tusable={false}\n\t\t\t\t\t\t\t\t\t\tschema='lots'\n\t\t\t\t\t\t\t\t\t\ttextboxContainerStyle={{flex: 1}}\n\t\t\t\t\t\t\t\t\t\tinputStyle={{flex: 1, pointerEvents: 'none'}}\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter name...\"\n\t\t\t\t\t\t\t\t\t\tInputComponent={Textbox}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</styled.NameContainer>\n\t\t\t\t\t\t</styled.FieldsHeader>\n\t\t\t\t\t\t<styled.TheBody>\n\t\t\t\t\t\t\t{loaded ?\n\t\t\t\t\t\t\t\t<LotFormCreator\n\t\t\t\t\t\t\t\t\t{...formikProps}\n\t\t\t\t\t\t\t\t\tpreview={preview}\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t<FadeLoader\n\t\t\t\t\t\t\t\t\tcss={styled.FadeLoaderCSS}\n\t\t\t\t\t\t\t\t\theight={5}\n\t\t\t\t\t\t\t\t\twidth={3}\n\t\t\t\t\t\t\t\t\tloading={true}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\t</styled.TheBody>\n\t\t\t\t\t</styled.SectionContainer>\n\n\t\t\t\t\t<styled.BodyContainer style={disabledStyle}>\n\t\t\t\t\t\t<div style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\"}}>\n\t\t\t\t\t\t\t<styled.ObjectInfoContainer>\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tname={\"displayNames.count\"}\n\t\t\t\t\t\t\t\t\tInputComponent={Textbox}\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tdisplay: \"inline-flex\",\n\t\t\t\t\t\t\t\t\t\tmarginRight: \"1rem\",\n\t\t\t\t\t\t\t\t\t\tfontWeight: \"bold\",\n\t\t\t\t\t\t\t\t\t\talignItems: \"center\",\n\t\t\t\t\t\t\t\t\t\ttextAlign: \"center\",\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<NumberInput\n\t\t\t\t\t\t\t\t\tinputDisabled={true}\n\t\t\t\t\t\t\t\t\tthemeContext={themeContext}\n\t\t\t\t\t\t\t\t\tminusDisabled={true}\n\t\t\t\t\t\t\t\t\tplusDisabled={true}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</styled.ObjectInfoContainer>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</styled.BodyContainer>\n\t\t\t\t</styled.ScrollContainer>\n\t\t\t</styled.RowContainer>\n\t\t</styled.StyledForm>\n\t)\n\n}\n\nconst LotCreatorForm = (props) => {\n\tconst {\n\t\tisOpen,\n\t\tclose,\n\t\tprocessOptions,\n\t\tshowProcessSelector,\n\t\tlotTemplateId,\n\t\tonBackClick,\n\t\tformMode,\n\t\tsetFormMode,\n\t\tformikProps,\n\t\tconfirmDeleteTemplateModal,\n\t\tsetConfirmDeleteTemplateModal\n\t} = props\n\n\t// actions\n\n\tconst dispatch = useDispatch()\n\tconst dispatchPostLotTemplate= async (lotTemplate) => await dispatch(postLotTemplate(lotTemplate))\n\tconst dispatchGetLotTemplate = async (id) => await dispatch(getLotTemplate(id))\n\tconst dispatchGetLotTemplates = async () => await dispatch(getLotTemplates())\n\n\tconst dispatchDeleteLotTemplate = async (id) => await dispatch(deleteLotTemplate(id))\n\tconst dispatchSetSelectedLotTemplate = (id) => dispatch(setSelectedLotTemplate(id))\n\n\tconst lotTemplates = useSelector(state => {return state.lotTemplatesReducer.lotTemplates})\n\n\tconst [loaded, setLoaded] = useState(false)\n\n\t// get lot object from redux by cardId\n\tconst lotTemplate = lotTemplates[lotTemplateId] || null\n\n\t/*\n\t*\n\t* */\n\tconst handleDeleteClick = async () => {\n\n\t\tdispatchDeleteLotTemplate(lotTemplateId)\n\t\tdispatchSetSelectedLotTemplate(null)\n\n\t\t// close()\n\t}\n\n\t/*\n\t*\n\t* */\n\tconst handleGetLotTemplate = async (id) => {\n\t\tif(id) {\n\t\t\tconst result = await dispatchGetLotTemplate(id)\n\t\t}\n\t\tif(!loaded) {\n\t\t\tsetLoaded(true)\n\t\t}\n\t}\n\n\t/*\n\t*\n\t* */\n\tuseEffect( () => {\n\t\thandleGetLotTemplate(lotTemplateId)\n\t\tvar timer = setInterval(()=>handleGetLotTemplate(lotTemplateId),5000)\n\n\t\tif(lotTemplateId && (formMode !== FORM_MODES.UPDATE)) {\n\t\t\tsetFormMode(FORM_MODES.UPDATE)\n\t\t}\n\t\telse if(!lotTemplate && (formMode !== FORM_MODES.CREATE)) {\n\t\t\tsetFormMode(FORM_MODES.CREATE)\n\t\t}\n\n\t\treturn () => {\n\t\t\tclearInterval(timer)\n\t\t}\n\n\t}, [lotTemplateId])\n\n\t/*\n\t* if lot exists, set form mode to update\n\t* */\n\tuseEffect( () => {\n\t\tif(lotTemplate && !loaded) {\n\t\t\tsetLoaded(true) // if lot already exists, set loaded to true\n\t\t}\n\n\t}, [lotTemplate])\n\n\tuseEffect( () => {\n\t\tdispatchGetLotTemplates()\n\t}, [])\n\n\n\n\t/*\n\t*\n\t* */\n\n\n\treturn(\n\t\t<styled.Container>\n\n\n\n\n\t\t\t\t\t\t<FormComponent\n\t\t\t\t\t\t\tloaded={loaded}\n\t\t\t\t\t\t\tclose={close}\n\t\t\t\t\t\t\tformMode={formMode}\n\t\t\t\t\t\t\tisOpen={isOpen}\n\t\t\t\t\t\t\tonDeleteClick={handleDeleteClick}\n\t\t\t\t\t\t\tformikProps={formikProps}\n\t\t\t\t\t\t\t{...formikProps}\n\t\t\t\t\t\t\tprocessOptions={processOptions}\n\t\t\t\t\t\t\tshowProcessSelector={showProcessSelector}\n\t\t\t\t\t\t\tlotTemplateId={lotTemplateId}\n\t\t\t\t\t\t\tonBackClick={onBackClick}\n\t\t\t\t\t\t\tconfirmDeleteTemplateModal={confirmDeleteTemplateModal}\n\t\t\t\t\t\t\tsetConfirmDeleteTemplateModal={setConfirmDeleteTemplateModal}\n\t\t\t\t\t\t/>\n\n\n\n\t\t</styled.Container>\n\t)\n}\n\n// Specifies propTypes\nLotCreatorForm.propTypes = {\n\tbinId: PropTypes.string,\n\tshowProcessSelector: PropTypes.bool,\n\tonBackClick: PropTypes.func,\n};\n\n// Specifies the default values for props:\nLotCreatorForm.defaultProps = {\n\tbinId: \"QUEUE\",\n\tshowProcessSelector: false,\n\tonBackClick: () => null\n};\n\nexport default LotCreatorForm\n","import styled from \"styled-components\"\nimport * as commonCss from \"../../../../../common_css/layout\"\n\n\nexport const Container = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n  \tmargin-bottom: 1rem;\n`","import React, {useEffect, useState} from 'react'\n\n// components internal\nimport Button from \"../../../../basic/button/button\"\n\n// functions external\nimport PropTypes from 'prop-types'\n\n// styles\nimport * as styled from \"./multi_select_options.style\"\n\nconst MultiSelectOptions = (props) => {\n\n\tconst {\n\t\tselectedLots,\n\t\tonDeleteClick,\n\t\tonMoveClick,\n\t\tonClearClick\n\t} = props\n\n\tconst [selectedLotsCount, setSelectedLotsCount] = useState(selectedLots.length)\n\n\tuseEffect(() => {\n\t\tsetSelectedLotsCount(selectedLots.length)\n\t}, [selectedLots])\n\n\treturn (\n\t\t<styled.Container>\n\t\t\t<Button\n\t\t\t\tstyle={{margin: \"0 1rem 0 0\"}}\n\t\t\t\ttype={\"button\"}\n\t\t\t\tschema={\"delete\"}\n\t\t\t\ttertiary\n\t\t\t\tonClick={onDeleteClick}\n\t\t\t>\n\t\t\t\t<i style={{marginRight: \".5rem\"}} className=\"fa fa-trash\" aria-hidden=\"true\"/>\n\t\t\t\tDelete ({selectedLotsCount})\n\t\t\t</Button>\n\t\t\t<Button\n\t\t\t\tstyle={{margin: \"0 1rem 0 0\"}}\n\t\t\t\ttype={\"button\"}\n\t\t\t\tschema={\"lots\"}\n\t\t\t\tonClick={onMoveClick}\n\t\t\t\tlabel={`Move (${selectedLotsCount})`}\n\t\t\t/>\n\t\t\t<Button\n\t\t\t\tstyle={{margin: 0}}\n\t\t\t\ttype={\"button\"}\n\t\t\t\tsecondary\n\t\t\t\tschema={\"lots\"}\n\t\t\t\tonClick={onClearClick}\n\t\t\t\tlabel={`Clear Selected`}\n\t\t\t/>\n\n\t\t</styled.Container>\n\t)\n}\n\nMultiSelectOptions.propTypes = {\n\tselectedLots: PropTypes.array,\n\tonDeleteClick: PropTypes.func,\n\tonClearClick: PropTypes.func,\n\tonMoveClick: PropTypes.func,\n}\n\nMultiSelectOptions.defaultProps = {\n\tselectedLots: [],\n\tonDeleteClick: () => {},\n\tonClearClick: () => {},\n\tonMoveClick: () => {},\n}\n\nexport default MultiSelectOptions\n","import React, {useContext, useEffect, useRef, useState} from \"react\";\n\n// components internal\nimport DropDownSearch from \"../../../../basic/drop_down_search_v2/drop_down_search\";\nimport Textbox from \"../../../../basic/textbox/textbox\";\n\n// constants\nimport {SORT_MODES, SORT_OPTIONS} from \"../../../../../constants/common_contants\";\nimport {\n\tFIELD_DATA_TYPES,\n\tFLAG_OPTIONS,\n\tLOT_FILTER_OPTIONS,\n\tLOT_SORT_OPTIONS,\n\tSORT_DIRECTIONS\n} from \"../../../../../constants/lot_contants\";\n\n// functions external\nimport {ThemeContext} from \"styled-components\";\nimport {useSelector} from \"react-redux\";\n\n// utils\nimport {isArray} from \"../../../../../methods/utils/array_utils\";\nimport {getAllTemplateFields} from \"../../../../../methods/utils/lot_utils\";\n\n// styles\nimport * as styled from './zone_header.style'\nimport LotSortBar from \"../lot_sort_bar/lot_sort_bar\";\nimport LotFilterBar from \"../lot_filter_bar/lot_filter_bar\";\nimport {\n\tcolumnCss, columnCss3,\n\tcontainerCss,\n\tdescriptionCss,\n\tdropdownCss,\n\treactDropdownSelectCss,\n\tvalueCss\n} from \"../lot_bars.style\";\nimport MultiSelectOptions from \"../multi_select_options/multi_select_options\";\n\nconst ZoneHeader = (props) => {\n\n\tconst {\n\t\tselectedProcesses,\n\t\tsetSelectedProcesses,\n\t\tsortDirection,\n\t\tsetSortDirection,\n\t\tzone,\n\t\tlotFilterValue,\n\t\tsetLotFilterValue,\n\t\tsetSortMode,\n\t\tsortMode,\n\t\tselectedFilterOption,\n\t\tsetSelectedFilterOption,\n\n\t\tselectedLots,\n\t\tonDeleteClick,\n\t\tonMoveClick,\n\t\tonClearClick,\n\t} = props\n\n\tconst lotTemplates = useSelector(state => {return state.lotTemplatesReducer.lotTemplates}) || {}\n\n\tconst [lotFilterOptions, setLotFilterOptions] = useState([...Object.values(LOT_FILTER_OPTIONS)])\n\tconst [lotSortOptions, setLotSortOptions] = useState([...Object.values(LOT_SORT_OPTIONS)])\n\n\tconst [size, setSize] = useState({\n\t\twidth: undefined,\n\t\theight: undefined,\n\t\toffsetLeft: undefined,\n\t\toffsetTop: undefined,\n\t})\n\n\tconst sizeRef = useRef(null)\n\n\tuseEffect(() => {\n\n\t\t// if sizeRef is assigned\n\t\tif (sizeRef.current) {\n\n\t\t\t// extract dimensions of sizeRef\n\t\t\tlet height = sizeRef.current.offsetHeight;\n\t\t\tlet width = sizeRef.current.offsetWidth;\n\t\t\tlet offsetTop = sizeRef.current.offsetTop;\n\t\t\tlet offsetLeft = sizeRef.current.offsetLeft;\n\n\t\t\t// set zoneSize\n\t\t\tsetSize({\n\t\t\t\twidth: width,\n\t\t\t\theight: height,\n\t\t\t\toffsetTop: offsetTop,\n\t\t\t\toffsetLeft: offsetLeft,\n\t\t\t});\n\t\t}\n\n\t}, [sizeRef, window.innerWidth])\n\n\tuseEffect(() => {\n\t\tconst templateFields = getAllTemplateFields()\n\n\t\tlet tempLotFilterOptions = [...Object.values(LOT_FILTER_OPTIONS)]\n\t\tlet tempLotSortOptions = [...Object.values(LOT_SORT_OPTIONS)]\n\n\t\ttemplateFields.map((currTemplateField) => {\n\t\t\ttempLotFilterOptions.push(currTemplateField)\n\n\t\t\tconst {\n\t\t\t\tdataType,\n\t\t\t\tlabel\n\t\t\t} = currTemplateField\n\n\t\t\tif(dataType === FIELD_DATA_TYPES.DATE_RANGE) {\n\t\t\t\ttempLotSortOptions.push({\n\t\t\t\t\t...currTemplateField,\n\t\t\t\t\tlabel: `${label} (start)`,\n\t\t\t\t\tindex: 0,\n\t\t\t\t\tfieldName: label\n\t\t\t\t})\n\t\t\t\ttempLotSortOptions.push({\n\t\t\t\t\t...currTemplateField,\n\t\t\t\t\tlabel: `${label} (end)`,\n\t\t\t\t\tindex: 1,\n\t\t\t\t\tfieldName: label\n\t\t\t\t})\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttempLotSortOptions.push({\n\t\t\t\t\t...currTemplateField,\n\t\t\t\t\tfieldName: label\n\t\t\t\t})\n\t\t\t}\n\n\n\n\t\t})\n\n\t\tsetLotFilterOptions(tempLotFilterOptions)\n\t\tsetLotSortOptions(tempLotSortOptions)\n\t}, [lotTemplates])\n\n\tconst selectedSortOption =  SORT_OPTIONS.find((currOption) => currOption.sortMode === sortMode)\n\n\tconst themeContext = useContext(ThemeContext)\n\n\tconst processes = useSelector(state => { return Object.values(state.processesReducer.processes) }) || []\n\tconst currentMapId = useSelector(state => state.settingsReducer.settings.currentMapId)\n\tconst maps = useSelector(state => state.mapReducer.maps)\n\tconst currentMap = Object.values(maps).find(map => map._id === currentMapId)\n\n\treturn (\n\t\t<styled.Container>\n\n\t\t\t<styled.SortFilterContainer>\n\t\t\t{/* {zone === \"summary\" &&\n\t\t\t<styled.ColumnContainer\n\t\t\t\tcss={columnCss3}\n\t\t\t>\n\t\t\t\t<styled.Description>Processes:</styled.Description>\n\t\t\t\t<div\n\t\t\t\t\tref={sizeRef}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tflex: 1,\n\t\t\t\t\t\toverflow: \"hidden\"\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t<DropDownSearch\n\t\t\t\t\tmaxDropdownWidth={`${size.width}px` }\n\t\t\t\t\tportal={document.getElementById(\"root\")}\n\t\t\t\t\tcontainerCss={containerCss}\n\t\t\t\t\tdropdownCss={dropdownCss}\n\t\t\t\t\tvalueCss={valueCss}\n\t\t\t\t\tschema={\"lots\"}\n\t\t\t\t\tplaceholder='Select processes...'\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tbackground: themeContext.bg.secondary,\n\t\t\t\t\t\tflex: 1,\n\t\t\t\t\t\toverflow: \"hidden\"\n\t\t\t\t\t}}\n\t\t\t\t\tonClearAll={()=>{\n\t\t\t\t\t\tsetSelectedProcesses([])\n\t\t\t\t\t}}\n\t\t\t\t\tmulti\n\t\t\t\t\tvalues={selectedProcesses}\n\t\t\t\t\toptions={processes.filter((currProcess) => currProcess.map_id === currentMap._id)}\n\t\t\t\t\tonChange={values => {\n\t\t\t\t\t\tsetSelectedProcesses(values)\n\t\t\t\t\t}}\n\t\t\t\t\tpattern={null}\n\t\t\t\t\tlabelField={'name'}\n\t\t\t\t\tvalueField={\"_id\"}\n\t\t\t\t\tonDropdownOpen={() => {\n\t\t\t\t\t}}\n\t\t\t\t\tonRemoveItem={(values)=> {\n\t\t\t\t\t\tsetSelectedProcesses(values)\n\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</styled.ColumnContainer>\n\t\t\t} */}\n\n\t\t\t<styled.OptionContainer>\n\t\t\t<LotSortBar\n\t\t\t\tsortMode={sortMode}\n\t\t\t\tsetSortMode={setSortMode}\n\t\t\t\tsortDirection={sortDirection}\n\t\t\t\tsetSortDirection={setSortDirection}\n\t\t\t\tcolumnCss={columnCss3}\n\t\t\t\tcontainerCss={containerCss}\n\t\t\t\tdropdownCss={dropdownCss}\n\t\t\t\tvalueCss={valueCss}\n\t\t\t/>\n\t\t\t</styled.OptionContainer>\n\n\t\t\t<styled.OptionContainer>\n\t\t\t<LotFilterBar\n\t\t\t\tlotFilterValue={lotFilterValue}\n\t\t\t\tsetLotFilterValue={setLotFilterValue}\n\t\t\t\tselectedFilterOption={selectedFilterOption}\n\t\t\t\tsetSelectedFilterOption={setSelectedFilterOption}\n\t\t\t\tcolumnCss={columnCss3}\n\t\t\t\tcontainerCss={containerCss}\n\t\t\t\t// descriptionCss={descriptionCss}\n\t\t\t\tdropdownCss={dropdownCss}\n\t\t\t\tvalueCss={valueCss}\n\t\t\t\treactDropdownSelectCss={reactDropdownSelectCss}\n\t\t\t/>\n\t\t\t</styled.OptionContainer>\n\t\t\t</styled.SortFilterContainer>\n\n\t\t\t{selectedLots.length > 0 &&\n\t\t\t<MultiSelectOptions\n\t\t\t\tselectedLots={selectedLots}\n\t\t\t\tonDeleteClick={onDeleteClick}\n\t\t\t\tonMoveClick={onMoveClick}\n\t\t\t\tonClearClick={onClearClick}\n\t\t\t/>\n\t\t\t}\n\t\t</styled.Container>\n\t)\n}\n\nexport default ZoneHeader\n","import styled from 'styled-components'\nimport {Calendar} from \"react-calendar\";\n\n\nexport const TitleContainer = styled.h1`\n    font-size: ${props => props.theme.fontSize.sz2};\n    font-family: ${props => props.theme.font.primary};\n    color: ${props => props.theme.bg.septenary};\n    margin-top: .6rem;\n`;\n\nexport const DefaultContainer = styled.div`\n`;\n\nexport const DefaultFieldContentContainer = styled.div`\n    width: 100%;\n    height: auto;\n    position: relative;\n`;\n\nexport const DefaultFieldDropdownContainer = styled.div`\n    flex: 1;\n`;\n\nexport const IconContainerComponent = styled.div`\n    width: auto;\n    height: auto;\n    position: absolute;\n    top: 50%;\n    right: 2rem;\n    transform: translateY(-50%);\n    margin: 0;\n    padding: 0;\n`;\n\n\n","import React, { useEffect, useState } from 'react'\n\n// functions external\nimport PropTypes from 'prop-types'\nimport { useField, useFormikContext } from \"formik\"\n\n// import styles\nimport * as styled from './calendar_field.style'\n\n// components internal\nimport ErrorTooltip from \"../error_tooltip/error_tooltip\"\nimport Calendar from \"../../calendar/calendar\"\n\n// utils\nimport {isArray} from \"../../../../methods/utils/array_utils\"\nimport { getMessageFromError } from \"../../../../methods/utils/form_utils\"\n\n\nexport const CALENDAR_FIELD_MODES = {\n\tSTART: \"START\",\n\tEND: \"END\",\n\tRANGE: \"RANGE\",\n\tSINGLE: \"SINGLE\",\n}\n\nconst CalendarField = ({\n\tonChange,\n\tContainer,\n\tonDropdownClose,\n\tmode,\n\tmapInput,\n\tmapOutput,\n\tminDate,\n\tmaxDate,\n   selectRange,\n\tindex,\n\t...props\n}) => {\n\n\tconst { setFieldValue, setFieldTouched, ...formikContext } = useFormikContext()\n\tconst [{value: fieldValue, name: fieldName, ...field}, {initialValue, ...meta}] = useField(props)\n\tconst hasError = meta.touched && meta.error\n\n\tconst [currentStartDate, setCurrentStartDate] = useState(isArray(fieldValue) ? fieldValue[0] : null)\n\tconst [currentEndDate, setCurrentEndDate] = useState(isArray(fieldValue) ? fieldValue[1] : null)\n\n\tuseEffect(() => {\n\t\tsetCurrentStartDate(isArray(fieldValue) ? fieldValue[0] : null)\n\t\tsetCurrentEndDate(isArray(fieldValue) ? fieldValue[1] : null)\n\t}, [fieldValue, index])\n\n\tconst errorMessage = getMessageFromError(meta.error)\n\n\treturn (\n\t\t<Container>\n\t\t\t\t<Calendar\n\t\t\t\t\t{...field}\n\t\t\t\t\t{...props}\n\t\t\t\t\tselectRange={selectRange}\n\t\t\t\t\tvalue={mapInput( fieldValue)}\n\t\t\t\t\tallowPartialRange\n\t\t\t\t\tminDate={minDate ? minDate : (index !== null && index !== 0) ? currentStartDate : null}\n\t\t\t\t\tmaxDate={maxDate ? maxDate : (index !== null && index !== 1) ? currentEndDate : null}\n\t\t\t\t\tonChange={value => {\n\t\t\t\t\t\tconst isTouched = meta.touched\n\t\t\t\t\t\tif(!isTouched) {\n\t\t\t\t\t\t\tsetFieldTouched(true)\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tsetFieldValue((index !== null) ? `${fieldName}[${index}]` : fieldName, mapOutput(value))\n\n\t\t\t\t\t\tonChange && onChange(value)\n\t\t\t\t\t}}\n\n\t\t\t\t/>\n\t\t</Container>\n\t)\n}\n\n// Specifies propTypes\nCalendarField.propTypes = {\n\tselectRange: PropTypes.bool\n}\n\n// Specifies the default values for props:\nCalendarField.defaultProps = {\n\tContainer: styled.DefaultContainer,\n\tonChange: null,\n\tmapInput: (val) => val,\n\tmapOutput: (val) => val,\n\tselectRange: false\n}\n\nexport default CalendarField\n","import * as Yup from 'yup';\n\nimport { notBrokenRegex, notTaskDeletedRegex } from \"./regex_utils\";\nimport { isObject } from \"./object_utils\";\nimport { get } from \"lodash\"\nimport { isArray } from \"./array_utils\";\nimport { LOT_TEMPLATES_RESERVED_FIELD_NAMES } from \"../../constants/form_constants\";\nimport {convertCardDate} from \"./card_utils\";\nimport {isEqualCI, isString} from \"./string_utils\";\nimport {FIELD_DATA_TYPES} from \"../../constants/lot_contants\";\n\nconst { object, lazy, string, number } = require('yup')\nconst mapValues = require('lodash/mapValues')\n\nYup.addMethod(Yup.object, 'startEndDate', function (startPath, endPath, message) {\n    return this.test('startEndDate', message, function (value) {\n\n        if (!value) return true\n\n        const {\n            path,\n            createError\n        } = this\n\n        const startDate = convertCardDate(value[startPath])\n        const endDate = convertCardDate(value[endPath])\n\n        if (startDate && endDate) {\n            if (endDate < startDate) {\n                return this.createError({\n                    path: `${path}`,\n                    message,\n                });\n            }\n        }\n        return true;\n    });\n});\n\nexport const scheduleSchema = Yup.object().shape({\n    name: Yup.string()\n        .min(1, '1 character minimum.')\n        .max(50, '50 character maximum.')\n        .required('Please enter a name.'),\n    task: Yup.array().of(\n        Yup.object().shape({\n            name: Yup.string()\n                // .min(1, '1 character minimum')\n                // .max(2, '50 character maximum')\n                .matches(notTaskDeletedRegex, \"Task is deleted.\")\n                .required('Please select a task.'),\n            status: Yup.string().matches(notBrokenRegex, \"Task is broken.\"),\n        })\n    ).required('Required'),\n    days_on: Yup.array()\n        .min(1, 'Please select at least one day.')\n        .required('Required'),\n    start_time: Yup.string()\n        .required('Required'),\n    time_interval: Yup.string(), // not required\n    stop_time: Yup.string() // not required\n});\n\nexport const reportEventSchema = Yup.object().shape({\n    label: Yup.string()\n        .min(1, '1 character minimum.')\n        .max(50, '50 character maximum.')\n        .required('Please enter a label.'),\n    description: Yup.string()\n});\n\nexport const objectSchema = Yup.object().shape({\n    name: Yup.string()\n        .min(1, '1 character minimum.')\n        .max(50, '50 character maximum.')\n        .required('Please enter a name.'),\n    description: Yup.string()\n        .max(1000, '1000 character maximum.'),\n    // width: Yup.number()\n    //     .positive(\"Please enter a positive number.\")\n    //     .moreThan(0, \"Must be greater than 0.\")\n    //     .required(\"Please enter the object's width.\"),\n    // height: Yup.number()\n    //     .positive(\"Please enter a positive number.\")\n    //     .moreThan(0, \"Must be greater than 0.\")\n    //     .required(\"Please enter the object's height.\"),\n    // length: Yup.number()\n    //     .positive(\"Please enter a positive number.\")\n    //     .moreThan(0, \"Must be greater than 0.\")\n    //     .required(\"Please enter the object's length.\"),\n    // modelName: Yup.string()\n    //     .required(\"Please select a model.\"),\n});\n\n// Yup.addMethod(Yup.array, 'startEndDate', function (startPath, endPath, message) {\n//     return this.test('startEndDate', message, function (value) {\n//\n//         if(!value) return true\n//\n//         const {\n//             path,\n//             createError\n//         } = this\n//\n//         const startDate = convertCardDate(value[startPath])\n//         const endDate = convertCardDate(value[endPath])\n//\n//         if(startDate && endDate) {\n//             if(endDate < startDate) {\n//                 return this.createError({\n//                     path: `${path}`,\n//                     message,\n//                 });\n//             }\n//         }\n//         return true;\n//     });\n// });\n\n\nexport const hilSchema = Yup.object().shape({\n    instruction: Yup.string()\n        .max(20, '20 character maximum.')\n        .required('Please enter instructions.'),\n    position: Yup.array().of(\n        Yup.object().shape({\n            name: Yup.string()\n                .required('Position is missing name.'),\n        })\n    )\n        .required('Please select a position.'),\n    dashboard: Yup.array().of(\n        Yup.object().shape({\n            name: Yup.string()\n                .required('Dashboard is missing name.'),\n        })\n    )\n        .required('Please select a dashboard.'),\n    sound: Yup.array().of(\n        Yup.object().shape({\n            name: Yup.string()\n                .required('Sound is missing name.'),\n        })\n    )\n        .required('Please select a sound.'),\n    timeout: Yup.string()\n        .nullable()\n        .required('Please select timeout.'),\n});\n\nexport const moveSchema = Yup.object().shape({\n    location: Yup.array().of(\n        Yup.object().shape({\n            name: Yup.string()\n                .required('Location is missing name.'),\n            _id: Yup.string()\n                .required('Location is missing ID.'),\n        })\n    ).required('Please select a location.'),\n});\n\n\n\nexport const nameSchema = Yup.object().shape({\n    name: Yup.string()\n        .min(1, '1 character minimum.')\n        .max(50, '50 character maximum.')\n        .required('Please enter a name.'),\n});\n\nexport const hilGoalSchema = Yup.object().shape({\n    hil: Yup.array().of(\n        Yup.object().shape({\n            name: Yup.string()\n                .required('HIL is missing name.'),\n        })\n    ).required('Please select a HIL.')\n});\n\nexport const objectAtLocationGoalSchema = Yup.object().shape({\n    quantity: Yup.array().of(\n        Yup.object().shape({\n            name: Yup.string()\n                .required('Quantity is missing name.'),\n        })\n    ).required('Please select a quantity.'),\n    object: Yup.array().of(\n        Yup.object().shape({\n            name: Yup.string()\n                .required('Object is missing name.'),\n        })\n    ).min(1, \"Please select an object.\").nullable(),\n    position: Yup.array().of(\n        Yup.object().shape({\n            name: Yup.string()\n                .required('Position is missing name.'),\n        })\n    ).required('Please select a position.'),\n});\n\nexport const dashboardSchema = Yup.object().shape({\n    name: Yup.string()\n        .min(1, '1 character minimum.')\n        .max(50, '50 character maximum.'),\n    buttons: Yup.array().of(\n        Yup.object().shape({\n            name: Yup.string(),\n            // task: Yup.array().of(\n            //     Yup.object().shape({\n            //         Description: Yup.string()\n            //             .matches(notBrokenRegex, \"Task is broken.\")\n            //             .required('Task is missing description.'),\n            //         task_id: Yup.string()\n            //             .required('Task is missing ID.'),\n            //     })\n            // ).required('Please select a task.'),\n            // banana: Yup.string()\n            //     .required('Please enter a name.'),\n            color: Yup.string()\n                .required('Please select a color.'),\n\n        })\n    ),\n\n});\n\n// returns error if any item in nested array is duplicate\nYup.addMethod(Yup.object, \"dopeUnique\", function (message, fieldPath, pathToArr) {\n    let mapper\n    if (fieldPath) mapper = x => get(x, fieldPath)\n\n    return this.test(\"dopeUnique\", message, function (item) {\n        const { path, createError, parent, options } = this\n        const {\n            context\n        } = options || {}\n        const {\n            [pathToArr]: arr\n        } = context || {}\n\n        let rx = /\\[(-?\\d+)\\]/g\n        const reg2 = /[\\[\\]']+/g\n\n        var index = path.match(rx);\n        let megaIndex = 0\n        const last = index.pop()\n\n        index.forEach((currItem) => {\n            const parsedIndex = parseInt(currItem.replace(reg2,''))\n            for(let i = 0; i < parsedIndex; i++) {\n                megaIndex = megaIndex + arr[i].length\n            }\n        })\n        megaIndex = megaIndex + parseInt(last.replace(reg2,''))\n\n        let compareItem\n        if (mapper) compareItem = mapper(item)\n\n\n        let isUnique = true\n\n        let currIndex = 0\n\n        for (const currItem of arr.flat()) {\n            if (parseInt(currIndex) !== parseInt(megaIndex)) {\n                if (mapper) {\n                    if (isString(compareItem) && isString(mapper(currItem)) && isEqualCI(compareItem.trim(),mapper(currItem).trim())) {\n                        isUnique = false\n                        return createError({ path: `${path}.${fieldPath}`, message })\n                    }\n                }\n                else {\n                    if (isString(item) && isString(currItem) && isEqualCI(item.trim(), currItem.trim())) {\n                        isUnique = false\n                        return createError({ path: `${path}.${fieldPath}`, message })\n                    }\n                }\n            }\n            currIndex = currIndex + 1\n        }\n\n        if (isUnique) {\n            return true;\n        }\n    });\n});\n\n// returns error if any item in nested array is duplicate\nYup.addMethod(Yup.object, \"lotFieldRequired\", function (message) {\n    return this.test(\"lotFieldRequired\", message, function (item) {\n        const { path, createError, parent, options } = this\n\n        const {\n            required,\n            value,\n            dataType\n        } = item || {}\n\n        if(required) {\n            switch (dataType) {\n                case FIELD_DATA_TYPES.DATE_RANGE: {\n                    if(!value || !isArray(value) || !(value[0] instanceof Date) || !(value[1]  instanceof Date)) {\n                        return createError({ path: `${path}.value`, message })\n                    }\n                    break\n                }\n                case FIELD_DATA_TYPES.DATE: {\n                    if(!(value  instanceof Date)) return createError({ path: `${path}.value`, message })\n                    break\n                }\n                case FIELD_DATA_TYPES.INTEGER: {\n                    if(!value) return createError({ path: `${path}.value`, message })\n                    break\n                }\n                case FIELD_DATA_TYPES.STRING: {\n                    if(!value) return createError({ path: `${path}.value`, message })\n                    break\n                }\n                default: {\n                    if(!value) return createError({ path: `${path}.value`, message })\n                    break\n                }\n            }\n        }\n\n        return true\n    });\n});\n\n// returns error if any item in nested array is duplicate\nYup.addMethod(Yup.array, \"nestedUnique\", function (message, path) {\n    const mapper = x => get(x, path);\n    return this.test(\"nestedUnique\", message, function (list) {\n        let set\n        let totalList = []\n        list.forEach((currList, currListIndex) => {\n            totalList = totalList.concat(currList)\n        })\n\n        set = [...new Set(totalList.map(mapper))];\n        const isUnique = totalList.length === set.length;\n        if (isUnique) {\n            return true;\n        }\n\n        let idx = 0\n        let rowIdx = 0\n        let i = 0\n        let err\n\n        for (const sublist of list) {\n            idx = 0\n\n            for (const item of sublist) {\n                if (!err && isEqualCI(mapper(item).trim(), set[i].trim())) {\n                    err = this.createError({ path: `fields[${rowIdx}][${idx}].${path}`, message })\n                }\n\n                idx = idx + 1\n                i = i + 1\n            }\n            rowIdx = rowIdx + 1\n        }\n\n        return err\n    });\n});\n\n// returns error if value is in arr\nYup.addMethod(Yup.string, \"notIn\", function (message, arr, pathToOthers) {\n    return this.test(\"notIn\", message, function (value) {\n        const { path, createError, parent, options } = this\n        const {\n            context\n        } = options || {}\n        const {\n            [pathToOthers]: others = []\n        } = context || {}\n\n        for(const item of arr.concat(Object.values(others))) {\n            if(isString(value) && isString(item) && isEqualCI(item.trim(), value.trim())) return createError({ path, message })\n        }\n        return true\n    });\n});\n\n// returns error if value is in arr\nYup.addMethod(Yup.string, \"uniqueByPath\", function (message, arrPath) {\n    return this.test(\"uniqueByPath\", message, function (value) {\n        const { path, createError, parent } = this;\n\n        if (value) {\n            const parentValues = parent[arrPath]\n\n            if (isArray(parentValues)) {\n                for (const currParentValue of parentValues) {\n\n                    const {\n                        name,\n                        id\n                    } = currParentValue\n\n                    if (name === value && parent._id !== id) return createError({ path, message })\n                }\n            }\n        }\n\n        return true\n    });\n});\n\nexport const signUpSchema = Yup.object().shape({\n    email: Yup.string()\n        .email()\n        .required('Please enter an email'),\n    password: Yup.string()\n        .required('Please enter a password')\n        .matches(\n            /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[A-Za-z\\d@$\\-!%*#?&]{8,}$/,\n            \"Must Contain 8 characters, one uppercase, one lowercase, and one number\"\n        ),\n\n    confirmPassword: Yup.string()\n        .oneOf([Yup.ref('password'), null], 'Passwords must match')\n        .required('Confirm password field cannot be left empty')\n})\n\nexport const signInSchema = Yup.object().shape({\n    email: Yup.string()\n        .email()\n        .required('Please enter an email'),\n    password: Yup.string()\n        .required('Please enter a password'),\n\n})\n\nexport const emailSchema = Yup.object().shape({\n    email: Yup.string()\n        .email()\n        .required('Please enter an email')\n})\n\nexport const passwordResetSchema = Yup.object().shape({\n    email: Yup.string()\n        .email()\n        .required('Please enter an email'),\n    verification: Yup.string()\n        .required('Please enter you verification code'),\n    password: Yup.string()\n        .required('Please enter a password')\n        .matches(\n            /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[A-Za-z\\d@$\\-!%*#?&]{8,}$/,\n            \"Must Contain 8 characters, one uppercase, one lowercase, one number and one special character\"\n        ),\n    checkPassword: Yup.string()\n        .oneOf([Yup.ref('password'), null], 'Passwords must match')\n        .required('Password confirm is required')\n})\n\nexport const quantityOneSchema = Yup.object().shape({\n    quantity: Yup.number()\n        .min(1, \"Must be at least 1.\")\n        .required('This field is required.'),\n})\n\n\nconst binsSchema = lazy(obj => object(\n    mapValues(obj, (value, key) => {\n        return Yup.object().shape({\n            count: Yup.number()\n                .min(1, \"Must be at least 1.\")\n                .required('This field is required.'),\n        })\n    })\n));\n\nexport const CARD_SCHEMA_MODES = {\n    EDIT_LOT: \"EDIT_LOT\",\n    MOVE_LOT: \"MOVE_LOT\"\n}\n\nexport const uniqueNameSchema = Yup.object().shape({\n    name: Yup.string()\n        .uniqueByPath(\"A lot with this name already exists.\", \"cardNames\"),\n})\n\nexport const editLotSchema = Yup.object().shape({\n    name: Yup.string()\n        // .min(1, '1 character minimum.')\n        .max(50, '50 character maximum.'),\n    fields: Yup.array().of(\n        Yup.array().of(\n            Yup.object().shape({\n                // value: Yup.\n            }).lotFieldRequired(\"This field is required.\")\n        )\n    ),\n    description: Yup.string()\n        .min(1, '1 character minimum.')\n        .max(250, '250 character maximum.'),\n    bins: binsSchema,\n    processId: Yup.string()\n        .min(1, '1 character minimum.')\n        .max(100, '50 character maximum.')\n        .required('Please select a process.')\n        .nullable(),\n    // dates: Yup.object().nullable().startEndDate(\"start\", \"end\", \"End date must be after start date.\")\n})\n\nexport const getMoveLotSchema = (maxCount) => Yup.object().shape({\n    moveCount: Yup.number()\n        .min(1, 'Must be positive value.')\n        .max(maxCount, `Only ${maxCount} items are available.`)\n        .required('Please enter a quantity.'),\n    moveLocation: Yup.array().of(\n        Yup.object().shape({\n            name: Yup.string()\n                .required('Please select a destination.'),\n        })\n    )\n        .min(1, 'Please select a destination.')\n        .required('Please select a destination.')\n        .nullable(),\n})\n\nexport const LotFormSchema = Yup.object().shape({\n    fields: Yup.array().of(\n        Yup.array().of(\n            Yup.object().shape({\n                _id: Yup.string()\n                    .required('Field missing ID.'),\n                fieldName: Yup.string()\n                    .min(1, '1 character minimum.')\n                    .max(50, '50 character maximum.')\n                    .notIn(\"This field name is already being used.\", [], \"displayNames\")\n                    .notIn(\"This field name is reserved.\", Object.values(LOT_TEMPLATES_RESERVED_FIELD_NAMES))\n                    .required('Please enter a name for this field.'),\n                style: Yup.object()\n            }).dopeUnique(\"Field names must be unique\", \"fieldName\", \"fields\")\n        )\n    ),\n    name: Yup.string()\n        .min(1, '1 character minimum.')\n        .max(50, '50 character maximum.')\n        .required('Please enter a name.'),\n})\n\nexport const templateMapperSchema = Yup.object().shape({\n    selectedFieldNames: Yup.array().of(\n        Yup.object().shape({\n            fieldName: Yup.string()\n                .min(1, '1 character minimum.')\n                .max(255, '50 character maximum.')\n                .required('Please enter field name.'),\n        }).dopeUnique(\"Field names must be unique\", \"fieldName\", \"selectedFieldNames\")\n    )\n})\n\nexport const selectLotQuantitySchema = Yup.object().shape({\n    items: Yup.array().of(\n        Yup.object().shape({\n            quantity: Yup.number()\n                .min(1, 'Must be at least 1.')\n                .required('Required.')\n        })\n    )\n})\n\n\nexport const getCardSchema = (mode, availableBinItems) => {\n    switch (mode) {\n        case CARD_SCHEMA_MODES.EDIT_LOT:\n            return editLotSchema\n        case CARD_SCHEMA_MODES.MOVE_LOT:\n            return getMoveLotSchema(availableBinItems)\n        default:\n            return editLotSchema\n\n    }\n\n}\n\nconst routeStationSchema = lazy(obj => {\n\n    let positionSchema\n    let stationSchema\n    if (isObject(obj)) {\n        if (!obj.position && !obj.station) {\n            positionSchema = Yup.string().nullable()\n            stationSchema = Yup.string().nullable().required('Please select a location.')\n        }\n        else if (obj.station && !obj.position) {\n            positionSchema = Yup.string().nullable()\n            stationSchema = Yup.string().nullable().required('Please select a location.')\n        }\n        else if (obj.position && !obj.station) {\n            positionSchema = Yup.string().nullable().required('Please select a location.')\n            stationSchema = Yup.string().nullable()\n        }\n        else {\n            positionSchema = Yup.string().nullable().required('Please select a location.')\n            stationSchema = Yup.string().nullable().required('Please select a location.')\n        }\n    } else {\n        positionSchema = Yup.string().nullable().required('Please select a location.')\n        stationSchema = Yup.string().nullable().required('Please select a location.')\n    }\n\n\n\n    return Yup.object().shape({\n        instructions: Yup.string().nullable(),\n        position: positionSchema,\n        station: stationSchema,\n        timeout: Yup.string().nullable(),\n    })\n});\n\nexport const routeSchema = Yup.object().shape({\n    name: Yup.string()\n        .min(1, '1 character minimum.')\n        .max(50, '50 character maximum.')\n        .required('Please enter a name.'),\n    obj: Yup.object().shape({\n        name: Yup.string()\n            .required('Please enter a name.'),\n    }).nullable(),\n    track_quantity: Yup.bool().required('Please select whether to use quantities or fractions.'),\n    load: routeStationSchema, //.required(\"Required.\"),\n    unload: routeStationSchema//.required(\"Required.\"),\n})\n\nexport const hilModalSchema = Yup.object().shape({\n    quantity: Yup.number()\n        .min(1, 'Minimum value of 1 required.')\n})\n\nexport const routesSchema = Yup.array().of(\n    routeSchema\n)\n\nexport const processSchema = Yup.object().shape({\n    name: Yup.string()\n        .min(1, '1 character minimum.')\n        .max(50, '50 character maximum.')\n        .required('Please enter a name.'),\n    routes: routesSchema,\n    newRoute: routeSchema.nullable(),\n\n})\n\nexport const getProcessSchema = () => {\n    return\n}\n\nexport const locationSchema = (stations, selectedLocation) => {\n\n    let stationNames = []\n    Object.values(stations).forEach(station => {\n        if (!!selectedLocation && station._id === selectedLocation._id) {\n\n        }\n        else {\n            stationNames.push(station.name)\n        }\n    })\n\n    return (\n        Yup.object().shape({\n            locationName: Yup.string()\n                .required('Please enter a name')\n                .notOneOf(stationNames, 'Name already in use')\n        })\n    )\n}\n\n\n// Sees if input1 is greater than input2. If so then through error\nYup.addMethod(Yup.string, 'greaterThan', function (input2Path, message) {\n    return this.test('greaterThan', message, function (input1) {\n        const { parent, path, createError } = this\n\n        const input2 = parent[input2Path]\n\n        // Take the Hour and minute \n        const [beg1, end1] = input1.split(':')\n        const [beg2, end2] = input2.split(':')\n\n        const input1Int = parseInt(`${beg1}${end1}`)\n        const input2Int = parseInt(`${beg2}${end2}`)\n\n        if (input1Int < input2Int) return true\n        else {\n            return this.createError({\n                path: this.path,\n                message: message,\n            })\n        }\n\n    })\n})\n\n// Sees if input1 is less than input2. If so then through error\nYup.addMethod(Yup.string, 'lessThan', function (input2Path, message) {\n    return this.test('lessThan', message, function (input1) {\n        const { parent, path, createError } = this\n        const input2 = parent[input2Path]\n\n        // Take the Hour and minute \n        const [beg1, end1] = input1.split(':')\n        const [beg2, end2] = input2.split(':')\n\n        const input1Int = parseInt(`${beg1}${end1}`)\n        const input2Int = parseInt(`${beg2}${end2}`)\n\n        if (input1Int > input2Int) return true\n        else {\n            return this.createError({\n                path: this.path,\n                message: message,\n            })\n        }\n\n    })\n})\n\n// Sees if input1 is less than input2. If so then through error\nYup.addMethod(Yup.number, 'lessThanInt', function (input2Path, message) {\n    return this.test('lessThanInt', message, function (input1) {\n        const { parent, path, createError } = this\n        const input2 = parent[input2Path]\n\n        if (!input2 || !input1) return true\n        if (input1 < input2) return true\n        else {\n            return this.createError({\n                path: this.path,\n                message: message,\n            })\n        }\n\n    })\n})\n\nexport const throughputSchema = Yup.object().shape({\n    expectedOutput: Yup.number()\n        .required('Required')\n        .nullable(),\n    switch1: Yup.bool(),\n    startOfShift: Yup.string()\n        .required('Required'),\n    endOfShift: Yup.string()\n        .required('Required')\n        .lessThan(\"startOfShift\", 'The end of the shift cannot be before the start of the shift'),\n    startOfBreak1: Yup.string()\n        // Only validate when true\n        .when('switch1', {\n            is: true,\n            then: Yup.string()\n                .required('Required')\n                // Make sure it starts after the start of shift and before the end of the shift\n                .lessThan(\"startOfShift\", 'The first break cannot be before the start of the shift')\n                .greaterThan(\"endOfShift\", 'The end of the last break must be before the end of the shift')\n                // Make sure it starts before the end of the break\n                .greaterThan(\"endOfBreak1\", 'The start of the break must be before the end of the break'),\n        }),\n\n    endOfBreak1: Yup.string()\n        // Only validate when true\n        .when('switch1', {\n            is: true,\n            then: Yup.string()\n                .required('Required')\n                // Make sure it starts after the start of shift and before the end of the shift\n                .lessThan(\"startOfShift\", 'The first break cannot be before the start of the shift')\n                .greaterThan(\"endOfShift\", 'The end of the last break must be before the end of the shift')\n                .lessThan(\"startOfBreak1\", 'The end of break cannot be before the start of the break')\n                .when('switch2', {\n                    is: true,\n                    then: Yup.string()\n                        .greaterThan(\"startOfBreak2\", 'The end of the break must be before the start of the next break break'),\n                })\n        }),\n\n\n    startOfBreak2: Yup.string()\n        // Only validate when true\n        .when('switch2', {\n            is: true,\n            then: Yup.string()\n                .required('Required')\n                // Make sure it starts after the start of shift and before the end of the shift\n                .lessThan(\"startOfShift\", 'The first break cannot be before the start of the shift')\n                .greaterThan(\"endOfShift\", 'The end of the last break must be before the end of the shift')\n                .greaterThan(\"endOfBreak2\", 'The start of the break must be before the end of the break')\n                .when('switch1', {\n                    is: true,\n                    then: Yup.string()\n                        .lessThan(\"endOfBreak1\", 'The start of break cannot be before the end of the previous break'),\n                }),\n        }),\n\n    endOfBreak2: Yup.string()\n        // Only validate when true\n        .when('switch2', {\n            is: true,\n            then: Yup.string()\n                .required('Required')\n                // Make sure it starts after the start of shift and before the end of the shift\n                .lessThan(\"startOfShift\", 'The first break cannot be before the start of the shift')\n                .greaterThan(\"endOfShift\", 'The end of the last break must be before the end of the shift')\n                .lessThan(\"startOfBreak2\", 'The end of break cannot be before the start of the break')\n\n                .when('switch3', {\n                    is: true,\n                    then: Yup.string()\n                        .greaterThan(\"startOfBreak3\", 'The end of the break must be before the start of the next break break'),\n                }),\n        }),\n\n    startOfBreak3: Yup.string()\n        // Only validate when true\n        .when('switch3', {\n            is: true,\n            then: Yup.string()\n                .required('Required')\n                // Make sure it starts after the start of shift and before the end of the shift\n                .lessThan(\"startOfShift\", 'The first break cannot be before the start of the shift')\n                .greaterThan(\"endOfShift\", 'The end of the last break must be before the end of the shift')\n                .greaterThan(\"endOfBreak3\", 'The start of the break must be before the end of the break')\n                .when('switch2', {\n                    is: true,\n                    then: Yup.string()\n                        .lessThan(\"endOfBreak2\", 'The start of break cannot be before the end of the previous break'),\n                }),\n        }),\n\n    endOfBreak3: Yup.string()\n        // Only validate when true\n        .when('switch3', {\n            is: true,\n            then: Yup.string()\n                .required('Required')\n                // Make sure it starts after the start of shift and before the end of the shift\n                .lessThan(\"startOfShift\", 'The first break cannot be before the start of the shift')\n                .greaterThan(\"endOfShift\", 'The end of the last break must be before the end of the shift')\n                .lessThan(\"startOfBreak3\", 'The end of break cannot be before the start of the break')\n        }),\n\n})\n\n\nexport const deviceSchema = Yup.object().shape({\n\n    schedules: Yup.array()\n        .of(\n            Yup.object().shape({\n                name: Yup.string().required('Required').nullable(),\n                position: Yup.string().required('Required').nullable(),\n                time: Yup.string().required('Required').nullable()\n            })\n        ),\n\n    charge_level: Yup.object().shape({\n        chargeEnabled: Yup.bool(),\n        min: Yup.number()\n            .lessThanInt(\"max\", 'Min Percent must be less then Max percent')\n            // Only validate when true\n            .when('chargeEnabled', {\n                is: true,\n                then: Yup.number()\n                    .required('Required')\n                    .nullable(),\n            }),\n        max: Yup.number()\n            // Only validate when true\n            .when('chargeEnabled', {\n                is: true,\n                then: Yup.number()\n                    .required('Required')\n                    .nullable(),\n            }),\n\n    }),\n})","import { hexToRGBA, RGB_Linear_Shade } from './methods/utils/color_utils';\n\nexport const size = {\n    tiny: '0px',\n    mobileS: '320px',\n    mobileM: '375px',\n    mobileL: '425px',\n    tablet: '768px',\n    laptop: '1024px',\n    laptopL: '1440px',\n    desktop: '2560px'\n}\n\n\nconst light = {\n    primary: '#FFFFFF',  // White\n    secondary: '#f0f0f5',\n    tertiary: '#dedfe3',\n    quaternary: '#b8b9bf',  // light light grey\n    quinary: '#79797d',   // light grey\n    senary: '#7e7e7e',    // charcoal\n    septenary: '#545454', //dark dark grey\n    octonary: '#363636',  // Black\n}\n\nexport const theme = {\n    main: {\n        bg: light,\n        fg: {\n            primary: '#798fd9',\n            secondary: '#FF4B4B', // RM RED\n            tertiary: '',\n            quaternary: '',\n            quinary: '',\n            senary: '',\n            septenary: '',\n            octonary: '',\n            nonary: '',\n            denary: '',\n            red: '#FF4B4B',   // RM RED\n\n        },\n        textColor: '#303030',\n        error: {\n            borderColor: '#FF4B4B',\n        },\n        good: '#52B853',\n        okay: '#ffa200',\n        bad: '#FF4B4B',\n        warn: '#ffbf1f',\n        disabled: '#808080',           // light grey\n        radioButton: {\n            active: '#FF4B4B',          // RM RED\n            inactive: '#808080',        // light grey\n            hover: RGB_Linear_Shade(.2, hexToRGBA('#FF4B4B')),    // lighter RM RED\n            textColor: \"#FFFFFF\",        // white\n            fontWeight: 500,\n            borderColor: '#A8A8A8',      // light light grey\n        },\n        hoverHighlightPer: 0.4,\n        basicButton: {\n            backgroundColor: {\n                active: '#FF4B4B',             // RM RED\n                disabled: '#808080',           // light grey\n            },\n            textColor: {\n                active: \"#FFFFFF\",\n            }\n        },\n        cardShadow: '0px 0px 6px 1px rgba(0,0,0,0.1)',\n\n        font: {\n            primary: 'Montserrat'\n        },\n        fontSize: {\n\n            sz6: \"0.65rem\",\n            sz5: \"0.75rem\",\n            sz4: \"0.85rem\",\n            sz3: \"1.2rem\",\n            sz2: \"1.5rem\",\n            sz7: \"2.0rem\",\n            sz1: \"2.5rem\",\n            sz8: \"1.4rem\"\n        },\n        fontWeight: {\n            bold: '700',\n            normal: '100',\n        },\n\n        // minWidth: {\n        //   tiny: `(min-width: ${size.tiny})`,\n        //   mobileS: `(min-width: ${size.mobileS})`,\n        //   mobileM: `(min-width: ${size.mobileM})`,\n        //   mobileL: `(min-width: ${size.mobileL})`,\n        //   tablet: `(min-width: ${size.tablet})`,\n        //   laptop: `(min-width: ${size.laptop})`,\n        //   laptopL: `(min-width: ${size.laptopL})`,\n        //   desktop: `(min-width: ${size.desktop})`,\n        //   desktopL: `(min-width: ${size.desktop})`\n        // },\n        widthBreakpoint: {\n            tiny: `${size.tiny}`,\n            mobileS: `${size.mobileS}`,\n            mobileM: `${size.mobileM}`,\n            mobileL: `${size.mobileL}`,\n            tablet: `${size.tablet}`,\n            laptop: `${size.laptop}`,\n            laptopL: `${size.laptopL}`,\n            desktop: `${size.desktop}`,\n            desktopL: `${size.desktop}`\n        },\n\n        schema: {\n            default: {\n                gradient: 'radial-gradient(171.57% 115.09% at 100% 0%, rgba(168, 0, 36, 0.95) 0%, rgba(217, 21, 0, 0.95) 100%)',\n                solid: '#FF4B4B'\n            },\n            locations: {\n                gradient: 'radial-gradient(171.57% 115.09% at 100% 0%, rgba(92, 111, 255, 0.95) 0%, rgba(159, 91, 255, 0.95) 100%)',\n                solid: '#5c6fff'\n            },\n            dashboards: {\n                gradient: 'radial-gradient(171.57% 115.09% at 100% 0%, rgba(255, 214, 0, 0.95) 0%, rgba(255, 138, 0, 0.95) 100%)',\n                solid: '#5294ff'\n            },\n            objects: {\n                gradient: 'radial-gradient(171.57% 115.09% at 100% 0%, rgba(31, 255, 94, 0.95) 0%, rgba(0, 126, 237, 0.95) 100%)',\n                solid: '#2ed182',\n            },\n            processes: {\n                gradient: 'radial-gradient(171.57% 115.09% at 100% 0%, rgba(255, 214, 0, 0.95) 0%, rgba(255, 118, 33, 0.95) 100%)',\n                solid: '#ffbf1f'\n            },\n            tasks: {\n                gradient: 'radial-gradient(171.57% 115.09% at 100% 0%, rgba(31, 255, 94, 0.95) 0%, rgba(0, 126, 237, 0.95) 100%)',\n                solid: '#2ed182',\n            },\n            routes: {\n                gradient: 'radial-gradient(171.57% 115.09% at 100% 0%, rgba(31, 255, 94, 0.95) 0%, rgba(0, 126, 237, 0.95) 100%)',\n                solid: '#2ed182',\n                iconName: \"fas fa-route\"\n            },\n            all: {\n                gradient: 'radial-gradient(171.57% 115.09% at 100% 0%, rgba(121, 217, 155, 0.95) 0%, rgba(0, 162, 132, 0.95) 100%)',\n                solid: '#1ae8a0'\n            },\n            lots: {\n                gradient: 'radial-gradient(171.57% 115.09% at 100% 0%, rgba(167, 114, 252, 0.95) 0%, rgba(251, 0, 255, 0.95) 100%)',\n                solid: '#b385ff',\n                iconName: \"fas fa-play\"\n            },\n            merge: {\n                gradient: 'radial-gradient(171.57% 115.09% at 100% 0%, rgba(235, 52, 97, 0.95) 0%, rgba(235, 52, 189, 0.95) 100%)',\n                solid: '#eb3461',\n                iconName: \"fas fa-object-group\"\n            },\n            statistics: {\n                solid: \"#54AAFF\",\n            },\n            kick_off: {\n                gradient: 'radial-gradient(171.57% 115.09% at 100% 0%, rgba(197, 155, 255) 0%, rgba(173, 115, 255, 0.95) 100%)',\n                solid: '#a3ff9b',\n                iconName: \"fas fa-play\"\n            },\n            finish: {\n                gradient: 'radial-gradient(171.57% 115.09% at 100% 0%, rgba(197, 155, 255) 0%, rgba(173, 115, 255, 0.95) 100%)',\n                solid: '#fc5e03',\n                iconName: \"fas fa-flag-checkered\"\n            },\n            error: {\n                gradient: 'radial-gradient(171.57% 115.09% at 100% 0%, rgba(168, 0, 36, 0.95) 0%, rgba(217, 21, 0, 0.95) 100%)',\n                solid: '#FF4B4B'\n            },\n            ok: {\n                gradient: 'radial-gradient(171.57% 115.09% at 100% 0%, rgba(31, 255, 94, 0.95) 0%, rgba(0, 126, 237, 0.95) 100%)',\n                solid: '#2ed182',\n            },\n            operations: {\n                gradient: 'radial-gradient(171.57% 115.09% at 100% 0%, rgba(121, 217, 155, 0.95) 0%, rgba(0, 162, 132, 0.95) 100%)',\n                solid: '#e81a69',\n                iconName: \"fas fa-sticky-note\"\n            },\n            report: {\n                gradient: 'radial-gradient(171.57% 115.09% at 100% 0%, rgba(121, 217, 155, 0.95) 0%, rgba(0, 162, 132, 0.95) 100%)',\n                solid: '#e8321a',\n                iconName: \"fas fa-exclamation-triangle\"\n            },\n            devices: {\n                gradient: 'radial-gradient(171.57% 115.09% at 100% 0%, rgba(255, 75, 75, 0.95) 0%, rgba(255, 61, 61, 0.95) 100%)',\n                solid: '#e36868'\n            },\n            scheduler: {\n                gradient: 'radial-gradient(171.57% 115.09% at 100% 0%, rgba(30, 156, 215, 0.95) 0%, rgba(0, 91, 151, 0.95) 100%)',\n                solid: '#1e9cd7'\n            },\n            taskQueue: {\n                gradient: 'radial-gradient(171.57% 115.09% at 100% 0%, rgba(197, 155, 255) 0%, rgba(173, 115, 255, 0.95) 100%)',\n                solid: '#c59bff',\n                iconName: 'fa fa-tasks',\n            },\n            settings: {\n                gradient: 'radial-gradient(171.57% 115.09% at 100% 0%, rgba(197, 155, 255) 0%, rgba(173, 115, 255, 0.95) 100%)',\n                solid: '#c59bff'\n            },\n            delete: {\n                gradient: 'radial-gradient(171.57% 115.09% at 100% 0%, rgba(255, 75, 75, 0.95) 0%, rgba(255, 61, 61, 0.95) 100%)',\n                solid: '#e36868'\n            },\n            warehouse: {\n                gradient: 'radial-gradient(171.57% 115.09% at 100% 0%, rgba(92, 111, 255, 0.95) 0%, rgba(159, 91, 255, 0.95) 100%)',\n                solid: '#5c6fff',\n                iconName: 'fas fa-box',\n            },\n        }\n    },\n    funky: {\n\n    },\n\n\n\n};\n\n\nexport default theme;\n","import { normalize } from 'normalizr';\n\n// import types\nimport {\n    GET,\n    POST,\n    DELETE,\n    PUT\n} from '../types/prefixes';\n\nimport {\n    CARDS,\n    CARD,\n    CARD_HISTORY,\n    PROCESS_CARDS,\n    SHOW_EDITOR,\n    SHOW_BARCODE_MODAL,\n} from '../types/data_types';\n\nimport { api_action } from './index';\nimport * as api from '../../api/cards_api'\n\n// import schema\nimport { scheduleSchema, schedulesSchema } from '../../normalizr/schedules_schema';\n\nimport log from \"../../logger\"\nimport {convertArrayToObject} from \"../../methods/utils/utils\";\n\nconst logger = log.getLogger(\"Cards\", \"Redux\")\nlogger.setLevel(\"debug\")\n\n\n\n// get\n// ******************************\nexport const getCard = (cardId) =>  async (dispatch) => {\n\n    /*\n        Invoked in api_action()\n        Whatever is returned from this function is the payload\n        that will be dispatched to redux (if successful)\n    */\n    const callback = async () => {\n\n        // make request\n        const card = await api.getCard(cardId);\n\n        // const cardsObj = convertArrayToObject(cards, \"_id\")\n        // console.log(\"getCard cardsObj\",cardsObj)\n\n        // format response\n        // const normalizedSchedules = normalize(schedules, schedulesSchema);\n\n        // return payload for redux\n        return {\n            card,\n        };\n    }\n\n    const actionName = GET + CARD;\n\n    // payload is returned back\n    const payload = await api_action(actionName, callback, dispatch, cardId);\n\n    return payload;\n\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// get\n// ******************************\nexport const getCards = () =>  async (dispatch) => {\n\n    /*\n        Invoked in api_action()\n        Whatever is returned from this function is the payload\n        that will be dispatched to redux (if successful)\n    */\n    const callback = async () => {\n\n        // make request\n        const cards = await api.getCards();\n\n        const cardsObj = convertArrayToObject(cards, \"_id\")\n\n        // format response\n        // const normalizedSchedules = normalize(schedules, schedulesSchema);\n\n        // return payload for redux\n        return {\n            cards: cardsObj,\n        };\n    }\n\n    const actionName = GET + CARDS;\n\n    // payload is returned back\n    const payload = await api_action(actionName, callback, dispatch);\n\n    return payload;\n\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// get\n// ******************************\nexport const getProcessCards = (processId) =>  async (dispatch) => {\n\n    /*\n        Invoked in api_action()\n        Whatever is returned from this function is the payload\n        that will be dispatched to redux (if successful)\n    */\n    const callback = async () => {\n\n        // make request\n        const cards = await api.getProcessCards(processId);\n\n        const cardsObj = convertArrayToObject(cards, \"_id\")\n\n        // return payload for redux\n        return {\n            cards: cardsObj,\n            processId\n        };\n    }\n\n    const actionName = GET + PROCESS_CARDS;\n\n    // payload is returned back\n    const payload = await api_action(actionName, callback, dispatch);\n\n    return payload;\n\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n\n// create\n// ******************************\nexport const postCard = (card) =>  async dispatch => {\n\n    const callback = async () => {\n        const createdCard = await api.postCard(card);\n        // const normalizedSchedules = normalize(createdSchedule, scheduleSchema);\n\n        return {\n            card: createdCard,\n            processId: card.process_id\n        };\n    }\n    //\n    const actionName = POST + CARD;\n\n    const payload = await api_action(actionName, callback, dispatch, card);\n\n    return payload.card\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// delete\n// ******************************\nexport const deleteCard = (cardId, processId) => async (dispatch) => {\n\n    const callback = async () => {\n        await api.deleteCard(cardId);\n\n        return {\n            cardId,\n            processId\n        };\n    }\n    //\n    const actionName = DELETE + CARD;\n    const payload = await api_action(actionName, callback, dispatch, cardId);\n    return payload;\n\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// delete\n// ******************************\nexport const deleteProcessCards = (processId) => async (dispatch, getState) => {\n\n    // current state\n    const state = getState()\n\n    const processCards = state.cardsReducer.processCards || {}\n    const currentProcessCards = processCards[processId] || {}\n\n    Object.keys(currentProcessCards).forEach( async (currCardId) => {\n        await dispatch(deleteCard(currCardId, processId))\n    })\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// update\n// ******************************\nexport const putCard = (card, cardID) => async dispatch => {\n\n    const callback = async () => {\n        const response = await api.putCard(card, cardID);\n        // const normalizedSchedule = normalize(response, scheduleSchema);\n        //\n        return {\n            card: response,\n            processId: card.process_id\n        };\n    }\n\n    const actionName = PUT + CARD;\n    const payload = await api_action(actionName, callback, dispatch, { card});\n    return card;\n};\n\n// update\n// ******************************\nexport const putCardAttributes = (attributes, cardId) => async (dispatch, getState) => {\n\n    // current state\n    const state = getState()\n    const card = state.cardsReducer.cards[cardId]\n\n    if(card) {\n        const callback = async () => {\n            const response = await api.putCard({\n                ...card,\n                ...attributes\n            }, cardId);\n\n            return {\n                card: response,\n                processId: response.process_id\n            };\n        }\n\n        const actionName = PUT + CARD;\n        const payload = await api_action(actionName, callback, dispatch, {attributes, cardId});\n        return card;\n    }\n\n    return null\n\n\n};\n\nexport const showEditor = (bool) => {\n    return { type: SHOW_EDITOR, payload: bool }\n}\n\nexport const showBarcodeModal = (bool) => {\n    return { type: SHOW_BARCODE_MODAL, payload: bool }\n}\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n","export const GET_STATIONS_STARTED = 'GET_STATIONS_STARTED'\nexport const GET_STATIONS_SUCCESS = 'GET_STATIONS_SUCCESS'\nexport const GET_STATIONS_FAILURE = 'GET_STATIONS_FAILURE'\n\nexport const POST_STATION_STARTED = 'POST_STATION_STARTED'\nexport const POST_STATION_SUCCESS = 'POST_STATION_SUCCESS'\nexport const POST_STATION_FAILURE = 'POST_STATION_FAILURE'\n\nexport const PUT_STATION_STARTED = 'PUT_STATION_STARTED'\nexport const PUT_STATION_SUCCESS = 'PUT_STATION_SUCCESS'\nexport const PUT_STATION_FAILURE = 'PUT_STATION_FAILURE'\n\nexport const DELETE_STATION_STARTED = 'DELETE_STATION_STARTED'\nexport const DELETE_STATION_SUCCESS = 'DELETE_STATION_SUCCESS'\nexport const DELETE_STATION_FAILURE = 'DELETE_STATION_FAILURE'\n\nexport const ADD_STATION = 'ADD_STATION'\nexport const UPDATE_STATION = 'UPDATE_STATION'\nexport const UPDATE_STATIONS = 'UPDATE_STATIONS'\nexport const REMOVE_STATION = 'REMOVE_STATION'\nexport const EDITING_STATION = 'EDITING_STATION'\nexport const SET_STATION_ATTRIBUTES = 'SET_STATION_ATTRIBUTES'\nexport const SET_SELECTED_STATION = 'SET_SELECTED_STATION'","export const GET_POSITIONS_STARTED = 'GET_POSITIONS_STARTED'\nexport const GET_POSITIONS_SUCCESS = 'GET_POSITIONS_SUCCESS'\nexport const GET_POSITIONS_FAILURE = 'GET_POSITIONS_FAILURE'\n\nexport const GET_POSITION_STARTED = 'GET_POSITION_STARTED'\nexport const GET_POSITION_SUCCESS = 'GET_POSITION_SUCCESS'\nexport const GET_POSITION_FAILURE = 'GET_POSITION_FAILURE'\n\nexport const POST_POSITION_STARTED = 'POST_POSITION_STARTED'\nexport const POST_POSITION_SUCCESS = 'POST_POSITION_SUCCESS'\nexport const POST_POSITION_FAILURE = 'POST_POSITION_FAILURE'\n\nexport const PUT_POSITION_STARTED = 'PUT_POSITION_STARTED'\nexport const PUT_POSITION_SUCCESS = 'PUT_POSITION_SUCCESS'\nexport const PUT_POSITION_FAILURE = 'PUT_POSITION_FAILURE'\n\nexport const DELETE_POSITION_STARTED = 'DELETE_POSITION_STARTED'\nexport const DELETE_POSITION_SUCCESS = 'DELETE_POSITION_SUCCESS'\nexport const DELETE_POSITION_FAILURE = 'DELETE_POSITION_FAILURE'\n\nexport const ADD_POSITION = 'ADD_POSITION'\nexport const UPDATE_POSITION = 'UPDATE_POSITION'\nexport const UPDATE_POSITIONS = 'UPDATE_POSITIONS'\nexport const REMOVE_POSITION = 'REMOVE_POSITION'\nexport const SET_POSITION_ATTRIBUTES = 'SET_POSITION_ATTRIBUTES'\nexport const REVERT_CHILDREN = 'REVERT_CHILDREN'\nexport const SET_SELECTED_POSITION = 'SET_SELECTED_POSITION'\nexport const EDITING_POSITION ='EDITING_POSITION'\nexport const SET_SELECTED_STATION_CHILDREN_COPY = 'SET_SELECTED_STATION_CHILDREN_COPY'\n","export const GET_TASK_QUEUE = 'GET_TASK_QUEUE'\nexport const GET_TASK_QUEUE_STARTED = 'GET_TASK_QUEUE_STARTED'\nexport const GET_TASK_QUEUE_SUCCESS = 'GET_TASK_QUEUE_SUCCESS'\nexport const GET_TASK_QUEUE_FAILURE = 'GET_TASK_QUEUE_FAILURE'\n\nexport const GET_TASK_QUEUE_ITEM = 'GET_TASK_QUEUE_ITEM'\nexport const GET_TASK_QUEUE_ITEM_STARTED = 'GET_TASK_QUEUE_ITEM_STARTED'\nexport const GET_TASK_QUEUE_ITEM_SUCCESS = 'GET_TASK_QUEUE_ITEM_SUCCESS'\nexport const GET_TASK_QUEUE_ITEM_FAILURE = 'GET_TASK_QUEUE_ITEM_FAILURE'\n\nexport const POST_TASK_QUEUE = 'POST_TASK_QUEUE'\nexport const POST_TASK_QUEUE_STARTED = 'POST_TASK_QUEUE_STARTED'\nexport const POST_TASK_QUEUE_SUCCESS = 'POST_TASK_QUEUE_SUCCESS'\nexport const POST_TASK_QUEUE_FAILURE = 'POST_TASK_QUEUE_FAILURE'\n\nexport const PUT_TASK_QUEUE = 'PUT_TASK_QUEUE'\nexport const PUT_TASK_QUEUE_STARTED = 'PUT_TASK_QUEUE_STARTED'\nexport const PUT_TASK_QUEUE_SUCCESS = 'PUT_TASK_QUEUE_SUCCESS'\nexport const PUT_TASK_QUEUE_FAILURE = 'PUT_TASK_QUEUE_FAILURE'\n\nexport const DELETE_TASK_QUEUE = 'DELETE_TASK_QUEUE'\nexport const DELETE_TASK_QUEUE_STARTED = 'DELETE_TASK_QUEUE_STARTED'\nexport const DELETE_TASK_QUEUE_SUCCESS = 'DELETE_TASK_QUEUE_SUCCESS'\nexport const DELETE_TASK_QUEUE_FAILURE = 'DELETE_TASK_QUEUE_FAILURE'\n\nexport const TASK_QUEUE = 'TASK_QUEUE'\nexport const TASK_QUEUE_ALL = 'TASK_QUEUE_ALL'\nexport const TASK_QUEUE_ITEM = 'TASK_QUEUE_ITEM'\nexport const TASK_QUEUE_OPEN = 'TASK_QUEUE_OPEN'\nexport const HANDLE_POST_TASK_QUEUE = 'HANDLE_POST_TASK_QUEUE'\nexport const INCREMENT_GET_DATA_FAILURE_COUNT = 'INCREMENT_GET_DATA_FAILURE_COUNT'\nexport const SET_SHOW_MODAL_ID = 'SET_SHOW_MODAL_ID'\n","import { denormalize, schema } from 'normalizr';\nimport { uuidv4 } from '../methods/utils/utils';\n\n// status schema\nexport const statusSchema = new schema.Entity(\n  // key\n  'status',\n  // definition\n  {\n    //condition: conditionSchema\n  },\n  // options\n  {\n    idAttribute: (value, parent, key) => {\n      return value._id.$oid\n    },\n\n    // processStrategy\n    processStrategy: (value, parent, key) => {\n      return value\n    }\n  },\n\n);\n\n// schema for list of status\nexport const statusesSchema = [statusSchema]\n","import { normalize, schema } from 'normalizr';\n\nimport {\n    GET_DASHBOARDS,\n    GET_DASHBOARDS_STARTED,\n    GET_DASHBOARDS_SUCCESS,\n    GET_DASHBOARDS_FAILURE,\n\n    POST_DASHBOARD,\n    POST_DASHBOARD_STARTED,\n    POST_DASHBOARD_SUCCESS,\n    POST_DASHBOARD_FAILURE,\n\n    PUT_DASHBOARD,\n    PUT_DASHBOARD_STARTED,\n    PUT_DASHBOARD_SUCCESS,\n    PUT_DASHBOARD_FAILURE,\n\n    DELETE_DASHBOARD,\n    DELETE_DASHBOARD_STARTED,\n    DELETE_DASHBOARD_SUCCESS,\n    DELETE_DASHBOARD_FAILURE,\n\n    DASHBOARD_OPEN,\n} from '../types/dashboards_types'\n\nimport {\n    DASHBOARD,\n    DASHBOARDS\n} from \"../types/data_types\"\n\nimport {\n    SET\n} from \"../types/prefixes\"\n\nimport {\n    KICK_OFF_ENABLED,\n    FINISH_ENABLED\n} from \"../types/suffixes\"\n\nimport uuid from 'uuid'\n\nimport * as api from '../../api/dashboards_api'\nimport { dashboardsSchema } from '../../normalizr/schema';\nimport { getLoadStationId, getRouteProcesses, getUnloadStationId } from \"../../methods/utils/route_utils\";\nimport { willRouteDeleteBreakProcess } from \"../../methods/utils/processes_utils\";\nimport { putProcesses, setSelectedProcess } from \"./processes_actions\";\nimport { deleteTask } from \"./tasks_actions\";\nimport { deepCopy } from \"../../methods/utils/utils\";\nimport { useSelector } from \"react-redux\";\nimport * as stationActions from \"./stations_actions\";\nimport { getDefaultStation } from \"../../methods/utils/station_utils\";\nimport { removeArrayIndices } from \"../../methods/utils/array_utils\";\nimport { ROUTE_TYPES } from \"../../constants/route_constants\";\nimport { OPERATION_TYPES, TYPES } from '../../constants/dashboard_constants'\nimport { DASHBOARD_BUTTON_COLORS } from \"../../constants/dashboard_constants\";\n\n\nexport const getDashboards = () => {\n    return async dispatch => {\n        function onStart() {\n            dispatch({ type: GET_DASHBOARDS_STARTED });\n        }\n        function onSuccess(response) {\n            dispatch({ type: GET_DASHBOARDS_SUCCESS, payload: response });\n            return response;\n        }\n        function onError(error) {\n            dispatch({ type: GET_DASHBOARDS_FAILURE, payload: error });\n            console.log(error)\n\n            return error;\n        }\n\n        try {\n            onStart();\n            const dashboards = await api.getDashboards();\n\n            const normalizedDashboards = {}\n            dashboards.map((dashboard) => {\n                normalizedDashboards[dashboard._id.$oid] = dashboard\n            })\n\n            return onSuccess(normalizedDashboards)\n            // return onSuccess(dashboards)\n        } catch (error) {\n            return onError(error)\n        }\n    }\n}\nexport const postDashboard = (dashboard) => {\n    return async dispatch => {\n        function onStart() {\n            dispatch({ type: POST_DASHBOARD_STARTED });\n        }\n        function onSuccess(response) {\n            dispatch({ type: POST_DASHBOARD_SUCCESS, payload: response });\n            return response;\n        }\n        function onError(error) {\n            dispatch({ type: POST_DASHBOARD_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            delete dashboard._id\n            const newDashboard = await api.postDashboards(dashboard);\n            return onSuccess(newDashboard)\n        } catch (error) {\n            return onError(error)\n        }\n    }\n}\nexport const putDashboard = (dashboard, ID) => {\n    const dashbaordCopy = deepCopy(dashboard)\n    return async dispatch => {\n        function onStart() {\n            dispatch({ type: PUT_DASHBOARD_STARTED });\n        }\n        async function onSuccess(updatedDashboard) {\n            await dispatch({ type: PUT_DASHBOARD_SUCCESS, payload: updatedDashboard });\n            return updatedDashboard;\n        }\n        function onError(error) {\n            dispatch({ type: PUT_DASHBOARD_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            delete dashbaordCopy._id\n            const updateDashboard = await api.putDashboards(dashbaordCopy, ID);\n            return onSuccess(updateDashboard)\n        } catch (error) {\n            return onError(error)\n        }\n    }\n}\n\nexport const putDashboardAttributes = (attributes, id) => {\n\n    return async (dispatch, getState) => {\n\n        const state = getState()\n        const dashboards = state.dashboardsReducer.dashboards || {}\n\n        const dashboard = dashboards[id]\n\n        dispatch(putDashboard({\n            ...dashboard,\n            ...attributes\n        }, id))\n    }\n}\n\nexport const deleteDashboard = (ID) => {\n    return async dispatch => {\n        function onStart() {\n            dispatch({ type: DELETE_DASHBOARD_STARTED });\n        }\n        function onSuccess(response) {\n            dispatch({ type: DELETE_DASHBOARD_SUCCESS, payload: ID });\n            return response;\n        }\n        function onError(error) {\n            dispatch({ type: DELETE_DASHBOARD_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const removeDashboards = await api.deleteDashboards(ID);\n            return onSuccess(ID)\n        } catch (error) {\n            return onError(error)\n        }\n    }\n}\n\n// deletes all buttons with routeId from all dashboards\n// ******************************\nexport const removeRouteFromAllDashboards = (routeId) => {\n    return async (dispatch, getState) => {\n\n        // current state\n        const state = getState()\n\n        const dashboards = state.dashboardsReducer.dashboards || {}\n        const routes = state.tasksReducer.tasks || {}\n        const selectedTask = routes[routeId] || {}\n\n        // Delete all dashboard buttons associated with that task\n        Object.values(dashboards)\n            .filter(dashboard =>\n                dashboard.station === selectedTask?.load?.station || dashboard.station === selectedTask?.unload?.station\n            ).forEach(currDashboard => {\n                var currButtons = [...currDashboard.buttons]\n\n                currButtons = currButtons.filter(button => button.task_id !== routeId)\n\n                // update dashboard\n                dispatch(putDashboard({\n                    ...currDashboard,\n                    buttons: currButtons\n                }, currDashboard._id.$oid))\n            }\n            )\n\n    }\n}\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// automatically adds a button for a route to its load station's dashboard\n// ******************************\nexport const addRouteToDashboards = (route) => {\n    return async (dispatch, getState) => {\n\n        // current state\n        const state = getState()\n        const dashboards = state.dashboardsReducer.dashboards || {}\n        const stations = state.stationsReducer.stations || {}\n\n        const {\n            _id: routeId,\n            type: routeType,\n            name: routeName\n        } = route\n\n        // get station for route button (load if push, unload if pull)\n        let stationId\n        if (routeType === ROUTE_TYPES.PULL) {\n            stationId = getUnloadStationId(route)\n        }\n        else {\n            stationId = getLoadStationId(route)\n        }\n\n        const station = stations[stationId] || getDefaultStation()\n        const dashboard = dashboards[station.dashboards[0]]\n\n        const newDashboardButton = {\n            color: '#bcbcbc',\n            id: uuid.v4(),\n            name: \"\",\n            task_id: routeId,\n            type: TYPES.ROUTES.key,\n        }\n\n        if (dashboard === undefined) {\n            const defaultDashboard = {\n                name: \"\",\n                locked: false,\n                buttons: [newDashboardButton],\n                station: station._id\n            }\n            const postedDashboard = await dispatch(postDashboard(defaultDashboard))\n            alert('Added dashboard to location. There already should be a dashboard tied to this location, so this is an temp fix')\n            await dispatch(stationActions.putStation({\n                ...station,\n                dashboards: [postedDashboard._id.$oid]\n            }, station._id))\n        }\n\n        else {\n            // see if button for task already exists\n            const buttonIndex = dashboard.buttons.findIndex((currButton) => {\n                return currButton.task_id === route._id\n            })\n\n            // only add button if it isn't already in the dashboard\n            if (buttonIndex === -1) {\n                await dispatch(putDashboard({\n                    ...dashboard,\n                    buttons: [...dashboard.buttons, newDashboardButton]\n                }, dashboard._id.$oid))\n            }\n\n        }\n    }\n}\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// automatically removes a button that was added to a dashboard but no longer belongs to it\n// ******************************\nexport const removeRouteFromWrongDashboards = (route) => {\n    return async (dispatch, getState) => {\n\n        // current state\n        const state = getState()\n        const dashboards = Object.values(state.dashboardsReducer.dashboards) || []\n\n        const {\n            _id: routeId,\n            type: routeType\n        } = route\n\n        // get station id for route (load for push, unload for pull)\n        let stationId\n        if (routeType === ROUTE_TYPES.PULL) {\n            // if pull type, button should be at unload station\n            stationId = getUnloadStationId(route)\n        }\n\n        else {\n            // if push type, button should be at load station\n            stationId = getLoadStationId(route)\n        }\n\n        dashboards.forEach((currDashboard) => {\n            const {\n                buttons: currDashboardButtons = [],\n                _id: currDashboardIdObj = {},\n                station: currStationId\n            } = currDashboard\n\n            const {\n                $oid: currDashboardId\n            } = currDashboardIdObj\n\n            // curr dashboard isn't the route's load station\n            if (currStationId !== stationId) {\n\n                // loop through each button and check if the button needs to be removed\n                const filteredButtons = currDashboardButtons.filter((currButton, currButtonIndex) => {\n                    const {\n                        task_id: currRouteId\n                    } = currButton\n\n                    return (currRouteId !== routeId) // if dashboard isn't at the right station for the route, filter out buttons for this route\n                })\n\n                // if length of buttons arr changed, a button was removed, so update\n                // otherwise nothing was removed, so need for update\n                if (filteredButtons.length !== currDashboardButtons.length) {\n                    // update the dashboard\n                    dispatch(putDashboard({\n                        ...currDashboard,\n                        buttons: filteredButtons\n                    }, currDashboardId))\n                }\n\n            }\n        })\n    }\n}\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nexport const dashboardOpen = (bol) => {\n    return { type: DASHBOARD_OPEN, payload: bol }\n}\n\nexport const setDashboardKickOffProcesses = (dashboardId, kickOffEnabled) => {\n    return { type: SET + DASHBOARD + KICK_OFF_ENABLED, payload: { dashboardId, kickOffEnabled } }\n}\n\nexport const setDashboardFinishProcesses = (dashboardId, finishEnabled) => {\n    return { type: SET + DASHBOARD + FINISH_ENABLED, payload: { dashboardId, finishEnabled } }\n}\n","export const getDefaultStation = () => {\n\treturn {\n\t\tdashboards: []\n\t}\n\n}\n\n","import styled from \"styled-components\";\n\nexport const WarningIcon = styled.i`\n    color: ${props => props.color};\n    z-index: 10;\n    pointer-events:all;\n\n    // position: absolute;\n    // top: 50%;\n    // right: 1rem;\n    // transform: translateY(-50%);\n    // margin-left: 1rem;\n    opacity: ${props => props.visible ? 1 : 0};\n\n    position: relative;\n\n    z-index: 2;\n`;\n\nexport const StyledInput = styled.input`\n    width: 0;\n    height: 0;\n    position: absolute;\n    z-index: 0;\n    opacity:0;\n    cursor: default;\n\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n`;\n\nexport const IconContainer = styled.div`\n    //position: absolute;\n    width: auto;\n    height: auto;\n\n    position: absolute;\n    margin-bottom:1rem;\n    top: 50%;\n    right: 1rem;\n    transform: translateY(-50%);\n    margin-left: 1rem;\n`;\n","// import external dependencies\nimport React, {useState, useEffect, useRef, useContext} from 'react';\nimport ReactTooltip from \"react-tooltip\";\n\nimport Portal from \"../../../../higher_order_components/portal\";\n\nimport { uuidv4 } from '../../../../methods/utils/utils'\n\n// import styles\nimport * as styled from './error_tooltip.style';\nimport DropDownSearchField from \"../drop_down_search_field/drop_down_search_field\";\nimport theme from '../../../../theme'\nimport {ThemeContext} from \"styled-components\";\n\nconst ErrorTooltip = (props) => {\n\n    const themeContext = useContext(ThemeContext)\n\n    const {\n        ContainerComponent,\n        text,\n        visible,\n        onClick,\n        className,\n        color = themeContext.bad,\n        containerStyle,\n        tooltip,\n        type\n    } = props\n\n    // target input for initial display of tooltip\n    const inputRef = useRef(null);\n\n    // required for initial display of tooltip\n    const [autoFocus, setAutoFocus] = useState(false);\n\n    // unique id for tooltip\n    const [id, setId] = useState(uuidv4());\n\n    // input is initially focused to show tooltip, then blurred after timeout to hide it\n    useEffect(\n        () => {\n            if (autoFocus) {\n                let timer1 = setTimeout(() => setAutoFocus(false), 3000)\n\n                // this will clear Timeout when component unmount like in willComponentUnmount\n                return () => {\n                    clearTimeout(timer1)\n                }\n            }\n\n        },\n        [] //useEffect will run only one time\n        //if you pass a value to array, like this [data] than clearTimeout will run every time this value changes (useEffect re-run)\n    )\n\n    // useEffect(() => {console.log('rebuild'); ReactTooltip.rebuild()}, [tooltip])\n\n\n    // useEffect(() => {\n    //     if (autoFocus) {\n    //         inputRef.current.focus();\n    //     } else {\n    //         inputRef.current.blur();\n    //     }\n    // }, [autoFocus]);\n\n    return (\n\n        <ContainerComponent\n            style={containerStyle}\n        >\n            {/*initial display on load*/}\n            {autoFocus && visible &&\n                //wrap in portal to avoid clipping issues\n                <Portal>\n                    <ReactTooltip style={{ zIndex: 20 }} delayShow={250} event={'focus'} eventOff={'blur'} id={id} effect='solid' type={type}>\n                        <span>{text}</span>\n                    </ReactTooltip>\n                </Portal>\n\n            }\n\n            {/* only show on hover after initial display */}\n            {!autoFocus && visible && tooltip &&\n                // NOTE: portal does not allow dynamic content\n                <div>\n                    <ReactTooltip eventOff={'mouseout'} id={id} effect='solid' type={type}>\n                        {text &&\n                            <span>{text}</span>\n                        }\n                        {tooltip && tooltip}\n                    </ReactTooltip>\n                </div>\n            }\n\n            {!autoFocus && visible && !tooltip &&\n                //wrap in portal to avoid clipping issues\n                <Portal>\n                    <ReactTooltip eventOff={'mouseout'} id={id} effect='solid' type={type}>\n                        {text &&\n                            <span>{text}</span>\n                        }\n                    </ReactTooltip>\n                </Portal> \n            }\n\n            {autoFocus &&\n                <styled.StyledInput\n                    visible={visible}\n                    ref={inputRef}\n                    readOnly={true}\n                    // hidden={true}\n                    // autoFocus={autoFocus}\n                    event={'focus'}\n                    data-tip\n                    data-for={id}\n                />\n            }\n\n            <styled.WarningIcon\n                visible={visible}\n                color={color}\n                className={className}\n                data-tip\n                data-for={id}\n                onClick={onClick}\n            />\n        </ContainerComponent>\n\n    );\n\n}\n\n// Specifies the default values for props:\nErrorTooltip.defaultProps = {\n    ContainerComponent: styled.IconContainer,\n    className: \"fas fa-exclamation-triangle\",\n    type: 'error'\n};\n\nexport default React.memo(ErrorTooltip);","export const isString = (value) => {\n    return (typeof value) === \"string\"\n}\n\n/*\n* Are string1 and string2 equal (Case Insensitive)\n* */\nexport const isEqualCI = (string1, string2) => {\n    return string1.toLowerCase() === string2.toLowerCase();\n}\n\nexport const capitalizeFirstLetter = (string) => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\n","import {deepCopy} from \"./utils\";\nimport {SORT_MODES} from \"../../constants/common_contants\";\nimport {isObject} from \"./object_utils\";\nimport {isArray} from \"./array_utils\";\nimport {\n\tdefaultBins,\n\tFIELD_COMPONENT_NAMES,\n\tFIELD_DATA_TYPES,\n\tLOT_PRIMARY_FIELD_IDS, REQUIRED_FIELDS,\n\tSORT_DIRECTIONS\n} from \"../../constants/lot_contants\";\nimport {BASIC_FIELD_DEFAULTS, DATA_TYPE_DEFAULTS} from \"../../constants/form_constants\";\nimport {toIntegerOrZero} from \"./number_utils\";\nimport {isValidDateString} from \"./date_utils\";\nimport {isInteger} from \"formik\";\nimport {getLotField} from \"./lot_utils\";\nimport moment from \"moment\";\n\nconst EVENT_NAMES = {\n\tCREATE: \"create\",\n\tUPDATE: \"update\"\n}\n\nexport const jsDateToObjDate = (jsDate) => {\n\tif(!jsDate) return null\n\n\tlet trimmed = new Date(new Date(jsDate).toDateString());\n\n\tlet month = trimmed.getUTCMonth()\n\tlet day = trimmed.getUTCDate();\n\tlet year = trimmed.getUTCFullYear();\n\n\treturn {year, month: month + 1, day}\n}\n\n\nexport const generateBinId = (index, stationId) => {\n\treturn index + \"+\" + stationId\n}\nexport const parseMessageFromEvent = (eventName, username, data) => {\n\tswitch(eventName) {\n\n\t\tcase EVENT_NAMES.CREATE:\n\t\t\treturn [`Created card`]\n\n\t\tcase EVENT_NAMES.UPDATE:\n\t\t\tlet msgs = []\n\n\t\t\tconst keys = Object.keys(data)\n\t\t\tkeys.forEach((currKey) => {\n\t\t\t\tconst {\n\t\t\t\t\tnew: newVal,\n\t\t\t\t\told: oldVal,\n\t\t\t\t} = data[currKey]\n\n\t\t\t\tif(oldVal) {\n\t\t\t\t\tmsgs.push(`Changed ${currKey} from \"${oldVal}\" to \"${newVal}\"`)\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tmsgs.push(`Set ${currKey} to \"${newVal}\"`)\n\t\t\t\t}\n\n\n\t\t\t})\n\n\t\t\t// if(msgs.length === 0) msgs.push(\"No info found\")\n\n\t\t\treturn msgs\n\n\t\tdefault:\n\t\t\treturn [`${eventName} performed by ${username}`]\n\t}\n}\n\n/*\n* Converts date from a lot into a JS date object\n*\n* The lot date object contains key, value pairs for year, month, and date\n* These values are extracted, and if the values are valid, used to generate a new Date objects\n*\n* returns a JS Date object if the lot date is valid, and null otherwise\n*\n* @param {object} cardDate - object containing year, month and date keys\n* */\nexport const convertCardDate = (cardDate) => {\n\tconst year = cardDate?.year || 0\n\tconst month = cardDate?.month || 0\n\tconst day = cardDate?.day || 0\n\n\treturn (year && (month + 1) && day) ? new Date(year, month + 1, day, 0, 0, 0, 0) : null\n}\n\n/*\n\t* extracts initial values from the current lot and maps them to the template parameter\n\t* */\nexport const getFormCustomFields = (fields, card) => {\n\tlet initialValues = [] // initialize to empty object\n\n\t// make sure fields is array\n\tif(isArray(fields)) {\n\n\t\t// loop through rows in column\n\t\tfields.forEach((currRow, currRowIndex) => {\n\t\t\tlet newRow = []\n\n\t\t\t// loop through items in row\n\t\t\tcurrRow.forEach((currItem, currItemIndex) => {\n\n\t\t\t\t// extract properties of currItem\n\t\t\t\tconst {\n\t\t\t\t\tfieldName,\n\t\t\t\t\t_id: fieldId,\n\t\t\t\t\tcomponent,\n\t\t\t\t\tdataType,\n\t\t\t\t\tkey\n\t\t\t\t} = currItem || {}\n\n\t\t\t\tlet value\n\t\t\t\tif(isArray(card)) {\n\t\t\t\t\tfor(const field of card.flat()) {\n\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\t_id,\n\t\t\t\t\t\t\tvalue: currVal\n\t\t\t\t\t\t} = field || {}\n\n\t\t\t\t\t\tif(_id === fieldId) {\n\t\t\t\t\t\t\tvalue = currVal\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tnewRow.push({\n\t\t\t\t\t...currItem,\n\t\t\t\t\tvalue: convertValue(value, dataType)\n\t\t\t\t})\n\t\t\t})\n\n\t\t\tinitialValues.push(newRow)\n\t\t})\n\t}\n\telse {\n\n\t}\n\n\treturn initialValues\n}\n\n/*\n* Takes value and desired dataType, and converts value to dataType if necessary\n* */\nexport const convertValue = (value, dataType) => {\n\tif(!value) return DATA_TYPE_DEFAULTS[dataType]\n\n\tswitch(dataType) {\n\t\tcase FIELD_DATA_TYPES.MOMENT: {\n\t\t\treturn moment(value)\n\t\t}\n\t\tcase FIELD_DATA_TYPES.STRING: {\n\t\t\tif(!(value instanceof String)) return value.toString()\n\t\t}\n\t\tcase FIELD_DATA_TYPES.EMAIL: {\n\t\t\tbreak\n\t\t}\n\t\tcase FIELD_DATA_TYPES.DATE: {\n\t\t\tif(!(value instanceof Date)) return new Date(value)\n\t\t\tbreak\n\t\t}\n\t\tcase FIELD_DATA_TYPES.DATE_RANGE: {\n\t\t\tlet updatedValues = [...BASIC_FIELD_DEFAULTS.CALENDAR_FIELD_RANGE]\t// SPREAD SO YOU DON'T CHANGE THE VALUE OF THE CONSTANT DEFAULT\n\n\t\t\t// convert first item to date\n\t\t\tif( isArray(value) && value.length > 0 && value[0] !== null) {\n\t\t\t\tupdatedValues[0] = new Date(value[0])\n\t\t\t}\n\n\t\t\t// convert second item to date\n\t\t\tif(value.length > 1 && value[1] !== null) {\n\t\t\t\tupdatedValues[1] = new Date(value[1])\n\t\t\t}\n\n\t\t\treturn updatedValues\n\n\t\t\tbreak\n\t\t}\n\t\tcase FIELD_DATA_TYPES.URL: {\n\t\t\tbreak\n\t\t}\n\t\tcase FIELD_DATA_TYPES.INTEGER: {\n\t\t\tif(!isInteger(value)) return parseInt(value)\n\t\t\tbreak\n\t\t}\n\t\tdefault: {\n\t\t\treturn value\n\t\t}\n\t}\n\n\treturn value\n}\n\nexport const convertLotToExcel = (lot, lotTemplateId) => {\n\t// const {\n\t// \t[lotTemplateId]: templateValues,\n\t// \t...rest\n\t// } = lot\n\t//\n\t// return {\n\t// \t...templateValues,\n\t// \t...rest\n\t// }\n\n\treturn {\n\t\t...lot\n\t}\n}\n\nexport const convertPastePayloadToLot = (excel, lotTemplate, processId) => {\n\tlet remainingExcel = {...excel}\n\tlet lot = {}\n\n\tfor(const primaryField of REQUIRED_FIELDS) {\n\n\t\tconst {\n\t\t\t_id: primaryFieldId,\n\t\t\tfieldName,\n\t\t\tdataType,\n\t\t\tfieldPath,\n\t\t} = primaryField || {}\n\n\t\tconst {\n\t\t\t[primaryFieldId]: extractedPrimaryField,\n\t\t\t...rest\n\t\t} = remainingExcel\n\t\tremainingExcel = rest\n\n\n\t\tconst value = extractedPrimaryField ? extractedPrimaryField.value : DATA_TYPE_DEFAULTS[dataType]\n\n\t\t// for fields that use a field path, must contrcut value object\n\t\tif(isArray(fieldPath) && fieldPath.length > 0) {\n\n\t\t\tlet constrcutedValue = {}\n\t\t\tconstrcutedValue = {[fieldPath[fieldPath.length - 1]]: value}\n\n\t\t\tfieldPath.forEach((currentPath, currPathIndex) => {\n\t\t\t\tif(currPathIndex === fieldPath.length - 1) return // skip last since it was done\n\t\t\t\tconstrcutedValue = {[currentPath]: constrcutedValue}\n\t\t\t})\n\n\t\t\tlot[fieldName] = constrcutedValue\n\t\t}\n\n\n\t\telse {\n\t\t\tlot[primaryField.fieldName] = value\n\t\t}\n\t}\n\n\tlot.fields = getFormCustomFields(lotTemplate.fields, [Object.values(remainingExcel)])\n\tlot.processId = processId\n\n\treturn lot\n}\n/*\n* This function receives an array of cards as an argument and sorts them based on the {sortMode} argument.\n*\n* The original array is modified in place - THIS WILL MODIFY THE ARRAY - pass a copy if the original array shouldn't be modified\n*\n* @param {array} arr - array of cards\n* @param {string} sortMode - string identifier of mode to sort by\n* */\nexport const sortBy = (arr, sortMode, sortDirection) => {\n\n\tconst isAscending = sortDirection.id === SORT_DIRECTIONS.ASCENDING.id\n\n\tconst {\n\t\tdataType,\n\t\tlabel,\n\t\tindex,\n\t\tfieldName,\n\t\tprimary,\n\t\t_id: fieldId,\n\t} = sortMode\n\n\tarr.sort((itemA, itemB) => {\n\t\tlet fieldA, fieldB\n\n\t\tif(primary) {\n\t\t\tfieldA = itemA[fieldName]\n\t\t\tfieldB = itemB[fieldName]\n\t\t}\n\t\telse {\n\t\t\tfieldA = getLotField(\"fieldName\", fieldName, itemA)?.value\n\t\t\tfieldB = getLotField(\"fieldName\", fieldName, itemB)?.value\n\t\t}\n\n\t\tswitch(dataType) {\n\t\t\tcase FIELD_DATA_TYPES.URL: {\n\t\t\t\t// not yet implemented\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase FIELD_DATA_TYPES.EMAIL: {\n\t\t\t\t// not yet implemented\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase FIELD_DATA_TYPES.DATE: {\n\t\t\t\tif(!fieldA) return 1\n\t\t\t\tif(!fieldB) return -1\n\t\t\t\tif(isAscending) {\n\t\t\t\t\treturn new Date(fieldA) - new Date(fieldB);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn new Date(fieldB) - new Date(fieldA);\n\t\t\t\t}\n\n\t\t\t\tbreak\n\n\t\t\t}\n\t\t\tcase FIELD_DATA_TYPES.DATE_RANGE: {\n\t\t\t\tif(!fieldA) return 1\n\t\t\t\tif(!fieldB) return -1\n\n\t\t\t\tconst valA = fieldA[index]\n\t\t\t\tconst valB = fieldB[index]\n\n\t\t\t\tif(!valA) return 1\n\t\t\t\tif(!valB) return -1\n\t\t\t\tif(isAscending) {\n\t\t\t\t\treturn new Date(valA) - new Date(valB);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn new Date(valB) - new Date(valA);\n\t\t\t\t}\n\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase FIELD_DATA_TYPES.STRING: {\n\t\t\t\tif(!fieldA) return 1\n\t\t\t\tif(!fieldB) return -1\n\n\t\t\t\tif(isAscending) {\n\t\t\t\t\tif(fieldA >= fieldB) return 1\n\t\t\t\t\treturn -1\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif(fieldA >= fieldB) return -1\n\t\t\t\t\treturn 1\n\t\t\t\t}\n\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase FIELD_DATA_TYPES.INTEGER: {\n\t\t\t\tif(fieldA === null) return 1\n\n\t\t\t\tif(isAscending) {\n\t\t\t\t\tif(fieldA >= fieldB) return 1\n\t\t\t\t\treturn -1\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif(fieldA >= fieldB) return -1\n\t\t\t\t\treturn 1\n\t\t\t\t}\n\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t})\n\n\treturn arr\n}\n\nexport const jsDateToString = (jsDate) => {\n\tconst objDate = jsDateToObjDate(jsDate)\n\n\tconst {\n\t\tyear: startYear,\n\t\tmonth: startMonth,\n\t\tday: startDay\n\t} = objDate || {}\n\n\treturn (startDay && startMonth && startYear) ? `${startMonth}/${startDay}/${startYear}` : null\n}\n\nexport const dateRangeToStrings = (dateRange) => {\n\n\tlet startDateText\n\tlet endDateText\n\tif(isArray(dateRange) && dateRange.length > 0) {\n\t\tstartDateText = jsDateToString(dateRange[0])\n\n\t\tif(dateRange.length > 1) {\n\t\t\tendDateText = jsDateToString(dateRange[1])\n\t\t}\n\t}\n\n\treturn [startDateText, endDateText]\n}","import axios from 'axios';\n// import * as log from 'loglevel';\n\nimport logger from '../logger'\n\nimport { apiIPAddress } from '../settings/settings'\nconst operator = 'processes'\nconst log = logger.getLogger('Api')\n\nexport async function getProcesses() {\n    try {\n        const response = await axios({\n            method: 'get',\n            url: apiIPAddress() + operator,\n            headers: {\n                'X-API-Key': '123456',\n                'Access-Control-Allow-Origin': '*'\n            }\n        });\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n\n}\n\nexport async function deleteProcess(ID) {\n    try {\n        const response = await axios({\n            method: 'DELETE',\n            url: apiIPAddress() + operator + '/' + ID,\n            headers: {\n                'Accept': 'application/json',\n                'X-API-Key': '123456',\n                'Access-Control-Allow-Origin': '*'\n            },\n        });\n\n        // Success 🎉\n        // log.debug('response',response);\n        // const data = response.data;\n        // const dataJson = JSON.parse(data)\n        return response;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}\n\nexport async function postProcesses(process) {\n    try {\n        const response = await axios({\n            method: 'POST',\n            url: apiIPAddress() + operator,\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n                'X-API-Key': '123456',\n                'Access-Control-Allow-Origin': '*'\n            },\n            data: process\n        });\n\n        // Success 🎉\n        // log.debug('response',response);\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        // log.debug('response data json',dataJson);\n\n\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}\n\nexport async function putProcesses(process, ID) {\n    try {\n        const response = await axios({\n            method: 'PUT',\n            url: apiIPAddress() + operator + '/' + ID,\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'application/json',\n                'Access-Control-Allow-Origin': '*'\n            },\n            data: process\n        });\n\n        // Success 🎉\n        // log.debug('response',response);\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}\n","import { normalize, schema } from 'normalizr';\n\nimport {\n    GET_PROCESSES,\n    GET_PROCESSES_STARTED,\n    GET_PROCESSES_SUCCESS,\n    GET_PROCESSES_FAILURE,\n\n    POST_PROCESSES,\n    POST_PROCESSES_STARTED,\n    POST_PROCESSES_SUCCESS,\n    POST_PROCESSES_FAILURE,\n\n    PUT_PROCESSES,\n    PUT_PROCESSES_STARTED,\n    PUT_PROCESSES_SUCCESS,\n    PUT_PROCESSES_FAILURE,\n\n    DELETE_PROCESSES,\n    DELETE_PROCESSES_STARTED,\n    DELETE_PROCESSES_SUCCESS,\n    DELETE_PROCESSES_FAILURE,\n    EDITING_PROCESS,\n} from '../types/processes_types'\n\nimport * as api from '../../api/processes_api'\nimport { processesSchema } from '../../normalizr/schema';\nimport { deepCopy } from '../../methods/utils/utils'\nimport {putDashboard} from \"./dashboards_actions\";\nimport {getRouteProcesses} from \"../../methods/utils/route_utils\";\nimport {willRouteDeleteBreakProcess} from \"../../methods/utils/processes_utils\";\nimport * as dashboardsActions from \"./dashboards_actions\";\nimport {deleteTask} from \"./tasks_actions\";\n\nimport * as cardActions from \"./card_actions\";\n\nexport const getProcesses = () => {\n    return async dispatch => {\n        function onStart() {\n            dispatch({ type: GET_PROCESSES_STARTED });\n        }\n        function onSuccess(response) {\n            dispatch({ type: GET_PROCESSES_SUCCESS, payload: response });\n            return response;\n        }\n        function onError(error) {\n            dispatch({ type: GET_PROCESSES_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const processes = await api.getProcesses();\n            // Uncomment when you want to make processes an object\n            const normalizedProcesses = normalize(processes, processesSchema);\n            if (normalizedProcesses.entities.processes === undefined) {\n                return onSuccess(normalizedProcesses.entities)\n            }\n            else {\n                return onSuccess(normalizedProcesses.entities.processes)\n            }\n        } catch (error) {\n            return onError(error)\n        }\n    }\n}\nexport const postProcesses = (process) => {\n    return async dispatch => {\n        function onStart() {\n            dispatch({ type: POST_PROCESSES_STARTED });\n        }\n        function onSuccess(response) {\n            dispatch({ type: POST_PROCESSES_SUCCESS, payload: response });\n            return response;\n        }\n        function onError(error) {\n            dispatch({ type: POST_PROCESSES_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            delete process.new\n            delete process.changed\n\n            const newProcesses = await api.postProcesses(process);\n            return onSuccess(newProcesses)\n        } catch (error) {\n            return onError(error)\n        }\n    }\n}\nexport const putProcesses = (process) => {\n    return async dispatch => {\n        function onStart() {\n            dispatch({ type: PUT_PROCESSES_STARTED });\n        }\n        function onSuccess(response) {\n            dispatch({ type: PUT_PROCESSES_SUCCESS, payload: response });\n            return response;\n        }\n        function onError(error) {\n            dispatch({ type: PUT_PROCESSES_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const ID = deepCopy(process._id)\n\n            if(process.new) {\n                delete process.new\n            }\n            if(process.changed) {\n                delete process.changed\n            }\n            // delete process._id\n            const updateProcesses = await api.putProcesses(process, ID);\n            return onSuccess(updateProcesses)\n        } catch (error) {\n            return onError(error)\n        }\n    }\n}\n\n\nexport const deleteProcess = (ID) => {\n    return async dispatch => {\n        function onStart() {\n            dispatch({ type: DELETE_PROCESSES_STARTED });\n        }\n        function onSuccess(response) {\n            dispatch({ type: DELETE_PROCESSES_SUCCESS, payload: ID });\n            return response;\n        }\n        function onError(error) {\n            dispatch({ type: DELETE_PROCESSES_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const removeProcesses = await api.deleteProcess(ID);\n            return onSuccess(ID)\n        } catch (error) {\n            return onError(error)\n        }\n    }\n}\n\n// delete CLEAN\n// ******************************\nexport const deleteProcessClean = (processId) => {\n    return async (dispatch, getState) => {\n\n        // remove route from all dashboards\n        await dispatch(cardActions.deleteProcessCards(processId))\n\n        await dispatch(deleteProcess(processId))\n    }\n}\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// deletes all buttons with routeId from all dashboards\n// ******************************\nexport const removeRouteFromAllProcesses = (routeId) => {\n    return async (dispatch, getState) => {\n\n        // current state\n        const state = getState()\n        const routes = state.tasksReducer.tasks || {}\n\n        // get all processes that contain routeId\n        const routeProcesses = getRouteProcesses(routeId)\n\n        // loop through each of these processes, check if removing the route will break the process, then remove the route\n        for (const currProcess of routeProcesses) {\n\n            const processRoutes = currProcess.routes.map((currRoute) => routes[currRoute])\n\n            // will removing route break the process?\n            const willBreak = willRouteDeleteBreakProcess(processRoutes, routeId)\n            console.log(\"willBreak\",willBreak)\n\n            // dispatch update\n            await dispatch(putProcesses({\n                ...currProcess,\n                broken: willBreak,\n                routes: currProcess.routes.filter((currRoute) => currRoute !== routeId)\n            }))\n        }\n\n    }\n}\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nexport const updateProcesses = (processes, d3) => {\n    return { type: 'UPDATE_PROCESSES', payload: { processes, d3 } }\n}\n\nexport const setSelectedProcess = (process) => {\n    return { type: 'SET_SELECTED_PROCESS', payload: process }\n}\n\nexport const editingProcess = (bool) => {\n    return { type: EDITING_PROCESS, payload: bool }\n}\n\n/**\n * This is to tell the map that you are fixing a process vs adding a new route to the process\n * It will force you to select a location that is tied with the location before the process breaks\n * @param {bool} bool\n */\nexport const setFixingProcess = (bool) => {\n    return { type: 'SET_FIXING_PROCESS', payload: bool }\n}\n"],"sourceRoot":""}