{"version":3,"sources":["components/map/route_confirmation/route_confirmation.style.js","components/map/route_confirmation/route_confirmation.js","hooks/useOnClickOutside.js","components/basic/icon_button/icon_button.style.js","components/basic/icon_button/icon_button.js"],"names":["TaskStatisticsContainer","styled","div","props","yPosition","xPosition","TaskText","p","theme","font","primary","RowContainer","bg","secondary","RouteConfirmation","d3","dispatch","useDispatch","dispatchSetShowRouteConfirmation","bool","showRouteConfirmation","dispatchAutoAddRoute","autoAddRoute","selectedTask","useSelector","state","tasksReducer","selectedProcess","processesReducer","showRouteConfirm","tasks","routeConfirmLocation","routeConfirmationLocation","positions","positionsReducer","stations","stationsReducer","useState","showContinue","setShowContinue","useEffect","insertIndex","temp","processHasRoutes","isNonEmptyArray","routes","task","loc","x","y","style","borderTopLeftRadius","borderTopRightRadius","padding","width","onClick","paddingRight","className","color","borderBottomLeftRadius","borderBottomRightRadius","handleSingleTask","useOnClickOutside","ref","handler","listener","event","current","contains","target","document","addEventListener","passive","removeEventListener","activeContainerStyle","css","RGB_Linear_Shade","hexToRGBA","hoverContainerStyle","focusContainerStyle","disabledContainerStyle","Container","button","height","hoverable","isHovering","clickable","isActive","disabled","IconButton","children","containerStyle","backgroundColor","Component","onClickOutside","useRef","defaultProps"],"mappings":"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","file":"static/js/35.71709f64.chunk.js","sourcesContent":["import styled from 'styled-components'\n\n\nexport const TaskStatisticsContainer = styled.div`\n    position: absolute;\n    display: flex;\n\n    flex-direction: column;\n    align-items: center;\n\n    top: ${props => props.yPosition};\n    left: ${props => props.xPosition};\n\n    min-width: 5rem;\n    max-width: 24rem;\n    padding: .1rem;\n\n    background: red;\n    border-radius: .5rem;\n    box-shadow: 0 0.1rem 0.2rem 0rem #303030;\n    background-color: rgba(255, 255, 255, 0.9);\n\n    overflow: hidden;\n  \n  \tdiv:not(:last-child) {\n      border-bottom: 1px solid #7e7e7e;\n\t}\n`\n\nexport const TaskNameContainer = styled.div`\n  \tflex: 1;\n  \tdisplay: flex;\n  \tjustify-content: first baseline;\n    flex-direction: column;\n    overflow: hidden;\n    text-overflow: ellipsis;\n\n    max-height: 4rem;\n`\n\nexport const TaskText = styled.p`\n    align-self: center;\n    text-align: center;\n    margin-left: .25rem;\n    margin-top: auto;\n    margin-bottom: auto;\n    font-family: ${props => props.theme.font.primary};\n    color: #2ed182;\n    align-text: center;\n    white-space: break-spaces;\n`\n\n\nexport const RowContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n\n\n    &:hover{\n      background-color: ${props =>props.theme.bg.secondary};\n    }\n`\n","import React, { useState, useEffect, useRef } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\n// Import Styles\nimport * as styled from './route_confirmation.style'\nimport IconButton from '../../basic/icon_button/icon_button'\nimport { showRouteConfirmation, setRouteConfirmationLocation, autoAddRoute } from '../../../redux/actions/tasks_actions'\nimport {isNonEmptyArray} from \"../../../methods/utils/array_utils\";\n\nconst RouteConfirmation = (props) => {\n\n    const {\n        d3,\n    } = props\n\n    const dispatch = useDispatch()\n    const dispatchSetShowRouteConfirmation = (bool) => dispatch(showRouteConfirmation(bool))\n    const dispatchSetRouteConfirmationLocation = (id) => dispatch(setRouteConfirmationLocation(id))\n    const dispatchAutoAddRoute = (bool) => dispatch(autoAddRoute(bool))\n\n    const selectedTask = useSelector(state => state.tasksReducer.selectedTask)\n    const selectedProcess = useSelector(state => state.processesReducer.selectedProcess)\n    const tasks = useSelector(state => state.tasksReducer.tasks)\n    const showRouteConfirm = useSelector(state=> state.tasksReducer.showRouteConfirmation)\n    const routeConfirmLocation = useSelector(state=> state.tasksReducer.routeConfirmationLocation)\n    const positions = useSelector(state => state.positionsReducer.positions)\n    const stations = useSelector(state => state.stationsReducer.stations)\n\n    const [showContinue, setShowContinue] = useState(true)\n\n    useEffect(() => {\n        const insertIndex = selectedTask?.temp?.insertIndex\n\n        const processHasRoutes = isNonEmptyArray(selectedProcess?.routes)\n\n        if((insertIndex === 0) && processHasRoutes) {\n            setShowContinue(false)\n        }\n        else {\n            setShowContinue(true)\n        }\n        return () => {}\n    }, [selectedTask, selectedProcess])\n\n\n    const handleSingleTask = (task) => {\n          if (!!task && !!showRouteConfirm) {\n\n              //\n\n            const loc = !!stations[routeConfirmLocation] ? stations[routeConfirmLocation] : positions[routeConfirmLocation]\n\n            const x = loc.x\n            const y = loc.y\n\n            const xPosition = x -90 + 'px'\n            const yPosition = y -80 + 'px'\n\n            return (\n                <styled.TaskStatisticsContainer\n                    xPosition={xPosition}\n                    yPosition={yPosition}\n\n                    >\n                    <styled.RowContainer\n                       style={{borderTopLeftRadius: \"0.5rem\", borderTopRightRadius: \"0.5rem\", padding: '0rem', width: '100%' }}\n                       onClick = {()=>{\n                         dispatchSetShowRouteConfirmation(false)\n                         dispatchAutoAddRoute(\"finish\")\n                       }}\n                     >\n                        <styled.TaskText style={{ paddingRight: '.3rem' }}>Add and finish</styled.TaskText>\n\n                        <IconButton style={{paddingRight: '.2rem' }}>\n                                <i className=\"fas fa-check-circle\" style = {{color: \"#2ed182\"}}></i>\n                        </IconButton>\n                    </styled.RowContainer>\n\n                    {showContinue &&\n                    <styled.RowContainer\n                        style={{ borderBottomLeftRadius: \"0.5rem\", borderBottomRightRadius: \"0.5rem\", padding: '0.1rem .2rem 0.1rem .2rem', width: '100%' }}\n                        onClick = {()=> {\n                            dispatchSetShowRouteConfirmation(false)\n                            dispatchAutoAddRoute(\"continue\")\n                        }}\n                    >\n                        <styled.TaskText style={{ paddingRight: '.3rem', color: \"#ffbf1f\" }}>Add and continue</styled.TaskText>\n\n                        <IconButton style={{paddingRight: '.2rem' }}>\n                            <i className=\"fas fa-arrow-alt-circle-right\" style = {{color: \"#ffbf1f\"}}></i>\n                        </IconButton>\n                    </styled.RowContainer>\n                    }\n                </styled.TaskStatisticsContainer>\n            )\n        }\n        else { return null }\n    }\n\n\n    return (\n            handleSingleTask(selectedTask)\n          )\n\n}\n\nexport default RouteConfirmation\n","import { useEffect } from \"react\";\n\n// custom hook that listens for clicks outside of the ref component,\n// and calls the provided handler when outside click is detected\nfunction useOnClickOutside(ref, handler) {\n    useEffect(\n        () => {\n            const listener = event => {\n                // Do nothing if clicking ref's element or descendent elements\n                if (!ref.current || ref.current.contains(event.target)) {\n                    return;\n                }\n\n                handler(event)\n            }\n\n            document.addEventListener('mousedown', listener, {passive:true})\n            document.addEventListener('touchstart', listener, {passive:true})\n\n            return () => {\n                document.removeEventListener('mousedown', listener, {passive:true})\n                document.removeEventListener('touchstart', listener, {passive:true})\n            }\n        },\n        // Add ref and handler to effect dependencies\n        // It's worth noting that because passed in handler is a new ...\n        // ... function on every render that will cause this effect ...\n        // ... callback/cleanup to run every render. It's not a big deal ...\n        // ... but to optimize you can wrap handler in useCallback before ...\n        // ... passing it into this hook.\n        [ref, handler]\n    )\n}\n\nexport default useOnClickOutside\n\n// EXAMPLE\n\n// // Usage\n// function App() {\n//     // Create a ref that we add to the element for which we want to detect outside clicks\n//     const ref = useRef();\n//     // State for our modal\n//     const [isModalOpen, setModalOpen] = useState(false);\n//     // Call hook passing in the ref and a function to call on outside click\n//     useOnClickOutside(ref, () => setModalOpen(false));\n\n//     return (\n//       <div>\n//         {isModalOpen ? (\n//           <div ref={ref}>\n//             👋 Hey, I'm a modal. Click anywhere outside of me to close.\n//           </div>\n//         ) : (\n//           <button onClick={() => setModalOpen(true)}>Open Modal</button>\n//         )}\n//       </div>\n//     );\n//   }\n","import styled, {css} from 'styled-components'\nimport {hexToRGBA, RGB_Linear_Shade} from \"../../../methods/utils/color_utils\";\n\nconst activeContainerStyle = css`\n\tcolor:  ${props => RGB_Linear_Shade(-0.1, hexToRGBA(props.color))};\n`\n\nconst hoverContainerStyle = css`\n\tcolor:  ${props => RGB_Linear_Shade(0.5, hexToRGBA(props.color))};\n`\n\nconst focusContainerStyle = css`\n\toutline: none;\n`\n\nconst disabledContainerStyle = css`\n\tpointer-events: none;\n`\n\n\n\nexport const Container = styled.button`\n\twidth: ${props => props.width};\n\theight: ${props => props.height};\n\tcolor: ${props => props.color};\n\t\n\t// flex layout\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\t\n\tborder: none;\n\ttransition: all 0.2s ease 0s;\n\tcursor: pointer;\n\toutline: none;\n\tbackground-color: transparent;\n\tmargin: 0;\n\tpadding: 0;\n\t\n\t&:focus {\n\t\t${focusContainerStyle};\n\t}\n\t\n\t&:hover {\n\t\t${props => props.hoverable && hoverContainerStyle};\n\t}\n\t// also allow enabling hover style via props\n\t${props=> props.isHovering && hoverContainerStyle};\n\t\n\t&:active {\n\t\t${props => props.clickable && activeContainerStyle};\n\t}\n\t// also allow enabling active style via props\n\t${props=> props.isActive && activeContainerStyle};\n\t\n\t// disabled style\n\t${props => props.disabled && disabledContainerStyle};\n\t\n`\n","import React, {useEffect, useRef, useState} from 'react'\nimport PropTypes from 'prop-types'\n\n// Import Styles\nimport * as style from './icon_button.style'\nimport useOnClickOutside from \"../../../hooks/useOnClickOutside\";\n\nconst IconButton = (props => {\n\n    const {\n        color,\n        children,\n        onClick,\n        disabled,\n        width,\n        height,\n        clickable,\n        hoverable,\n        containerStyle,\n        Component,\n        backgroundColor,\n        isActive,\n        isHovering,\n        onClickOutside\n    } = props\n\n    const ref = useRef() // ref for useOnClickOutside\n    useOnClickOutside(ref, onClickOutside) // calls onClickOutside when click outside of element\n\n    return(\n        <style.Container\n            disabled={disabled}\n            width={width}\n            height={height}\n            onClick={onClick}\n            clickable={clickable}\n            hoverable={hoverable}\n            color={color}\n            backgroundColor={backgroundColor}\n            style={containerStyle}\n            isActive={isActive}\n            isHovering={isHovering}\n            ref={ref}\n        >\n            { children}\n        </style.Container>\n    )\n\n})\n\n\n// Specifies propTypes\nIconButton.propTypes = {\n    clickable: PropTypes.bool,\n    hoverable: PropTypes.bool,\n    isActive: PropTypes.bool,\n    isHovering: PropTypes.bool,\n    onClick: PropTypes.func,\n    onClickOutside: PropTypes.func,\n    disabled: PropTypes.bool\n}\n\n// Specifies the default values for props:\nIconButton.defaultProps = {\n    clickable: true,\n    hoverable: true,\n    onClick: () => {},\n    onClickOutside: () => {},\n    disabled: false,\n    width: \"auto\",\n    height: \"auto\",\n    color: \"#123456\",\n    backgroundColor: \"#FFFFFF\",\n    isActive: false,\n    isHovering: false,\n\n}\n\nexport default IconButton\n"],"sourceRoot":""}