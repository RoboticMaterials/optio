{"version":3,"sources":["components/widgets/widgets.style.js","components/widgets/widgets.js"],"names":["EmptyDiv","styled","div","WidgetLocationContainer","section","props","widgetPage","yPosition","xPosition","theme","widthBreakpoint","tablet","WidgetStationName","type","h4","fontSize","sz3","font","primary","bg","secondary","cardShadow","WidgetButtonContainer","sz4","hoverScale","WidgetButtonRow","WidgetButtonWrapper","idx","numItems","radius","theta","end","getTransformAroundCircle","WidgetBlurContainer","showWidgetPage","LocationOverlay","i","svg","p","fg","red","scale","WidgetPages","lazy","WidgetButton","Widgets","useWindowSize","width","params","useParams","history","useHistory","stations","useSelector","state","dashboardsReducer","dashboardOpen","stationsReducer","selectedStation","editingStation","positions","processesReducer","editingProcess","positionsReducer","selectedPosition","editingPosition","hoveringInfo","sidebarReducer","open","widgetReducer","hoverStationInfo","dispatch","widgetsLoaded","useDispatch","dispatchHoverStationInfo","info","dispatchWidgetLoaded","bool","widgetLoaded","dispatchSetSelectedStation","station","setSelectedStation","dispatchSetSelectedPosition","position","setSelectedPosition","stationID","id","editing","selectedLocation","widgetRadius","useMemo","Math","log","useEffect","onWidgetClose","edit","onClickLocation","a","dashboardID","dashboards","push","renderWidgetButtons","location","Wrapper","schema","label","currentPage","switcher","coordinateMove","element","document","getElementById","getXPos","getBoundingClientRect","height","x","getYPos","y","fallback","onMouseEnter","onMouseLeave","style","opacity","transitionName","transitionAppear","transitionAppearTimeout","transitionEnterTimeout","transitionLeaveTimeout","onClick","locationChildren","setOpen","setEditingStation","dispatchSetEditingStation","copy","children","forEach","child","setSelectedStationChildrenCopy","setEditingPosition","dispatchSetEditingPosition","name"],"mappings":"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","file":"static/js/40.20eff273.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const EmptyDiv = styled.div``\n\nexport const WidgetLocationContainer = styled.section`\n    position: absolute;\n\n    top: ${props => !!props.widgetPage ? '0' : props => props.yPosition};\n    left: ${props => !!props.widgetPage ? '0' : props => props.xPosition};\n    right: ${props => !!props.widgetPage && '0'};\n    transform: translate(-50%, -50%);\n\n    border-radius: 50%;\n\n    margin: ${props => !!props.widgetPage && 'auto'};\n    margin-top: ${props => !!props.widgetPage && '.2rem'};\n\n    pointer-events: auto;\n\n    z-index: 10;\n\n    // @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n    //     width: ${props => !!props.widgetPage && '25rem'};\n    //     height: ${props => !!props.widgetPage && '25rem'};\n    //     margin-top: ${props => !!props.widgetPage && '.205rem'};\n    // }\n\n`\n\nexport const WidgetContainer = styled.div`\n    justify-content:center;\n    margin: ${props => !!props.widgetPage ? '.25rem auto' : 'auto'};\n    // padding-top:.3rem;\n    // padding-bottom:.3rem;\n\n    display: ${props => !!props.widgetPage ? 'flex' : ''};\n\n    /* width: ${props => !!props.widgetPage ? '32rem' : '30rem'}; */\n    width: ${props => !!props.widgetPage ? '20rem' : 'fit-content'};\n    max-width: ${props => props.type == 'cart_position' || props.type == 'shelf_position' ? '13rem' : '30rem'};\n\n    height: ${props => !!props.widgetPage ? 'auto' : '6rem'};\n\n    // box-shadow: ${props => !!props.widgetPage ? 'none' : '0 0.1rem 0.2rem 0rem #303030'};\n\n    border-radius: 1rem;\n\n    z-index: 1000;\n\n    // backdrop-filter: ${props => !!props.widgetPage ? '' : 'blur(10px)'};\n    // background-color: ${props => !!props.widgetPage ? 'none' : 'rgba(255, 255, 255, 0.6)'};\n\n    /* transition: transform 0.25s ease, margin-left 0.25s ease, margin-right 0.25s ease, height 0.25s ease; */\n    /* transition: all 0.25s ease; */\n\n    @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n        /* width: ${props => !!props.widgetPage ? '22rem' : '20rem'}; */\n        width: ${props => !!props.widgetPage ? '15rem' : 'fit-content'};\n\n        height: ${props => !!props.widgetPage ? 'auto' : '6rem'};\n\n        /* padding: .5rem .5rem .5rem .5rem; */\n        margin-top: ${props => !!props.widgetPage && '0rem'};\n        /*padding: ${props => !!props.widgetPage ? '' : '1rem'};*/\n\n    }\n\n    &:hover{\n        cursor:pointer;\n    }\n\n    pointer-events: auto;\n\n`\n\nexport const WidgetStationName = styled.h4`\n    font-size: ${props => props.theme.fontSize.sz3};\n    font-family: ${props => props.theme.font.primary};\n    font-weight: 500;\n    width: 100%;\n\n    background: ${props => props.theme.bg.secondary};\n    box-shadow: ${props => props.theme.cardShadow};\n    transform: translateY(-10%);\n    height: 1.5rem;\n    line-height: 1.5rem;\n    border-radius: 0.75rem;\n    padding: 0 0.75rem;\n\n    text-align: center;\n\n    // flex:10;\n    // justify-content: center;\n    // text-align: center;\n    // padding-left: 2rem;\n\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n\n`\n\nexport const WidgetPositionName = styled.h4`\n    font-size: ${props => props.theme.fontSize.sz4};\n    font-family: ${props => props.theme.font.primary};\n    font-weight: 500;\n    justify-content: center;\n    text-align: center;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n`\n\nexport const WidgetHoverArea = styled.div`\n    margin-top: -12.7rem;\n    width: 3rem;\n    height:1.5rem;\n    /* z-index: -1; */\n    /* background: red; */\n    /* stroke: 1rem solid red; */\n\n    margin: 0rem auto;\n\n    transform: scale(${props => props.hoverScale});\n\n    &:hover{\n        cursor:pointer;\n    }\n\n`\n\nexport const WidgetPageButtonContainer = styled.div`\n    width: 30rem;\n    border-radius: 1rem;\n    /* z-index: 1; */\n    margin-top: .5rem;\n\n    @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n        width: 20rem;\n    }\n\n`\n\nexport const WidgetButtonContainer = styled.div`\n    height: 100%;\n    width: 100%;\n    border-radius: 50%;\n\n    border: 2px solid ${props => props.theme.bg.secondary};\n\n    &.expand-appear {\n        transform: scale(0.01);\n    }\n\n    &.expand-appear-active {\n        transform: scale(1);\n        transition: transform 200ms cubic-bezier(0.175, 0.885, 0.32, 1.275);\n    }\n`\n\nexport const WidgetButtonRow = styled.div`\n    height: 4rem;\n    display: flex;\n    flex-direction: row;\n    z-index: 4;\n\n    position: absolute;\n    top: 0.75rem;\n    left: 50%;\n    transform: translateX(-50%);\n`\n\nconst getTransformAroundCircle = (idx, numItems, radius) => {\n    const start = 110;\n    const end = 250;\n\n    const range = end - start;\n    const slice = range/(numItems - 1);\n\n    const theta = start + slice*idx;\n\n    return `rotate(${theta}deg) translateY(-${radius}) rotate(${-theta}deg)`\n}\n\nexport const WidgetButtonWrapper = styled.div`\n\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: ${props => getTransformAroundCircle(props.idx, props.numItems, props.radius)}\n\n`\n\nexport const WidgetBlurContainer = styled.div`\n    position: absolute;\n    top: 0rem;\n    width: 100%;\n    height: 100%;\n    /* z-index: -1; */\n    backdrop-filter: blur(10px);\n\n    /* opacity: ${props => !!props.showWidgetPage ? '100%' : '0%'};\n\n    transition: all 0.25s ease; */\n`\n\n\nexport const WidgetStatisticsBlock = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 2rem;\n`;\n\nexport const RowContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    padding-right: .7rem;\n    justify-content: center;\n\n`;\n\nexport const EditIcon = styled.i`\n    font-size: 1rem;\n    text-align: right;\n    flex:1;\n    margin-left:0.5rem;\n    &:hover {\n      color: #798fd9;\n    }\n\n`;\n\nexport const WidgetStatisticsContainer = styled.div`\n    display: flex;\n\n    width: 100%;\n    height: 3rem;\n\n    /* padding: 0rem 3rem; */\n    padding: 0rem 1rem;\n    margin-top: .5rem;\n\n    justify-content: space-between;\n\n    @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n        padding: 0rem 1rem;\n\n    }\n`;\n\nexport const WidgetStatisticsGraphic = styled.svg`\n    overflow: visible;\n    text-align: center;\n    width: 2rem;\n    height: 2rem;\n    background-color: blue;\n    /* transform: translateY(-0.3rem); */\n`;\n\nexport const WidgetStatisticsIcon = styled.i`\n    /* font-size: 1.5rem; */\n`\n\nexport const WidgetStatisticsText = styled.p`\n    align-self: auto;\n    margin-left: .5rem;\n    margin-top: auto;\n    margin-bottom: auto;\n`\n\n// export const CloseButton = styled.span`\n//     border: none;\n//     background: none;\n//     color: ${props => props.theme.fg.primary};\n//     font-size: 8rem;\n//     font-weight: 200;\n//     text-align: center;\n//     position: absolute;\n//     z-index: 4;\n//     line-height: 4rem;\n\n//     font-family: ${props => props.theme.font.primary};\n\n//     cursor: pointer;\n//     top: 1rem;\n//     right: 1rem;\n//     &:focus {outline:0;}\n\n//     @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n//         font-size: 3rem;\n//         right: 1rem;\n//         top: .5rem;\n//     }\n\n// `;\n\nexport const CloseButton = styled.i`\n    border: none;\n    background: none;\n    color: ${props => props.theme.fg.red};\n    text-align: center;\n\n    font-size: 4rem;\n    z-index: 4;\n    margin-left: 1rem;\n\n    position: absolute;\n    cursor: pointer;\n    left: .5rem;\n    &:focus {outline:0;}\n\n    @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n        font-size: 3rem;\n    }\n\n    z-index: 10000;\n\n`;\n\n\nexport const LocationOverlay = styled.div`\n    cursor: pointer;\n    z-index: 100;\n\n    ${props => `\n        height: ${17*props.scale}px;\n        width: ${17*props.scale}px;\n        border-radius: ${2*props.scale}px;\n    `}\n\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n`","import React, { useState, useMemo, useEffect, useRef, lazy, Suspense } from 'react';\nimport { CSSTransitionGroup } from 'react-transition-group';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useParams, useHistory } from 'react-router-dom'\n// import components\n//import WidgetPages from './widget_pages/widget_pages'\n//import WidgetButton from './widget_button/widget_button'\n\n// import hooks\nimport useWindowSize from '../../hooks/useWindowSize'\n\n// Import Actions\nimport { setSelectedStation, setEditingStation } from '../../redux/actions/stations_actions'\nimport { setSelectedPosition, setSelectedStationChildrenCopy, setEditingPosition } from '../../redux/actions/positions_actions'\nimport { widgetLoaded, hoverStationInfo } from '../../redux/actions/widget_actions'\n\nimport { setOpen } from \"../../redux/actions/sidebar_actions\"\n\nimport { deepCopy } from '../../methods/utils/utils'\n\nimport * as styled from './widgets.style'\nimport { connect } from 'formik';\n\nconst WidgetPages = lazy(() => import('./widget_pages/widget_pages'))\nconst WidgetButton = lazy(() => import('./widget_button/widget_button'))\n\nconst Widgets = (props) => {\n    const size = useWindowSize()\n    const windowWidth = size.width\n    const widthBreakPoint = 1000;\n    const mobileMode = windowWidth < widthBreakPoint;\n\n    let params = useParams()\n    const history = useHistory()\n\n    // Grabs what widget page is in the URL\n    const widgetPage = params.widgetPage\n    const dashboardOpen = useSelector(state => state.dashboardsReducer.dashboardOpen)\n\n    const stations = useSelector(state => state.stationsReducer.stations)\n    const selectedStation = useSelector(state => state.stationsReducer.selectedStation)\n    const editingStation = useSelector(state => state.stationsReducer.editingStation)\n    const editingProcess = useSelector(state => state.processesReducer.editingProcess)\n\n    const positions = useSelector(state => state.positionsReducer.positions)\n    const selectedPosition = useSelector(state => state.positionsReducer.selectedPosition)\n    const editingPosition = useSelector(state => state.positionsReducer.editingPosition)\n    const showSideBar = useSelector(state => state.sidebarReducer.open)\n\n    // Info passed from workstations/device_locations via redux\n    const hoveringInfo = useSelector(state => state.widgetReducer.hoverStationInfo)\n    const widgetsLoaded = useSelector(state => state.widgetReducer.widgetsLoaded)\n\n    const dispatch = useDispatch()\n    const dispatchHoverStationInfo = (info) => dispatch(hoverStationInfo(info))\n    const dispatchWidgetLoaded = (bool) => dispatch(widgetLoaded(bool))\n    const dispatchSetSelectedStation = (station) => dispatch(setSelectedStation(station))\n    const dispatchSetEditingStation = (bool) => dispatch(setEditingStation(bool))\n    const dispatchSetSelectedPosition = (position) => dispatch(setSelectedPosition(position))\n    const dispatchSetEditingPosition = (bool) => dispatch(setEditingPosition(bool))\n    const dispatchSetSelectedStationChildrenCopy = (locationChildren) => dispatch(setSelectedStationChildrenCopy(locationChildren))\n    const dispatchShowSideBar = (bool) => dispatch(setOpen(bool))\n    // Location ID passed down through workstations via redux\n    const stationID = hoveringInfo.id\n\n    const editing = editingStation ? editingStation : editingPosition\n    const selectedLocation = !!selectedStation ? selectedStation : selectedPosition\n\n    const widgetRadius = useMemo(() => {\n        return 2.5*Math.log(2*(hoveringInfo.scale + 1)) + 'rem';\n    }, [hoveringInfo])\n\n    // This tells redux that the widget has mounted. Used in map view to handle if widget is still open but shoulnt be\n    // This happens when moving the mouse too fast over a location causing a widget to load, but not fast enough for the onmouselave to execute\n    useEffect(() => {\n\n        // setTimeout(() => dispatchWidgetLoaded(true), 100)\n        dispatchWidgetLoaded(true)\n        return () => {\n            onWidgetClose()\n        }\n    }, [])\n\n\n    /**\n     * Closes the widget\n     * If editing, then dont set the selected location to null\n     * @param {*} edit\n     */\n    const onWidgetClose = (edit) => {\n\n        dispatchHoverStationInfo(null)\n        dispatchWidgetLoaded(false)\n\n    }\n\n    // If widgetPage exists in URL params, then the widget pages are open\n    const onWidgetPageOpen = () => {\n        if (!!widgetPage && (!!editingStation || !!editingPosition)) {\n            dispatchHoverStationInfo(hoveringInfo)\n            dispatchSetSelectedStation(null)\n            dispatchSetSelectedPosition(null)\n        }\n    }\n\n    const onClickLocation = async () => {\n        let dashboardID\n\n        // If there's no selected station, then see if theres a station in the url, if so, use that, else do nothing\n        if (!selectedLocation) {\n            if (!!stationID) {\n                dashboardID = stations[stationID].dashboards[0]\n            } else {\n                return null\n            }\n        } else {\n            dashboardID = selectedLocation.dashboards[0]\n        }\n\n        history.push('/locations/' + stationID + '/dashboards/' + dashboardID)\n    }\n\n\n    // Renders the buttons under the location. useMemo is passed a blank array because the buttons only need to be rendered once\n    const renderWidgetButtons = useMemo(() => {\n        const location = !!stations[hoveringInfo.id] ? stations[hoveringInfo.id] : positions[hoveringInfo.id]\n\n        const Wrapper = !!widgetPage ? styled.EmptyDiv : styled.WidgetButtonWrapper;\n\n        // If the schema is a station then show these buttons, else it's a position\n        if (location.schema === 'station') {\n            if (location.type === 'warehouse') {\n                return (\n                    <>\n                      <Wrapper idx={0} numItems={2} radius={widgetRadius}>\n                          <WidgetButton\n                              id={stationID}\n                              type={'dashboards'}\n                              label={'Lots'}\n                              currentPage={widgetPage}\n                              switcher={!!widgetPage}\n                          />\n                      </Wrapper>\n                    </>\n\n                )\n            } else {\n                return (\n                    <>\n                    <Wrapper idx={1} numItems={2} radius={widgetRadius}>\n                        <WidgetButton\n                            id={stationID}\n                            type={'dashboards'}\n                            label={'Dashboards'}\n                            currentPage={widgetPage}\n                            switcher={!!widgetPage}\n                        />\n                    </Wrapper>\n                      <Wrapper idx={0} numItems={2} radius={widgetRadius}>\n                          <WidgetButton\n                              id={stationID}\n                              type={'statistics'}\n                              label={'Statistics'}\n                              currentPage={widgetPage}\n                              switcher={!!widgetPage}\n                          />\n                      </Wrapper>\n                    </>\n\n                )\n            }\n        }\n        // If right menu position, have send cart and cancel (times)\n        else if (selectedPosition.schema === 'temporary_position') {\n            return (\n                <>\n                    <styled.WidgetButtonWrapper idx={1} numItems={2} radius={widgetRadius}>\n                        <WidgetButton\n                            id={stationID}\n                            type={'cart'}\n                            coordinateMove={true}\n                            currentPage={widgetPage}\n                            label={'Send Cart Here'}\n                            switcher={!!widgetPage}\n                        />\n                    </styled.WidgetButtonWrapper>\n                    <styled.WidgetButtonWrapper idx={1} numItems={2} radius={widgetRadius}>\n                        <WidgetButton\n                            id={stationID}\n                            type={'cancel'}\n                            currentPage={widgetPage}\n                            switcher={!!widgetPage}\n                        />\n                    </styled.WidgetButtonWrapper>\n                </>\n            )\n        }\n\n        else {\n            return (\n                <styled.WidgetButtonWrapper idx={1} numItems={2} radius={widgetRadius}>\n                    <WidgetButton\n                        id={stationID}\n                        type={'cart'}\n                        label={'Send Cart Here'}\n                        currentPage={widgetPage}\n                        switcher={!!widgetPage}\n                    />\n                </styled.WidgetButtonWrapper>\n            )\n        }\n    }, [widgetPage])\n\n\n    /**\n     * This handles the x and y position of the widget.\n     * It centers the x and y position to the middle of the widget by using the element height and width\n     * This takes care issue with widgets that are different sizes\n     * @param {} coord\n     */\n    // Left outside of function so that otherplaces can access it\n    const element = document.getElementById(hoveringInfo.id)\n\n    const getXPos = useMemo(() => {\n        // When first hovering over, the widget has not mounted so the element is null, but once its mounted, you can use the bounding box\n        if (element === null) {\n            return hoveringInfo.xPosition + 'px'\n        }\n\n        const elementHeight = element.getBoundingClientRect().height\n        const elementWidth = element.getBoundingClientRect().width\n\n        // Handles the x and y, use location x if right click menu so it can also move\n        if (!!selectedLocation && selectedLocation.schema === 'temporary_position') {\n            return selectedLocation.x + 'px';\n        }\n        else {\n            return hoveringInfo.x + 'px';\n        }\n    }, [selectedLocation, hoveringInfo])\n\n    const getYPos = useMemo(() => {\n        // When first hovering over, the widget has not mounted so the element is null, but once its mounted, you can use the bounding box\n        if (element === null) {\n            return hoveringInfo.yPosition + 'px'\n        }\n\n        const elementHeight = element.getBoundingClientRect().height\n        const elementWidth = element.getBoundingClientRect().width\n\n        // Handles the x and y, use location x if right click menu so it can also move\n        if (!!selectedLocation && selectedLocation.schema === 'temporary_position') {\n            return selectedLocation.y + 'px';\n        }\n        else {\n            return hoveringInfo.y + 'px';\n        }\n    }, [selectedLocation, hoveringInfo])\n\n    const editLocation = () => {\n        history.push('/locations')\n        dispatchShowSideBar(true)\n\n\n        if (!!selectedStation) {\n            dispatchSetEditingStation(true)\n            let copy = {}\n            selectedStation.children.forEach(child => {\n                copy[child] = positions[child]\n            })\n            dispatchSetSelectedStationChildrenCopy(copy)\n            dispatchSetSelectedStation(selectedStation)\n        }\n        else if (!!selectedPosition) {\n            dispatchSetEditingPosition(true)\n            dispatchSetSelectedPosition(selectedPosition)\n\n        }\n\n          onWidgetClose(true)\n          dispatchHoverStationInfo(null)\n    }\n\n    return (\n        <Suspense fallback = {<></>}>\n\n            {/* WidgetLocationContainer is an absolute div used for locating the widget over the hovered location */}\n            {!widgetPage ?\n                <styled.WidgetLocationContainer\n                    id={hoveringInfo.id}\n                    onMouseEnter={() => {\n                        dispatchHoverStationInfo(hoveringInfo)\n                    }}\n                    onMouseLeave={() => {\n                        if (!widgetPage && !!selectedLocation && selectedLocation.schema !== 'temporary_position' && !editing) {\n                            onWidgetClose()\n                            if(!editing){\n                              dispatchSetSelectedStation(null)\n                              dispatchSetSelectedPosition(null)\n                            }\n\n                        }\n                    }}\n\n                    xPosition={getXPos}\n                    yPosition={getYPos}\n                    scale={hoveringInfo.scale}\n                    widgetPage={widgetPage}\n\n                    // This sets the opacity to 0 if the element has not been mounted yet. Eliminates the 'snapping'\n                    style={{\n                        opacity: !widgetPage && element === null ? '0' : '1',\n                        height: `calc(${widgetRadius} * 2)`,\n                        width: `calc(${widgetRadius} * 2)`,\n                    }}\n                >\n                    {!!selectedLocation&&\n                        <CSSTransitionGroup\n                            transitionName={'expand'}\n                            transitionAppear={true}\n                            transitionAppearTimeout={200}\n                            transitionEnterTimeout={200}\n                            transitionLeaveTimeout={200}\n                        >\n                            <styled.LocationOverlay scale={hoveringInfo.scale} onClick={() => onClickLocation()} />\n                            <styled.WidgetButtonContainer widgetPage={widgetPage}>\n                                {renderWidgetButtons}\n                                <styled.WidgetStationName onClick={editLocation}>{selectedLocation.name}</styled.WidgetStationName>\n                            </styled.WidgetButtonContainer>\n\n                        </CSSTransitionGroup>\n                    }\n\n                    {onWidgetPageOpen()}\n\n\n                </styled.WidgetLocationContainer>\n\n            :\n\n            <>\n                <styled.WidgetBlurContainer />\n                <styled.WidgetButtonRow>\n                    {renderWidgetButtons}\n                </styled.WidgetButtonRow>\n                <WidgetPages />\n            </>\n        }\n\n        </Suspense>\n    )\n}\n\nexport default Widgets\n"],"sourceRoot":""}