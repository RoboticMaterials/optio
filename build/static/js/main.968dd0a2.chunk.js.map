{"version":3,"sources":["redux/actions/card_actions.js","methods/utils/map_utils.js","components/basic/form/text_field/text_field.style.js","components/basic/form/text_field/text_field.js","methods/utils/processes_utils.js","global_style.js","components/basic/drop_down_search_v2/components/ClickOutside.js","components/basic/drop_down_search_v2/components/Label.js","components/basic/drop_down_search_v2/util.js","components/basic/drop_down_search_v2/constants.js","components/basic/drop_down_search_v2/components/Option.js","components/basic/drop_down_search_v2/components/Input.js","components/basic/drop_down_search_v2/components/Content.js","components/basic/drop_down_search_v2/components/NoData.js","components/basic/drop_down_search_v2/components/Item.js","components/basic/drop_down_search_v2/components/Dropdown.js","components/basic/drop_down_search_v2/components/Loading.js","components/basic/drop_down_search_v2/components/Clear.js","components/basic/drop_down_search_v2/components/Separator.js","components/basic/drop_down_search_v2/components/DropdownHandle.js","components/basic/drop_down_search_v2/drop_down_search.js","constants/common_contants.js","normalizr/schema.js","redux/types/map_types.js","hooks/useWindowSize.js","redux/types/setting_types.js","redux/types/status_types.js","api/devices_api.js","redux/actions/devices_actions.js","redux/types/notifications_types.js","redux/types/authentication_types.js","methods/utils/color_utils.js","methods/utils/locations_utils.js","methods/utils/form_utils.js","logger.js","App.style.js","api/local_api.js","redux/actions/local_actions.js","api/map_api.js","redux/actions/map_actions.js","api/objects_api.js","redux/actions/objects_actions.js","api/sounds_api.js","redux/actions/sounds_actions.js","api/task_analysis_api.js","redux/actions/task_analysis_actions.js","api/data_stream_api.js","normalizr/status_schema.js","api/schedules_api.js","redux/actions/schedule_actions.js","api/status_api.js","redux/actions/status_actions.js","api/settings_api.js","redux/actions/settings_actions.js","components/misc/splash_screen/splash_screen.style.js","components/misc/splash_screen/splash_screen.js","containers/side_bar/side_bar.style.js","components/side_bar/side_bar_buttons/side_bar_button.style.js","components/basic/modals/confirm_delete_modal/confirm_delete_modal.style.js","components/basic/modals/confirm_delete_modal/confirm_delete_modal.js","components/side_bar/side_bar_buttons/side_bar_button.js","redux/actions/locations_actions.js","redux/types/locations_types.js","components/side_bar/side_bar_switcher/side_bar_switcher.style.js","redux/actions/sidebar_actions.js","components/side_bar/side_bar_switcher/side_bar_switcher.js","components/side_bar/content/locations/locations_content.style.js","components/side_bar/content/content_list/content_list.style.js","components/side_bar/content/content_header/contnet_header.style.js","components/basic/plus_button/plus_button.style.js","components/basic/plus_button/plus_button.js","components/basic/back_button/back_button.style.js","components/basic/back_button/back_button.js","components/basic/bounce_button/bounce_button.style.js","components/widgets/widget_pages/dashboards_page/dashboard_editor/button_fields/button_fields.style.js","components/widgets/widget_pages/dashboards_page/dashboard_buttons/dashboard_buttons.style.js","components/widgets/widget_pages/dashboards_page/dashboard_buttons/dashboard_button/dashboard_button.style.js","components/widgets/widget_pages/dashboards_page/dashboard_buttons/dashboard_button/dashboard_button.js","hooks/useOnClickOutside.js","components/basic/bounce_button/bounce_button.js","components/side_bar/content/content_header/content_header.js","constants/station_constants.js","constants/position_constants.js","components/side_bar/content/content_list/content_list.js","components/side_bar/content/locations/edit_location/edit_location.style.js","components/side_bar/content/locations/edit_location/location_button/location_button.style.js","components/side_bar/content/locations/edit_location/location_button/location_button.js","components/side_bar/content/locations/edit_location/associated_positions/associated_positions.style.js","components/basic/minus_button/minus_button.style.js","components/basic/minus_button/minus_button.js","components/side_bar/content/locations/edit_location/associated_positions/associated_positions.js","constants/location_constants.js","methods/utils/form_schemas.js","methods/utils/regex_utils.js","components/side_bar/content/locations/edit_location/edit_location.js","components/side_bar/content/locations/locations_content.js","components/side_bar/content/objects/objects_content.style.js","components/side_bar/content/tasks/tasks_content.style.js","constants/dashboard_contants.js","components/widgets/widget_pages/dashboards_page/dashboard_screen/task_added_alert/task_added_alert.style.js","components/widgets/widget_pages/dashboards_page/dashboard_screen/task_added_alert/task_added_alert.js","methods/utils/task_utils.js","components/side_bar/content/tasks/tasks_templates/route_task.js","components/basic/form/switch_field/switch_field.style.js","components/basic/form/switch_field/switch_field.js","components/basic/form/time_picker_field/time_picker_field.style.js","components/basic/form/time_picker_field/time_picker_field.js","methods/utils/string_utils.js","components/side_bar/content/tasks/task_field/fields/load_unload_fields.js","components/basic/textbox_search/components/ClickOutside.js","components/basic/textbox_search/components/Label.js","components/basic/textbox_search/util.js","components/basic/textbox_search/constants.js","components/basic/textbox_search/components/Option.js","components/basic/textbox_search/components/Input.js","components/basic/textbox_search/components/Content.js","components/basic/textbox_search/components/NoData.js","components/basic/textbox_search/components/Item.js","components/basic/textbox_search/components/Dropdown.js","components/basic/textbox_search/components/Loading.js","components/basic/textbox_search/components/Clear.js","components/basic/textbox_search/components/Separator.js","components/basic/textbox_search/components/DropdownHandle.js","components/basic/textbox_search/textbox_search.js","components/basic/form/textbox_search_field/textbox_search_field.style.js","components/basic/form/textbox_search_field/textbox_search_field.js","hooks/usePrevious.js","components/side_bar/content/tasks/task_field/route_field.js","components/side_bar/content/tasks/task_form/route_form.js","components/side_bar/content/tasks/tasks_content.js","components/side_bar/content/devices/devices_content.style.js","components/side_bar/content/settings/settings.style.js","components/side_bar/content/devices/device_edit/device_edit.style.js","components/side_bar/content/devices/device_edit/device_edit.js","components/side_bar/content/devices/device_statistics/device_statistics.style.js","components/side_bar/content/devices/device_item/device_item.style.js","components/side_bar/content/devices/device_item/device_item.js","components/side_bar/content/devices/devices_content.js","components/basic/button_group/button_group.style.js","components/basic/button_group/button_group.js","methods/utils/style_utils.js","components/side_bar/content/scheduler/schedule_list/schedule_list_item/schedule_list_item.style.js","components/side_bar/content/scheduler/schedule_list/schedule_list_item/schedule_list_item.js","components/side_bar/content/scheduler/schedule_list/schedule_list.style.js","components/side_bar/content/scheduler/scheduler_content.style.js","components/side_bar/content/scheduler/schedule_list/schedule_list.js","components/basic/modals/modals.style.js","components/basic/small_button/small_button.style.js","components/basic/small_button/small_button.js","components/basic/modals/modals.js","components/basic/form/button_group_field/button_group_field.style.js","components/basic/form/button_group_field/button_group_field.js","components/side_bar/content/scheduler/create_schedule_form/create_schedule_form.helpers.js","methods/utils/schedules_utils.js","methods/utils/time_utils.js","components/side_bar/content/scheduler/create_schedule_form/create_schedule_form.style.js","components/side_bar/content/scheduler/create_schedule_form/button_group.style.js","components/side_bar/content/scheduler/create_schedule_form/create_schedule_form.js","components/side_bar/content/scheduler/scheduler_content.js","components/basic/form/list_item_field/list_item_field.style.js","components/basic/form/list_item_field/list_item_field.js","components/side_bar/content/processes/process_field/process_field.style.js","components/side_bar/content/processes/process_field/process_field.js","methods/utils/function_utils.js","components/side_bar/content/processes/process_form/process_form.js","components/side_bar/content/processes/processes_content.js","components/basic/header/header.style.js","components/side_bar/content/settings/settings.js","containers/page_error_boundary/page_error_boundary.style.js","containers/page_error_boundary/page_error_boundary.js","components/basic/form/calendar_field/calendar_field.style.js","components/basic/form/calendar_field/calendar_field.js","api/card_history_api.js","redux/actions/card_history_actions.js","components/basic/form/scrolling_buttons_field/scrolling_buttons_field.style.js","components/basic/form/scrolling_buttons_field/scrolling_buttons_field.js","components/basic/form/number_field/number_field.style.js","components/basic/form/number_field/number_field.js","components/side_bar/content/cards/card_editor/card_editor.js","components/side_bar/content/cards/card_menu/card_menu.style.js","components/side_bar/content/cards/card_menu/card_menu.js","components/side_bar/content/cards/columns/station_column/station_column.style.js","components/side_bar/content/cards/columns/column/column.style.js","redux/actions/card_page_actions.js","components/side_bar/content/cards/columns/column/column.js","components/side_bar/content/cards/columns/station_column/station_column.js","components/side_bar/content/cards/columns/lot_queue/lot_queue.style.js","components/side_bar/content/cards/columns/lot_queue/lot_queue.js","components/side_bar/content/cards/columns/finish_column/finish_column.style.js","components/side_bar/content/cards/columns/finish_column/finish_column.js","components/side_bar/content/cards/card_zone/card_zone.style.js","components/side_bar/content/cards/card_zone/card_zone.js","components/side_bar/content/cards/zone_header/zone_header.style.js","components/side_bar/content/cards/zone_header/zone_header.js","components/side_bar/content/cards/summary_zone/summary_zone.style.js","components/side_bar/content/cards/summary_zone/summary_zone.js","components/side_bar/content/cards/cards.style.js","components/side_bar/content/cards/cards.js","redux/actions/widget_actions.js","containers/side_bar/side_bar.js","api/report_events_api.js","redux/actions/report_event_actions.js","api/lots_api.js","redux/actions/lot_actions.js","containers/api_container/api_container.js","redux/actions/data_stream_actions.js","containers/right_menu/right_menu.style.js","components/basic/basic_list_item/basic_list_item.style.js","components/basic/basic_list_item/basic_list_item.js","components/task_queue/task_queue_item/task_queue_item.style.js","components/basic/icon_button/icon_button.style.js","components/basic/icon_button/icon_button.js","components/task_queue/task_queue_item/task_queue_item.js","components/task_queue/task_queue.style.js","components/task_queue/task_queue.js","components/notifications/notification/notification.style.js","components/notifications/notification/notification.js","components/notifications/notifications.js","containers/right_menu/right_menu.js","containers/status_header/status_header.style.js","containers/status_header/status_header.js","containers/logger/logger.js","containers/map_view/map_view.style.js","components/map/task_paths/task_paths.js","components/map/process_paths/process_paths.js","components/map/amrs/mir100/mir100.js","components/map/right_click_menu/right_click_menu.style.js","components/map/right_click_menu/right_click_menu.js","components/map/task_statistics/task_statistics.style.js","components/map/task_statistics/task_statistics.js","components/widgets/widget_pages/widget_pages.style.js","components/widgets/widget_pages/widget_page_header/widget_page_header.style.js","components/widgets/widget_pages/dashboards_page/dashboards_header/dashboards_header.style.js","components/widgets/widget_pages/dashboards_page/dashboard_list/DashboardsList.style.js","components/widgets/widget_pages/dashboards_page/dashboard_list/dashboard/dashboard.style.js","components/widgets/widget_pages/dashboards_page/dashboards_sidebar/dashboard_sidebar_button/dashboard_sidebar_button.style.js","components/widgets/widget_pages/dashboards_page/dashboards_sidebar/dashboard_sidebar_button/dashboard_sidebar_button.js","components/widgets/widget_pages/dashboards_page/dashboard_list/dashboard/dashboard.js","components/widgets/widget_pages/dashboards_page/dashboards_header/dashboards_header.js","components/widgets/widget_pages/dashboards_page/dashboard_list/DashboardsList.js","components/widgets/widget_pages/dashboards_page/dashboard_screen/dashboard_button_list/dashboard_button_list.style.js","components/widgets/widget_pages/dashboards_page/dashboards_sidebar/dashboards_sidebar.style.js","components/basic/widget_button/widget_button.style.js","components/basic/widget_button/widget_button.js","components/widgets/widget_pages/dashboards_page/dashboards_sidebar/dashboards_sidebar.jsx","methods/utils/dashboards_utils.js","components/widgets/widget_pages/dashboards_page/dashboard_buttons/dashboard_split_button/dashboard_split_button.style.js","components/widgets/widget_pages/dashboards_page/dashboard_buttons/dashboard_split_button/dashboard_split_button.js","components/widgets/widget_pages/dashboards_page/dashboard_screen/dashboard_button_list/dashboard_button_list.js","components/widgets/widget_pages/dashboards_page/dashboard_screen/dashboard_task_queue/dashboard_task_queue.style.js","components/widgets/widget_pages/dashboards_page/dashboard_screen/dashboard_task_queue/dashboard_task_queue.js","components/widgets/widget_pages/dashboards_page/dashboard_screen/dashboard_screen.style.js","components/basic/form/color_field/color_field.style.js","components/basic/form/color_field/color_field.js","components/widgets/widget_pages/dashboards_page/dashboard_screen/report_modal/report_modal.style.js","components/basic/form/delete_field_button/delete_field_button.style.js","components/basic/form/delete_field_button/delete_field_button.js","components/widgets/widget_pages/dashboards_page/dashboard_screen/report_modal/report_modal.js","components/widgets/widget_pages/dashboards_page/dashboard_screen/kick_off_modal/kick_off_modal.style.js","components/widgets/widget_pages/dashboards_page/dashboard_screen/kick_off_modal/kick_off_modal.js","components/widgets/widget_pages/dashboards_page/dashboard_screen/finish_modal/finish_modal.style.js","components/widgets/widget_pages/dashboards_page/dashboard_screen/finish_modal/finish_modal.js","components/widgets/widget_pages/dashboards_page/dashboard_screen/dashboard_screen.js","components/widgets/widget_pages/dashboards_page/dashboard_editor/dashboard_add_task/dashboard_add_task.style.js","components/widgets/widget_pages/dashboards_page/dashboard_editor/button_fields/dashboard_route_field/dashboard_route_field.style.js","components/widgets/widget_pages/dashboards_page/dashboard_editor/button_fields/dashboard_route_field/dashboard_route_field.js","components/widgets/widget_pages/dashboards_page/dashboard_editor/button_fields/dashboard_report_field/dashboard_report_field.js","components/widgets/widget_pages/dashboards_page/dashboard_editor/dashboard_editor_button_renderer/dashboard_editor_button_renderer.js","components/widgets/widget_pages/dashboards_page/dashboard_editor/dashboard_editor.style.js","components/widgets/widget_pages/dashboards_page/dashboards_page.style.js","components/widgets/widget_pages/dashboards_page/dashboard_editor/dashboard_add_button/dashboard_add_button.style.js","components/widgets/widget_pages/dashboards_page/dashboard_editor/dashboard_add_button/dashboard_add_button.js","components/widgets/widget_pages/dashboards_page/dashboard_editor/dashboard_editor.js","components/widgets/widget_pages/dashboards_page/dashboards_page.js","components/widgets/widget_pages/objects_page/objects_page.style.js","components/widgets/widget_pages/objects_page/object_columns/object_columns.style.js","components/widgets/widget_pages/objects_page/object_link/object_link.js","components/widgets/widget_pages/objects_page/object_columns/object_columns.js","components/widgets/widget_pages/objects_page/objects_page.js","components/widgets/widget_pages/statistics_page/statistics_page.style.js","components/widgets/widget_pages/statistics_page/statistics_overview/statistics_overview.style.js","components/widgets/widget_pages/statistics_page/statistics_overview/timespans/timespans.style.js","components/widgets/widget_pages/statistics_page/statistics_overview/timespans/timespans.js","components/widgets/widget_pages/statistics_page/statistics_overview/data_selector/data_selector.style.js","components/widgets/widget_pages/statistics_page/statistics_charts/statistics_charts_types/bar_chart.js","components/widgets/widget_pages/statistics_page/statistics_overview/statistics_overview.js","components/widgets/widget_pages/statistics_page/statistics_charts/statistics_charts.style.js","components/widgets/widget_pages/statistics_page/statistics_page.js","components/widgets/widget_pages/tasks_page/tasks_page.js","components/widgets/widget_pages/viewer_page/viewer_page.style.js","components/widgets/widget_pages/viewer_page/stream_container/stream_container.style.js","components/widgets/widget_pages/viewer_page/stream_container/stream_container.js","components/widgets/widget_pages/viewer_page/stream_info/stream_info.style.js","components/widgets/widget_pages/viewer_page/stream_info/stream_info.js","methods/utils/websocket_utils.js","components/widgets/widget_pages/viewer_page/test_buttons/test_buttons.style.js","components/widgets/widget_pages/viewer_page/viewer_page.js","components/widgets/widget_pages/viewer_page/test_buttons/test_buttons.js","components/widgets/widget_pages/lots_page/lots_page.style.js","components/widgets/widget_pages/lots_page/lots_page.js","components/widgets/widget_pages/widget_pages.js","components/widgets/widget_button/widget_button.style.js","components/widgets/widget_button/widget_button.js","components/widgets/widgets.style.js","components/widgets/widgets.js","components/map/locations/station/station.style.js","methods/utils/widget_utils.js","components/map/locations/location_svg/location_svg.style.js","components/map/locations/location_svg/location_svg.js","components/map/locations/drag_entity_proto.js","components/map/locations/station/station.js","components/map/locations/position/position.js","containers/map_view/map_view.js","containers/hil_modal/hil_modal.js","containers/authentication/authentication.style.js","components/sign_in_up_page/sign_in_up_page.style.js","components/sign_in_up_page/sign_in_up_page.js","containers/authentication/authentication.js","components/list_view/list_view.style.js","components/list_view/location_list/location_list.js","components/list_view/list_view.js","redux/actions/test_actions.js","containers/api_container/tests_container.js","App.js","serviceWorker.js","index.js","api/events_api.js","methods/utils/array_utils.js","common_css/common_css.js","theme.js","methods/utils/card_utils.js","components/basic/form/drop_down_search_field/drop_down_search_field.style.js","components/basic/form/drop_down_search_field/drop_down_search_field.js","methods/utils/route_utils.js","redux/types/sidebar_types.js","redux/types/widget_types.js","api/dashboards_api.js","components/side_bar/content/cards/card/card.style.js","components/side_bar/content/cards/card/card.js","settings/settings.js","components/hil_modals/hil_modals.style.js","api/task_queue_api.js","api/cards_api.js","redux/types/api_types.js","components/basic/form/useChange.js","redux/types/tasks_types.js","redux/types/ui_types.js","constants/route_constants.js","components/hil_modals/hil_modals.js","redux/types/prefixes.js","api/tasks_api.js","redux/actions/tasks_actions.js","components/basic/button/button.style.js","components/basic/button/button.js","normalizr/schedules_schema.js","api/stations_api.js","redux/actions/stations_actions.js","redux/types/data_types.js","api/positions_api.js","redux/actions/positions_actions.js","constants/local_settings_constants.js","components/side_bar/content/cards/card_editor/card_editor.style.js","components/basic/textbox/textbox.style.js","components/basic/textbox/textbox.js","redux/reducers/local_reducer.js","normalizr/task_queue_schema.js","redux/actions/dashboards_actions.js","methods/utils/station_utils.js","redux/types/suffixes.js","redux/types/objects_types.js","redux/types/stations_types.js","redux/types/positions_types.js","redux/reducers/objects_reducer.js","redux/reducers/api_reducer.js","redux/reducers/task_analysis_reducer.js","redux/types/task_queue_types.js","components/hil_modals/hil_modals_content/hil_success.js","redux/reducers/schedules_reducer_v2.js","redux/reducers/skills_reducer.js","redux/reducers/stations_reducer.js","redux/reducers/positions_reducer.js","redux/reducers/dashboards_reducer.js","redux/reducers/error_reducer.js","redux/reducers/status_reducer.js","redux/reducers/task_queue_reducer.js","redux/reducers/keyboard_reducer.js","redux/reducers/tasks_reducer.js","redux/reducers/sounds_reducer.js","redux/reducers/settings_reducer.js","redux/reducers/models_reducer.js","redux/types/skill_templates_types.js","redux/reducers/skill_templates_reducer.js","redux/types/poses_types.js","redux/reducers/poses_reducer.js","methods/utils/redux_utils.js","redux/reducers/request_status_reducer.js","redux/reducers/map_reducer.js","redux/reducers/sidebar_reducer.js","redux/reducers/widget_reducer.js","redux/reducers/devices_reducer.js","redux/reducers/notifications_reducer.js","redux/reducers/events_reducer.js","redux/reducers/authentication_reducer.js","redux/reducers/processes_reducer.js","redux/reducers/report_events_reducer.js","redux/reducers/cards_reducer.js","redux/reducers/lots_reducer.js","redux/reducers/card_page_reducer.js","redux/reducers/index.js","redux/types/schedule_types.js","redux/types/skills_types.js","redux/types/error_types.js","redux/types/keyboard_types.js","redux/types/models_types.js","redux/store/index.js","api/processes_api.js","redux/actions/processes_actions.js","constants/device_constants.js","redux/types/devices_types.js","methods/utils/object_utils.js","redux/types/local_types.js","redux/types/dashboards_types.js","redux/types/processes_types.js","methods/utils/utils.js","higher_order_components/portal.js","components/basic/form/error_tooltip/error_tooltip.style.js","components/basic/form/error_tooltip/error_tooltip.js","constants/scheduler_constants.js","redux/types/events_types.js","redux/actions/task_queue_actions.js","redux/actions/index.js"],"names":["log","getLogger","setLevel","getCard","cardId","dispatch","a","callback","api","card","actionName","GET","CARD","api_action","payload","getCards","cards","cardsObj","convertArrayToObject","CARDS","getProcessCards","processId","PROCESS_CARDS","postCard","createdCard","process_id","POST","deleteCard","DELETE","putCard","cardID","response","PUT","showEditor","bool","type","SHOW_EDITOR","convertD3ToReal","d3","x","y","mapResolution","translate","scale","naturalDims","height","convertRealToD3","pos_x","pos_y","DefaultLabelComponent","styled","label","DefaultFieldContainer","div","DefaultContentContainer","DefaultInputContainer","DefaultInputComponent","input","props","hasError","theme","bad","IconContainerComponent","iconContainerCss","TextField","InputComponent","LabelComponent","ErrorComponent","InputContainer","fieldLabel","onBlur","onChange","onFocus","inputStyleFunc","ContentContainer","mapInput","FieldContainer","mapOutput","inputProps","style","useFormikContext","setFieldValue","setFieldTouched","validateOnChange","validateOnBlur","validateField","validateForm","useField","field","meta","touched","error","useChange","inputStyle","htmlFor","id","name","className","value","event","target","visible","text","ContainerComponent","defaultProps","transition","boxShadow","borderLeft","borderTop","borderRight","borderBottom","overflow","textOverflow","display","justifyContent","alignItems","val","isBrokenProcess","routes","length","i","currentRoute","nextRoute","getUnloadStationId","getLoadStationId","willRouteDeleteBreakProcess","routeId","_id","copyProcessRoutes","deepCopy","index","findIndex","currRoute","splice","getProcessStations","process","stationIds","forEach","currRouteId","unload","load","unloadStationId","station","loadStationId","getPreviousRoute","processRoutes","currentRouteId","previousRoute","store","getState","tasksReducer","tasks","currentRouteindex","currItem","isObject","globStyle","lrgFontSize","medFontSize","smlFontSize","font","lightBG","darkBG","white","black","grey1","grey2","grey3","grey4","grey5","red","green","ClickOutside","container","React","createRef","handleClick","current","onClickOutside","contains","document","addEventListener","this","capture","passive","removeEventListener","children","ClickOutsideComponent","ref","Component","DefaultClickOutsideComponent","Label","LightenDarkenColor","bg","quinary","septenary","primary","fontSize","sz5","valueExistInSelected","values","find","getByPath","hexToRGBA","hex","alpha","RR","parseInt","slice","GG","BB","debounce","fn","timerId","delay","args","clearTimeout","setTimeout","isEqual","b","JSON","stringify","object","path","split","reduce","acc","getProp","defaultValue","normalizedPath","Array","isArray","filter","item","shift","undefined","LIB_NAME","Option","state","methods","OptionComponent","DefaultOptionComponent","optionRenderer","role","disabled","direction","color","labelField","onClick","removeItem","closeOnSelect","span","handlePlaceHolder","addPlaceholder","searchable","placeholder","noValues","hasValues","Input","stopPropagation","dropdown","focus","blur","handleKeyPress","create","key","search","cursor","createNew","prevProps","autoFocus","inputRenderer","inputRef","tabIndex","size","getInputSize","readOnly","dropDown","onKeyPress","setSearch","filled","senary","Content","ContentComponent","multi","contentRenderer","OptionsContainer","showSelectedBox","map","valueField","Value","sz3","DefaultContentComponent","NoData","NoDataComponent","noDataRenderer","noDataLabel","DefaultNoDataComponent","Item","itemIndex","scrollIntoView","behavior","block","inline","ItemComponent","ButtonComponent","TextComponent","onMouseEnter","itemRenderer","keepSelectedInList","isSelected","aria-selected","aria-disabled","aria-label","addItem","schema","disabledLabel","showButton","onDetailsClick","e","window","cancelBubble","DefaultItemComponent","solid","secondary","tertiary","DefaultButtonComponent","DefaultTextComponent","dropdownPosition","DropdownBoundingClientRect","getSelectRef","getBoundingClientRect","dropdownHeight","bottom","dropdownGap","innerHeight","top","Dropdown","DropDownComponent","aria-expanded","selectBounds","portal","dropdownRenderer","Fragment","AddNew","createNewLabel","replace","searchResults","DefaultDropDownComponent","left","LoadingComponent","Loading","loadingRenderer","ClearComponent","Clear","clearRenderer","clearAll","SeparatorComponent","Separator","separatorRenderer","DropdownHandleComponent","dropdownOpen","DropdownHandle","dropdownHandleRenderer","onKeyDown","fill","viewBox","d","DropDownSearch","onDropdownClose","setState","onScroll","closeOnScroll","updateSelectBounds","select","getSelectBounds","action","srcElement","offsetParent","classList","keepOpen","clearOnBlur","clearOnSelect","close","preventDefault","newValues","onRemoveItem","toggleSelectAll","selectAll","onClearAll","valuesList","onSelectAll","options","option","areAllSelected","safeString","string","sortBy","sort","searchFn","regexp","RegExp","test","searchBy","activeCursorItem","handleKeyDown","bind","handleKeyDownFn","escape","enter","arrowUp","arrowDown","tab","shiftKey","shiftTab","currentItem","prevState","renderDropdown","ReactDOM","createPortal","dropdownRoot","newValue","onCreateNew","createElement","appendChild","onDropdownOpen","fillable","removeChild","debounceDelay","ReactDropdownSelect","Container","additionalProps","required","opacity","width","position","pattern","toString","loading","clearable","separator","dropdownHandle","DefaultReactDropdownSelect","octonary","DefaultContainer","SORT_MODES","START_ASCENDING","START_DESCENDING","END_ASCENDING","END_DESCENDING","NAME_ASCENDING","NAME_DESCENDING","QUANTITY_ASCENDING","QUANTITY_DESCENDING","SORT_OPTIONS","description","sortMode","devicesSchema","Entity","idAttribute","parent","$oid","eventsSchema","processesSchema","soundsSchema","tasksAnalysisSchema","task_id","positionsSchema","stationsSchema","processStrategy","GET_MAPS","GET_MAPS_STARTED","GET_MAPS_SUCCESS","GET_MAPS_FAILURE","GET_MAP","GET_MAP_STARTED","GET_MAP_SUCCESS","GET_MAP_FAILURE","SET_MAP_ATTRIBUTES","SET_CURRENT_MAP","useWindowSize","useState","windowSize","setWindowSize","useEffect","handleResize","innerWidth","GET_SETTINGS","GET_SETTINGS_STARTED","GET_SETTINGS_SUCCESS","GET_SETTINGS_FAILURE","POST_SETTINGS","POST_SETTINGS_STARTED","POST_SETTINGS_SUCCESS","POST_SETTINGS_FAILURE","DEVICE_ENABLED","GET_STATUS_STARTED","GET_STATUS_SUCCESS","GET_STATUS_FAILURE","POST_STATUS_STARTED","POST_STATUS_SUCCESS","POST_STATUS_FAILURE","cognotoUserSession","logger","getDevices","axios","method","url","apiIPAddress","headers","data","dataJson","parse","debug","status","request","message","putDevices","device","ID","onStart","onSuccess","onError","GET_DEVICES_FAILURE","GET_DEVICES_SUCCESS","GET_DEVICES_STARTED","devices","ind","normalizedDevices","normalize","entities","PUT_DEVICES_FAILURE","PUT_DEVICES_SUCCESS","PUT_DEVICES_STARTED","updateDevices","setSelectedDevice","GET_NOTIFICATIONS_STARTED","GET_NOTIFICATIONS_SUCCESS","GET_NOTIFICATIONS_FAILURE","POST_NOTIFICATIONS_STARTED","POST_NOTIFICATIONS_SUCCESS","POST_NOTIFICATIONS_FAILURE","PUT_NOTIFICATION_STARTED","PUT_NOTIFICATION_SUCCESS","PUT_NOTIFICATION_FAILURE","DELETE_NOTIFICATION_STARTED","DELETE_NOTIFICATION_SUCCESS","DELETE_NOTIFICATION_FAILURE","TOGGLE_NOTIFICATION_TASK_QUEUE","GET_REFRESH_TOKEN","GET_REFRESH_TOKEN_STARTED","GET_REFRESH_TOKEN_SUCCESS","GET_REFRESH_TOKEN_FAILURE","POST_REFRESH_TOKEN","POST_REFRESH_TOKEN_STARTED","POST_REFRESH_TOKEN_SUCCESS","POST_REFRESH_TOKEN_FAILURE","col","amt","usePound","num","r","g","RGB_Linear_Shade","p","c","Math","round","t","P","locationsSortedAlphabetically","locations","locationsCopy","aName","bName","editing","editingPosition","positionsReducer","editingStation","stationsReducer","compareExistingVsIncomingLocations","incomingLocations","existingLocations","Object","existingLocation","assign","new","incomingLocation","change_key","getMessageFromError","err","category","defineProperty","writable","getCategoryLoggers","loggers","getLoggers","categoryLoggers","push","HeaderContainer","BodyContainer","loggerConfig","localStorage","getItem","postLoggers","settings","setItem","postLocalSettings","console","localSettings","getLocalSettings","defaultLocalSettings","POST_LOCAL_SETTINGS_FAILURE","POST_LOCAL_SETTINGS_SUCCESS","POST_LOCAL_SETTINGS_STARTED","stopAPICalls","STOP_API_CALLS","getMaps","getMap","map_id","setCurrentMap","getObjects","postObject","POST_OBJECT_FAILURE","newObject","POST_OBJECT_SUCCESS","POST_OBJECT_STARTED","getSounds","getTasksAnalysis","httpsAgent","https","Agent","rejectUnauthorized","getDataStream","getSchedules","postSchedule","schedule","deleteSchedule","scheduleId","putSchedule","createdSchedule","normalizedSchedules","scheduleSchema","createdSchedules","schedules","SCHEDULE","normalizedSchedule","getStatus","postStatus","getSettings","postSettings","newSettings","deviceEnabled","SwitchContainer","sz4","SwitchContainerLabel","ToggleMapViewSwitch","checked","switchContainerStyle","margin","SplashScreen","isApiLoaded","apiError","useDispatch","useSelector","localReducer","apiIpAddress","setApiIpAddress","onPostLocalSettings","handleSubmitApiIpAddress","non_local_api","non_local_api_ip","location","reload","toggleMapViewEnabled","mapViewEnabled","paddingTop","flexDirection","marginBottom","minWidth","onSubmit","border","transform","SideBarOpenCloseButton","button","showSideBar","widthBreakpoint","tablet","SidebarWrapper","SidebarContent","ResizeBar","ResizeHandle","content","SideBarButtonIcon","mode","currentMode","gradient","SideBarButtonText","h1","borderGlowCss","css","fg","Modal","Header","Title","h2","sz2","fontWeight","bold","quaternary","ButtonForm","ConfirmDeleteModal","background","clickable","hoverable","pointerEvents","borderGlow","showBorder","isOpen","title","handleClose","dashboard","handleOnClick1","handleOnClick2","button_1_text","button_2_text","contentLabel","onRequestClose","overlay","zIndex","aria-hidden","SideBarButton","history","useHistory","taskEditing","editingTask","processEditing","processesReducer","editingProcess","onLocationEditing","onTaskEditing","tasksActions","onProcessEditing","processesActions","confirmDeleteModal","setConfirmDeleteModal","locationEditing","handleConfirmationModal","pathname","setShowSideBarPage","SideBarContainer","setMode","SET_MODE","setWidth","SET_WIDTH","setOpen","SET_OPEN","SideBarSwitcher","dispatchSetSelectedStation","setSelectedStation","dispatchSetSelectedPosition","setSelectedPosition","dispatchTaskEditing","dispatchProcessEditing","MiRMapEnabled","sidebarReducer","settingsReducer","wrapperRef","useRef","useLocation","page","deselectTask","ul","selected","h3","List","ListItem","isNew","commonCss","ListItemRect","LocationTypeGraphic","svg","ListItemTitle","ListItemIcon","ListItemIconContainer","ErrorContainer","ClearIcon","DeleteForeverIcon","PlusSymbol","PlusButton","BackSymbol","active","hovered","BackButton","setHovered","setActive","containerStyle","onMouseLeave","onMouseDown","onMouseUp","disable","activeStyle","backgroundColor","hoverStyle","SchemaIcon","DeleteButtonIcon","ColorDropdownInnerContainer","DeleteButton","RightContentContainer","TaskName","TransparentTextBox","Textbox","CenterContainer","DashboardEditButton","ContainerCss","ErrorContainerComponent","conditionTextCss","ConditionText","IconContainer","DashboardButton","deviceType","taskID","titleStyle","containerCss","iconColor","iconClassName","dashboard_buttons_style","useOnClickOutside","handler","listener","BounceButton","ContentHeader","onClickAdd","onClickSave","onClickBack","onClickClear","saveEnabled","backEnabled","handleTitle","upperCaseFirstLetterInString","float","StationTypes","warehouse","svgPath","rx","attributes","dashboards","human","PositionTypes","shelf_position","cx","cy","stroke","strokeMiterlimit","strokeWidth","charger_position","cart_position","temporary_cart_position","newPositionTemplate","temp","rotation","uuid","v4","ContentList","executeTask","hideHeader","handleCardView","elements","taskQueueReducer","taskQueue","onPlus","element","broken","LocationTypes","data-name","xmlns","renderLocationTypeIcon","stylel","DefaultTypesContainer","LocationTypeContainer","LocationButtonConatiner","LocationButtonSubtitleContainer","Subtitle","isNotSelected","LocationTypeButton","LocationButton","handleAddLocation","PositionsContainer","LocationTypeLabel","Card","CardContainer","NewPositionCard","ListContainer","PositionListItem","CartIcon","MinusSymbol","MinusButton","Positions","handleSetChildPositionToCartCoords","dispatchSetSelectedStationChildrenCopy","positions","setSelectedStationChildrenCopy","selectedStation","currentMap","selectedPosition","mapReducer","selectedStationChildrenCopy","editingIndex","setEditingIndex","setDeletingIndex","deletingPosition","setDeletingPosition","positionTypes","onDelete","deletePosition","onAddAssociatedPosition","newPositionName","newPosition","addPosition","attr","setStationAttributes","onDeleteAssociatedPosition","positionType","positionName","draggable","flex","positionActions","LocationDefaultAttributes","require","lazy","mapValues","number","Yup","shape","min","max","task","of","matches","days_on","start_time","time_interval","stop_time","reportEventSchema","dashboardSchema","instruction","sound","timeout","nullable","hil","quantity","buttons","signUpSchema","email","password","confirmPassword","oneOf","signInSchema","binsSchema","obj","count","CARD_SCHEMA_MODES","editLotSchema","bins","getCardSchema","availableBinItems","maxCount","moveCount","moveLocation","routeStationSchema","positionSchema","stationSchema","instructions","routeSchema","track_quantity","routesSchema","processSchema","newRoute","locationSchema","stations","selectedLocation","stationNames","locationName","notOneOf","EditLocation","dispatchSetEditingStation","setEditingStation","dispatchPutStation","putStation","dispatchPostStation","postStation","dispatchDeleteStation","deleteStation","dispatchAddPosition","pos","dispatchSetEditingPosition","setEditingPosition","dispatchDeletePosition","dispatchPutPosition","putPosition","dispatchPostPosition","postPosition","dispatchRemovePosition","removePosition","devicesReducer","processes","newName","onSave","copyStation","copyPosition","onBack","save","child","removeStation","onAddLocation","defaultAttributes","newLocation","addStation","handleSetPositionToCartCoords","device_model","devicePosition","updatedSelectedLocation","orientation","initialValues","initialTouched","validateOnMount","validationSchema","setSubmitting","formikProps","submitForm","errors","charCode","keyCode","keys","textStyle","marginTop","marginRight","copyPos","updatedPosition","copyOfCopy","LocationContent","onSetSelectedLocation","onEditLocation","editingLocation","copy","objects","RowContainer","LabelHighlight","HelpText","DirectionText","DualSelectionButton","ADD_TASK_ALERT_TYPE","PAGES","DASHBOARD_BUTTON_COLORS","AddTaskAlertContainer","AddTaskAlertLabel","AddTaskAlertMessage","TaskAddedAlert","alertColor","tasksSortedAlphabetically","tasksCopy","DefaultErrorContainerComponent","SwitchField","rest","fieldValue","fieldName","TimePickerComponent","TimePicker","TimePickerField","TimePickerCss","defaultOpenValue","isString","LoadUnloadFields","fieldParent","dispatchSetSelectedTask","setSelectedTask","selectedTask","sounds","soundsReducer","humanLocation","isMiRTask","isOnlyHumanTask","device_types","DEVICE_CONSTANTS","HUMAN","isMiRandHumanTask","MIR_100","splitVal","moment","set","format","flexWrap","textAlign","showHour","autocomplete","allowEmpty","time","lines","output","paddingBottom","onColor","handoff","textbox","currentValue","setValue","TextboxInput","textboxPosition","TextboxBoundingClientRect","textboxHeight","textboxGap","TextBoxComponent","textboxRenderer","DefaultTextBoxComponent","textboxOpen","TextBoxSearch","onTextboxClose","setValues","renderTextbox","textboxRoot","onTextboxOpen","ReactTextboxSelect","DefaultReactTextboxSelect","textboxHandle","TextboxSearchField","ReactDropdownSelectStyle","errorMessage","usePrevious","TaskField","isTransportTask","isProcessTask","getFieldMeta","onBackClick","onRemove","changed","insertIndex","routeProcesses","getRouteProcesses","isProcessRoute","submitDisabled","dispatchSetEditing","taskActions","selectedProcess","dashboardsReducer","objectsReducer","fixingProcess","needsValidate","setNeedsValidate","didSetHandoff","setDidSetHandoff","previousLoadStationId","previousUnloadStationId","loadName","prevLoadName","unloadName","prevUnloadName","prevName","buildDefaultRouteName","setFixingProcess","needsSubmit","createObject","objectId","modelName","dimensions","objectActions","firstTask","isNextRouteViable","routeBeforeBreak","unloadStationID","dropdownValues","selectedValue","selectedObjId","selectedRouteId","selectedObj","includes","selectedRoute","disbaled","borderRadius","toggleEditing","TaskForm","remainingProps","dispatchSaveFormRoute","formRoute","saveFormRoute","dispatchRemoveTask","taskId","dispatchDeleteRouteClean","onEditing","handleSubmit","handleBackClick","handleDelete","formikHelpers","setTouched","TaskContent","useParams","dispatchAddTask","setShift","setIsNew","addTaskAlert","setAddTaskAlert","dashboardID","getLoadStationDashboard","Id","shiftCallback","objId","prevObj","onExecuteTask","inQueue","isHumanTask","taskQueueActions","onHandlePostTaskQueue","custom","fromSideBar","newTask","generateDefaultRoute","SettingsContainer","SettingsSectionsContainer","SettingsLabel","SettingContainer","ConnectionIcon","ConnectionButton","SectionsContainer","DeviceIcon","styles","ConnectionText","DeviceEdit","deviceLocationDelete","setDeviceType","selectedDevice","device_name","labelStyle","DeviceItemTypes","icon","handleDeviceMapLocation","idle_location","idleLocation","deviceActions","onSetSelectedDevice","maxWidth","sharedDeviceCss","DeviceContainer","isSmall","BatterySvg","BatteryText","BigCircle","DeviceTitle","EditDeviceIcon","StatusContainer","StatusText","DeviceItem","batteryRectWidth","batteryRectRx","deviceID","deviceName","stationId","setStationId","DeviceTypes","station_id","deviceFontSize","primaryColor","deviceStatus","state_text","current_task_queue_id","mission_status","handleDeviceStatus","xmlnsXlink","y1","x2","y2","gradientUnits","offset","stopColor","startGradientColor","stopGradientColor","battery_percentage","deviceBattery","batteryRectFill","batteryRectStroke","batteryTextColor","toFixed","handleDeviceBattery","DevicesContent","dispatchSetSelectedDevice","handleSaveDevice","handleExistingDevices","Button","buttonViewSelectedCss","ButtonView","tiny","mobileL","selectedCss","ButtonGroup","containerProps","buttonViewCss","buttonViewProps","buttonProps","onPress","selectedIndex","selectedIndexes","selectMultiple","buttonCss","innerBorderStyle","lastBorderStyle","buttonStyle","underlayColor","selectedTextStyle","selectedButtonStyle","activeOpacity","setOpacityTo","onHideUnderlay","onShowUnderlay","disabledStyle","disabledTextStyle","disabledSelectedStyle","disabledSelectedTextStyle","buttonsLength","arr","isDisabled","isLast","colors","itemCount","getDebugStyle","TopContainer","buttonGroupContainerCss","DaysContainer","SubTitle","LeftContentContainer","TimeContainerlarge","TimeContainer","TimeTitle","TimeValue","ScheduleListItem","taskName","schedule_on","onSwitchPress","interval_on","themeContext","next_time","useContext","ThemeContext","scheduler","NextExecution","TaskListContainer","ListEmptyContainer","ListEmptyTitle","ListEmptyFiller","titleCssSmall","sz7","ScheduleList","selectedScheduleId","setShowScheduleCreator","setSelectedScheduleId","openSchedule","timeToNextScheduled","setTimeToNextScheduled","timeToNextScheduledTemp","setTimeToNextScheduledHours","setTimeToNextScheduledMinutes","nextScheduleName","setNextScheduleName","setId","handleSwitchPress","scheduleItem","submitItem","fullSchedulesArr","currentTime","Number","startTime","stopTime","intervalTime","ceil","floor","handleNextExecution","stop_time_on","taskIsDeleted","daysOnArr","daysOfTheWeek","renderTasks","quarternary","TextContainer","TextMain","h4","Caption","h5","form","Icon","SmallButton","setAppElement","textMain","caption","onCancelClick","onDeleteClick","memo","timer","hilSuccess","hilFailure","ButtonGroupField","enableErrorTooltip","ButtonViewStyle","button_group_style","disabledMinutes","h","getMinutesFromMoment","m","minutes","hours","FadeLoaderCSS","FieldLabel","ToggleTextLeft","ToggleTextRight","StyledForm","Form","sz8","SelectContainer","ButtonGroupContainer","sharedTimePickerContainerStyle","TimePickerContainer","TimePickerErrorComponent","StyledTimePickerField","SwitchLabel","DatePickerLabel","FormButtonsContainer","CreateScheduleForm","hideScheduleCreator","tasksArr","formMode","day","FORM_MODES","UPDATE","CREATE","validate","startMin","stopMin","selectedScheduleItem","nowDate","Date","nowTimeString","timeString24HrToDate","newScheduleTemplate","setSeconds","setHours","setMinutes","toTimeString","uuidv4","DEFAULT_TASK_ID","getScheduleItemTemplate","getInitialValues","enableReinitialize","isSubmitting","errorCount","touchedCount","accumulator","getTasks","ButtonGroupComponents","use12Hours","autoComplete","autoCorrect","spellCheck","helpers","SchedulerContent","showScheduleCreator","showDeleteModal","setShowDeleteModal","schedulesReducer","handleSelectTask","DefaultErrorTooltipContainerComponent","edited","disabledCss","ListItemField","ErrorTooltipContainerComponent","onIconClick","onEditClick","onTitleClick","unsaved","stylec","InfoText","SectionContainer","showTopBorder","TaskContainer","ProcessField","setFieldError","currError","isEmpty","handlePostTaskQueue","dispatchSetFixingProcess","deleteRouteClean","setEditingTask","showExistingTaskWarning","setShowExistingTaskWarning","valuesRef","func","limit","lastFunc","lastRan","context","arguments","now","apply","throttle","setSelectedProcess","dispatchSetSelectedProcess_Throttled","handleAddTask","remainingRoute","updatedRoutes","fieldMeta","currRouteValue","currProcess","updateExistingRoute","remainingValues","cloneRoute","initialValue","newId","routeClone","match","handleTaskBack","handleDeleteRoute","willBreak","handleExecuteProcessTask","routeName","currProcessName","getChildren","textboxContainerStyle","currIndex","whiteSpace","borderColor","ProcessForm","toggleEditingProcess","dispatchPostProcess","postProcesses","dispatchPutProcess","putProcesses","dispatchSetSelectedProcess","dispatchDeleteProcess","deleteProcesses","handleSave","cleanRoute","mappedRoutes","route","handleBack","withRoutes","handleDeleteWithRoutes","handleDeleteWithoutRoutes","currRouteItem","handleDefaultObj","handleInitialRoutes","resetForm","buttonType","ProcessesContent","dispatchEditing","currentPath","onCardView","newProcess","Settings","onPostSettings","serverSettings","statusReducer","deviceEnabledSetting","maps","serverSettingsState","setServerSettingsState","localSettingsState","setLocalSettingsState","mapSettingsState","setMapSettingsState","mirUpdated","setMirUpdated","devicesEnabled","setDevicesEnabled","handleUpdateLocalSettings","setting","updatedSettings","handleMirConnection","mir","mir_connection","handleSumbitSettings","localChange","isEquivalent","serverChange","mapChange","deviceChange","connectionIcon","connectionText","mir_ip","MirIp","selectedMap","currentMapId","CurrentMap","signOut","authenticated","SignOut","toggleDevOptions","paddingRight","Text","ReloadButton","StyledCalendar","Calendar","CalendarField","startYearVal","start","year","startMonthVal","month","startDayVal","endYearVal","end","endMonthVal","endDayVal","startDate","endDate","selectRange","allowPartialRange","getUTCMonth","getUTCDate","getUTCFullYear","getCardHistory","cardHistory","CARD_HISTORY","ProcessOptionsContainer","ProcessName","ProcessOption","containsSelected","normal","ScrollingButtonField","valueKey","labelKey","currOption","currValue","currLabel","warn","HilInputContainer","HilInput","errorCss","HilInputIcon","NumberField","maxValue","minValue","enteredValue","enteredValueInt","isNaN","CONTENT","FORM_BUTTON_TYPES","SubmitErrorHandler","submitCount","isValid","onSubmitError","lastHandled","setLastHandled","FormComponent","binId","setBinId","processOptions","showProcessSelector","setContent","loaded","onGetCardHistory","currentProcess","cardsReducer","cardHistories","showLotInfo","setShowLotInfo","selectedBinName","processStationIds","availableBins","startDateText","dates","endDateText","buttonGroupNames","buttonGroupIds","currBinId","unshift","getButtonGroupOptions","code","formik","currProcessId","ele","events","currEvent","username","date","$date","jsDate","currentDate","diffTime","abs","modifiedData","route_id","newRouteId","oldRouteId","old","messages","parseMessageFromEvent","currMessage","toLocaleString","renderHistory","destinationOptions","currStation","minHeight","highlight","containerSyle","renderMoveContent","CardEditor","onPostCard","onGetCard","onPutCard","onDeleteCard","setLoaded","handleDeleteClick","selectedBin","remainingBins","handleGetCard","setInterval","clearInterval","selectedProcessId","start_date","end_date","destinationBinId","destinationBin","currentBin","unalteredBins","currentBinCount","destinationBinCount","updatedBins","postResult","Error","CloseButton","CardMenu","params","subpage","StationContainerCss","isCollapsed","StationHeader","HeaderContent","LabelContainer","StationTitle","dragEnter","RotatedRouteName","StationContainer","maxHeight","setCardDragging","lotId","SET","CARD_DRAGGING","Column","stationName","handleCardClick","reduxCards","processCards","setDragEnter","dispatchSetCardDragging","shouldAcceptDrop","sourceContainerOptions","oldProcessId","handleDrop","dropResult","removedIndex","addedIndex","remainingPayload","droppedCard","oldBins","movedBin","remainingOldBins","oldCount","movedCount","onTouchEndCapture","onDrop","DropResult","getGhostParent","body","onDragStart","dragStartParams","onDragEnd","dragEndParams","onDragEnter","onDragLeave","onDropReady","groupName","getChildPayload","padding","object_id","objectName","StationsColumn","setCollapsed","LotQueue","setShowCardEditor","showCardEditor","FinishColumn","CardZone","prevUnloadStationId","lotFilterValue","cardPageReducer","draggedLotInfo","draggingLotId","draggingBinId","tempCardsSorted","tempQueue","tempFinished","matchesFilter","toLowerCase","entries","binEntry","cardsArr","ColumnContainer","Description","ZoneHeader","selectedProcesses","setSelectedProcesses","zone","setLotFilterValue","setSortMode","selectedSortOption","selectedOption","ProcessesContainer","ZoneContainer","SummaryZone","processIndex","processName","Body","CardZoneContainer","MenuButton","InvisibleItem","Cards","onShowCardEditor","selectedCard","setSelectedCard","setTitle","setCurrentProcess","isProcessView","setIsProcessView","showMenu","setShowMenu","offsetLeft","offsetTop","zoneSize","setZoneSize","zoneRef","offsetHeight","offsetWidth","onAfterOpen","marginLeft","initialProcesses","widgetLoaded","WIDGET_LOADED","hoverStationInfo","info","HOVER_STATION_INFO","SideBar","setShowSideBar","onSetOpen","sideBarOpen","sidebarActions","onSetWidth","prevWidth","setPrevWidth","buttonActive","setButtonActive","prevParams","setPrevParams","widgetPageLoaded","widgetReducer","open","boundToWindowSize","newWidth","prevPage","prevSubpage","prevId","handleSideBarOpenCloseButtonClick","dispatchEditingProcess","querySelector","toggle","newSideBarState","handleClickOutside","onDrag","ui","deltaX","handleActiveButton","getReportEvents","postReportEvent","reportEvent","getReportAnalytics","timeSpan","reportEvents","reportEventsObj","current1","report_button_id","REPORT_EVENTS","stationAnalytics","ApiContainer","onGetMaps","onGetStations","getStations","onGetPositions","getPositions","onGetDashboards","getDashboards","onGetObjects","GET_OBJECTS_FAILURE","GET_OBJECTS_SUCCESS","GET_OBJECTS_STARTED","normalizedObjects","onGetTasks","onGetSounds","normalizedSounds","dispatchGetDataStream","handleDevicesSuccess","handleDevicesError","handleStatusSuccess","handleStatusError","handleTaskQueueSuccess","handleTaskQueueError","GET_TASK_QUEUE_FAILURE","INCREMENT_GET_DATA_FAILURE_COUNT","GET_TASK_QUEUE_SUCCESS","dataStream","task_queue","normalizedTaskQueue","taskQueueSchema","onGetProcessCards","onGetCards","onGetProcesses","getProcesses","onGetSchedules","schedulesSchema","schedulesObj","scheduleIds","result","SCHEDULES","onGetDevices","onGetSettings","onGetLocalSettings","GET_LOCAL_SETTINGS_FAILURE","GET_LOCAL_SETTINGS_SUCCESS","GET_LOCAL_SETTINGS_STARTED","onGetLoggers","GET_LOGGERS_FAILURE","GET_LOGGERS_SUCCESS","GET_LOGGERS_STARTED","schedulerReducer","apiReducer","currentPage","setCurrentPage","setApiError","pageDataInterval","setPageDataInterval","criticalDataInterval","setCriticalDataInterval","mapDataInterval","setMapDataInterval","loadInitialData","loadCriticalData","loadMapData","containsMirCart","currDevice","updateCurrentPage","currentPageRouter","setDataInterval","pageParams","pageName","data1","data2","sidebar","widgetPage","loadObjectsData","loadSchedulerData","loadDashboardsData","loadTasksData","loadSettingsData","loadCardsData","loadMoreData","onLoad","getTaskQueue","apiLoaded","NotificationsContainer","overlaping","windowHeight","ClearText","NewNotificationContainer","warning","okay","selectable","notSelectedCss","Status","BasicListItem","leftContentContainerCss","leftContentContainerProps","leftContent","rightContentContainerCss","rightContentContainerProps","rightContent","contentContainerCss","contentContainerProps","titleCss","titleProps","StyledRemoveIcon","RemoveIcon","Spacer","ItemDiv","activeContainerStyle","hoverContainerStyle","focusContainerStyle","disabledContainerStyle","isHovering","isActive","IconButton","TaskQueueListItem","selectedTaskId","setIsSelected","deleteTaskQueueItem","statusApi","handleMouseEnter","handleMouseLeave","TaskQueueMenu","taskQueueClone","queueItem","queueItemClone","clone_object","device_type","NotificationContainer","NotificationHeader","NotificationTypeText","NotificationDateTime","NotificationBody","NotificationLabel","NotificationMessage","sz6","Notification","dateTimeFormatter","dayDelta","timeDay","notification","dateTime","timeFormat","handleType","Notifications","notifications","notificationsReducer","RightMenu","showRightMenu","newNotification","overlapStatus","hiddenNotifications","toggleNotificationTaskQueue","handleClear","deleteTaskQueueAll","handleNewNotification","StatusHeader","Logo","windowWidth","widthBreakPoint","LogoIcon","LogoSubtitle","PlayButton","play","good","PlayButtonIcon","NotificationIcon","RightMenuContainer","NotificationText","setNewNotification","displayType","sideBarWidth","isSideBarOpen","taskQueueOpen","statusBarPath","setStatusBarPath","rightCurvePoint","setRightCurvePoint","setOverlapStatus","prevNotificationRef","onTaskQueueOpen","generatePath","mergeHeight","pageWidth","leftMargin","rightMargin","handleNotifications","types","onHideNotifications","handleTogglePlayPause","status_clone","pause_status","useMemo","right","preserveAspectRatio","backdropFilter","playButtonClassName","renderRightContent","LoggerContainer","disableAll","trace","redux_logger","enableAll","updateLoggers","existingLoggerNames","level","enabled","getLevel","checkForLoggers","reduxLoggerNames","newLoggers","newLogger","addLoggers","loggersCopy","removeLogger","loggerNames","constructor","snapshot","currentReduxLoggerNames","prevReduxLoggerNames","arraysEqual","connect","POST_LOGGERS_FAILURE","POST_LOGGERS_SUCCESS","POST_LOGGERS_STARTED","MapContainer","MapGroup","MapImage","img","tall","TaskPaths","selectedTaskReducer","stateRef","loadPositionId","getLoadPositionId","unloadPositionId","getUnloadPositionId","mousePos","x1","setX1","setY1","setX2","setY2","clientX","clientY","lockToMouse","setTaskAttributes","exitTaskPath","startPos","endPos","lineLen","sqrt","pow","lineRot","atan2","arrowRot","PI","dashes","secondaryColor","dashColor","stdDeviation","in","strokeLinecap","delta","cos","sin","points","ProcessPaths","MiR100","imgResolution","MenuContainer","RightClickMenu","coords","buttonClicked","dispatchShowSideBar","disbaleStation","onSendCartToPosition","tempSelectedPosition","onAddStation","tempSelectedStation","TaskStatisticsContainer","yPosition","xPosition","TaskNameText","TaskNameContainer","TaskText","TaskIcon","TaskStatistics","onGetTasksAnalysis","GET_","TASKS","ANALYSIS","_FAILURE","tasksAnalysis","_SUCCESS","_STARTED","taskAnalysis","taskAnalysisReducer","handleSingleTask","selectedTaskAnalysis","midX","midY","numerator","denominator","atan","avg_run_time","successes","failures","showWidgetPage","WidgetPageContainer","sz1","LotsTitle","AssignmentOutlinedIcon","LotItem","AddButton","AddContainer","DashboardContainer","pageStyle","DashboardList","AddButtonContainer","NewDashboard","AddDashboardContainer","AddDashboardButtonText","NoGoals","TaskButton","li","DashboardSidebarButton","onTaskClick","Dashboard","deleted","HILTimer","editingclicked","setSelectedDashboard","openDashboard","useDrop","accept","drop","monitor","hover","isOver","shallow","dropRef","listRef","scrollTo","onDragOver","itemsRenderer","items","withRouter","showTitle","showBackButton","showEditButton","showSaveButton","setEditingDashboard","showSidebar","setShowSidebar","saveDisabled","stationID","mobileMode","renderLotsTitle","hasLot","order","DashboardsList","dashboardToDelete","setDashboardToDelete","handleNew","newDashDropRef","dashboardOpen","onPutDashboard","dashboardActions","onPutStation","stationActions","selectedDashboardType","dashboardsArray","targetDashboard","targetDashboardCopy","exists","newDash","then","postedDashboard","stationDashboards","minSize","currDashboard","ButtonContainerCss","FooterContainer","CloseOutlinedIcon","WidgetText","labelSize","WidgetIcon","WidgetButton","OPERATION_TYPES","REPORT","KICK_OFF","FINISH","TYPES","ROUTES","iconName","OPERATIONS","DashboardsSidebar","dashboardId","testSize","setSmall","setType","code409","kickOffEnabledInfo","kickOffEnabledDashboards","kickOffEnabled","finishEnabledProcesses","finishEnabledDashboards","finsihedEnabled","handleTaskClick","clickedTask","postTaskQueue","handleReportClick","availableTasks","handleAvailableTasks","availableButtons","availableReportButtons","currEntry","currKey","toLocaleLowerCase","ButtonStyle","RobotButton","HumanButton","DashboardSplitButton","DashboardButtonList","addedTaskAlert","currentButton","deviceTypes","taskExists","handleRouteClick","associatedTaskIdArg","custom_task","String","main","lineHeight","ExpandContainer","showTaskQ","ExpandIcon","ExpandSVG","ExpandPath","TaskQContatiner","DashboardTaskQueue","setShowTaskQ","ArrowBackIosIcon","hoverHighlightPer","ColorPicker","StyledTwitterPicker","ColorButton","DropdownMenu","ColorOption","ColorField","onChangeComplete","currColor","triangle","data-toggle","aria-haspopup","aria-labelledby","TextboxDiv","ReportButtonsContainer","AddNewButtonContainer","ColorFieldContainer","DefaultViewComponent","DeleteFieldButton","ViewComponent","viewProps","NewButtonForm","cancel","buttonId","report_buttons","dashboardCopy","putDashboard","editingButton","currButton","old_report_buttons","updatedDashboard","alignSelf","readonly","ReportModal","onPostReportEvent","createdReportEvent","REPORT_EVENT","noButtons","addingNew","setAddingNew","setEditing","sending","setSending","setButtonId","sendReport","reportEventsReducer","dashboard_id","getTime","currReportButton","currOldButton","HeaderMainContentContainer","ButtonsContainer","NoButtonsText","isButtons","buttonsCss","noButtonsCss","KickOffModal","useTheme","shouldFocusLotFilter","setShouldFocusLotFilter","showLotEditor","setShowLotEditor","didLoadData","setDidLoadData","availableKickOffCards","setAvailableKickOffCards","onButtonClick","cardName","cardProcess","firstRouteId","firstRoute","loadStation","firstStationBin","queueBin","queueBinCount","firstStationCount","updatedCard","requestSuccessStatus","loadData","cardsResult","processesResult","tempAvailableCards","currProcessCards","filteredCards","currCard","concat","currLot","cardIndex","FinishModal","finishEnabledDashboard","currentStationBin","finishBin","currentStationBinCount","DashboardScreen","currentDashboard","hilResponse","reportModal","setReportModal","onDashboardOpen","bol","onHILResponse","onPutTaskQueue","putTaskQueue","handleHilSuccess","toUpperCase","handleOperationClick","newItem","hil_response","success","hil_station_id","hil_message","handleDashboardButtons","DashboardRouteField","buttonFieldStyles","DashboardReportField","DashboardEditorButtonRenderer","SortableContainer","PageContainer","AddBoxIcon","DashboardEditor","onDeleteDashboard","deleteDashboard","onPostDashboard","postDashboard","initialButtons","initialErrors","buttonErrors","buttonError","getInitialErrors","every","handleDeleteDashboard","stationCopy","deleteDashboardIndex","indexOf","buttonsCopy","shiftedButtonsCopy","arrayMove","randomHash","handleChangeButton","buttonIndex","handleDeleteButton","dispatchSetDashboardKickOffProcesses","setDashboardKickOffProcesses","dispatchSetDashboardFinishProcesses","finishEnabled","setDashboardFinishProcesses","selectedDashboard","editingDashboard","sidebarWidth","setSidebarWidth","firstStationProcesses","lastStationProcesses","lastRouteId","lastRoute","dashID","DndProvider","backend","HTML5Backend","flexGrow","onCancelClicked","goBack","LeftColumn","RightColumn","ColumnLabel","ObjectContainer","ObjectName","ObjectLink","styleO","objectLinks","rect","getElementById","ObjectColumns","parsedObjects","setObjectLinks","link","setLink","locationsReducer","handleObjectLinkPoints","point","editedLink","currentObject","currentObjectName","el","ObjectsPage","setParsedObjects","handleAssociatedObjects","parsedObjectsReturned","handleParseTaskBasedOnLoadUnload","StatisticsContainer","OverviewContainer","StationName","PlotsContainer","laptopL","PlotHeader","SinglePlotContainer","PlotContainer","NoDataText","DateSelectorIcon","PlotTitle","DateSelectorTitle","LoadingIcon","TimespanButton","thcolor","TimeSpans","setTimeSpan","BarChart","selector","axisBottom","mainTheme","axisLeft","layout","horizontal","enableGridX","enableGridY","fontFamily","textColor","axis","domain","line","ticks","legend","grid","legends","labels","markers","lineColor","lineStrokeWidth","dots","tooltip","basic","table","tableCell","crosshair","strokeOpacity","strokeDasharray","annotations","outlineWidth","outlineColor","outline","symbol","indexBy","animate","scheme","colorBy","from","axisTop","axisRight","tickSize","legendOffset","tickRotation","legendPosition","StatisticsOverview","setDelayChartRender","throughputData","setThroughputData","reportData","setReportData","dateIndex","setDateIndex","setFormat","setSlice","isThroughputLoading","setIsThroughputLoading","setIsReportsLoading","setIsDevice","setLocationName","reportButtons","setReportButtons","currReportButtons","taktTime","pYield","throughPut","device_id","timespan","getStationAnalytics","getReportData","reportAnalyticsResponse","handleTimeSpan","newTimeSpan","newDateIndex","dataPromise","renderDateSelector","today","toDateString","firstDate","getDateFromString","lastDate","getMonth","getFullYear","date_title","pc","filteredData","isData","enable","renderThroughputChart","reportButtonsArr","reportButtonNames","reports","currReport","lable","currReportEntries","updatedReport","currButtonId","renderReportChart","StatisticsPage","TasksPage","ConnectContainer","DeviceName","LiveText","TitleContainer","VideoContainer","video","PlayerWrapper","loaderCss","ErrorText","StreamContainer","myPeerId","streams","getVideoElement","vidEle","srcObject","oldStream","getTracks","track","stop","interval","getVideoPlaybackQuality","droppedVideoFrames","videoElement","pause","src","resetVideo","autoPlay","playsInline","muted","StreamInfo","outID","peerID","RTCSessionDescription","RTCIceCandidate","default_rtc_configuration","iceServers","urls","iceCandidatePoolSize","asdasdsa","our_id","TestButtons","onStartClick","onCloseClick","ws_port","getOurId","random","client","ws_url","ViewerPage","streamConnected","setError","setStatus","setStreams","setIsConnected","showStreamInfo","setShowStreamInfo","showTestButtons","setShowTestButtons","startConnection","closeConnection","URL","peer_id","rtc_config","peer_connection","roomReconnectInterval","peerReconnectInterval","helloInterval","isConnected","reconnectOnClose","messageListeners","stateChangeListeners","remoteTrackListeners","errorListeners","statusListeners","rtc_configuration","WebSocket","onopen","setHelloInterval","call","onmessage","msg","clearHelloInterval","setRoomReconnectInterval","clearRoomReconnectInterval","startsWith","setPeerReconnectInterval","splitted","createCall","generateOffer","SyntaxError","sdp","onIncomingSDP","ice","onIncomingICE","reconnectToPeer","onerror","onclose","closePeerConnection","clearPeerReconnectInterval","RTCPeerConnection","ondatachannel","onDataChannel","ontrack","onRemoteTrack","onicecandidateerror","errorCode","onremovestream","onsignalingstatechange","signalingState","onicegatheringstatechange","iceGatheringState","oniceconnectionstatechange","iceConnectionState","onconnectionstatechange","connectionState","onicecandidate","candidate","send","to","setRemoteDescription","createAnswer","onLocalDescription","catch","desc","setLocalDescription","localDescription","createOffer","addIceCandidate","identity","peerIdentity","handleDataChannelOpen","handleDataChannelMessageReceived","textarea","send_channel","handleDataChannelError","handleDataChannelClose","receiveChannel","channel","restartIce","addMessageListener","removeMessageListener","l","onStateChange","getClient","addRemoteTrackListener","addErrorListener","addStatusListener","getError","reconnectingWebRTCSocket","LotsContainer","ListSubtitle","ListContent","SubtitleContainer","ColumnContainer1","ColumnContainer2","LotsPage","lotsPresent","setLotsPresent","onShowSideBar","locationID","onWidgetPageLoaded","WIDGET_PAGE_LOADED","component","DashboardsPage","WidgetButtonButton","pageID","WidgetButtonText","WidgetButtonIcon","coordinateMove","dispatchHandlePostTaskQueue","dispatchWidgetLoaded","dispatchHoverStationInfo","dispatchDashboardOpen","onCartButtonClick","coordinate","onDashboardClick","defaultDashboard","handleOnClick","WidgetLocationContainer","WidgetContainer","WidgetStationName","WidgetPositionName","WidgetHoverArea","hoverScale","WidgetButtonContainer","WidgetBlurContainer","WidgetStatisticsBlock","EditIcon","WidgetStatisticsContainer","WidgetStatisticsIcon","WidgetStatisticsText","Widgets","hoveringInfo","onWidgetClose","edit","onClickLocation","locationChildren","handleWidgetButtons","widgetPages","handleWidgetPosition","coord","elementHeight","elementWidth","widgetPosition","realScale","foreignObject","handleWidgetHoverCoord","rd3tClassName","widgetInfo","heightWidth","bBox","WorkstationGroup","LocationSvg","hovering","rotating","shouldGlow","handleMouseDown","handleTranslating","handleRotating","locationTypes","operator","radius","floodColor","in2","DragEntityProto","handleRotate","handleTranslate","handleDisableDrag","handleEnableDrag","handleTranslateEnd","setRotating","translating","setTranslating","bindDragListener","rotateStart","originalRotation","deltaRotation","translateStart","originalTranslation","deltaTranslation","ringElement","rectElement","drag","on","angle","sourceEvent","touches","rotate","translation","Station","setHovering","dispatchSetStationAttributes","dispatchSetTaskAttributes","routeStart","getRouteStart","routeEnd","getRouteEnd","isStationUnloadStation","isStationLoadStation","isStationInRoutes","routeAfterBreak","routeIndex","getRouteIndexInRoutes","handleWidgetHover","onSetStationTask","Position","positionId","dispatchSetPositionAttributes","setPositionAttributes","hoverLocationID","isPositionAtUnloadStation","isPositionInRoutes","isPositionAtLoadStation","shapeRendering","renderParentLine","onSetPositionTask","MapView","checkForMapLoad","defaultMap","dispatchSetCurrentMap","refreshMap","dispatchGetMap","guid","openLocation","dragNewEntity","mouseDown","draggingChild","validateNewEntity","newChildEntity","bindZoomListener","scaleExtent","resolution","rd3tSvgClassName","rd3tMapClassName","zoom","lastEvent","updatedSelectedStation","dispatchUpdateStations","updatedSelectedPosition","updatedChildrenPositions","dispatchUpdatePositions","dispatchUpdateDevices","initialRender","unbindZoomListener","onDisableDrag","onEnableDrag","onWidgetDisableDrag","widgetDraggable","onWidgetEnableDrag","calculateD3Geometry","mapContainer","mapImage","cHeight","cWidth","iHeight","iWidth","iNatHeight","naturalImageDimensions","iNatWidth","actualDims","handleRightClickMenu","showRightClickMenu","rd3tLocClassName","rd3tStationClassName","rd3tPosClassName","naturalScale","boundingClientHeight","heigh","validateNewLocation","onMouseMove","mc","onContextMenu","onMouseOver","mi","naturalHeight","naturalWidth","zoomable","updateStations","childrenPositions","updatePositions","HILModal","onSetHilTimers","timers","onSetActiveHilDashboards","taskQueueItemClicked","hilTimers","activeHilDashboards","localHumanTask","statusTimerIntervals","setStatusTimerIntervals","deviceDashboard","handleHilsInTaskQueue","hilType","hilMessage","taskQuantity","taskQueueID","handleHILTimers","hil_start_time","biasedTimer","hil_timeout","timerInterval","LogoContainer","LogoWelcome","SignInUpContainer","CheckBoxWrapper","CheckBoxLabel","CheckBox","SignInUpPage","signIn","setEmail","setPassword","setConfirmPassword","userPool","CognitoUserPool","UserPoolId","ClientId","authenticationData","Username","Password","authenticationDetails","AuthenticationDetails","userData","Pool","cognitoUser","CognitoUser","authenticateUser","accessToken","refreshToken","getRefreshToken","getToken","onFailure","signUp","alert","Authentication","authenticationReducer","cognitoUserSession","setSignIn","AmazonCognitoIdentity","getCurrentUser","getSession","session","handleInitialLoad","ListScrollContainer","stylesh","LocationList","onLocationClick","locationsArr","devicesArr","dashboardsArr","SCREENS","LOCATIONS","SETTINGS","DASHBOARDS","ListView","onPostStatus","showDashboards","setShowDashboards","showSettings","setShowSettings","CURRENT_SCREEN","owner","next_position","distance_to_next_target","App","getFailureCount","setApiLoaded","stateTheme","showStopAPIModal","setShowStopAPIModal","styleMode","apiMode","logMode","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","rootElement","render","href","origin","fetch","contentType","get","ready","unregister","checkValidServiceWorker","glow","errorGlow","newGlow","goodGlow","nonary","denary","radioButton","inactive","basicButton","mobileS","mobileM","laptop","desktop","desktopL","tree","mg","goal","alternate","all","lots","kick_off","finish","ok","operations","report","delete","funky","EVENT_NAMES","eventName","msgs","newVal","oldVal","convertCardDate","cardDate","itemA","itemB","countA","countB","endDateA","convertedA","endDateB","convertedB","startDateA","startDateB","DefaultFieldContentContainer","DefaultFieldDropdownContainer","DropDownSearchField","FieldContentContainer","FieldDropdownContainer","updatingValue","setUpdatingValue","storeState","defaultTask","nameA","nameB","containsHuman","containsNonHuman","currType","hasStart","hasEnd","processRouteIds","containsStation","SET_ACTION","WIDGET_XY_COORDINATES","deleteDashboards","postDashboards","putDashboards","Row","CardName","Count","HeaderBar","StyledDraggable","Draggable","DatesContainer","DateItem","DateArrow","DateText","lotName","lotColor","substring","intToRGB","str","hash","charCodeAt","hashCode","subscribe","HilContainer","HilInputIconContainer","HilInputIconText","HilButtonContainer","LotSelectorContainer","NoLotsContainer","NoLotsText","HilMessage","HilSubtitleMessage","HilSubText","iconButtonCss","HilTimer","HilButtonCss","HeaderMainContent","HilIcon","HilButton","FooterButton","LotTitleDescription","SelectedLotContainer","SelectedLotName","LotTitleName","EditLotIcon","HilButtonText","HilButtonQuantityText","taskQueueItem","putTaskQueueItem","SET_CONDITIONS_API","SET_SCHEDULES_API","SET_STATUS_API","SET_TASK_QUEUE_API","SET_TASKS_API","POST_","DELETE_","PUT_","changedSet","setChanged","setInitialValue","TASK","GET_TASKS","GET_TASKS_STARTED","GET_TASKS_SUCCESS","GET_TASKS_FAILURE","POST_TASK","POST_TASK_STARTED","POST_TASK_SUCCESS","POST_TASK_FAILURE","PUT_TASK","PUT_TASK_STARTED","PUT_TASK_SUCCESS","PUT_TASK_FAILURE","DELETE_TASK","DELETE_TASK_STARTED","DELETE_TASK_SUCCESS","DELETE_TASK_FAILURE","ADD_TASK","SET_TASKS","UPDATE_TASK","UPDATE_TASKS","REMOVE_TASK","REMOVE_TASKS","SET_TASK_ATTRIBUTES","SELECT_TASK","SET_SELECTED_TASK","DESELECT_TASK","EDITING_TASK","COLUMN_HOVERING","SET_SIZE","ROUTE_TYPES","PUSH","PULL","HILModals","dispatchGetCards","dispatchTaskQueueItemClicked","disptachHILResponse","disptachPutTaskQueue","dispatchSetActiveHilDashboards","dispatchLocalHumanTask","setQuantity","associatedTask","setAssociatedTask","trackQuantity","setTrackQuantity","selectedLot","setSelectedLot","setIsProcessTask","availableLots","setAvailableLots","showLotSelector","setShowLotSelector","didDisplayLots","setDidDisplayLots","didSelectInitialLot","setDidSelectInitialLot","hilLoadUnload","setHilLoadUnload","dataLoaded","setDataLoaded","changeQtyMouseHold","setChangeQtyMouseHold","lotsAtStation","setLotsAtStation","taskHasProcess","setTaskHasProcess","noLotsSelected","setNoLotsSelected","dashboardName","currentTask","selectedLotName","selectedLotId","taskProcesses","stationCards","currCardProcessId","associated_task","onHilSuccess","fraction","lot_id","onHilPostpone","onBlurQuantityInput","onHilFailure","onLogHumanEvent","outgoing","eventQuantity","renderSelectedLot","renderUnloadOptions","renderFractionOptions","fractionOptions","fractionDecimals","decimal","cbrt","eval","renderQuantityOptions","renderLotSelector","currLotName","lotIndex","postTask","deleteTask","putTask","normalizedTasks","updateTask","taskCopy","dashboardsActions","putRouteClean","postRouteClean","addTask","removeTask","selectTask","buttonTheme","friday","monday","saturday","sunday","thursday","tuesday","wednesday","GET_STATIONS_FAILURE","GET_STATIONS_SUCCESS","GET_STATIONS_STARTED","normalizedStations","POST_STATION_FAILURE","POST_STATION_SUCCESS","POST_STATION_STARTED","onPostStation","newStation","PUT_STATION_FAILURE","PUT_STATION_SUCCESS","PUT_STATION_STARTED","onSaveChildren","updateStation","putStationWithoutSavingChildren","DELETE_STATION_FAILURE","DELETE_STATION_SUCCESS","DELETE_STATION_STARTED","onDeleteStation","ADD_STATION","UPDATE_STATIONS","onRemoveStation","updatedId","REMOVE_STATION","SET_STATION_ATTRIBUTES","SET_SELECTED_STATION","EDITING_STATION","stationsState","tasksState","relevantTask","positionsState","LOT","LOTS","DATA_PAGE","JUNK","DASHBOARD","GET_POSITIONS_FAILURE","GET_POSITIONS_SUCCESS","GET_POSITIONS_STARTED","normalizedPositions","POST_POSITION_FAILURE","POST_POSITION_SUCCESS","POST_POSITION_STARTED","postedPosition","PUT_POSITION_FAILURE","PUT_POSITION_SUCCESS","PUT_POSITION_STARTED","positionCopy","updatePosition","stationDelete","DELETE_POSITION_FAILURE","DELETE_POSITION_SUCCESS","DELETE_POSITION_STARTED","onDeletePosition","ADD_POSITION","UPDATE_POSITIONS","REMOVE_POSITION","SET_POSITION_ATTRIBUTES","SET_SELECTED_POSITION","EDITING_POSITION","SET_SELECTED_STATION_CHILDREN_COPY","devicesState","positionIndex","newChildIndex","newChildInd","reverse","relevantDevice","isBrowser","rowCss","NameContainer","FieldTitle","TheBody","ProcessFieldContainer","ObjectInfoContainer","ObjectTitleContainer","CountInput","ObjectLabel","QuantityErrorContainerComponent","ButtonContainer","ContentTitle","CalendarContainer","HistoryBodyContainer","HistoryItemContainer","textCommon","historyContainerCommon","HistoryDateContainer","HistoryDateText","HistoryUserContainer","HistoryUserText","HistoryInfoContainer","HistoryInfoText","TextboxContainer","TextboxLabel","TextboxArea","inputAreaComponent","inputComponent","keepFocus","rows","autofocus","defaultState","GET_LOGGERS","pending","POST_LOGGERS","GET_LOCAL_SETTINGS","POST_LOCAL_SETTINGS","GET_DASHBOARDS_FAILURE","GET_DASHBOARDS_SUCCESS","GET_DASHBOARDS_STARTED","normalizedDashboards","POST_DASHBOARD_FAILURE","POST_DASHBOARD_SUCCESS","POST_DASHBOARD_STARTED","newDashboard","PUT_DASHBOARD_FAILURE","PUT_DASHBOARD_SUCCESS","PUT_DASHBOARD_STARTED","updateDashboard","DELETE_DASHBOARD_FAILURE","DELETE_DASHBOARD_SUCCESS","DELETE_DASHBOARD_STARTED","removeRouteFromAllDashboards","currButtons","addRouteToDashboards","routeType","newDashboardButton","removeRouteFromWrongDashboards","currDashboardButtons","currDashboardIdObj","currStationId","currDashboardId","filteredButtons","currButtonIndex","DASHBOARD_OPEN","KICK_OFF_ENABLED","FINISH_ENABLED","STARTED","SUCCESS","FAILURE","GET_OBJECTS","POST_OBJECT","PUT_OBJECT","PUT_OBJECT_STARTED","PUT_OBJECT_SUCCESS","PUT_OBJECT_FAILURE","DELETE_OBJECT","DELETE_OBJECT_STARTED","DELETE_OBJECT_SUCCESS","DELETE_OBJECT_FAILURE","ADD_OBJECT","UPDATE_OBJECT","UPDATE_OBJECTS","REMOVE_OBJECT","SET_OBJECT_ATTRIBUTES","SELECT_OBJECT","DESELECT_OBJECT","UPDATE_STATION","UPDATE_POSITION","REVERT_CHILDREN","selectedObject","objectsCopy","conditionsApi","schedulesApi","dashboardsApi","skillsApi","dashboardButtonsApi","taskQueueApi","tasksApi","GET_TASK_QUEUE_STARTED","POST_TASK_QUEUE_STARTED","POST_TASK_QUEUE_SUCCESS","POST_TASK_QUEUE_FAILURE","PUT_TASK_QUEUE_STARTED","PUT_TASK_QUEUE_SUCCESS","PUT_TASK_QUEUE_FAILURE","TASK_QUEUE","TASK_QUEUE_ALL","TASK_QUEUE_ITEM","TASK_QUEUE_OPEN","HILSuccess","skills","currentSkill","skillUpdated","allFieldsFilled","positionsCopy","onUpdatePosition","parsedPositions","hilTimer","fromCharCode","focused","showKeyboard","Dashboards","Scheduler","Tasks","Objects","ModelViewer","Api","ReduxLogger","All","enableLogger","muteReducer","apiSim","models","skillTemplates","returnedSkillTemplates","poses","getActionName","actionType","join","requestStatusReducer","endsWith","reduxZoom","widgetXYCoordinates","devicesClone","currentDevice","setDevices","updatedDevice","GET_DEVICES","POST_DEVICES","POST_DEVICES_SUCCESS","POST_DEVICES_FAILURE","POST_DEVICES_STARTED","PUT_DEVICES","DELETE_DEVICES","DELETE_DEVICES_SUCCESS","DELETE_DEVICES_FAILURE","DELETE_DEVICES_STARTED","priority","newPayload","eventsReducer","eventsClone","currentEvent","GET_EVENTS","GET_EVENTS_SUCCESS","GET_EVENTS_FAILURE","GET_EVENTS_STARTED","POST_EVENTS","POST_EVENTS_SUCCESS","POST_EVENTS_FAILURE","POST_EVENTS_STARTED","PUT_EVENTS","PUT_EVENTS_SUCCESS","PUT_EVENTS_FAILURE","PUT_EVENTS_STARTED","DELETE_EVENTS","DELETE_EVENTS_SUCCESS","DELETE_EVENTS_FAILURE","DELETE_EVENTS_STARTED","processesClone","GET_PROCESSES","GET_PROCESSES_SUCCESS","GET_PROCESSES_FAILURE","GET_PROCESSES_STARTED","POST_PROCESSES","POST_PROCESSES_SUCCESS","POST_PROCESSES_FAILURE","POST_PROCESSES_STARTED","PUT_PROCESSES","PUT_PROCESSES_SUCCESS","PUT_PROCESSES_FAILURE","PUT_PROCESSES_STARTED","DELETE_PROCESSES","DELETE_PROCESSES_SUCCESS","DELETE_PROCESSES_FAILURE","DELETE_PROCESSES_STARTED","EDITING_PROCESS","isCardDragging","isHoveringOverColumn","sizes","combineReducers","created","updatedReportEvent","remaining","unchangedProcessGroups","card_id","lotsReducer","lot","oldScheduleId","skillsReducer","skillsClone","s","skillId","stationsCopy","onUpdateStation","updatedStation","parsedStations","hello","dashboardsCopy","GET_DASHBOARDS","POST_DASHBOARD","PUT_DASHBOARD","DELETE_DASHBOARD","errorReducer","exec","requestName","requestState","createdTaskQueueItem","updatedTaskQ","forceUpdate","keyboardReducer","remainingTasks","ids","currId","modelsReducer","skillTemplatesReducer","posesReducer","currentMapCopy","reduxLogger","log_module","createLogger","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","traceLimit","compose","applyMiddleware","thunk","createStore","reducers","normalizedProcesses","newProcesses","updateProcesses","removeRouteFromAllProcesses","defaultWidgetPages","generic","trident","arm","cart","rmVision","shelf","parsedTasks","prop","hasOwnProperty","array","timeString","newDate","setTime","_arr1","_arr2","arr1","arr2","aProps","getOwnPropertyNames","bProps","propName","characters","charactersLength","charAt","word","substr","dateStr","Portal","mountElement","mount","WarningIcon","StyledInput","ErrorTooltip","setAutoFocus","timer1","delayShow","eventOff","data-tip","data-for","0","1","2","3","4","5","6","normalizedData","oldTaskQueueItemId","postToQueue"],"mappings":"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","file":"static/js/main.968dd0a2.chunk.js","sourcesContent":["import { normalize } from 'normalizr';\n\n// import types\nimport {\n    GET,\n    POST,\n    DELETE,\n    PUT\n} from '../types/prefixes';\n\nimport {\n    CARDS,\n    CARD,\n    CARD_HISTORY,\n    PROCESS_CARDS,\n    SHOW_EDITOR\n} from '../types/data_types';\n\nimport { api_action } from './index';\nimport * as api from '../../api/cards_api'\n\n// import schema\nimport { scheduleSchema, schedulesSchema } from '../../normalizr/schedules_schema';\n\nimport log from \"../../logger\"\nimport {convertArrayToObject} from \"../../methods/utils/utils\";\n\nconst logger = log.getLogger(\"Cards\", \"Redux\")\nlogger.setLevel(\"debug\")\n// get\n// ******************************\nexport const getCard = (cardId) =>  async (dispatch) => {\n\n    /*\n        Invoked in api_action()\n        Whatever is returned from this function is the payload\n        that will be dispatched to redux (if successful)\n    */\n    const callback = async () => {\n\n        // make request\n        const card = await api.getCard(cardId);\n\n        // const cardsObj = convertArrayToObject(cards, \"_id\")\n        // console.log(\"getCard cardsObj\",cardsObj)\n\n        // format response\n        // const normalizedSchedules = normalize(schedules, schedulesSchema);\n\n        // return payload for redux\n        return {\n            card,\n        };\n    }\n\n    const actionName = GET + CARD;\n\n    // payload is returned back\n    const payload = await api_action(actionName, callback, dispatch, cardId);\n\n    return payload;\n\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// get\n// ******************************\nexport const getCards = () =>  async (dispatch) => {\n\n    /*\n        Invoked in api_action()\n        Whatever is returned from this function is the payload\n        that will be dispatched to redux (if successful)\n    */\n    const callback = async () => {\n\n        // make request\n        const cards = await api.getCards();\n\n        const cardsObj = convertArrayToObject(cards, \"_id\")\n\n        // format response\n        // const normalizedSchedules = normalize(schedules, schedulesSchema);\n\n        // return payload for redux\n        return {\n            cards: cardsObj,\n        };\n    }\n\n    const actionName = GET + CARDS;\n\n    // payload is returned back\n    const payload = await api_action(actionName, callback, dispatch);\n\n    return payload;\n\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// get\n// ******************************\nexport const getProcessCards = (processId) =>  async (dispatch) => {\n\n    /*\n        Invoked in api_action()\n        Whatever is returned from this function is the payload\n        that will be dispatched to redux (if successful)\n    */\n    const callback = async () => {\n\n        // make request\n        const cards = await api.getProcessCards(processId);\n\n        const cardsObj = convertArrayToObject(cards, \"_id\")\n\n        // return payload for redux\n        return {\n            cards: cardsObj,\n            processId\n        };\n    }\n\n    const actionName = GET + PROCESS_CARDS;\n\n    // payload is returned back\n    const payload = await api_action(actionName, callback, dispatch);\n\n    return payload;\n\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n\n// create\n// ******************************\nexport const postCard = (card) =>  async dispatch => {\n\n    const callback = async () => {\n        const createdCard = await api.postCard(card);\n        // const normalizedSchedules = normalize(createdSchedule, scheduleSchema);\n\n        return {\n            card: createdCard,\n            processId: card.process_id\n        };\n    }\n    //\n    const actionName = POST + CARD;\n\n    const payload = await api_action(actionName, callback, dispatch, card);\n\n    return payload.card\n    // return Object.values(payload.createdCards)[0];\n\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// delete\n// ******************************\nexport const deleteCard = (cardId, processId) => async (dispatch) => {\n\n    const callback = async () => {\n        await api.deleteCard(cardId);\n\n        return {\n            cardId,\n            processId\n        };\n    }\n    //\n    const actionName = DELETE + CARD;\n    const payload = await api_action(actionName, callback, dispatch, cardId);\n    return payload;\n\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// update\n// ******************************\nexport const putCard = (card, cardID) => async dispatch => {\n\n    const callback = async () => {\n        const response = await api.putCard(card, cardID);\n        // const normalizedSchedule = normalize(response, scheduleSchema);\n        //\n        return {\n            card: response,\n            processId: card.process_id\n        };\n    }\n\n    const actionName = PUT + CARD;\n    const payload = await api_action(actionName, callback, dispatch, { card});\n    return card;\n};\n\nexport const showEditor = (bool) => {\n    return { type: SHOW_EDITOR, payload: bool }\n}\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n","export const convertD3ToReal = ([x, y], d3) => {\n\n    const pos_x = d3.mapResolution * (x - d3.translate[0]) / d3.scale\n    const pos_y = d3.mapResolution * -(((y - d3.translate[1]) / d3.scale) - d3.naturalDims.height)\n\n    return [pos_x, pos_y]\n}\n\nexport const convertRealToD3 = ([pos_x, pos_y], d3) => {\n\n    const x = d3.translate[0] + d3.scale * pos_x / (d3.mapResolution)\n    const y = d3.translate[1] + d3.scale * (d3.naturalDims.height - (pos_y / d3.mapResolution))\n\n    return [x, y]\n}\n","import styled from 'styled-components';\nimport TimePicker from 'rc-time-picker';\nimport {css} from 'styled-components'\n\nexport const DefaultLabelComponent = styled.label`\n`;\n\nexport const DefaultFieldContainer = styled.div`\n`;\n\nexport const DefaultContentContainer = styled.div`\n    flex-direction: row;\n    align-items: center;\n    width: 100%;\n    position: relative;\n    display: flex;\n    \n`;\n\nexport const DefaultInputContainer = styled.div`\n    // width: 90%;\n    flex: 1;\n    align-items: center;\n    margin: 0;\n    padding: 0;\n    position: relative;\n   \n`;\n\nexport const DefaultInputComponent = styled.input`\n     // background: ${props =>  props.hasError && props.theme.bad};\n`;\n\nexport const IconContainerComponent = styled.div`\n    width: auto;\n    height: auto;\n    position: absolute;\n    top: 50%;\n    right: 1rem;\n    transform: translateY(-50%);\n    margin: 0;\n    padding: 0;\n    // background: magenta;\n    \n    ${props => props.iconContainerCss};\n    \n`;\n\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { useField, useFormikContext } from \"formik\";\n\nimport ErrorTooltip from '../error_tooltip/error_tooltip';\nimport useChange from '../../../basic/form/useChange'\nimport * as styled from './text_field.style'\n\nconst TextField = ({\n\t\t\t\t\t   InputComponent,\n\t\t\t\t\t   ErrorComponent,\n\t\t\t\t\t   LabelComponent,\n\t\t\t\t\t   InputContainer,\n\t\t\t\t\t   fieldLabel,\n\t\t\t\t\t   onBlur,\n\t\t\t\t\t   onFocus,\n\t\t\t\t\t   onChange,\n\t\t\t\t\t   inputStyleFunc,\n\t\t\t\t\t   IconContainerComponent,\n\t\t\t\t\t   ContentContainer,\n\t\t\t\t\t   FieldContainer,\n\t\t\t\t\t   mapInput,\n\tmapOutput,\n\tinputProps,\n\n\t\t\t\t\t   style,\n\t\t\t\t\t   ...props }) => {\n\n\tconst { setFieldValue, setFieldTouched, validateOnChange, validateOnBlur, validateField, validateForm, ...context } = useFormikContext();\n\tconst [field, meta] = useField(props);\n\tconst { touched, error } = meta\n\n\tconst hasError = touched && error\n\tuseChange(setFieldValue)\n\tconst inputStyle = inputStyleFunc(hasError);\n\treturn (\n\t\t<>\n\t\t\t{fieldLabel &&\n\t\t\t<LabelComponent hasError={hasError} htmlFor={props.id || props.name}>{fieldLabel}</LabelComponent>\n\t\t\t}\n\t\t\t<ContentContainer>\n\t\t\t\t<InputContainer>\n\t\t\t\t\t<InputComponent\n\n\t\t\t\t\t\t// inputStyle={{...inputStyle, ...style}}\n\t\t\t\t\t\t// inputStyle={inputStyle}\n\t\t\t\t\t\tclassName='form-control'\n\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t{...inputProps}\n\t\t\t\t\t\t{...props}\n\t\t\t\t\t\tstyle={{...style, ...inputStyle}}\n\t\t\t\t\t\tvalue={mapInput(field.value)}\n\t\t\t\t\t\tonChange={(event)=> {\n\t\t\t\t\t\t\t// update touched if necessary\n\t\t\t\t\t\t\tif(!touched) {\n\t\t\t\t\t\t\t\tsetFieldTouched(field.name, true)\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tsetFieldValue(field.name, mapOutput(event.target.value)) // update field value\n\n\t\t\t\t\t\t\tonChange(event) // call additional onChange prop if necessary\n\t\t\t\t\t\t}}\n\t\t\t\t\t\t// set field touched and call onBlur prop\n\t\t\t\t\t\tonBlur={(event)=>{\n\t\t\t\t\t\t\t// update touched if necessary\n\t\t\t\t\t\t\tif(!touched) {\n\t\t\t\t\t\t\t\tsetFieldTouched(field.name, true)\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// validateOnBlur && validateField(field.name) // validate if necessary\n\t\t\t\t\t\t\t// validateField(field.name) // validate if necessary\n\n\t\t\t\t\t\t\tonBlur(event) // call onBlur prop if passed\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<ErrorTooltip\n\t\t\t\t\t\tvisible={hasError}\n\t\t\t\t\t\ttext={error}\n\t\t\t\t\t\tContainerComponent={IconContainerComponent}\n\t\t\t\t\t/>\n\t\t\t\t</InputContainer>\n\n\t\t\t</ContentContainer>\n\n\n\n\t\t</>\n\t);\n};\n\n/* *\n*\n* Returns style for input component\n* Accepts hasError prop, which can be used to change styling based on presence of errors\n*\n* */\nconst defaultInputStyleFunc = (hasError) => {\n\treturn {\n\t\t// borderColor: hasError && 'red',\n\t\t// border: hasError && '1px solid red',\n\t\ttransition: \"all .5s ease-in-out\",\n\t\tboxShadow: hasError && `0 0 5px red !important`,\n\n\t\tborderLeft: hasError ? '1px solid red' : \"1px solid transparent\",\n\t\tborderTop: hasError ? '1px solid red' : \"1px solid transparent\",\n\t\tborderRight: hasError ? '1px solid red' : \"1px solid transparent\",\n\t\tborderBottom: hasError && '1px solid red',\n\n\n\t\toverflow: \"hidden\",\n\t\ttextOverflow: \"ellipsis\",\n\t\tdisplay: \"flex\",\n\t\tjustifyContent: \"center\",\n\t\talignItems: \"center\",\n\t\t// padding: \"0.25rem\"\n\t}\n}\n\n// Specifies propTypes\nTextField.propTypes = {\n\tLabelComponent: PropTypes.elementType,\n\tInputComponent: PropTypes.elementType,\n\tInputContainer: PropTypes.elementType,\n\tonBlur: PropTypes.func,\n\tonFocus: PropTypes.func,\n\tonChange: PropTypes.func,\n\tinputStyleFunc: PropTypes.func,\n\tfieldLabel: PropTypes.string,\n\tIconContainerComponent: PropTypes.elementType,\n\tContentComponent: PropTypes.elementType,\n\tstyle: PropTypes.object,\n};\n\n// Specifies the default values for props:\nTextField.defaultProps = {\n\tLabelComponent: styled.DefaultLabelComponent,\n\tInputComponent: styled.DefaultInputComponent,\n\tInputContainer: styled.DefaultInputContainer,\n\tonBlur: () => {},\n\tonFocus: () => {},\n\tonChange: () => {},\n\tfieldLabel: \"\",\n\tinputStyleFunc: defaultInputStyleFunc,\n\tIconContainerComponent: styled.IconContainerComponent,\n\tContentContainer: styled.DefaultContentContainer,\n\tFieldContainer: styled.DefaultFieldContainer,\n\tstyle: {},\n\tvalidateOnBlur: false,\n\tmapInput: (val) => val,\n\tmapOutput: (val) => val,\n};\n\nexport default TextField;\n","import { deepCopy } from './utils'\nimport {isObject} from \"./object_utils\";\nimport store from \"../../redux/store\";\nimport {getLoadStationId, getUnloadStationId} from \"./route_utils\";\n\n/**\n * This function checks to see if a process is broken. \n * A process is broken because it has dissjointed routes, theres a gap between an unload station and a load station between 2 consecutive routes\n * \n * \n * @param {object} processRoutes Process to check and see if it is broken\n * @param {object} routes All routes\n */\nexport const isBrokenProcess = (routes) => {\n\n    // can't be broken if there is only 1 route\n    if(routes.length > 1) {\n        // Loops through and\n        for (let i = 0; i < routes.length - 1; i++) {\n            const currentRoute = routes[i]\n            const nextRoute = routes[i + 1]\n\n            const unloadStationId = getUnloadStationId(currentRoute)\n            const loadStationId = getLoadStationId(nextRoute)\n\n\n            if (unloadStationId !== loadStationId) {\n                // Have to return the current route index plus 1 because if the route that is before the broken route is the first route in s process, then the index is 0, which is considered falsy\n                return i + 1\n            }\n        }\n    }\n\n    return 0\n\n}\n\n/**\n * This function returns true if the route you are deleting will break the Process\n * \n * Currently the way it tells if it will break the process is to tell if its not the first or last route in a process\n * If it is the first or last route, then the process does not break\n * \n * RETURNS FALSE IF DELETE DOES NOT BREAK PROCESS\n * It returns an int of where the break will be (int's are truthy)\n * \n * @param {array} processRoutes Selected Process\n * @param {object} routeId Selected Route\n */\nexport const willRouteDeleteBreakProcess = (routes, routeId) => {\n\n    // if not first or last route\n    if (routeId !== routes[routes.length - 1]._id && routeId !== routes[0]._id) {\n\n        const copyProcessRoutes = deepCopy(routes)\n        const index = copyProcessRoutes.findIndex((currRoute) => currRoute._id === routeId)\n        copyProcessRoutes.splice(index, 1)\n\n        return isBrokenProcess(copyProcessRoutes)\n    }\n    else {\n        return false\n    }\n}\n\n/**\n * This checks to see if the route being added to the process will fix the broken process\n * \n * The way it tells is by getting the route before the break and checks to see if the new route's load location is the route before breaks unload location.\n * If thats the case than we see if the route after break's load station is the new routes unload location.\n * \n * If the new route's load and unload location fix the missing gap then it fixes that part of the broken process\n * \n * Perform a check to see if there's still another part of the process is broken after fix\n * If it's fix then the process is not broken anymore, if not, update the break point\n * \n * RETURNS FALSE IF THE PROCESS IS FIXED\n * It returns an int of where the new break is if it's still broken (int's are truthy)\n * \n * @param {object} processRoutes Selected Process\n * @param {int} brokenIndex index of broken route\n * @param {object} route New Route\n */\nexport const willRouteAdditionFixProcess = (routes, brokenIndex, route) => {\n    const copyRoutes = deepCopy(routes)\n    const routeBeforeBreak = routes[brokenIndex - 1]\n    const routeAfterBreak = routes[brokenIndex]\n\n    if (getUnloadStationId(routeBeforeBreak) === getLoadStationId(route) && getLoadStationId(routeAfterBreak) === getUnloadStationId(route) ) {\n\n        copyRoutes.splice(brokenIndex, 0, route) // splice route into arr\n\n        if (!!isBrokenProcess(copyRoutes)) {\n            return isBrokenProcess(copyRoutes)\n        }\n        else {\n            return false\n        }\n    }\n\n    copyRoutes.splice(brokenIndex, 0, route)\n    if (!!isBrokenProcess(copyRoutes)) {\n        return isBrokenProcess(copyRoutes)\n    }\n    else {\n        return false\n    }\n}\n\n/**\n * This returns the list of ***UNIQUE*** station ids belonging to a process\n *\n * In order to get the list of station ids, this function first gets the list of route ids belonging to the process from the process's routes key\n *\n * For each route id, the corresponding route object is retrieved from the routes object\n *\n * From each route object, the unload and load objects are extracted\n * from the unload and load objects, the station id is extracted\n *\n * Each station id is added to an object to accumulate all stations belonging to the process\n * NOTE: an object is used for this purpose since it efficiently and automatically ensures that each entry will be unique (since object keys are unique).\n *      If an array is desired, simply call Object.keys() on the returned object where needed\n *\n * RETURNS an object containing the key of each station contained in the process with value set as true\n *\n * @param {object} process The process to get stations from\n * @param {object} routes Object containing all routes with each route's id as keys\n */\nexport const getProcessStations = (process, routes) => {\n    const { routes: routeIds = [] } = process || {}\n\n    // object that will contain {stationId: true} for each station in the process\n    // an object is used instead of an array because an object can only contain a key once\n    // if an array was used, the array would have to be checked each time a station is added to ensure duplicates aren't added\n    var stationIds = {}\n\n    // loop through each routeId, get the load / unload station of the route and add it to the stationIds obj\n    routeIds.forEach((currRouteId) => {\n\n        // get route from id\n        const currRoute = routes[currRouteId] || {} // default to empty obj\n\n        // get unload and load objects\n        const {\n            unload = {},\n            load = {}\n        } = currRoute\n\n        // get unload station id\n        const {\n            station: unloadStationId\n        } = unload\n\n        // get load station id\n        const {\n            station: loadStationId\n        } = load\n\n        // if unloadStationId and loadStationId exist, add to stationIds obj\n        if(unloadStationId) stationIds[unloadStationId] = true\n        if(loadStationId) stationIds[loadStationId] = true\n    })\n\n    // return stationIds obj\n    return stationIds\n}\n\nexport const getPreviousRoute = (processRoutes, currentRouteId) => {\n    const storeState = store.getState()\n    const routes = storeState.tasksReducer.tasks\n    var previousRoute\n\n    const currentRouteindex = processRoutes.findIndex((currItem) => {\n        if(isObject(currItem)) {\n            return currItem._id === currentRouteId\n        }\n        else {\n            return currItem === currentRouteId\n        }\n\n    })\n\n    if(currentRouteindex > 0 ) {\n        previousRoute = processRoutes[currentRouteindex - 1]\n    }\n    else {\n        previousRoute = processRoutes[processRoutes.length - 1]\n    }\n\n    if(!isObject(previousRoute)) {\n        return routes[previousRoute]\n    }\n    else {\n        return previousRoute\n    }\n\n}\n\n\n\n\n","export var globStyle = {\n\n    lrgFontSize : '1.5rem',\n    medFontSize : '1.2rem',\n    smlFontSize : '1rem',\n\n    font : 'Montserrat',\n\n    lightBG : '#FFFFFF',\n    darkBG : '#3D3D3D',\n\n    white : '#FFFFFF',\n    black : '#000000',\n\n    grey1 : '#202020',\n    grey2 : '#3D3D3D',\n    grey3 : '#5D5D5D',\n    grey4 : '#BCBCBC',\n    grey5 : '#E9E9E9',\n\n    red : '#FF4B4B',\n    green : '#52B853'\n\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport PropTypes from 'prop-types';\n\nclass ClickOutside extends React.Component {\n  container = React.createRef();\n\n  componentDidMount() {\n    document.addEventListener('click', this.handleClick,{capture:true, passive:true});\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('click', this.handleClick, true);\n  }\n\n  handleClick = (event) => {\n    const container = this.container.current;\n    const { target } = event;\n    const { onClickOutside } = this.props;\n\n    if ((container && container === target) || (container && !container.contains(target))) {\n      onClickOutside(event);\n    }\n  };\n\n  render() {\n    const { className, children, ClickOutsideComponent } = this.props;\n\n    return (\n      <ClickOutsideComponent className={className} ref={this.container}>\n        {children}\n      </ClickOutsideComponent>\n    );\n  }\n}\n\nconst DefaultClickOutsideComponent = styled.div`\n\n`;\n\nClickOutside.propTypes = {\n  onClickOutside: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string\n};\n\nClickOutside.defaultProps = {\n  ClickOutsideComponent: DefaultClickOutsideComponent\n};\n\n\nexport default ClickOutside;\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport styled from 'styled-components'\n\nimport { LightenDarkenColor } from '../../../../methods/utils/color_utils'\n\nfunction Label(props) {\n    return (\n        <props.LabelComponent>\n            {props.label}\n        </props.LabelComponent>\n    )\n}\n\nconst DefaultLabelComponent = styled.div`\n    width: 100%;\n    text-align: center;\n    color: #999;\n    font-weight: 200;\n\n    background: ${props => LightenDarkenColor(props.theme.bg.quinary, -10)};\n    color: ${props => props.theme.bg.septenary};\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz5};\n`\n\nLabel.propTypes = {\n    LabelComponent: PropTypes.elementType,\n    label: PropTypes.string,\n}\n\nLabel.defaultProps = {\n    LabelComponent: DefaultLabelComponent,\n    label: '',\n}\n\nexport default Label\n\n","export const valueExistInSelected = (value, values, props) =>\n  !!values.find((val) => getByPath(val, props['valueField']) === value);\n\nexport const hexToRGBA = (hex, alpha) => {\n  const RR = parseInt(hex.slice(1, 3), 16);\n  const GG = parseInt(hex.slice(3, 5), 16);\n  const BB = parseInt(hex.slice(5, 7), 16);\n\n  return `rgba(${RR}, ${GG}, ${BB}${alpha && `, ${alpha}`})`;\n};\n\nexport const debounce = (fn, delay = 0) => {\n  let timerId;\n\n  return (...args) => {\n    if (timerId) {\n      clearTimeout(timerId);\n    }\n    timerId = setTimeout(() => {\n      fn(...args);\n      timerId = null;\n    }, delay);\n  };\n};\n\nexport const isEqual = (a, b) => JSON.stringify(a) === JSON.stringify(b);\n\nexport const getByPath = (object, path) => {\n  // console.log('getByPath: {object, path}', {object, path})\n\n  let new_path = path.split('.')\n  // console.log('getByPath: new_path', {new_path})\n\n  if (!path) {\n    return;\n  }\n\n  return path.split('.').reduce((acc, value) => acc[value], object)\n};\n\nexport const getProp = (object, path, defaultValue) => {\n  if (!path) {\n    return object;\n  }\n\n  const normalizedPath = Array.isArray(path) ? path : path.split('.').filter((item) => item.length);\n\n  if (!normalizedPath.length) {\n    return object === undefined ? defaultValue : object;\n  }\n\n  return getProp(object[normalizedPath.shift()], normalizedPath, defaultValue);\n};\n","export const LIB_NAME = 'react-dropdown-select';\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport {getByPath} from '../util';\nimport { LIB_NAME } from '../constants';\n\nconst Option = ({ item, props, state, methods }) => {\n\n    const OptionComponent = props.OptionComponent ? props.OptionComponent : DefaultOptionComponent\n    return(\n        item && props.optionRenderer ? (\n          props.optionRenderer({ item, props, state, methods })\n        ) : (\n          <OptionComponent\n            role=\"listitem\"\n            disabled={props.disabled}\n            direction={props.direction}\n            className={`${LIB_NAME}-option`}\n            color={props.color}>\n            <span className={`${LIB_NAME}-option-label`}>{getByPath(item, props.labelField)}</span>\n            <span\n              className={`${LIB_NAME}-option-remove`}\n              onClick={(event) => methods.removeItem(event, item, props.closeOnSelect)}>\n              &times;\n            </span>\n          </OptionComponent>\n        )\n    );\n\n}\n\nexport const DefaultOptionComponent = styled.span`\n\n  padding: 0 5px;\n  border-radius: 2px;\n  line-height: 21px;\n  margin: 3px 0 3px 5px;\n  background: ${({ color }) => color};\n  color: #fff;\n  display: inline-flex;\n  flex-direction: ${({ direction }) => direction === 'rtl' ? 'row-reverse' : 'row'};\n  width: auto;\n  white-space: nowrap ;\n  \n  \n  .${LIB_NAME}-option-label {\n    width: auto;\n  }\n\n\n  .${LIB_NAME}-option-remove {\n    cursor: pointer;\n    width: 22px;\n    height: 22px;\n    display: inline-block;\n    text-align: center;\n    margin: 0 -5px 0 0px;\n    border-radius: 0 3px 3px 0;\n\n    :hover {\n      color: tomato;\n    }\n  }\n\n  :hover,\n  :hover > span {\n    opacity: 0.9;\n  }\n\n`;\n\n\n// Specifies the default values for props:\nOption.defaultProps = {\n    OptionComponent: DefaultOptionComponent,\n};\n\nexport default Option;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { valueExistInSelected } from '../util';\nimport * as PropTypes from 'prop-types';\nimport { LIB_NAME } from '../constants';\n\nconst handlePlaceHolder = (props, state) => {\n  const { addPlaceholder, searchable, placeholder } = props;\n  const noValues = state.values && state.values.length === 0;\n  const hasValues = state.values && state.values.length > 0;\n\n  if (hasValues && addPlaceholder && searchable) {\n    return addPlaceholder;\n  }\n\n  if (noValues) {\n    return placeholder;\n  }\n\n  if (hasValues && !searchable) {\n    return '';\n  }\n\n  return '';\n};\n\nclass Input extends Component {\n  input = React.createRef();\n\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.state.dropdown || (prevProps.state.dropdown !== this.props.state.dropdown && this.props.state.dropdown) ||\n      this.props.props.autoFocus\n    ) {\n      this.input.current.focus();\n    }\n\n    if (prevProps.state.dropdown !== this.props.state.dropdown && !this.props.state.dropdown) {\n       this.input.current.blur();\n    }\n  }\n\n  onBlur = (event) => {\n    event.stopPropagation();\n    if (!this.props.state.dropdown) {\n      return this.input.current.blur();\n    }\n\n    return this.input.current.focus();\n  };\n\n  handleKeyPress = (event) => {\n    const { props, state, methods } = this.props;\n\n    return (\n      props.create &&\n      event.key === 'Enter' &&\n      !valueExistInSelected(state.search, state.values, this.props) &&\n      state.search &&\n      state.cursor === null &&\n      methods.createNew(state.search)\n    );\n  };\n\n  render() {\n    const { props, state, methods, InputComponent } = this.props;\n\n    if (props.inputRenderer) {\n      return props.inputRenderer({ props, state, methods, inputRef: this.input });\n    }\n\n    return (\n      <InputComponent\n        ref={this.input}\n        tabIndex=\"-1\"\n        onFocus={(event) => event.stopPropagation()}\n        className={`${LIB_NAME}-input`}\n        size={methods.getInputSize()}\n        value={state.search}\n        readOnly={!props.searchable}\n        onClick={() => methods.dropDown('open')}\n        onKeyPress={this.handleKeyPress}\n        onChange={methods.setSearch}\n        onBlur={this.onBlur}\n        placeholder={handlePlaceHolder(props, state)}\n        disabled={props.disabled}\n        filled={props.filled}\n      />\n    );\n  }\n}\n\nexport const DefaultInputComponent = styled.input`\n    cursor: pointer;\n    line-height: inherit;\n\n    // width: ${props => props.filled ? `calc(${props.size}ch + 5px)` : `100%`};\n    width: ${props => `calc(${props.size}ch + 5px)`};\n\n    border: none;\n    margin-left: 5px;\n    background: transparent;\n    font-size: smaller;\n    ${({ readOnly }) => readOnly && 'cursor: pointer;'}\n    :focus {\n      outline: none;\n    }\n\n    vertical-align: middle;\n    line-height: 2rem;\n    height: 2rem;\n    \n    &::placeholder {\n      color: ${props => props.theme.bg.senary};\n    }\n    `;\n\nInput.propTypes = {\n    props: PropTypes.object,\n    state: PropTypes.object,\n    methods: PropTypes.object\n};\n\nInput.defaultProps = {\n    InputComponent: DefaultInputComponent\n};\n\nexport default Input;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport Option from './Option';\nimport Input from './Input';\nimport { LIB_NAME } from '../constants';\nimport { getByPath } from '../util';\n\nconst Content = ({ props, state, methods, ContentComponent, InputComponent }) => {\n  return (\n    <ContentComponent\n      className={`${LIB_NAME}-content ${\n        props.multi ? `${LIB_NAME}-type-multi` : `${LIB_NAME}-type-single`\n      }`}\n      onClick={(event) => {\n        event.stopPropagation();\n        methods.dropDown('open');\n      }}>\n      {props.contentRenderer ? (\n        props.contentRenderer({ props, state, methods })\n      ) : (\n        \n        <OptionsContainer multi={props.multi}>\n          {(props.multi || props.showSelectedBox)\n            ? state.values &&\n              state.values.map((item) => (\n                <Option\n                  key={`${getByPath(item, props.valueField)}${getByPath(item, props.labelField)}`}\n                  item={item}\n                  state={state}\n                  props={props}\n                  methods={methods}\n                />\n              ))\n            : state.values &&\n              state.values.length > 0 && <Value>{getByPath(state.values[0], props.labelField)}</Value>\n            }\n          <Input  InputComponent={InputComponent} props={{...props, filled:state.values.length}} methods={methods} state={state} />\n        </OptionsContainer>\n      )}\n    </ContentComponent>\n  );\n    return (\n        <ContentComponent\n            className={`${LIB_NAME}-content ${props.multi ? `${LIB_NAME}-type-multi` : `${LIB_NAME}-type-single`\n                }`}\n            onClick={(event) => {\n                event.stopPropagation();\n                methods.dropDown('open');\n            }}>\n            {props.contentRenderer ? (\n                props.contentRenderer({ props, state, methods })\n            ) : (\n\n                    <React.Fragment>\n                        {(props.multi || props.showSelectedBox)\n                            ? state.values &&\n                            state.values.map((item, ind) => (\n                                <Option\n                                    // Fix for keys that have the same name\n                                    // key={`${getByPath(item, props.valueField)}${getByPath(item, props.labelField)}`}\n                                    key={ind}\n                                    item={item}\n                                    state={state}\n                                    props={props}\n                                    methods={methods}\n                                />\n                            ))\n                            : state.values &&\n                            state.values.length > 0 && <Value>{getByPath(state.values[0], props.labelField)}</Value>\n                        }\n                        <Input InputComponent={InputComponent} props={{ ...props, filled: state.values.length }} methods={methods} state={state} />\n                    </React.Fragment>\n                )}\n        </ContentComponent>\n    );\n};\n\nexport const Value = styled.div`\n  margin-left: 0.3rem;\n  margin-right: 0.2rem;\n  line-height: 1.8rem;\n  font-size: ${props => props.theme.fontSize.sz3};\n  width: 100%;\n`\n\nexport const OptionsContainer = styled.div`\n    width: auto;\n    height: 100%;\n    margin-right: 1rem;\n    display: inline-flex;\n    overflow-y: hidden;\n    overflow-x: ${props => props.multi ? \"auto\" : \"hidden\"};\n    \n    word-break: ${props => !props.multi && \"break-all\"};\n    white-space: ${props => !props.multi && \"nowrap\"};\n    text-overflow: ${props => !props.multi && \"ellipsis\"};\n    \n`\n\nexport const DefaultContentComponent = styled.div`\n  position: relative;\n  \n  display: flex;\n  flex-grow: 1;\n  // flex-wrap: nowrap;\n\n  overflow: hidden;\n  \n  .${LIB_NAME}-type-multi {\n    overflow-x: auto;\n  }\n  \n  word-break: break-all;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`;\n\n// Specifies the default values for props:\nContent.defaultProps = {\n    ContentComponent: DefaultContentComponent,\n};\n\nexport default Content;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { LIB_NAME } from '../constants';\n\nimport {globStyle} from '../../../../global_style'\n\nconst NoData = ({ props, state, methods, NoDataComponent }) =>\n  props.noDataRenderer ? (\n    props.noDataRenderer({ props, state, methods })\n  ) : (\n    <NoDataComponent id={'bob5'} className={`${LIB_NAME}-no-data`} color={props.color}>\n      {props.noDataLabel}\n    </NoDataComponent>\n  );\n\nconst DefaultNoDataComponent = styled.div`\n  padding: 10px;\n  text-align: center;\n  font-size: 1rem;\n  color: #FF4B4B;\n  background-color: rgba(0,0,0,0.2);\n\n`;\n\nNoData.defaultProps = {\n  NoDataComponent: DefaultNoDataComponent\n};\n\nexport default NoData;\n","import React, { Component } from 'react';\nimport styled from 'styled-components'\nimport { getByPath } from '../util';\nimport * as PropTypes from 'prop-types';\nimport { LIB_NAME } from '../constants';\n\nimport { LightenDarkenColor, hexToRGBA } from '../../../../methods/utils/color_utils'\n\nclass Item extends Component {\n  item = React.createRef();\n\n  componentDidUpdate() {\n    if (this.props.state.cursor === this.props.itemIndex) {\n      this.item.current &&\n        this.item.current.scrollIntoView({ behavior: 'smooth', block: 'nearest', inline: 'start' });\n    }\n  }\n\n  render() {\n    // console.log('Item render this.props',this.props)\n    const { props, state, methods, item, itemIndex, ItemComponent, ContentContainer, ButtonComponent, TextComponent, onMouseEnter } = this.props;\n\n    if (props.itemRenderer) {\n      return props.itemRenderer({ item, itemIndex, props, state, methods });\n    }\n\n    if (!props.keepSelectedInList && methods.isSelected(item)) {\n      return null;\n    }\n\n    // console.log('item ItemComponent', ItemComponent)\n    //const { ItemComponent } = this.props;\n\n    return (\n      <ItemComponent\n        role=\"option\"\n        ref={this.item}\n        aria-selected={methods.isSelected(item)}\n        aria-disabled={item.disabled}\n        disabled={item.disabled}\n        aria-label={getByPath(item, props.labelField)}\n        key={`${getByPath(item, props.valueField)}${getByPath(item, props.labelField)}`}\n        tabIndex=\"-1\"\n        className={`${LIB_NAME}-item ${\n          methods.isSelected(item) ? `${LIB_NAME}-item-selected` : ''\n        } ${state.cursor === itemIndex ? `${LIB_NAME}-item-active` : ''} ${\n          item.disabled ? `${LIB_NAME}-item-disabled` : ''\n        }`}\n        onClick={item.disabled ? undefined : () => methods.addItem(item)}\n        onFocus = {props.onMouseEnter}\n        onKeyPress={item.disabled ? undefined : () => methods.addItem(item)}\n        color={props.color}\n        schema={props.schema}>\n\n            <TextComponent>\n              {getByPath(item, props.labelField)} {item.disabled && <ins>{props.disabledLabel}</ins>}\n            </TextComponent>\n\n            {props.showButton && !!props.onDetailsClick &&\n              <ButtonComponent className='fas fa-ellipsis-h'\n                  onClick={(e) => {\n                    if (!e) var e = window.event;\n                    e.cancelBubble = true;\n                    if (e.stopPropagation) e.stopPropagation();\n                    props.onDetailsClick(item.id);\n                  }}>\n              </ButtonComponent>\n            }\n\n      </ItemComponent>\n    );\n  }\n}\n\nItem.propTypes = {\n  props: PropTypes.any,\n  state: PropTypes.any,\n  methods: PropTypes.any,\n  item: PropTypes.any,\n  itemIndex: PropTypes.any,\n  showButton: PropTypes.bool,\n};\n\nexport const DefaultItemComponent = styled.span`\n\n  padding: .5rem 1rem .5rem calc(1rem - 5px);\n  cursor: pointer;\n  white-space: nowrap;\n  display: flex;\n  justify-content: space-between;\n  font-family: ${props => props.theme.font.primary};\n  font-size: ${props => props.theme.fontSize.sz3};\n\n  border-left: 5px solid transparent;\n\n  // &.${LIB_NAME}-item-active {\n  //   ${({ disabled, color }) => !disabled && color && `background: green;`}\n  // }\n\n  :hover,\n  :focus {\n    background: ${props => LightenDarkenColor(props.theme.bg.quinary, 10)};\n    outline: none;\n  }\n\n\n  &.${LIB_NAME}-item-selected {\n    ${props => props.disabled ? `\n      background: rgba(0,0,0,0.01);\n      color: ${props.theme.bg.primary};\n    `\n    : `\n      background: ${!!props.schema ? hexToRGBA(props.theme.schema[props.schema].solid, 0.1) : hexToRGBA(props.theme.bg.senary, 0.1)};\n      color: ${!!props.schema ? props.theme.schema[props.schema].solid : props.theme.bg.senary};\n      border-color: ${!!props.schema ? props.theme.schema[props.schema].solid : props.theme.bg.senary};\n    `}\n  }\n\n  ${({ disabled }) =>\n    disabled\n      ? `\n    background: ${props => props.theme.bg.secondary};\n    color: ${props => props.theme.bg.tertiary};\n\n    ins {\n      text-decoration: none;\n      border:1px solid #ccc;\n      border-radius: 2px;\n      padding: 0px 3px;\n      font-size: x-small;\n      text-transform: uppercase;\n    }\n    `\n      : ''}\n\n`;\n\nconst DefaultContentContainer = styled.div`\n  display: flex;\n  flex: 1;\n  justify-content: space-between;\n  padding: 0;\n  overflow: hidden;\n  white-space: nowrap;\n`;\n\nconst DefaultButtonComponent = styled.i`\n    display: flex;\n    color: grey;\n    font-size: 1rem;\n    &:hover {\n        cursor: pointer;\n    }\n    line-height: 2rem;\n    text-align: center;\n`\n\nconst DefaultTextComponent = styled.span`\n  overflow: hidden;\n  white-space: nowrap;\n  flex: 1;\n  text-overflow: ellipsis;\n  // white-space: normal;\n  // word-wrap: break-word;\n  // word-break: break-all;\n`;\n\n// Specifies the default values for props:\nItem.defaultProps = {\n    ItemComponent: DefaultItemComponent,\n    ContentContainer: DefaultContentContainer,\n    ButtonComponent: DefaultButtonComponent,\n    TextComponent: DefaultTextComponent,\n};\n\nexport default Item;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { LIB_NAME } from '../constants';\nimport NoData from '../components/NoData';\nimport Item from '../components/Item';\nimport Label from '../components/Label';\n\nimport { valueExistInSelected, hexToRGBA } from '../util';\n\nconst dropdownPosition = (props, methods) => {\n    const DropdownBoundingClientRect = methods.getSelectRef().getBoundingClientRect();\n    const dropdownHeight =\n        DropdownBoundingClientRect.bottom + parseInt(props.dropdownHeight, 10) + parseInt(props.dropdownGap, 10);\n\n    if (props.dropdownPosition !== 'auto') {\n        return props.dropdownPosition;\n    }\n\n    if (dropdownHeight > window.innerHeight && dropdownHeight > DropdownBoundingClientRect.top) {\n        return 'top';\n    }\n\n    return 'bottom';\n};\n\nconst Dropdown = ({ ItemComponent, props, DropDownComponent, state, methods, TextComponent }) => {\n    // console.log('Dropdown props', props)\n    // console.log('Dropdown ItemComponent', ItemComponent)\n    return (\n        <DropDownComponent\n            tabIndex=\"-1\"\n            aria-expanded=\"true\"\n            role=\"list\"\n            dropdownPosition={dropdownPosition(props, methods)}\n            selectBounds={state.selectBounds}\n            portal={props.portal}\n            dropdownGap={props.dropdownGap}\n            dropdownHeight={props.dropdownHeight}\n            className={`${LIB_NAME}-dropdown ${LIB_NAME}-dropdown-position-${dropdownPosition(\n                props,\n                methods\n            )}`}>\n            {props.dropdownRenderer ? (\n                props.dropdownRenderer({ props, state, methods })\n            ) : (\n                    <React.Fragment>\n                        {props.create && state.search && !valueExistInSelected(state.search, state.values, props) && (\n                            <AddNew\n                                className={`${LIB_NAME}-dropdown-add-new`}\n                                color={props.color}\n                                onClick={() => methods.createNew(state.search)}\n                                >\n                                {props.createNewLabel.replace('{search}', `\"${state.search}\"`)}\n                            </AddNew>\n                        )}\n                        <Label LabelComponent={props.LabelComponent} label={props.label}></Label>\n                        {methods.searchResults().length === 0 ? (\n                            <NoData\n                                className={`${LIB_NAME}-no-data`}\n                                state={state}\n                                props={props}\n                                methods={methods}\n                                NoDataComponent={props.NoDataComponent}\n                            />\n                        ) : (\n                                methods\n                                    .searchResults()\n                                    .map((item, itemIndex) => (\n                                        <Item\n                                            ItemComponent={ItemComponent}\n                                            TextComponent={TextComponent}\n                                            //   Fix for dropdown search error for elements with matching keys\n                                            //   key={item[props.valueField]}\n                                            key={itemIndex}\n                                            item={item}\n                                            itemIndex={itemIndex}\n                                            state={state}\n                                            props={props}\n                                            methods={methods}\n                                        />\n                                    ))\n                            )}\n                    </React.Fragment>\n                )}\n        </DropDownComponent>\n    );\n}\n\nexport const DefaultDropDownComponent = styled.div`\n  position: absolute;\n  ${({ selectBounds, dropdownGap, dropdownPosition }) =>\n        dropdownPosition === 'top'\n            ? `bottom: ${selectBounds.height + 2 + dropdownGap}px`\n            : `top: ${selectBounds.height + 2 + dropdownGap}px`};\n\n  ${({ selectBounds, dropdownGap, portal }) =>\n        portal\n            ? `\n      position: fixed;\n      top: ${selectBounds.bottom + dropdownGap}px;\n      left: ${selectBounds.left - 1}px;`\n            : 'left: -1px;'};\n  width: 100%;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n  background: ${props => props.theme.bg.quinary};\n  border-radius: 2px;\n  box-shadow: 0 0 10px 0 ${() => hexToRGBA('#000000', 0.2)};\n  max-height: ${({ dropdownHeight }) => dropdownHeight};\n  overflow: auto;\n  z-index: 1;\n\n  border-radius: 0.2rem;\n\n  :focus {\n    outline: none;\n  }\n\n  /* Let's get this party started */\n  ::-webkit-scrollbar {\n      width: 6px;\n  }\n  /* Track */\n  ::-webkit-scrollbar-track {\n      -webkit-background: rgba(0,0,0,0.1);\n      -webkit-border-radius: 10px;\n      border-radius: 10px;\n  }\n  /* Handle */\n  ::-webkit-scrollbar-thumb {\n      -webkit-border-radius: 10px;\n      border-radius: 10px;\n      -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.5);\n      background: rgba(255,255,255,0.4);\n  }\n  ::-webkit-scrollbar-thumb:window-inactive {\n    background: rgba(255,255,255,0.2);\n  }\n\n}\n`;\n\nconst AddNew = styled.div`\n  color: ${({ color }) => color};\n  padding: 5px 10px;\n  background: white;\n  color: blue;\n\n  :hover {\n    background: ${({ color }) => color && hexToRGBA(color, 0.1)};\n    outline: none;\n    cursor: pointer;\n  }\n`;\n\nDropdown.defaultProps = {\n    DropDownComponent: DefaultDropDownComponent\n};\n\nexport default Dropdown;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { LIB_NAME } from '../constants';\n\nconst Loading = ({ props }) =>\n  props.loadingRenderer ? (\n    props.loadingRenderer({ props })\n  ) : (\n    <LoadingComponent className={`${LIB_NAME}-loading`} color={props.color} />\n  );\n\nconst LoadingComponent = styled.div`\n  @keyframes dual-ring-spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(180deg);\n    }\n  }\n\n  padding: 0 5px;\n  display: block;\n  width: auto;\n  height: auto;\n\n  :after {\n    content: ' ';\n    display: block;\n    width: 16px;\n    height: 16px;\n    border-radius: 50%;\n    border-width: 1px;\n    border-style: solid;\n    border-color: ${({ color }) => color} transparent;\n    animation: dual-ring-spin 0.7s ease-in-out infinite;\n    margin: 0 0 0 -10px;\n  }\n`;\n\nexport default Loading;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { LIB_NAME } from '../constants';\n\nconst Clear = ({ props, state, methods }) =>\n  props.clearRenderer ? (\n    props.clearRenderer({ props, state, methods })\n  ) : (\n    <ClearComponent\n      className={`${LIB_NAME}-clear`}\n      tabIndex=\"-1\"\n      onClick={() => methods.clearAll()}\n      onKeyPress={() => methods.clearAll()}>\n      &times;\n    </ClearComponent>\n  );\n\nconst ClearComponent = styled.div`\n  line-height: 25px;\n  margin: 0 10px;\n  cursor: pointer;\n\n  :focus {\n    outline: none;\n  }\n\n  :hover {\n    color: tomato;\n  }\n`;\n\nexport default Clear;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { LIB_NAME } from '../constants';\n\nconst Separator = ({ props, state, methods }) =>\n  props.separatorRenderer ? (\n    props.separatorRenderer({ props, state, methods })\n  ) : (\n    <SeparatorComponent className={`${LIB_NAME}-separator`} />\n  );\n\nconst SeparatorComponent = styled.div`\n  border-left: 1px solid #ccc;\n  width: 1px;\n  height: 25px;\n  display: block;\n`;\n\nexport default Separator;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { LIB_NAME } from '../constants';\n\nconst DropdownHandle = ({ props, state, methods }) =>\n  props.dropdownHandleRenderer ? (\n    props.dropdownHandleRenderer({ props, state, methods })\n  ) : (\n    <DropdownHandleComponent\n      tabIndex=\"-1\"\n      onClick={(event) => methods.dropDown(state.dropdown ? 'close': 'open', event)}\n      dropdownOpen={state.dropdown}\n      onKeyPress={(event) => methods.dropDown('toggle', event)}\n      onKeyDown={(event) => methods.dropDown('toggle', event)}\n      className={`${LIB_NAME}-dropdown-handle`}\n      color={props.color}>\n      <svg fill=\"currentColor\" viewBox=\"0 0 40 40\"><path d=\"M31 26.4q0 .3-.2.5l-1.1 1.2q-.3.2-.6.2t-.5-.2l-8.7-8.8-8.8 8.8q-.2.2-.5.2t-.5-.2l-1.2-1.2q-.2-.2-.2-.5t.2-.5l10.4-10.4q.3-.2.6-.2t.5.2l10.4 10.4q.2.2.2.5z\"/></svg>\n    </DropdownHandleComponent>\n  );\n\nconst DropdownHandleComponent = styled.div`\n  text-align: center;\n\n  ${({ dropdownOpen }) =>\n    dropdownOpen\n      ? `\n      pointer-events: all;\n      transform: rotate(0deg);\n      margin: 0px 0 -3px 5px;\n      `\n      : `\n      pointer-events: none;\n      margin: 0 0 0 5px;\n      transform: rotate(180deg);\n      `};\n  cursor: pointer;\n\n  text-align: center;\n  vertical-align: middle;\n  line-height: 2rem;\n  height: 2rem;\n  position: absolute;\n  right: .25rem;\n\n  svg {\n    width: 16px;\n    height: 16px;\n  }\n\n  :hover {\n    path {\n      stroke: ${({ color }) => color};\n    }\n  }\n\n  :focus {\n    outline: none;\n\n    path {\n      stroke: ${({ color }) => color};\n    }\n  }\n\n`;\n\nexport default DropdownHandle;\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components'\nimport ClickOutside from './components/ClickOutside';\n\nimport { globStyle } from '../../../global_style'\nimport { LightenDarkenColor } from '../../../methods/utils/color_utils'\n\n\nimport Label from './components/Label';\nimport Content from './components/Content';\nimport Dropdown from './components/Dropdown';\nimport Loading from './components/Loading';\nimport Clear from './components/Clear';\nimport Separator from './components/Separator';\nimport DropdownHandle from './components/DropdownHandle';\n\nimport { debounce, hexToRGBA, isEqual, getByPath, getProp, valueExistInSelected } from './util';\nimport { LIB_NAME } from './constants';\n\nimport theme from '../../../theme.js'\n\nexport class DropDownSearch extends Component {\n  static propTypes = {\n    onChange: PropTypes.func.isRequired,\n    onDropdownClose: PropTypes.func,\n    onDropdownOpen: PropTypes.func,\n    onClearAll: PropTypes.func,\n    onSelectAll: PropTypes.func,\n    values: PropTypes.array,\n    options: PropTypes.array.isRequired,\n    keepOpen: PropTypes.bool,\n    showSelectedBox: PropTypes.bool,\n    dropdownGap: PropTypes.number,\n    multi: PropTypes.bool,\n    placeholder: PropTypes.string,\n    addPlaceholder: PropTypes.string,\n    disabled: PropTypes.bool,\n    className: PropTypes.string,\n    loading: PropTypes.bool,\n    clearable: PropTypes.bool,\n    searchable: PropTypes.bool,\n    separator: PropTypes.bool,\n    dropdownHandle: PropTypes.bool,\n    searchBy: PropTypes.string,\n    sortBy: PropTypes.string,\n    closeOnScroll: PropTypes.bool,\n    openOnTop: PropTypes.bool,\n    style: PropTypes.object,\n    contentRenderer: PropTypes.func,\n    dropdownRenderer: PropTypes.func,\n    itemRenderer: PropTypes.func,\n    noDataRenderer: PropTypes.func,\n    optionRenderer: PropTypes.func,\n    inputRenderer: PropTypes.func,\n    loadingRenderer: PropTypes.func,\n    clearRenderer: PropTypes.func,\n    separatorRenderer: PropTypes.func,\n    dropdownHandleRenderer: PropTypes.func,\n    direction: PropTypes.string,\n    required: PropTypes.bool,\n    pattern: PropTypes.string,\n    // The pattern attribute specifies a regular expression that the <input> element's value is checked against on form submission\n    // set to null to bypass\n    name: PropTypes.string,\n    className: PropTypes.string,\n    schema: PropTypes.string,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dropdown: false,\n      values: props.values,\n      search: '',\n      selectBounds: {},\n      cursor: null\n    };\n\n    this.methods = {\n      removeItem: this.removeItem,\n      dropDown: this.dropDown,\n      addItem: this.addItem,\n      setSearch: this.setSearch,\n      getInputSize: this.getInputSize,\n      toggleSelectAll: this.toggleSelectAll,\n      clearAll: this.clearAll,\n      selectAll: this.selectAll,\n      searchResults: this.searchResults,\n      getSelectRef: this.getSelectRef,\n      isSelected: this.isSelected,\n      getSelectBounds: this.getSelectBounds,\n      areAllSelected: this.areAllSelected,\n      handleKeyDown: this.handleKeyDown,\n      activeCursorItem: this.activeCursorItem,\n      createNew: this.createNew,\n      sortBy: this.sortBy,\n      safeString: this.safeString\n    };\n\n    this.select = React.createRef();\n    this.dropdownRoot = typeof document !== 'undefined' && document.createElement('div');\n  }\n\n  componentDidMount() {\n\n    this.props.portal && this.props.portal.appendChild(this.dropdownRoot);\n    window.addEventListener('resize', debounce(this.updateSelectBounds), {passive:true});\n    window.addEventListener('scroll', debounce(this.onScroll), {passive:true});\n\n    this.dropDown('close');\n\n    if (this.select) {\n      this.updateSelectBounds();\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      !isEqual(prevProps.values, this.props.values) &&\n      isEqual(prevProps.values, prevState.values)\n    ) {\n      this.setState({ values: this.props.values }, () => {\n        this.props.onChange(this.props.values);\n      });\n    }\n\n    if (prevState.values !== this.state.values) {\n      if (this.state.values.length) { this.props.onChange(this.state.values) };\n      this.updateSelectBounds();\n    }\n\n    if (prevState.search !== this.state.search) {\n      this.updateSelectBounds();\n    }\n\n    if (prevState.values !== this.state.values && this.props.closeOnSelect) {\n      this.dropDown('close');\n    }\n\n    if (prevProps.multi !== this.props.multi) {\n      this.updateSelectBounds();\n    }\n\n    if (prevState.dropdown && prevState.dropdown !== this.state.dropdown) {\n      this.onDropdownClose();\n    }\n\n    if (!prevState.dropdown && prevState.dropdown !== this.state.dropdown) {\n      this.props.onDropdownOpen();\n    }\n\n    if (prevState.values !== this.state.values && !this.props.fillable && this.state.values.length) {\n      this.clearAll();\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.portal && this.props.portal.removeChild(this.dropdownRoot);\n    window.removeEventListener(\n      'resize',\n      debounce(this.updateSelectBounds, this.props.debounceDelay), {passive:true}\n    );\n    window.removeEventListener('scroll', debounce(this.onScroll, this.props.debounceDelay), {passive:true});\n  }\n\n  onDropdownClose = () => {\n    this.setState({ cursor: null });\n    this.props.onDropdownClose();\n  };\n\n  onScroll = () => {\n    if (this.props.closeOnScroll) {\n      this.dropDown('close');\n    }\n\n    this.updateSelectBounds();\n  };\n\n  updateSelectBounds = () =>\n    this.select.current &&\n    this.setState({\n      selectBounds: this.select.current.getBoundingClientRect()\n    });\n\n  getSelectBounds = () => this.state.selectBounds;\n\n  dropDown = (action = 'toggle', event) => {\n    const target = (event && event.target) || (event && event.srcElement);\n\n    if (\n      this.props.portal &&\n      !this.props.closeOnScroll &&\n      !this.props.closeOnSelect &&\n      event &&\n      target &&\n      target.offsetParent &&\n      target.offsetParent.classList.contains('react-dropdown-select-dropdown')\n    ) {\n      return;\n    }\n\n    if (this.props.keepOpen) {\n      return this.setState({ dropdown: true });\n    }\n\n    if (action === 'close' && this.state.dropdown) {\n      this.select.current.blur();\n\n      return this.setState({\n        dropdown: false,\n        search: this.props.clearOnBlur ? '' : this.state.search\n      });\n    }\n\n    if (action === 'open' && !this.state.dropdown) {\n      return this.setState({ dropdown: true });\n    }\n\n    if (action === 'toggle') {\n      this.select.current.focus();\n      return this.setState({ dropdown: !this.state.dropdown });\n    }\n\n    return false;\n  };\n\n  getSelectRef = () => this.select.current;\n\n  addItem = (item) => {\n    if (this.props.multi) {\n      if (\n        valueExistInSelected(getByPath(item, this.props.valueField), this.state.values, this.props)\n      ) {\n        return this.removeItem(null, item, false);\n      }\n\n      this.setState({\n        values: [...this.state.values, item]\n      });\n    } else {\n      this.setState({\n        values: [item],\n        dropdown: false\n      });\n    }\n\n    this.props.clearOnSelect && this.setState({ search: '' });\n\n    return true;\n  };\n\n  removeItem = (event, item, close = false) => {\n    if (event && close) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.dropDown('close');\n    }\n\n    let newValues = this.state.values.filter(\n        (values) =>\n            getByPath(values, this.props.valueField) !== getByPath(item, this.props.valueField)\n    )\n\n    this.setState({\n      values: newValues\n    });\n\n    this.props.onRemoveItem && this.props.onRemoveItem(newValues)\n  };\n\n  setSearch = (event) => {\n    this.setState({\n      cursor: null\n    });\n\n    this.setState({\n      search: event.target.value\n    });\n  };\n\n  getInputSize = () => {\n    if (this.state.values && this.state.values.length) {\n      return 0;\n    } else {\n      return this.props.placeholder.length;\n    }\n  };\n\n  toggleSelectAll = () => {\n    return this.setState({\n      values: this.state.values.length === 0 ? this.selectAll() : this.clearAll()\n    });\n  };\n\n  clearAll = () => {\n    this.props.onClearAll();\n    this.setState({\n      values: []\n    });\n  };\n\n  selectAll = (valuesList = []) => {\n    this.props.onSelectAll();\n    const values = valuesList.length > 0\n      ? valuesList\n      : this.props.options.filter((option) => !option.disabled);\n\n    this.setState({ values });\n  };\n\n  isSelected = (option) =>\n    !!this.state.values.find(\n      (value) =>\n        getByPath(value, this.props.valueField) === getByPath(option, this.props.valueField)\n    );\n\n  areAllSelected = () =>\n    this.state.values.length === this.props.options.filter((option) => !option.disabled).length;\n\n  safeString = (string) => string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n\n  sortBy = () => {\n    const { sortBy, options } = this.props;\n\n    if (!sortBy) {\n      return options;\n    }\n\n    options.sort((a, b) => {\n      if (getProp(a, sortBy) < getProp(b, sortBy)) {\n        return -1;\n      } else if (getProp(a, sortBy) > getProp(b, sortBy)) {\n        return 1;\n      } else {\n        return 0;\n      }\n    });\n\n    return options;\n  };\n\n  searchFn = ({ state, methods }) => {\n    const regexp = new RegExp(methods.safeString(state.search), 'i');\n\n    return methods\n      .sortBy()\n      .filter((item) =>\n        regexp.test(getByPath(item, this.props.searchBy) || getByPath(item, this.props.valueField))\n      );\n  };\n\n  searchResults = () => {\n    const args = { state: this.state, props: this.props, methods: this.methods };\n\n    return this.props.searchFn(args) || this.searchFn(args);\n  };\n\n  activeCursorItem = (activeCursorItem) =>\n    this.setState({\n      activeCursorItem\n    });\n\n  handleKeyDown = (event) => {\n    const args = {\n      event,\n      state: this.state,\n      props: this.props,\n      methods: this.methods,\n      setState: this.setState.bind(this)\n    };\n\n    return this.props.handleKeyDownFn(args) || this.handleKeyDownFn(args);\n  };\n\n  handleKeyDownFn = ({ event, state, props, methods, setState }) => {\n    const { cursor } = state;\n    const escape = event.key === 'Escape';\n    const enter = event.key === 'Enter';\n    const arrowUp = event.key === 'ArrowUp';\n    const arrowDown = event.key === 'ArrowDown';\n    const tab = event.key === 'Tab' && !event.shiftKey;\n    const shiftTab = event.shiftKey && event.key === 'Tab';\n\n    if ((arrowDown || tab) && cursor === null) {\n      return setState({\n        cursor: 0\n      });\n    }\n\n    if (arrowUp || arrowDown || shiftTab || tab) {\n      event.preventDefault();\n    }\n\n    if (escape) {\n      this.dropDown('close');\n    }\n\n    if (enter) {\n      const currentItem = methods.searchResults()[cursor];\n      if (currentItem && !currentItem.disabled) {\n        if (props.create && valueExistInSelected(state.search, state.values, props)) {\n          return null;\n        }\n\n        methods.addItem(currentItem);\n      }\n    }\n\n    if ((arrowDown || tab) && methods.searchResults().length === cursor) {\n      return setState({\n        cursor: 0\n      });\n    }\n\n    if (arrowDown || tab) {\n      setState((prevState) => ({\n        cursor: prevState.cursor + 1\n      }));\n    }\n\n    if ((arrowUp || shiftTab) && cursor > 0) {\n      setState((prevState) => ({\n        cursor: prevState.cursor - 1\n      }));\n    }\n\n    if ((arrowUp || shiftTab) && cursor === 0) {\n      setState({\n        cursor: methods.searchResults().length\n      });\n    }\n  };\n\n  renderDropdown = (ItemComponent) =>\n    this.props.portal ? (\n      ReactDOM.createPortal(\n        <Dropdown ItemComponent={ItemComponent} DropDownComponent={this.props.DropDownComponent} props={this.props} state={this.state} methods={this.methods} />,\n        this.dropdownRoot\n      )\n    ) : (\n        <Dropdown ItemComponent={ItemComponent} TextComponent={this.props.TextComponent} DropDownComponent={this.props.DropDownComponent} props={this.props} state={this.state} methods={this.methods} />\n      );\n\n  createNew = (item) => {\n    const newValue = {\n      [this.props.labelField]: item,\n      [this.props.valueField]: item\n    };\n\n    this.addItem(newValue);\n    this.props.onCreateNew(newValue);\n    this.setState({ search: '' });\n  };\n\n  render() {\n\n    const { ItemComponent, ReactDropdownSelect, Container } = this.props;\n\n    return (\n      <Container className={this.props.className}>\n        <ClickOutside ClickOutsideComponent={this.props.ClickOutsideComponent} onClickOutside={(event) => this.dropDown('close', event)}>\n          <ReactDropdownSelect\n            onKeyDown={this.handleKeyDown}\n            onClick={(event) => this.dropDown('open', event)}\n            // onFocus={(event) => this.dropDown('open', event)}\n            tabIndex={this.props.disabled ? '-1' : '0'}\n            direction={this.props.direction}\n            style={this.props.style}\n            ref={this.select}\n            disabled={this.props.disabled}\n            className={`${LIB_NAME} ${this.props.className}`}\n            color={this.props.color}\n            {...this.props.additionalProps}\n            schema={this.props.schema}>\n\n            <Content InputComponent={this.props.InputComponent} ContentComponent={this.props.ContentComponent} props={this.props} state={this.state} methods={this.methods} />\n\n            {(this.props.name || this.props.required) && (\n              <input\n                tabIndex={-1}\n                onChange={this.methods.setSearch}\n                style={{ opacity: 0, width: 0, position: 'absolute' }}\n                name={this.props.name}\n                required={this.props.required}\n                pattern={this.props.pattern}\n                value={this.state.values.map(value => value[this.props.labelField]).toString() || []}\n                disabled={this.props.disabled}\n              />\n            )}\n\n            {this.props.loading && <Loading props={this.props} />}\n\n            {this.props.clearable && (\n              <Clear props={this.props} state={this.state} methods={this.methods} />\n            )}\n\n            {this.props.separator && (\n              <Separator props={this.props} state={this.state} methods={this.methods} />\n            )}\n\n            {this.props.dropdownHandle && (\n              <DropdownHandle\n                onClick={() => this.select.current.focus()}\n                props={this.props}\n                state={this.state}\n                methods={this.methods}\n              />\n            )}\n\n            {this.state.dropdown && !this.props.disabled && this.renderDropdown(ItemComponent)}\n          </ReactDropdownSelect>\n        </ClickOutside>\n      </Container>\n    );\n  }\n}\n\nexport const DefaultReactDropdownSelect = styled.div`\n\n    background-color: ${props => props.theme.bg.quinary};\n    color: ${props => props.theme.bg.octonary};\n\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz3};\n\n    position: relative;\n    display: flex;\n\n    vertical-align: middle;\n    line-height: 1.6rem;\n    height: 1.6rem;\n    width: 100%;\n    padding: 2px 5px;\n    direction: ${({ direction }) => direction};\n    cursor: pointer;\n    min-height: 36px;\n    ${({ disabled }) =>\n    disabled ? 'cursor: not-allowed;pointer-events: none;opacity: 0.3;' : 'pointer-events: all;'}\n\n    border-bottom: 2px solid transparent;\n    border-radius: 0.2rem;\n\n    :focus,\n    :focus-within {\n        color: ${props => props.theme.bg.octonary};\n        background-color: ${props => LightenDarkenColor(props.theme.bg.quinary, 10)};\n        box-shadow: none;\n        border-bottom: 2px solid ${props => !!props.schema ? props.theme.schema[props.schema].solid : props.theme.bg.octonary};\n    }\n`;\n\nconst DefaultContainer = styled.div`\n\n`;\n\nDropDownSearch.defaultProps = {\n  addPlaceholder: '',\n  placeholder: 'Select...',\n  values: [],\n  options: [],\n  multi: false,\n  showSelectedBox: false,\n  disabled: false,\n  searchBy: 'label',\n  sortBy: null,\n  clearable: false,\n  searchable: true,\n  dropdownHandle: true,\n  separator: false,\n  keepOpen: undefined,\n  noDataLabel: 'No data',\n  createNewLabel: 'add {search}',\n  disabledLabel: 'disabled',\n  dropdownGap: 2,\n  closeOnScroll: false,\n  debounceDelay: 0,\n  labelField: 'label',\n  valueField: 'value',\n  color: '#0074D9',\n  keepSelectedInList: true,\n  closeOnSelect: false,\n  clearOnBlur: true,\n  clearOnSelect: true,\n  dropdownPosition: 'bottom',\n  dropdownHeight: '300px',\n  autoFocus: false,\n  portal: null,\n  create: false,\n  direction: 'ltr',\n  name: null,\n  required: false,\n  pattern: '',\n  onChange: () => undefined,\n  onDropdownOpen: () => undefined,\n  onDropdownClose: () => undefined,\n  onClearAll: () => undefined,\n  onSelectAll: () => undefined,\n  onCreateNew: () => undefined,\n  searchFn: () => undefined,\n  handleKeyDownFn: () => undefined,\n  additionalProps: null,\n  showButton: true,\n  ReactDropdownSelect: DefaultReactDropdownSelect,\n  Container: DefaultContainer,\n  fillable: true,\n  schema: null,\n};\n\n\n\nexport default DropDownSearch;\n","export const SORT_MODES = {\n\tSTART_ASCENDING: \"START_ASCENDING\",\n\tSTART_DESCENDING: \"START_DESCENDING\",\n\tEND_ASCENDING: \"END_ASCENDING\",\n\tEND_DESCENDING: \"END_DESCENDING\",\n\tNAME_ASCENDING: \"NAME_ASCENDING\",\n\tNAME_DESCENDING: \"NAME_DESCENDING\",\n\tQUANTITY_ASCENDING: \"QUANTITY_ASCENDING\",\n\tQUANTITY_DESCENDING: \"QUANTITY_DESCENDING\"\n}\n\nexport const SORT_OPTIONS = [\n\t{description: \"Name (a-z)\", sortMode: SORT_MODES.NAME_ASCENDING},\n\t{description: \"Name (z-a)\", sortMode: SORT_MODES.NAME_DESCENDING},\n\t{description: \"Quantity (Increasing)\", sortMode: SORT_MODES.QUANTITY_ASCENDING},\n\t{description: \"Quantity (Decreasing)\", sortMode: SORT_MODES.QUANTITY_DESCENDING},\n\t{description: \"Start Date (Ascending)\", sortMode: SORT_MODES.START_ASCENDING},\n\t{description: \"Start Date (Descending)\", sortMode: SORT_MODES.START_DESCENDING},\n\t{description: \"End Date (Descending)\", sortMode: SORT_MODES.END_DESCENDING},\n\t{description: \"End Date (Ascending)\", sortMode: SORT_MODES.END_ASCENDING}\n]","import { denormalize, schema } from 'normalizr';\nimport { uuidv4 } from '../methods/utils/utils';\n// condition schema - NOT CURRENTLY USED - condtions should probably have an id attribute / some unique identifier...\n\n\n// schedule schema\nexport const dashboardSchema = new schema.Entity(\n    // key\n    'dashboards',\n    // definition\n    {\n        //condition: conditionSchema\n    },\n    // options\n    {\n        idAttribute: (value, parent, key) => {\n            return value._id.$oid\n        },\n\n    },\n\n);\n\n// schema for list of schedules\nexport const dashboardsSchema = [dashboardSchema]\n\n// schedule schema\nexport const deviceSchema = new schema.Entity(\n    // key\n    'devices',\n    // definition\n    {\n        //condition: conditionSchema\n    },\n    // options\n    {\n        idAttribute: (value, parent, key) => {\n            return value._id\n        },\n\n    },\n\n);\n\n// schema for list of schedules\nexport const devicesSchema = [deviceSchema]\n\nexport const locationsSchema = new schema.Entity(\n    // key\n    'locations',\n    // definition\n    {},\n    // options\n    {\n        idAttribute: (value, parent, key) => {\n            return value._id.$oid\n        }\n    }\n)\n\n// Schema for events\nexport const eventsSchema = new schema.Entity(\n    // key\n    'events',\n    // definition\n    {},\n    // options\n    {\n        idAttribute: (value, parent, key) => {\n            return value._id.$oid\n        }\n    }\n)\n\n\n// process schema\nexport const processSchema = new schema.Entity(\n    // key\n    'processes',\n    // definition\n    {\n        //condition: conditionSchema\n    },\n    // options\n    {\n        idAttribute: (value, parent, key) => {\n            return value._id\n        },\n\n    },\n\n);\n\nexport const processesSchema = [processSchema]\n\n\n// sounds schema\nexport const soundSchema = new schema.Entity(\n    // key\n    'sounds',\n    // definition\n    {\n        //condition: conditionSchema\n    },\n    // options\n    {\n        idAttribute: (value, parent, key) => {\n            return value._id\n        },\n\n    },\n\n);\n\nexport const soundsSchema = [soundSchema]\n\n\n// sounds schema\nexport const taskAnalysisSchema = new schema.Entity(\n    // key\n    'taskAnalysis',\n    // definition\n    {\n        //condition: conditionSchema\n    },\n    // options\n    {\n        idAttribute: (value, parent, key) => {\n            return value.task_id\n        },\n\n    },\n\n);\n\nexport const tasksAnalysisSchema = [taskAnalysisSchema]\n\n\n// positions schema\nexport const positionSchema = new schema.Entity(\n    // key\n    'positions',\n    // definition\n    {\n        //condition: conditionSchema\n    },\n    // options\n    {\n        idAttribute: (value, parent, key) => {\n            return value._id\n        },\n\n    },\n\n);\n\nexport const positionsSchema = [positionSchema]\n\n\n// positions schema\nexport const stationSchema = new schema.Entity(\n    // key\n    'stations',\n    // definition\n    {},\n    // options\n    {\n        idAttribute: (value, parent, key) => {\n            return value._id\n        },\n\n    },\n\n);\n\nexport const stationsSchema = [stationSchema]\n\n// status schema\nexport const statusSchema = new schema.Entity(\n    // key\n    'status',\n    // definition\n    {\n        //condition: conditionSchema\n    },\n    // options\n    {\n        idAttribute: (value, parent, key) => {\n            return value._id.$oid\n        },\n\n        // processStrategy\n        processStrategy: (value, parent, key) => {\n            return value\n        }\n    },\n\n);\n\n// schema for list of status\nexport const statusesSchema = [statusSchema]","export const GET_MAPS = 'GET_MAPS'\nexport const GET_MAPS_STARTED = 'GET_MAPS_STARTED'\nexport const GET_MAPS_SUCCESS = 'GET_MAPS_SUCCESS'\nexport const GET_MAPS_FAILURE = 'GET_MAPS_FAILURE'\n\nexport const GET_MAP = 'GET_MAP'\nexport const GET_MAP_STARTED = 'GET_MAP_STARTED'\nexport const GET_MAP_SUCCESS = 'GET_MAP_SUCCESS'\nexport const GET_MAP_FAILURE = 'GET_MAP_FAILURE'\n\nexport const SET_MAP_ATTRIBUTES = 'SET_MAP_ATTRIBUTES'\nexport const SET_CURRENT_MAP = 'SET_CURRENT_MAP'\n","import { useState, useEffect } from 'react';\n\n// Usage\n// function App() {\n//   const size = useWindowSize();\n\n//   return (\n//     <div>\n//       {size.width}px / {size.height}px\n//     </div>\n//   );\n// }\n\n// Hook\nfunction useWindowSize() {\n    // Initialize state with undefined width/height so server and client renders match\n    // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n    const [windowSize, setWindowSize] = useState({\n        width: undefined,\n        height: undefined,\n    });\n\n    // let windowSize = {\n    //     width: undefined,\n    //     height: undefined,\n    // }\n\n    useEffect(() => {\n        // Handler to call on window resize\n        function handleResize() {\n            // Set window width/height to state\n            setWindowSize({\n                width: window.innerWidth,\n                height: window.innerHeight,\n            });\n\n            // windowSize = {\n            //     width: window.innerWidth,\n            //     height: window.innerHeight,\n            // }\n        }\n\n        // Add event listener\n        window.addEventListener(\"resize\", handleResize, {passive:true});\n\n        // Call handler right away so state gets updated with initial window size\n        handleResize();\n\n        // Remove event listener on cleanup\n        return () => window.removeEventListener(\"resize\", handleResize);\n    }, []); // Empty array ensures that effect is only run on mount\n\n    return windowSize;\n}\n\nexport default useWindowSize\n","export const GET_SETTINGS = 'GET_SETTINGS'\nexport const GET_SETTINGS_STARTED = 'GET_SETTINGS_STARTED'\nexport const GET_SETTINGS_SUCCESS = 'GET_SETTINGS_SUCCESS'\nexport const GET_SETTINGS_FAILURE = 'GET_SETTINGS_FAILURE'\n\nexport const POST_SETTINGS = 'POST_SETTINGS'\nexport const POST_SETTINGS_STARTED = 'POST_SETTINGS_STARTED'\nexport const POST_SETTINGS_SUCCESS = 'POST_SETTINGS_SUCCESS'\nexport const POST_SETTINGS_FAILURE = 'POST_SETTINGS_FAILURE'\n\nexport const PUT_SETTINGS = 'PUT_SETTINGS'\nexport const PUT_SETTINGS_STARTED = 'PUT_SETTINGS_STARTED'\nexport const PUT_SETTINGS_SUCCESS = 'PUT_SETTINGS_SUCCESS'\nexport const PUT_SETTINGS_FAILURE = 'PUT_SETTINGS_FAILURE'\n\nexport const DELETE_SETTINGS = 'DELETE_SETTINGS'\nexport const DELETE_SETTINGS_STARTED = 'DELETE_SETTINGS_STARTED'\nexport const DELETE_SETTINGS_SUCCESS = 'DELETE_SETTINGS_SUCCESS'\nexport const DELETE_SETTINGS_FAILURE = 'DELETE_SETTINGS_FAILURE'\n\nexport const POST_TASK_QUEUE = 'POST_TASK_QUEUE'\nexport const POST_TASK_QUEUE_STARTED = 'POST_TASK_QUEUE_STARTED'\nexport const POST_TASK_QUEUE_SUCCESS = 'POST_TASK_QUEUE_SUCCESS'\nexport const POST_TASK_QUEUE_FAILURE = 'POST_TASK_QUEUE_FAILURE'\nexport const DEVICE_ENABLED = 'DEVICE_ENABLED'\n","// status types\n\n// get\n// ***************\nexport const GET_STATUS = 'GET_STATUS'\nexport const GET_STATUS_STARTED = 'GET_STATUS_STARTED'\nexport const GET_STATUS_SUCCESS = 'GET_STATUS_SUCCESS'\nexport const GET_STATUS_FAILURE = 'GET_STATUS_FAILURE'\n// ~~~~~~~~~~~~~~~\n\n// post\n// ***************\nexport const POST_STATUS = 'POST_STATUS'\nexport const POST_STATUS_STARTED = 'POST_STATUS_STARTED'\nexport const POST_STATUS_SUCCESS = 'POST_STATUS_SUCCESS'\nexport const POST_STATUS_FAILURE = 'POST_STATUS_FAILURE'\n// ~~~~~~~~~~~~~~~\n","import axios from 'axios';\n// import * as log from 'loglevel';\n\nimport logger from '../logger'\n\nimport { apiIPAddress } from '../settings/settings'\n\n\nimport store from '../redux/store'\nconst token = store.getState().cognotoUserSession\n\nconst operator = 'devices'\nconst log = logger.getLogger('Api')\n\n\nexport async function getDevices() {\n    try {\n        const response = await axios({\n            method: 'get',\n            url: apiIPAddress() + operator,\n            headers: {\n                'X-API-Key': '123456',\n                'Access-Control-Allow-Origin': '*'\n            }\n            // token: token.username\n        });\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        return dataJson;     \n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n\n}\n\nexport async function deleteDevices(ID) {\n    try {\n        const response = await axios({\n            method: 'DELETE',\n            url: apiIPAddress() + operator + '/' + ID,\n            headers: {\n                'Accept': 'application/json',\n                'X-API-Key': '123456',\n            },\n        });\n\n        // Success 🎉\n        // log.debug('response',response);\n        // const data = response.data;\n        // const dataJson = JSON.parse(data)\n        return response;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}\n\nexport async function postDevices(devices) {\n    try {\n        const response = await axios({\n            method: 'POST',\n            url: apiIPAddress() + operator,\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n                'X-API-Key': '123456',\n            },\n            data: devices\n        });\n\n        // Success 🎉\n        // log.debug('response',response);\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        // log.debug('response data json',dataJson);\n\n\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}\n\nexport async function putDevices(device, ID) {\n    try {\n        const response = await axios({\n            method: 'PUT',\n            url: apiIPAddress() + operator + '/' + ID,\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'text/html',\n                'X-API-Key': '123456',\n            },\n            data: device\n        });\n\n        // Success 🎉\n        // log.debug('response',response);\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        return dataJson;\n\n\n    } catch (error) {\n\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}\n","import { normalize, schema } from 'normalizr';\n\nimport {\n    GET_DEVICES,\n    GET_DEVICES_STARTED,\n    GET_DEVICES_SUCCESS,\n    GET_DEVICES_FAILURE,\n\n    POST_DEVICES,\n    POST_DEVICES_STARTED,\n    POST_DEVICES_SUCCESS,\n    POST_DEVICES_FAILURE,\n\n    PUT_DEVICES,\n    PUT_DEVICES_STARTED,\n    PUT_DEVICES_SUCCESS,\n    PUT_DEVICES_FAILURE,\n\n    DELETE_DEVICES,\n    DELETE_DEVICES_STARTED,\n    DELETE_DEVICES_SUCCESS,\n    DELETE_DEVICES_FAILURE,\n} from '../types/devices_types'\n\nimport * as api from '../../api/devices_api'\nimport { devicesSchema } from '../../normalizr/schema';\n\n\nexport const getDevices = () => {\n    return async dispatch => {\n        function onStart() {\n            dispatch({ type: GET_DEVICES_STARTED });\n        }\n        function onSuccess(response) {\n            dispatch({ type: GET_DEVICES_SUCCESS, payload: response });\n            return response;\n        }\n        function onError(error) {\n            dispatch({ type: GET_DEVICES_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const devices = await api.getDevices();\n            devices.forEach((device, ind) => {\n                if (!(device.position === undefined)) {\n                    devices[ind].position.pos_x = device.position.x\n                    devices[ind].position.pos_y = device.position.y\n                }\n            })\n\n            // Uncomment when you want to make devices an object\n            const normalizedDevices = normalize(devices, devicesSchema);\n            return onSuccess(normalizedDevices.entities.devices)\n            // return onSuccess(devices)\n        } catch (error) {\n            return onError(error)\n        }\n    }\n}\nexport const postDevices = (devices) => {\n    return async dispatch => {\n        function onStart() {\n            dispatch({ type: POST_DEVICES_STARTED });\n        }\n        function onSuccess(response) {\n            dispatch({ type: POST_DEVICES_SUCCESS, payload: response });\n            return response;\n        }\n        function onError(error) {\n            dispatch({ type: POST_DEVICES_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const newDevices = await api.postDevices(devices);\n            return onSuccess(newDevices)\n        } catch (error) {\n            return onError(error)\n        }\n    }\n}\nexport const putDevices = (device, ID) => {\n    return async dispatch => {\n        function onStart() {\n            dispatch({ type: PUT_DEVICES_STARTED });\n        }\n        function onSuccess(response) {\n            dispatch({ type: PUT_DEVICES_SUCCESS, payload: response });\n            return response;\n        }\n        function onError(error) {\n            dispatch({ type: PUT_DEVICES_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const updateDevices = await api.putDevices(device, ID);\n            return onSuccess(updateDevices)\n        } catch (error) {\n            return onError(error)\n        }\n    }\n}\nexport const deleteDevices = (ID) => {\n    return async dispatch => {\n        function onStart() {\n            dispatch({ type: DELETE_DEVICES_STARTED });\n        }\n        function onSuccess(response) {\n            dispatch({ type: DELETE_DEVICES_SUCCESS, payload: ID });\n            return response;\n        }\n        function onError(error) {\n            dispatch({ type: DELETE_DEVICES_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const removeDevices = await api.deleteDevices(ID);\n            return onSuccess(ID)\n        } catch (error) {\n            return onError(error)\n        }\n    }\n}\n\nexport const updateDevices = (devices, d3) => {\n    return { type: 'UPDATE_DEVICES', payload: { devices, d3 } }\n}\n\nexport const setSelectedDevice = (device) => {\n    return { type: 'SET_SELECTED_DEVICE', payload: device }\n}\n","export const GET_NOTIFICATIONS = 'GET_NOTIFICATIONS'\nexport const GET_NOTIFICATIONS_STARTED = 'GET_NOTIFICATIONS_STARTED'\nexport const GET_NOTIFICATIONS_SUCCESS = 'GET_NOTIFICATIONS_SUCCESS'\nexport const GET_NOTIFICATIONS_FAILURE = 'GET_NOTIFICATIONS_FAILURE'\n\nexport const POST_NOTIFICATIONS = 'POST_NOTIFICATIONS'\nexport const POST_NOTIFICATIONS_STARTED = 'POST_NOTIFICATIONS_STARTED'\nexport const POST_NOTIFICATIONS_SUCCESS = 'POST_NOTIFICATIONS_SUCCESS'\nexport const POST_NOTIFICATIONS_FAILURE = 'POST_NOTIFICATIONS_FAILURE'\n\nexport const PUT_NOTIFICATION = 'PUT_NOTIFICATIONS'\nexport const PUT_NOTIFICATION_STARTED = 'PUT_NOTIFICATIONS_STARTED'\nexport const PUT_NOTIFICATION_SUCCESS = 'PUT_NOTIFICATIONS_SUCCESS'\nexport const PUT_NOTIFICATION_FAILURE = 'PUT_NOTIFICATIONS_FAILURE'\n\nexport const DELETE_NOTIFICATIONS = 'DELETE_NOTIFICATIONS'\nexport const DELETE_NOTIFICATIONS_STARTED = 'DELETE_NOTIFICATIONS_STARTED'\nexport const DELETE_NOTIFICATIONS_SUCCESS = 'DELETE_NOTIFICATIONS_SUCCESS'\nexport const DELETE_NOTIFICATIONS_FAILURE = 'DELETE_NOTIFICATIONS_FAILURE'\n\nexport const DELETE_NOTIFICATION = 'DELETE_NOTIFICATIONS'\nexport const DELETE_NOTIFICATION_STARTED = 'DELETE_NOTIFICATIONS_STARTED'\nexport const DELETE_NOTIFICATION_SUCCESS = 'DELETE_NOTIFICATIONS_SUCCESS'\nexport const DELETE_NOTIFICATION_FAILURE = 'DELETE_NOTIFICATIONS_FAILURE'\n\n\nexport const TOGGLE_NOTIFICATION_TASK_QUEUE = 'TOGGLE_NOTIFICATION_TASK_QUEUE'\n","export const GET_REFRESH_TOKEN = 'GET_REFRESH_TOKEN'\nexport const GET_REFRESH_TOKEN_STARTED = 'GET_REFRESH_TOKEN_STARTED'\nexport const GET_REFRESH_TOKEN_SUCCESS = 'GET_REFRESH_TOKEN_SUCCESS'\nexport const GET_REFRESH_TOKEN_FAILURE = 'GET_REFRESH_TOKEN_FAILURE'\n\nexport const POST_REFRESH_TOKEN = 'POST_REFRESH_TOKEN'\nexport const POST_REFRESH_TOKEN_STARTED = 'POST_REFRESH_TOKEN_STARTED'\nexport const POST_REFRESH_TOKEN_SUCCESS = 'POST_REFRESH_TOKEN_SUCCESS'\nexport const POST_REFRESH_TOKEN_FAILURE = 'POST_REFRESH_TOKEN_FAILURE'","export const hexToRGBA = (hex, alpha) => {\n  const RR = parseInt(hex.slice(1, 3), 16);\n  const GG = parseInt(hex.slice(3, 5), 16);\n  const BB = parseInt(hex.slice(5, 7), 16);\n\n  return `rgba(${RR}, ${GG}, ${BB}${alpha && `, ${alpha}`})`;\n};\n\nexport function LightenDarkenColor(col,amt) {\n    var usePound = false;\n    if ( col[0] === \"#\" ) {\n        col = col.slice(1);\n        usePound = true;\n    }\n\n    var num = parseInt(col,16);\n\n    var r = (num >> 16) + amt;\n\n    if ( r > 255 ) r = 255;\n    else if  (r < 0) r = 0;\n\n    var b = ((num >> 8) & 0x00FF) + amt;\n\n    if ( b > 255 ) b = 255;\n    else if  (b < 0) b = 0;\n\n    var g = (num & 0x0000FF) + amt;\n\n    if ( g > 255 ) g = 255;\n    else if  ( g < 0 ) g = 0;\n\n    return (usePound?\"#\":\"\") + (g | (b << 8) | (r << 16)).toString(16);\n}\n\n// export function pSBC(p,c0,c1,l){\n//     let r,g,b,P,f,t,h,i=parseInt,m=Math.round,a=typeof(c1)==\"string\";\n//     if(typeof(p)!=\"number\"||p<-1||p>1||typeof(c0)!=\"string\"||(c0[0]!='r'&&c0[0]!='#')||(c1&&!a))return null;\n//     if(!this.pSBCr)this.pSBCr=(d)=>{\n//         let n=d.length,x={};\n//         if(n>9){\n//             [r,g,b,a]=d=d.split(\",\"),n=d.length;\n//             if(n<3||n>4)return null;\n//             x.r=i(r[3]==\"a\"?r.slice(5):r.slice(4)),x.g=i(g),x.b=i(b),x.a=a?parseFloat(a):-1\n//         }else{\n//             if(n==8||n==6||n<4)return null;\n//             if(n<6)d=\"#\"+d[1]+d[1]+d[2]+d[2]+d[3]+d[3]+(n>4?d[4]+d[4]:\"\");\n//             d=i(d.slice(1),16);\n//             if(n==9||n==5)x.r=d>>24&255,x.g=d>>16&255,x.b=d>>8&255,x.a=m((d&255)/0.255)/1000;\n//             else x.r=d>>16,x.g=d>>8&255,x.b=d&255,x.a=-1\n//         }return x};\n//     h=c0.length>9,h=a?c1.length>9?true:c1==\"c\"?!h:false:h,f=this.pSBCr(c0),P=p<0,t=c1&&c1!=\"c\"?this.pSBCr(c1):P?{r:0,g:0,b:0,a:-1}:{r:255,g:255,b:255,a:-1},p=P?p*-1:p,P=1-p;\n//     if(!f||!t)return null;\n//     if(l)r=m(P*f.r+p*t.r),g=m(P*f.g+p*t.g),b=m(P*f.b+p*t.b);\n//     else r=m((P*f.r**2+p*t.r**2)**0.5),g=m((P*f.g**2+p*t.g**2)**0.5),b=m((P*f.b**2+p*t.b**2)**0.5);\n//     a=f.a,t=t.a,f=a>=0||t>=0,a=f?a<0?t:t<0?a:a*P+t*p:0;\n//     if(h)return\"rgb\"+(f?\"a(\":\"(\")+r+\",\"+g+\",\"+b+(f?\",\"+m(a*1000)/1000:\"\")+\")\";\n//     else return\"#\"+(4294967296+r*16777216+g*65536+b*256+(f?m(a*255):0)).toString(16).slice(1,f?undefined:-2)\n// }\n\nexport const RGB_Linear_Blend=(p,c0,c1)=>{\n    var i=parseInt,r=Math.round,P=1-p,[a,b,c,d]=c0.split(\",\"),[e,f,g,h]=c1.split(\",\"),x=d||h,j=x?\",\"+(!d?h:!h?d:r((parseFloat(d)*P+parseFloat(h)*p)*1000)/1000+\")\"):\")\";\n    return\"rgb\"+(x?\"a(\":\"(\")+r(i(a[3]===\"a\"?a.slice(5):a.slice(4))*P+i(e[3]==\"a\"?e.slice(5):e.slice(4))*p)+\",\"+r(i(b)*P+i(f)*p)+\",\"+r(i(c)*P+i(g)*p)+j;\n}\n\nexport const RGB_Linear_Shade=(p,c)=>{\n    var i=parseInt,r=Math.round,[a,b,c,d]=c.split(\",\"),P=p<0,t=P?0:255*p,P=P?1+p:1-p;\n    return\"rgb\"+(d?\"a(\":\"(\")+r(i(a[3]===\"a\"?a.slice(5):a.slice(4))*P+t)+\",\"+r(i(b)*P+t)+\",\"+r(i(c)*P+t)+(d?\",\"+d:\")\");\n}\n\nexport const RGB_Log_Blend=(p,c0,c1)=>{\n    var i=parseInt,r=Math.round,P=1-p,[a,b,c,d]=c0.split(\",\"),[e,f,g,h]=c1.split(\",\"),x=d||h,j=x?\",\"+(!d?h:!h?d:r((parseFloat(d)*P+parseFloat(h)*p)*1000)/1000+\")\"):\")\";\n    return\"rgb\"+(x?\"a(\":\"(\")+r((P*i(a[3]===\"a\"?a.slice(5):a.slice(4))**2+p*i(e[3]==\"a\"?e.slice(5):e.slice(4))**2)**0.5)+\",\"+r((P*i(b)**2+p*i(f)**2)**0.5)+\",\"+r((P*i(c)**2+p*i(g)**2)**0.5)+j;\n}\n\nexport const RGB_Log_Shade=(p,c)=>{\n    var i=parseInt,r=Math.round,[a,b,c,d]=c.split(\",\"),P=p<0,t=P?0:p*255**2,P=P?1+p:1-p;\n    return\"rgb\"+(d?\"a(\":\"(\")+r((P*i(a[3]===\"a\"?a.slice(5):a.slice(4))**2+t)**0.5)+\",\"+r((P*i(b)**2+t)**0.5)+\",\"+r((P*i(c)**2+t)**0.5)+(d?\",\"+d:\")\");\n}\n","import React from 'react'\n\nimport { useDispatch, useSelector } from 'react-redux'\n\n// Import utils\nimport { deepCopy } from './utils'\nimport { convertRealToD3 } from './map_utils'\n\n// Import Store\nimport store from '../../redux/store/index'\n\n\n/**\n * All of these coordinates have been calc by adjusting them on map with chrome dev tools\n * @param {*} location\n * @param {*} rd3tClassName\n * @param {*} d3\n */\n\n\nexport const locationsSortedAlphabetically = (locations) => {\n\n    const locationsCopy = deepCopy(locations)\n\n    locationsCopy.sort((a, b) => {\n        const aName = a.name\n        const bName = b.name\n\n        if (aName < bName) return -1\n        if (aName > bName) return 1\n        return 0\n    })\n\n    return locationsCopy\n}\n\nexport const editing = () => {\n    const editingPosition = store.getState().positionsReducer.editingPosition\n    const editingStation = store.getState().stationsReducer.editingStation\n\n    return !!editingStation ? editingStation : editingPosition\n\n}\n\n\n/**\n * This function compares existing vs incoming locations\n * \n * If the incoming location exists in existing locations then use the incoming location info but update the x and y from existing\n * Using x and y from existing because those values correlate with the local map's d3 state\n * \n * If an incoming location is not in existing locations that means it was added by another client\n * Make sure to update the new locations x and y values to match the local map's d3\n * \n * @param {object} existingStations \n * @param {object} incomingStations \n */\nexport const compareExistingVsIncomingLocations = (incomingLocations, existingLocations, d3) => {\n\n    Object.values(existingLocations).forEach(existingLocation => {\n\n        // If the location exists in the backend and frontend, take the new locations, but assign local x and y\n        if (existingLocation._id in incomingLocations) {\n            Object.assign(incomingLocations[existingLocation._id], { x: existingLocation.x, y: existingLocation.y })\n        }\n\n        // This was an attempt to fix incoming locations that had their position changed\n        // Didn't work\n        // But that should be obvious\n        // Cause if it did\n        // It wouldnt be commented\n        // Duh.\n        // if (existingLocation._id in incomingLocations && (incomingLocations[existingLocation._id].pos_x !== existingLocation.pos_x || incomingLocations[existingLocation._id].pos_y !== existingLocation.pos_y)) {\n        //     let x, y\n        //     [x, y] = convertRealToD3([incomingLocations[existingLocation._id].pos_x, incomingLocations[existingLocation._id].pos_y], d3)\n\n        //     Object.assign(incomingLocations[existingLocation._id], { x: x, y: y })\n        // }\n\n\n        // If the existing location is  new then make sure to pass it in\n        else if (existingLocation.new == true) {\n            incomingLocations[existingLocation._id] = existingLocation\n        }\n\n    })\n\n    // Compare incoming vs existing\n    Object.values(incomingLocations).forEach(incomingLocation => {\n\n        // Handles deleted Positions on the backend\n        if (!!incomingLocation.change_key && incomingLocation.change_key === 'deleted') {\n            delete incomingLocations[incomingLocation._id]\n        }\n\n        // If the incoming location is not in existing location, its a new location\n        if (!incomingLocation._id in existingLocations) {\n            let x, y\n            // If it's a new station, make sure to update it's coords to d3 coords on the local map\n            [x, y] = convertRealToD3([incomingLocation.pos_x, incomingLocation.pos_y], d3)\n            incomingLocation = {\n                ...incomingLocation,\n                x: x,\n                y: y,\n            }\n\n        }\n    })\n\n    return incomingLocations\n}","export const getMessageFromError = (err) => {\n    if(err) {\n\n        // err is array\n        if( Array.isArray(err) ) {\n            const firstErr = err[0] // get first item from arr and call recursively\n            return getMessageFromError(firstErr)\n\n        }\n\n        // err is object\n        if(typeof(err) === \"object\") {\n            const firstErr = Object.values(err) // convert to arr and call recursively\n            return getMessageFromError(firstErr)\n        }\n\n        // err is string - return\n        if(typeof(err) === \"string\") {\n            return err;\n        }\n    }\n\n    // default message\n    return \"Error.\"\n}","import log from 'loglevel';\n// import remote from 'loglevel-plugin-remote';\n\n\n/*\n\nNote on log levels:\n\nTrace - Only when I would be \"tracing\" the code and trying to find one part of a function specifically.\n\nDebug - Information that is diagnostically helpful to people more than just developers (IT, sysadmins, etc.).\n\nlog - Equivalent to Debug\n\nInfo - Generally useful information to log (service start/stop, configuration assumptions, etc). Info I want to always have available but usually don't care about under normal circumstances. This is my out-of-the-box config level.\n\nWarn - Anything that can potentially cause application oddities, but for which I am automatically recovering. (Such as switching from a primary to backup server, retrying an operation, missing secondary data, etc.)\n\nError - Any error which is fatal to the operation, but not the service or application (can't open a required file, missing data, etc.). These errors will force user (administrator, or direct user) intervention. These are usually reserved (in my apps) for incorrect connection strings, missing services, etc.\n\n*/\n\n/* uncomment for remote logging\nconst customJSON = log => ({\n   msg: log.message,\n   level: log.level.label,\n   stacktrace: log.stacktrace\n});\n\n\nremote.apply(log, { format: customJSON, url: '/logger' });\n\n*/\n\n/*\nObject.defineProperty(log, \"category\", {\n  value: \"root\",\n  writable: true\n})\n*/\n\nconst getLogger = log.getLogger;\n\nlog.getLogger = function getLoggerAndSetCategory(name, category) {\n    const logger = getLogger(name);\n\n    if(category) {\n        Object.defineProperty(logger, \"category\", {\n          value: category,\n          writable: true\n        })\n    }\n\n    return logger;\n};\n\nlog.getCategoryLoggers = function(category) {\n  const loggers = Object.values(log.getLoggers());\n  const categoryLoggers = [];\n\n  loggers.forEach((logger, index) => {\n    if(logger.category == category) categoryLoggers.push(logger);\n  });\n\n  return categoryLoggers;\n};\n\n// var originalFactory = log.methodFactory;\n\n// log.methodFactory = function (methodName, logLevel, loggerName) {\n//     var rawMethod = originalFactory(methodName, logLevel, loggerName);\n//\n//     return function (message) {\n//         rawMethod(\"Newsflash: \" + message);\n//     };\n// };\n// log.setLevel(log.getLevel());\n\nexport default log;\n\n\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n    width: 100%;\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    position: relative;\n\n    overscroll-behavior: contain;\n`\n\nexport const ContentContainer = styled.div`\n    width: 100%;\n    height: 100%;\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n\n    overscroll-behavior: contain;\n\n`\n\nexport const HeaderContainer = styled.div`\n`\n\nexport const BodyContainer = styled.div`\n    position: relative;\n\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    overflow: auto;\n    \n`\n","//This API is used to handle calls to the local storage\n\nimport logger from '../logger'\nimport {\n    BrowserView,\n    MobileView,\n    isBrowser,\n    isMobile\n} from \"react-device-detect\";\nimport {defaultLocalSettings} from \"../constants/local_settings_constants\";\n\nconst log = logger.getLogger('LocalStorage')\n\nexport async function getLoggers() {\n\n    // retrieve data from localStorage\n    // currently stored under the key \"logger-config-123\"\n    // this key could be set to a user id to save settings for a specific user\n    var loggerConfig = localStorage.getItem(\"logger-config-123\");\n    if (loggerConfig) {\n        loggerConfig = JSON.parse(loggerConfig);\n        return loggerConfig;\n    }\n\n}\n\nexport async function postLoggers(settings) {\n\n    const loggerConfig = localStorage.setItem(\"logger-config-123\", JSON.stringify(settings));\n    return loggerConfig;\n}\n\nexport const postLocalSettings = async (settings) => {\n\n    console.log(settings)\n\n    // NOTE: localStorage.setItem returns undefined, so can't use this return value for anything\n    const localSettings = localStorage.setItem(\"local-settings-config\", JSON.stringify(settings))\n    return localSettings\n}\n\nexport const deleteLocalSettings = async () => {\n    localStorage.removeItem(\"local-settings-config\")\n    \n}\n\nexport const getLocalSettings = async () => {\n    let localSettings = localStorage.getItem(\"local-settings-config\");\n\n    if (localSettings !== null) {\n\n        localSettings = JSON.parse(localSettings);\n\n        console.log(localSettings)\n        return localSettings;\n    }\n    // Posts settigns to the backend if there's nothing there\n    else {\n        const settings = await postLocalSettings(defaultLocalSettings)\n        return defaultLocalSettings\n    }\n}\n","// These actions are used for local API calls to local storage\n\nimport {\n  GET_LOGGERS,\n  GET_LOGGERS_STARTED,\n  GET_LOGGERS_SUCCESS,\n  GET_LOGGERS_FAILURE,\n\n  POST_LOGGERS,\n  POST_LOGGERS_STARTED,\n  POST_LOGGERS_SUCCESS,\n  POST_LOGGERS_FAILURE,\n\n  GET_LOCAL_SETTINGS,\n  GET_LOCAL_SETTINGS_STARTED,\n  GET_LOCAL_SETTINGS_SUCCESS,\n  GET_LOCAL_SETTINGS_FAILURE,\n\n  POST_LOCAL_SETTINGS,\n  POST_LOCAL_SETTINGS_STARTED,\n  POST_LOCAL_SETTINGS_SUCCESS,\n  POST_LOCAL_SETTINGS_FAILURE,\n\n  STOP_API_CALLS,\n\n} from '../types/local_types';\n\nimport * as api from '../../api/local_api';\n\n// import logger\nimport log from '../../logger.js';\n\nconst logger = log.getLogger(\"Actions\", \"Redux\");\n\nexport const getLoggers = () => {\n    return async dispatch => {\n        function onStart() {\n            dispatch({ type: GET_LOGGERS_STARTED });\n          }\n          function onSuccess(response) {\n            dispatch({ type: GET_LOGGERS_SUCCESS, payload: response });\n            return response;\n          }\n          function onError(error) {\n            dispatch({ type: GET_LOGGERS_FAILURE, payload: error });\n            return error;\n          }\n\n        try {\n            onStart();\n            const loggers = await api.getLoggers();\n\n            return onSuccess(loggers)\n        } catch(error) {\n            return onError(error)\n        }\n    }\n}\nexport const postLoggers =  (loggers, loaded) => {\n  return async dispatch => {\n        async function onStart() {\n          dispatch({ type: POST_LOGGERS_STARTED });\n        }\n        async function onSuccess(response) {\n          dispatch({ type: POST_LOGGERS_SUCCESS, payload: loggers });\n          return response;\n        }\n        async function onError(error) {\n          dispatch({ type: POST_LOGGERS_FAILURE, payload: error });\n          return error;\n        }\n\n      try {\n          onStart();\n\n          if(loaded) {\n              const newLoggers = await api.postLoggers(loggers);\n              return await onSuccess(newLoggers);\n          } else {\n              return await onSuccess(loggers);\n          }\n\n\n      } catch(error) {\n          return onError(error)\n      }\n  }\n}\n\nexport const getLocalSettings = () => {\n  return async dispatch => {\n      function onStart() {\n          dispatch({ type: GET_LOCAL_SETTINGS_STARTED });\n        }\n        function onSuccess(response) {\n          dispatch({ type: GET_LOCAL_SETTINGS_SUCCESS, payload: response });\n          return response;\n        }\n        function onError(error) {\n          dispatch({ type: GET_LOCAL_SETTINGS_FAILURE, payload: error });\n          return error;\n        }\n\n      try {\n          onStart();\n          const localSettings = await api.getLocalSettings();\n          return onSuccess(localSettings)\n      } catch(error) {\n          return onError(error)\n      }\n  }\n}\n\nexport const postLocalSettings =  (settings) => {\n  return async dispatch => {\n        async function onStart() {\n          dispatch({ type: POST_LOCAL_SETTINGS_STARTED });\n        }\n        async function onSuccess(response) {\n          dispatch({ type: POST_LOCAL_SETTINGS_SUCCESS, payload: settings });\n          return response;\n        }\n        async function onError(error) {\n          dispatch({ type: POST_LOCAL_SETTINGS_FAILURE, payload: error });\n          return error;\n        }\n\n      try {\n          onStart();\n          const localSettings = await api.postLocalSettings(settings);\n          return await onSuccess(localSettings)\n      } catch(error) {\n          return onError(error)\n      }\n  }\n}\n\nexport const stopAPICalls = (bool) => {\n    return { type: STOP_API_CALLS, payload: bool }\n}\n","import axios from 'axios';\n\nimport {apiIPAddress} from '../settings/settings';\n\nimport log from '../logger';\n\nimport store from '../redux/store'\nconst token = store.getState().cognotoUserSession\n\nconst logger = log.getLogger('Map_Api', \"Map\");\n\nconst operator = 'site_maps';\n\nexport async function getMaps() {\n  try {\n    const response = await axios({\n      method: 'GET',\n      url: apiIPAddress() + operator,\n      headers: {\n        'X-API-Key': '123456',\n        'Access-Control-Allow-Origin': '*'\n    }\n    });\n\n    // Success 🎉\n    // log.debug('res',response);\n\n    const data = response.data;\n    const dataJson = JSON.parse(data);\n\n    return dataJson;\n\n\n} catch (error) {\n\n    // Error 😨\n    if (error.response) {\n        /*\n         * The request was made and the server responded with a\n         * status code that falls out of the range of 2xx\n         */\n        logger.debug('error.response.data', error.response.data);\n        logger.debug('error.response.status',error.response.status);\n        logger.debug('error.response.headers',error.response.headers);\n    } else if (error.request) {\n        /*\n         * The request was made but no response was received, `error.request`\n         * is an instance of XMLHttpRequest in the browser and an instance\n         * of http.ClientRequest in Node.js\n         */\n        logger.debug('error.request', error.request);\n    } else {\n        // Something happened in setting up the request and triggered an Error\n        logger.debug('error.message', error.message);\n    }\n\n    logger.debug('error', error);\n    throw error;\n  }\n\n\n}\n\nexport async function getMap(map_id) {\n  try {\n    const response = await axios({\n      method: 'GET',\n      url: apiIPAddress() + operator + '/' + map_id,\n      headers: {\n        'Accept': 'application/json',\n        'X-API-Key': '123456',\n      },\n  });\n\n  // Success 🎉\n  logger.debug('getMap: response',response);\n\n  const data = response.data;\n  const dataJson = JSON.parse(data)\n  return dataJson;\n\n\n  } catch (error) {\n\n      // Error 😨\n      if (error.response) {\n          /*\n           * The request was made and the server responded with a\n           * status code that falls out of the range of 2xx\n           */\n          logger.debug('error.response.data', error.response.data);\n          logger.debug('error.response.status',error.response.status);\n          logger.debug('error.response.headers',error.response.headers);\n      } else if (error.request) {\n          /*\n           * The request was made but no response was received, `error.request`\n           * is an instance of XMLHttpRequest in the browser and an instance\n           * of http.ClientRequest in Node.js\n           */\n          logger.debug('error.request', error.request);\n      } else {\n          // Something happened in setting up the request and triggered an Error\n          logger.debug('error.message', error.message);\n      }\n      logger.debug('error', error);\n    }\n}\n","import {\n    GET_MAPS,\n    GET_MAPS_STARTED,\n    GET_MAPS_SUCCESS,\n    GET_MAPS_FAILURE,\n\n    GET_MAP,\n    GET_MAP_STARTED,\n    GET_MAP_SUCCESS,\n    GET_MAP_FAILURE,\n\n    SET_MAP_ATTRIBUTES,\n    SET_CURRENT_MAP,\n    SET_MAP_ZOOM\n} from '../types/map_types'\n\n\nimport * as api from '../../api/map_api'\n\n// get all maps\n// ******************************\nexport const getMaps = () => {\n  return async dispatch => {\n\n    function onStart() {\n      dispatch({ type: GET_MAPS_STARTED });\n    }\n    function onSuccess(response) {\n      dispatch({ type: GET_MAPS_SUCCESS, payload: response });\n      return response;\n    }\n    function onError(error) {\n      dispatch({ type: GET_MAPS_FAILURE, payload: error });\n      return error;\n    }\n\n    try {\n      onStart();\n      const maps = await api.getMaps();\n      return onSuccess(maps);\n    } catch (error) {\n      return onError(error);\n    }\n  };\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// get map details\n// ******************************\nexport const getMap = (map_id) => {\n    return async dispatch => {\n\n      function onStart() {\n        dispatch({ type: GET_MAP_STARTED });\n      }\n      function onSuccess(response) {\n        dispatch({ type: GET_MAP_SUCCESS, payload: response });\n        return response;\n      }\n      function onError(error) {\n        dispatch({ type: GET_MAP_FAILURE, payload: error });\n        return error;\n      }\n\n      try {\n        onStart();\n        const map = await api.getMap(map_id);\n        return onSuccess(map);\n      } catch (error) {\n        return onError(error);\n      }\n    };\n  };\n  // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// update map details\n// ******************************\n\nexport const setMapAttributes = (attr) => {\n    return dispatch => {\n      try {\n        dispatch({ type: SET_MAP_ATTRIBUTES, payload: {attr: attr}})\n        return true\n      } catch (error) {\n        return error\n      }\n    }\n}\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// update map details\n// ******************************\n\nexport const setCurrentMap = (map) => {\n    return dispatch => {\n        try {\n            dispatch({ type: SET_CURRENT_MAP, payload: map})\n            return true\n        } catch (error) {\n            return error\n        }\n    }\n}\n\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n","import axios from 'axios';\nimport * as log from 'loglevel';\n\nimport {apiIPAddress} from '../settings/settings'\nconst operator = 'objects'\n\nconst logger = log.getLogger('Objects_Api', \"Object\");\n\nexport async function getObjects() {\n  try {\n    const response = await axios({\n      method: 'get',\n      url: apiIPAddress() + operator,\n      headers: {\n        'X-API-Key': '123456',\n        'Access-Control-Allow-Origin': '*'\n    }\n    });\n    // Success 🎉\n    const data = response.data;\n    const dataJson = JSON.parse(data)\n    return dataJson;\n\n\n} catch (error) {\n\n    // Error 😨\n    if (error.response) {\n        /*\n         * The request was made and the server responded with a\n         * status code that falls out of the range of 2xx\n         */\n        log.debug('error.response.data', error.response.data);\n        log.debug('error.response.status',error.response.status);\n        log.debug('error.response.headers',error.response.headers);\n    } else if (error.request) {\n        /*\n         * The request was made but no response was received, `error.request`\n         * is an instance of XMLHttpRequest in the browser and an instance\n         * of http.ClientRequest in Node.js\n         */\n        log.debug('error.request', error.request);\n    } else {\n        // Something happened in setting up the request and triggered an Error\n        log.debug('error.message', error.message);\n    }\n    throw error\n  }\n\n\n}\n\nexport async function deleteObject(ID) {\n  try {\n    const response = await axios({\n      method: 'DELETE',\n      url: apiIPAddress() + operator + '/' + ID,\n      headers: {\n        'Accept': 'application/json',\n        'X-API-Key': '123456',\n        'Access-Control-Allow-Origin': '*'\n      },\n  });\n\n  // Success 🎉\n  const data = response.data;\n  const dataJson = JSON.parse(data)\n\n  } catch (error) {\n\n      // Error 😨\n      if (error.response) {\n          /*\n           * The request was made and the server responded with a\n           * status code that falls out of the range of 2xx\n           */\n          log.debug('error.response.data', error.response.data);\n          log.debug('error.response.status',error.response.status);\n          log.debug('error.response.headers',error.response.headers);\n      } else if (error.request) {\n          /*\n           * The request was made but no response was received, `error.request`\n           * is an instance of XMLHttpRequest in the browser and an instance\n           * of http.ClientRequest in Node.js\n           */\n          log.debug('error.request', error.request);\n      } else {\n          // Something happened in setting up the request and triggered an Error\n          log.debug('error.message', error.message);\n      }\n      log.debug('error', error);\n    }\n} \n\n\nexport async function postObject(object) {\n\n  console.log(\"postObject object\", object)\n\n  try {\n    const response = await axios({  \n      method: 'POST',\n      url: apiIPAddress() + operator,\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'X-API-Key': '123456',\n        'Access-Control-Allow-Origin': '*'\n      },\n      data: JSON.stringify(object)\n  });\n\n  // Success 🎉\n  const data = response.data;\n  const dataJson = JSON.parse(data)\n\n  return dataJson;\n\n\n  } catch (error) {\n\n      // Error 😨\n      if (error.response) {\n          /*\n           * The request was made and the server responded with a\n           * status code that falls out of the range of 2xx\n           */\n          log.debug('error.response.data', error.response.data);\n          log.debug('error.response.status',error.response.status);\n          log.debug('error.response.headers',error.response.headers);\n      } else if (error.request) {\n          /*\n           * The request was made but no response was received, `error.request`\n           * is an instance of XMLHttpRequest in the browser and an instance\n           * of http.ClientRequest in Node.js\n           */\n          log.debug('error.request', error.request);\n      } else {\n          // Something happened in setting up the request and triggered an Error\n          log.debug('error.message', error.message);\n      }\n      log.debug('error', error);\n    }\n}\n\nexport async function putObject(object, ID) {\n    console.log(\"putObject object\", object)\n  try {\n    const response = await axios({\n      method: 'PUT',\n      url: apiIPAddress() + operator + '/' + ID,\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'text/html',\n        'X-API-Key': '123456',\n        'Access-Control-Allow-Origin': '*'\n      },\n      data: object\n  });\n\n  // Success 🎉\n  const data = response.data;\n  const dataJson = JSON.parse(data)\n  \n  return dataJson;\n\n\n  } catch (error) {\n\n      // Error 😨\n      if (error.response) {\n          /*\n           * The request was made and the server responded with a\n           * status code that falls out of the range of 2xx\n           */\n          log.debug('error.response.data', error.response.data);\n          log.debug('error.response.status',error.response.status);\n          log.debug('error.response.headers',error.response.headers);\n      } else if (error.request) {\n          /*\n           * The request was made but no response was received, `error.request`\n           * is an instance of XMLHttpRequest in the browser and an instance\n           * of http.ClientRequest in Node.js\n           */\n          log.debug('error.request', error.request);\n      } else {\n          // Something happened in setting up the request and triggered an Error\n          log.debug('error.message', error.message);\n      }\n      log.debug('error', error);\n    }\n}\n\n","import {\n    GET_OBJECTS,\n    GET_OBJECTS_STARTED,\n    GET_OBJECTS_SUCCESS,\n    GET_OBJECTS_FAILURE,\n\n    GET_OBJECT,\n    GET_OBJECT_STARTED,\n    GET_OBJECT_SUCCESS,\n    GET_OBJECT_FAILURE,\n\n    POST_OBJECT,\n    POST_OBJECT_STARTED,\n    POST_OBJECT_SUCCESS,\n    POST_OBJECT_FAILURE,\n\n    PUT_OBJECT,\n    PUT_OBJECT_STARTED,\n    PUT_OBJECT_SUCCESS,\n    PUT_OBJECT_FAILURE,\n\n    DELETE_OBJECT,\n    DELETE_OBJECT_STARTED,\n    DELETE_OBJECT_SUCCESS,\n    DELETE_OBJECT_FAILURE,\n\n    ADD_OBJECT,\n    UPDATE_OBJECT,\n    UPDATE_OBJECTS,\n    REMOVE_OBJECT,\n    SET_OBJECT_ATTRIBUTES,\n    VALIDATE_OBJECT,\n    SELECT_OBJECT,\n    SET_SELECTED_OBJECT,\n    DESELECT_OBJECT,\n} from '../types/objects_types'\n\nimport { mapArrayToObjById, deepCopy } from '../../methods/utils/utils';\nimport { formatScheduleItem } from '../../methods/utils/data_utils';\n\nimport * as api from '../../api/objects_api'\n\n// get\n// ******************************\nexport const getObjects = () => {\n    return async dispatch => {\n\n        function onStart() {\n            dispatch({ type: GET_OBJECTS_STARTED });\n        }\n        function onSuccess(response) {\n            dispatch({ type: GET_OBJECTS_SUCCESS, payload: response });\n            return response;\n        }\n        function onError(error) {\n            dispatch({ type: GET_OBJECTS_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const objects = await api.getObjects();\n\n            const normalizedObjects = {}\n            objects.map((object) => {\n                normalizedObjects[object._id] = object\n            })\n\n            return onSuccess(normalizedObjects);\n        } catch (error) {\n            return onError(error);\n        }\n    };\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// get object details\n// ******************************\n// export const getObject = (object_id) => {\n//   return async dispatch => {\n\n//     function onStart() {\n//       dispatch({ type: GET_OBJECT_STARTED });\n//     }\n//     function onSuccess(response) {\n//       dispatch({ type: GET_OBJECT_SUCCESS, payload: response });\n//       return response;\n//     }\n//     function onError(error) {\n//       dispatch({ type: GET_OBJECT_FAILURE, payload: error });\n//       return error;\n//     }\n\n//     try {\n//       onStart();\n//       const object_details = await api.getObject(object_id);\n//       return onSuccess(object_details);\n//     } catch (error) {\n//       return onError(error);\n//     }\n//   };\n// };\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// post\n// ******************************\nexport const postObject = (object) => {\n    return async dispatch => {\n\n        function onStart() {\n            dispatch({ type: POST_OBJECT_STARTED });\n        }\n        function onSuccess(newObject) {\n            dispatch({ type: POST_OBJECT_SUCCESS, payload: newObject });\n            return newObject;\n        }\n        function onError(error) {\n            dispatch({ type: POST_OBJECT_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const newObject = await api.postObject(object);\n            return onSuccess(newObject);\n        } catch (error) {\n            return onError(error);\n        }\n    };\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// put\n// ******************************\nexport const putObject = (object, ID) => {\n    return async dispatch => {\n        function onStart() {\n            dispatch({ type: PUT_OBJECT_STARTED });\n        }\n        function onSuccess(updateObject) {\n            dispatch({ type: PUT_OBJECT_SUCCESS, payload: updateObject });\n            return updateObject;\n        }\n        function onError(error) {\n            dispatch({ type: PUT_OBJECT_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            let objectCopy = deepCopy(object)\n            const updateObject = await api.putObject(objectCopy, ID);\n            return onSuccess(updateObject)\n        } catch (error) {\n            return onError(error)\n        }\n    }\n}\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// delete\n// ******************************\nexport const deleteObject = (ID) => {\n    return async dispatch => {\n        function onStart() {\n            dispatch({ type: DELETE_OBJECT_STARTED });\n        }\n        function onSuccess(response) {\n            dispatch({ type: DELETE_OBJECT_SUCCESS, payload: ID });\n            return response;\n        }\n        function onError(error) {\n            dispatch({ type: DELETE_OBJECT_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const removeObject = await api.deleteObject(ID);\n            return onSuccess(ID)\n        } catch (error) {\n            return onError(error)\n        }\n    }\n}\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nexport const addObject = (object) => {\n    return { type: ADD_OBJECT, payload: { object } }\n}\n\nexport const updateObject = (object) => {\n    return { type: UPDATE_OBJECT, payload: { object } }\n}\n\nexport const updateObjects = (objects) => {\n    return { type: UPDATE_OBJECTS, payload: { objects } }\n}\n\nexport const removeObject = (id) => {\n    return { type: REMOVE_OBJECT, payload: { id } }\n}\n\nexport const setObjectAttributes = (attr) => {\n    return { type: SET_OBJECT_ATTRIBUTES, payload: attr  }\n}\n\nexport const selectObject = (id) => {\n    return { type: SELECT_OBJECT, payload: { id } }\n}\n\nexport const deselectObject = () => {\n    return { type: DESELECT_OBJECT }\n}\n","import axios from 'axios';\nimport * as log from 'loglevel';\n\nimport {apiIPAddress} from '../settings/settings'\nconst operator = 'sounds'\n\nexport async function getSounds() {\n  try {\n    const response = await axios({\n      method: 'get',\n      url: apiIPAddress() + operator,\n      headers: {\n        'X-API-Key': '123456',\n        'Access-Control-Allow-Origin': '*'\n    }\n    });\n    // Success 🎉\n    // log.debug('res',response);\n    const data = response.data;\n    const dataJson = JSON.parse(data)\n\n    return dataJson;\n\n\n} catch (error) {\n\n    // Error 😨\n    if (error.response) {\n        /*\n         * The request was made and the server responded with a\n         * status code that falls out of the range of 2xx\n         */\n        log.debug('error.response.data', error.response.data);\n        log.debug('error.response.status',error.response.status);\n        log.debug('error.response.headers',error.response.headers);\n    } else if (error.request) {\n\n        /*\n         * The request was made but no response was received, `error.request`\n         * is an instance of XMLHttpRequest in the browser and an instance\n         * of http.ClientRequest in Node.js\n         */\n        log.debug('error.request', error.request);\n    } else {\n        // Something happened in setting up the request and triggered an Error\n        log.debug('error.message', error.message);\n    }\n    log.debug('error', error);\n  }\n}\n","import { normalize, schema } from 'normalizr';\n\nimport { soundsSchema } from '../../normalizr/schema';\nimport * as api from '../../api/sounds_api'\n\nlet GET_SOUNDS = 'GET_SOUNDS';\nlet GET_SOUNDS_STARTED = 'GET_SOUNDS_STARTED';\nlet GET_SOUNDS_SUCCESS = 'GET_SOUNDS_SUCCESS';\nlet GET_SOUNDS_FAILURE = 'GET_SOUNDS_FAILURE';\n\n// get\n// ******************************\nexport const getSounds = () => {\n    return async dispatch => {\n\n        function onStart() {\n            dispatch({ type: GET_SOUNDS_STARTED });\n        }\n        function onSuccess(response) {\n            dispatch({ type: GET_SOUNDS_SUCCESS, payload: response });\n            return response;\n        }\n        function onError(error) {\n            dispatch({ type: GET_SOUNDS_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const sounds = await api.getSounds();\n\n            const normalizedSounds = normalize(sounds, soundsSchema)\n\n            if (normalizedSounds.entities.sounds === undefined) {\n                return onSuccess(normalizedSounds.entities)\n            }\n            else {\n                return onSuccess(normalizedSounds.entities.sounds)\n            }\n\n            return onSuccess(sounds);\n        } catch (error) {\n            return onError(error);\n        }\n    };\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n","import axios from 'axios';\nimport {apiIPAddress} from '../settings/settings'\nimport * as log from 'loglevel';\n\nconst operator = 'analysis'\n\nexport async function getTasksAnalysis() {\n  try {\n    const response = await axios({\n      method: 'GET',\n      url: apiIPAddress() + operator,\n      headers: {\n        'X-API-Key': '123456',\n        'Access-Control-Allow-Origin': '*'\n    }\n    });\n\n    // Success 🎉\n    // log.debug('getTasks :res:',response);\n    const data = response.data;\n    // const dataJson = JSON.parse(data)\n    // log.debug('getTasks: dataJson: ', dataJson)\n\n    return data;\n\n} catch (error) {\n\n    // Error 😨\n    if (error.response) {\n        /*\n         * The request was made and the server responded with a\n         * status code that falls out of the range of 2xx\n         */\n        console.error('error.response.data', error.response.data);\n        console.error('error.response.status',error.response.status);\n        console.error('error.response.headers',error.response.headers);\n    } else if (error.request) {\n        /*\n         * The request was made but no response was received, `error.request`\n         * is an instance of XMLHttpRequest in the browser and an instance\n         * of http.ClientRequest in Node.js\n         */\n        console.error('error.request', error.request);\n    } else {\n        // Something happened in setting up the request and triggered an Error\n        console.error('error.message', error.message);\n    }\n    throw error\n    console.error('error', error);\n  }\n\n\n};\n\nexport async function getTaskAnalysis(id) {\n  // log.debug('getTask: id: ', id)\n  try {\n    const response = await axios({\n      method: 'GET',\n      url: apiIPAddress() + operator + '/' + id,\n      headers: {\n        'X-API-Key': '123456',\n        'Access-Control-Allow-Origin': '*'\n    }\n    });\n    // Success 🎉\n    // log.debug('getTask: response: ', response);\n    const data = response.data;\n    // log.debug('getTask: dataJson:', dataJson)\n    return data;\n\n\n} catch (error) {\n\n    // Error 😨\n    if (error.response) {\n        /*\n         * The request was made and the server responded with a\n         * status code that falls out of the range of 2xx\n         */\n        console.error('getTask: error.response.data', error.response.data);\n        console.error('getTask: error.response.status',error.response.status);\n        console.error('getTask: error.response.headers',error.response.headers);\n    } else if (error.request) {\n        /*\n         * The request was made but no response was received, `error.request`\n         * is an instance of XMLHttpRequest in the browser and an instance\n         * of http.ClientRequest in Node.js\n         */\n        console.error('getTask: error.request', error.request);\n    } else {\n        // Something happened in setting up the request and triggered an Error\n        console.error('getTask: error.message', error.message);\n    }\n    throw error\n    console.error('getTask: error', error);\n  }\n\n\n};\n","import { normalize, schema } from 'normalizr';\n\nimport {\n    TASKS,\n    TASK,\n    ANALYSIS,\n} from '../types/tasks_types';\n\nimport {\n    GET_,\n\n    _STARTED,\n    _SUCCESS,\n    _FAILURE,\n} from '../types/api_types';\n\nimport * as api from '../../api/task_analysis_api'\n\nimport { tasksAnalysisSchema } from '../../normalizr/schema'\n\n\n// get\n// ******************************\nexport const getTasksAnalysis = () => {\n    return async dispatch => {\n\n        function onStart() {\n            dispatch({ type: GET_ + TASKS + ANALYSIS + _STARTED });\n        }\n        function onSuccess(tasksAnalysis) {\n            dispatch({ type: GET_ + TASKS + ANALYSIS + _SUCCESS, payload: tasksAnalysis });\n            return tasksAnalysis;\n        }\n        function onError(error) {\n            dispatch({ type: GET_ + TASKS + ANALYSIS + _FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const tasksAnalysis = await api.getTasksAnalysis();\n            const schema = normalize(tasksAnalysis, tasksAnalysisSchema)\n            return onSuccess(schema.entities.taskAnalysis);\n\n        } catch (error) {\n            return onError(error);\n        }\n    };\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// get\n// ******************************\nexport const getTaskAnalysis = (id) => {\n    return async dispatch => {\n\n        function onStart() {\n            dispatch({ type: GET_ + TASK + ANALYSIS + _STARTED });\n        }\n        function onSuccess(taskAnalysis) {\n            dispatch({ type: GET_ + TASK + ANALYSIS + _SUCCESS, payload: taskAnalysis });\n            return taskAnalysis;\n        }\n        function onError(error) {\n            dispatch({ type: GET_ + TASK + ANALYSIS + _FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const taskAnalysis = await api.getTaskAnalysis(id);\n\n            return onSuccess(taskAnalysis);\n\n        } catch (error) {\n            return onError(error);\n        }\n    };\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n","import axios from 'axios';\nimport * as log from 'loglevel';\n\nimport { apiIPAddress } from '../settings/settings'\n\nimport https from 'https'\n\nconst operator = 'data_stream'\n\nconst logger = log.getLogger('Positions_Api', \"Position\");\n\n// https.globalAgent.options.rejectUnauthorized = false;\n\nconst httpsAgent = new https.Agent({\n    rejectUnauthorized: false\n  })\n\nexport async function getDataStream() {\n    try {\n        const response = await axios({\n            method: 'GET',\n            url: apiIPAddress() + operator,\n            headers: {\n                'X-API-Key': '123456',\n                'Access-Control-Allow-Origin': '*'\n            },\n            httpsAgent: httpsAgent\n        });\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        throw error\n    }\n\n\n}\n","import { denormalize, schema } from 'normalizr';\nimport { uuidv4 } from '../methods/utils/utils';\n\n// status schema\nexport const statusSchema = new schema.Entity(\n  // key\n  'status',\n  // definition\n  {\n    //condition: conditionSchema\n  },\n  // options\n  {\n    idAttribute: (value, parent, key) => {\n      return value._id.$oid\n    },\n\n    // processStrategy\n    processStrategy: (value, parent, key) => {\n      return value\n    }\n  },\n\n);\n\n// schema for list of status\nexport const statusesSchema = [statusSchema]\n","import { TEMP_NEW_SCHEDULE_ID, DEFAULT_TASK_ID } from '../constants/scheduler_constants';\nimport axios from 'axios';\nimport * as log from 'loglevel';\n\nimport {apiIPAddress} from '../settings/settings'\nconst operator = 'schedules'\n\nexport async function getSchedules() {\n  try {\n    const response = await axios({\n      method: 'get',\n      url: apiIPAddress() + operator,\n      headers: {\n        'X-API-Key': '123456',\n        'Access-Control-Allow-Origin': '*'\n    }\n    });\n    // Success 🎉\n    // log.debug('res',response);\n    const data = response.data;\n    const dataJson = JSON.parse(data)\n    // log.debug('dataJson', dataJson)\n    // log.debug('getSchedulesdataJson', dataJson[0]._id.$oid)\n    return dataJson;\n\n\n} catch (error) {\n\n    // Error 😨\n    if (error.response) {\n        /*\n         * The request was made and the server responded with a\n         * status code that falls out of the range of 2xx\n         */\n        log.debug('error.response.data', error.response.data);\n        log.debug('error.response.status',error.response.status);\n        log.debug('error.response.headers',error.response.headers);\n    } else if (error.request) {\n        /*\n         * The request was made but no response was received, `error.request`\n         * is an instance of XMLHttpRequest in the browser and an instance\n         * of http.ClientRequest in Node.js\n         */\n        log.debug('error.request', error.request);\n    } else {\n        // Something happened in setting up the request and triggered an Error\n        log.debug('error.message', error.message);\n    }\n    throw error\n    log.debug('error', error);\n  }\n\n\n}\n\nexport async function getSchedule(scheduleId) {\n  try {\n    const response = await axios({\n      method: 'get',\n      url: apiIPAddress() + operator + '/' + scheduleId,\n      headers:{\n        'X-API-Key': '123456',\n      }\n    });\n    // Success 🎉\n    // log.debug('res',response);\n    const data = response.data;\n    const dataJson = JSON.parse(data)\n    // log.debug('dataJson', dataJson)\n    // log.debug('getSchedulesdataJson', dataJson[0]._id.$oid)\n    return dataJson;\n\n\n} catch (error) {\n\n    // Error 😨\n    if (error.response) {\n        /*\n         * The request was made and the server responded with a\n         * status code that falls out of the range of 2xx\n         */\n        log.debug('error.response.data', error.response.data);\n        log.debug('error.response.status',error.response.status);\n        log.debug('error.response.headers',error.response.headers);\n    } else if (error.request) {\n        /*\n         * The request was made but no response was received, `error.request`\n         * is an instance of XMLHttpRequest in the browser and an instance\n         * of http.ClientRequest in Node.js\n         */\n        log.debug('error.request', error.request);\n    } else {\n        // Something happened in setting up the request and triggered an Error\n        log.debug('error.message', error.message);\n    }\n    throw error\n    log.debug('error', error);\n  }\n\n\n}\n\nexport async function postSchedule(schedule) {\n  // log.debug('createSchedule start:',schedule)\n  try {\n    const response = await axios({\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'X-API-Key': '123456',\n      },\n      url: apiIPAddress() + operator,\n      data: schedule\n    });\n\n    // Success 🎉\n    // log.debug('createSchedule: response',response);\n    const data = response.data;\n    const dataJson = JSON.parse(data)\n    // log.debug('createSchedule: dataJson', dataJson)\n\n    return dataJson;\n\n} catch (error) {\n\n    // Error 😨\n    if (error.response) {\n        /*\n         * The request was made and the server responded with a\n         * status code that falls out of the range of 2xx\n         */\n        log.debug('error.response.data', error.response.data);\n        log.debug('error.response.status',error.response.status);\n        log.debug('error.response.headers',error.response.headers);\n    } else if (error.request) {\n        /*\n         * The request was made but no response was received, `error.request`\n         * is an instance of XMLHttpRequest in the browser and an instance\n         * of http.ClientRequest in Node.js\n         */\n        log.debug('error.request', error.request);\n    } else {\n        // Something happened in setting up the request and triggered an Error\n        log.debug('error.message', error.message);\n    }\n    throw error\n    log.debug('error', error);\n  }\n\n\n}\n\nexport async function deleteSchedule(scheduleId) {\n  // log.debug('deleteSchedule start:',scheduleId)\n\n  try {\n    const response = await axios({\n      method: 'delete',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'X-API-Key': '123456',\n      },\n      url: apiIPAddress() + operator + '/' + scheduleId\n    });\n\n    // Success 🎉\n    // log.debug('deleteSchedule: response',response);\n    const data = response.data;\n\n    return response;\n\n} catch (error) {\n\n    // Error 😨\n    if (error.response) {\n        /*\n         * The request was made and the server responded with a\n         * status code that falls out of the range of 2xx\n         */\n        log.debug('error.response.data', error.response.data);\n        log.debug('error.response.status',error.response.status);\n        log.debug('error.response.headers',error.response.headers);\n    } else if (error.request) {\n        /*\n         * The request was made but no response was received, `error.request`\n         * is an instance of XMLHttpRequest in the browser and an instance\n         * of http.ClientRequest in Node.js\n         */\n        log.debug('error.request', error.request);\n    } else {\n        // Something happened in setting up the request and triggered an Error\n        log.debug('error.message', error.message);\n    }\n    throw error\n    log.debug('error', error);\n  }\n\n\n}\n\nexport async function putSchedule(scheduleId, schedule) {\n  // log.debug('updateSchedule start:',scheduleId, schedule)\n\n  try {\n    const response = await axios({\n      method: 'put',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-API-Key': '123456',\n      },\n      url: apiIPAddress() + operator + '/' + scheduleId,\n      data: JSON.stringify(schedule)\n    });\n\n    // Success 🎉\n    // log.debug('updateSchedule: response',response);\n    const data = response.data;\n    const dataJson = JSON.parse(data)\n    // log.debug('getSchedulesdataJson', dataJson._id.$oid)\n    return dataJson;\n\n    //return response;\n\n} catch (error) {\n\n    // Error 😨\n    if (error.response) {\n        /*\n         * The request was made and the server responded with a\n         * status code that falls out of the range of 2xx\n         */\n        log.debug('error.response.data', error.response.data);\n        log.debug('error.response.status',error.response.status);\n        log.debug('error.response.headers',error.response.headers);\n    } else if (error.request) {\n        /*\n         * The request was made but no response was received, `error.request`\n         * is an instance of XMLHttpRequest in the browser and an instance\n         * of http.ClientRequest in Node.js\n         */\n        log.debug('error.request', error.request);\n    } else {\n        // Something happened in setting up the request and triggered an Error\n        log.debug('error.message', error.message);\n    }\n    throw error\n    log.debug('error', error);\n  }\n\n\n}\n","import { normalize } from 'normalizr';\n\n// import types\nimport {\n    GET,\n    POST,\n    DELETE,\n    PUT\n} from '../types/prefixes';\n\nimport {\n    SCHEDULES,\n    SCHEDULE\n} from '../types/data_types';\n\nimport { api_action } from './index';\nimport * as api from '../../api/schedules_api'\n\n// import schema\nimport { scheduleSchema, schedulesSchema } from '../../normalizr/schedules_schema';\n\nimport log from \"../../logger\"\n\nconst logger = log.getLogger(\"Schedules\", \"Redux\")\n\n// get\n// ******************************\nexport const getSchedules = () =>  async (dispatch) => {\n\n    /*\n        Invoked in api_action()\n        Whatever is returned from this function is the payload\n        that will be dispatched to redux (if successful)\n    */\n    const callback = async () => {\n\n        // make request\n        const schedules = await api.getSchedules();\n\n        // format response\n        const normalizedSchedules = normalize(schedules, schedulesSchema);\n\n        // return payload for redux\n        return {\n            schedulesObj: normalizedSchedules.entities.schedules,\n            scheduleIds: normalizedSchedules.result\n        };\n    }\n\n    const actionName = GET + SCHEDULES;\n\n    // payload is returned back\n    const payload = await api_action(actionName, callback, dispatch);\n\n    return payload.schedulesObj;\n\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n\n// create\n// ******************************\nexport const postSchedule = (schedule) =>  async dispatch => {\n\n    const callback = async () => {\n        const createdSchedule = await api.postSchedule(schedule);\n        const normalizedSchedules = normalize(createdSchedule, scheduleSchema);\n\n        return {\n            createdSchedules:normalizedSchedules.entities.schedules,\n        };\n    }\n\n    const actionName = POST + SCHEDULE;\n\n    const payload = await api_action(actionName, callback, dispatch, schedule);\n\n    return Object.values(payload.createdSchedules)[0];\n\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// delete\n// ******************************\nexport const deleteSchedule = (scheduleId) => async (dispatch) => {\n\n    const callback = async () => {\n        await api.deleteSchedule(scheduleId);\n\n        return {\n            scheduleId\n        };\n    }\n\n    const actionName = DELETE + SCHEDULE;\n    const payload = await api_action(actionName, callback, dispatch, scheduleId);\n    return payload;\n\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// update\n// ******************************\nexport const putSchedule = (scheduleId, schedule) => async dispatch => {\n\n    logger.log(\"action_putSchedule: scheduleId:\",scheduleId)\n    logger.log(\"action_putSchedule: schedule:\",schedule)\n\n    const callback = async () => {\n        const response = await api.putSchedule(scheduleId, schedule);\n        const normalizedSchedule = normalize(response, scheduleSchema);\n\n        return {\n            scheduleId,\n            schedules: normalizedSchedule.entities.schedules\n        };\n    }\n\n    const actionName = PUT + SCHEDULE;\n    const payload = await api_action(actionName, callback, dispatch, {scheduleId, schedule});\n    return payload.scheduleId;\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n\n// add edited schedules (temp storage for unsaved schedules, so no api call)\n// ******************************\nexport const addUnsavedSchedules = (schedules) => {\n  return async dispatch => {\n      const payload = schedules;\n      dispatch({ type: \"ADD_SCHEDULES_UNSAVED\", payload });\n      return schedules;\n  };\n\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nexport function addSchedules(schedules) {\n  return {\n    type: \"ADD_SCHEDULES\",\n    schedules\n  };\n}\n","import axios from 'axios';\nimport * as log from 'loglevel';\n\nimport { apiIPAddress } from '../settings/settings'\n\n\nimport store from '../redux/store'\nconst token = store.getState().cognotoUserSession\n\nconst operator = 'status'\n\nexport async function getStatus() {\n    try {\n        const response = await axios({\n            method: 'get',\n            url: apiIPAddress() + operator,\n            headers: {\n                'X-API-Key': '123456',\n                'Access-Control-Allow-Origin': '*'\n            }\n            // token: token.username\n        });\n        // Success 🎉\n        //  log.debug('THE STATE OF PLAY IS!!! on get status',response);\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        return dataJson;\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n        throw error;\n\n    }\n\n\n}\n\nexport async function postStatus(status) {\n    // log.debug(\"postStatus: started: status\", status)\n    try {\n        const response = await axios({\n            method: 'POST',\n            url: apiIPAddress() + operator,\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'application/json'\n            },\n            data: status\n        });\n\n        // Success 🎉\n        // log.debug('postStatus: response: ',response);\n        // const data = response.data;\n        // const dataJson = JSON.parse(data)\n        // log.debug('response data json',dataJson);\n\n        return response;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n        throw error;\n    }\n}\n","import { normalize, schema } from 'normalizr';\nimport {\n    GET_STATUS,\n    GET_STATUS_STARTED,\n    GET_STATUS_SUCCESS,\n    GET_STATUS_FAILURE,\n\n    POST_STATUS,\n    POST_STATUS_STARTED,\n    POST_STATUS_SUCCESS,\n    POST_STATUS_FAILURE,\n} from '../types/status_types';\n\nimport { statusSchema, statusesSchema } from '../../normalizr/status_schema';\nimport * as api from '../../api/status_api'\n\n\n// get\n// ******************************\nexport const getStatus = () => {\n    return async dispatch => {\n\n        function onStart() {\n            dispatch({ type: GET_STATUS_STARTED });\n        }\n        function onSuccess(status) {\n            dispatch({ type: GET_STATUS_SUCCESS, payload: status });\n            return status;\n        }\n        function onError(error) {\n            dispatch({ type: GET_STATUS_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const status = await api.getStatus();\n            //const normalizedStatus = normalize(status, statusesSchema);\n            //console.log('normalizedStatus',normalizedStatus)\n\n\n            return onSuccess(status);\n        } catch (error) {\n            return onError(error);\n        }\n    };\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n\n// For some reason, this function does not execute the dispatch function. Have no idea why...\nexport const postStatus = (status) => {\n\n    return async dispatch => {\n\n        function onStart() {\n            dispatch({ type: POST_STATUS_STARTED });\n        }\n\n        function onSuccess(response) {\n            dispatch({ type: POST_STATUS_SUCCESS, payload: response });\n            return response;\n        }\n        function onError(error) {\n            dispatch({ type: POST_STATUS_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n\n            // currently the backend just returns the status code\n            // if backend returns new status object, newStatus should be passed to onSuccess instead of status\n            const response = await api.postStatus(status);\n            return onSuccess(status)\n\n        } catch (error) {\n            return onError(error)\n        }\n    }\n}\n","import axios from 'axios';\n// import * as log from 'loglevel';\nimport logger from '../logger'\n\nimport { apiIPAddress } from '../settings/settings'\n\nimport store from '../redux/store'\nconst token = '123456'//store.getState().cognotoUserSession\n\nconst operator = 'settings'\n\nconst log = logger.getLogger('Api')\n\nexport async function getSettings() {\n    try {\n        const response = await axios({\n            method: 'get',\n            url: apiIPAddress() + operator,\n            headers:{\n                'X-API-Key': '123456',\n                'Access-Control-Allow-Origin': '*'\n            }\n            // token: token.username\n        });\n        // Success 🎉\n        log.debug('getSettings response', response);\n        const data = response.data;\n\n        const dataJson = JSON.parse(data)\n        log.debug('getSettings dataJson', dataJson);\n        return dataJson;\n\n        // const settings = {\n        //   mir_ip: '10.1.12.136',\n        //   idle_task: 'Bring me beer',\n        //   charge_location: 'Station'\n        // }\n        // return settings;\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n\n}\n\nexport async function postSettings(settings) {\n    console.log(settings)\n    try {\n        const response = await axios({\n            method: 'POST',\n            url: apiIPAddress() + operator,\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'application/json',\n                'Access-Control-Allow-Origin': '*'\n            },\n            data: settings\n        });\n\n        // Success 🎉\n        log.debug('response', response);\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        log.debug('response data json', dataJson);\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n\n        }\n        log.debug('error', error);\n    }\n}\n","import {\n    GET_SETTINGS,\n    GET_SETTINGS_STARTED,\n    GET_SETTINGS_SUCCESS,\n    GET_SETTINGS_FAILURE,\n\n    POST_SETTINGS,\n    POST_SETTINGS_STARTED,\n    POST_SETTINGS_SUCCESS,\n    POST_SETTINGS_FAILURE,\n    DEVICE_ENABLED,\n} from '../types/setting_types'\n\nimport * as api from '../../api/settings_api'\n\nexport const getSettings = () => {\n    return async dispatch => {\n        function onStart() {\n            dispatch({ type: GET_SETTINGS_STARTED });\n        }\n        function onSuccess(response) {\n            dispatch({ type: GET_SETTINGS_SUCCESS, payload: response });\n\n            return response;\n        }\n        function onError(error) {\n            dispatch({ type: GET_SETTINGS_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const settings = await api.getSettings();\n\n            // Uncomment when you want to make SETTINGS an object\n            // const normalizedSETTINGS = normalize(SETTINGS, SETTINGSSchema);\n\n            // return onSuccess(normalizedSETTINGS.entities.SETTINGS)\n\n            return onSuccess(settings)\n        } catch (error) {\n            return onError(error)\n        }\n    }\n}\nexport const postSettings = (settings) => {\n    return async dispatch => {\n        function onStart() {\n            dispatch({ type: POST_SETTINGS_STARTED });\n        }\n        function onSuccess(response) {\n            dispatch({ type: POST_SETTINGS_SUCCESS, payload: settings });\n            return response;\n        }\n        function onError(error) {\n            dispatch({ type: POST_SETTINGS_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const newSettings = await api.postSettings(JSON.stringify(settings));\n            return onSuccess(newSettings)\n        } catch (error) {\n            return onError(error)\n        }\n    }\n}\n\nexport const deviceEnabled = (state) => {\n    return { type: DEVICE_ENABLED, payload: state}\n}\n","import styled from 'styled-components'\n\nexport const SwitchContainer = styled.div`\n    display: flex;\n    alignItems: center;\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz4};\n`\n\nexport const SwitchContainerLabel = styled.span`\n    padding: 0;\n    margin: 0;\n    align-self: center;\n`","// import external dependencies\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\n\n// components\nimport Switch from 'react-ios-switch'\nimport Textbox from '../../basic/textbox/textbox'\nimport Button from '../../basic/button/button'\n\n// styles\nimport * as styled from \"./splash_screen.style\"\n\n// import logger\nimport logger from '../../../logger.js';\nimport { postLocalSettings } from \"../../../redux/actions/local_actions\";\n\n\nconst ToggleMapViewSwitch = (props) => {\n    const {\n        checked,\n        onChange,\n        switchContainerStyle\n    } = props\n\n    return (\n        <styled.SwitchContainer style={switchContainerStyle}>\n            <styled.SwitchContainerLabel>Show List View</styled.SwitchContainerLabel>\n            <Switch\n                checked={checked}\n                onChange={onChange}\n                style={{ margin: \"0 2rem 0 2rem\" }}\n            />\n            <styled.SwitchContainerLabel>Show Map View</styled.SwitchContainerLabel>\n        </styled.SwitchContainer>\n    )\n}\n\nconst SplashScreen = (props) => {\n    const {\n        isApiLoaded,\n        apiError\n    } = props\n\n    const dispatch = useDispatch()\n    const localSettings = useSelector(state => state.localReducer)\n    const [apiIpAddress, setApiIpAddress] = useState('')\n    const onPostLocalSettings = (settings) => dispatch(postLocalSettings(settings))\n\n    /**\n     * Submit API address to local storage\n     */\n    const handleSubmitApiIpAddress = async () => {\n        console.log(\"submitting\")\n        await onPostLocalSettings({ ...localSettings.localSettings, non_local_api: true, non_local_api_ip: apiIpAddress })\n        window.location.reload(false);\n    }\n\n    /*\n    * toggle mapViewEnabled\n    * */\n    const toggleMapViewEnabled = async () => {\n        await onPostLocalSettings({ ...localSettings.localSettings, mapViewEnabled: !localSettings.localSettings.mapViewEnabled })\n    }\n\n    return (\n        <>\n            {/* When loading show an RM logo, if no api info, then show input to enter */}\n            {!isApiLoaded ? apiError ?\n                <div style={{ width: '100%', height: '100%', paddingTop: '15%', display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\n                    <i className={'icon-rmLogo'} style={{ fontSize: '10rem', marginBottom: '5rem', color: '#FF4B4B' }} />\n\n                    <div style={{ width: '50%', minWidth: '20rem', display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\n                        < p > Please Enter API IP</p>\n                        <form onSubmit={handleSubmitApiIpAddress}>\n                            <Textbox\n                                placeholder=\"API IP Address\"\n                                onChange={(event) => {\n                                    setApiIpAddress(event.target.value)\n                                }}\n                                style={{ width: '100%' }}\n                            // type = 'submit'\n                            />\n                            <Button schema={'scheduler'} style={{ color: 'red', border: '0.1rem solid red' }} type='submit'>Submit</Button>\n                        </form>\n\n\n\n                        <ToggleMapViewSwitch\n                            switchContainerStyle={{\n                                bottom: \"1rem\",\n                                transform: \"translateY(-50%)\",\n                                position: \"absolute\"\n                            }}\n                            checked={localSettings.localSettings.mapViewEnabled}\n                            onChange={toggleMapViewEnabled}\n                        />\n                    </div>\n                </div>\n\n                :\n                <div style={{ width: '100%', height: '100%', display: 'flex', justifyContent: 'center', alignItems: \"center\", flexDirection: \"column\" }}>\n                    <i className={'icon-rmLogo'} style={{ fontSize: '10rem', margin: \"3rem\", color: '#FF4B4B' }} />\n\n                    {/* <ToggleMapViewSwitch\n                        checked={localSettings.localSettings.mapViewEnabled}\n                        onChange={toggleMapViewEnabled}\n                    /> */}\n\n                </div>\n                :\n                <>\n                </>\n            }\n        </>\n    )\n}\n\nexport default SplashScreen;\n","import styled from 'styled-components'\n\n\nexport const SideBarOpenCloseButton = styled.button`\n    position: absolute;\n    top: 0rem;\n    z-index: 101;\n    height: 3.2rem;\n    width: 3.2rem;\n    margin-top: 0.4rem;\n    margin-left: 1rem;\n\n    border-radius: .5rem;\n\n    box-shadow: 0 0.1rem 0.2rem 0rem #303030;\n    /* background-color: ${props => props.showSideBar ? 'rgba(255,255,255,0.2)' : props.theme.bg.secondary} ; */\n    background: rgba(97, 98, 109, 0.97);\n    \n    transition: background-color 0.25s ease, box-shadow 0.1s ease;\n\n    &:focus{\n        outline: 0 !important;\n    }\n\n    &:active{\n        box-shadow: none;\n    }\n\n    &:hover{\n    }\n\n    // @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n    //     width: 3.5rem;\n    //     height: 3.5rem;\n    //     margin-left: .5rem;\n\n    // }\n`\n\n// export const HamburgerInner = styled.span`\n//     &:before\n// `\n\nexport const SidebarWrapper = styled.div`\n    position: absolute;\n    top: 4rem;\n    bottom: 0rem;\n\n    display: flex;\n    align-items: stretch;\n    flex-flow: row nowrap;\n    flex-direction: row;\n    flex: 1;\n    // width: auto;\n    // flex-grow: 0;\n\n    background: rgba(46, 47, 58, 0.97);\n    overflow: auto;\n`\n\nexport const SidebarContent = styled.div`\n    display: flex;\n    align-self: stretch;\n    flex: 1;\n\n    // background: ${props => props.theme.bg.primary};\n    z-index: 1;\n    backdrop-filter: blur(3px);\n\n    border-radius: 0 0 8px 0;\n    // border-right: 8px solid ${props => props.theme.bg.quinary};\n\n    background-color: rgba(255, 255, 255, 0.1);\n\n    overflow: auto;\n\n`\n\nexport const ResizeBar = styled.div`\n\tbackground-color: rgba(97, 98, 109, 0.97);\n    cursor: ew-resize;\n    width: 8px;\n    min-width: 8px;\n    display: flex;\n    z-index: 10;\n    align-items: center ;\n    align-content: center ;\n    justify-content: center;\n\n`\n\nexport const ResizeHandle = styled.div`\n    cursor: ew-resize;\n    width: 4px;\n    height: 30px;\n    background: ${props => props.theme.schema[props.content].solid};\n    border-radius: 8px;\n    text-align: center;\n    z-index: 10;\n    overflow: hidden;\n    display: flex;\n    align-items: center ;\n\n`\n","import styled from 'styled-components'\n\nexport const SideBarButtonIcon = styled.i`\n    font-size: 2rem;\n    padding: 1.5rem;\n    cursor: pointer;\n    display: flex;\n    flex-direction:column;\n    align-items: center;\n\n    // You cant stack a color on a gradient, but you CAN stack a gradient on a gradient\n    background: ${props => props.mode==props.currentMode ? `linear-gradient(rgba(255,255,255,0.4),rgba(255,255,255,0.4)), `+props.theme.schema[props.mode].gradient : props.theme.bg.octonary};\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n\n    transition: color 0.15s ease;\n\n    &:hover{\n        background: ${props => `linear-gradient(rgba(255,255,255,0.2),rgba(255,255,255,0.2)), `+props.theme.schema[props.mode].gradient};\n        -webkit-background-clip: text;\n        -webkit-text-fill-color: transparent;\n    }\n\n    @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n        font-size: 2rem;\n        padding: 1rem;\n\n\n    }\n`\nexport const SideBarButtonText = styled.h1`\n  padding-top:.3rem;\n  font-family: ${props => props.theme.font.primary};\n  font-weight: 100;\n  font-size:1rem;\n  color: ${props => props.theme.schema.locations};\n  text-align: center;\n\n  @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n      font-size: .7rem;\n\n`\n","import styled, {css} from 'styled-components'\nimport Modal from 'react-modal';\nimport {LightenDarkenColor} from \"../../../../methods/utils/color_utils\";\n\n\nconst borderGlowCss = css`\n    --border-width: .1rem;\n    background: none;\n\n    @keyframes moveGradient {\n        50% {\n          background-position: 100% 50%;\n        }\n      }\n\n    border-radius: var(--border-width);\n\n    &::after {\n    position: absolute;\n    content: \"\";\n    top: calc(-1 * var(--border-width));\n    left: calc(-1 * var(--border-width));\n    z-index: -1;\n    width: calc(100% + var(--border-width) * 2);\n    height: calc(100% + var(--border-width) * 2);\n    background: linear-gradient(\n        60deg,\n        /* hsl(224, 85%, 66%), */\n        /* hsl(269, 85%, 66%), */\n        /* hsl(314, 85%, 66%), */\n        /* hsl(359, 85%, 66%), */\n        hsl(44, 85%, 66%),\n        hsl(89, 85%, 66%),\n        hsl(134, 85%, 66%),\n        hsl(179, 85%, 66%)\n    );\n    background-size: 300% 300%;\n    background-position: 0 50%;\n    border-radius: calc(2 * var(--border-width));\n    animation: moveGradient 4s alternate infinite;\n}\n`\n\nexport const TextboxDiv = styled.div`\n    background-color: ${props => props.theme.bg.quinary};\n    border: none;\n    font-size: ${props => props.theme.fontSize.sz4};\n    font-family: ${props => props.theme.font.primary};\n    font-weight: 500;\n    min-height: 2rem;\n    display: flex;\n    flex-grow: 1;\n    color: ${props => props.theme.bg.octonary};\n    padding: .5rem;\n    border-radius: .5rem;\n\n    box-shadow: 0 0.1rem 0.2rem 0rem rgba(0,0,0,0.1) !important;\n    border-bottom: 2px solid ${props => props.theme.bg.quinary};\n\n    &:focus {\n        background-color: ${props => LightenDarkenColor(props.theme.bg.quinary, 10)};\n        border-bottom: 2px solid ${props => !!props.schema ? props.theme.schema[props.schema].solid : props.theme.fg.primary};\n        color: ${props => props.theme.bg.octonary};\n        outline: none !important;\n    }\n\n    &::placeholder {\n        font-family: ${props => props.theme.font.secondary};\n        color: ${props => props.theme.bg.senary};\n    }\n`;\n\nexport const Container = styled(Modal)`\n\toutline: none !important;\n\toutline-offset: none !important;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translate(-50%, -50%);\n\tright: auto;\n\tbottom: auto;\n\n\tposition: absolute;\n\n\tz-index: 50;\n\n\tmin-width: 95%;\n\tmax-width: 95%;\n\tmax-height: 95%;\n\t// height: 95%;\n\n\tcolor: ${props => props.theme.bg.octonary};\n\n\tdisplay: flex;\n\tflex-direction: column;\n\n\tcolor: ${props => props.theme.bg.octonary};\n\tborder-radius: 1rem;\n\toverflow: hidden;\n`;\n\nexport const HeaderContainer = styled.div`\n\twidth: 100%;\n\tdisplay: flex;\n\tflex-direction: column;\n\tborder-width: 0;\n\tborder-bottom-width: thin;\n\tborder-color: black;\n\tborder-style: solid;\n\tmargin-bottom: 2rem;\n`;\n\nexport const Header = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\tpadding: 0;\n\tmargin: 0;\n\tmax-height: 5rem;\n\tbackground: #FF4B4B;\n\n`\nexport const Label = styled.span`\n\tpadding-left: 1rem;\n\tfont-size: ${props => props.theme.fontSize.sz3};\n\tmargin-bottom: .25rem;\n`\n\nexport const Title = styled.h2`\n\tflex: 2;\n\theight: 100%;\n\tmin-height: 100%;\n\tmargin: 1rem;\n\tpadding: 0;\n\ttext-align: center;\n\tdisplay: inline-flex;\n\tjustify-content: center;\n\talign-items: center;\n\n\tfont-size: ${props => props.theme.fontSize.sz2};\n\tfont-weight: ${props => props.theme.fontWeight.bold};\n`;\n\nexport const TextContainer = styled.div`\n\twidth: 100%;\n\tdisplay: flex;\n\tflex-direction: column;\n\tmargin-bottom: 1.5rem;\n`;\n\nexport const BodyContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tpadding: 1rem;\n\tflex: 1;\n\tjustify-content: space-between;\n\toverflow: hidden;\n\n\tbackground: ${props => props.theme.bg.quaternary};\n`\n\nexport const ButtonForm = styled.div`\n\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: center;\n\tmin-height: fit-content;\n`;\n\nexport const IconSelectorContainer = styled.div`\n\tbackground: ${props => props.theme.bg.quinary};\n\toverflow: auto;\n\tmin-height: 2rem;\n\twidth: 100%;\n\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tflex-wrap: wrap;\n\tborder-radius: .5rem;\n`\n\nexport const ContentContainer = styled.div`\n\tbackground: ${props => props.theme.bg.quinary};\n\tborder-radius: 1rem;\n\tdisplay: flex;\n\tflex-direction: column;\n\toverflow: hidden;\n\tmargin-bottom: 1rem;\n\talign-items: center;\n`\nexport const ReportButtonsContainer = styled.div`\n\tdisplay: flex;\n\n\tflex-direction: column;\n\talign-items: center;\n\t// justify-content: center;\n\tflex-wrap: nowrap;\n\toverflow: auto;\n\tmin-height: 5rem;\n\twidth: 100%;\n`\n\nexport const ConditionText = styled.span`\n\tfont: ${props => props.theme.font.primary};\n\tfont-size: ${props => props.theme.fontSize.sz3};\n\tmax-width: 100 %;\n\toverflow: hidden;\n\ttext-overflow: ellipsis;\n`\n\nexport const RightContentContainer = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: ${props => props.theme.bg.senary};\n    width: 4rem;\n    border-left: 1px solid ${props => props.theme.bg.tertiary};\n    height: 100%;\n    // background-color: ${props => props.theme.bg.septenary};\n\n    // padding-left: 1rem;\n    // border-top-right-radius: 0.6rem;\n    // border-bottom-right-radius: 0.6rem;\n\n\n`\n\nexport const ButtonContainer = styled.button`\n  position: relative;\n  user-select: none;\n\n  // flex layout\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  // flex-grow: 1;\n  width: 90%;\n  overflow: hidden;\n  height: 4rem;\n  min-height: 4rem;\n  line-height: 3rem;\n  min-width: 80%;\n\n  background: ${props => `linear-gradient(180deg,\n                            ${LightenDarkenColor(props.background, 20)} 0%,\n                            ${props.background} 50%,\n                            ${LightenDarkenColor(props.background, -20)} 100%)`};\n  border-radius: 0.6rem;\n  padding: 0;\n\n\n  // margins\n  margin: .5rem 0 .5rem 0;\n\n  // padding\n  // padding: 0.5rem 1rem 0.5rem 1rem;\n\n  outline: none;\n  &:focus {\n    outline: none;\n  }\n\n  letter-spacing: 1.5px;\n  border: none;\n  box-shadow: ${props => props.clickable ? 'none' : `2px 2px 2px rgba(0, 0, 0, 0.5)`};\n  transition: all 0.1s ease 0s;\n  cursor: pointer;\n  outline: none;\n\n  &:hover {\n    ${props => props.hoverable && !props.clickable &&\n\t{\n\t\tboxShadow: \"3px 3px 3px rgba(0, 0, 0, 0.5)\",\n\t\ttransform: \"translateY(-1px)\",\n\t}\n}\n  }\n\n  ${props => props.clickable && !props.disabled &&\n\t`&:active {\n      background: ${`linear-gradient(180deg,\n          ${LightenDarkenColor(props.background, -20)} 0%,\n          ${props.background} 50%,\n          ${LightenDarkenColor(props.background, 20)} 100%)`\n\t}\n    }`\n}\n\n  ${props => props.disabled &&\n\t{\n\t\tcolor: props.theme.bg.quaternary,\n\t\tbackground: `linear-gradient(180deg, rgba(255,255,255,0.4) 0%, rgba(255,255,255,0.4) 100%), ${LightenDarkenColor(props.background, -60)}`,\n\t\tpointerEvents: \"none\",\n\t}\n}\n\n    // --border-width: 3px;\n    ${props => props.borderGlow &&\n\tborderGlowCss\n}\n\n${props => props.css};\n\n`\n\nexport const AddNewButtonContainer = styled.div`\n\tdisplay: flex;\n\tjustify-content: center;\n\twidth: 100%;\n\tborder-bottom:  ${props => props.showBorder && `1px solid` + props.theme.bg.tertiary};\n`\n\nexport const ColorFieldContainer = styled.div`\n\tposition: relative;\n\n`\n\n\nexport const Icon = styled.i`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin: auto auto;\n    color: green;\n    fill: green;\n    font-size: 7rem;\n    width: 14rem;\n    &:hover {\n        cursor: pointer;\n    }\n\n    &:active{\n        filter: brightness(85%)\n    }\n`\n","import React, {useEffect, useState} from \"react\";\nimport Modal from 'react-modal';\nimport {useDispatch, useSelector} from \"react-redux\";\n\n\nimport Button from \"../../../basic/button/button\";\nimport Textbox from \"../../../basic/textbox/textbox\";\n\n// actions\n\n// styles\nimport * as styled from './confirm_delete_modal.style'\n\nconst ConfirmDeleteModal = (props) => {\n\n    const {\n        isOpen,\n        title,\n        close,\n        dashboard,\n        onSubmit,\n        handleClose,\n        handleOnClick1,\n        handleOnClick2,\n        button_1_text,\n        button_2_text,\n        children\n    } = props\n\n\n    const dispatch = useDispatch()\n\n\n\n\n    return (\n        <styled.Container\n            isOpen={isOpen}\n            contentLabel=\"Confirm Delete Modal\"\n            onRequestClose={close}\n            style={{\n                overlay: {\n                    zIndex: 500\n                },\n                content: {\n\n                }\n            }}\n        >\n            <styled.Header>\n                <styled.Title>{title}</styled.Title>\n\n                <Button\n                    onClick={handleClose}\n                    schema={'error'}\n                >\n                    <i className=\"fa fa-times\" aria-hidden=\"true\"/>\n                </Button>\n            </styled.Header>\n            <styled.BodyContainer>\n\n                        <styled.ContentContainer>\n\n                            {children}\n                        </styled.ContentContainer>\n\n                        <styled.ButtonForm>\n                            <Button\n                                tertiary\n                                schema={\"delete\"}\n                                onClick={handleOnClick1}\n                                label={button_1_text}\n                                type=\"button\"\n                            />\n                            <Button\n                                tertiary\n                                schema={\"delete\"}\n                                onClick={handleOnClick2}\n                                label={button_2_text}\n                                type=\"button\"\n                            />\n\n                        </styled.ButtonForm>\n\n            </styled.BodyContainer>\n        </styled.Container>\n    );\n};\n\nexport default ConfirmDeleteModal\n","import React, { useState, useMemo, useRef, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport * as style from './side_bar_button.style'\n\nimport * as locationActions from '../../../redux/actions/locations_actions'\nimport * as tasksActions from '../../../redux/actions/tasks_actions'\nimport * as processesActions from '../../../redux/actions/processes_actions'\n\n\nimport ConfirmDeleteModal from '../../basic/modals/confirm_delete_modal/confirm_delete_modal'\n\n\nconst SideBarButton = (props) => {\n\n    const {\n      mode,\n      currentMode\n    } = props\n\n    const history = useHistory()\n\n    const editingStation = useSelector(state => state.stationsReducer.editingStation)\n    const editingPosition = useSelector(state => state.positionsReducer.editingPosition)\n    \n    const taskEditing = useSelector(state => state.tasksReducer.editingTask)\n    const processEditing = useSelector(state => state.processesReducer.editingProcess)\n\n    const dispatch = useDispatch()\n    const onLocationEditing = (props) => dispatch(locationActions.editing(props))\n    const onTaskEditing = (props) => dispatch(tasksActions.editingTask(props))\n    const onProcessEditing = (props) => dispatch(processesActions.editingProcess(props))\n\n    const [confirmDeleteModal, setConfirmDeleteModal] = useState(false);\n\n    const locationEditing = !!editingStation ? editingStation : editingPosition\n\n    const handleConfirmationModal = () => {\n        return (\n            <ConfirmDeleteModal\n                isOpen={!!confirmDeleteModal}\n                title={\"Are you sure you want to leave this page? Any changes will not be saved\"}\n                button_1_text={\"Yes\"}\n                button_2_text={\"No\"}\n                handleClose={() => setConfirmDeleteModal(null)}\n                handleOnClick1={() => {\n                    if (props.mode === 'lots') {\n                        const currentPath = history.location.pathname\n                        history.push('/lots/summary')\n\n                        setConfirmDeleteModal(null)\n                        onLocationEditing(false)\n                        onTaskEditing(false)\n                        onProcessEditing(false)\n                    }\n                    else {\n                        props.setShowSideBarPage(props.mode)\n                        setConfirmDeleteModal(null)\n                        onLocationEditing(false)\n                        onTaskEditing(false)\n                        onProcessEditing(false)\n                    }\n\n                }}\n                handleOnClick2={() => {\n                    setConfirmDeleteModal(null)\n                }}\n            />\n        )\n    }\n\n\n\n    if (mode === 'locations') {\n\n        return (\n            <>\n                {handleConfirmationModal()}\n                <style.SideBarButtonIcon\n                    className='fas fa-map-marker-alt'\n                    onClick={() => {\n                        if (locationEditing || taskEditing || processEditing) {\n                            setConfirmDeleteModal(true)\n                        }\n                        else{props.setShowSideBarPage(mode)}\n                    }}\n                    currentMode={currentMode}\n                    mode={mode}\n                >\n                    <style.SideBarButtonText>Locations</style.SideBarButtonText>\n                </style.SideBarButtonIcon>\n            </>\n        )\n    }\n\n    else if (mode === 'devices') {\n        return (\n            <>\n                {handleConfirmationModal()}\n                <style.SideBarButtonIcon\n                    className={'icon-rmLogo'}\n                    onClick={() => {\n                        if (locationEditing || taskEditing || processEditing) {\n                            setConfirmDeleteModal(true)\n                        }\n                        else{props.setShowSideBarPage(mode)}\n                    }}\n                    currentMode={currentMode}\n                    mode={mode}\n                >\n                    <style.SideBarButtonText>Devices</style.SideBarButtonText>\n                </style.SideBarButtonIcon>\n            </>\n        )\n    }\n\n    else if (mode === 'lots') {\n        return (\n            <>\n                {handleConfirmationModal()}\n                <style.SideBarButtonIcon\n                    className={'fas fa-layer-group'}\n                    onClick={() => {\n                         if(locationEditing || taskEditing || processEditing){\n                             setConfirmDeleteModal(true)\n                         }\n                         else{\n                              const currentPath = history.location.pathname\n                              history.push('/lots/summary')}\n                            }}\n                    currentMode={currentMode}\n                    mode={mode}\n                >\n                    <style.SideBarButtonText>Lot Summary</style.SideBarButtonText>\n                </style.SideBarButtonIcon>\n            </>\n        )\n    }\n\n    else if (mode === 'processes') {\n        return (\n            <>\n                {handleConfirmationModal()}\n                <style.SideBarButtonIcon\n                    className={'fas fa-route'}\n                    onClick={() => {\n                        if (locationEditing || taskEditing || processEditing) {\n                            setConfirmDeleteModal(true)\n                        }\n                        else{props.setShowSideBarPage(mode)}\n                    }}\n                    currentMode={currentMode}\n                    mode={mode}\n                >\n                    <style.SideBarButtonText>Processes</style.SideBarButtonText>\n                </style.SideBarButtonIcon>\n            </>\n        )\n    }\n\n    else if (mode === 'scheduler') {\n        return (\n            <>\n                <style.SideBarButtonIcon\n                    className={'far fa-calendar-alt'}\n                    onClick={() => {\n                        if (locationEditing || taskEditing || processEditing) {\n                            setConfirmDeleteModal(true)\n                        }\n                        else{props.setShowSideBarPage(mode)}\n                    }}\n                    currentMode={currentMode}\n                    mode={mode}\n                >\n                    <style.SideBarButtonText>Schedules</style.SideBarButtonText>\n                </style.SideBarButtonIcon>\n            </>\n        )\n    }\n\n    else if (mode === 'tasks') {\n        return (\n            <>\n                {handleConfirmationModal()}\n                <style.SideBarButtonIcon\n                    className={'fa fa-tasks'}\n                    onClick={() => {\n                        if (locationEditing || taskEditing || processEditing) {\n                            setConfirmDeleteModal(true)\n                        }\n                        else{props.setShowSideBarPage(mode)}\n                    }}\n                    currentMode={currentMode}\n                    mode={mode}\n                >\n                    <style.SideBarButtonText>Routes</style.SideBarButtonText>\n                </style.SideBarButtonIcon>\n            </>\n        )\n    }\n\n    else if (mode === 'settings') {\n        return (\n            <>\n                {handleConfirmationModal()}\n                <style.SideBarButtonIcon\n                    className={'fas fa-cog'}\n                    onClick={() => {\n                        if (locationEditing || taskEditing || processEditing) {\n                            setConfirmDeleteModal(true)\n                        }\n                        else{props.setShowSideBarPage(mode)}\n                    }}\n                    currentMode={currentMode}\n                    mode={mode}\n\n                >\n                    <style.SideBarButtonText>Settings</style.SideBarButtonText>\n                </style.SideBarButtonIcon>\n            </>\n        )\n    }\n\n    else {\n        return (\n            <style.SideBarButtonIcon\n                className={\"icon-\" + mode}\n                onClick={() => {\n                    props.setShowSideBarPage(mode)\n                }}\n                currentMode={currentMode}\n                mode={mode}\n            />\n        )\n    }\n\n}\n\nexport default SideBarButton\n","import { useDispatch, useSelector } from 'react-redux'\n\nimport {\n    SELECT_LOCATION,\n    SET_SELECTED_LOCATION,\n    SET_SELECTED_LOCATION_COPY,\n    SET_SELECTED_LOCATION_CHILDREN_COPY,\n    DESELECT_LOCATION,\n    EDITING_LOCATION,\n} from '../types/locations_types'\n\nimport * as stationActions from './stations_actions.js'\nimport { deleteStation } from './stations_actions.js'\nimport * as positionActions from './positions_actions.js'\nimport { deletePosition } from './positions_actions.js'\nimport { setSelectedDevice, putDevices } from './devices_actions'\nimport { deleteDashboard } from './dashboards_actions'\nimport { deleteTask } from './tasks_actions'\nimport { putProcesses } from './processes_actions'\n\nimport { deepCopy } from '../../methods/utils/utils';\nimport uuid from 'uuid';\n\n\n// // get\n// // ******************************\n// export const getLocations = () => {\n//     return async dispatch => {\n//         const stations = await dispatch(stationActions.getStations())\n//         const positions = await dispatch(positionActions.getPositions())\n//         return ({ stations: stations, positions: positions })\n//     }\n// }\n// // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// // post\n// // ******************************\n// export const postLocation = (location) => {\n//     return async dispatch => {\n//         if (location.schema == 'station') {\n//             return dispatch(stationActions.postStation(location))\n//         } else if (location.schema == 'position') {\n//             return dispatch(positionActions.postPosition(location))\n//         }\n//     }\n// };\n// // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// // put\n// // ******************************\n// export const putLocation = (location, ID) => {\n//     return async dispatch => {\n//         if (location.schema == 'station') {\n//             return dispatch(stationActions.putStation(location, ID))\n//         } else if (location.schema == 'position') {\n//             return dispatch(positionActions.putPosition(location, ID))\n//         }\n//     }\n// }\n// // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// // delete\n// // ******************************\n// export const deleteLocation = (id) => {\n//     return async dispatch => {\n//         dispatch(stationActions.deleteStation(id))\n//         // TODO: Why is this here? Is this a catch because it may either be a position or location?\n//         // dispatch(positionActions.deletePosition(id))\n//     }\n// }\n// // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// export const addLocation = (location) => {\n//     return async dispatch => {\n//         if (location.schema == 'station') {\n//             dispatch(stationActions.addStation(location))\n//         } else if (location.schema == 'position') {\n//             dispatch(positionActions.addPosition(location))\n//         }\n//     }\n// }\n\n// export const updateLocation = (location) => {\n//     return async dispatch => {\n//         if (location.schema == 'station') {\n//             dispatch(stationActions.updateStation(location))\n//         } else if (location.schema == 'position') {\n//             dispatch(positionActions.updatePosition(location))\n//         }\n\n//     }\n// }\n\n// export const updateChildren = (location) => {\n//     return async dispatch => {\n\n\n\n//         dispatch(stationActions.updateStation(location))\n//         dispatch(positionActions.updatePosition(location))\n\n//     }\n// }\n\n\n// export const updateLocations = (locations) => {\n//     return async dispatch => {\n//         Object.values(locations).forEach(location => {\n//             if (location.schema == 'station') {\n//                 dispatch(stationActions.updateStation(location))\n//             } else if (location.schema == 'position') {\n//                 dispatch(positionActions.updatePosition(location))\n//             }\n//         })\n//     }\n// }\n\n// export const removeLocation = (location) => {\n\n//     const {\n//         _id,\n//         children\n//     } = location\n\n//     if (location.schema === 'station') {\n\n//         return async dispatch => {\n//             dispatch(stationActions.removeStation(_id))\n\n//             children.forEach((child) => {\n//                 dispatch(positionActions.removePosition(child))\n//             })\n//         }\n//     }\n\n//     else if (location.schema === 'position') {\n//         return async dispatch => {\n//             dispatch(positionActions.removePosition(_id))\n//         }\n//     }\n// }\n\n// export const setLocationAttributes = (id, attr) => {\n//     return async dispatch => {\n//         dispatch(stationActions.setStationAttributes(id, attr))\n//         dispatch(positionActions.setPositionAttributes(id, attr))\n//     }\n// }\n\n// export const selectLocation = (id) => {\n//     return { type: SELECT_LOCATION, payload: { id } }\n// }\n\n// export const setSelectedLocation = (location) => {\n//     return { type: SET_SELECTED_LOCATION, payload: { location } }\n// }\n\n// export const deselectLocation = () => {\n//     return { type: DESELECT_LOCATION }\n// }\n\n// export const setSelectedLocationCopy = (location) => {\n//     return { type: SET_SELECTED_LOCATION_COPY, payload: location }\n// }\n\n// export const setSelectedLocationChildrenCopy = (locationChildren) => {\n//     return { type: SET_SELECTED_LOCATION_CHILDREN_COPY, payload: locationChildren }\n// }\n\n\nexport const editing = (bool) => {\n    return { type: EDITING_LOCATION, payload: bool }\n}\n\n\n// ======================================== //\n//                                          //\n//  Back, Delete, Save Location Functions   //\n//                                          //\n// ======================================== //\n\n\n/**\n * This handles when the back button is pressed on either devices or locations\n * If the location is new, it is deleted;\n * otherwise, it is reverted to the state it was when editing begun.\n * @param {*} props\n */\n\nexport const sideBarBack = (props) => {\n    \n}\n\n\n\n\n\n/**\n* Called when the delete button is pressed. Deletes the location, its children, its dashboards,\n* and any tasks associated with the location\n*/\nexport const deleteLocationProcess = (props) => {\n\n}\n","export const SELECT_LOCATION = 'SELECT_LOCATION'\nexport const DESELECT_LOCATION = 'DESELECT_LOCATION'\nexport const SET_SELECTED_LOCATION = 'SET_SELECTED_LOCATION'\nexport const SET_SELECTED_LOCATION_COPY = 'SET_SELECTED_LOCATION_COPY'\nexport const SET_SELECTED_LOCATION_CHILDREN_COPY = 'SET_SELECTED_LOCATION_CHILDREN_COPY'\nexport const EDITING_LOCATION = 'EDITING_LOCATION'\n","import styled from 'styled-components'\n\nexport const SideBarContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 6rem;\n    margin-top: 0rem;\n\n    transition: width 0.25s ease-in-out;\n\n    @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n        width: 4.5rem;\n\n    }\n`","import {\n    SET_MODE,\n    SET_ACTION,\n    SET_WIDTH,\n    SET_OPEN,\n} from '../types/sidebar_types'\n\nexport const setMode = (mode) => {\n    return { type: SET_MODE, payload: {mode}}\n}\n\nexport const setAction = (action) => {\n    return { type: SET_ACTION, payload: {action} }\n}\n\nexport const setWidth = (width) => {\n    return { type: SET_WIDTH, payload: width }\n}\n\nexport const setOpen = (state) => {\n    return { type: SET_OPEN, payload: state}\n}\n","import React, { useState, useMemo, useRef, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory, useLocation } from 'react-router-dom'\n\nimport SideBarButton from '../side_bar_buttons/side_bar_button';\n\nimport * as styled from './side_bar_switcher.style'\nimport { setMode } from '../../../redux/actions/sidebar_actions'\n\nimport { setSelectedStation } from '../../../redux/actions/stations_actions'\nimport { setSelectedPosition } from '../../../redux/actions/positions_actions'\nimport { deselectTask } from '../../../redux/actions/tasks_actions'\nimport { editingTask } from '../../../redux/actions/tasks_actions'\nimport { editingProcess } from '../../../redux/actions/processes_actions'\n\n\n\nconst SideBarSwitcher = (props) => {\n\n    const dispatch = useDispatch()\n    const dispatchSetSelectedStation = (station) => dispatch(setSelectedStation(station))\n    const dispatchSetSelectedPosition = (position) => dispatch(setSelectedPosition(position))\n\n    const dispatchTaskEditing = (props) => dispatch(editingTask(props))\n    const dispatchProcessEditing = (props) => dispatch(editingProcess(props))\n\n    const MiRMapEnabled = useSelector(state => state.localReducer.localSettings.MiRMapEnabled)\n    const mode = useSelector(state => state.sidebarReducer.mode)\n    const serverSettings = useSelector(state => state.settingsReducer.settings)\n    const deviceEnabled = serverSettings.deviceEnabled\n    const wrapperRef = useRef(null)\n\n    const history = useHistory()\n    const url = useLocation().pathname.split('/')[1]\n\n    return (\n        <styled.SideBarContainer ref={wrapperRef}>\n\n            <SideBarButton\n                mode={'locations'}\n                setShowSideBarPage={(page) => {\n                    dispatch(setMode(page));\n                    history.push(`/${page}`)\n                    dispatchTaskEditing(false)\n                    dispatchProcessEditing(false)\n                }}\n                currentMode={url}\n            />\n\n            <SideBarButton\n                mode={'tasks'}\n                setShowSideBarPage={(page) => {\n                    dispatch(setMode(page));\n                    history.push(`/${page}`)\n                    dispatchSetSelectedStation(null)\n                    dispatchSetSelectedPosition(null)\n                    dispatch(deselectTask())\n                    dispatchProcessEditing(false)\n                    dispatchTaskEditing(false)\n                }}\n                currentMode={url}\n            />\n\n            <SideBarButton\n                mode={'processes'}\n                setShowSideBarPage={(page) => {\n                    dispatch(setMode(page));\n                    history.push(`/${page}`)\n                    dispatchSetSelectedStation(null)\n                    dispatchSetSelectedPosition(null)\n                    dispatch(deselectTask())\n                    dispatchTaskEditing(false)\n                    dispatchProcessEditing(false)\n                }}\n                currentMode={url}\n            />\n\n            {/* Commented out for now, probably going to delete */}\n            {/* <SideBarButton\n                mode={'objects'}\n                setShowSideBarPage={(page) => {\n                    dispatch(setMode(page));\n                    history.push(`/${page}`)\n                    dispatchSetSelectedStation(null)\n                    dispatchSetSelectedPosition(null)\n                    dispatch(deselectTask())\n                }}\n                currentMode={url}\n            /> */}\n            {/* {MiRMapEnabled &&\n              <SideBarButton\n                  mode={'scheduler'}\n                  setShowSideBarPage={(page) => {\n                      dispatch(setMode(page));\n                      history.push(`/${page}`)\n                    dispatchSetSelectedStation(null)\n                    dispatchSetSelectedPosition(null)\n                      dispatch(deselectTask())\n                  }}\n                  currentMode={url}\n              />\n            } */}\n\n            <SideBarButton\n                mode={'lots'}\n                setShowSideBarPage={(page) => {\n                    dispatch(setMode(page));\n                    history.push(`/${page}`)\n                    dispatchTaskEditing(false)\n                }}\n                currentMode={url}\n            />\n\n            {!!deviceEnabled &&\n              <SideBarButton\n                  mode={'devices'}\n                  setShowSideBarPage={(page) => {\n                      dispatch(setMode(page));\n                      history.push(`/${page}`)\n                      dispatchTaskEditing(false)\n                  }}\n                  currentMode={url}\n              />\n            }\n\n            <SideBarButton\n                mode={'settings'}\n                setShowSideBarPage={(page) => {\n                    dispatch(setMode(page));\n                    history.push(`/${page}`)\n                    dispatchSetSelectedStation(null)\n                    dispatchSetSelectedPosition(null)\n                    dispatch(deselectTask())\n                    dispatchTaskEditing(false)\n                }}\n                currentMode={url}\n            />\n\n\n        </styled.SideBarContainer>\n    )\n\n}\n\nexport default SideBarSwitcher\n","import styled from 'styled-components'\nimport { RGB_Linear_Shade, hexToRGBA } from '../../../../methods/utils/color_utils'\n\n\n// ========== Content ========== //\nexport const ContentContainer = styled.div`\n    flex-grow: 1;\n    padding: 1rem;\n    padding-top: 1.5rem;\n\n    display: flex;\n    flex-direction: column;\n\n`\n\nexport const ContentHeader = styled.div`\n    display: flex; \n    flex-direction: row;\n`\n\nexport const ContentTitle = styled.h1`\n    font-family: ${props => props.theme.font.primary};\n    font-size: 2rem;\n    font-weight: 500;\n    color: ${props => props.theme.schema.locations};\n    flex-grow: 1;\n`\n\n// ========== Location List ========== //\n\nexport const LocationList = styled.ul`\n    flex-grow: 1;\n    padding: 0;\n`\n\nexport const LocationItem = styled.div`\n    width: auto;\n    height: 2rem;\n    box-sizing: content-box;\n\n    text-align: center;\n\n    background: transparent;\n    border-radius: 0.5rem;\n    margin-bottom: 0.4rem;\n\n    border: 0.1rem solid white;\n    box-sizing: border-box;\n\n    cursor: pointer;\n    user-select: none;\n\n    &:hover {\n        background: ${props => props.theme.bg.octonary};\n    }\n`\n\nexport const LocationText = styled.span`\n    height: 2rem;\n    line-height: 2rem;\n    box-sizing: content-box;\n\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz4};\n    font-weight: 500;\n    color: ${props => props.theme.bg.octonary};\n\n    ${props => props.selected && `\n        background: ${props.theme.schema.locations};\n        -webkit-text-fill-color: transparent;\n        -webkit-background-clip: text;\n        display:block;\n    `}\n`\n\n// ========== Type Buttons & Containers ========== //\n\n\n\nexport const CustomTypesContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n\n    margin: 0.5rem 0 0.5rem 0;\n    justify-content: center;\n`\n\nexport const Label = styled.h3`\n    font-family: ${props => props.theme.font.primary};\n    font-size: 1.5rem;\n    font-weight: 500;\n    color: ${props => props.theme.schema[props.schema].solid};\n    user-select: none;\n    text-align: center;\n`","import styled from 'styled-components'\nimport { RGB_Linear_Shade, hexToRGBA } from '../../../../methods/utils/color_utils'\nimport * as commonCss from \"../../../../common_css/common_css\";\n\n\n// ========== Content ========== //\nexport const Container = styled.div`\n    flex-grow: 1;\n    padding: 1rem;\n    padding-top: 1.5rem;\n    display: flex;\n    flex-direction: column;\n    overflow-x: hidden;\n    margin-right: .5rem;\n\n\n`\n\nexport const Header = styled.div`\n    display: flex;\n    flex-direction: row;\n\n`\n\nexport const Title = styled.h1`\n    font-family: ${props => props.theme.font.primary};\n    font-size: 2rem;\n    font-weight: 500;\n    color: ${props => props.theme.schema[props.schema].solid};\n    flex-grow: 1;\n    user-select: none;\n`\n\n// ========== List ========== //\n\nexport const List = styled.ul`\n    flex-grow: 1;\n    padding: 0;\n`\n\nexport const ListItem = styled.div`\n    display: flex;\n    align-items: center;\n    width: auto;\n    height: 3rem;\n    text-overflow: ellipsis;\n    justify-content: space-between;\n    background: transparent;\n    padding: 0rem 1rem;\n\n    border-radius: 0.5rem;\n    border: 0.1rem solid;\n    border-color: ${props => props.error ? 'red' : 'white'};\n  \n    // border-color: ${props => props.isNew ? 'blue' : 'white'};\n\n  ${props => props.isNew &&  commonCss.newGlow};\n\n    margin-bottom: 1rem;\n\n\n`\n\nexport const ListItemRect = styled.div`\n    height: 100%;\n    width: 100%;\n\n    border-radius: 0.5rem;\n    text-align: center;\n    padding-right:0.5rem;\n    cursor: pointer;\n    user-select: none;\n\n    border: 0.1rem solid white;\n    box-sizing: border-box;\n\n    &:hover {\n        background: ${props => props.theme.bg.octonary};\n    }\n\n`\nexport const LocationTypeGraphic = styled.svg`\n    height: 1.5rem;\n`\nexport const ListItemTitle = styled.h1`\n\n    font-family: ${props => props.theme.font.primary};\n    /* font-size: ${props => props.theme.fontSize.sz3}; */\n    font-size: 1rem;\n    font-weight: 500;\n    color: ${props => props.theme.bg.octonary};\n    user-select: none;\n\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    margin-right:0.5rem;\n    margin-bottom: 0rem;\n    width: 75%;\n`\n\nexport const ListItemIcon = styled.i`\n\n    font-size: 1.3rem;\n    color: lightgreen;\n\n\n\n    &:hover {\n        cursor: pointer;\n        color:green;\n    }\n`\n\nexport const ListItemIconContainer = styled.div`\n    position: relative;\n    display: flex;\n    width: 10%;\n`\n\nexport const ErrorContainer = styled.div`\n\tposition: relative;\n`\n","import styled from 'styled-components'\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\n\nexport const Header = styled.div`\n    display: flex; \n    flex-direction: row;\n    width: 100%;\n    justify-content: space-between;\n`\n\nexport const Title = styled.h1`\n    font-family: ${props => props.theme.font.primary};\n    font-size: 2rem;\n    font-weight: 500;\n    color: ${props => props.theme.schema[props.schema].solid};\n    user-select: none;\n`\n\nexport const ClearIcon = styled(DeleteForeverIcon)`\n\n`","import styled from 'styled-components'\nimport {globStyle} from '../../../global_style'\n\nexport const PlusSymbol = styled.i`\n    display: flex;\n    flex-direction: row;\n    flex-basis: 5rem;\n    flex-shrink: 0;\n\n    color: ${props => props.disabled ? props.theme.bg.senary : props.theme.bg.octonary};\n    height: 2rem;\n    width: 2rem;\n    margin: none;\n    padding: none;\n    font-size: 2rem;\n    font-weight: 400;\n    text-align: center;\n    vertical-align: middle;\n    line-height: 2rem;\n\n    transform: translate(-0.52rem, -0.16rem);\n`;\n\nexport const PlusButton = styled.button`\n    width: 2rem;\n    height: 2rem;\n    margin: 0.25rem;\n    margin-top: 0.2rem;\n    background-color: transparent;\n    border: none;\n    text-align: center;\n    box-sizing: border-box;\n\n    :focus {\n      outline: 0;\n    }\n\n`;\n","import React from 'react';\nimport * as style from './plus_button.style'\n\nconst PlusButton = (props) => (\n    <style.PlusButton onClick={props.onClick}>\n        <style.PlusSymbol\n            style={{...props.style}}\n            className={\"far fa-plus-square\"}\n            disabled={props.disabled}\n            schema={props.schema}\n        >\n        </style.PlusSymbol>\n    </style.PlusButton>\n);\n\nexport default PlusButton;\n","import styled from 'styled-components'\n\nexport const BackSymbol = styled.i`\n\n    font-size: 1.2rem;\n    font-weight: 800;\n\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n\n    color: ${props => {\n      if (props.active) {\n        return props.theme.bg.tertiary\n      } else if (props.hovered) {\n        return !!props.schema ? props.theme.schema[props.schema].solid : props.theme.fg.primary\n      } else {\n        return props.theme.bg.octonary\n      }\n    }}\n`;\n\nexport const BackButton = styled.button`\n    width: 2rem;\n    min-width: 2rem;\n    height: 2rem;\n    min-height: 2rem;\n    \n    margin: 0.3rem 0.5rem 0.3rem 0.5rem;\n    padding: 0;\n    border-radius: 0.35rem;\n    background-color: transparent;\n\n    position: relative;\n\n    border: 0.1rem solid ${props => props.theme.bg.octonary};\n    box-sizing: content-box;\n\n    :focus {\n      outline: 0;\n    }\n\n    border: 0.1rem solid ${props => props.hovered ? (!!props.schema ? props.theme.schema[props.schema].solid : props.theme.fg.primary) : props.theme.bg.octonary};\n    &:active {\n      background: ${props => !!props.schema ? props.theme.schema[props.schema].solid : props.theme.fg.primary};\n    }\n\n    ${props => {\n      if (props.active) {\n        return `\n          border: 0.1rem solid transparent;\n          background: ${!!props.schema ? props.theme.schema[props.schema].solid : props.theme.fg.primary};\n        `\n      } else if (props.hovered) {\n        return `\n          border: 0.1rem solid ${!!props.schema ? props.theme.schema[props.schema].solid : props.theme.fg.primary};\n          background: transparent;\n        `\n      } else {\n        return `\n          border: 0.1rem solid ${props.theme.bg.octonary};\n          background: transparent;\n        `\n      }\n    }}\n`;\n","import React, { useState } from 'react';\nimport * as style from './back_button.style'\nimport {globStyle} from '../../../global_style'\n\nconst BackButton = (props) => {\n\n    const [hovered, setHovered] = useState(false)\n    const [active, setActive] = useState(false)\n\n\n    return (\n        <style.BackButton\n            hovered={props.hovered}\n            active={props.active}\n            onClick={props.onClick}\n            schema={props.schema}\n            style={{...props.containerStyle}}\n\n            onMouseEnter={() => setHovered(true)}\n            onMouseLeave={() => setHovered(false)}\n            onMouseDown={() => setActive(true)}\n            onMouseUp={() => setActive(false)}\n        >\n            <style.BackSymbol\n                hovered={props.hovered}\n                active={props.active}\n                style={{...props.style}}\n\n                disable={props.disabled}\n                schema={props.schema}\n                className=\"fa fa-chevron-left\"\n            />\n\n        </style.BackButton>\n    )\n}\n\nexport default BackButton;\n","import styled, {css} from 'styled-components'\nimport {hexToRGBA, RGB_Linear_Shade} from \"../../../methods/utils/color_utils\";\n\nconst activeStyle = css`\n\tbox-shadow: none;\n\ttransform: translateY(4px);\n\tcolor:  ${props => RGB_Linear_Shade(-0.1, hexToRGBA(props.color))};\n\tbackground-color:  ${props => RGB_Linear_Shade(-0.1, hexToRGBA(props.backgroundColor))};\n`\n\nconst hoverStyle = css`\n\tbox-shadow: 5px 5px 5px rgba(0, 0, 0, 0.5);\n\ttransform: translateY(-1px);\n\tcolor:  ${props => RGB_Linear_Shade(0.01, hexToRGBA(props.color))};\n\tbackground-color:  ${props => RGB_Linear_Shade(0.01, hexToRGBA(props.backgroundColor))};\n`\n\n\n\nexport const Container = styled.button`\n  width: ${props => props.width};\n  height: ${props => props.height};\n  color: ${props => props.color};\n  \n  // flex layout\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\t\n  // margins\n  margin: 0;\n  \n  outline: none;\n  &:focus {\n\toutline: none;\n  }\n  \n\tborder: thin solid ${props => props.theme.bg.secondary};\n\tborder-radius: .5rem;\n\tbox-shadow: 1px 1px 5px rgba(0, 0, 0, 0.5);\n\ttransition: all 0.2s ease 0s;\n\tcursor: pointer;\n\toutline: none;\n\t\n  \n  \n  &:hover {\n\t${props => props.hoverable && hoverStyle}\n  }\n  \n  &:active {\n\t${props => props.clickable && activeStyle}\n  }\n  \n  ${props=> props.active && activeStyle}\n  \n  &:focus {\n    outline: none;\n  }\n  \n  ${props => props.disabled &&\n\t{\n\t\t// backgroundImage: `linear-gradient(to bottom right, grey, white)`,\n\t\tpointerEvents: \"none\",\n\t}\n\t\n\t\n}\n  \n\tbackgroundColor: ${props => props.backgroundColor};\n\tpadding: .5rem;\n`\n","import styled from \"styled-components\";\nimport {LightenDarkenColor} from \"../../../../../../methods/utils/color_utils\";\nimport Textbox from \"../../../../../basic/textbox/textbox\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\n\nexport const SchemaIcon = styled.i`\n    color: ${props => props.color};\n    padding: 0;\n    font-size: 2rem;\n    margin: 0;\n    height: fit-content;\n    width: fit-content;\n    // background: blue;\n\n`\n\n// ===== Delete Button ===== //\nexport const DeleteButtonIcon = styled(DeleteForeverIcon)`\n    color: white;\n\n    &:hover {\n        color: ${LightenDarkenColor('#FFFFFF', -20)};\n    }\n\n    width: 5rem;\n    height: 5rem;\n  \n`\n\n\nexport const ColorDropdownInnerContainer = styled.div`\n    height: 100%;\n    line-height: 100%;\n\n    position: relative;\n    width: 8rem;\n    margin-right: 1rem;\n    z-index: 0;\n    // z-index: 100;\n`\n\nexport const DeleteButton = styled.button`\n    margin: 0;\n    padding: 0;\n    background: transparent;\n    border: transparent;\n    outline: none;\n    z-index: 7;\n    color: white;\n    \n    &:focus {\n        outline: none;\n    }\n\n    width: 3rem;\n    margin-left: 1rem;\n\n   \n`\n\nexport const RightContentContainer = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: ${props => props.theme.bg.senary};\n    width: 8rem;\n    border-left: 1px solid ${props => props.theme.bg.tertiary};\n    // padding-left: 1rem;\n    border-top-right-radius: 0.6rem;\n    border-bottom-right-radius: 0.6rem;\n`\n\nexport const TaskName = styled.span`\n\n  font: ${props => props.theme.font.primary};\n  font-size: ${props => props.theme.fontSize.sz3};\n\n  color: ${props => props.theme.bg.tertiary};\n\n`\n\nexport const TransparentTextBox = styled(Textbox)`\n    background: rgba(0 ,0 ,0 , 0.2);\n    border-bottom: 2px solid rgba(0 ,0 ,0 , 0.1);\n\n    &:focus {\n        background-color: rgba(0 ,0 ,0 , 0.3);\n        border-bottom: 2px solid white;\n        outline: none !important;\n    }\n\n    text-align: center;\n`\n\nexport const CenterContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    flex-grow: 1;\n    align-items: center;\n    justify-content: center;\n`\n\nexport const DashboardEditButton = styled.div`\n    height: 6rem;\n\n    display: flex;\n    flex: 1;\n    flex-direction: row;\n        \n    background: ${props => `linear-gradient(180deg, \n                                ${LightenDarkenColor(props.color, 20)} 0%, \n                                ${props.color} 50%, \n                                ${LightenDarkenColor(props.color, -20)} 100%)`};\n    border-top-left-radius: 0.6rem;\n    border-bottom-left-radius: 0.6rem;\n    overflow: visible;\n        \n    // margins\n    // margin: 0 2rem 0.5rem 2rem;\n        \n    // padding\n    padding: 0.5rem 1rem 0.5rem 1rem;\n    \n    outline: none;\n    &:focus {\n        outline: none;\n    }\n\n    letter-spacing: 1.5px;\n    box-shadow: 2px 2px 2px rgba(0, 0, 0, 0.5);\n    \n    outline: none;\n    user-select: none;\n\n    transition: transform 0.2s ease;\n\n    cursor: grab;\n    &:active {\n        box-shadow: 2px 2px 2px rgba(0,0,0,0.5);\n        transform: translateY(-2px);\n        cursor: grabbing;\n    }\n\n}\n`\n\nexport const Container = styled.div`\n    height: 6rem;\n\n    display: flex;\n    flex-direction: row;\n        \n    border-radius: 0.6rem;\n    overflow: visible;\n        \n    // margins\n    margin: 0 2rem 0.5rem 2rem;\n        \n    outline: none;\n    &:focus {\n        outline: none;\n    }\n\n    letter-spacing: 1.5px;\n    box-shadow: 2px 2px 2px rgba(0, 0, 0, 0.5);\n    \n    outline: none;\n    user-select: none;\n\n    transition: transform 0.2s ease;\n\n    cursor: grab;\n    &:active {\n        box-shadow: 2px 2px 2px rgba(0,0,0,0.5);\n        transform: translateY(-2px);\n        cursor: grabbing;\n    }\n\n}\n`","import styled, {css} from \"styled-components\";\nimport {LightenDarkenColor} from \"../../../../../methods/utils/color_utils\";\n\nexport const borderGlowCss = css`\n    --border-width: .1rem;\n    background: none;\n\n    @keyframes moveGradient {\n        50% {\n          background-position: 100% 50%;\n        }\n      }\n\n    border-radius: var(--border-width);\n\n    &::after {\n    position: absolute;\n    content: \"\";\n    top: calc(-1 * var(--border-width));\n    left: calc(-1 * var(--border-width));\n    z-index: -1;\n    width: calc(100% + var(--border-width) * 2);\n    height: calc(100% + var(--border-width) * 2);\n    background: linear-gradient(\n        60deg,\n        /* hsl(224, 85%, 66%), */\n        /* hsl(269, 85%, 66%), */\n        /* hsl(314, 85%, 66%), */\n        /* hsl(359, 85%, 66%), */\n        hsl(44, 85%, 66%),\n        hsl(89, 85%, 66%),\n        hsl(134, 85%, 66%),\n        hsl(179, 85%, 66%)\n    );\n    background-size: 300% 300%;\n    background-position: 0 50%;\n    border-radius: calc(2 * var(--border-width));\n    animation: moveGradient 4s alternate infinite;\n}\n`\n\nexport const ContainerCss = css`\n  position: relative;\n  user-select: none;\n\n  // flex layout\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  flex-grow: 1;\n  width: 100%;\n  overflow: hidden;\n\n  background: ${props => `linear-gradient(180deg, \n                            ${LightenDarkenColor(props.background, 20)} 0%, \n                            ${props.background} 50%, \n                            ${LightenDarkenColor(props.background, -20)} 100%)`};\n  border-radius: 0.6rem;\n\n\n  // margins\n  margin: 0 0 0.1rem 0;\n\n  // padding\n  padding: 0.5rem 1rem 0.5rem 1rem;\n\n  outline: none;\n  &:focus {\n    outline: none;\n  }\n\n  letter-spacing: 1.5px;\n  border: none;\n  box-shadow: ${props => props.clickable ? 'none' : `2px 2px 2px rgba(0, 0, 0, 0.5)`};\n  transition: all 0.1s ease 0s;\n  cursor: pointer;\n  outline: none;\n\n  &:hover {\n    ${props => props.hoverable && !props.clickable &&\n            {\n              boxShadow: \"3px 3px 3px rgba(0, 0, 0, 0.5)\",\n              transform: \"translateY(-1px)\",\n            }\n    }\n  }\n\n  ${props => props.clickable && !props.disabled &&\n          `&:active {\n      background: ${`linear-gradient(180deg, \n          ${LightenDarkenColor(props.background, -20)} 0%, \n          ${props.background} 50%, \n          ${LightenDarkenColor(props.background, 20)} 100%)`\n          }\n    }`\n  }\n\n          ${props => props.disabled &&\n                  {\n                    color: props.theme.bg.quaternary,\n                    background: `linear-gradient(180deg, rgba(255,255,255,0.4) 0%, rgba(255,255,255,0.4) 100%), ${LightenDarkenColor(props.background, -60)}`,\n                    pointerEvents: \"none\",\n                  }\n          }\n\n            // --border-width: 3px;\n          ${props => props.borderGlow &&\n                  borderGlowCss\n          }\n\n          ${props => props.css};\n`\n\nexport const ErrorContainerComponent = styled.div`\n    width: auto;\n    height: auto;\n    position: absolute;\n    top: 50%;\n    right: 1rem;\n    transform: translateY(-50%);\n    margin: 0;\n    padding: 0;\n`;\n\nexport const conditionTextCss = css`\n    font: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz3};\n    max-width: 100%;\n    overflow: hidden;\n    text-overflow: ellipsis;\n`","import styled, { css } from 'styled-components'\n\nimport { borderGlowCss, ContainerCss, conditionTextCss } from \"../dashboard_buttons.style\"\n\n\nexport const Container = styled.button`\n    ${ContainerCss};\n    \n    // flex layout\n    flex-direction: column;\n    \n    // padding\n    padding: 0.5rem 1rem 0.5rem 1rem;\n`\n\nexport const ConditionText = styled.span`\n    ${conditionTextCss};\n`\n\nexport const IconContainer = styled.div`\n    position: absolute;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: ${props => props.theme.bg.senary};\n    right: 0;\n    top: 0;\n    bottom: 0;\n    width: 4rem;\n    border-left: 1px solid ${props => props.theme.bg.tertiary};\n`","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\n// import components\nimport ErrorTooltip from \"../../../../../basic/form/error_tooltip/error_tooltip\";\nimport {SchemaIcon} from \"../../dashboard_editor/button_fields/button_fields.style\";\n\n// Import Styles\nimport * as style from './dashboard_button.style';\nimport * as dashboard_buttons_style from '../dashboard_buttons.style';\nimport { theme } from \"../../../../../../theme\"\n\n// import logging\nimport log from '../../../../../../logger'\nimport {DEVICE_CONSTANTS} from \"../../../../../../constants/device_constants\";\n\nconst logger = log.getLogger(\"Dashboards\", \"EditDashboard\");\n\nconst DashboardButton = (props => {\n\n    const {\n        color,\n        title,\n        children,\n        onClick,\n        deviceType,\n        taskID,\n        disabled,\n        width,\n        height,\n        clickable,\n        hoverable,\n        titleStyle,\n        containerStyle,\n        containerCss,\n        error,\n        type = \"\",\n        iconColor,\n        iconClassName\n    } = props\n\n\n    return (\n        <style.Container\n            type={\"button\"}\n            disabled={disabled}\n            width={width}\n            height={height}\n            background={color}\n            onClick={clickable ? ()=>onClick(taskID, deviceType) : null}\n            borderGlow={taskID === 'hil_success'}\n            clickable={clickable}\n            hoverable={hoverable}\n            style={containerStyle}\n            css={containerCss}\n        >\n            <div style={{display: \"flex\", alignItems: \"center\"}}>\n                <style.ConditionText style={titleStyle}>{title}</style.ConditionText>\n                {(iconColor && iconClassName) &&\n                <style.IconContainer>\n                    <SchemaIcon className={iconClassName} color={color ? color : iconColor}></SchemaIcon>\n                </style.IconContainer>\n\n                }\n\n                {children && children}\n                <ErrorTooltip\n                    visible={error}\n                    text={error}\n                    ContainerComponent={dashboard_buttons_style.ErrorContainerComponent}\n                />\n            </div>\n\n\n\n\n        </style.Container>\n    )\n\n})\n\n// Specifies propTypes\nDashboardButton.propTypes = {\n    clickable: PropTypes.bool,\n    hoverable: PropTypes.bool,\n    title: PropTypes.string,\n    taskID: PropTypes.string,\n    onClick: PropTypes.func,\n    disabled: PropTypes.bool\n};\n\n// Specifies the default values for props:\nDashboardButton.defaultProps = {\n    clickable: true,\n    hoverable: true,\n    title: \"\",\n    taskID: \"\",\n    onClick: () => { },\n    disabled: false\n\n};\n\nexport default (DashboardButton)\n","import { useEffect } from \"react\";\n\n// custom hook that listens for clicks outside of the ref component,\n// and calls the provided handler when outside click is detected\nfunction useOnClickOutside(ref, handler) {\n    useEffect(\n        () => {\n            const listener = event => {\n                // Do nothing if clicking ref's element or descendent elements\n                if (!ref.current || ref.current.contains(event.target)) {\n                    return;\n                }\n\n                handler(event)\n            }\n\n            document.addEventListener('mousedown', listener, {passive:true})\n            document.addEventListener('touchstart', listener, {passive:true})\n\n            return () => {\n                document.removeEventListener('mousedown', listener, {passive:true})\n                document.removeEventListener('touchstart', listener, {passive:true})\n            }\n        },\n        // Add ref and handler to effect dependencies\n        // It's worth noting that because passed in handler is a new ...\n        // ... function on every render that will cause this effect ...\n        // ... callback/cleanup to run every render. It's not a big deal ...\n        // ... but to optimize you can wrap handler in useCallback before ...\n        // ... passing it into this hook.\n        [ref, handler]\n    )\n}\n\nexport default useOnClickOutside\n\n// EXAMPLE\n\n// // Usage\n// function App() {\n//     // Create a ref that we add to the element for which we want to detect outside clicks\n//     const ref = useRef();\n//     // State for our modal\n//     const [isModalOpen, setModalOpen] = useState(false);\n//     // Call hook passing in the ref and a function to call on outside click\n//     useOnClickOutside(ref, () => setModalOpen(false));\n\n//     return (\n//       <div>\n//         {isModalOpen ? (\n//           <div ref={ref}>\n//             👋 Hey, I'm a modal. Click anywhere outside of me to close.\n//           </div>\n//         ) : (\n//           <button onClick={() => setModalOpen(true)}>Open Modal</button>\n//         )}\n//       </div>\n//     );\n//   }\n","import React, {useEffect, useRef, useState} from 'react'\nimport PropTypes from 'prop-types'\n\n// Import Styles\nimport * as style from './bounce_button.style'\nimport DashboardButton from \"../../widgets/widget_pages/dashboards_page/dashboard_buttons/dashboard_button/dashboard_button\"\nimport useOnClickOutside from \"../../../hooks/useOnClickOutside\";\n\nconst BounceButton = (props => {\n\n    const {\n        color,\n        children,\n        onClick,\n        disabled,\n        width,\n        height,\n        clickable,\n        hoverable,\n        containerStyle,\n        Component,\n        backgroundColor,\n        active,\n        onClickOutside\n    } = props\n\n    const ref = useRef() // ref for useOnClickOutside\n    useOnClickOutside(ref, onClickOutside) // calls onClickOutside when click outside of element\n\n    return(\n        <style.Container\n            disabled={disabled}\n            width={width}\n            height={height}\n            onClick={onClick}\n            clickable={clickable}\n            hoverable={hoverable}\n            color={color}\n            backgroundColor={backgroundColor}\n            style={containerStyle}\n            active={active}\n            ref={ref}\n        >\n            { children}\n        </style.Container>\n    )\n\n})\n\n\n// Specifies propTypes\nBounceButton.propTypes = {\n    clickable: PropTypes.bool,\n    hoverable: PropTypes.bool,\n    active: PropTypes.bool,\n    onClick: PropTypes.func,\n    onClickOutside: PropTypes.func,\n    disabled: PropTypes.bool\n}\n\n// Specifies the default values for props:\nBounceButton.defaultProps = {\n    clickable: true,\n    hoverable: true,\n    onClick: () => {},\n    onClickOutside: () => {},\n    disabled: false,\n    width: \"auto\",\n    height: \"auto\",\n    backgroundColor: \"#FFFFFF\",\n    active: false,\n\n}\n\nexport default BounceButton\n","import React from 'react'\n\n// Import styles\nimport * as styled from './contnet_header.style'\n\n// Import Utils\nimport { upperCaseFirstLetterInString } from '../../../../methods/utils/utils'\n\n// Import Components\nimport PlusButton from '../../../basic/plus_button/plus_button'\nimport Button from '../../../basic/button/button'\nimport BackButton from '../../../basic/back_button/back_button'\nimport BounceButton from '../../../basic/bounce_button/bounce_button'\n\nconst ContentHeader = (props) => {\n\n    const {\n        content,\n        onClickAdd,\n        onClickSave,\n        onClickBack,\n        onClickClear,\n        mode,\n        disabled,\n        saveEnabled,\n        backEnabled,\n    } = props\n\n    // Handles the title\n    const handleTitle = () => {\n\n        if (content === 'scheduler') {\n            return 'Schedules'\n        }\n\n        else if (content === 'taskQueue') {\n            return 'Task Queue'\n        }\n\n        else if (content === 'tasks') {\n            return 'Routes'\n        }\n\n        else {\n            return upperCaseFirstLetterInString(content)\n        }\n    }\n\n    // If the side bar is show a list of itemts, then have the title and add button\n    if (mode === 'list') {\n        return (\n            <styled.Header>\n                <styled.Title schema={content}>{handleTitle()}</styled.Title>\n\n                {content === 'taskQueue' ?\n                    <BounceButton\n                        color={\"red\"}\n                        onClick={onClickClear}\n                        disabled={disabled}\n                    >\n                        <styled.ClearIcon\n                            fontSize={\"medium\"}\n                        />\n                    </BounceButton>\n                    :\n                    <PlusButton\n                        onClick={onClickAdd}\n                    />\n                }\n\n            </styled.Header>\n        )\n    }\n\n    // If the side bar is in create mode then have a back button and a save button\n    else if (mode === 'create') {\n        return (\n            <styled.Header>\n\n                <BackButton schema={content} style={{ display: 'inline-block' }}\n                    onClick={onClickBack}\n                />\n\n                <Button schema={content} style={{ display: 'inline-block', float: 'right' }}\n                    onClick={onClickSave} disabled={disabled}\n                >\n                    Save\n                </Button>\n            </styled.Header>\n\n        )\n    }\n\n    // If the side bar is in add mode then have a back button and a add button\n    else if (mode === 'add') {\n        return (\n            <styled.Header>\n\n                <BackButton schema={content} style={{ display: 'inline-block' }}\n                    onClick={onClickBack}\n                />\n\n                <Button schema={content} style={{ display: 'inline-block', float: 'right' }}\n                    onClick={onClickSave} disabled={disabled}\n                >\n                    Add\n                    </Button>\n            </styled.Header>\n\n        )\n    }\n\n    // If the side bar is in title mode then have a back button and if save is enabled then add a save button\n    else if (mode === 'title') {\n        return (\n            <styled.Header>\n\n                <styled.Title schema={content}>{handleTitle()}</styled.Title>\n\n\n                {saveEnabled &&\n\n                    <Button schema={content} style={{ display: 'inline-block', float: 'right' }}\n                        onClick={onClickSave} disabled={disabled}\n                    >\n                        Save\n                    </Button>\n                }\n\n                {backEnabled &&\n                    <BackButton schema={content} style={{ display: 'inline-block' }}\n                        onClick={onClickBack}\n                    />\n                }\n            </styled.Header>\n\n\n        )\n    }\n\n}\n\nContentHeader.defaultProps = {\n    mode: 'list'\n}\n\nexport default ContentHeader\n","import React from 'react'\n\nexport const StationTypes = {\n\n    /**\n     * Heads up, currently there are 2 different svg rectangles being used\n     * One thats width is 200 and height is 320\n     * One thats width is 378 and height 236\n     * \n     * Need to unify this and make all of them standard\n     * Probably use the 200 by 320 since you don't need to add a 'y' offset to the svg\n     * \n     *  */\n\n    warehouse: {\n        svgPath:\n            <svg y=\"50\" x='50'>\n\n                {/* <path d=\"M63.74,128.08v43.71H236.26V128h-69c0,2.79,0,5.34,0,7.89-.06,3.58-1.85,5.23-5.86,5.25q-11.43.07-22.86,0c-4,0-5.81-1.66-5.87-5.24,0-2.62,0-5.25,0-7.8Z\" />\n                <path d=\"M261.06,97.3H38.92v4.08H261.06Z\" />\n                <path d=\"M261,171.79v-61.3H39.05v61.38H53.61v-3.25q0-21.75,0-43.5c0-4.68,1.51-6,6.82-6H239.57c5.3,0,6.81,1.34,6.81,6q0,21.9,0,43.78v2.89Z\" />\n                <path d=\"M157.27,128.11H142.73v4.06h14.54Z\" />\n                <path d=\"M26.33,18C23.36,18,24,20.48,24,22.24q0,128.43,0,256.88v3h4.9v-3.18q0-128.31,0-256.61C28.88,20.5,29.61,17.88,26.33,18Z\" />\n                <path d=\"M236.3,31.27H216.73c0,2.69,0,5.16,0,7.63,0,3.82-1.73,5.36-6,5.38q-8.79,0-17.6,0c-4.41,0-6-1.53-6.07-5.56,0-2.52,0-5,0-7.6H167.52V88.17H236.3Z\" />\n                <path d=\"M206.78,31.22h-9.61v4h9.61Z\" />\n                <path d=\"M38.86,268.67H261v-4H38.86Z\" />\n                <path d=\"M132.53,31.23H112.92c0,2.74,0,5.29,0,7.85,0,3.61-1.79,5.18-5.85,5.2q-9,.06-17.92,0c-4.07,0-5.81-1.58-5.87-5.19,0-2.62,0-5.24,0-7.81H63.59V88.11h68.94Z\" />\n                <path d=\"M102.84,31.25H93.29v4.07h9.55Z\" />\n                <path d=\"M39,185H261.13v-4H39Z\" />\n                <path d=\"M261,255.49V194.14H39v61.44H53.62v-3.2q0-17.48,0-35c0-4.33,1.62-5.76,6.48-5.76H146c4.9,0,6.5,1.4,6.51,5.72q0,17.63,0,35.25v2.86H167.3v-3.14q0-24,0-47.91c0-4.68,1.51-6,6.81-6h65.48c5.29,0,6.79,1.34,6.79,6q0,24,0,47.91v3.12Z\" />\n                <path d=\"M107.85,220.61H98.28v4.08h9.57Z\" />\n                <path d=\"M270,0H30A30,30,0,0,0,0,30V270a30,30,0,0,0,30,30H270a30,30,0,0,0,30-30V30A30,30,0,0,0,270,0Zm15.92,219.88q0,32.76,0,65.52c0,4-1.72,5.55-6.1,5.58q-6.33,0-12.66,0c-4.19,0-5.9-1.62-5.94-5.43,0-2.54,0-5.08,0-7.65H38.79c0,2.84.05,5.49,0,8.14-.07,3.25-1.89,4.87-5.55,4.93s-7.62,0-11.43,0c-6.43,0-7.67-1.12-7.67-7q0-130.77-.12-261.55C14,15.73,16.72,11.2,24,9h4.94c7.25,2.17,10,6.69,10,13.45-.22,20.83-.08,41.66-.08,62.49v3.15H53.62V28.43c0-4.85,1.52-6.19,7-6.19h75.05c5.43,0,6.93,1.35,6.93,6.23V88.11h14.83V28.47c0-4.88,1.5-6.23,6.93-6.23h75c5.47,0,7,1.34,7,6.18v59.7H261.2V84.94c0-20.83.14-41.66-.08-62.49-.07-6.76,2.73-11.28,10-13.45H276c7.39,2.24,10,6.93,10,13.75Q285.79,121.32,285.92,219.88Z\" />\n                <path d=\"M273.45,18c-3,.05-2.35,2.53-2.35,4.28q0,128.46,0,256.91V282H276V279q0-128.32,0-256.64C276,20.49,276.71,17.89,273.45,18Z\" />\n                <path d=\"M177.45,207.42v48.17h58.83V207.37H222.12c-.22.21-.35.27-.35.34,0,2.57,0,5.13-.11,7.7-.08,3.4-1.88,5-5.74,5.05q-9.1.06-18.21,0c-3.84,0-5.62-1.66-5.69-5.1-.05-2.63,0-5.26,0-7.93Z\" />\n                <path d=\"M63.71,220.58v34.95h78.68V220.69H117.87c0,2.79,0,5.36,0,7.92-.07,3.42-1.87,5-5.74,5.06q-9.11.08-18.22,0c-3.83,0-5.62-1.67-5.68-5.11,0-2.63,0-5.26,0-8Z\" />\n                <path d=\"M211.61,207.41H202v4.11h9.59Z\" /> */}\n\n\n                <rect width=\"300\" height=\"300\" rx=\"30\" />\n                <path fill='#3B3C43' d=\"M271.1,9H276c7.39,2.24,10,6.93,10,13.75q-.21,98.57-.08,197.12,0,32.77,0,65.53c0,4-1.72,5.55-6.1,5.58q-6.33,0-12.66,0c-4.19,0-5.9-1.62-5.94-5.43,0-2.54,0-5.08,0-7.65H38.79c0,2.84.05,5.49,0,8.14-.07,3.25-1.89,4.87-5.55,4.93s-7.62,0-11.43,0c-6.43,0-7.67-1.12-7.67-7q0-130.77-.12-261.55C14,15.73,16.72,11.2,24,9h4.94c7.25,2.17,10,6.69,10,13.45-.22,20.83-.08,41.66-.08,62.49v3.15H53.62V28.43c0-4.85,1.52-6.19,7-6.19h75.05c5.43,0,6.93,1.35,6.93,6.23V88.11h14.83V28.47c0-4.88,1.5-6.23,6.93-6.23h75c5.47,0,7,1.34,7,6.18v59.7H261.2V84.94c0-20.83.14-41.66-.08-62.49C261.05,15.69,263.85,11.17,271.1,9ZM167.3,128c0,2.79,0,5.34,0,7.89-.06,3.58-1.85,5.23-5.86,5.25q-11.43.07-22.86,0c-4,0-5.81-1.66-5.87-5.24,0-2.62,0-5.25,0-7.8h-69v43.71H236.26V128ZM53.62,255.58v-3.2q0-17.48,0-35c0-4.33,1.62-5.76,6.48-5.76H146c4.9,0,6.5,1.4,6.51,5.72q0,17.63,0,35.25v2.86H167.3v-3.14q0-24,0-47.91c0-4.68,1.51-6,6.81-6h65.48c5.29,0,6.79,1.34,6.79,6q0,24,0,47.91v3.12H261V194.14H39v61.44Zm10-167.47h68.94V31.23H112.92c0,2.74,0,5.29,0,7.85,0,3.61-1.79,5.18-5.85,5.2q-9,.06-17.92,0c-4.07,0-5.81-1.58-5.87-5.19,0-2.62,0-5.24,0-7.81H63.59Zm103.93-57V88.17H236.3V31.27H216.73c0,2.69,0,5.16,0,7.63,0,3.82-1.73,5.36-6,5.38q-8.79,0-17.6,0c-4.41,0-6-1.53-6.07-5.56,0-2.52,0-5,0-7.6ZM53.61,171.87v-3.25q0-21.75,0-43.5c0-4.68,1.51-6,6.82-6H239.57c5.3,0,6.81,1.34,6.81,6q0,21.9,0,43.78v2.89H261v-61.3H39.05v61.38Zm182.67,83.72V207.37H222.12c-.22.21-.35.27-.35.34,0,2.57,0,5.13-.11,7.7-.08,3.4-1.88,5-5.74,5.05q-9.1.06-18.21,0c-3.84,0-5.62-1.66-5.69-5.1-.05-2.63,0-5.26,0-7.93H177.45v48.17Zm-172.57-35v34.95h78.68V220.69H117.87c0,2.79,0,5.36,0,7.92-.07,3.42-1.87,5-5.74,5.06q-9.11.08-18.22,0c-3.83,0-5.62-1.67-5.68-5.11,0-2.63,0-5.26,0-8ZM28.9,282.1v-3.18q0-128.31,0-256.61c0-1.81.73-4.43-2.55-4.36C23.36,18,24,20.48,24,22.24q0,128.43,0,256.88v3ZM276,282V279q0-128.32,0-256.64c0-1.82.7-4.42-2.56-4.36-3,.05-2.35,2.53-2.35,4.28q0,128.46,0,256.91V282Zm-15-184.74H38.92v4.08H261.06Zm.07,83.68H39v4H261.13ZM38.86,268.67H261v-4H38.86ZM157.27,128.11H142.73v4.06h14.54Zm-64-92.79h9.55V31.25H93.29Zm113.49-4.1h-9.61v4h9.61ZM202,211.52h9.59v-4.11H202Zm-94.17,9.09H98.28v4.08h9.57Z\" />\n            </svg>,\n\n        attributes:\n        {\n            schema: 'station',\n            type: 'warehouse',\n            children: [],\n            dashboards: [],\n            new: true,\n        },\n        color: '#f4a460'\n    },\n\n    // workstation: {\n    //     svgPath:\n    //         <>\n    //             <rect x=\"100\" y=\"40\" width=\"300\" height=\"300\" rx=\"10\" transform=\"translate(390 -50) rotate(90)\" fill=\"none\" strokeMiterlimit=\"10\" strokeWidth=\"20\" />\n    //             <rect x=\"120\" y=\"60\" width=\"260\" height=\"260\" rx=\"2\" transform=\"translate(390 -50) rotate(90)\" />\n    //         </>,\n    //     attributes:\n    //     {\n    //         schema: 'station',\n    //         type: 'workstation',\n    //         children: [],\n    //         dashboards: [],\n    //         new: true,\n    //     },\n    //     color: '#6283f0'\n    // },\n\n    human: {\n        svgPath:\n            // <svg y=\"70\">\n            //     <rect fill='transparent' strokeMiterlimit='10' strokeWidth='20px' x=\"10\" y=\"10\" width=\"378\" height=\"236\" rx=\"30\" />\n            //     <path d=\"M194,123a49.63,49.63,0,1,0-49.62-49.63A49.62,49.62,0,0,0,194,123Zm34.74,12.41h-6.48a67.51,67.51,0,0,1-56.52,0h-6.48a52.12,52.12,0,0,0-52.1,52.1v16.13a18.61,18.61,0,0,0,18.61,18.61H262.23a18.61,18.61,0,0,0,18.61-18.61V187.51A52.12,52.12,0,0,0,228.74,135.41Z\" />\n            // </svg>,\n            <svg y=\"50\" x='50'>\n                <rect width=\"300\" height=\"300\" rx=\"30\" />\n                <path fill='#3B3C43' d=\"M150,150A56.07,56.07,0,1,0,93.94,93.94,56.05,56.05,0,0,0,150,150Zm39.24,14h-7.31a76.32,76.32,0,0,1-63.86,0h-7.31a58.88,58.88,0,0,0-58.87,58.86V241.1a21,21,0,0,0,21,21H227.09a21,21,0,0,0,21-21V222.88A58.88,58.88,0,0,0,189.24,164Z\" />\n            </svg>,\n        attributes:\n        {\n            schema: 'station',\n            type: 'human',\n            children: [],\n            dashboards: [],\n            new: true,\n        },\n        color: '#5eec33',\n    },\n\n}","import React from 'react'\nimport uuid from 'uuid'\n\nexport const PositionTypes = {\n\n    /**\n     * Heads up, currently there are 2 different svg rectangles being used\n     * One thats width is 200 and height is 320\n     * One thats width is 378 and height 236\n     *\n     * Need to unify this and make all of them standard\n     * Probably use the 200 by 320 since you don't need to add a 'y' offset to the svg\n     *\n     *  */\n\n    shelf_position: {\n        svgPath:\n            <svg y=\"70\">\n                <path d=\"M263.53,56.31l33,47a10,10,0,0,1-8.18,15.74h-66a10,10,0,0,1-8.19-15.74l33-47A10,10,0,0,1,263.53,56.31Z\" />\n                <path d=\"M142.71,56.31l33,47a10,10,0,0,1-8.19,15.74h-66a10,10,0,0,1-8.18-15.74l33-47A10,10,0,0,1,142.71,56.31Z\" />\n                <circle cx=\"255.44\" cy=\"146.56\" r=\"12.5\" />\n                <circle cx=\"255.44\" cy=\"181.56\" r=\"7.5\" />\n                <circle stroke='none' cx=\"134.44\" cy=\"146.56\" r=\"12.5\" />\n                <circle cx=\"134.44\" cy=\"181.56\" r=\"7.5\" />\n                <rect fill='transparent' strokeMiterlimit='10' strokeWidth='20px' x=\"10\" y=\"10\" width=\"378\" height=\"236\" rx=\"30\" />\n            </svg>,\n        attributes:\n        {\n            schema: 'position',\n            type: 'shelf_position',\n            parent: null,\n            new: true,\n        },\n        color: '#fb7c4e',\n\n    },\n\n    charger_position: {\n        svgPath:\n            <svg y=\"70\">\n                <path d=\"M344.75,131.18l-47,33A10,10,0,0,1,282,156V90a10,10,0,0,1,15.75-8.18l47,33A10,10,0,0,1,344.75,131.18Z\" />\n                <rect fill='none' strokeMiterlimit='10' strokeWidth='20px' x=\"5\" y=\"5\" width=\"378\" height=\"236\" rx=\"30\" />\n                <path d=\"M251,171.13c-2.45,3.47-4.09,3.9-8.1,2.12l-73.27-32.63c-.72-.32-1.45-.61-2.47-1v3.15q0,12.9,0,25.81c0,4.89-3,6.91-7.46,5L31.14,118.34c-2.83-1.22-4.08-3.12-3.65-5.47s2.19-3.61,5.09-3.91q29.51-3,59-6c9-.91,17.93-1.86,26.91-2.63,1.81-.15,2.1-.82,2.06-2.38-.09-3.65,0-7.29,0-10.94,0-4.26,1.43-5.77,5.64-6.1q32.61-2.53,65.23-5.1c17.69-1.36,35.38-2.65,53.06-4.08,2.93-.23,5.1.52,6.54,3.12Z\" />\n                <rect fill='transparent' strokeMiterlimit='10' strokeWidth='20px' x=\"10\" y=\"10\" width=\"378\" height=\"236\" rx=\"30\" />\n            </svg>,\n        color: '#fbd34e',\n\n    },\n\n    cart_position: {\n        svgPath:\n            <>\n                <rect fill='transparent' x=\"100\" y=\"40\" width=\"200\" height=\"320\" rx=\"30\" transform=\"translate(400 0) rotate(90)\" strokeMiterlimit=\"10\" strokeWidth=\"20\" />\n                <path d=\"M315.5,200.87l-64,36.95A1,1,0,0,1,250,237v-73.9a1,1,0,0,1,1.5-.87l64,36.95A1,1,0,0,1,315.5,200.87Z\" strokeMiterlimit=\"10\" strokeWidth=\"10\" />\n                <circle cx=\"200\" cy=\"200\" r=\"15\" />\n                <circle cx=\"150\" cy=\"200\" r=\"10\" />\n                <circle cx=\"102.5\" cy=\"200\" r=\"7.5\" />\n            </>,\n        attributes:\n        {\n            schema: 'position',\n            type: 'cart_position',\n            parent: null,\n            new: true,\n        },\n        color: '#6283f0',\n    },\n\n    temporary_cart_position: {\n        svgPath:\n            <>\n                <rect fill='transparent' x=\"100\" y=\"40\" width=\"200\" height=\"320\" rx=\"30\" transform=\"translate(400 0) rotate(90)\" strokeMiterlimit=\"10\" strokeWidth=\"20\" />\n                <path d=\"M315.5,200.87l-64,36.95A1,1,0,0,1,250,237v-73.9a1,1,0,0,1,1.5-.87l64,36.95A1,1,0,0,1,315.5,200.87Z\" strokeMiterlimit=\"10\" strokeWidth=\"10\" />\n                <circle cx=\"200\" cy=\"200\" r=\"15\" />\n                <circle cx=\"150\" cy=\"200\" r=\"10\" />\n                <circle cx=\"102.5\" cy=\"200\" r=\"7.5\" />\n            </>,\n        attributes:\n        {\n            schema: 'temporary_position',\n            type: 'cart_position',\n            parent: null,\n            new: true,\n        },\n        color: '#6283f0',\n    },\n\n    // human_position: {\n    //     svgPath:\n    //         // <svg y=\"70\">\n    //         //     <rect fill='transparent' strokeMiterlimit='10' strokeWidth='20px' x=\"10\" y=\"10\" width=\"378\" height=\"236\" rx=\"30\" />\n    //         //     <path d=\"M194,123a49.63,49.63,0,1,0-49.62-49.63A49.62,49.62,0,0,0,194,123Zm34.74,12.41h-6.48a67.51,67.51,0,0,1-56.52,0h-6.48a52.12,52.12,0,0,0-52.1,52.1v16.13a18.61,18.61,0,0,0,18.61,18.61H262.23a18.61,18.61,0,0,0,18.61-18.61V187.51A52.12,52.12,0,0,0,228.74,135.41Z\" />\n    //         // </svg>,\n    //         <svg y=\"50\" x='50'>\n    //             <rect width=\"300\" height=\"300\" rx=\"30\" />\n    //             <path fill='#3B3C43' d=\"M150,150A56.07,56.07,0,1,0,93.94,93.94,56.05,56.05,0,0,0,150,150Zm39.24,14h-7.31a76.32,76.32,0,0,1-63.86,0h-7.31a58.88,58.88,0,0,0-58.87,58.86V241.1a21,21,0,0,0,21,21H227.09a21,21,0,0,0,21-21V222.88A58.88,58.88,0,0,0,189.24,164Z\" />\n    //         </svg>,\n    //     attributes:\n    //     {\n    //         schema: 'station',\n    //         type: 'human',\n    //         parent: null,\n    //         new: true,\n    //     },\n    //     color: '#5eec33',\n    // },\n\n}\n\nexport const newPositionTemplate = (name, type, parent, map_id) => {\n\n    return {\n        name: name,\n        schema: 'position',\n        type: type,\n        temp: true,\n        new: true,\n        pos_x: 0,\n        pos_y: 0,\n        rotation: 0,\n        x: 0,\n        y: 0,\n        parent: parent,\n        _id: uuid.v4(),\n        map_id: map_id\n    }\n}\n","import React, { useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\n// Import Styles\nimport * as styled from './content_list.style'\n\n// Import Components\nimport ContentHeader from '../content_header/content_header'\nimport ErrorTooltip from '../../../basic/form/error_tooltip/error_tooltip'\n\n// Import Utils\nimport { deepCopy } from '../../../../methods/utils/utils'\n\n// Import Constants\nimport { StationTypes } from '../../../../constants/station_constants'\nimport { PositionTypes } from '../../../../constants/position_constants'\n\n\nexport default function ContentList(props) {\n\n    const {\n        executeTask,\n        hideHeader,\n        handleCardView,\n        elements,\n    } = props\n\n    let taskQueue = useSelector(state => state.taskQueueReducer.taskQueue)\n    const [inQueue, setInQueue] = useState(false)\n\n\n    const handleInQueue = (element) => {\n        setInQueue(false)\n        if (!!element) {\n\n            Object.values(taskQueue).forEach((taskQueueItem, ind) => {\n                if (element._id === taskQueueItem.task_id) {\n                    setInQueue(true)\n                }\n            })\n        }\n        return inQueue\n    }\n\n    const renderLocationTypeIcon = (element) => {\n\n        const LocationTypes ={\n            ...StationTypes,\n            ...PositionTypes,\n        }\n\n        switch (element.type) {\n\n            case 'charger_position':\n                return (\n                    <styled.LocationTypeGraphic fill={LocationTypes['shelf_position'].color} stroke={LocationTypes['shelf_position'].color} id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 400 400\">\n                        {LocationTypes['charger_position'].svgPath}\n                    </styled.LocationTypeGraphic>\n                )\n\n            case 'shelf_position':\n                return (\n                    <styled.LocationTypeGraphic fill={LocationTypes['shelf_position'].color} stroke={LocationTypes['shelf_position'].color} id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 400 400\">\n                        {LocationTypes['shelf_position'].svgPath}\n                    </styled.LocationTypeGraphic>\n                )\n\n            case 'warehouse':\n                return (\n                    <styled.LocationTypeGraphic fill={LocationTypes['warehouse'].color} stroke={LocationTypes['warehouse'].color} id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 400 400\">\n                        {LocationTypes['warehouse'].svgPath}\n                    </styled.LocationTypeGraphic>\n                )\n\n            case 'human':\n                return (\n                    <styled.LocationTypeGraphic fill={LocationTypes['human'].color} stroke={LocationTypes['human'].color} id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 400 400\">\n                        {LocationTypes['human'].svgPath}\n                    </styled.LocationTypeGraphic>\n                )\n\n            case 'cart_position':\n                return (\n                    <styled.LocationTypeGraphic fill={LocationTypes['cart_position'].color} stroke={LocationTypes['cart_position'].color} id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 400 400\">\n                        {LocationTypes['cart_position'].svgPath}\n                    </styled.LocationTypeGraphic>\n                )\n        }\n    }\n\n\n    return (\n        <styled.Container>\n\n            {!hideHeader &&\n                <ContentHeader content={props.schema} onClickAdd={props.onPlus} />\n            }\n\n            <styled.List>\n                {elements.map((element, ind) => {\n                    const error = (props.schema === 'processes' && element.broken) ? true : false\n                    return (\n                        <>\n                            <styled.ListItem\n                                key={`li-${ind}`}\n                                error={error}\n                                onMouseEnter={() => props.onMouseEnter(element)}\n                                onMouseLeave={() => props.onMouseLeave(element)}\n                            >\n                                <styled.ListItemIconContainer style={{ width: '15%' }} >\n\n                                    {props.schema === 'locations' &&\n                                        <>\n                                            {renderLocationTypeIcon(element)}\n                                        </>\n                                    }\n\n\n                                    {props.schema === 'tasks' &&\n\n                                        <styled.ListItemIcon\n                                            className='fas fa-play'\n                                            onClick={() => {\n                                                executeTask()\n                                            }}\n                                        />\n                                    }\n\n                                    {props.schema === 'processes' ? error ?\n                                        <div\n                                            onClick={() => props.onClick(element)}\n                                        >\n                                            <ErrorTooltip\n                                                visible={true}\n                                                text={'Process is broken, click to fix'}\n                                                ContainerComponent={styled.ErrorContainer}\n                                            />\n                                        </div>\n                                        :\n                                        <styled.ListItemIcon\n                                            className='far fa-clone'\n                                            style={{ color: '#ffb62e' }}\n                                            onClick={() => {\n                                                handleCardView(element)\n                                            }}\n                                        />\n                                        :\n                                        <>\n                                        </>\n                                    }\n\n                                </styled.ListItemIconContainer>\n\n\n                                <styled.ListItemTitle schema={props.schema}>{element.name}</styled.ListItemTitle>\n\n\n\n                                <styled.ListItemIconContainer>\n\n                                    <styled.ListItemIcon\n                                        className='fas fa-edit'\n                                        onClick={() => props.onClick(element)}\n                                        style={{ color: '#c6ccd3' }}\n                                    />\n\n\n                                </styled.ListItemIconContainer>\n\n                            </styled.ListItem>\n                        </>\n                    )\n                })}\n            </styled.List>\n        </styled.Container>\n\n    )\n}\n","import styled from 'styled-components'\n\nimport * as stylel from '../locations_content.style'\n\nexport const ContentContainer = styled(stylel.ContentContainer)`\n`\n\nexport const Label = styled(stylel.Label)`\n`\n\nexport const DefaultTypesContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    flex-wrap: wrap;\n    border-bottom: 0.1rem solid ${props => props.theme.bg.septenary};\n    justify-content: center;\n    align-items: center;\n\n    margin-top: 0.5rem;\n    padding-bottom: 0.5rem;\n`\n\nexport const LocationTypeContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 8rem;\n    // margin-right: 1rem;\n    // background: blue;\n`\n\nexport const LocationButtonConatiner = styled.div`\n    display: flex;\n    flex-direction: row;\n`\n\nexport const LocationButtonSubtitleContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    width:8rem;\n    margin-right: 5rem;\n`\n\nexport const Subtitle = styled.h1`\n    font-family: ${props => props.theme.font.primary};\n    flex-grow: 1;\n    font-size: 1rem;\n    font-weight: 500;\n    color: white;\n    margin-right: 1rem;\n    justify-content: center;\n`\n","import styled from 'styled-components'\n\nexport const LocationTypeGraphic = styled.svg`\n    height: 4.5rem;\n\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n\n    fill: ${props => props.isNotSelected && 'gray'};\n    stroke: ${props => props.isNotSelected && 'gray'};\n`\n\nexport const LocationTypeButton = styled.div`\n    height: 4rem;\n    width: 6rem;\n    border-radius: 0.5rem;\n\n    background: ${props => props.isSelected ? `rgba(0,0,0,0.2)` : props.isNotSelected ? 'lightgray' : props.theme.bg.octonary};\n\n    margin: 0.5rem;\n    position: relative;\n    opacity: 0.999;\n\n    box-shadow: ${props => props.isSelected ? `inset 0 0.1rem 0.2rem rgba(0,0,0,.39), 0 -0.1rem 0.1rem rgba(255,255,255,0.1), 0 0.1rem 0 rgba(255,255,255,0.1)` : `0 0.2rem 0.3rem 0rem rgba(0,0,0,0.3)`};\n`\n\nexport const LocationTypeLabel = styled.p`\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz3};\n    color: ${props => props.theme.bg.octonary};\n    margin-bottom: auto;\n    user-select: none;\n    text-align: center;\n`","import React from 'react'\nimport * as styled from './location_button.style'\n\nimport { StationTypes } from '../../../../../../constants/station_constants'\nimport { PositionTypes } from '../../../../../../constants/position_constants'\n\nconst LocationButton = (props) => {\n\n    const {\n        type,\n        isSelected,\n        handleAddLocation\n    } = props\n\n    const LocationTypes = {\n        ...StationTypes,\n        ...PositionTypes\n    }\n\n    return (\n        <>\n            <styled.LocationTypeButton\n                isSelected={!!isSelected && isSelected === type}\n                isNotSelected={!!isSelected && isSelected !== type}\n                id={`location-type-button-${type}`}\n                onMouseDown={async e => {\n\n                    handleAddLocation(type)\n\n                }}\n\n                isSelected={isSelected}\n                style={{ cursor: 'grab' }}\n            >\n                <styled.LocationTypeGraphic\n                    fill={LocationTypes[type].color}\n                    isNotSelected={!!isSelected && isSelected !== type}\n                    stroke={LocationTypes[type].color}\n                    id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 400 400\"\n                >\n                    {LocationTypes[type].svgPath}\n                </styled.LocationTypeGraphic>\n            </styled.LocationTypeButton>\n        </>\n\n    )\n\n}\n\nexport default LocationButton\n","import styled from 'styled-components'\n\nexport const PositionsContainer = styled.div`\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n\n    user-select: none;\n`\n\nexport const Label = styled.h1`\n    font-family: ${props => props.theme.font.primary};\n    font-size: 1.5rem;\n    font-weight: 500;\n    /* color: ${props => props.theme.schema.locations.solid}; */\n    color: ${props => props.theme.bg.octonary};\n    text-align: center;\n    user-select: none;\n`\n\nexport const LocationTypeGraphic = styled.svg`\n    height: 2.5rem;\n\n    position: absolute;\n    top: 40%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n`\n\nexport const LocationTypeLabel = styled.p`\n    margin-bottom: 0rem;\n`\n\nexport const Card = styled.div`\n    height: 5rem;\n    width: 100%;\n    position:relative;\n    margin: 0rem .5rem;\n\n`\n\nexport const CardContainer = styled.div`\n    display: flex;\n    margin-top: 1rem;\n    \n`\n\nexport const NewPositionCard = styled.div`\n\n    max-height: 4rem;\n    max-width: 6rem;\n    \n    display: flex;\n\n    height: 100%;\n    width: 100%;\n\n    border-radius: 0.5rem;\n\n    background: ${props => props.theme.bg.octonary};\n    opacity: 0.999;\n\n    position: absolute;\n    left: calc(50% - 3rem);\n\n    box-shadow: 0 0.2rem 0.3rem 0rem rgba(0,0,0,0.3);\n\n    text-align: center;\n    justify-content: center;\n    align-items: flex-end;\n\n    cursor: grab;\n    &:active {\n        cursor: grabbing;\n    }\n`\n\nexport const ListContainer = styled.div`\n    flex: 1;\n`\n\nexport const PositionList = styled.div`\n    width: 100%;\n`\n\nexport const PositionListItem = styled.div`\n    border: .25rem solid ${props => props.background};\n    border-radius: 1rem;\n\n    padding: .25rem;\n    padding-top: .35rem;\n\n    margin: .5rem 0rem;\n\n    display: flex;\n    flex-direction: row;\n    flex-grow: 1;\n    padding-bottom: 0.4rem;\n    align-items:center;\n\n`\n\nexport const SortIcon = styled.i`\n    font-size: 1.2rem;\n    color: ${props => props.theme.bg.octonary};\n\n    margin: 0.4rem;\n    margin-left: 0.6rem;\n    padding: 0;\n    background-color: transparent;\n    border: none;\n    text-align: center;\n    box-sizing: border-box;\n\n    &:hover{\n        cursor: ns-resize;\n    }\n    &:active{\n        cursor: grabbing;\n    }\n\n`\n\n\nexport const CartIcon = styled.i`\n    font-size: .8rem;\n    color: ${props => props.theme.bg.octonary};\n\n    margin: 0.4rem;\n    margin-left: 0.6rem;\n    padding: 0;\n    background-color: transparent;\n    border: none;\n    text-align: center;\n    box-sizing: border-box;\n\n`","import styled from 'styled-components'\n\nexport const MinusSymbol = styled.i`\n\n    color: ${props => props.disabled ? props.theme.bg.senary : props.theme.bg.octonary};\n    height: 1.6rem;\n    width: 1.6rem;\n    margin: none;\n    padding: none;\n    font-size: 1.6rem;\n    vertical-align: middle;\n    line-height: 1.6rem;\n`;\n\nexport const MinusButton = styled.button`\n    width: 1.6rem;\n    height: 1.6rem;\n    margin: 0.2rem;\n    padding: 0;\n    background-color: transparent;\n    border: none;\n    text-align: center;\n    box-sizing: border-box;\n\n    :focus {\n      outline: 0;\n    }\n`;\n","import React from 'react';\nimport * as style from './minus_button.style'\nimport {globStyle} from '../../../global_style'\n\nconst MinusButton = (props) => (\n    <style.MinusButton onClick={props.onClick}>\n        <style.MinusSymbol\n            style={{...props.style}}\n            className={\"far fa-minus-square\"}\n            disabled={props.disabled}\n            schema={props.schema}\n        >\n        </style.MinusSymbol>\n    </style.MinusButton>\n);\n\nexport default MinusButton;\n","import React, { useState, useEffect, useMemo } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport * as styled from './associated_positions.style'\n\nimport { sortableElement, sortableHandle } from 'react-sortable-hoc';\n\n// Import Components\nimport MinusButton from '../../../../../basic/minus_button/minus_button'\nimport Textbox from '../../../../../basic/textbox/textbox'\nimport ConfirmDeleteModal from '../../../../../basic/modals/confirm_delete_modal/confirm_delete_modal'\n\n\nimport arrayMove from 'array-move';\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\n\n// Import Actions\nimport { setStationAttributes } from '../../../../../../redux/actions/stations_actions'\nimport { setPositionAttributes, deletePosition, addPosition, postPosition, setSelectedStationChildrenCopy } from '../../../../../../redux/actions/positions_actions'\nimport * as positionActions from '../../../../../../redux/actions/positions_actions'\nimport { deleteTask } from '../../../../../../redux/actions/tasks_actions'\nimport { deepCopy } from '../../../../../../methods/utils/utils'\n\n// Import Constants\nimport { PositionTypes, newPositionTemplate } from '../../../../../../constants/position_constants'\nimport { setSelectedStation } from '../../../../../../redux/actions/stations_actions';\n\nexport default function Positions(props) {\n\n    const {\n        handleSetChildPositionToCartCoords,\n    } = props\n\n    const dispatch = useDispatch()\n    const dispatchSetPositionAttributes = (id, attr) => dispatch(setPositionAttributes(id, attr))\n    const dispatchDeletePosition = (id) => dispatch(deletePosition(id))\n    const dispatchAddPosition = (position) => dispatch(addPosition(position))\n    const disptachPostPosition = (position) => dispatch(postPosition(position))\n    const dispatchSetSelectedStationChildrenCopy = (positions) => dispatch(setSelectedStationChildrenCopy(positions))\n\n    const dispatchSetStationAttributes = (id, attr) => dispatch(setStationAttributes(id, attr))\n\n    const positions = useSelector(state => state.positionsReducer.positions)\n    const selectedStation = useSelector(state => state.stationsReducer.selectedStation)\n    const selectedPosition = useSelector(state => state.positionsReducer.selectedPosition)\n    const tasks = useSelector(state => state.tasksReducer.tasks)\n    const currentMap = useSelector(state => state.mapReducer.currentMap)\n    const MiRMapEnabled = useSelector(state => state.localReducer.localSettings.MiRMapEnabled)\n    const selectedStationChildrenCopy = useSelector(state => state.positionsReducer.selectedStationChildrenCopy)\n\n    const [editingIndex, setEditingIndex] = useState(null)\n    const [confirmDeleteModal, setConfirmDeleteModal] = useState(false);\n    const [deletingIndex, setDeletingIndex] = useState()\n    const [deletingPosition, setDeletingPosition] = useState()\n\n    const positionTypes = !!MiRMapEnabled ? ['cart_position', 'shelf_position',] : []\n\n    /**\n     * Handles deleting positions\n     * Does some different things based on if the position is new or not (see comments bellow)\n     * TODO: FIX THIS SHIT!\n     * @param {*} position\n     */\n    const onDelete = (position) => {\n        dispatchDeletePosition(position._id)\n    }\n\n    const renderAssociatedPositions = () => {\n        return positionTypes.map((positionType) => {\n            return Object.values(selectedStationChildrenCopy).map((position, i) => {\n                if (position.type === positionType) {\n                    return (\n                        <styled.PositionListItem background={PositionTypes[positionType].color} key={`associatecd_pos_${i}`}>\n\n\n                            <MinusButton\n                                onClick={() => {\n                                    setConfirmDeleteModal(true)\n                                    setDeletingIndex(i)\n                                    setDeletingPosition(position)\n                                }}\n                            />\n                            <Textbox\n                                style={{ flex: '1' }}\n                                schema=\"locations\"\n                                focus={i == editingIndex}\n                                // defaultValue={position.name}\n                                value={position.name}\n                                onChange={(e) => {\n                                    setEditingIndex(i)\n                                    dispatch(positionActions.setPositionAttributes(position._id, { name: e.target.value }))\n                                }}\n\n                            />\n\n\n                            {/* If not a human position, then add ability to use cart location */}\n                            {position.type !== 'human_position' &&\n                                <styled.CartIcon className='icon-cart' onClick={() => handleSetChildPositionToCartCoords(position)} />\n                            }\n\n                            {/* Commenting out for now, not working with constent updating */}\n                            {/* <DragHandle></DragHandle> */}\n\n\n                        </styled.PositionListItem>\n                    )\n                }\n            })\n        })\n\n\n\n    }\n\n    // TODO: Comment\n    const onAddAssociatedPosition = async (type) => {\n\n        // const newPositionName = selectedStation.name + ' ' + (selectedStation.children.filter((position) => positions[position].type === type).length + 1)\n        const newPositionName = `${type === 'cart_position' ? 'Cart Position' : 'Shelf Position'}` + ' ' + (selectedStation.children.filter((position) => positions[position].type === type).length + 1)\n        \n        const newPositionType = type\n\n        const newPosition = newPositionTemplate(newPositionName, newPositionType, selectedStation._id, currentMap._id)\n\n        await dispatchSetSelectedStationChildrenCopy({\n            ...selectedStationChildrenCopy,\n            [newPosition._id]: newPosition\n        })\n\n\n        await dispatchAddPosition(newPosition)\n\n        let { children } = selectedStation\n        children.push(newPosition._id)\n\n        dispatchSetStationAttributes(selectedStation._id, { children })\n    }\n\n    const onDeleteAssociatedPosition = async () => {\n        await onDelete(deletingPosition)\n        setConfirmDeleteModal(null)\n    }\n\n    const renderPositionCards = () => {\n\n        return positionTypes.map((positionType) => {\n\n            let positionName\n            // Sets of vairables based on position type\n            if (positionType === 'cart_position') {\n                positionName = 'Cart'\n            }\n            if (positionType === 'shelf_position') {\n                positionName = 'Shelf'\n            }\n\n            return (\n                <styled.Card>\n\n                    <styled.NewPositionCard style={{ transform: 'translate(-0.4rem, 0.4rem)' }} />\n                    <styled.NewPositionCard style={{ transform: 'translate(-0.2rem, 0.2rem)' }} />\n                    <styled.NewPositionCard draggable={false}\n                        onMouseDown={e => {\n                            onAddAssociatedPosition(positionType)\n                        }\n                        }\n                    >\n\n                        <styled.LocationTypeGraphic fill={PositionTypes[positionType].color} stroke={PositionTypes[positionType].color} id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 400 400\">\n                            {PositionTypes[positionType].svgPath}\n                        </styled.LocationTypeGraphic>\n\n                        <styled.LocationTypeLabel>\n                            {positionName}\n                        </styled.LocationTypeLabel>\n\n                    </styled.NewPositionCard>\n                </styled.Card>\n            )\n        })\n\n    }\n\n    return (\n\n        <styled.PositionsContainer>\n\n            <ConfirmDeleteModal\n                isOpen={!!confirmDeleteModal}\n                title={\"Are you sure you want to delete this Position?\"}\n                button_1_text={\"Yes\"}\n                handleOnClick1={async () => {\n                    await onDeleteAssociatedPosition()\n                }}\n                button_2_text={\"No\"}\n                handleOnClick2={() => setConfirmDeleteModal(null)}\n                handleClose={() => setConfirmDeleteModal(null)}\n            />\n\n\n            {/* Cards for dragging a new position onto the map */}\n\n            {!!MiRMapEnabled &&\n                <>\n                    <styled.CardContainer>\n                        {renderPositionCards()}\n                    </styled.CardContainer>\n\n                    <styled.Label>Associated Positions</styled.Label>\n                </>\n\n            }\n\n\n            <styled.ListContainer>\n                {!!selectedStationChildrenCopy &&\n                    renderAssociatedPositions()\n                }\n            </styled.ListContainer>\n        </styled.PositionsContainer>\n    )\n}\n","export const LocationDefaultAttributes = {\n    name: null,\n    schema: null,\n    type: null,\n    pos_x: 0,\n    pos_y: 0,\n    rotation: 0,\n    x: 0,\n    y: 0,\n    _id: '',\n    map_id: null,\n    temp: true\n}","import * as Yup from 'yup';\n\nimport { notBrokenRegex, notTaskDeletedRegex } from \"./regex_utils\";\nimport { isObject } from \"./object_utils\";\n\nconst { object, lazy, string, number } = require('yup')\nconst mapValues = require('lodash/mapValues')\n\nexport const scheduleSchema = Yup.object().shape({\n    name: Yup.string()\n        .min(1, '1 character minimum.')\n        .max(50, '50 character maximum.')\n        .required('Please enter a name.'),\n    task: Yup.array().of(\n        Yup.object().shape({\n            name: Yup.string()\n                // .min(1, '1 character minimum')\n                // .max(2, '50 character maximum')\n                .matches(notTaskDeletedRegex, \"Task is deleted.\")\n                .required('Please select a task.'),\n            status: Yup.string().matches(notBrokenRegex, \"Task is broken.\"),\n        })\n    ).required('Required'),\n    days_on: Yup.array()\n        .min(1, 'Please select at least one day.')\n        .required('Required'),\n    start_time: Yup.string()\n        .required('Required'),\n    time_interval: Yup.string(), // not required\n    stop_time: Yup.string() // not required\n});\n\nexport const reportEventSchema = Yup.object().shape({\n    label: Yup.string()\n        .min(1, '1 character minimum.')\n        .max(50, '50 character maximum.')\n        .required('Please enter a label.'),\n    description: Yup.string()\n});\n\nexport const objectSchema = Yup.object().shape({\n    name: Yup.string()\n        .min(1, '1 character minimum.')\n        .max(50, '50 character maximum.')\n        .required('Please enter a name.'),\n    description: Yup.string()\n        .max(1000, '1000 character maximum.'),\n    // width: Yup.number()\n    //     .positive(\"Please enter a positive number.\")\n    //     .moreThan(0, \"Must be greater than 0.\")\n    //     .required(\"Please enter the object's width.\"),\n    // height: Yup.number()\n    //     .positive(\"Please enter a positive number.\")\n    //     .moreThan(0, \"Must be greater than 0.\")\n    //     .required(\"Please enter the object's height.\"),\n    // length: Yup.number()\n    //     .positive(\"Please enter a positive number.\")\n    //     .moreThan(0, \"Must be greater than 0.\")\n    //     .required(\"Please enter the object's length.\"),\n    // modelName: Yup.string()\n    //     .required(\"Please select a model.\"),\n});\n\n\nexport const hilSchema = Yup.object().shape({\n    instruction: Yup.string()\n        .max(20, '20 character maximum.')\n        .required('Please enter instructions.'),\n    position: Yup.array().of(\n        Yup.object().shape({\n            name: Yup.string()\n                .required('Position is missing name.'),\n        })\n    )\n        .required('Please select a position.'),\n    dashboard: Yup.array().of(\n        Yup.object().shape({\n            name: Yup.string()\n                .required('Dashboard is missing name.'),\n        })\n    )\n        .required('Please select a dashboard.'),\n    sound: Yup.array().of(\n        Yup.object().shape({\n            name: Yup.string()\n                .required('Sound is missing name.'),\n        })\n    )\n        .required('Please select a sound.'),\n    timeout: Yup.string()\n        .nullable()\n        .required('Please select timeout.'),\n});\n\nexport const moveSchema = Yup.object().shape({\n    location: Yup.array().of(\n        Yup.object().shape({\n            name: Yup.string()\n                .required('Location is missing name.'),\n            _id: Yup.string()\n                .required('Location is missing ID.'),\n        })\n    ).required('Please select a location.'),\n});\n\n\n\nexport const nameSchema = Yup.object().shape({\n    name: Yup.string()\n        .min(1, '1 character minimum.')\n        .max(50, '50 character maximum.')\n        .required('Please enter a name.'),\n});\n\nexport const hilGoalSchema = Yup.object().shape({\n    hil: Yup.array().of(\n        Yup.object().shape({\n            name: Yup.string()\n                .required('HIL is missing name.'),\n        })\n    ).required('Please select a HIL.')\n});\n\nexport const objectAtLocationGoalSchema = Yup.object().shape({\n    quantity: Yup.array().of(\n        Yup.object().shape({\n            name: Yup.string()\n                .required('Quantity is missing name.'),\n        })\n    ).required('Please select a quantity.'),\n    object: Yup.array().of(\n        Yup.object().shape({\n            name: Yup.string()\n                .required('Object is missing name.'),\n        })\n    ).min(1, \"Please select an object.\").nullable(),\n    position: Yup.array().of(\n        Yup.object().shape({\n            name: Yup.string()\n                .required('Position is missing name.'),\n        })\n    ).required('Please select a position.'),\n});\n\nexport const dashboardSchema = Yup.object().shape({\n    name: Yup.string()\n        .min(1, '1 character minimum.')\n        .max(50, '50 character maximum.')\n        .required('Please enter a name.'),\n    buttons: Yup.array().of(\n        Yup.object().shape({\n            name: Yup.string()\n                .required('Please enter a name.'),\n            // task: Yup.array().of(\n            //     Yup.object().shape({\n            //         Description: Yup.string()\n            //             .matches(notBrokenRegex, \"Task is broken.\")\n            //             .required('Task is missing description.'),\n            //         task_id: Yup.string()\n            //             .required('Task is missing ID.'),\n            //     })\n            // ).required('Please select a task.'),\n            // banana: Yup.string()\n            //     .required('Please enter a name.'),\n            color: Yup.string()\n                .required('Please select a color.'),\n\n        })\n    ),\n\n});\n\nexport const signUpSchema = Yup.object().shape({\n    email: Yup.string()\n        .email()\n        .required('Please enter an email'),\n    password: Yup.string()\n        .required('Please enter a password'),\n\n    confirmPassword: Yup.string()\n        .oneOf([Yup.ref('password'), null], 'Passwords must match')\n        .required('Password confirm is required'),\n})\n\nexport const signInSchema = Yup.object().shape({\n    email: Yup.string()\n        .email()\n        .required('Please enter an email'),\n    password: Yup.string()\n        .required('Please enter a password'),\n\n})\n\n\nconst binsSchema = lazy(obj => object(\n    mapValues(obj, (value, key) => {\n        return Yup.object().shape({\n            count: Yup.number()\n                .min(1, \"Quantity must be at least 1.\")\n                .required('Quantity required.'),\n        })\n    })\n));\n\nexport const CARD_SCHEMA_MODES = {\n    EDIT_LOT: \"EDIT_LOT\",\n    MOVE_LOT: \"MOVE_LOT\"\n}\n\nexport const editLotSchema = Yup.object().shape({\n    name: Yup.string()\n        .min(1, '1 character minimum.')\n        .max(50, '50 character maximum.')\n        .required('Please enter a name.'),\n    description: Yup.string()\n        .min(1, '1 character minimum.')\n        .max(250, '250 character maximum.'),\n    bins: binsSchema,\n    processId: Yup.string()\n        .min(1, '1 character minimum.')\n        .max(100, '50 character maximum.')\n        .required('Please select a process.')\n        .nullable(),\n})\n\nexport const getMoveLotSchema = (maxCount) => Yup.object().shape({\n    moveCount: Yup.number()\n        .min(1, 'Must be positive value.')\n        .max(maxCount, `Only ${maxCount} items are available.`)\n        .required('Please enter a quantity.'),\n    moveLocation: Yup.array().of(\n        Yup.object().shape({\n            name: Yup.string()\n                .required('Please select a destination.'),\n        })\n    )\n        .min(1, 'Please select a destination.')\n        .required('Please select a destination.')\n        .nullable(),\n})\n\nexport const getCardSchema = (mode, availableBinItems) => {\n    switch (mode) {\n        case CARD_SCHEMA_MODES.EDIT_LOT:\n            return editLotSchema\n        case CARD_SCHEMA_MODES.MOVE_LOT:\n            return getMoveLotSchema(availableBinItems)\n        default:\n            return editLotSchema\n\n    }\n\n}\n\nconst routeStationSchema = lazy(obj => {\n\n    let positionSchema\n    let stationSchema\n    if (isObject(obj)) {\n        if (!obj.position && !obj.station) {\n            positionSchema = Yup.string().nullable()\n            stationSchema = Yup.string().nullable().required('Please select a location.')\n        }\n        else if (obj.station && !obj.position) {\n            positionSchema = Yup.string().nullable()\n            stationSchema = Yup.string().nullable().required('Please select a location.')\n        }\n        else if (obj.position && !obj.station) {\n            positionSchema = Yup.string().nullable().required('Please select a location.')\n            stationSchema = Yup.string().nullable()\n        }\n        else {\n            positionSchema = Yup.string().nullable().required('Please select a location.')\n            stationSchema = Yup.string().nullable().required('Please select a location.')\n        }\n    } else {\n        positionSchema = Yup.string().nullable().required('Please select a location.')\n        stationSchema = Yup.string().nullable().required('Please select a location.')\n    }\n\n\n\n    return Yup.object().shape({\n        instructions: Yup.string().nullable(),\n        position: positionSchema,\n        station: stationSchema,\n        timeout: Yup.string().nullable(),\n    })\n});\n\nexport const routeSchema = Yup.object().shape({\n    name: Yup.string()\n        .min(1, '1 character minimum.')\n        .max(50, '50 character maximum.')\n        .required('Please enter a name.'),\n    obj: Yup.object().shape({\n        name: Yup.string()\n            .required('Please enter a name.'),\n    }).nullable(),\n    track_quantity: Yup.bool().required('Please select whether to use quantities or fractions.'),\n    load: routeStationSchema, //.required(\"Required.\"),\n    unload: routeStationSchema//.required(\"Required.\"),\n})\n\n\n\nexport const routesSchema = Yup.array().of(\n    routeSchema\n)\n\nexport const processSchema = Yup.object().shape({\n    name: Yup.string()\n        .min(1, '1 character minimum.')\n        .max(50, '50 character maximum.')\n        .required('Please enter a name.'),\n    routes: routesSchema,\n    newRoute: routeSchema.nullable(),\n\n})\n\nexport const getProcessSchema = () => {\n    return\n}\n\nexport const locationSchema = (stations, selectedLocation) => {\n\n    let stationNames = []\n    Object.values(stations).forEach(station => {\n        if(!!selectedLocation && station._id === selectedLocation._id) {\n            \n        }\n        else {\n            stationNames.push(station.name)\n        }\n    })\n\n    return (\n        Yup.object().shape({\n            locationName: Yup.string()\n                .required('Please enter a name')\n                .notOneOf(stationNames, 'Name already in use')\n        })\n    )\n}\n","\n// regex for time string\nexport const timeStringRegex = /^(?:(?:([01]?\\d|2[0-3]):)?([0-5]?\\d):)?([0-5]?\\d)$/\n\n// regex for OID's\nexport const oidRegex = /^([0-2])((\\.0)|(\\.[1-9][0-9]*))*$/\n\n// valid if input does NOT match \"broken\" or \"BROKEN\"\nexport const notBrokenRegex = /^(?!.*(broken|.*BROKEN))/;\n\n// valid if input does NOT match \"TASK DELETED\"\nexport const notTaskDeletedRegex = /^(?!.*(TASK DELETED))/;\n\nexport const hoursRegex = /^(2[0-4]|1[0-9]|0[0-9]|[0-9])$/\nexport const minutesRegex = /^(5[0-9]|4[0-9]|3[0-9]|2[0-9]|1[0-9]|[0-9])$/\nexport const secondsRegex = /^(5[0-9]|4[0-9]|3[0-9]|2[0-9]|1[0-9]|[0-9])$/","import React, { useState, useEffect, useMemo } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport uuid from 'uuid'\n\nimport * as styled from './edit_location.style'\nimport { Formik, Form } from 'formik'\n\n// Import Components\nimport LocationButton from './location_button/location_button'\nimport ContentHeader from '../../content_header/content_header'\nimport ConfirmDeleteModal from '../../../../basic/modals/confirm_delete_modal/confirm_delete_modal'\nimport AssociatedPositions from './associated_positions/associated_positions'\n\n// Import Basic Components\nimport DropDownSearch from '../../../../basic/drop_down_search_v2/drop_down_search'\nimport Textbox from '../../../../basic/textbox/textbox.js'\nimport TextField from '../../../../basic/form/text_field/text_field.js'\nimport Button from '../../../../basic/button/button'\n\n// Import Constants\nimport { StationTypes } from '../../../../../constants/station_constants'\nimport { PositionTypes } from '../../../../../constants/position_constants'\nimport { LocationDefaultAttributes } from '../../../../../constants/location_constants'\n\n// Import utils\nimport { deepCopy } from '../../../../../methods/utils/utils'\nimport { locationSchema } from '../../../../../methods/utils/form_schemas'\n\n// Import actions\nimport { setSelectedPosition, setPositionAttributes, addPosition, deletePosition, updatePosition, setEditingPosition, putPosition, postPosition, setSelectedStationChildrenCopy, removePosition } from '../../../../../redux/actions/positions_actions'\nimport { setSelectedStation, setStationAttributes, addStation, deleteStation, updateStation, setEditingStation, putStation, postStation, removeStation } from '../../../../../redux/actions/stations_actions'\n\nconst EditLocation = () => {\n    const dispatch = useDispatch()\n\n    // Station Dispatches\n    const dispatchSetSelectedStation = (station) => dispatch(setSelectedStation(station))\n    const dispatchSetEditingStation = (bool) => dispatch(setEditingStation(bool))\n    const dispatchSetStationAttributes = (id, attr) => dispatch(setStationAttributes(id, attr))\n    const dispatchAddStation = (station) => dispatch(addStation(station))\n    const dispatchSetSelectedStationChildrenCopy = (children) => dispatch(setSelectedStationChildrenCopy(children))\n    const dispatchPutStation = async (station) => await dispatch(putStation(station))\n    const dispatchPostStation = async (station) => await dispatch(postStation(station))\n    const dispatchDeleteStation = async (id) => await dispatch(deleteStation(id))\n    const dispatchRemoveStation = (id) => dispatch(removeStation(id))\n\n    // Position Dispatches\n    const dispatchSetSelectedPosition = async (position) => await dispatch(setSelectedPosition(position))\n    const dispatchAddPosition = async (pos) => await dispatch(addPosition(pos))\n    const dispatchSetPositionAttributes = (id, attr) => dispatch(setPositionAttributes(id, attr))\n    const dispatchSetEditingPosition = (bool) => dispatch(setEditingPosition(bool))\n    const dispatchDeletePosition = async (id) => dispatch(deletePosition(id))\n    const dispatchPutPosition = async (position) => await dispatch(putPosition(position))\n    const dispatchPostPosition = async (position) => await dispatch(postPosition(position))\n    const dispatchRemovePosition = (id) => dispatch(removePosition(id))\n\n    const stations = useSelector(state => state.stationsReducer.stations)\n    const selectedStation = useSelector(state => state.stationsReducer.selectedStation)\n    const selectedPosition = useSelector(state => state.positionsReducer.selectedPosition)\n    const positions = useSelector(state => state.positionsReducer.positions)\n    const selectedStationChildrenCopy = useSelector(state => state.positionsReducer.selectedStationChildrenCopy)\n\n    const tasks = useSelector(state => state.tasksReducer.tasks)\n    const devices = useSelector(state => state.devicesReducer.devices)\n    const currentMap = useSelector(state => state.mapReducer.currentMap)\n    const MiRMapEnabled = useSelector(state => state.localReducer.localSettings.MiRMapEnabled)\n    const serverSettings = useSelector(state => state.settingsReducer.settings)\n    const deviceEnabled = serverSettings.deviceEnabled\n    const processes = useSelector(state => state.processesReducer.processes)\n\n    const [confirmDeleteModal, setConfirmDeleteModal] = useState(false);\n    const [newName, setNewName] = useState('')\n\n    const selectedLocation = !!selectedStation ? selectedStation : selectedPosition\n\n    const LocationTypes = {\n        ...StationTypes,\n        ...PositionTypes,\n    }\n\n    useEffect(() => {\n        return () => {\n            dispatchSetEditingStation(false)\n            dispatchSetEditingPosition(false)\n\n            dispatchSetSelectedPosition(null)\n            dispatchSetSelectedStation(null)\n            dispatchSetSelectedStationChildrenCopy(null)\n        }\n    }, [])\n\n    /**\n     * This function is called when the save button is pressed. The location is POSTED or PUT to the backend.\n     * If the location is new and is a station, this function also handles posting the default dashboard and\n     * tieing it to this location. Each child position for a station is also either POSTED or PUT.\n     */\n    const onSave = async (name) => {\n        // Station\n        if (!!selectedStation) {\n            const copyStation = deepCopy(selectedStation)\n            copyStation.name = name\n            // Post\n            if (!!copyStation.new) {\n                await dispatchPostStation(copyStation)\n\n                // Add dashboard\n            }\n            // Put\n            else {\n                await dispatchPutStation(copyStation)\n            }\n        }\n\n        // Position\n        else if (!!selectedPosition) {\n            const copyPosition = deepCopy(selectedPosition)\n            copyPosition.name = name\n            // Post\n            if (!!copyPosition.new) {\n                await dispatchPostPosition(copyPosition)\n\n                // Add dashboard\n            }\n            // Put\n            else {\n                await dispatchPutPosition(copyPosition)\n            }\n\n        }\n\n        else {\n            throw ('You son of a bitch Trebech')\n        }\n\n        onBack(true)\n\n\n    }\n\n    /**\n     * Deletes the selected location\n     * The whole delete process can be found in each locations respected actions\n     */\n    const onDelete = async () => {\n\n        // Station\n        if (selectedLocation.schema === 'station') {\n            await dispatchDeleteStation(selectedStation._id)\n        }\n\n        // Position\n        else {\n            await dispatchDeletePosition(selectedPosition._id)\n        }\n\n        // Adding true to save even though you arent saving\n        // Since deleting location, there is no need to remove location in onBack (see use of save in onBack function)\n        onBack(true)\n    }\n\n    /**\n     * Handles Back\n     * Sets editing to false\n     * Removes Station if new and not a save\n     * Sets selected Location to null\n     */\n    const onBack = (save) => {\n\n        // The order of these functions matter\n        dispatchSetEditingStation(false)\n        dispatchSetEditingPosition(false)\n\n        // If theres a children copy check the children\n        if (!!selectedStationChildrenCopy) {\n            Object.values(selectedStationChildrenCopy).forEach(child => {\n                // If it's a new child remove the position\n                if (!!child.new) {\n\n                    dispatchRemovePosition(child._id)\n\n                }\n            })\n        }\n        dispatchSetSelectedStationChildrenCopy(null)\n\n        if (!!selectedLocation && !!selectedLocation.new && !save) {\n            if (selectedLocation.schema === 'station') {\n                dispatchRemoveStation(selectedLocation._id)\n            }\n\n            else if (selectedLocation.schema === 'position') {\n                dispatchRemovePosition(selectedLocation._id)\n            }\n        }\n\n        dispatchSetSelectedPosition(null)\n        dispatchSetSelectedStation(null)\n    }\n\n    /**\n     * The X and Y here are set in map view view dragNewEntity\n     */\n    const onAddLocation = async (type) => {\n\n        // TODO: Stick this into Constants\n        const defaultAttributes = deepCopy(LocationDefaultAttributes)\n\n        defaultAttributes['neame'] = newName\n        defaultAttributes['map_id'] = currentMap._id\n        defaultAttributes['_id'] = uuid.v4()\n\n        const attributes = deepCopy(LocationTypes[type].attributes)\n\n        const newLocation = {\n            ...defaultAttributes,\n            ...attributes\n        }\n\n        // Handle Station addition\n        if (attributes.schema === 'station') {\n            dispatchSetSelectedStationChildrenCopy({})\n            await dispatchAddStation(newLocation)\n            await dispatchSetSelectedStation(newLocation)\n        }\n\n        else if (attributes.schema === 'position') {\n            await dispatchAddPosition(newLocation)\n            await dispatchSetSelectedPosition(newLocation)\n        }\n\n        else {\n            throw ('Schema Does Not exist')\n        }\n    }\n\n    const onLocationNameChange = (e) => {\n        if (!!selectedStation) {\n            dispatchSetStationAttributes(selectedStation._id, { name: e.target.value })\n        }\n        else if (!!selectedPosition) {\n            dispatchSetPositionAttributes(selectedPosition._id, { name: e.target.value })\n        }\n\n        // Location Type has not been defined yet\n        else {\n            setNewName(e.target.value)\n        }\n    }\n\n    const handleSetPositionToCartCoords = async () => {\n\n        Object.values(devices).map(async (device, ind) => {\n            if (device.device_model === 'MiR100') {\n                const devicePosition = device.position\n\n                const updatedSelectedLocation = {\n                    ...selectedLocation,\n                    pos_x: devicePosition.pos_x,\n                    pos_y: devicePosition.pos_y,\n                    x: devicePosition.x,\n                    y: devicePosition.y,\n                    rotation: devicePosition.orientation,\n                }\n\n                // Not sure why onSetSelectedLocation is not working, should be the same as a normal dispatch...\n                await dispatchAddPosition(updatedSelectedLocation)\n                await dispatchSetSelectedPosition(updatedSelectedLocation)\n            }\n        })\n    }\n\n    const handleSetChildPositionToCartCoords = (position) => {\n        Object.values(devices).map(async (device, ind) => {\n            if (device.device_model === 'MiR100') {\n                const devicePosition = device.position\n                const copyPos = deepCopy(position)\n                const updatedPosition = {\n                    ...copyPos,\n                    pos_x: devicePosition.pos_x,\n                    pos_y: devicePosition.pos_y,\n                    x: devicePosition.x,\n                    y: devicePosition.y,\n                    rotation: devicePosition.orientation,\n                }\n\n                if (updatedPosition._id in selectedStationChildrenCopy) {\n                    let copyOfCopy = deepCopy(selectedStationChildrenCopy)\n                    copyOfCopy = {\n                        ...copyOfCopy,\n                        [updatedPosition._id]: updatedPosition,\n                    }\n                    dispatchSetSelectedStationChildrenCopy(copyOfCopy)\n                }\n\n                else {\n                    setSelectedPosition(updatedPosition)\n                }\n\n\n            }\n        })\n    }\n\n\n    const renderStationButtons = () => {\n        // If there is a type selected and its not the button type, that means this type has not been selected so gray everything out\n        const types = ['human', 'warehouse']\n\n        return types.map((type, i) => {\n            const isSelected = (!!selectedStation && selectedStation.type !== null && selectedStation.type === type) ? selectedStation.type : false;\n            return (\n                <LocationButton key={`stat_button_${i}`} type={type} isSelected={isSelected} handleAddLocation={onAddLocation} />\n            )\n        })\n\n    }\n\n    const renderPositionButtons = () => {\n        const types = ['cart_position', 'shelf_position']\n\n        return types.map((type, i) => {\n            const isSelected = (!!selectedPosition && selectedPosition.type !== null && selectedPosition.type === type) ? selectedPosition.type : false;\n            return (\n                <LocationButton key={`pos_button_${i}`} type={type} isSelected={isSelected} handleAddLocation={onAddLocation} />\n            )\n        })\n    }\n\n    return (\n        <>\n            <styled.ContentContainer\n            >\n\n                <ConfirmDeleteModal\n                    isOpen={!!confirmDeleteModal}\n                    title={\"Are you sure you want to delete this Location?\"}\n                    button_1_text={\"Yes\"}\n                    handleOnClick1={() => {\n                        onDelete()\n                        setConfirmDeleteModal(null)\n                    }}\n                    button_2_text={\"No\"}\n                    handleOnClick2={() => setConfirmDeleteModal(null)}\n                    handleClose={() => setConfirmDeleteModal(null)}\n                />\n\n                <Formik\n\n                    initialValues={{\n                        locationName: !!selectedLocation ? selectedLocation.name : null,\n\n                    }}\n                    initialTouched={{\n                        locationName: false,\n                    }}\n                    validateOnChange={true}\n                    validateOnMount={true}\n                    validateOnBlur={true}\n                    // Chooses what schema to use based on whether it's a sign in or sign up\n                    // TODO: The schemas are not 100% working as of 9/14/2020. Need to figure out regex for passwords\n                    validationSchema={locationSchema(stations, selectedLocation)}\n                    onSubmit={async (values, { setSubmitting }) => {\n                        setSubmitting(true)\n\n                        await onSave(deepCopy(values.locationName))\n\n                        setSubmitting(false)\n                    }}\n                >\n                    {formikProps => {\n                        const {\n                            submitForm,\n                            errors,\n                        } = formikProps\n\n                        return (\n                            <Form\n                                onKeyDown={(e) => {\n                                    if (((e.charCode || e.keyCode) === 13) && Object.keys(errors).length === 0) {\n                                        submitForm()\n                                    }\n                                    else if ((e.charCode || e.keyCode) === 13) {\n                                        e.preventDefault();\n                                    }\n                                }}\n                            >\n\n                                <div style={{ marginBottom: '1rem' }}>\n\n                                    <ContentHeader\n                                        content={'locations'}\n                                        mode={'create'}\n                                        onClickBack={() => onBack()}\n                                        onClickSave={() => {\n\n                                        }}\n\n                                    />\n                                </div>\n\n                                <TextField\n                                    name={\"locationName\"}\n                                    textStyle={{ fontWeight: 'Bold' }}\n                                    placeholder='Enter Location Name'\n                                    type='text'\n                                    InputComponent={Textbox}\n                                    style={{\n                                        'fontSize': '1.2rem',\n                                        'fontWeight': '600',\n                                        'marginBottom': '.5rem',\n                                        'marginTop': '0',\n                                    }}\n                                />\n                                {/* <Textbox\n                                    name={'locationName'}\n                                    placeholder=\"Location Name\"\n                                    defaultValue={!!selectedLocation ? selectedLocation.name : null}\n                                    schema={'locations'}\n                                    focus={!!selectedLocation && selectedLocation.type == null}\n                                    onChange={(e) => {\n                                        onLocationNameChange(e)\n                                    }}\n                                    style={{ fontSize: '1.2rem', fontWeight: '600' }}>\n                                </Textbox> */}\n                            </Form>\n                        )\n                    }}\n                </Formik>\n                {/* Location Type */}\n                <styled.DefaultTypesContainer>\n\n                    {!selectedLocation ?\n                        <>\n                            <styled.LocationTypeContainer>\n                                <styled.Label schema={'locations'}>Stations</styled.Label>\n                                <styled.LocationButtonConatiner>\n                                    {renderStationButtons()}\n                                </styled.LocationButtonConatiner>\n\n                                <styled.LocationButtonSubtitleContainer>\n                                  <styled.Subtitle schema={'locations'}>Workstation</styled.Subtitle>\n                                  <styled.Subtitle schema={'locations'}>Warehouse</styled.Subtitle>\n                                </styled.LocationButtonSubtitleContainer>\n\n                            </styled.LocationTypeContainer>\n\n                            {deviceEnabled &&\n                                <styled.LocationTypeContainer>\n                                    <styled.Label schema={'locations'} style = {{marginTop: '1rem'}}>Positions</styled.Label>\n                                    <styled.LocationButtonConatiner>\n                                        {renderPositionButtons()}\n                                    </styled.LocationButtonConatiner>\n\n                                    <styled.LocationButtonSubtitleContainer style = {{marginRight: '1.1rem'}}>\n                                      <styled.Subtitle schema={'locations'} style = {{marginRight: '4.5rem'}}>Cart</styled.Subtitle>\n                                      <styled.Subtitle schema={'locations'}>Shelf</styled.Subtitle>\n                                    </styled.LocationButtonSubtitleContainer>\n\n                                </styled.LocationTypeContainer>\n                            }\n                        </>\n\n                        :\n                        <LocationButton\n                            type={selectedLocation['type']}\n                            isSelected={(!!selectedLocation && selectedLocation.type !== null) ? selectedLocation.type : false}\n                            handleAddLocation={onAddLocation}\n                        />\n\n                    }\n\n                </styled.DefaultTypesContainer>\n\n                {(!!selectedLocation && selectedLocation.schema === 'station') ?\n\n                    <AssociatedPositions handleSetChildPositionToCartCoords={handleSetChildPositionToCartCoords} />\n                    :\n                    <Button\n                        schema={'locations'}\n                        secondary\n                        onClick={() => {\n                            handleSetPositionToCartCoords()\n                        }}\n                        style={{ marginBottom: '1rem' }}\n                    >\n                        Use Cart Location\n                    </Button>\n                }\n                <div style={{ height: \"100%\" }}></div>\n\n\n                {/* Delete Location Button */}\n                <Button schema={'locations'} secondary onClick={() => setConfirmDeleteModal(true)} >Delete</Button>\n            </styled.ContentContainer>\n\n        </>\n    )\n}\n\nexport default EditLocation\n","import React, { useState, useEffect, useMemo } from 'react'\nimport * as styled from './locations_content.style'\nimport { useSelector, useDispatch } from 'react-redux'\n\n// Import components\nimport ContentList from '../content_list/content_list'\nimport EditLocation from './edit_location/edit_location'\n\nimport { convertD3ToReal } from '../../../../methods/utils/map_utils'\n\n// Import actions\nimport { setEditingPosition, setSelectedPosition, setSelectedStationChildrenCopy } from '../../../../redux/actions/positions_actions'\nimport { setEditingStation, setSelectedStation } from '../../../../redux/actions/stations_actions'\n\n// Import Constants\nimport { StationTypes } from '../../../../constants/station_constants'\n\n// Import Utils\nimport { setAction } from '../../../../redux/actions/sidebar_actions'\nimport { deepCopy } from '../../../../methods/utils/utils'\nimport { locationsSortedAlphabetically } from '../../../../methods/utils/locations_utils'\n\nimport uuid from 'uuid'\n\n// This adds a location selected info to the reducer\nexport default function LocationContent() {\n\n    const dispatch = useDispatch()\n\n    const dispatchSetEditingPosition = (bool) => dispatch(setEditingPosition(bool))\n    const dispatchSetSelectedPosition = (position) => dispatch(setSelectedPosition(position))\n\n    const dispatchSetEditingStation = (bool) => dispatch(setEditingStation(bool))\n    const dispatchSetSelectedStation = (position) => dispatch(setSelectedStation(position))\n    const dispatchSetSelectedStationChildrenCopy = (positions) => dispatch(setSelectedStationChildrenCopy(positions))\n\n    const stations = useSelector(state => state.stationsReducer.stations)\n    const selectedStation = useSelector(state => state.stationsReducer.selectedStation)\n    const selectedPosition = useSelector(state => state.positionsReducer.selectedPosition)\n    const positions = useSelector(state => state.positionsReducer.positions)\n\n    const editingStation = useSelector(state => state.stationsReducer.editingStation)\n    const editingPosition = useSelector(state => state.positionsReducer.editingPosition)\n\n    const tasks = useSelector(state => state.tasksReducer.tasks)\n    const devices = useSelector(state => state.devicesReducer.devices)\n    const currentMap = useSelector(state => state.mapReducer.currentMap)\n    const MiRMapEnabled = useSelector(state => state.localReducer.localSettings.MiRMapEnabled)\n    const processes = useSelector(state => state.processesReducer.processes)\n\n    const [mergeStation, setMergeStation] = useState(false)\n    const [confirmDeleteModal, setConfirmDeleteModal] = useState(false);\n\n    const selectedLocation = !!selectedStation ? selectedStation : selectedPosition\n\n    const locations = {\n        ...stations,\n        ...positions\n    }\n\n    useEffect(() => {\n        return () => {\n\n        }\n    }, [])\n\n    const onSetSelectedLocation = (id) => {\n        if (id in stations) {\n            dispatchSetSelectedStation(stations[id])\n        }\n\n        else if (id in positions) {\n            dispatchSetSelectedPosition(positions[id])\n        }\n\n        else if (id === null) {\n            dispatchSetSelectedStation(null)\n            dispatchSetSelectedPosition(null)\n\n        }\n    }\n\n    /**\n     * Tells what location is being edited\n     * Handles whether location is a station or a position\n     * @param {*} id\n     */\n    const onEditLocation = (id) => {\n        const editingLocation = locations[id]\n\n        // If a station\n        if (editingLocation.schema === 'station') {\n            dispatchSetEditingStation(true)\n            dispatchSetSelectedStation(editingLocation)\n\n            // Copy Children\n            if (editingLocation.children.length > 0) {\n                let copy = {}\n\n                editingLocation.children.forEach(child => {\n                    copy[child] = positions[child]\n                })\n\n                dispatchSetSelectedStationChildrenCopy(copy)\n            }\n        }\n\n        // Else its a position\n        else {\n            dispatchSetEditingPosition(true)\n            dispatchSetSelectedPosition(editingLocation)\n        }\n    }\n\n    return (\n        (editingPosition || editingStation) ?\n            <EditLocation />\n\n            :\n            <ContentList\n                title={'Locations'}\n                schema={'locations'}\n                // Filters out devices from being displayed in locations\n                elements={\n                    locationsSortedAlphabetically(Object.values(locations))\n                        // Filters out devices, entry positions, other positions and right click to move positions\n                        .filter(location => !location.parent && location.type !== 'device' && location.type !== 'cart_entry_position' && location.type !== 'shelf_entry_position' && location.type !== 'charger_entry_position' && location.type !== 'other' && location.schema !== 'temporary_position' && (location.map_id === currentMap._id))\n                }\n                // elements={Object.values(locations)}\n                onMouseEnter={(location) => onSetSelectedLocation(location._id)}\n                onMouseLeave={() => onSetSelectedLocation(null)}\n                onClick={(location) => {\n                    console.log('QQQQ Editing Location', location)\n                    onEditLocation(location._id)\n                }}\n                onPlus={() => {\n                    dispatchSetEditingStation(true)\n                }}\n            />\n    )\n}\n","import styled from 'styled-components'\nimport { RGB_Linear_Shade, hexToRGBA } from '../../../../methods/utils/color_utils'\n\n\n// ========== Content ========== //\nexport const ContentContainer = styled.div`\n    flex-grow: 1;\n    padding: 1rem;\n    padding-top: 1.5rem;\n\n    display: flex;\n    flex-direction: column;\n\n`\n\nexport const ContentHeader = styled.div`\n    display: flex; \n    flex-direction: row;\n`\n\nexport const ContentTitle = styled.h1`\n    font-family: ${props => props.theme.font.primary};\n    font-size: 2rem;\n    font-weight: 500;\n    // color: ${props => props.theme.schema.objects};\n    color: white;\n    flex-grow: 1;\n`\n\n// ========== Object List ========== //\n\nexport const ObjectList = styled.ul`\n    flex-grow: 1;\n    padding: 0;\n`\n\nexport const ObjectItem = styled.div`\n    width: auto;\n    height: 2rem;\n    box-sizing: content-box;\n\n    text-align: center;\n\n    background: transparent;\n    border-radius: 0.5rem;\n    margin-bottom: 0.4rem;\n\n    border: 0.1rem solid white;\n    box-sizing: border-box;\n\n    cursor: pointer;\n    user-select: none;\n\n    &:hover {\n        background: ${props => props.theme.bg.primary};\n    }\n`\n\nexport const ObjectText = styled.span`\n    height: 2rem;\n    line-height: 2rem;\n    box-sizing: content-box;\n\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz4};\n    font-weight: 500;\n    color: ${props => props.theme.bg.primary};\n\n    ${props => props.selected && `\n        background: ${props.theme.schema.locations};\n        -webkit-text-fill-color: transparent;\n        -webkit-background-clip: text;\n        display:block;\n    `}\n`\n\n// ========== Type Buttons & Containers ========== //\n\nexport const DefaultTypesContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    border-bottom: 0.1rem solid ${props => props.theme.bg.secondary};\n    justify-content: center;\n\n    margin-top: 0.5rem;\n    padding-bottom: 0.5rem;\n`\n\nexport const CustomTypesContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n\n    margin: 0.5rem 0 0.5rem 0;\n    justify-content: center;\n`\n\nexport const ObjectTypeButton = styled.div`\n    height: 4rem;\n    width: 6rem;\n    border-radius: 0.5rem;\n\n    background: ${props => props.isSelected ? `rgba(0,0,0,0.2)` :  props.theme.bg.primary};\n\n    margin: 0.5rem;\n    position: relative;\n    opacity: 0.999;\n\n    box-shadow: ${props => props.isSelected ? `inset 0 0.1rem 0.2rem rgba(0,0,0,.39), 0 -0.1rem 0.1rem rgba(255,255,255,0.1), 0 0.1rem 0 rgba(255,255,255,0.1)` : `0 0.2rem 0.3rem 0rem rgba(0,0,0,0.3)`};\n`\nexport const ObjectTypeGraphic = styled.svg`\n    height: 3.5rem;\n\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n\n    fill: red;\n`","import styled from 'styled-components'\n\nexport const ContentContainer = styled.div`\n    flex-grow: 1;\n    padding: 1rem;\n    padding-top: 1.5rem;\n\n    display: flex;\n    flex-direction: column;\n\n`\n\nexport const RowContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n`\n\nexport const Header = styled.h1`\n    font-size: ${props => props.theme.fontSize.sz2};\n    font-family: ${props => props.theme.font.primary};\n    color: white;\n    margin-top: 1rem;\n`\n\nexport const Label = styled.h2`\n    font-size: ${props => props.theme.fontSize.sz3};\n    font-family: ${props => props.theme.font.primary};\n    color: white;\n    margin-right: 1rem;\n    line-height: 2rem;\n`\n\nexport const LabelHighlight = styled.span`\n    font-size: ${props => props.theme.fontSize.sz3};\n    font-family: ${props => props.theme.font.primary};\n    color: ${props => props.theme.schema.tasks.solid};\n    line-height: 2rem;\n    font-weight: bold;\n\n`\n\nexport const HelpText = styled.h3`\n    font-size: ${props => props.theme.fontSize.sz4};\n    font-family: ${props => props.theme.font.primary};\n    color: white;\n    text-align: center;\n`\n\nexport const DirectionText = styled.h3`\n    font-size: ${props => props.theme.fontSize.sz4};\n    font-family: ${props => props.theme.font.primary};\n    color: ${props => props.theme.schema.tasks.solid};\n    text-align: center;\n`\n\nexport const DualSelectionButton = styled.button`\n    font-size: 1rem;\n    width: 8rem;\n    border: none;\n    font-family: ${props => props.theme.font.primary};\n\n    color: ${props => !props.selected ? props.theme.bg.tertiary : props.theme.bg.octonary};\n\n    background-color: ${props => props.selected ? props.theme.schema.tasks.solid : props.theme.bg.octonary};\n\n    transition: background-color 0.25s ease, box-shadow 0.1s ease;\n\n    &:focus{\n        outline: 0 !important\n    }\n\n    &:active{\n        box-shadow: none;\n    }\n\n    &:hover{\n        //background-color: ${props => props.theme.bg.quaternary};\n    }\n`\n","export const ADD_TASK_ALERT_TYPE = {\n\tTASK_EXISTS: \"TASK_EXISTS\",\n\tTASK_ADDED: \"TASK_ADDED\",\n\tADDING: \"ADDING\",\n\tREPORT_SEND_SUCCESS: \"REPORT_SEND_SUCCESS\",\n\tREPORT_SEND_FAILURE: \"REPORT_SEND_FAILURE\",\n\tKICK_OFF_SUCCESS: \"KICK_OFF_SUCCESS\",\n\tKICK_OFF_FAILURE: \"KICK_OFF_FAILURE\",\n\tFINISH_SUCCESS: \"FINISH_SUCCESS\",\n\tFINISH_FAILURE: \"FINISH_FAILURE\",\n}\n\nexport const PAGES = {\n\tDASHBOARDS: \"Dashboards\",\n\tEDITING: \"Editing\",\n\tDASHBOARD: \"Dashboard\"\n}\n\nexport const DASHBOARD_BUTTON_COLORS = [\n\t{\n\t\thex: '#FF4B4B',\n\t\tlabel: \"Red\"\n\t},\n\t{\n\t\thex: '#56d5f5',\n\t\tlabel: \"Blue\"\n\t},\n\t{\n\t\thex: '#50de76',\n\t\tlabel: \"Green\"\n\t},\n\t{\n\t\thex: '#f2ae41',\n\t\tlabel: \"Orange\"\n\t},\n\t{\n\t\thex: '#c7a0fa',\n\t\tlabel: \"Purple\"\n\t}\n\t]","import styled from \"styled-components\";\n\nexport const AddTaskAlertContainer = styled.div`\n    position: fixed;\n    flex-direction: column;\n    text-align: center;\n\n    background-color: ${props => props.theme.bg.tertiary};\n    opacity: 90%;\n    border-radius: .3rem;\n    min-width: 70%;\n    max-width: 95%;\n    margin-left: auto;\n    margin-right: auto;\n    box-shadow: .1rem .1rem .5rem grey;\n    \n    left: 50%;\n    top: 50%;\n    transform: translate(-50%,-50%);\n    \n    padding-top: 1rem;  \n    z-index: 10000;\n`\n\nexport const AddTaskAlertLabel = styled.span`\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz2};\n    font-weight: bold;\n    color: ${props => props.color};\n`\n\nexport const AddTaskAlertMessage = styled.p`\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz3};\n    color: ${props => props.color};\n`","import React, { useEffect } from 'react';\n\n// import utils\nimport { ADD_TASK_ALERT_TYPE } from \"../../../../../../constants/dashboard_contants\";\n\n// Import styles\nimport * as style from './task_added_alert.style'\n\nconst TaskAddedAlert = (props) => {\n\n    // extract props\n    const {\n        type,\n        visible,\n        label,\n        message,\n        containerStyle\n    } = props\n\n\n    let alertColor\n    switch (type) {\n        case ADD_TASK_ALERT_TYPE.TASK_EXISTS:\n            alertColor = '#FF4B4B'\n            break\n        case ADD_TASK_ALERT_TYPE.ADDING:\n            alertColor = '#6c6e78'\n            break\n        case ADD_TASK_ALERT_TYPE.TASK_ADDED:\n            alertColor = '#79d99b'\n            break\n\n        case ADD_TASK_ALERT_TYPE.FINISH_SUCCESS:\n        case ADD_TASK_ALERT_TYPE.KICK_OFF_SUCCESS:\n        case ADD_TASK_ALERT_TYPE.REPORT_SEND_SUCCESS:\n            alertColor = '#79d99b'\n            break\n\n        case ADD_TASK_ALERT_TYPE.FINISH_FAILURE:\n        case ADD_TASK_ALERT_TYPE.KICK_OFF_FAILURE:\n        case ADD_TASK_ALERT_TYPE.REPORT_SEND_FAILURE:\n            alertColor = '#FF4B4B'\n            break\n\n\n        default:\n            alertColor = '#FF4B4Bs'\n    }\n\n    if (visible) {\n        return <style.AddTaskAlertContainer style={containerStyle}>\n            <style.AddTaskAlertLabel color={alertColor}>{label}</style.AddTaskAlertLabel>\n            <style.AddTaskAlertMessage color={alertColor}>{message}</style.AddTaskAlertMessage>\n        </style.AddTaskAlertContainer>\n    } else {\n        return null\n    }\n}\n\nexport default TaskAddedAlert;\n","// Import utils\nimport { deepCopy } from './utils'\n\nexport const tasksSortedAlphabetically = (tasks) => {\n    const tasksCopy = deepCopy(tasks)\n\n    tasksCopy.sort((a,b) => {\n        const aName = a.name\n        const bName = b.name\n\n        if(aName < bName) return -1\n        if(aName > bName) return 1\n        return 0\n    })\n\n    return tasksCopy\n}","import uuid from 'uuid'\n\nconst RouteTask = {\n    name: '',\n    obj: null,\n    type: 'push',\n    quantity: 1,\n    // device_type: !!MiRMapEnabled ? 'MiR_100' : 'human',\n    handoff: true,\n    track_quantity: true,\n    // map_id: currentMap._id,\n    new: true,\n    process: false,\n    load: {\n        position: null,\n        station: null,\n        sound: null,\n        instructions: 'Load',\n        timeout: '01:00'\n    },\n    unload: {\n        position: null,\n        station: null,\n        sound: null,\n        instructions: 'Unload'\n    },\n    _id: uuid.v4(),\n}\n\nexport default RouteTask","import styled from \"styled-components\";\n\nexport const DefaultContainer = styled.div`\n\tposition: relative;\n`;\n\nexport const DefaultErrorContainerComponent = styled.div`\n    width: auto;\n    height: auto;\n    position: absolute;\n    top: 50%;\n    right: 2rem;\n    transform: translateY(-50%);\n    margin: 0;\n    padding: 0;\n    z-index: 500;\n`;","import React from \"react\";\nimport { useField, useFormikContext } from \"formik\";\nimport Switch from 'react-ios-switch';\nimport ErrorTooltip from \"../error_tooltip/error_tooltip\";\nimport PropTypes from \"prop-types\";\nimport * as styled from \"./switch_field.style\";\nimport {getMessageFromError} from \"../../../../methods/utils/form_utils\";\n\nconst SwitchField = (props) => {\n\n    const {\n        Container,\n        containerStyle,\n        ErrorContainerComponent,\n        style,\n        onChange,\n        mapOutput,\n        mapInput,\n        ...rest\n    } = props\n\n    const { setFieldValue, setFieldTouched } = useFormikContext();\n    const [field, meta] = useField(props);\n\n    const {\n        value: fieldValue,\n        name: fieldName\n    } = field\n\n    const {\n        touched,\n        error\n    } = meta\n\n    const hasError = touched && error;\n    const errorMessage = getMessageFromError(error);\n\n    return (\n        <Container\n            style={containerStyle}\n        >\n            <Switch\n                checked={mapInput(fieldValue)}\n                {...rest}\n                onChange={val => {\n                    if(!touched) setFieldTouched(fieldName, true);\n\n                    setFieldValue(fieldName, mapOutput(val))\n\n                    onChange && onChange(val)\n                }}\n            />\n            {/*<ErrorTooltip*/}\n            {/*    visible={hasError}*/}\n            {/*    text={errorMessage}*/}\n            {/*    ContainerComponent={ErrorContainerComponent}*/}\n            {/*/>*/}\n\n        </Container>\n    );\n};\n\n// Specifies propTypes\nSwitchField.propTypes = {\n    Container: PropTypes.elementType,\n    ErrorContainerComponent: PropTypes.elementType,\n    containerStyle: PropTypes.object,\n    style: PropTypes.object,\n    onChange: PropTypes.func,\n    mapInput: PropTypes.func,\n    mapOutput: PropTypes.func,\n};\n\n// Specifies the default values for props:\nSwitchField.defaultProps = {\n    Container: styled.DefaultContainer,\n    ErrorContainerComponent: styled.DefaultErrorContainerComponent,\n    containerStyle: {},\n    style: {},\n    onChange: () => {},\n    mapInput: (val) => val,\n    mapOutput: (val) => val\n};\n\nexport default SwitchField;\n","import styled from 'styled-components';\nimport TimePicker from 'rc-time-picker';\nimport {css} from 'styled-components'\n\n\nexport const DefaultContainer = styled.div`\n\tposition: relative;\n`;\n\nexport const DefaultErrorContainerComponent = styled.div`\n    width: auto;\n    height: auto;\n    position: absolute;\n    top: 50%;\n    right: 2rem;\n    transform: translateY(-50%);\n    margin: 0;\n    padding: 0;\n    z-index: 500;\n`;\n\n\nconst someCss = css`\n    // ${props => props.css};\n    //\n    // & .rc-time-picker-panel-select-option-selected {\n    //\n    // }\n    //\n    // & .rc-time-picker-panel-input-wrap {\n    //\n    // }\n    //\n    // & .rc-time-picker-clear,\n    // & .rc-time-picker-clear-icon:after {\n    //\n    // }\n    //\n    // & .rc-time-picker-panel-inner {\n    //     border-color: ${props => props.hasError && \"red\"};\n    //     box-shadow:  ${props => props.hasError && \"0 0 5px red\"};\n    // }\n    //\n    // & .rc-time-picker-panel-select,\n    // & .rc-time-picker-input,\n    // & .rc-time-picker-panel-input,\n    // & .rc-time-picker-panel-input-wrap {\n    //     border-color: ${props => props.hasError && \"red\"};\n    //     box-shadow:  ${props => props.hasError && \"0 0 5px red\"};\n    // }\n`\nexport const TimePickerComponent = styled(TimePicker)`\n    \n`;\n","// import external modules\nimport React from \"react\";\nimport { useField, useFormikContext } from \"formik\";\nimport TimePicker from 'rc-time-picker';\nimport moment from 'moment';\nimport 'rc-time-picker/assets/index.css';\n\n// import components\nimport ErrorTooltip from \"../error_tooltip/error_tooltip\";\n\n// import styles\nimport * as styled from './time_picker_field.style'\nimport PropTypes from \"prop-types\";\nimport {getMessageFromError} from \"../../../../methods/utils/form_utils\";\n\nconst TimePickerField = (props) => {\n\n\tconst {\n\t\tTimePickerCss,\n\t\tContainer,\n\t\tErrorContainerComponent,\n\t\tcontainerStyle,\n\t\tstyle,\n\t\tonChange,\n\t\tdefaultOpenValue,\n\t\tdefaultValue,\n\t\tmapOutput,\n\t\tmapInput,\n\t\t...rest\n\t} = props\n\n\tconst { setFieldValue, setFieldTouched } = useFormikContext();\n\tconst [field, meta] = useField(props);\n\n\tconst {\n\t\tvalue: fieldValue,\n\t\tname: fieldName\n\t} = field\n\n\tconst {\n\t\ttouched,\n\t\terror\n\t} = meta\n\n\tconst hasError = touched && error;\n\tconst errorMessage = getMessageFromError(error);\n\n\treturn (\n\t\t\t// <Container\n\t\t\t// \tstyle={containerStyle}\n\t\t\t// >\n\t\t\t\t<styled.TimePickerComponent\n\t\t\t\t\t{...style}\n\t\t\t\t\t{...field}\n\t\t\t\t\t{...rest}\n\t\t\t\t\tcss={TimePickerCss}\n\t\t\t\t\thasError={hasError}\n\t\t\t\t\t// showSecond={false}\n\t\t\t\t\tvalue={mapInput(fieldValue)}\n\t\t\t\t\tonChange={(val) => {\n\n\t\t\t\t\t\tif(!touched) setFieldTouched(fieldName, true)\n\t\t\t\t\t\tsetFieldValue(fieldName, mapOutput(val))\n\n\t\t\t\t\t\tonChange && onChange(val)\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t// \t<ErrorTooltip\n\t\t\t// \t\tvisible={hasError}\n\t\t\t// \t\ttext={errorMessage}\n\t\t\t// \t\tContainerComponent={ErrorContainerComponent}\n\t\t\t// \t/>\n\t\t\t// </Container>\n\t)\n}\n\n// Specifies propTypes\nTimePickerField.propTypes = {\n\tContainer: PropTypes.elementType,\n\tErrorContainerComponent: PropTypes.elementType,\n\tcontainerStyle: PropTypes.object,\n\tstyle: PropTypes.object,\n\tonChange: PropTypes.func,\n\tmapOutput: PropTypes.func,\n\tmapInput: PropTypes.func,\n};\n\n// Specifies the default values for props:\nTimePickerField.defaultProps = {\n\tContainer: styled.DefaultContainer,\n\tErrorContainerComponent: styled.DefaultErrorContainerComponent,\n\tcontainerStyle: {},\n\tstyle: {},\n\tonChange: () => {},\n\tmapOutput: () => {},\n\tmapInput: () => {},\n};\n\nexport default TimePickerField;\n","export const isString = (value) => {\n    return (typeof value) === \"string\"\n}","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\n// Import Styles\nimport * as styled from '../../tasks_content.style'\n\n// Import basic components\nimport Switch from 'react-ios-switch';\nimport moment from 'moment';\nimport TimePicker from 'rc-time-picker';\nimport DropDownSearch from '../../../../../basic/drop_down_search_v2/drop_down_search'\nimport Textbox from '../../../../../basic/textbox/textbox.js'\n\n// Import actions\nimport { setSelectedTask, setTaskAttributes } from '../../../../../../redux/actions/tasks_actions'\nimport {isHumanTask, isMiRandHumanTask, isMiRTask, isOnlyHumanTask} from \"../../../../../../methods/utils/route_utils\";\nimport {DEVICE_CONSTANTS} from \"../../../../../../constants/device_constants\";\nimport SwitchField from \"../../../../../basic/form/switch_field/switch_field\";\nimport TimePickerField from \"../../../../../basic/form/time_picker_field/time_picker_field\";\nimport TextField from \"../../../../../basic/form/text_field/text_field\";\nimport DropDownSearchField from \"../../../../../basic/form/drop_down_search_field/drop_down_search_field\";\nimport {isArray} from \"../../../../../../methods/utils/array_utils\";\nimport {isString} from \"../../../../../../methods/utils/string_utils\";\nimport {isObject} from \"../../../../../../methods/utils/object_utils\";\n\n\nconst LoadUnloadFields = (props) => {\n\n    const {\n        fieldParent,\n        setFieldValue,\n        values\n    } = props\n\n    const dispatch = useDispatch()\n    const dispatchSetSelectedTask = (task) => dispatch(setSelectedTask(task))\n    const dispatchSetTaskAttributes = (id, attr) => dispatch(setTaskAttributes(id, attr))\n\n    let selectedTask = useSelector(state => state.tasksReducer.selectedTask)\n    const sounds = useSelector(state => state.soundsReducer.sounds)\n    const stations = useSelector(state => state.stationsReducer.stations)\n\n\n    // This handles if any position of a route is a human position, then it cant be done by a robot\n    let humanLocation = false\n    const mirEnabled = isMiRTask(selectedTask)\n\n    if ((!!stations[selectedTask.load.position] && stations[selectedTask.load.position].type === 'human') || (!!stations[selectedTask.unload.position] && stations[selectedTask.unload.position].type === 'human')) {\n        humanLocation = true\n\n        if (!isOnlyHumanTask(selectedTask)) {\n            dispatchSetSelectedTask({\n                ...selectedTask,\n                device_types: [DEVICE_CONSTANTS.HUMAN],\n            })\n        }\n    }\n    else if(!isMiRandHumanTask(selectedTask)) {\n        dispatchSetSelectedTask({\n            ...selectedTask,\n            device_types: [DEVICE_CONSTANTS.HUMAN, DEVICE_CONSTANTS.MIR_100],\n        })\n    }\n\n    return (\n        <>\n            {/*{!humanLocation &&*/}\n            {/*    <>*/}\n            {/*        <styled.RowContainer>*/}\n            {/*            <styled.Header>Robot Enabled</styled.Header>*/}\n            {/*            <SwitchField*/}\n            {/*                name={fieldParent ? `${fieldParent}.device_types` : \"device_types\"}*/}\n            {/*                // checked={mirEnabled}*/}\n            {/*                mapInput={(devices)=> {*/}\n            {/*                    if(devices.includes(DEVICE_CONSTANTS.MIR_100) && devices.includes(DEVICE_CONSTANTS.HUMAN)) {*/}\n            {/*                        return true*/}\n            {/*                    }*/}\n            {/*                    else {*/}\n            {/*                        return false*/}\n            {/*                    }*/}\n            {/*                }}*/}\n            {/*                mapOutput={(enable) => {*/}\n            {/*                    if(enable) {*/}\n            {/*                        return([DEVICE_CONSTANTS.MIR_100, DEVICE_CONSTANTS.HUMAN])*/}\n            {/*                    }*/}\n            {/*                    else {*/}\n            {/*                        return([DEVICE_CONSTANTS.HUMAN])*/}\n            {/*                    }*/}\n            {/*                }}*/}\n            {/*                onColor='red'*/}\n            {/*                style={{ marginRight: '1rem' }}*/}\n            {/*            />*/}\n\n            {/*        </styled.RowContainer>*/}\n            {/*        <styled.HelpText>Do you want a robot to perform this task? If selected, there will be an option for a person to take over the task when the button is placed onto the dashboard.</styled.HelpText>*/}\n            {/*    </>*/}\n            {/*}*/}\n\n\n\n            <styled.RowContainer style={{ marginTop: '2rem' }}>\n\n                <styled.Header style={{ marginTop: '0rem',marginRight: \".5rem\" }}>Load</styled.Header>\n\n                {!humanLocation &&\n\n                    <styled.RowContainer style={{ justifyContent: 'flex-end', alignItems: 'baseline',  }}>\n                        <styled.HelpText style={{ fontSize: '1rem', marginRight: '.5rem' }}>TimeOut: </styled.HelpText>\n\n                        <TimePickerField\n                            mapInput={(value) => {\n                                if(value) {\n                                    const splitVal = value.split(':')\n                                    return moment().set({ 'minute': splitVal[0], 'second': splitVal[1] })\n                                }\n                            }}\n                            mapOutput={(value) => {\n                                return value.format(\"mm:ss\")\n                            }}\n                            name={fieldParent ? `${fieldParent}.load.timeout` : \"load.timeout\"}\n                            style={{ flex: '0 0 7rem', display: 'flex', flexWrap: 'wrap', textAlign: 'center', backgroundColor: '#6c6e78' }}\n                            showHour={false}\n                            className=\"xxx\"\n                            autocomplete={\"off\"}\n                            allowEmpty={false}\n                            defaultOpenValue={!!selectedTask.load.timeout ? moment().set({ 'minute': selectedTask.load.timeout.split(':')[0], 'second': selectedTask.load.timeout.split(':')[1] }) : moment().set({ 'minute': 1, 'second': 0 })}\n                            defaultValue={!!selectedTask.load.timeout ? moment().set({ 'minute': selectedTask.load.timeout.split(':')[0], 'second': selectedTask.load.timeout.split(':')[1] }) : moment().set({ 'minute': 1, 'second': 0 })}\n                            onChange={(time) => {\n                                dispatchSetSelectedTask({\n                                    ...selectedTask,\n                                    load: {\n                                        ...selectedTask.load,\n                                        timeout: time.format(\"mm:ss\")\n                                    }\n                                })\n                            }}\n                        />\n                    </styled.RowContainer>\n                }\n\n            </styled.RowContainer>\n\n            <TextField\n                name={fieldParent ? `${fieldParent}.load.instructions` : \"load.instructions\"}\n                schema={'tasks'}\n                focus={!!selectedTask && selectedTask.type == null}\n                lines={2}\n                InputComponent={Textbox}\n            />\n\n            {!isOnlyHumanTask(selectedTask) &&\n                <div style={{ display: \"flex\", flexDirection: \"row\", marginTop: \"0.5rem\" }}>\n                    <styled.Label>Sound </styled.Label>\n                    <DropDownSearchField\n                        name={fieldParent ? `${fieldParent}.load.sound` : \"load.sound\"}\n                        placeholder=\"Select Sound\"\n                        label=\"Sound to be played upon arrival\"\n                        labelField=\"name\"\n                        valueField=\"name\"\n                        options={Object.values(sounds)}\n                        mapInput={(val)=>{\n                            if(isString(val) && isObject(sounds[val])) return [sounds[val]]\n                            return []\n                        }}\n                        mapOutput={(val) => {\n                            let output = null\n                            if(isArray(val) && val.length > 0) {\n                                output = val[0]?._id || null\n                            }\n                            return output\n                        }}\n                        // values={!!selectedTask.load.sound ? [sounds[selectedTask.load.sound]] : []}\n                        dropdownGap={5}\n                        noDataLabel=\"No matches found\"\n                        closeOnSelect=\"true\"\n                        className=\"w-100\"\n                        schema=\"tasks\" />\n                </div>\n            }\n\n            {/* If its a human task, then the task can also be defined as a handoff.\n                    A handoff does not require unload confirmation.\n                */}\n            {!isMiRTask(selectedTask) &&\n                <styled.ContentContainer style={{ paddingBottom: '0rem' }}>\n                    <styled.RowContainer>\n                        <styled.Label style={{ marginBottom: '0rem' }}>Confirm Unload?</styled.Label>\n                        <SwitchField\n                            mapInput={(val)=>!val}\n                            mapOutput={(val)=>!val}\n                            name={fieldParent ? `${fieldParent}.handoff` : \"handoff\"}\n                            onColor='red'\n                            containerStyle={{ marginRight: '1rem' }}\n                        />\n                    </styled.RowContainer>\n                    <styled.HelpText>Do you want to track transit time? This will display a Unload Button at the Unload Station</styled.HelpText>\n                </styled.ContentContainer>\n            }\n\n            {/* Hides the unload field if its a handoff task */}\n            {!values.handoff &&\n\n                <>\n                    <styled.Header>Unload</styled.Header>\n                    <TextField\n                        name={fieldParent ? `${fieldParent}.unload.instructions` : \"unload.instructions\"}\n                        schema={'tasks'}\n                        focus={!!selectedTask && selectedTask.type == null}\n                        lines={2}\n                        InputComponent={Textbox}\n                    />\n\n                    {/* If its a human task, then you shouldnt require people to make noises. I personally would though...  */}\n                    {!isOnlyHumanTask(selectedTask) &&\n\n                        <div style={{ display: \"flex\", flexDirection: \"row\", marginTop: \"0.5rem\" }}>\n                            <styled.Label>Sound </styled.Label>\n                            <DropDownSearchField\n                                name={fieldParent ? `${fieldParent}.unload.sound` : \"unload.sound\"}\n                                placeholder=\"Select Sound\"\n                                label=\"Sound to be played upon arrival\"\n                                labelField=\"name\"\n                                valueField=\"name\"\n                                options={Object.values(sounds)}\n                                dropdownGap={5}\n                                noDataLabel=\"No matches found\"\n                                closeOnSelect=\"true\"\n                                mapInput={(val)=>{\n                                    if(isString(val) && isObject(sounds[val])) return [sounds[val]]\n                                    return []\n                                }}\n                                mapOutput={(val) => {\n                                    let output = null\n                                    if(isArray(val) && val.length > 0) {\n                                        output = val[0]?._id || null\n                                    }\n                                    return output\n                                }}\n                                className=\"w-100\"\n                                schema=\"tasks\"\n                            />\n                        </div>\n                    }\n                </>\n            }\n\n\n            {/* {selectedTask.device_type === 'MiR_100' &&\n                    <>\n                        <styled.Header>Idle Location</styled.Header>\n                        <DropDownSearch\n                            placeholder=\"Select Location\"\n                            label=\"Idle Location for MiR Cart\"\n                            labelField=\"name\"\n                            valueField=\"name\"\n                            options={Object.values(positions)}\n                            values={!!selectedTask.idle_location ? [positions[selectedTask.idle_location]] : []}\n                            dropdownGap={5}\n                            noDataLabel=\"No matches found\"\n                            closeOnSelect=\"true\"\n                            onChange={values => {\n\n                                const idleLocation = values[0]._id\n\n                                dispatchSetSelectedTask({\n                                    ...selectedTask,\n                                    idle_location: idleLocation,\n                                })\n                            }}\n                            className=\"w-100\"\n                            schema=\"tasks\"\n                        />\n                    </>\n                } */}\n\n\n        </>\n    )\n};\n\nexport default LoadUnloadFields\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport PropTypes from 'prop-types';\n\nclass ClickOutside extends React.Component {\n  container = React.createRef();\n\n  componentDidMount() {\n    document.addEventListener('click', this.handleClick, {capture:true, passive:true});\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('click', this.handleClick, {capture:true, passive:true});\n  }\n\n  handleClick = (event) => {\n    const container = this.container.current;\n    const { target } = event;\n    const { onClickOutside } = this.props;\n\n    if ((container && container === target) || (container && !container.contains(target))) {\n      onClickOutside(event);\n    }\n  };\n\n  render() {\n    const { className, children, ClickOutsideComponent } = this.props;\n\n    return (\n      <ClickOutsideComponent className={className} ref={this.container}>\n        {children}\n      </ClickOutsideComponent>\n    );\n  }\n}\n\nconst DefaultClickOutsideComponent = styled.div`\n\n`;\n\nClickOutside.propTypes = {\n  onClickOutside: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string\n};\n\nClickOutside.defaultProps = {\n  ClickOutsideComponent: DefaultClickOutsideComponent\n};\n\n\nexport default ClickOutside;\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport styled from 'styled-components'\n\nimport { LightenDarkenColor } from '../../../../methods/utils/color_utils'\n\nfunction Label(props) {\n    return (\n        <props.LabelComponent schema={props.schema}>\n            {props.label}\n        </props.LabelComponent>\n    )\n}\n\nconst DefaultLabelComponent = styled.div`\n    width: 100%;\n\n    font-family: ${props => props.theme.font.primary};\n\n    text-align: center;\n    font-weight: 200;\n    color: ${props => !!props.schema ? props.theme.schema[props.schema].solid : props.theme.fg.primary};\n    font-size: ${props => props.theme.fontSize.sz5};\n    background: ${props => LightenDarkenColor(props.theme.bg.quinary, -10)};\n    cursor: default;\n`\n\nLabel.propTypes = {\n    LabelComponent: PropTypes.elementType,\n    label: PropTypes.string,\n}\n\nLabel.defaultProps = {\n    LabelComponent: DefaultLabelComponent,\n    label: '',\n}\n\nexport default Label\n\n","export const valueExistInSelected = (value, values, props) =>\n  !!values.find((val) => getByPath(val, props['valueField']) === value);\n\nexport const hexToRGBA = (hex, alpha) => {\n  const RR = parseInt(hex.slice(1, 3), 16);\n  const GG = parseInt(hex.slice(3, 5), 16);\n  const BB = parseInt(hex.slice(5, 7), 16);\n\n  return `rgba(${RR}, ${GG}, ${BB}${alpha && `, ${alpha}`})`;\n};\n\nexport const debounce = (fn, delay = 0) => {\n  let timerId;\n\n  return (...args) => {\n    if (timerId) {\n      clearTimeout(timerId);\n    }\n    timerId = setTimeout(() => {\n      fn(...args);\n      timerId = null;\n    }, delay);\n  };\n};\n\nexport const isEqual = (a, b) => JSON.stringify(a) === JSON.stringify(b);\n\nexport const getByPath = (object, path) => {\n  // console.log('getByPath: {object, path}', {object, path})\n\n  let new_path = path.split('.')\n  // console.log('getByPath: new_path', {new_path})\n\n  if (!path) {\n    return;\n  }\n\n  return path.split('.').reduce((acc, value) => acc[value], object)\n};\n\nexport const getProp = (object, path, defaultValue) => {\n  if (!path) {\n    return object;\n  }\n\n  const normalizedPath = Array.isArray(path) ? path : path.split('.').filter((item) => item.length);\n\n  if (!normalizedPath.length) {\n    return object === undefined ? defaultValue : object;\n  }\n\n  return getProp(object[normalizedPath.shift()], normalizedPath, defaultValue);\n};\n","export const LIB_NAME = 'react-dropdown-select';\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport {getByPath} from '../util';\nimport { LIB_NAME } from '../constants';\n\nconst Option = ({ item, props, state, methods }) => {\n\n    const OptionComponent = props.OptionComponent ? props.OptionComponent : DefaultOptionComponent\n    return(\n        item && props.optionRenderer ? (\n          props.optionRenderer({ item, props, state, methods })\n        ) : (\n          <OptionComponent\n            role=\"listitem\"\n            disabled={props.disabled}\n            direction={props.direction}\n            className={`${LIB_NAME}-option`}\n            color={props.color}>\n            <span className={`${LIB_NAME}-option-label`}>{getByPath(item, props.labelField)}</span>\n            <span\n              className={`${LIB_NAME}-option-remove`}\n              onClick={(event) => methods.removeItem(event, item, props.closeOnSelect)}>\n              &times;\n            </span>\n          </OptionComponent>\n        )\n    );\n\n}\n\nexport const DefaultOptionComponent = styled.span`\n\n  padding: 0 5px;\n  border-radius: 2px;\n  line-height: 21px;\n  margin: 3px 0 3px 5px;\n  background: ${({ color }) => color};\n  color: #fff;\n  display: flex;\n  flex-direction: ${({ direction }) => direction === 'rtl' ? 'row-reverse' : 'row'};\n\n\n  .${LIB_NAME}-option-remove {\n    cursor: pointer;\n    width: 22px;\n    height: 22px;\n    display: inline-block;\n    text-align: center;\n    margin: 0 -5px 0 0px;\n    border-radius: 0 3px 3px 0;\n\n    :hover {\n      color: tomato;\n    }\n  }\n\n  :hover,\n  :hover > span {\n    opacity: 0.9;\n  }\n\n`;\n\n\n// Specifies the default values for props:\nOption.defaultProps = {\n    OptionComponent: DefaultOptionComponent,\n};\n\nexport default Option;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { valueExistInSelected } from '../util';\nimport * as PropTypes from 'prop-types';\nimport { LIB_NAME } from '../constants';\n\nimport { LightenDarkenColor } from '../../../../methods/utils/color_utils'\n\nconst handlePlaceHolder = (props, state) => {\n  const { addPlaceholder, searchable, placeholder } = props;\n  const noValues = state.values && state.values.length === 0;\n  const hasValues = state.values && state.values.length > 0;\n\n  if (hasValues && addPlaceholder && searchable) {\n    return addPlaceholder;\n  }\n\n  if (noValues) {\n    return placeholder;\n  }\n\n  if (hasValues && !searchable) {\n    return '';\n  }\n\n  return '';\n};\n\nclass Input extends Component {\n  input = React.createRef();\n\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.state.textbox || (prevProps.state.textbox !== this.props.state.textbox && this.props.state.textbox) ||\n      this.props.props.autoFocus\n    ) {\n      this.input.current.focus();\n    }\n\n    if (prevProps.state.textbox !== this.props.state.textbox && !this.props.state.textbox) {\n       this.input.current.blur();\n    }\n  }\n\n  onBlur = (event) => {\n    event.stopPropagation();\n    if (!this.props.state.textbox) {\n      return this.input.current.blur();\n    }\n\n    return this.input.current.focus();\n  };\n\n  handleKeyPress = (event) => {\n    const { props, state, methods } = this.props;\n\n    return (\n      props.create &&\n      event.key === 'Enter' &&\n      !valueExistInSelected(state.search, state.values, this.props) &&\n      state.search &&\n      state.cursor === null &&\n      methods.createNew(state.search)\n    );\n  };\n\n  render() {\n    const { props, state, methods, InputComponent } = this.props;\n\n    if (props.inputRenderer) {\n      return props.inputRenderer({ props, state, methods, inputRef: this.input });\n    }\n\n    return (\n      <InputComponent\n        ref={this.input}\n        tabIndex=\"-1\"\n        onFocus={(event) => {\n          event.stopPropagation()\n          methods.setSearch({target: {value: !!state.currentValue ? state.currentValue : ''}})\n        }}\n        className={`${LIB_NAME}-input`}\n        size={methods.getInputSize()}\n        value={state.currentValue}\n        readOnly={!props.searchable}\n        onClick={() => methods.dropDown('open')}\n        onKeyPress={this.handleKeyPress}\n        onChange={(e) => {\n          methods.setSearch(e)\n          methods.setValue(e.target.value)\n          props.onChange([{name: e.target.value}])\n        }}\n        onBlur={this.onBlur}\n        placeholder={handlePlaceHolder(props, state)}\n        disabled={props.disabled}\n        filled={props.filled}\n      />\n    );\n  }\n}\n\nexport const TextboxInput = styled.input`\n    background-color: ${props => props.theme.bg.quinary};\n    border: none;\n    font-size: 1.2rem;\n    font-family: ${props => props.theme.font.primary};\n    font-weight: 500;\n    display: flex;\n    flex-grow: 1;\n    color: ${props => props.theme.bg.octonary};\n\n    margin: 0 0.5rem 0 0.5rem;\n\n    &:focus {\n      background-color: ${props => LightenDarkenColor(props.theme.bg.quinary, 10)};\n      outline: none !important;\n  }\n\n    &::placeholder {\n        font-size: ${props => props.theme.fontSize.sz4};\n        font-family: ${props => props.theme.font.secondary};\n        color: ${props => props.theme.bg.senary};\n    }\n`;\n\n// export const DefaultInputComponent = styled.input`\n//     cursor: pointer;\n//     line-height: inherit;\n\n//     // width: ${props => props.filled ? `calc(${props.size}ch + 5px)` : `100%`};\n//     width: ${props => `calc(${props.size}ch + 5px)`};\n\n//     border: none;\n//     margin-left: 5px;\n//     background: transparent;\n//     font-size: smaller;\n//     ${({ readOnly }) => readOnly && 'cursor: pointer;'}\n//     :focus {\n//       outline: none;\n//     }\n\n//     vertical-align: middle;\n//     line-height: 2rem;\n//     height: 2rem;\n    \n//     &::placeholder {\n//       color: ${props => props.theme.bg.senary};\n//     }\n//     `;\n\nInput.propTypes = {\n    props: PropTypes.object,\n    state: PropTypes.object,\n    methods: PropTypes.object\n};\n\nInput.defaultProps = {\n    InputComponent: TextboxInput\n};\n\nexport default Input;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport Option from './Option';\nimport Input from './Input';\nimport { LIB_NAME } from '../constants';\nimport {getByPath} from '../util';\n\nconst Content = ({ props, state, methods, ContentComponent, InputComponent }) => {\n  return (\n    <ContentComponent\n      className={`${LIB_NAME}-content ${\n        props.multi ? `${LIB_NAME}-type-multi` : `${LIB_NAME}-type-single`\n      }`}\n      onClick={(event) => {\n        event.stopPropagation();\n        methods.dropDown('open');\n      }}>\n      {props.contentRenderer ? (\n        props.contentRenderer({ props, state, methods })\n      ) : (\n        \n        <React.Fragment>\n          <Input InputComponent={InputComponent} props={props} methods={methods} state={state} />\n        </React.Fragment>\n      )}\n    </ContentComponent>\n  );\n};\n\nexport const Value = styled.div`\n  margin-left: 0.3rem;\n  margin-right: 0.2rem;\n  line-height: 1.8rem;\n  font-size: ${props => props.theme.fontSize.sz3};\n  width: 100%;\n`\n\nexport const DefaultContentComponent = styled.div`\n  position: relative;\n  \n  display: flex;\n  flex-grow: 1;\n  // flex-wrap: nowrap;\n\n  overflow: hidden;\n  word-break: break-all;\n  // white-space: nowrap;\n  text-overflow: ellipsis;\n`;\n\n// Specifies the default values for props:\nContent.defaultProps = {\n    ContentComponent: DefaultContentComponent,\n};\n\nexport default Content;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { LIB_NAME } from '../constants';\n\nimport { LightenDarkenColor } from '../../../../methods/utils/color_utils'\n\nconst NoData = ({ props, state, methods, NoDataComponent }) =>\n\n  props.noDataRenderer ? (\n    props.noDataRenderer({ props, state, methods })\n  ) : (\n    <NoDataComponent id={'bob5'} className={`${LIB_NAME}-no-data`} color={props.color} schema={props.schema}>\n      {props.noDataLabel}\n    </NoDataComponent>\n  );\n\nconst DefaultNoDataComponent = styled.div`\n  text-align: center;\n  font-weight: 200;\n  color: ${props => !!props.schema ? props.theme.schema[props.schema].solid : props.theme.fg.primary};\n  font-size: ${props => props.theme.fontSize.sz5};\n  background: ${props => LightenDarkenColor(props.theme.bg.quinary, -10)};\n  cursor: default;\n`;\n\nNoData.defaultProps = {\n  NoDataComponent: DefaultNoDataComponent\n};\n\nexport default NoData;\n","import React, { Component } from 'react';\nimport styled from 'styled-components'\nimport { getByPath } from '../util';\nimport * as PropTypes from 'prop-types';\nimport { LIB_NAME } from '../constants';\n\nimport { LightenDarkenColor, hexToRGBA } from '../../../../methods/utils/color_utils'\n\nclass Item extends Component {\n  item = React.createRef();\n\n  componentDidUpdate() {\n    if (this.props.state.cursor === this.props.itemIndex) {\n      this.item.current &&\n        this.item.current.scrollIntoView({ behavior: 'smooth', block: 'nearest', inline: 'start' });\n    }\n  }\n\n  render() {\n    // console.log('Item render this.props',this.props)\n    const { props, state, methods, item, itemIndex, ItemComponent, ContentContainer, ButtonComponent, TextComponent } = this.props;\n\n    if (props.itemRenderer) {\n      return props.itemRenderer({ item, itemIndex, props, state, methods });\n    }\n\n    if (!props.keepSelectedInList && methods.isSelected(item)) {\n      return null;\n    }\n\n    // console.log('item ItemComponent', ItemComponent)\n    //const { ItemComponent } = this.props;\n\n    return (\n      <ItemComponent\n        role=\"option\"\n        ref={this.item}\n        aria-selected={methods.isSelected(item)}\n        aria-disabled={item.disabled}\n        disabled={item.disabled}\n        aria-label={getByPath(item, props.labelField)}\n        key={`${getByPath(item, props.valueField)}${getByPath(item, props.labelField)}`}\n        tabIndex=\"-1\"\n        className={`${LIB_NAME}-item ${\n          methods.isSelected(item) ? `${LIB_NAME}-item-selected` : ''\n        } ${state.cursor === itemIndex ? `${LIB_NAME}-item-active` : ''} ${\n          item.disabled ? `${LIB_NAME}-item-disabled` : ''\n        }`}\n        onClick={item.disabled ? undefined : () => {console.log(item); methods.addItem(item); methods.setValue(item.name)}}\n        onKeyPress={item.disabled ? undefined : () => methods.addItem(item)}\n        color={props.color}\n        schema={props.schema}>\n\n            <TextComponent>\n              {getByPath(item, props.labelField)} {item.disabled && <ins>{props.disabledLabel}</ins>}\n            </TextComponent>\n\n            {props.showButton && !!props.onDetailsClick &&\n              <ButtonComponent className='fas fa-ellipsis-h'\n                  onClick={(e) => {\n                    if (!e) var e = window.event;\n                    e.cancelBubble = true;\n                    if (e.stopPropagation) e.stopPropagation();\n                    props.onDetailsClick(item.id);\n                  }}>\n              </ButtonComponent>\n            }\n\n      </ItemComponent>\n    );\n  }\n}\n\nItem.propTypes = {\n  props: PropTypes.any,\n  state: PropTypes.any,\n  methods: PropTypes.any,\n  item: PropTypes.any,\n  itemIndex: PropTypes.any,\n  showButton: PropTypes.bool,\n};\n\nexport const DefaultItemComponent = styled.span`\n\n  padding: .5rem 1rem .5rem calc(1rem - 5px);\n  cursor: pointer;\n  white-space: nowrap;\n  display: flex;\n  justify-content: space-between;\n  font-family: ${props => props.theme.font.primary};\n  font-size: ${props => props.theme.fontSize.sz3};\n\n  border-left: 5px solid transparent;\n\n  // &.${LIB_NAME}-item-active {\n  //   ${({ disabled, color }) => !disabled && color && `background: green;`}\n  // }\n\n  :hover,\n  :focus {\n    background: ${props => LightenDarkenColor(props.theme.bg.quinary, 10)};\n    outline: none;\n  }\n\n\n  &.${LIB_NAME}-item-selected {\n    ${props => props.disabled ? `\n      background: rgba(0,0,0,0.01);\n      color: ${props.theme.bg.primary};\n    `\n    : `\n      background: ${!!props.schema ? hexToRGBA(props.theme.schema[props.schema].solid, 0.1) : hexToRGBA(props.theme.bg.senary, 0.1)};\n      color: ${!!props.schema ? props.theme.schema[props.schema].solid : props.theme.bg.senary};\n      border-color: ${!!props.schema ? props.theme.schema[props.schema].solid : props.theme.bg.senary};\n    `}\n  }\n\n  ${({ disabled }) =>\n    disabled\n      ? `\n    background: ${props => props.theme.bg.secondary};\n    color: ${props => props.theme.bg.tertiary};\n\n    ins {\n      text-decoration: none;\n      border:1px solid #ccc;\n      border-radius: 2px;\n      padding: 0px 3px;\n      font-size: x-small;\n      text-transform: uppercase;\n    }\n    `\n      : ''}\n\n`;\n\nconst DefaultContentContainer = styled.div`\n  display: flex;\n  flex: 1;\n  justify-content: space-between;\n  background: red;\n  padding: 0;\n  overflow: hidden;\n  white-space: nowrap;\n`;\n\nconst DefaultButtonComponent = styled.i`\n    display: flex;\n    color: grey;\n    font-size: 1rem;\n    &:hover {\n        cursor: pointer;\n    }\n    line-height: 2rem;\n    text-align: center;\n`\n\nconst DefaultTextComponent = styled.span`\n  overflow: hidden;\n  white-space: nowrap;\n  flex: 1;\n  text-overflow: ellipsis;\n  // white-space: normal;\n  // word-wrap: break-word;\n  // word-break: break-all;\n`;\n\n// Specifies the default values for props:\nItem.defaultProps = {\n    ItemComponent: DefaultItemComponent,\n    ContentContainer: DefaultContentContainer,\n    ButtonComponent: DefaultButtonComponent,\n    TextComponent: DefaultTextComponent,\n};\n\nexport default Item;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { LIB_NAME } from '../constants';\nimport NoData from './NoData';\nimport Item from './Item';\nimport Label from './Label';\n\nimport { valueExistInSelected, hexToRGBA } from '../util';\n\nconst textboxPosition = (props, methods) => {\n  const TextboxBoundingClientRect = methods.getSelectRef().getBoundingClientRect();\n  const textboxHeight =\n    TextboxBoundingClientRect.bottom + parseInt(props.textboxHeight, 10) + parseInt(props.textboxGap, 10);\n\n  if (props.textboxPosition !== 'auto') {\n    return props.textboxPosition;\n  }\n\n  if (textboxHeight > window.innerHeight && textboxHeight > TextboxBoundingClientRect.top) {\n    return 'top';\n  }\n\n  return 'bottom';\n};\n\nconst Textbox = ({ ItemComponent, props, TextBoxComponent, state, methods, TextComponent }) => {\n  // console.log('Textbox props', props)\n  // console.log('Textbox ItemComponent', ItemComponent)\n\n  return(\n    <TextBoxComponent\n      tabIndex=\"-1\"\n      aria-expanded=\"true\"\n      role=\"list\"\n      textboxPosition={textboxPosition(props, methods)}\n      selectBounds={state.selectBounds}\n      portal={props.portal}\n      textboxGap={props.textboxGap}\n      textboxHeight={props.textboxHeight}\n      className={`${LIB_NAME}-textbox ${LIB_NAME}-textbox-position-${textboxPosition(\n        props,\n        methods\n      )}`}>\n      {props.textboxRenderer ? (\n        props.textboxRenderer({ props, state, methods })\n      ) : (\n        <React.Fragment>\n          {props.create && state.search && !valueExistInSelected(state.search, state.values, props) && (\n            <AddNew\n\n              className={`${LIB_NAME}-textbox-add-new`}\n              color={props.color}\n              onClick={() => methods.createNew(state.search)}>\n              {props.createNewLabel.replace('{search}', `\"${state.search}\"`)}\n            </AddNew>\n          )}\n          {state.currentValue.length > 0 && \n            <Label LabelComponent={props.LabelComponent} label={props.label} schema={props.schema}></Label>\n          }\n          {methods.searchResults().length > 0 && (\n            methods\n              .searchResults()\n              .map((item, itemIndex) => (\n                <Item\n                  ItemComponent={ItemComponent}\n                  TextComponent={TextComponent}\n                  key={item[props.valueField]}\n                  item={item}\n                  itemIndex={itemIndex}\n                  state={state}\n                  props={props}\n                  methods={methods}\n                />\n              ))\n          )}\n        </React.Fragment>\n      )}\n    </TextBoxComponent>\n  );\n}\n\nexport const DefaultTextBoxComponent = styled.div`\n  position: absolute;\n  ${({ selectBounds, textboxGap, textboxPosition }) =>\n    textboxPosition === 'top'\n      ? `bottom: ${selectBounds.height + 2 + textboxGap}px`\n      : `top: ${selectBounds.height + 2 + textboxGap}px`};\n\n  ${({ selectBounds, textboxGap, portal }) =>\n    portal\n      ? `\n      position: fixed;\n      top: ${selectBounds.bottom + textboxGap}px;\n      left: ${selectBounds.left - 1}px;`\n      : 'left: -1px;'};\n  width: ${({ selectBounds }) => selectBounds.width}px;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n  background: ${props => props.theme.bg.quinary};\n  border-radius: 2px;\n  box-shadow: 0 0 10px 0 ${() => hexToRGBA('#000000', 0.2)};\n  max-height: ${({ textboxHeight }) => textboxHeight};\n  overflow: auto;\n  z-index: 1;\n\n  border-radius: 0.2rem;\n\n  :focus {\n    outline: none;\n  }\n\n  /* Let's get this party started */\n  ::-webkit-scrollbar {\n      width: 6px;\n  }\n  /* Track */\n  ::-webkit-scrollbar-track {\n      -webkit-background: rgba(0,0,0,0.1); \n      -webkit-border-radius: 10px;\n      border-radius: 10px;\n  }\n  /* Handle */\n  ::-webkit-scrollbar-thumb {\n      -webkit-border-radius: 10px;\n      border-radius: 10px;\n      -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.5); \n      background: rgba(255,255,255,0.4); \n  }\n  ::-webkit-scrollbar-thumb:window-inactive {\n    background: rgba(255,255,255,0.2); \n  }\n\n}\n`;\n\nconst AddNew = styled.div`\n  color: ${({ color }) => color};\n  padding: 5px 10px;\n  background: white;\n  color: blue;\n\n  :hover {\n    background: ${({ color }) => color && hexToRGBA(color, 0.1)};\n    outline: none;\n    cursor: pointer;\n  }\n`;\n\nTextbox.defaultProps = {\n  TextBoxComponent: DefaultTextBoxComponent\n};\n\nexport default Textbox;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { LIB_NAME } from '../constants';\n\nconst Loading = ({ props }) =>\n  props.loadingRenderer ? (\n    props.loadingRenderer({ props })\n  ) : (\n    <LoadingComponent className={`${LIB_NAME}-loading`} color={props.color} />\n  );\n\nconst LoadingComponent = styled.div`\n  @keyframes dual-ring-spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(180deg);\n    }\n  }\n\n  padding: 0 5px;\n  display: block;\n  width: auto;\n  height: auto;\n\n  :after {\n    content: ' ';\n    display: block;\n    width: 16px;\n    height: 16px;\n    border-radius: 50%;\n    border-width: 1px;\n    border-style: solid;\n    border-color: ${({ color }) => color} transparent;\n    animation: dual-ring-spin 0.7s ease-in-out infinite;\n    margin: 0 0 0 -10px;\n  }\n`;\n\nexport default Loading;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { LIB_NAME } from '../constants';\n\nconst Clear = ({ props, state, methods }) =>\n  props.clearRenderer ? (\n    props.clearRenderer({ props, state, methods })\n  ) : (\n    <ClearComponent\n      className={`${LIB_NAME}-clear`}\n      tabIndex=\"-1\"\n      onClick={() => methods.clearAll()}\n      onKeyPress={() => methods.clearAll()}>\n      &times;\n    </ClearComponent>\n  );\n\nconst ClearComponent = styled.div`\n  line-height: 25px;\n  margin: 0 10px;\n  cursor: pointer;\n\n  :focus {\n    outline: none;\n  }\n\n  :hover {\n    color: tomato;\n  }\n`;\n\nexport default Clear;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { LIB_NAME } from '../constants';\n\nconst Separator = ({ props, state, methods }) =>\n  props.separatorRenderer ? (\n    props.separatorRenderer({ props, state, methods })\n  ) : (\n    <SeparatorComponent className={`${LIB_NAME}-separator`} />\n  );\n\nconst SeparatorComponent = styled.div`\n  border-left: 1px solid #ccc;\n  width: 1px;\n  height: 25px;\n  display: block;\n`;\n\nexport default Separator;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { LIB_NAME } from '../constants';\n\nconst TextboxHandle = ({ props, state, methods }) =>\n  props.textboxHandleRenderer ? (\n    props.textboxHandleRenderer({ props, state, methods })\n  ) : (\n    <TextboxHandleComponent\n      tabIndex=\"-1\"\n      onClick={(event) => methods.textBox(state.textbox ? 'close': 'open', event)}\n      textboxOpen={state.textbox}\n      onKeyPress={(event) => methods.textBox('toggle', event)}\n      onKeyDown={(event) => methods.textBox('toggle', event)}\n      className={`${LIB_NAME}-textbox-handle`}\n      color={props.color}>\n      <svg fill=\"currentColor\" viewBox=\"0 0 40 40\"><path d=\"M31 26.4q0 .3-.2.5l-1.1 1.2q-.3.2-.6.2t-.5-.2l-8.7-8.8-8.8 8.8q-.2.2-.5.2t-.5-.2l-1.2-1.2q-.2-.2-.2-.5t.2-.5l10.4-10.4q.3-.2.6-.2t.5.2l10.4 10.4q.2.2.2.5z\"/></svg>\n    </TextboxHandleComponent>\n  );\n\nconst TextboxHandleComponent = styled.div`\n  text-align: center;\n\n  ${({ textboxOpen }) =>\n    textboxOpen\n      ? `\n      pointer-events: all;\n      transform: rotate(0deg);\n      margin: 0px 0 -3px 5px;\n      `\n      : `\n      pointer-events: none;\n      margin: 0 0 0 5px;\n      transform: rotate(180deg);\n      `};\n  cursor: pointer;\n\n  text-align: center;\n  vertical-align: middle;\n  line-height: 2rem;\n  height: 2rem;\n  position: absolute;\n  right: .25rem;\n\n  svg {\n    width: 16px;\n    height: 16px;\n  }\n\n  :hover {\n    path {\n      stroke: ${({ color }) => color};\n    }\n  }\n\n  :focus {\n    outline: none;\n\n    path {\n      stroke: ${({ color }) => color};\n    }\n  }\n\n`;\n\nexport default TextboxHandle;\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components'\nimport ClickOutside from './components/ClickOutside';\n\nimport { globStyle } from '../../../global_style'\nimport { LightenDarkenColor } from '../../../methods/utils/color_utils'\n\n\nimport Label from './components/Label';\nimport Content from './components/Content';\nimport Textbox from './components/Dropdown';\nimport Loading from './components/Loading';\nimport Clear from './components/Clear';\nimport Separator from './components/Separator';\nimport TextboxHandle from './components/DropdownHandle';\n\nimport { debounce, hexToRGBA, isEqual, getByPath, getProp, valueExistInSelected } from './util';\nimport { LIB_NAME } from './constants';\n\nimport theme from '../../../theme.js'\n\nexport class TextBoxSearch extends Component {\n  static propTypes = {\n    onChange: PropTypes.func.isRequired,\n    onBlur: PropTypes.func,\n    onTextboxClose: PropTypes.func,\n    onTextboxOpen: PropTypes.func,\n    onClearAll: PropTypes.func,\n    onSelectAll: PropTypes.func,\n    values: PropTypes.array,\n    options: PropTypes.array.isRequired,\n    keepOpen: PropTypes.bool,\n    showSelectedBox: PropTypes.bool,\n    textboxGap: PropTypes.number,\n    multi: PropTypes.bool,\n    placeholder: PropTypes.string,\n    addPlaceholder: PropTypes.string,\n    disabled: PropTypes.bool,\n    className: PropTypes.string,\n    loading: PropTypes.bool,\n    clearable: PropTypes.bool,\n    searchable: PropTypes.bool,\n    separator: PropTypes.bool,\n    textboxHandle: PropTypes.bool,\n    searchBy: PropTypes.string,\n    sortBy: PropTypes.string,\n    closeOnScroll: PropTypes.bool,\n    openOnTop: PropTypes.bool,\n    style: PropTypes.object,\n    contentRenderer: PropTypes.func,\n    textboxRenderer: PropTypes.func,\n    itemRenderer: PropTypes.func,\n    noDataRenderer: PropTypes.func,\n    optionRenderer: PropTypes.func,\n    inputRenderer: PropTypes.func,\n    loadingRenderer: PropTypes.func,\n    clearRenderer: PropTypes.func,\n    separatorRenderer: PropTypes.func,\n    textboxHandleRenderer: PropTypes.func,\n    direction: PropTypes.string,\n    required: PropTypes.bool,\n    pattern: PropTypes.string,\n    // The pattern attribute specifies a regular expression that the <input> element's value is checked against on form submission\n    // set to null to bypass\n    name: PropTypes.string,\n    className: PropTypes.string,\n    schema: PropTypes.string,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      textbox: false,\n      values: props.values,\n      search: '',\n      selectBounds: {},\n      cursor: null,\n\n      currentValue: ''\n    };\n\n    this.methods = {\n      removeItem: this.removeItem,\n      dropDown: this.dropDown,\n      addItem: this.addItem,\n      setSearch: this.setSearch,\n      getInputSize: this.getInputSize,\n      toggleSelectAll: this.toggleSelectAll,\n      clearAll: this.clearAll,\n      selectAll: this.selectAll,\n      searchResults: this.searchResults,\n      getSelectRef: this.getSelectRef,\n      isSelected: this.isSelected,\n      getSelectBounds: this.getSelectBounds,\n      areAllSelected: this.areAllSelected,\n      handleKeyDown: this.handleKeyDown,\n      activeCursorItem: this.activeCursorItem,\n      createNew: this.createNew,\n      sortBy: this.sortBy,\n      safeString: this.safeString,\n\n      setValue: this.setValue,\n      setValues: this.setValues,\n    };\n\n    this.select = React.createRef();\n    this.textboxRoot = typeof document !== 'undefined' && document.createElement('div');\n  }\n\n  componentDidMount() {\n\n    this.props.portal && this.props.portal.appendChild(this.textboxRoot);\n    window.addEventListener('resize', debounce(this.updateSelectBounds), {passive:true});\n    window.addEventListener('scroll', debounce(this.onScroll), {passive:true});\n\n    this.dropDown('close');\n\n    if (this.select) {\n      this.updateSelectBounds();\n    }\n\n    if (!!this.props.defaultValue) {\n      this.addItem(this.props.defaultValue)\n      this.setValue(this.props.defaultValue.name)\n      this.setState({currentValue : this.props.defaultValue.name})\n      this.setSearch({target: {value: this.props.defaultValue.name}})\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      !isEqual(prevProps.values, this.props.values) &&\n      isEqual(prevProps.values, prevState.values)\n    ) {\n      this.setState({ values: this.props.values }, () => {\n        this.props.onChange(this.props.values);\n      });\n    }\n\n    if (prevState.values !== this.state.values) {\n      if (this.state.values.length) { this.props.onChange(this.state.values) };\n      this.updateSelectBounds();\n    }\n\n    if (prevState.search !== this.state.search) {\n      this.updateSelectBounds();\n    }\n\n    if (prevState.values !== this.state.values && this.props.closeOnSelect) {\n      this.dropDown('close');\n    }\n\n    if (prevProps.multi !== this.props.multi) {\n      this.updateSelectBounds();\n    }\n\n    if (prevState.textbox && prevState.textbox !== this.state.textbox) {\n      this.onTextboxClose();\n    }\n\n    if (!prevState.textbox && prevState.textbox !== this.state.textbox) {\n      this.props.onTextboxOpen();\n    }\n\n    if (prevState.values !== this.state.values && !this.props.fillable && this.state.values.length) {\n      this.clearAll();\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.portal && this.props.portal.removeChild(this.textboxRoot);\n    window.removeEventListener(\n      'resize',\n      debounce(this.updateSelectBounds, this.props.debounceDelay)\n    );\n    window.removeEventListener('scroll', debounce(this.onScroll, this.props.debounceDelay));\n  }\n\n  onTextboxClose = () => {\n    this.setState({ cursor: null });\n    this.props.onTextboxClose();\n  };\n\n  onScroll = () => {\n    if (this.props.closeOnScroll) {\n      this.dropDown('close');\n    }\n\n    this.updateSelectBounds();\n  };\n\n  updateSelectBounds = () =>\n    this.select.current &&\n    this.setState({\n      selectBounds: this.select.current.getBoundingClientRect()\n    });\n\n  getSelectBounds = () => this.state.selectBounds;\n\n  dropDown = (action = 'toggle', event) => {\n    const target = (event && event.target) || (event && event.srcElement);\n\n    if (\n      this.props.portal &&\n      !this.props.closeOnScroll &&\n      !this.props.closeOnSelect &&\n      event &&\n      target &&\n      target.offsetParent &&\n      target.offsetParent.classList.contains('react-textbox-select-dropdown')\n    ) {\n      return;\n    }\n\n    if (this.props.keepOpen) {\n      return this.setState({ textbox: true });\n    }\n\n    if (action === 'close' && this.state.textbox) {\n      this.select.current.blur();\n\n      return this.setState({\n        textbox: false,\n        search: this.props.clearOnBlur ? '' : this.state.search\n      });\n    }\n\n    if (action === 'open' && !this.state.textbox) {\n      return this.setState({ textbox: true });\n    }\n\n    if (action === 'toggle') {\n      this.select.current.focus();\n      return this.setState({ textbox: !this.state.textbox });\n    }\n\n    return false;\n  };\n\n  getSelectRef = () => this.select.current;\n\n  setValue = (value) => {\n    this.setState({currentValue : value})\n  }\n\n  setValues = (values) => {\n    this.setState({values: [values]})\n  }\n\n  addItem = (item) => {\n    if (this.props.multi) {\n      if (\n        valueExistInSelected(getByPath(item, this.props.valueField), this.state.values, this.props)\n      ) {\n        return this.removeItem(null, item, false);\n      }\n\n      this.setState({\n        values: [...this.state.values, item]\n      });\n    } else {\n      this.setState({\n        values: [item],\n        textbox: false\n      });\n    }\n\n    this.props.clearOnSelect && this.setState({ search: '' });\n\n    return true;\n  };\n\n  removeItem = (event, item, close = false) => {\n    if (event && close) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.dropDown('close');\n    }\n\n    this.setState({\n      values: this.state.values.filter(\n        (values) =>\n          getByPath(values, this.props.valueField) !== getByPath(item, this.props.valueField)\n      )\n    });\n  };\n\n  setSearch = (event) => {\n    this.setState({\n      cursor: null\n    });\n\n    this.setState({\n      search: event.target.value\n    });\n  };\n\n  getInputSize = () => {\n    if (this.state.values && this.state.values.length) {\n      return 0;\n    } else {\n      return this.props.placeholder.length;\n    }\n  };\n\n  toggleSelectAll = () => {\n    return this.setState({\n      values: this.state.values.length === 0 ? this.selectAll() : this.clearAll()\n    });\n  };\n\n  clearAll = () => {\n    this.props.onClearAll();\n    this.setState({\n      values: []\n    });\n  };\n\n  selectAll = (valuesList = []) => {\n    this.props.onSelectAll();\n    const values = valuesList.length > 0\n      ? valuesList\n      : this.props.options.filter((option) => !option.disabled);\n\n    this.setState({ values });\n  };\n\n  isSelected = (option) =>\n    this.state.currentValue == option[this.props.labelField]\n\n  areAllSelected = () =>\n    this.state.values.length === this.props.options.filter((option) => !option.disabled).length;\n\n  safeString = (string) => string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n\n  sortBy = () => {\n    const { sortBy, options } = this.props;\n\n    if (!sortBy) {\n      return options;\n    }\n\n    options.sort((a, b) => {\n      if (getProp(a, sortBy) < getProp(b, sortBy)) {\n        return -1;\n      } else if (getProp(a, sortBy) > getProp(b, sortBy)) {\n        return 1;\n      } else {\n        return 0;\n      }\n    });\n\n    return options;\n  };\n\n  searchFn = ({ state, methods }) => {\n    const regexp = new RegExp(methods.safeString(state.search), 'i');\n\n    return methods\n      .sortBy()\n      .filter((item) =>\n        regexp.test(getByPath(item, this.props.searchBy) || getByPath(item, this.props.valueField))\n      );\n  };\n\n  searchResults = () => {\n    const args = { state: this.state, props: this.props, methods: this.methods };\n\n    return this.props.searchFn(args) || this.searchFn(args);\n  };\n\n  activeCursorItem = (activeCursorItem) =>\n    this.setState({\n      activeCursorItem\n    });\n\n  handleKeyDown = (event) => {\n    const args = {\n      event,\n      state: this.state,\n      props: this.props,\n      methods: this.methods,\n      setState: this.setState.bind(this)\n    };\n\n    return this.props.handleKeyDownFn(args) || this.handleKeyDownFn(args);\n  };\n\n  handleKeyDownFn = ({ event, state, props, methods, setState }) => {\n    const { cursor } = state;\n    const escape = event.key === 'Escape';\n    const enter = event.key === 'Enter';\n    const arrowUp = event.key === 'ArrowUp';\n    const arrowDown = event.key === 'ArrowDown';\n    const tab = event.key === 'Tab' && !event.shiftKey;\n    const shiftTab = event.shiftKey && event.key === 'Tab';\n\n    if ((arrowDown || tab) && cursor === null) {\n      return setState({\n        cursor: 0\n      });\n    }\n\n    if (arrowUp || arrowDown || shiftTab || tab) {\n      event.preventDefault();\n    }\n\n    if (escape) {\n      this.dropDown('close');\n    }\n\n    if (enter) {\n      const currentItem = methods.searchResults()[cursor];\n      if (currentItem && !currentItem.disabled) {\n        if (props.create && valueExistInSelected(state.search, state.values, props)) {\n          return null;\n        }\n\n        methods.addItem(currentItem);\n      }\n      this.dropDown('close');\n    }\n\n    if ((arrowDown || tab) && methods.searchResults().length === cursor) {\n      return setState({\n        cursor: 0\n      });\n    }\n\n    if (arrowDown || tab) {\n      setState((prevState) => ({\n        cursor: prevState.cursor + 1\n      }));\n    }\n\n    if ((arrowUp || shiftTab) && cursor > 0) {\n      setState((prevState) => ({\n        cursor: prevState.cursor - 1\n      }));\n    }\n\n    if ((arrowUp || shiftTab) && cursor === 0) {\n      setState({\n        cursor: methods.searchResults().length\n      });\n    }\n  };\n\n  renderTextbox = (ItemComponent) =>\n    this.props.portal ? (\n      ReactDOM.createPortal(\n        <Textbox ItemComponent={ItemComponent} TextBoxComponent={this.props.TextBoxComponent} props={this.props} state={this.state} methods={this.methods} />,\n        this.textboxRoot\n      )\n    ) : (\n        <Textbox ItemComponent={ItemComponent} TextComponent={this.props.TextComponent} TextBoxComponent={this.props.TextBoxComponent} props={this.props} state={this.state} methods={this.methods} />\n      );\n\n  createNew = (item) => {\n    const newValue = {\n      [this.props.labelField]: item,\n      [this.props.valueField]: item\n    };\n\n    this.addItem(newValue);\n    this.props.onCreateNew(newValue);\n    this.setState({ search: '' });\n  };\n\n  render() {\n\n    const { ItemComponent, ReactTextboxSelect, Container } = this.props;\n\n    return (\n      <Container className={this.props.className}>\n        <ClickOutside ClickOutsideComponent={this.props.ClickOutsideComponent} onClickOutside={(event) => this.dropDown('close', event)}>\n          <ReactTextboxSelect\n            onKeyDown={this.handleKeyDown}\n            onClick={(event) => this.dropDown('open', event)}\n            // onFocus={(event) => this.dropDown('open', event)}\n            tabIndex={this.props.disabled ? '-1' : '0'}\n            direction={this.props.direction}\n            style={this.props.style}\n            ref={this.select}\n            disabled={this.props.disabled}\n            className={`${LIB_NAME} ${this.props.className}`}\n            color={this.props.color}\n            {...this.props.additionalProps}\n            schema={this.props.schema}>\n\n            <Content InputComponent={this.props.InputComponent} ContentComponent={this.props.ContentComponent} props={this.props} state={this.state} methods={this.methods} />\n\n            {this.props.loading && <Loading props={this.props} />}\n\n            {this.state.textbox && !this.props.disabled && this.renderTextbox(ItemComponent)}\n          </ReactTextboxSelect>\n        </ClickOutside>\n      </Container>\n    );\n  }\n}\n\nexport const DefaultReactTextboxSelect = styled.div`\n\n    background-color: ${props => props.theme.bg.quinary};\n    color: ${props => props.theme.bg.octonary};\n\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz3};\n\n    position: relative;\n    display: flex;\n\n    vertical-align: middle;\n    line-height: 1.6rem;\n    height: 1.6rem;\n    width: 100%;\n    padding: 2px 5px;\n    direction: ${({ direction }) => direction};\n    cursor: pointer;\n    min-height: 36px;\n    ${({ disabled }) =>\n    disabled ? 'cursor: not-allowed;pointer-events: none;opacity: 0.3;' : 'pointer-events: all;'}\n\n    border-bottom: 2px solid transparent;\n    border-radius: 0.2rem;\n\n    :focus,\n    :focus-within {\n        color: ${props => props.theme.bg.octonary};\n        background-color: ${props => LightenDarkenColor(props.theme.bg.quinary, 10)};\n        box-shadow: none;\n        border-bottom: 2px solid ${props => !!props.schema ? props.theme.schema[props.schema].solid : props.theme.bg.octonary};\n    }\n`;\n\nconst DefaultContainer = styled.div`\n\n`;\n\nTextBoxSearch.defaultProps = {\n  addPlaceholder: '',\n  placeholder: 'Select...',\n  values: [],\n  options: [],\n  multi: false,\n  showSelectedBox: false,\n  disabled: false,\n  searchBy: 'label',\n  sortBy: null,\n  clearable: false,\n  searchable: true,\n  textboxHandle: true,\n  separator: false,\n  keepOpen: undefined,\n  noDataLabel: 'No data',\n  createNewLabel: 'add {search}',\n  disabledLabel: 'disabled',\n  textboxGap: 5,\n  closeOnScroll: false,\n  debounceDelay: 0,\n  labelField: 'label',\n  valueField: 'value',\n  color: '#0074D9',\n  keepSelectedInList: true,\n  closeOnSelect: false,\n  clearOnBlur: true,\n  clearOnSelect: true,\n  textboxPosition: 'bottom',\n  textboxHeight: '300px',\n  autoFocus: false,\n  portal: null,\n  create: false,\n  direction: 'ltr',\n  name: null,\n  required: false,\n  pattern: '',\n  onChange: () => undefined,\n  onTextboxOpen: () => undefined,\n  onTextboxClose: () => undefined,\n  onClearAll: () => undefined,\n  onSelectAll: () => undefined,\n  onCreateNew: () => undefined,\n  searchFn: () => undefined,\n  handleKeyDownFn: () => undefined,\n  additionalProps: null,\n  showButton: true,\n  ReactTextboxSelect: DefaultReactTextboxSelect,\n  Container: DefaultContainer,\n  fillable: true,\n  schema: null,\n};\n\n\n\nexport default TextBoxSearch;\n","import styled from 'styled-components'\n\nexport const DefaultContainer = styled.div`\n\tposition: relative;\n`;\n\nexport const IconContainerComponent = styled.div`\n    width: auto;\n    height: auto;\n    position: absolute;\n    top: 50%;\n    right: 2rem;\n    transform: translateY(-50%);\n    margin: 0;\n    padding: 0;\n    z-index: 500;\n`;\n","import React, {Component, useEffect, useState} from 'react';\n\n// external functions\nimport PropTypes from 'prop-types';\nimport { useField, useFormikContext } from \"formik\";\n\n// internal functions\nimport { getMessageFromError } from \"../../../../methods/utils/form_utils\";\n\n// internal components\nimport ErrorTooltip from \"../error_tooltip/error_tooltip\";\nimport TextBoxSearch from \"../../textbox_search/textbox_search\";\n\n// styles\nimport * as styled from './textbox_search_field.style'\n\nconst TextboxSearchField = ({\n\t\t\t\t\t\t\t\tonTextboxClose,\n\t\t\t\t\t\t\t\tonChange,\n\t\t\t\t\t\t\t\tContainer,\n\t\t\t\t\t\t\t\tstyle,\n\t\t\t\t\t\t\t\tcontainerStyle,\n\t\t\t\t\t\t\t\tlabelField,\n\t\t\t\t\t\t\t\tvalueField,\n\t\t\t\t\t\t\t\tmulti,\n\t\t\t\t\t\t\t\tmapInput,\n\t\t\t\t\t\t\t\tmapOutput,\n\t\t\t\t\t\t\t\t...props\n\t\t\t\t\t\t\t}) => {\n\n\tconst { setFieldValue, setFieldTouched } = useFormikContext();\n\tconst [field, meta] = useField(props);\n\n\tconst {\n\t\tvalue: fieldValue,\n\t\tname: fieldName\n\t} = field\n\n\tconst {\n\t\ttouched,\n\t\terror\n\t} = meta\n\n\tconst hasError = touched && error;\n\n\n\tlet ReactDropdownSelectStyle = {\n\t\tborderLeft: hasError ? '1px solid red' : \"1px solid transparent\",\n\t\tborderTop: hasError ? '1px solid red' : \"1px solid transparent\",\n\t\tborderRight: hasError ? '1px solid red' : \"1px solid transparent\",\n\t\tborderBottom: hasError && '1px solid red',\n\t\tboxShadow: hasError && `0 0 5px red`,\n\t\ttransition: \"all .5s ease-in-out\",\n\t}\n\n\tconst errorMessage = getMessageFromError(meta.error);\n\n\treturn (\n\t\t<Container\n\t\t\tstyle={containerStyle}\n\t\t>\n\t\t\t<TextBoxSearch\n\t\t\t\t// value={\"adaw\"}\n\t\t\t\t// values={mapInput(fieldValue)}\n\t\t\t\tonTextboxClose={() => {\n\t\t\t\t\t// set this field to touched if not already\n\t\t\t\t\tconst isTouched = meta.touched;\n\t\t\t\t\tif(!isTouched) {\n\t\t\t\t\t\tsetFieldTouched(fieldName,true)\n\t\t\t\t\t}\n\t\t\t\t\t// call any additional function that was passed as prop\n\t\t\t\t\tonTextboxClose && onTextboxClose();\n\t\t\t\t}}\n\t\t\t\tonBlur={() => {\n\t\t\t\t\tsetFieldTouched(true)\n\t\t\t\t}}\n\t\t\t\tlabelField={labelField}\n\t\t\t\tvalueField={valueField}\n\t\t\t\tmulti={multi}\n\t\t\t\tstyle={{...ReactDropdownSelectStyle, ...style}}\n\t\t\t\t{...field}\n\t\t\t\t{...props}\n\t\t\t\tonChange={values => {\n\t\t\t\t\tif(!touched) {\n\t\t\t\t\t\tsetFieldTouched(fieldName, \"true\")\n\t\t\t\t\t}\n\n\t\t\t\t\tif(values.length === 1) {\n\t\t\t\t\t\tif(values[0].name === \"\") {\n\t\t\t\t\t\t\tsetFieldValue(fieldName, null)\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tsetFieldValue(fieldName, values[0])\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telse {\n\t\t\t\t\t\tif(multi) {\n\t\t\t\t\t\t\tsetFieldValue(fieldName, values)\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tsetFieldValue(fieldName, values[0])\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tonChange && onChange(values)\n\t\t\t\t}}\n\t\t\t/>\n\n\t\t\t<ErrorTooltip\n\t\t\t\tvisible={hasError}\n\t\t\t\ttext={errorMessage}\n\t\t\t\tContainerComponent={styled.IconContainerComponent}\n\t\t\t/>\n\t\t</Container>\n\t);\n};\n\n// Specifies propTypes\nTextboxSearchField.propTypes = {\n\tContainer: PropTypes.elementType,\n\tonTextboxClose: PropTypes.func,\n\tonChange: PropTypes.func,\n\tmapInput: PropTypes.func,\n\tmapOutput: PropTypes.func,\n\tstyle: PropTypes.object,\n\tcontainerStyle: PropTypes.object,\n\tlabelField: PropTypes.string,\n\tvalueField: PropTypes.string,\n\tmulti: PropTypes.bool\n};\n\n// Specifies the default values for props:\nTextboxSearchField.defaultProps = {\n\tContainer: styled.DefaultContainer,\n\tonTextboxClose: () => {},\n\tonChange: () => {},\n\tstyle: {},\n\tcontainerStyle: {},\n\tlabelField: \"\",\n\tvalueField: \"\",\n\tmulti: false,\n\tmapInput: val => val,\n\tmapOutput: val => val,\n};\n\nexport default TextboxSearchField;\n","import { useRef, useEffect } from 'react'\n\n/**\n * This will take a value and store its current state\n * This can be used to see if the stored state has changed\n * For example: Does the new state differ from the previous state\n * @param {var} val \n */\nconst usePrevious = (val) => {\n    const ref = useRef()\n    useEffect(() => {\n        ref.current = val;\n    })\n    return ref.current\n}\n\nexport default usePrevious","import React, { useState, useEffect } from 'react'\nimport * as styled from '../tasks_content.style'\nimport { useSelector, useDispatch } from 'react-redux'\n\n\n/*\n*\n* Should track quantity / fraction option only display if there is an obj? in master it always displays\n*\n* When creating new process\n*   when adding route, should click add create the route in mongo, or should this wait until the process is made as well\n*       If we don't wait till the process is saved, if you leave the page / refresh / cancel, the route will already be made without the process. I think wait - Justin\n*\n* */\n\n\n// Import Basic Components\nimport ContentHeader from '../../content_header/content_header'\nimport Textbox from '../../../../basic/textbox/textbox.js'\nimport Button from '../../../../basic/button/button'\nimport DropDownSearch from '../../../../basic/drop_down_search_v2/drop_down_search'\n\n// Import Components\nimport ConfirmDeleteModal from '../../../../basic/modals/confirm_delete_modal/confirm_delete_modal'\nimport LoadUnloadFields from './fields/load_unload_fields'\n\n// Import utils\nimport uuid from 'uuid'\nimport { deepCopy } from '../../../../../methods/utils/utils'\nimport { getPreviousRoute, willRouteAdditionFixProcess } from '../../../../../methods/utils/processes_utils'\n\n// Import actions\nimport { putDashboard, postDashboard } from '../../../../../redux/actions/dashboards_actions'\nimport * as objectActions from '../../../../../redux/actions/objects_actions'\nimport { setFixingProcess } from '../../../../../redux/actions/processes_actions'\nimport { putStation } from '../../../../../redux/actions/stations_actions'\nimport { setSelectedStation } from '../../../../../redux/actions/stations_actions'\nimport { setSelectedPosition } from '../../../../../redux/actions/positions_actions'\nimport {\n    buildDefaultRouteName,\n    getLoadStationId,\n    getRouteProcesses,\n    getUnloadStationId, isMiRTask,\n    isNextRouteViable, isOnlyHumanTask\n} from \"../../../../../methods/utils/route_utils\";\nimport TextField from \"../../../../basic/form/text_field/text_field\";\nimport TextboxSearchField from \"../../../../basic/form/textbox_search_field/textbox_search_field\";\nimport PropTypes from \"prop-types\";\nimport { isObject } from \"../../../../../methods/utils/object_utils\";\nimport useChange from \"../../../../basic/form/useChange\";\nimport { removeTask } from \"../../../../../redux/actions/tasks_actions\";\nimport { isArray } from \"../../../../../methods/utils/array_utils\";\nimport usePrevious from \"../../../../../hooks/usePrevious\";\nimport * as taskActions from \"../../../../../redux/actions/tasks_actions\";\n\nconst TaskField = (props) => {\n\n    const {\n        isTransportTask,\n        isProcessTask,\n        fieldParent,\n        setFieldValue,\n        setValues,\n        setFieldTouched,\n        getFieldMeta,\n        onSave,\n        onBackClick,\n        onRemove,\n        validateForm,\n        onDelete,\n        isNew\n    } = props\n\n    const fieldMeta = getFieldMeta(fieldParent)\n\n    const {\n        value: values = {},\n        error: errors = {},\n        touched,\n    } = fieldMeta || {}\n\n    // sets values.changed to true when a change occurs\n    useChange(fieldParent)\n\n    const {\n        name,\n        obj,\n        track_quantity,\n        _id: routeId,\n        changed,\n        temp\n    } = values || {}\n\n    const {\n        insertIndex\n    } = temp || {}\n\n    const routeProcesses = getRouteProcesses(routeId) || []\n    const isProcessRoute = routeProcesses.length > 0 || fieldParent\n\n    const errorCount = Object.keys(errors).length // get number of field errors\n    // const touchedCount = Object.values(touched).length // number of touched fields\n    const submitDisabled = ((errorCount > 0) || (!changed)) //&& (submitCount > 0) // disable if there are errors or no touched field, and form has been submitted at least once\n\n    const dispatch = useDispatch()\n    const dispatchPutStation = (station, ID) => dispatch(putStation(station, ID))\n    const dispatchPutDashboard = (dashboard, ID) => dispatch(putDashboard(dashboard, ID))\n    const dispatchPostDashboard = (dashboard) => dispatch(postDashboard(dashboard))\n    const dispatchSetFixingProcess = (bool) => dispatch(setFixingProcess(bool))\n    const dispatchSetSelectedStation = (station) => dispatch(setSelectedStation(station))\n    const dispatchSetSelectedPosition = (position) => dispatch(setSelectedPosition(position))\n    const dispatchSetEditing = async (props) => await dispatch(taskActions.editingTask(props))\n\n    let routes = useSelector(state => state.tasksReducer.tasks)\n    let selectedTask = useSelector(state => state.tasksReducer.selectedTask)\n    const selectedProcess = useSelector(state => state.processesReducer.selectedProcess)\n    const dashboards = useSelector(state => state.dashboardsReducer.dashboards)\n    const objects = useSelector(state => state.objectsReducer.objects)\n    const currentMap = useSelector(state => state.mapReducer.currentMap)\n    const fixingProcess = useSelector(state => state.processesReducer.fixingProcess)\n\n    const stations = useSelector(state => state.stationsReducer.stations)\n\n    const [confirmDeleteModal, setConfirmDeleteModal] = useState(false);\n    const [needsValidate, setNeedsValidate] = useState(false);\n    const [didSetHandoff, setDidSetHandoff] = useState(false);\n\n\n    const previousLoadStationId = usePrevious(getLoadStationId(values))\n    const previousUnloadStationId = usePrevious(getUnloadStationId(values))\n\n    useEffect(() => {\n        const loadStationId = getLoadStationId(selectedTask)\n        const unloadStationId = getUnloadStationId(selectedTask)\n\n        // update load & unload from selectedTask - currently have to do it this way since selectedTask is used in so many places\n        if (selectedTask && selectedTask.load) {\n            setFieldValue(fieldParent ? `${fieldParent}.load.station` : \"load.station\", selectedTask.load.station, false)\n            setFieldValue(fieldParent ? `${fieldParent}.load.position` : \"load.position\", selectedTask.load.position, false)\n        }\n        if (selectedTask && selectedTask.unload) {\n            setFieldValue(fieldParent ? `${fieldParent}.unload.station` : \"unload.station\", selectedTask.unload.station, false)\n            setFieldValue(fieldParent ? `${fieldParent}.unload.position` : \"unload.position\", selectedTask.unload.position, false)\n        }\n\n        if (selectedTask && selectedTask.type) {\n            setFieldValue(fieldParent ? `${fieldParent}.type` : \"type\", selectedTask.type, false)\n        }\n\n        if (selectedTask && selectedTask.device_types) {\n            setFieldValue(fieldParent ? `${fieldParent}.device_types` : \"device_types\", selectedTask.device_types, false)\n        }\n\n        if(isMiRTask(selectedTask)) {\n            if(values.handoff) setFieldValue(fieldParent ? `${fieldParent}.handoff` : \"handoff\", false)\n        }\n\n        else if(isOnlyHumanTask(selectedTask)) {\n            if(!values.handoff && !didSetHandoff && isNew) {\n                setDidSetHandoff(true)\n                setFieldValue(fieldParent ? `${fieldParent}.handoff` : \"handoff\", true)\n            }\n        }\n\n        const loadStation = stations[loadStationId] || {name: \"\"}\n        const {\n            name: loadName\n        } = loadStation\n        const prevLoadStation = stations[previousLoadStationId] || {name: \"\"}\n        const {\n            name: prevLoadName\n        } = prevLoadStation\n\n        const unloadStation = stations[unloadStationId] || {name: \"\"}\n        const {\n            name: unloadName\n        } = unloadStation\n        const prevUnloadStation = stations[previousUnloadStationId] || {name: \"\"}\n        const {\n            name: prevUnloadName\n        } = prevUnloadStation\n\n        const prevName = buildDefaultRouteName(prevLoadName, prevUnloadName)\n        const newName = buildDefaultRouteName(loadName, unloadName)\n\n        if((name === prevName) || !name) {\n            setFieldValue(fieldParent ? `${fieldParent}.name` : \"name\", newName, false)\n        }\n\n        setNeedsValidate(true)\n\n        // set touched if changes\n        return () => {\n\n\n            if (selectedTask && selectedTask.load) {\n                setFieldTouched(fieldParent ? `${fieldParent}.load` : \"load\", true)\n            }\n            if (selectedTask && selectedTask.unload) {\n                setFieldTouched(fieldParent ? `${fieldParent}.unload` : \"unload\", true)\n            }\n        }\n    }, [selectedTask])\n\n    useEffect(() => {\n\n        dispatchSetEditing(true) // set editing to true\n\n        return () => {\n            // When unmounting edit task, always set fixing process to false\n            // This will take care of when it's set to true in edit process\n            dispatchSetFixingProcess(false)\n            dispatchSetSelectedPosition(null)\n            dispatchSetSelectedStation(null)\n            dispatchSetEditing(false)\n\n        }\n    }, [])\n\n    // calls save function when values.needsSubmit is true - used for auto submit when selecting route from existing\n    useEffect(() => {\n        if (values.needsSubmit) onSave()\n    }, [values.needsSubmit])\n\n    // calls save function when values.needsSubmit is true - used for auto submit when selecting route from existing\n    useEffect(() => {\n        if (needsValidate) {\n            validateForm()\n            setNeedsValidate(false)\n        }\n    }, [needsValidate])\n\n\n\n\n    const renderLoadUnloadParameters = () => {\n        if (selectedTask.load.position === null) {\n            // No load position has been defined - ask user to define load (start) position\n            return <styled.DirectionText>Click a position on the map to be the load (or start) position.</styled.DirectionText>\n        } else if (selectedTask.load.station === null) {\n            // Load position is not tied to a station - task is no longer a transport task\n            return (\n                <>\n                    {selectedTask.unload.position === null &&\n                        <styled.DirectionText>Click on a position on the map to be the end position.</styled.DirectionText>\n                    }\n                    <styled.HelpText>Since the start position is not tied to a station, this task is no longer a transport task</styled.HelpText>\n                </>\n            )\n        } else {\n            // Load position has been defined and is a station - now handle unload position\n            if (selectedTask.unload.position === null) {\n                // No unload position has been defined - ask user to define load (end) position\n                return <styled.DirectionText>Click on a position on the map to be the unload (or end) position.</styled.DirectionText>\n            } else if (selectedTask.unload.station === null) {\n                // Unload position is not a station - task is no longer a transport task\n                return <styled.HelpText>Since the end position is not tied to a station, this task is no longer a transport task</styled.HelpText>\n            } else {\n                // Load AND Unload positions have been defined. Display load/unload parameter fields\n                return <LoadUnloadFields\n                    fieldParent={fieldParent}\n                    values={values}\n                    setFieldValue={setFieldValue}\n                />\n\n            }\n        }\n    }\n\n    const createObject = async () => {\n        // Save object\n        let objectId = null\n        if (isObject(obj) && ('name' in obj)) {\n            if (obj._id == undefined) { // If the object does not currently exist, make a new one\n                const newObject = {\n                    name: obj.name,\n                    description: \"\",\n                    modelName: \"\",\n                    dimensions: null,\n                    map_id: currentMap._id,\n                    _id: uuid.v4(),\n                }\n                const response = await dispatch(objectActions.postObject(newObject))\n                setFieldValue(fieldParent ? `${fieldParent}.obj` : \"obj\", newObject)\n\n\n                objectId = newObject._id\n            } else { //  Otherwise just set the task obj to the existing obj\n                objectId = obj._id\n            }\n\n        }\n\n        setFieldValue(fieldParent ? `${fieldParent}.needsSubmit` : \"needsSubmit\", true)\n\n        return objectId\n    }\n\n\n\n    const updateDashboard = () => {\n        // Add the task automatically to the associated load station dashboard\n        // Since as of now the only type of task we are doing is push, only need to add it to the load location\n        let updatedStation = deepCopy(stations[selectedTask.load.station])\n\n        let updatedDashboard = dashboards[updatedStation.dashboards[0]]\n\n        if (updatedDashboard === undefined) {\n            let defaultDashboard = {\n                name: updatedStation.name + ' Dashboard',\n                buttons: [],\n                station: updatedStation._id\n            }\n            const postDashboardPromise = dispatchPostDashboard(defaultDashboard)\n            postDashboardPromise.then(async postedDashboard => {\n                alert('Added dashboard to location. There already should be a dashboard tied to this location, so this is an temp fix')\n                updatedStation.dashboards = [postedDashboard._id.$oid]\n                await dispatchPutStation(updatedStation, updatedStation._id)\n\n            })\n        }\n\n        const newDashboardButton = {\n            color: '#bcbcbc',\n            id: selectedTask._id,\n            name: selectedTask.name,\n            task_id: selectedTask._id\n        }\n        updatedDashboard.buttons.push(newDashboardButton)\n        dispatchPutDashboard(updatedDashboard, updatedDashboard._id.$oid)\n\n        // dispatch(taskActions.removeTask(selectedTask._id)) // Remove the temporary task from the local copy of tasks\n    }\n\n\n\n\n\n\n    return (\n        <>\n            {!!selectedTask &&\n\n                <styled.ContentContainer>\n\n                    {confirmDeleteModal &&\n                        <ConfirmDeleteModal\n                            isOpen={!!confirmDeleteModal}\n                            title={\n\n                                `Are you sure you want to delete this Route?\n\n                    ${routeProcesses.length > 0 ?\n                                    `This task is a part of processes:\n\n                        ${routeProcesses.map((process) => {\n                                        // Try catch for error with editing an existing task that belongs to a new process\n                                        try {\n                                            return ` '${process.name}'`\n\n                                        } catch (error) {\n                                            return ``\n                                        }\n                                    })}\n\n                        and will be removed from these processes if deleted.\n                        `\n                                    :\n                                    ''\n                                }\n                    `\n                            }\n                            button_1_text={\"Yes\"}\n                            handleOnClick1={() => {\n                                onDelete(routeId)\n                                setConfirmDeleteModal(null)\n                            }}\n                            button_2_text={\"No\"}\n                            handleOnClick2={() => setConfirmDeleteModal(null)}\n                            handleClose={() => setConfirmDeleteModal(null)}\n                        />\n                    }\n\n\n                    <div style={{ marginBottom: '1rem' }}>\n                        {selectedTask &&\n                            <ContentHeader\n                                content={'tasks'}\n                                mode={(!!isProcessTask && selectedTask.new) ? 'add' : 'create'}\n                                // Disables the button if load and unloads have not been selected for a task/route in a process\n                                // disabled={selectedTask !== null && (!selectedTask.load.position || selectedTask.unload.position === null)}\n                                disabled={submitDisabled}\n                                onClickSave={async () => {\n                                    await createObject()\n                                    // await onSave()\n                                }}\n\n                                onClickBack={() => {\n                                    onBackClick(routeId)\n                                }}\n                            />\n                        }\n\n                    </div>\n\n                    {/*\n                If it's a process route and its a new route then add the ability to select already existing routes.\n                Some filtering is done based on certain conditions, see 'options' key\n            */}\n                    {!!selectedTask && isProcessTask && !!selectedTask.new &&\n                        <>\n                            <styled.Label>\n                                <styled.LabelHighlight>Either</styled.LabelHighlight> choose an existing Route...\n                    </styled.Label>\n                            <DropDownSearch\n                                placeholder=\"Select Existing Route\"\n                                label=\"Choose An Existing Route\"\n                                labelField=\"name\"\n                                valueField=\"name\"\n\n                                options={\n\n                                    Object.values(routes)\n\n                                        .filter(task => {\n\n                                            // This filters out tasks when fixing a process\n                                            // If the process is broken, then you can only select tasks that are associated with the last route before break's unload station\n                                            if (fixingProcess) {\n\n                                                // Gets the route before break\n                                                const routeBeforeBreak = selectedProcess.routes[selectedProcess.broken - 1]\n\n                                                if (!!routeBeforeBreak.unload) {\n                                                    const unloadStationID = routeBeforeBreak.unload.station\n\n                                                    if (task.load.station === unloadStationID) {\n                                                        return true\n\n                                                    }\n                                                }\n                                            }\n\n                                            // If the selected process has routes, then filter out tasks that have load stations that arent the last route's unload station\n                                            // This eliminates 'broken' processes with tasks that are between non-connected stations\n                                            else if (selectedProcess.routes.length > 0) {\n                                                if(insertIndex === 0) {\n                                                    const firstTask = selectedProcess.routes[0]\n                                                    return isNextRouteViable(task, firstTask)\n                                                }\n                                                else {\n                                                    // Gets the previous route\n                                                    const previousRoute = getPreviousRoute(selectedProcess.routes, values._id)\n                                                    return isNextRouteViable(previousRoute, task)\n                                                }\n                                            }\n\n                                            else {\n                                                return true\n                                            }\n                                        })\n                                }\n                                // values={!!selectedTask.idle_location ? [positions[selectedTask.idle_location]] : []}\n                                dropdownGap={5}\n                                noDataLabel=\"No matches found\"\n                                closeOnSelect=\"true\"\n                                name={fieldParent ? `${fieldParent}.existingRoute` : \"existingRoute\"}\n                                onChange={async (dropdownValues) => {\n\n                                    const selectedValue = dropdownValues[0] || {}\n\n                                    const {\n                                        obj: selectedObjId = \"\",\n                                        _id: selectedRouteId = \"\"\n                                    } = selectedValue || {}\n\n                                    const selectedObj = selectedObjId ? (objects[selectedObjId] || null) : null\n\n                                    // If this task is part of a process and not already in the array of routes, then add the task to the selected process\n                                    if (!selectedProcess.routes.includes(selectedRouteId)) {\n\n                                        var selectedRoute = { ...selectedValue, needsSubmit: true, obj: selectedObj, temp: values.temp }\n                                        // setFieldValue\n                                        if (fieldParent) {\n                                            setFieldValue(fieldParent, selectedRoute)\n                                        }\n                                        else {\n                                            await setValues(selectedRoute)\n                                        }\n\n                                    }\n                                }}\n                                className=\"w-100\"\n                                schema=\"tasks\"\n                            />\n                        </>\n                    }\n\n                    {!!selectedTask && isProcessTask && !!selectedTask.new &&\n                        <styled.Label style={{ marginTop: '1rem' }}>\n                            <styled.LabelHighlight>Or</styled.LabelHighlight> make a new one\n                </styled.Label>\n                    }\n\n                    {/* Task Title */}\n                    <TextField\n                        InputComponent={Textbox}\n                        name={fieldParent ? `${fieldParent}.name` : \"name\"}\n                        placeholder={\"Route Name\"}\n                        schema={'tasks'}\n                        focus={!name}\n                        style={{ fontSize: '1.2rem', fontWeight: '600' }}\n                    />\n\n                    {isTransportTask &&\n                        <>\n                            <TextboxSearchField\n                                mapInput={(val) => {\n                                    if (!val) return []\n\n                                    if (Array.isArray(val)) return val\n\n                                    return [val]\n                                }}\n                                name={fieldParent ? `${fieldParent}.obj` : \"obj\"}\n                                placeholder=\"Object\"\n                                label={!values.obj?._id ? \"New object will be created\" : null}\n                                labelField=\"name\"\n                                onChange={(val) => {\n                                }}\n\n                                valueField=\"name\"\n                                options={Object.values(objects).filter((obj) => obj.map_id === currentMap._id)}\n                                defaultValue={obj}\n                                textboxGap={0}\n                                closeOnSelect=\"true\"\n                                className=\"w-100\"\n                                schema=\"tasks\"\n                                disbaled={!isTransportTask}\n                                containerStyle={{ marginTop: '1rem', marginBottom: \"1rem\" }}\n                            />\n\n                            <styled.HelpText>\n                                Select the object that will be transported. Either search & select an existing object, or type the\n                                name of a new object to create one.\n                    </styled.HelpText>\n\n                            {isProcessRoute &&\n                            <>\n                                <styled.Label>Track Using Quantity or Fractions</styled.Label>\n                                <styled.RowContainer style={{justifyContent: 'center'}}>\n                                    <styled.DualSelectionButton\n                                        style={{borderRadius: '.5rem 0rem 0rem .5rem'}}\n                                        onClick={() => {\n                                            setFieldValue(fieldParent ? `${fieldParent}.track_quantity` : \"track_quantity\", true)\n                                        }}\n                                        selected={values.track_quantity}\n                                    >\n                                        Quantity\n                                    </styled.DualSelectionButton>\n\n                                    <styled.DualSelectionButton\n                                        style={{borderRadius: '0rem .5rem .5rem 0rem'}}\n                                        onClick={() => {\n                                            setFieldValue(fieldParent ? `${fieldParent}.track_quantity` : \"track_quantity\", false)\n                                        }}\n                                        selected={!values.track_quantity}\n\n                                    >\n                                        Fraction\n                                    </styled.DualSelectionButton>\n\n                                </styled.RowContainer>\n                            </>\n                            }\n                        </>\n                    }\n\n                    {/* Load and Unload Parameters */}\n                    <div style={{ height: \"100%\", paddingTop: \"1rem\" }}>\n                        {renderLoadUnloadParameters()}\n                    </div>\n\n                    <hr />\n\n                    {/* Remove Task From Process Button */}\n                    {selectedTask.new ?\n                        <>\n                            <Button\n                                schema={'tasks'}\n                                // disabled={!!selectedTask && !!selectedTask._id && !!selectedTask.new}\n                                secondary\n                                onClick={() => onBackClick(routeId)}\n                            >\n                                Cancel\n                    </Button>\n                        </>\n                        :\n                        <>\n                            {selectedProcess &&\n                                <Button\n                                    schema={'tasks'}\n                                    disabled={!!selectedTask && !!selectedTask._id && !!selectedTask.new}\n                                    primary\n                                    onClick={() => {\n                                        onRemove(routeId)\n                                    }}\n                                >\n                                    Remove Route\n                        </Button>\n                            }\n\n\n                            {/* Delete Task Button */}\n                            <Button\n                                schema={'tasks'}\n                                disabled={!!selectedTask && !!selectedTask._id && !!selectedTask.new}\n                                secondary\n                                onClick={() => {\n                                    setConfirmDeleteModal(true)\n                                }}\n                            >\n                                Delete Route\n                        </Button>\n                        </>\n                    }\n\n                </styled.ContentContainer>\n            }\n        </>\n\n    )\n}\n\n// Specifies propTypes\nTaskField.propTypes = {\n    onSave: PropTypes.func,\n    toggleEditing: PropTypes.func,\n    fieldParent: null,\n    setFieldValue: PropTypes.func,\n    setValues: PropTypes.func,\n    setFieldTouched: PropTypes.func,\n    getFieldMeta: PropTypes.func,\n    onBackClick: PropTypes.func,\n    onRemove: PropTypes.func,\n    onDelete: PropTypes.func,\n};\n\n// Specifies the default values for props:\nTaskField.defaultProps = {\n    onSave: () => { },\n    toggleEditing: () => { },\n    fieldParent: null,\n    setFieldValue: () => { },\n    setValues: () => { },\n    setFieldTouched: () => { },\n    getFieldMeta: () => { },\n    onBackClick: () => { },\n    onRemove: () => { },\n    onDelete: () => { },\n};\n\nexport default TaskField\n","import {Formik} from \"formik\";\nimport {routeSchema} from \"../../../../../methods/utils/form_schemas\";\nimport React, {useEffect} from \"react\";\nimport TaskField from \"../task_field/route_field\";\nimport {deleteRouteClean, saveFormRoute, setSelectedTask} from \"../../../../../redux/actions/tasks_actions\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport * as taskActions from \"../../../../../redux/actions/tasks_actions\";\n\nconst TaskForm = (props) => {\n\n\tconst {\n\t\tinitialValues,\n\t\ttoggleEditing,\n\t\tisNew,\n\t\t...remainingProps\n\t} = props\n\n\tconst dispatch = useDispatch()\n\tconst dispatchSaveFormRoute = async (formRoute) => await dispatch(saveFormRoute(formRoute))\n\tconst dispatchSetSelectedTask = (task) => dispatch(setSelectedTask(task))\n\tconst dispatchRemoveTask = async (taskId) => await dispatch(taskActions.removeTask(taskId))\n\tconst dispatchDeleteRouteClean = async (routeId) => await dispatch(taskActions.deleteRouteClean(routeId))\n\tconst onEditing = async (props) => await dispatch(taskActions.editingTask(props))\n\n\tconst tasks = useSelector(state => state.tasksReducer.tasks)\n\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t\tdispatchSetSelectedTask(null)\n\t\t}\n\n\t}, []);\n\n\tconst handleSubmit = async (values) => {\n\n\t\tawait dispatchSaveFormRoute(values)\n\n\t\tdispatchSetSelectedTask(null)\n\t\tonEditing(false)\n\t}\n\n\tconst handleBackClick = (routeId) => {\n\t\tdispatchSetSelectedTask(null)\n\t\tif(tasks[routeId] && tasks[routeId].new) {\n\t\t\tdispatchRemoveTask(routeId)\n\t\t}\n\t\tonEditing(false)\n\t}\n\n\tconst handleDelete = async (routeId) => {\n\t\tawait dispatchDeleteRouteClean(routeId)\n\t\tonEditing(false)\n\t\tdispatchSetSelectedTask(null)\n\t}\n\n\treturn (\n\t\t<Formik\n\t\t\tinitialValues={initialValues}\n\n\t\t\t// validation control\n\t\t\tvalidationSchema={routeSchema}\n\t\t\tvalidateOnChange={true}\n\t\t\tvalidateOnMount={false} // leave false, if set to true it will generate a form error when new data is fetched\n\t\t\tvalidateOnBlur={true}\n\n\t\t\t// enableReinitialize={true} // leave false, otherwise values may be reset when new data is fetched\n\t\t\tonSubmit={async (values, formikHelpers) => {\n\n\t\t\t\tconst {\n\t\t\t\t\tsetSubmitting,\n\t\t\t\t\tsetTouched,\n\t\t\t\t} = formikHelpers\n\n\t\t\t\t// set submitting to true, handle submit, then set submitting to false\n\t\t\t\t// the submitting property is useful for eg. displaying a loading indicator\n\t\t\t\t// const {\n\t\t\t\t// \tbuttonType\n\t\t\t\t// } = values\n\n\t\t\t\tsetSubmitting(true)\n\t\t\t\tawait handleSubmit(values)\n\t\t\t\tsetTouched({}) // after submitting, set touched to empty to reflect that there are currently no new changes to save\n\t\t\t\tsetSubmitting(false)\n\n\t\t\t}}\n\t\t>\n\t\t\t{formikProps => {\n\n\t\t\t\tconst {\n\t\t\t\t\tsubmitForm\n\t\t\t\t} = formikProps\n\n\t\t\t\treturn(\n\t\t\t\t\t<TaskField\n\t\t\t\t\t\t{...formikProps}\n\t\t\t\t\t\tonDelete={handleDelete}\n\t\t\t\t\t\tisNew={isNew}\n\t\t\t\t\t\tisTransportTask={true}\n\t\t\t\t\t\ttoggleEditing={toggleEditing}\n\t\t\t\t\t\tisProcessTask={null}\n\t\t\t\t\t\tonSave={submitForm}\n\t\t\t\t\t\tonBackClick={handleBackClick}\n\t\t\t\t\t\tonRemove={null}\n\t\t\t\t\t\t{...remainingProps}\n\t\t\t\t\t/>\n\t\t\t\t)\n\t\t\t}}\n\t\t</Formik>\n\t)\n}\n\nexport default TaskForm","import React, { useState, useEffect } from 'react'\nimport * as styled from './tasks_content.style'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useParams } from 'react-router-dom'\n\n// Import Components\nimport ContentList from '../content_list/content_list'\nimport TaskAddedAlert from '../../../widgets/widget_pages/dashboards_page/dashboard_screen/task_added_alert/task_added_alert'\n\n// Import actions\nimport * as taskActions from '../../../../redux/actions/tasks_actions'\nimport * as dashboardActions from '../../../../redux/actions/dashboards_actions'\nimport * as objectActions from '../../../../redux/actions/objects_actions'\nimport * as taskQueueActions from '../../../../redux/actions/task_queue_actions'\n\nimport { postTaskQueue } from '../../../../redux/actions/task_queue_actions'\n\n// Import Utils\nimport { deepCopy } from '../../../../methods/utils/utils'\nimport { tasksSortedAlphabetically } from '../../../../methods/utils/task_utils'\nimport RouteTask from './tasks_templates/route_task'\nimport uuid from 'uuid'\nimport TaskForm from \"./task_form/route_form\";\nimport {\n    generateDefaultRoute,\n    getLoadStationDashboard,\n    getLoadStationId,\n    isHumanTask,\n    isMiRTask\n} from \"../../../../methods/utils/route_utils\";\nimport { willRouteDeleteBreakProcess } from \"../../../../methods/utils/processes_utils\";\nimport { deleteRouteClean } from \"../../../../redux/actions/tasks_actions\";\nimport { isObject } from \"../../../../methods/utils/object_utils\";\nimport { DEVICE_CONSTANTS } from \"../../../../constants/device_constants\";\nimport { ADD_TASK_ALERT_TYPE } from '../../../../constants/dashboard_contants'\n\nexport default function TaskContent(props) {\n\n    // Connect redux reducers\n    const dispatch = useDispatch()\n    const params = useParams()\n    const onTaskQueueItemClicked = (id) => dispatch({ type: 'TASK_QUEUE_ITEM_CLICKED', payload: id })\n    const onHandlePostTaskQueue = (props) => dispatch(taskQueueActions.handlePostTaskQueue(props))\n    const onEditing = async (props) => await dispatch(taskActions.editingTask(props))\n    const dispatchSetSelectedTask = async (task) => await dispatch(taskActions.setSelectedTask(task))\n    const dispatchAddTask = async (task) => await dispatch(taskActions.addTask(task))\n\n    const tasks = useSelector(state => state.tasksReducer.tasks)\n    const taskQueue = useSelector(state => state.taskQueueReducer.taskQueue)\n    const selectedTask = useSelector(state => state.tasksReducer.selectedTask)\n    const currentMap = useSelector(state => state.mapReducer.currentMap)\n    const MiRMapEnabled = useSelector(state => state.localReducer.localSettings.MiRMapEnabled)\n\n    const stations = useSelector(state => state.stationsReducer.stations)\n    const editing = useSelector(state => state.tasksReducer.editingTask) //Moved to redux so the variable can be accesed in the sideBar files for confirmation modal\n    const objects = useSelector(state => state.objectsReducer.objects)\n\n    /**\n    * @param {*} Id\n    */\n\n    // State definitions\n    //const [editing, toggleEditing] = useState(false)    // Is a task being edited? Otherwise, list view\n    const [selectedTaskCopy, setSelectedTaskCopy] = useState(null)  // Current task\n    const [shift, setShift] = useState(false) // Is shift key pressed ?\n    const [isNew, setIsNew] = useState(false) // Is shift key pressed ?\n    const [addTaskAlert, setAddTaskAlert] = useState(null);\n\n\n    // To be able to remove the listeners, the function needs to be stored in state\n\n    //Parameters to pass into handlePostTaskQueue dispatch\n    const dashboardID = getLoadStationDashboard(selectedTask)\n    const Id = selectedTask ? selectedTask._id : {}\n    const name = selectedTask ? selectedTask.name : {}\n    const custom = false\n    const fromSideBar = true\n\n    const [shiftCallback] = useState(() => e => {\n        setShift(e.shiftKey)\n    })\n\n    // Creates listeners for if the shift key is pressed\n    useEffect(() => {\n\n        window.addEventListener('keydown', shiftCallback)\n        window.addEventListener('keyup', shiftCallback)\n\n        // When component unmounts, clean up by removing listeners\n        return function cleanup() {\n            window.removeEventListener('keydown', shiftCallback)\n            window.removeEventListener('keyup', shiftCallback)\n        }\n    })\n\n    const handleDefaultObj = (objId, prevObj) => {\n\n        if (isObject(objects[objId])) {\n            return objects[objId]\n        }\n        else if (prevObj) {\n            return prevObj\n        }\n        else {\n            return null\n        }\n    }\n\n    const onExecuteTask = () => {\n\n        let inQueue = false\n        let deviceType\n\n        Object.values(taskQueue).map((item) => {\n            // If its in the Q and not a handoff, then alert the user saying its already there\n            if (item.task_id === Id && !tasks[item.task_id].handoff) inQueue = true\n        })\n\n        // add alert to notify task has been added\n        // If in Q, then tell them it's already there\n        if (inQueue) {\n            // display alert notifying user that task is already in queue\n            setAddTaskAlert({\n                type: ADD_TASK_ALERT_TYPE.TASK_EXISTS,\n                label: \"Alert! Task Already in Queue\",\n                message: `'${name}' not added`,\n            })\n\n            // clear alert after timeout\n            return setTimeout(() => setAddTaskAlert(null), 1800)\n        }\n\n        // Else see what type of task it is and add accordingly\n        else {\n\n            // See device type\n            if (isMiRTask(selectedTask)) {\n                deviceType = DEVICE_CONSTANTS.MIR_100\n            }\n            else if (isHumanTask(selectedTask)) {\n                deviceType = DEVICE_CONSTANTS.HUMAN\n            }\n\n            // Handle Add\n            if (deviceType !== 'human') {\n                setAddTaskAlert({\n                    type: ADD_TASK_ALERT_TYPE.TASK_ADDED,\n                    label: \"Task Added to Queue\",\n                    message: name\n                })\n\n                // clear alert after timeout\n                setTimeout(() => setAddTaskAlert(null), 1800)\n            }\n            onHandlePostTaskQueue({ dashboardID, tasks, deviceType, taskQueue, Id, name, custom, fromSideBar })\n\n        }\n\n\n    }\n\n    if (editing && selectedTask !== null) { // Editing Mode\n        return (\n            <TaskForm\n                isNew={isNew}\n                initialValues={{\n                    ...selectedTask,\n                    obj: handleDefaultObj(selectedTask.obj)\n                }}\n                shift={shift}\n                toggleEditing={props => onEditing(props)}\n            />\n        )\n    } else {    // List Mode\n        return (\n            <>\n                <TaskAddedAlert\n                    containerStyle={{\n                        'position': 'absolute'\n                    }}\n                    {...addTaskAlert}\n                    visible={!!addTaskAlert}\n                />\n                <ContentList\n                    title={'Routes'}\n                    schema={'tasks'}\n                    elements={\n\n                        tasksSortedAlphabetically(Object.values(tasks))\n                            // Filters outs any tasks that don't belong to the current map\n                            .filter(task => task.map_id === currentMap._id)\n                            // Filter out empty tasks that are somehow created when choosing an existing task to add to a process in the process tab\n                            // These are deleted by the cleaner function on page refresh but in the meantime dont show in the list view\n                            .filter(task => task.load.position !== null)\n\n                    }\n                    onMouseEnter={(task) => {\n                        dispatchSetSelectedTask(task)\n                    }}\n                    onMouseLeave={(task) => dispatchSetSelectedTask(null)}\n                    onClick={(task) => {\n                        setIsNew(false)\n                        // If task button is clicked, start editing it\n                        dispatchSetSelectedTask(task)\n                        onEditing(true)\n                    }}\n\n                    executeTask={() => {\n                        onExecuteTask()\n                    }}\n\n                    onPlus={() => {\n                        const newTask = generateDefaultRoute()\n                        setIsNew(true)\n                        dispatchAddTask(newTask)\n                        dispatchSetSelectedTask(newTask)\n                        onEditing(true)\n                    }}\n                />\n            </>\n        )\n    }\n}\n","import styled, { css } from 'styled-components'\n\nexport const ContentContainer = styled.div`\n    flex-grow: 1;\n    padding: 1rem;\n    padding-top: 1.5rem;\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    overflow-y: scroll;\n    overflow-x: hidden;\n\n    ::-webkit-scrollbar{\n        display: none;\n    }\n\n`\n\nexport const DevicesSpan = styled.span`\n    /* line-height: 2rem; */\n`\n\nexport const Circle = styled.div`\n    height: 4rem;\n    width: 4rem;\n    border-radius: 50%;\n    border: solid .1rem red;\n    position: absolute;\n`\n\nexport const SettingsIcon = styled.i`\n    font-size: 3rem;\n    display: flex;\n    position: absolute;\n    left: 17rem;\n    margin-top: -1rem;\n`\n\nexport const AddDeviceIcon = styled.i`\n    font-size: 5rem;\n    margin-top: 1rem;\n    &:hover{\n        cursor: pointer;\n    }\n\n`\n\nexport const SettingsContainer = styled.div`\n    display: flex;\n    width: 100%;\n    flex-direction: column;\n    align-items: center;\n`\n\nexport const SettingsSectionsContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    max-width: 25rem;\n    margin: .75rem 0rem;\n`\n\nexport const SettingsLabel = styled.h1`\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz2};\n    color: ${props => props.theme.schema[props.schema].solid};\n    line-height: 1rem;\n`\n\nexport const Title = styled.h1`\n    font-family: ${props => props.theme.font.primary};\n    font-size: 2rem;\n    font-weight: 500;\n    color: ${props => props.theme.schema[props.schema].solid};\n`\n\nexport const Header = styled.div`\n    display: flex; \n    flex-direction: row;\n    width: 100%;\n    justify-content: space-between;\n`\n\nexport const RowContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n`","import styled from 'styled-components'\n\nexport const SettingsContainer = styled.div`\n    flex-grow: 1;\n    padding: 1rem;\n    padding-top: 1.5rem;\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    overflow-y: scroll;\n\n    ::-webkit-scrollbar{\n        display: none;\n    }\n`\n\nexport const SettingContainer = styled.div`\n\n    width: 100%;\n    max-width: 20rem;\n    margin-bottom: 2rem;\n`\n\nexport const RowContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n`\n\nexport const ColumnContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`\n\nexport const Header = styled.p`\n    color: ${props => props.theme.bg.octonary};\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz2};\n\n    margin-bottom: 1rem;\n`\n\nexport const ConnectionIcon = styled.i`\n\n    margin-left: 1rem;\n    font-size: 1.2rem;\n    color: ${props => props.className === 'fas fa-check' ? 'green' :\n        props.className === 'fas fa-circle-notch fa-spin' ? 'yellow' :\n        props.className === 'fas fa-times' ? 'red' : 'gray'\n    };\n`\n\nexport const ConnectionButton = styled.button`\n\n    margin-bottom: 1rem;\n    border: none;\n    border-radius: .5rem;\n    background-color: ${props => props.theme.bg.octonary};\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    outline: 0 !important;\n    width: 10rem;\n\n    box-shadow: 0 0.1rem 0.2rem 0rem #303030;\n\n    &:focus{\n        outline: 0 !important\n    }\n\n    &:active{\n        box-shadow: none;\n    }\n\n    &:hover{\n        background-color: ${props => !props.disabled && props.theme.bg.senary};\n    }\n\n`\n\nexport const SwitchContainerLabel = styled.span`\n    padding: 0;\n    margin: 0;\n    align-self: center;\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz4};\n    color: ${props => props.theme.bg.octonary};\n`\n","import styled, { css } from 'styled-components'\nimport * as style from '../devices_content.style'\nimport * as styles from '../../settings/settings.style'\nimport * as stylel from '../../locations/edit_location/location_button/location_button.style'\n\nexport const Container = styled(style.SettingsContainer)`\n`\n\nexport const SectionsContainer = styled(style.SettingsSectionsContainer)`\n`\n\nexport const Label = styled(style.SettingsLabel)`\n    margin-bottom: 1rem;\n`\n\nexport const RowContainer = styled(style.RowContainer)`\n`\n\nexport const ConnectionButton = styled(styles.ConnectionButton)`\n`\n\nexport const ConnectionIcon = styled(styles.ConnectionIcon)`\n`\n\nexport const LocationTypeGraphic = styled(stylel.LocationTypeGraphic)`\n`\n\nexport const LocationTypeButton = styled(stylel.LocationTypeButton)`\n`\n\nexport const DeviceIcon = styled.i`\n    color: ${props => props.theme.bg.octonary};\n\tfont-size: 3rem;\n`\n\nexport const ConnectionText = styled.p`\n    color: ${props => props.theme.bg.octonary};\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz3};\n    user-select: none;\n`","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport uuid from 'uuid'\n\n// Import Style\nimport * as styled from './device_edit.style'\n\n// Import basic components\nimport { deepCopy } from '../../../../../methods/utils/utils'\nimport Textbox from '../../../../basic/textbox/textbox'\nimport DropDownSearch from '../../../../basic/drop_down_search_v2/drop_down_search'\nimport Button from '../../../../basic/button/button'\n\n// Import actions\nimport { addStation, setSelectedStation } from '../../../../../redux/actions/stations_actions'\nimport * as deviceActions from '../../../../../redux/actions/devices_actions'\nimport * as positionActions from '../../../../../redux/actions/positions_actions'\n\n// Import templates\nimport * as templates from '../devices_templates/device_templates'\n\n// Import Utils\nimport { DeviceItemTypes } from '../../../../../methods/utils/device_utils'\nimport { locationsSortedAlphabetically } from '../../../../../methods/utils/locations_utils'\n\n/**\n * This handles editing device informaton\n * This also handles adding devices to the map\n * Currently using 'location' vs 'device' nominclature to match adding a location to the map and because devices really are just locations to the map\n *\n * @param {*} props\n */\nconst DeviceEdit = (props) => {\n\n    const {\n        deviceLocationDelete\n    } = props\n\n    const [connectionText, setConnectionText] = useState('Not Connected')\n    const [connectionIcon, setConnectionIcon] = useState('fas fa-question')\n    const [deviceType, setDeviceType] = useState('')\n\n    const dispatch = useDispatch()\n    const dispatchAddStation = (selectedStation) => dispatch(addStation(selectedStation))\n    const dispatchSetSelectedStation = (selectedStation) => dispatch(setSelectedStation(selectedStation))\n    const onSetSelectedDevice = (selectedDevice) => dispatch(deviceActions.setSelectedDevice(selectedDevice))\n    const onAddPosition = (updatedPosition) => dispatch(positionActions.addPosition(updatedPosition))\n\n    const selectedDevice = useSelector(state => state.devicesReducer.selectedDevice)\n    const devices = useSelector(state => state.devicesReducer.devices)\n    const positions = useSelector(state => state.positionsReducer.positions)\n\n    // On page load, see if the device is a new device or existing device\n    // TODO: This is going to fundementally change with how devices 'connect' to the cloud.\n    useEffect(() => {\n\n        // Sets the type of device, unknown devic defaults to an RM logo while known devices use their own custom SVGs\n        if (selectedDevice.device_model === 'MiR100') setDeviceType('cart')\n\n    }, [])\n\n    // TODO: Not sure this is needed with IOT Implementation\n    const handleDeviceConnection = () => {\n\n        // Need to see how the device is connecting\n\n        // if (device.status.connection === 'connected') {\n        //     setConnectionIcon('fas fa-check')\n        //     setConnectionText('Connected')\n        // } else if (device.status.connection === 'connecting') {\n        //     setConnectionIcon('fas fa-circle-notch fa-spin')\n        //     setConnectionText = 'Connecting'\n        // }\n        // else if (device.status.connection === 'failed') {\n        //     setConnectionIcon('fas fa-times')\n        //     setConnectionText('Failed')\n        // }\n        // else {\n        //     setConnectionIcon('fas fa-question')\n        //     setConnectionText('Not Connected')\n        // }\n\n    }\n\n    /**\n     * This will appear if a new device has been found with the inputed IP address\n     */\n    const handleDeviceAdd = () => {\n\n        return (\n            <>\n                <p>Connected!</p>\n            </>\n        )\n    }\n\n    /**\n     * This is used to place the device onto the map\n     * Mir cart or AGV do not need to show this because they will already be on the map\n     */\n    const handleDeviceMapLocation = () => {\n\n        let template = templates.defaultAttriutes\n\n        // Sets the device logo type\n        let deviceType = DeviceItemTypes['generic']\n        if (!!DeviceItemTypes[selectedDevice.device_model]) deviceType = DeviceItemTypes[selectedDevice.device_model]\n        else if (selectedDevice.device_model === 'MiR100') deviceType = DeviceItemTypes['cart']\n\n\n        return (\n            <styled.SectionsContainer style={{ alignItems: 'center', textAlign: 'center', }}>\n\n                <styled.ConnectionText>To add the device to the screen, grab the device with your mouse and drag onto the screen</styled.ConnectionText>\n\n                <styled.DeviceIcon\n                    className={deviceType.icon}\n                    style={{ color: 'white' }}\n                    onMouseDown={async e => {\n\n                    }}\n                />\n\n            </styled.SectionsContainer>\n\n        )\n\n    }\n\n    /**\n     * This is used to set the idle location of the AMR when not in use.\n     * This should only show up if th\n     */\n    const handleAMRIdleLocation = () => {\n\n        return (\n            <styled.SectionsContainer>\n\n                <styled.Label schema={'devices'} >Idle Location</styled.Label>\n                <DropDownSearch\n                    placeholder=\"Select Location\"\n                    label=\"Idle Location for MiR Cart\"\n                    labelField=\"name\"\n                    valueField=\"name\"\n                    options={locationsSortedAlphabetically(Object.values(positions))}\n                    values={!!selectedDevice.idle_location ? [positions[selectedDevice.idle_location]] : []}\n                    dropdownGap={5}\n                    noDataLabel=\"No matches found\"\n                    closeOnSelect=\"true\"\n                    onChange={values => {\n\n                        const idleLocation = values[0]._id\n                        onSetSelectedDevice({\n                            ...selectedDevice,\n                            idle_location: idleLocation,\n                        })\n                    }}\n                    className=\"w-100\"\n                    schema=\"tasks\"\n                />\n            </styled.SectionsContainer>\n        )\n    }\n\n    const handleSetChildPositionToCartCoords = (position) => {\n        Object.values(devices).map(async (device, ind) => {\n            if (device.device_model === 'MiR100') {\n\n                const devicePosition = device.position\n\n                const updatedPosition = {\n                    ...position,\n                    pos_x: devicePosition.pos_x,\n                    pos_y: devicePosition.pos_y,\n                    x: devicePosition.x,\n                    y: devicePosition.y,\n                    rotation: devicePosition.orientation,\n                }\n\n                onAddPosition(updatedPosition)\n\n            }\n        })\n    }\n\n    // This sets both the device name and station name to the same name\n    const handleSetDeviceName = (event) => {\n    }\n\n    return (\n        <styled.Container>\n\n            {/* Commented Out for now because we dont need to show/connect via IP TODO: Probably delete   */}\n            {/* <styled.SectionsContainer>\n\n                <styled.RowContainer style={{ justifyContent: 'space-between' }}>\n                    <styled.SettingsLabel schema={'devices'} >Device IP</styled.SettingsLabel>\n\n                    <styled.ConnectionButton onClick={() => handleDeviceConnection()} disabled={(connectionText === 'Connected' || connectionText === 'Connecting')}>\n                        {connectionText}\n                        <styled.ConnectionIcon className={connectionIcon} />\n                    </styled.ConnectionButton>\n\n                </styled.RowContainer>\n                <Textbox\n                    defaultValue={device.ip}\n                    onChange={(event) => {\n                        // Sets the IP address of the device to the event target vcalue\n                        setDevice({\n                            ...device,\n                            ip: event.target.value\n                        })\n                    }}\n                    style={{ fontWeight: '600', fontSize: '1.5rem' }}\n                    labelStyle={{ color: 'black' }}\n                />\n            </styled.SectionsContainer> */}\n\n            <styled.SectionsContainer>\n\n                <styled.Label schema={'devices'} >Device Name</styled.Label>\n\n                <Textbox\n                    defaultValue={selectedDevice.device_name}\n                    onChange={(event) => {\n                        // Sets the IP address of the device to the event target vcalue\n                        handleSetDeviceName(event)\n                    }}\n                    style={{ fontWeight: '600', fontSize: '1.5rem' }}\n                    labelStyle={{ color: 'black' }}\n                />\n\n            </styled.SectionsContainer>\n\n\n            {selectedDevice.device_model !== 'MiR100' ?\n                handleDeviceMapLocation()\n                :\n                handleAMRIdleLocation()\n            }\n\n\n            <Button schema={'devices'} secondary style={{ display: 'inline-block', float: 'right', width: '100%', maxWidth: '25rem', marginTop: '2rem' }}\n                onClick={() => {\n                    deviceLocationDelete()\n                }}\n            >\n                Delete\n                </Button>\n\n        </styled.Container>\n    )\n\n}\n\nexport default DeviceEdit\n","import styled, { css } from 'styled-components'\nimport * as style from '../devices_content.style'\n\nexport const SettingsContainer = styled(style.SettingsContainer)`\n`\n\nexport const SettingsSectionsContainer = styled(style.SettingsSectionsContainer)`\n`\n\nexport const SettingsLabel = styled(style.SettingsLabel)`\n`","import styled, { css } from 'styled-components'\n\nconst sharedDeviceCss = css`\n\tposition: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    color: ${props => props.theme.bg.octonary};\n`\n\nexport const DeviceContainer = styled.div`\n    display: flex;\n    position: relative;\n    margin-bottom: 2rem;\n`\n\nexport const DeviceIcon = styled.i`\n\t${sharedDeviceCss};\n    font-size: 6rem;\n    \n\t${props => props.isSmall && {\n\t\tfontSize: \"3rem\"\n\t}};\n`\n\nexport const BatterySvg = styled.svg`\n    position: absolute;\n    overflow: visible;\n    height: 40%;\n    right: -.2rem;\n    top: 50%;\n    transform: translateY(-50%);    \n`\n\nexport const OEESvg = styled.svg`\n    position: absolute;\n    overflow: visible;\n    height: 40%;\n    left: 2.25rem;\n    top: 14rem;\n    /* transform: translateY(-50%);     */\n`\n\nexport const BatteryText = styled.p`\n    position: absolute;\n    top: 45.5%;\n    right: 10%;\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz3};\n    user-select: none;\n    \n    ${props => props.isSmall && {\n\t\tfontSize: props.theme.fontSize.sz4\n\t}};\n`\n\nexport const BigCircle = styled.div`\n    height: 20rem;\n    width: 20rem;\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    overflow: hidden;\n    border: solid .2rem black;\n    border-radius: 50%;\n\n\n    /* $border: 1rem;\n    background-clip: padding-box;\n    border: solid $border transparent;\n    border-radius: 50%;\n    color: #FFF;\n    &:before {\n        content: '';\n        position: relative;\n        top: 0; right: 0; bottom: 0; left: 0;\n        z-index: -1;\n        margin: -$border;\n        border-radius: inherit; \n        background: linear-gradient(to right, red, orange);\n    } */\n\t\n\t${props => props.isSmall && {\n\t\twidth: \"15rem\",\n\t\theight: \"15rem\"\n\t}};\n`\n\n\nexport const DeviceTitle = styled.h2`\n\n    font-family: ${props => props.theme.font.primary};\n    /* font-size: ${props => props.theme.fontSize.sz2}; */\n    font-size: 2rem;\n    color: ${props => props.theme.bg.octonary};\n    position: absolute;\n    text-align:center;\n\n    max-height: 5rem;\n    text-overflow: ellipsis;\n    overflow: hidden;\n\n    top: 22%;\n    transform: translateY(-50%);\n    max-width: 13.5rem;\n\n    user-select: none;\n\n    \n    // small style\n    ${props => props.isSmall && {\n\t\tfontSize: props.theme.fontSize.sz2\n\t}};\n\n`\n\nexport const EditDeviceIcon = styled.i`\n    position: absolute;\n    bottom: 5%;\n    color: ${props => props.theme.bg.octonary};\n    z-index: 10;\n    &:hover{\n        cursor: pointer;\n    }\n    \n    font-size: 2rem;\n    \n    ${props => props.isSmall && {\n\t\tfontSize: \"1.5rem\"\n\t}};\n`\n\nexport const StatusContainer = styled.div`\n    border: solid .1rem;\n    border-color: ${props => props.theme.bg.octonary};\n    border-radius: 1rem;\n    width: 75%;\n    height: 10%;\n    text-align: center;\n    position: absolute;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    \n    bottom: 25%;\n    transform: translateY(50%);\n    \n`\n\nexport const StatusText = styled.p`\n    margin: auto;\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz3};\n    color: ${props => props.theme.bg.octonary};\n    overflow: hidden;\n    user-select: none;\n    \n    ${props => props.isSmall && {\n\t\tfontSize: props.theme.fontSize.sz4\n\t}};\n`","import React, { useState, useEffect } from 'react'\n\nimport { useDispatch, useSelector } from 'react-redux'\n\n// Import actions\nimport { setSelectedStation } from '../../../../../redux/actions/stations_actions'\n\n// Import styles\nimport * as styled from './device_item.style'\n\n// Import utils\nimport { DeviceTypes } from '../../../../../constants/device_constants'\n\nconst DeviceItem = (props) => {\n\n    const {\n        device,\n        isSmall,\n        ind,\n        setSelectedDevice,\n        tasks,\n        taskQueue,\n    } = props\n\n    const batteryRectWidth = isSmall ? 20 : 25\n    const batteryRectRx = batteryRectWidth / 5\n    const deviceID = device._id\n    const deviceName = device.device_name\n\n    const dispatch = useDispatch()\n    const dispatchSetSelectedStation = (station) => dispatch(setSelectedStation(station))\n\n    const stations = useSelector(state => state.stationsReducer.stations)\n\n    const [stationId, setStationId] = useState(false)\n\n\n    // Sets the type of device\n    let deviceType = DeviceTypes['generic']\n    if (!!DeviceTypes[device.device_model]) deviceType = DeviceTypes[device.device_model]\n    else if (device.device_model === 'MiR100') deviceType = DeviceTypes['cart']\n\n    // Sets the location of the device\n    useEffect(() => {\n        if (!!device.station_id && device.device_model !== 'MiR100' && !stationId) setStationId(device.station_id)\n\n        // If the device does not have a station_id but there is one in state, then set the state to false (this happens when a devices location is deleted)\n        if (!!stationId && !device.station_id) setStationId(false)\n\n    }, [device])\n\n    // Handles Device status, this might have to be tailord for each device\n    const handleDeviceStatus = () => {\n        // Sets the current task of the device\n\n        let deviceStatus = ''\n\n        try {\n            if (device.state_text === 'EmergencyStop') {\n                deviceStatus = 'Emergency Stoped'\n            }\n            else if (device.current_task_queue_id === null) {\n                deviceStatus = 'No Active Task'\n            }\n            else if (!!device.current_task_queue_id) {\n                try {\n                    deviceStatus = taskQueue[device.current_task_queue_id.$oid].mission_status\n                } catch (error) {\n                    deviceStatus = 'No Active Task'\n                }\n            }\n\n            else {\n                // Map through the task q to find the current task and display the task\n                deviceStatus = 'This device status is not set up yet.'\n            }\n        } catch (error) {\n            deviceStatus = 'There was an issue with device status'\n        }\n\n\n        return deviceStatus\n    }\n\n    const handleDeviceBattery = () => {\n\n        const deviceBattery = device.battery_percentage\n\n        // This sets the battery SVG colors depending on battery level\n        let batteryRectFill = ['lime', 'lime', 'lime', 'lime', 'lime']\n        let batteryRectStroke = ['none', 'none', 'none', 'none', 'none']\n        let batteryTextColor = 'lime'\n\n        if (deviceBattery > 80) {\n            batteryRectFill = ['lime', 'lime', 'lime', 'lime', 'lime']\n            batteryRectStroke = ['none', 'none', 'none', 'none', 'none']\n            batteryTextColor = 'lime'\n\n        } else if (deviceBattery > 60) {\n            batteryRectFill = ['none', 'lime', 'lime', 'lime', 'lime']\n            batteryRectStroke = ['lime', 'none', 'none', 'none', 'none']\n            batteryTextColor = 'lime'\n\n        } else if (deviceBattery > 40) {\n            batteryRectFill = ['none', 'none', 'lime', 'lime', 'lime']\n            batteryRectStroke = ['lime', 'lime', 'none', 'none', 'none']\n            batteryTextColor = 'lime'\n\n        } else if (deviceBattery > 20) {\n            batteryRectFill = ['none', 'none', 'none', 'orange', 'orange']\n            batteryRectStroke = ['orange', 'orange', 'orange', 'none', 'none']\n            batteryTextColor = 'orange'\n\n        } else if (deviceBattery > 10) {\n            batteryRectFill = ['none', 'none', 'none', 'none', 'red']\n            batteryRectStroke = ['red', 'red', 'red', 'red', 'none']\n            batteryTextColor = 'red'\n\n        } else {\n            batteryRectFill = ['none', 'none', 'none', 'none', 'none']\n            batteryRectStroke = ['red', 'red', 'red', 'red', 'red']\n            batteryTextColor = 'red'\n\n        }\n\n        return (\n            <>\n                <styled.BatteryText isSmall={isSmall} style={{ color: batteryTextColor }}>{deviceBattery.toFixed(0)}%</styled.BatteryText>\n\n                {/* SVG for the battery percent dots. Uses the above arrays to determine what percentage to show */}\n                <styled.BatterySvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 67.6 218.09\">\n\n                    <g id=\"Layer_2\" data-name=\"Layer 2\">\n                        <g id=\"Layer_1-2\" data-name=\"Layer 1\">\n                            <rect fill={batteryRectFill[4]} stroke={batteryRectStroke[4]} strokeWidth='.3rem' x=\"13.86\" y=\"174.04\" width={batteryRectWidth} height={batteryRectWidth} rx={batteryRectRx} transform=\"translate(-169.27 153.88) rotate(-69.46)\" />\n                            <rect fill={batteryRectFill[3]} stroke={batteryRectStroke[3]} strokeWidth='.3rem' x=\"25.91\" y=\"130.42\" width={batteryRectWidth} height={batteryRectWidth} rx={batteryRectRx} transform=\"translate(-121.38 165.29) rotate(-79.65)\" />\n                            <rect fill={batteryRectFill[2]} stroke={batteryRectStroke[2]} strokeWidth='.3rem' x=\"17.6\" y=\"96.54\" width={batteryRectWidth} height={batteryRectWidth} rx={batteryRectRx} />\n                            <rect fill={batteryRectFill[1]} stroke={batteryRectStroke[1]} strokeWidth='.3rem' x=\"13.41\" y=\"50.17\" width={batteryRectWidth} height={batteryRectWidth} rx={batteryRectRx} transform=\"translate(-10.63 7.92) rotate(-10.35)\" />\n                            <rect fill={batteryRectFill[0]} stroke={batteryRectStroke[0]} strokeWidth='.3rem' x=\"1.36\" y=\"6.54\" width={batteryRectWidth} height={batteryRectWidth} rx={batteryRectRx} transform=\"translate(-5.01 10.46) rotate(-20.54)\" />\n                        </g>\n                    </g>\n\n                </styled.BatterySvg>\n            </>\n        )\n\n    }\n\n    const handleDeviceOEE = () => {\n        const deviceOEE = device.OEE\n\n        // This sets the OEE SVG colors depending on OEE level\n        let OEERectFill = ['lime', 'lime', 'lime', 'lime', 'lime']\n        let OEERectStroke = ['none', 'none', 'none', 'none', 'none']\n        let OEETextColor = 'lime'\n\n        if (deviceOEE > 80) {\n            OEERectFill = ['lime', 'lime', 'lime', 'lime', 'lime']\n            OEERectStroke = ['none', 'none', 'none', 'none', 'none']\n            OEETextColor = 'lime'\n\n        } else if (deviceOEE > 60) {\n            OEERectFill = ['none', 'lime', 'lime', 'lime', 'lime']\n            OEERectStroke = ['lime', 'none', 'none', 'none', 'none']\n            OEETextColor = 'lime'\n\n        } else if (deviceOEE > 40) {\n            OEERectFill = ['none', 'none', 'lime', 'lime', 'lime']\n            OEERectStroke = ['lime', 'lime', 'none', 'none', 'none']\n            OEETextColor = 'lime'\n\n        } else if (deviceOEE > 20) {\n            OEERectFill = ['none', 'none', 'none', 'orange', 'orange']\n            OEERectStroke = ['orange', 'orange', 'orange', 'none', 'none']\n            OEETextColor = 'orange'\n\n        } else if (deviceOEE > 10) {\n            OEERectFill = ['none', 'none', 'none', 'none', 'red']\n            OEERectStroke = ['red', 'red', 'red', 'red', 'none']\n            OEETextColor = 'red'\n\n        } else {\n            OEERectFill = ['none', 'none', 'none', 'none', 'none']\n            OEERectStroke = ['red', 'red', 'red', 'red', 'red']\n            OEETextColor = 'red'\n\n        }\n\n        return (\n            //  Copy of Battery SVG just rotated 180 degrees\n            <styled.OEESvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 67.6 218.09\">\n\n                <g id=\"Layer_2\" data-name=\"Layer 2\" transform=\"rotate(180)\">\n                    <g id=\"Layer_1-2\" data-name=\"Layer 1\">\n                        <rect fill={OEERectFill[0]} stroke={OEERectStroke[0]} strokeWidth='.3rem' x=\"13.86\" y=\"174.04\" width={batteryRectWidth} height={batteryRectWidth} rx={batteryRectRx} transform=\"translate(-169.27 153.88) rotate(-69.46)\" />\n                        <rect fill={OEERectFill[1]} stroke={OEERectStroke[1]} strokeWidth='.3rem' x=\"25.91\" y=\"130.42\" width={batteryRectWidth} height={batteryRectWidth} rx={batteryRectRx} transform=\"translate(-121.38 165.29) rotate(-79.65)\" />\n                        <rect fill={OEERectFill[2]} stroke={OEERectStroke[2]} strokeWidth='.3rem' x=\"17.6\" y=\"96.54\" width={batteryRectWidth} height={batteryRectWidth} rx={batteryRectRx} />\n                        <rect fill={OEERectFill[3]} stroke={OEERectStroke[3]} strokeWidth='.3rem' x=\"13.41\" y=\"50.17\" width={batteryRectWidth} height={batteryRectWidth} rx={batteryRectRx} transform=\"translate(-10.63 7.92) rotate(-10.35)\" />\n                        <rect fill={OEERectFill[4]} stroke={OEERectStroke[4]} strokeWidth='.3rem' x=\"1.36\" y=\"6.54\" width={batteryRectWidth} height={batteryRectWidth} rx={batteryRectRx} transform=\"translate(-5.01 10.46) rotate(-20.54)\" />\n                    </g>\n                </g>\n\n            </styled.OEESvg>\n        )\n    }\n\n\n\n    return (\n\n        <styled.DeviceContainer key={ind}\n            onMouseEnter={() => {\n                !!stationId && dispatchSetSelectedStation(stations[stationId])\n            }}\n            onMouseLeave={() => { !!stationId && dispatchSetSelectedStation(null) }}>\n\n            <styled.BigCircle isSmall={isSmall}>\n\n                <styled.DeviceTitle isSmall={isSmall}>{deviceName}</styled.DeviceTitle>\n\n                {/* Sets attributes of device Icon based on what type of device has been selected */}\n                <styled.DeviceIcon isSmall={isSmall} className={deviceType.icon} style={{ fontSize: !!deviceType.deviceFontSize && deviceType.deviceFontSize, color: !!stationId || deviceType.icon === 'icon-cart' ? deviceType.primaryColor : 'white' }} />\n\n                <styled.StatusContainer>\n                    <styled.StatusText isSmall={isSmall}>\n                        {handleDeviceStatus()}\n                    </styled.StatusText>\n                </styled.StatusContainer>\n\n                <styled.EditDeviceIcon\n                    isSmall={isSmall}\n                    className='fas fa-cog'\n                    onClick={() => setSelectedDevice(deviceID)}\n                />\n\n            </styled.BigCircle>\n\n            {/* SVG for Gradient Circle. Has 2 linear gradients and conditional statements based on the deviceType. Had to use 2 gradient elements because they are global. Changing the stopColor just changes the global element making all gradients those colors */}\n            <svg xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 518 518\" style={{ position: 'absolute', overflow: 'visible' }}>\n                <defs>\n                    <linearGradient id={device._id} y1=\"259\" x2=\"518\" y2=\"259\" gradientUnits=\"userSpaceOnUse\">\n                        <stop offset=\"0\" style={{ stopColor: deviceType.startGradientColor }} />\n                        <stop offset=\"0.99\" style={{ stopColor: deviceType.stopGradientColor }} />\n                    </linearGradient>\n\n                </defs>\n                <g id=\"Layer_2\" data-name=\"Layer 2\">\n                    <g id=\"Layer_1-2\" data-name=\"Layer 1\">\n\n                        <circle className=\"cls-1\" cx=\"259\" cy=\"259\" r=\"256.5\" style={{ fill: 'none', strokeMiterlimit: '10', strokeWidth: '1rem', stroke: `url(#${device._id})` }} />\n\n                    </g>\n                </g>\n            </svg>\n\n            {!!device.battery_percentage &&\n                handleDeviceBattery()\n            }\n\n            {/* Commented out for now since OEE is not implmented */}\n            {/* {handleDeviceOEE()} */}\n\n\n        </styled.DeviceContainer>\n\n    )\n\n}\n\nexport default DeviceItem\n","import React, { useState, useEffect } from 'react'\n\n// external functions\nimport { useDispatch, useSelector } from 'react-redux'\n\n// import styles\nimport * as styled from './devices_content.style'\n\n// Import Utils\nimport { deepCopy } from '../../../../methods/utils/utils'\n\n// Import basic components\nimport ContentHeader from '../content_header/content_header'\nimport DropDownSearch from '../../../basic/drop_down_search_v2/drop_down_search'\nimport BackButton from '../../../basic/back_button/back_button'\nimport Button from '../../../basic/button/button'\nimport Textbox from '../../../basic/textbox/textbox'\nimport PlusButton from '../../../basic/plus_button/plus_button'\n\n// Import Components\nimport DeviceEdit from './device_edit/device_edit'\nimport DeviceStatistics from './device_statistics/device_statistics'\nimport DeviceItem from './device_item/device_item'\n\n// Import Actions\nimport { putDevices, postDevices, getDevices, deleteDevices, setSelectedDevice } from '../../../../redux/actions/devices_actions'\nimport { setSelectedStation, putStation, postStation } from '../../../../redux/actions/stations_actions'\nimport { postPosition, putPosition, setSelectedStationChildrenCopy } from '../../../../redux/actions/positions_actions'\nimport { postDashboard } from '../../../../redux/actions/dashboards_actions'\nimport * as stationActions from '../../../../redux/actions/stations_actions'\n\n\nconst widthBreakPoint = 450\n\n\nconst DevicesContent = () => {\n\n\n    // ======================================== //\n    //                                          //\n    //             Constructor                  //\n    //                                          //\n    // ======================================== //\n\n\n    // Redux Set Up\n    const dispatch = useDispatch()\n    const dispatchPutDevice = (device, ID) => dispatch(putDevices(device, ID))\n    const dispatchSetSelectedStation = (station) => dispatch(setSelectedStation(station))\n    const dispatchSetSelectedStationChildrenCopy = (children) => dispatch(setSelectedStationChildrenCopy(children))\n    const dispatchSetSelectedDevice = (selectedDevice) => dispatch(setSelectedDevice(selectedDevice))\n\n    const dispatchPostPosition = (position) => dispatch(postPosition(position))\n    const dispatchPutPosition = (position) => dispatch(putPosition(position))\n    const dispatchPostDashboard = (dashboard) => dispatch(postDashboard(dashboard))\n\n    const selectedStation = useSelector(state => state.stationsReducer.selectedStation)\n    const selectedStationChildrenCopy = useSelector(state => state.positionsReducer.selectedStationChildrenCopy)\n    const stations = useSelector(state => state.stationsReducer.stations)\n    const positions = useSelector(state => state.positionsReducer.positions)\n    const tasks = useSelector(state => state.tasksReducer.tasks)\n    const taskQueue = useSelector(state => state.taskQueueReducer.taskQueue)\n    const selectedDevice = useSelector(state => state.devicesReducer.selectedDevice)\n\n    const width = useSelector(state => state.sidebarReducer.width)\n    const isSmall = width < widthBreakPoint\n\n    const devices = useSelector(state => { return state.devicesReducer.devices })\n\n\n    // ======================================== //\n    //                                          //\n    //             Main Functions               //\n    //                                          //\n    // ======================================== //\n\n    // Sets the editingDeviceID to new so that the save knows to post instead of put\n    const handleAddDevice = () => {\n    }\n\n    // Renders Existing Devices\n    const handleExistingDevices = () => {\n\n        try {\n\n\n            let devicesValue = Object.values(devices)\n\n            // Maps through the existing devices\n            return devicesValue.map((device, ind) => {\n                return (\n                    <DeviceItem\n                        key={ind}\n                        device={device}\n                        isSmall={isSmall}\n                        ind={ind}\n                        tasks={tasks}\n                        taskQueue={taskQueue}\n                        setSelectedDevice={(deviceID) => {\n\n                            console.log('QQQQ Selected Device', devices[deviceID])\n                            dispatchSetSelectedDevice(deepCopy(devices[deviceID]))\n\n                        }\n                        }\n                    />\n                )\n\n            })\n\n        } catch (error) {\n            console.log('Device is undefined', devices)\n        }\n\n    }\n\n    /**\n     * This function is called when the save button is pressed. The location is POSTED or PUT to the backend.\n     * If the location is new and is a station, this function also handles posting the default dashboard and\n     * tieing it to this location. Each child position for a station is also either POSTED or PUT.\n     */\n    const handleSaveDevice = () => {\n\n        // If a AMR, then just put device, no need to save locaiton since it does not need one\n        if (selectedDevice.device_model === 'MiR100') {\n            dispatchPutDevice(selectedDevice, selectedDevice._id)\n        }\n\n        dispatchSetSelectedStation(null)\n        dispatchSetSelectedDevice(null)\n    }\n\n    const onBack = () => {\n        dispatchSetSelectedDevice(null)\n    }\n\n    /**\n    * Called when the delete button is pressed. Deletes the location, its children, its dashboards,\n    * and any tasks associated with the location\n    */\n    const onDeleteDeviceLocation = () => {\n\n    }\n\n\n    return (\n        <styled.ContentContainer>\n\n            {/* Content header changes based on whats going on with devices\n                If in standard list mode then header should be in list mode (add button)\n                If in editing/adding then the header should be in create mode (save button)\n                If in stats then the header should be in title mode with back enabled\n            */}\n            <ContentHeader\n                content={'devices'}\n                mode={!!selectedDevice ? 'create' : 'list'}\n                onClickAdd={() => { handleAddDevice() }}\n                onClickBack={onBack}\n\n                backEnabled={!!selectedDevice ? true : false}\n\n                onClickSave={() => {\n                    handleSaveDevice()\n                }}\n\n            />\n\n\n            {!!selectedDevice ?\n                <DeviceEdit deviceLocationDelete={onDeleteDeviceLocation} />\n                :\n\n                handleExistingDevices()\n            }\n\n\n\n        </styled.ContentContainer>\n    )\n}\n\nexport default DevicesContent\n","import styled, { css } from 'styled-components';\n\nexport const Container = styled.div`\n    width: 100%;\n    background: transparent;\n    border-color: transparent;\n    border-width: 0;\n    \n    ${props => props.css};\n`\n\nexport const Button = styled.button`\n    width: 100%;\n\n    background: transparent;\n    outline: none !important;\n    outline-offset: none !important;\n    border-color: transparent;\n    border-width: 0;\n\n    margin-bottom: 0.5rem;\n    \n    ${props => props.css};\n    \n`\n\n// export const ButtonViewCss = styled.div`\n//   color: ${props => (props.whiteColor ? 'white' : 'black')};\n//   flex-grow: 1;\n\n//     @media (max-width: ${props => props.theme.widthBreakpoint.tiny}) {\n//         height: 7rem;\n//         line-height: 7rem;\n//     }\n\n//     background: ${props => props.isSelected ? props.theme.fg.primary : 'transparent'};\n//     color: ${props => props.isSelected ? props.theme.bg.primary : props.theme.bg.octonary};\n\n//     outline: none !important;\n//     outline-offset: none !important;\n//     padding: .75rem;\n//     margin-left: -0.2rem;\n//     margin-bottom: .5rem;\n//     border-radius: .3rem;\n//     border-width: .15rem;\n//     border-color: ${props => props.theme.fg.primary};\n//     border-style: solid;\n\n\n//     font-size: ${props => props.theme.fontSize.sz4};\n//     font-family: ${props => props.theme.font.primary};\n//     font-weight: 400;\n//     @media ${props => props.theme.widthBreakpoint.mobileL} {\n//       padding: .25rem;\n//       fontSize: ${props => props.theme.fontSize.sz5};\n//     }\n// `;\n\nexport const buttonViewSelectedCss = css`\n\tcolor: ${props => props.theme.bg.primary};\n\tbackground-color: ${props => props.theme.fg.primary};\n`\n\n\nexport const ButtonView = styled.div`\n\n    flex-grow: 1;\n\n    @media (max-width: ${props => props.theme.widthBreakpoint.tiny}) {\n        height: 7rem;\n        line-height: 7rem;\n    }\n\n    background-color: transparent;\n    color: ${props => props.theme.bg.octonary};\n\n    outline: none !important;\n    outline-offset: none !important;\n    padding: .75rem;\n    margin-left: -0.2rem;\n    margin-bottom: .5rem;\n    border-radius: .3rem;\n    border-width: .15rem;\n    /* border-color: ${props => props.theme.fg.primary}; */\n    border-color: transparent;\n    border-style: solid;\n\n\n    font-size: ${props => props.theme.fontSize.sz4};\n    font-family: ${props => props.theme.font.primary};\n    font-weight: 400;\n    @media ${props => props.theme.widthBreakpoint.mobileL} {\n      padding: .25rem;\n      fontSize: ${props => props.theme.fontSize.sz5};\n    }\n    \n    ${props => props.css};\n    ${props => props.isSelected && buttonViewSelectedCss};\n    ${props => props.isSelected && props.selectedCss};\n`\n","// import external dependencies\nimport React, {useState} from 'react';\nimport PropTypes from 'prop-types';\n\n// import styles\nimport * as styled from './button_group.style';\n\nconst ButtonGroup = props => {\n  const { ...rest } = props;\n  // Declare a new state variable, which we'll call \"count\"\n\n\n  const {\n\tContainer,\n\tcontainerProps,\n\tButtonView,\n\tbuttonViewCss,\n\tbuttonViewSelectedCss,\n\tbuttonViewProps,\n\tButton,\n\tbuttonProps,\n\tComponent,\n\tbuttons,\n\tonPress,\n\tselectedIndex,\n\tselectedIndexes,\n\tselectMultiple,\n\tcontainerStyle,\n\tcontainerCss,\n\tinnerBorderStyle,\n\tlastBorderStyle,\n\tbuttonStyle,\n\tbuttonCss,\n\ttextStyle,\n\tselectedTextStyle,\n\tselectedButtonStyle,\n\tunderlayColor,\n\tactiveOpacity,\n\tonHideUnderlay,\n\tonShowUnderlay,\n\tsetOpacityTo,\n\tdisabled,\n\tdisabledStyle,\n\tdisabledTextStyle,\n\tdisabledSelectedStyle,\n\tdisabledSelectedTextStyle,\n\n\thasError,\n\t...attributes\n  } = rest;\n\n  const buttonsLength = buttons.length\n\n  return (\n\t  <Container\n          {...containerProps}\n\t\t  css={containerCss}\n\t\t  hasError={hasError}\n\t  >\n\t\t{buttons.map((button, i, arr) => {\n\t\t  const isSelected = selectedIndex === i || selectedIndexes.includes(i);\n\t\t  const isDisabled =\n\t\t\t  disabled === true ||\n\t\t\t  (Array.isArray(disabled) && disabled.includes(i));\n\n\t\t  const isLast = i === buttonsLength - 1 // true if the current button is the last element, useful for styling\n\n\t\t  return (\n\t\t\t  <div\n\t\t\t\t  key={i}\n\t\t\t\t  style={{}}\n\t\t\t  >\n\t\t\t\t<Button\n\t\t\t\t\t{...buttonProps}\n\t\t\t\t\tisLast={isLast}\n\t\t\t\t\tactiveOpacity={activeOpacity}\n\t\t\t\t\tsetOpacityTo={setOpacityTo}\n\t\t\t\t\tunderlayColor={underlayColor}\n\t\t\t\t\tdisabled={isDisabled}\n\t\t\t\t\ttype={\"button\"}\n\t\t\t\t\thasError={hasError}\n\t\t\t\t\tschema={props.schema}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t  if (selectMultiple) {\n\t\t\t\t\t\tif (selectedIndexes.includes(i)) {\n\t\t\t\t\t\t  onPress(selectedIndexes.filter(index => index !== i));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t  onPress([...selectedIndexes, i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t  } else {\n\t\t\t\t\t\tonPress(i);\n\t\t\t\t\t  }\n\t\t\t\t\t}}\n\t\t\t\t\tstyle={{}}\n\t\t\t\t\tcss={buttonCss}\n\t\t\t\t>\n\t\t\t\t  <ButtonView\n\t\t\t\t\t  {...buttonViewProps}\n\t\t\t\t\t  isLast={isLast}\n\t\t\t\t\t  isSelected={isSelected}\n\t\t\t\t\t  style={{}}\n\t\t\t\t\t  index={i}\n\t\t\t\t\t  arr={arr}\n\t\t\t\t\t  hasError={hasError}\n\t\t\t\t\t  css={buttonViewCss}\n\t\t\t\t\t  selectedCss={buttonViewSelectedCss}\n\n\n\t\t\t\t  >\n\t\t\t\t\t{button.element ? (\n\t\t\t\t\t\t<button.element />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tstyle={{}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t  {button}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t  </ButtonView>\n\t\t\t\t</Button>\n\t\t\t  </div>\n\t\t  );\n\t\t})}\n\t  </Container>\n  );\n}\n\n// Specifies propTypes\nButtonGroup.propTypes = {\n  button: PropTypes.object,\n  Component: PropTypes.elementType,\n  onPress: PropTypes.func,\n  buttons: PropTypes.array,\n  containerStyle: PropTypes.object,\n  textStyle: PropTypes.object,\n  selectedTextStyle: PropTypes.object,\n  selectedButtonStyle: PropTypes.object,\n  underlayColor: PropTypes.string,\n  selectedIndex: PropTypes.number,\n  selectedIndexes: PropTypes.arrayOf(PropTypes.number),\n  activeOpacity: PropTypes.number,\n  onHideUnderlay: PropTypes.func,\n  onShowUnderlay: PropTypes.func,\n  setOpacityTo: PropTypes.func,\n  innerBorderStyle: PropTypes.shape({\n\tcolor: PropTypes.string,\n\twidth: PropTypes.number,\n  }),\n  lastBorderStyle: PropTypes.oneOfType([\n\tPropTypes.object,\n\tPropTypes.func,\n  ]),\n  buttonStyle: PropTypes.object,\n  selectMultiple: PropTypes.bool,\n  theme: PropTypes.object,\n  disabled: PropTypes.oneOfType([\n\tPropTypes.bool,\n\tPropTypes.arrayOf(PropTypes.number),\n  ]),\n  disabledStyle: PropTypes.object,\n  disabledTextStyle: PropTypes.object,\n  disabledSelectedStyle: PropTypes.object,\n  disabledSelectedTextStyle: PropTypes.object,\n};\n\n// Specifies the default values for props:\nButtonGroup.defaultProps = {\n  selectedIndex: null,\n  hasError: false,\n\n  selectedIndexes: [],\n  selectMultiple: false,\n  disabled: false,\n  Component: \"div\",\n  onPress: () => null,\n  onShowUnderlay: () => {},\n  Container: styled.Container,\n  //Container={<div/>}\n  ButtonView: styled.ButtonView,\n  Button: styled.Button,\n};\n\nexport { ButtonGroup };\n\n\nexport default ButtonGroup;\n","const colors = [\"lime\", \"fuchsia\", \"aqua\", \"orange\", \"blanchedalmond\", \"coral\", \"darkcyan\", \"deeppink\", 'gold', \"lightcyan\", \"lightgreen\"]\nlet itemCount = 0\n\n// creates a unique debug style to make it easier to visualize the layout of items\nexport const getDebugStyle = () => {\n\tconst style =  {\n\t\tbackgroundColor: colors[itemCount]\n\t}\n\n\titemCount = itemCount + 1\n\treturn style\n}\n\n\n","import styled, { css } from 'styled-components'\nimport { getDebugStyle } from \"../../../../../../methods/utils/style_utils\";\n\nexport const Container = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\t\n\talign-items: center;\n\tjustify-content: space-between;\n\t\n\tposition: relative;\n\t\n\toutline: none !important;\n\toutline-offset: none !important;\n\t\n\tmargin-top: .5rem;\n\t\n\tbackground-color: transparent;\n\t\n\tborder: .2rem solid;\n\tborder-radius: 1rem;\n\tborder-color: ${props=>props.theme.bg.octonary};\n\t\n\tpadding-top: 1rem;\n\tpadding-bottom: .5rem;\n\tpadding-left: 1rem;\n\tpadding-right: 1rem;\n\t\n\t// transition: all 0.5s ease 0s;\n\t\n\t// box-shadow: 2px 2px 2px rgba(0, 0, 0, 0.5);\n\t\n\t&:hover{\n\t\tcursor: grab;\n\t\tborder-color: ${props => props.theme.schema[\"scheduler\"].solid};\n\t\t// box-shadow: 4px 4px 4px rgba(0, 0, 0, 0.5);\n\t\t// transform: translateY(-2px);\n\t}\n\t\n\t&:active {\n\t\tbox-shadow: none;\n\t\t// transform: translateY(4px);\n\t}\n\t\n\t${props => props.hasError && {\n\t\t// opacity: 0.5\n\t}}\n\t\n\tfont-family: ${props => props.theme.font.primary};\n\t\n`\n\nexport const TopContainer = styled.div`\n\tdisplay: flex;\n\twidth: 100%;\n\tjustify-content: space-between;\n`\n\nexport const ErrorContainer = styled.div`\n\tposition: relative;\n`\n\nexport const buttonViewCss = css`\n\tborder-right: ${props => !props.isLast && `solid ${props.theme.bg.quaternary} thin`}; // dont show border on last item\n\tcolor: ${props => props.theme.bg.quinary};\n\tpadding: 0;\n\tmargin: 0;\n\tpadding-left: .5rem;\n\tpadding-right: .5rem;\n`\n\nexport const buttonGroupContainerCss = css`\n\tdisplay: flex;\n\tflex-direction: row;\n\talign-self: center;\n\tpadding: 0;\n\tmargin: 0;\n\t\n`\n\nexport const buttonViewSelectedCss = css`\n\tbackground: transparent;\n\tcolor: ${props => props.theme.schema[\"scheduler\"].solid};\n`\nexport const buttonCss = css`\n\tmargin: 0;\n\tpadding: 0;\n\t\n\t&:focus{\n\t}\n\t\n\t&:active{\n\t}\n\t\n\t&:hover{\n\t\tcursor: default;\n\t}\n\t\n`\n\nexport const DaysContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: row;\n\tmargin: 0;\n\tpadding: 0;\n\t\n\t${props => props.hasError && {\n\t\topacity: 0.5\n\t}}\n`\n\nexport const ContentContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: row;\n\t\n\talign-items: center;\n\tjustify-content: space-between;\n\twidth: 100%;\n\tmargin-bottom: .5rem;\n`\n\nexport const Title = styled.span`\n\tfont-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz3};\n    text-align: left;\n    margin: 0;\n    word-break: break-all;\n    color: ${props => props.theme.schema[\"scheduler\"].solid};\n    \n    // size styling based on sidebar width rather than screen size\n\t${props => (props.isSmall) && {\n\t\t// fontSize: \".2rem\"\n\t}}\n`\n\nexport const SubTitle = styled.span`\n\tfont-size: ${props => props.theme.fontSize.sz4};\n\tfont-family: ${props => props.theme.font.primary};\n\tcolor: ${props => props.theme.bg.senary};\n\toverflow: hidden;\n\n\twhite-space: wrap;\n\tmargin: 0;\n\ttext-align: left;\n\tword-break: break-all;\n\t\n\tfont-family: ${props => props.theme.font.primary};\n\tfont-size: ${props => props.theme.fontSize.sz4};\n\tcolor: ${props => props.theme.bg.senary};\n\tcursor: pointer;\n\t\n\t// size styling based on sidebar width rather than screen size\n\t${props => (props.isSmall) && {\n\t\t// fontSize: \".2rem\"\n\t}};\n\t\n\t${props => props.hasError && {\n\t\tcolor: props.theme.bad\n\t}};\n\t\n`\n\nexport const LeftContentContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\twidth: 100%;\n`\n\nexport const TimeContainerlarge = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tmargin-left: 1rem;\n\t\n\t${props => props.hasError && {\n\t\topacity: 0.5\n\t}}\n`\n\nexport const TimeContainerSmall = styled.div`\n\tdisplay: flex;\n\tjustify-content: flex-start;\n\tflex-direction: column;\n\talign-items: flex-start;\n\twidth: 100%;\n\tmargin-bottom: .5rem;\n\t\n\t${props => props.hasError && {\n\t\topacity: 0.5\n\t}}\n`\n\nexport const TimeContainer = styled.span`\n\tcolor: ${props => props.theme.bg.octonary};\n\tdisplay: flex;\n\talign-items: flex-end;\n`\n\nexport const SwitchContainer = styled.div`\n\tmargin-left: 1rem;\n\t&:hover{\n\t\tcursor: grab;\n\t}\n`\n\nexport const TimeTitle = styled.span`\n\tmargin-right: .5rem;\n\tfont-weight: 600;\n\tfont-size: 1rem;\n\twhite-space: nowrap;\n\t\n\t// size styling based on sidebar width rather than screen size\n\t${props => (props.isSmall) && {\n\t\tfontSize: \".2rem\"\n\t}}\n\n`\nexport const TimeValue = styled.span`\n\tfont-weight: 200;\n\tjustify-content: center;\n\talign-items: flex-end;\n\tfont-size: .9rem;\n\twhite-space: nowrap;\n\t\n\t// size styling based on sidebar width rather than screen size\n\t${props => (props.isSmall) && {\n\t\tfontSize: \".2rem\"\n\t}}\t\n\n\n`\n\nexport const ContentComponent = styled.div`\n\n\t\n\n`\n","import React, {Component, useContext, useEffect, useRef, useState} from \"react\"\nimport PropTypes from 'prop-types'\n\n// external components\nimport Switch from 'react-ios-switch'\n\n// external functions\nimport {useSelector} from \"react-redux\"\nimport {ThemeContext} from \"styled-components\"\n\n// components\nimport ButtonGroup from \"../../../../../basic/button_group/button_group\"\nimport ErrorTooltip from '../../../../../basic/form/error_tooltip/error_tooltip'\n\n// styles\nimport * as style from './schedule_list_item.style'\nimport {getMessageFromError} from \"../../../../../../methods/utils/form_utils\";\n\nconst widthBreakPoint =  525\n\nconst ScheduleListItem = (props) => {\n\n\tconst {\n\n\t\tname,\n\t\ttaskName,\n\t\tdisabled,\n\t\tselected,\n\t\tid,\n\t\tschedule_on,\n\t\tonSwitchPress,\n\t\tonClick,\n\t\terror,\n\t\tdays_on,\n\t\ttime_interval,\n\t\tinterval_on,\n\t\tstop_time,\n    start_time,\n\t\tnext_time,\n\n\t} = props\n\n\n\n\tconst themeContext = useContext(ThemeContext)\n\n\tconst width = useSelector(state => state.sidebarReducer.width)\n\tconst isSmall = width < widthBreakPoint\n\tconst hasError = Object.keys(error).length > 0\n\tconst errorMessage = getMessageFromError(error)\n\n\treturn (\n\t\t<style.Container\n\t\t\tonClick={()=>onClick(id)}\n\t\t\tisSmall={isSmall}\n\t\t\thasError={hasError}\n\t\t>\n\t\t\t<style.TopContainer>\n\t\t\t\t<div/>\n\n\t\t\t\t<ErrorTooltip\n\t\t\t\t\tvisible={hasError}\n\t\t\t\t\ttext={errorMessage}\n\t\t\t\t\tContainerComponent={style.ErrorContainer}\n\t\t\t\t/>\n\t\t\t</style.TopContainer>\n\n\t\t\t<style.ContentContainer isSmall={isSmall}>\n\t\t\t\t<style.LeftContentContainer isSmall={isSmall}>\n\t\t\t\t\t<style.Title isSmall={isSmall}>{name}</style.Title>\n\t\t\t\t\t<style.SubTitle hasError={!taskName} isSmall={isSmall}>{taskName ? taskName : \"Task not found\"}</style.SubTitle>\n\t\t\t\t</style.LeftContentContainer>\n\n\n\t\t\t\t{!isSmall &&\n\t\t\t\t\t<style.TimeContainerlarge\n\t\t\t\t\t\tisSmall={isSmall}\n\t\t\t\t\t\thasError={hasError}\n\t\t\t\t\t>\n\t\t\t\t\t\t<style.TimeContainer isSmall={isSmall}>\n\t\t\t\t\t\t\t<style.TimeTitle isSmall={isSmall}>Start Time</style.TimeTitle>\n\t\t\t\t\t\t\t<style.TimeValue isSmall={isSmall}>{start_time}</style.TimeValue>\n\t\t\t\t\t\t</style.TimeContainer>\n\n\t\t\t\t\t\t{interval_on ?\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<style.TimeContainer isSmall={isSmall}>\n\t\t\t\t\t\t\t\t\t<style.TimeTitle isSmall={isSmall}>Stop Time</style.TimeTitle>\n\t\t\t\t\t\t\t\t\t<style.TimeValue isSmall={isSmall}>{stop_time}</style.TimeValue>\n\t\t\t\t\t\t\t\t</style.TimeContainer>\n\n\t\t\t\t\t\t\t\t<style.TimeContainer isSmall={isSmall}>\n\t\t\t\t\t\t\t\t\t<style.TimeTitle isSmall={isSmall}>Interval</style.TimeTitle>\n\t\t\t\t\t\t\t\t\t<style.TimeValue isSmall={isSmall}>{time_interval}</style.TimeValue>\n\t\t\t\t\t\t\t\t</style.TimeContainer>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t<style.TimeContainer isSmall={isSmall}>\n\t\t\t\t\t\t\t\t<style.TimeTitle isSmall={isSmall}>Interval</style.TimeTitle>\n\t\t\t\t\t\t\t\t<style.TimeValue isSmall={isSmall}>off</style.TimeValue>\n\t\t\t\t\t\t\t</style.TimeContainer>\n\t\t\t\t\t\t}\n\t\t\t\t\t</style.TimeContainerlarge>\n\t\t\t\t}\n\n\n\t\t\t\t<style.SwitchContainer\n\t\t\t\t\t// this container is used so click events anywhere on the switch will trigger the onClick event\n\t\t\t\t\t// otherwise if a click isn't directly over the handle, it will register the click on the outer Container\n\t\t\t\t\tonClick={(event) => {\n\t\t\t\t\t\tevent.preventDefault()\n\t\t\t\t\t\tevent.stopPropagation()\n\t\t\t\t\t\tonSwitchPress(id)\n\t\t\t\t\t}}\n\t\t\t\t\tisSmall={isSmall}\n\t\t\t\t>\n\t\t\t\t\t<Switch\n\t\t\t\t\t\tchecked={schedule_on}\n\t\t\t\t\t\tonChange={()=>onSwitchPress(id)}\n\t\t\t\t\t\tdisabled={disabled || hasError}\n\t\t\t\t\t\tonColor={themeContext.schema.scheduler.solid}\n\t\t\t\t\t\t// style={{zIndex: 5}}\n\t\t\t\t\t/>\n\t\t\t\t</style.SwitchContainer>\n\n\t\t\t</style.ContentContainer>\n\n\t\t\t<style.DaysContainer\n\t\t\t\tisSmall={isSmall}\n\t\t\t\thasError={hasError}\n\t\t\t>\n\t\t\t\t<ButtonGroup\n\t\t\t\t\tbuttonViewCss={style.buttonViewCss}\n\t\t\t\t\tbuttons={[\"M\", \"T\", \"W\", \"T\", \"F\", \"S\"]}\n\t\t\t\t\tselectMultiple\n\t\t\t\t\tselectedIndexes={days_on}\n\t\t\t\t\tcontainerCss={style.buttonGroupContainerCss}\n\t\t\t\t\tbuttonViewSelectedCss={style.buttonViewSelectedCss}\n\t\t\t\t\tbuttonCss={style.buttonCss}\n\t\t\t\t/>\n\t\t\t</style.DaysContainer>\n\n\t\t</style.Container>\n\t)\n}\n\n// Specifies the default values for props:\nScheduleListItem.propTypes = {\n\ttitle: PropTypes.string,\n\tdisabled: PropTypes.bool\n}\n\nScheduleListItem.defaultProps = {\n\ttitle: \"\",\n\tdisabled: false\n}\n\nexport default ScheduleListItem\n","import styled from 'styled-components'\n\n\n\nexport const Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    max-height: 100%;\n    padding: 1rem;\n    padding-top: 1.5rem;\n\n\n`\nexport const NextExecution = styled.h2`\n\tfont-size: ${props => props.theme.fontSize.sz3};\n\tfont-weight: 100;\n\ttext-align: center;\n\tmargin-top: 1rem;\n  margin-left:1rem;\n  margin-right:1rem;\n  color: ${props => props.theme.schema[\"scheduler\"].solid};\n\tfont-family: ${props => props.theme.font.primary};\n\n  border: .2rem solid;\n  border-radius: 1rem;\n  border-color: ${props=>props.theme.bg.octonary};\n\n  padding-top: .5rem;\n  padding-bottom: .5rem;\n  padding-left: .5rem;\n  padding-right: .5rem;\n\n  &:hover{\n    cursor: pointer;\n    border-color: ${props => props.theme.schema[\"scheduler\"].solid};\n    color: ${props => props.theme.schema[\"scheduler\"].solid};\n  }\n`\n\n\nexport const TaskListContainer = styled.div`\n    padding: 1rem;\n    overflow-y: scroll;\n    flex: 1;\n\n    // hide scroll bar\n\t::-webkit-scrollbar {\n\t\twidth: 0px;  /* Remove scrollbar space */\n\t\tbackground: transparent;  /* Optional: just make scrollbar invisible */\n\t}\n\t::-webkit-scrollbar-thumb {\n\t\tbackground: #FF0000;\n\t}\n`\n\nexport const ListEmptyContainer = styled.div`\n\tdisplay: flex;\n\tflex: 1;\n\tjustify-content: center;\n\talign-items: center;\n\tflex-direction: column;\n`\n\nexport const ListEmptyTitle = styled.h2`\n\tfont-size: ${props => props.theme.fontSize.sz2};\n\tfont-weight: 600;\n\ttext-align: center;\n\tmargin-top: 5rem;\n\tcolor: ${props => props.theme.bg.octonary};\n\tfont-family: ${props => props.theme.font.primary};\n`\n\nexport const ListEmptyFiller = styled.div`\n\tdisplay: flex;\n\tflex: 1;\n\tjustify-content: center;\n\talign-items: flex-start;\n`\n\nexport const ListItemContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    // width: 100%;\n    align-items: center;\n\n`\n\nexport const WarningIcon = styled.i`\n    margin-right: 2rem;\n    color: ${props => props.theme.bad};\n    z-index: 10;\n\n\n`\n","import styled, {css} from 'styled-components';\n\nexport const Container = styled.div`\n    flex-grow: 1;\n    display: flex;\n    position: relative;\n    flex-direction: column;\n    overflow: hidden;\n    max-width: 100%;\n`\n\n\nexport const Title = styled.h1`\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz7};\n    font-weight: 500;\n    color: ${props => props.theme.schema[props.schema].solid};\n    padding: 0;\n    margin: 0;\n    \n    ${props => props.isSmall && titleCssSmall}};\n`\n\nexport const titleCssSmall = css`\n\tfont-size: ${props => props.theme.fontSize.sz2};\n`\n\nexport const Header = styled.div`\n    // display: flex; \n    // flex-direction: row;\n    // width: 100%;\n    // justify-content: space-between;\n    \n    \n    \n    display: flex;\n\talign-items: center;\n\twidth: 100%;\n\t/* box-shadow: 2px 2px 10px black; */\n\tpadding: 1rem;\n\tpadding-top: 1.5rem;\n\t/* background-color: ${props => props.theme.bg.quinary}; */\n\tjustify-content: space-between;\n`","// import external dependencies\nimport React, {Component, useState} from \"react\";\n\n// external functions\nimport {useDispatch, useSelector} from 'react-redux';\nimport moment from 'moment';\n\n// components\nimport ContentHeader from '../../content_header/content_header'\nimport PlusButton from \"../../../../basic/plus_button/plus_button\";\nimport ScheduleListItem from \"./schedule_list_item/schedule_list_item\";\n\n// import actions\nimport { putSchedule } from '../../../../../redux/actions/schedule_actions';\n\n// import utils\nimport { clone_object } from '../../../../../methods/utils/utils';\nimport {daysOfTheWeek} from \"../../../../../constants/scheduler_constants\";\n\n// import styles\nimport * as styled from './schedule_list.style';\nimport * as pageStyle from '../scheduler_content.style';\n\n// import logger\nimport log from '../../../../../logger.js';\n\nconst logger = log.getLogger(\"Schedule\")\n\nconst ScheduleList = (props) => {\n\n    // extract props\n    const {\n        schedules,\n        selectedScheduleId,\n        tasks,\n        setShowScheduleCreator,\n        setSelectedScheduleId,\n        openSchedule,\n    } = props\n\n    // dispatch\n    const dispatch = useDispatch()\n\n    let [timeToNextScheduled, setTimeToNextScheduled] = useState(\"10000000\")\n    let [timeToNextScheduledTemp, setTimeToNextScheduledTemp] = useState(\"10000000\")\n    let [nextScheduledTimeTemp, setNextScheduledTimeTemp] = useState(\"10000000\")\n\n    let [timeToNextScheduledHours, setTimeToNextScheduledHours] = useState(\"10000000\")\n    let [timeToNextScheduledMinutes, setTimeToNextScheduledMinutes] = useState(\"10000000\")\n    let [nextScheduleName, setNextScheduleName] = useState(\"\")\n    let [id, setId] = useState(\"\")\n\n    const currentMap = useSelector(state => state.mapReducer.currentMap)\n\n    /*\n    * handles switch press event of list items\n    *\n    * the parent schedule is found by id,\n    * and all of its properties are copied into a new object for submission,\n    * with the exception of the schedule_on property, which is toggled to its opposite\n    * */\n    const handleSwitchPress = (scheduleId) => {\n\n        // get schedule item - clone to avoid directly modifying redux state\n        const scheduleItem = schedules[scheduleId]\n\n\n        // toggle schedule items schedule_on property\n        const submitItem = {\n            task_id: scheduleItem.task_id,\n            days_on: scheduleItem.days_on,\n            interval_on: scheduleItem.interval_on,\n            name: scheduleItem.name,\n            schedule_on: !scheduleItem.schedule_on,\n            start_time: scheduleItem.start_time,\n            time_interval: scheduleItem.time_interval,\n            stop_time: scheduleItem.stop_time,\n            next_time: scheduleItem.next_time,\n        }\n\n        dispatch(putSchedule(scheduleItem.id, submitItem))\n    }\n\n    /*\n    * renders the task list\n    * */\n    const renderTasks = () => {\n        let fullSchedulesArr = Object.values(schedules).filter((item) => item.map_id === currentMap._id)\n        return (\n            <styled.TaskListContainer>\n                {fullSchedulesArr.length > 0 ?\n                    fullSchedulesArr.map((item, index, arr) => {\n                        const {\n                            days_on,\n                            interval_on,\n                            name,\n                            schedule_on,\n                            start_time,\n                            stop_time,\n                            stop_time_on,\n                            task_id,\n                            time_interval,\n                            next_time,\n                            _id: {$oid: id}\n                        } = item\n\n                        // initialize empty error object\n                        let error = {}\n\n                        logger.log(\"renderTasks item\",item)\n\n                        // const id = item._id.$oid\n                        const selectedTask = task_id ? tasks[task_id] : {};\n                        const taskIsDeleted = task_id === 'TASK DELETED';\n\n                        // check for taskName error\n                        if(!selectedTask?.name) error.taskName = \"Task not found\"\n\n                        if(taskIsDeleted) error.taskName = \"Task deleted\"\n\n                        logger.log(\"renderTasks selectedTask\",selectedTask)\n\n                        // convert days_on object to arr of indices\n                        const daysOnArr = [];\n                            Object.values(daysOfTheWeek).forEach((val, ind) => {\n                                if (days_on[val]) daysOnArr.push(ind)\n                            })\n\n                        return (\n                            <ScheduleListItem\n                                name={name}\n                                days_on={daysOnArr}\n                                taskName={(selectedTask && selectedTask.name) ? selectedTask.name : ''}\n                                selected={selectedScheduleId === id}\n                                interval_on={interval_on}\n                                key={item.id}\n                                id={item.id}\n                                start_time={start_time}\n                                stop_time={stop_time}\n                                schedule_on={schedule_on}\n                                time_interval={time_interval}\n                                onSwitchPress={handleSwitchPress}\n                                onClick={openSchedule}\n                                disabled={taskIsDeleted || (item.task_id === 'TEMP_NEW_SCHEDULE_ID') || (item.task_id === 'DEFAULT_TASK_ID')}\n                                error={error}\n                                next_time={next_time}\n                            />\n                        );\n                    })\n                    :\n                    <styled.ListEmptyContainer>\n                        <styled.ListEmptyTitle>No Schedules</styled.ListEmptyTitle>\n                        <styled.ListEmptyFiller />\n                    </styled.ListEmptyContainer>\n                }\n\n            </styled.TaskListContainer>\n        );\n    }\n\n    const handleNextExecution = () => {\n        let fullSchedulesArr = Object.values(schedules).filter((item) => item.map_id === currentMap._id)\n        const minutesPerDay = 1440\n        let currentTime = Number(((moment(moment(), 'HH:mm:ss')).format('HH')) * 60) + Number((moment(moment(), 'HH:mm:ss')).format('mm'))\n        logger.log('nexttime')\n\n        if (fullSchedulesArr.length > 0) {\n          fullSchedulesArr.map((item, index, arr) => {\n            var startTime = Number(((moment(item.start_time, 'HH:mm:ss')).format('HH')) * 60) + Number((moment(item.start_time, 'HH:mm:ss')).format('mm'))\n            if(item.interval_on){\n                var stopTime = Number(((moment(item.stop_time, 'HH:mm:ss')).format('HH')) * 60) + Number((moment(item.stop_time, 'HH:mm:ss')).format('mm'))\n\n                if (stopTime - currentTime > 0 && startTime - currentTime < 0) {\n                    var intervalTime = Number(((moment(item.time_interval, 'HH:mm:ss')).format('HH')) * 60) + Number((moment(item.time_interval, 'HH:mm:ss')).format('mm'))\n                    timeToNextScheduledTemp = Math.ceil((currentTime - startTime) / intervalTime) * intervalTime + startTime - currentTime\n                    nextScheduledTimeTemp = Math.ceil((currentTime - startTime) / intervalTime) * intervalTime + startTime\n                }\n\n                if (stopTime - currentTime < 0) {\n                    timeToNextScheduledTemp = minutesPerDay - currentTime + startTime\n                    nextScheduledTimeTemp = minutesPerDay + startTime\n                }\n                if (startTime - currentTime > 0) {\n                    timeToNextScheduledTemp = startTime - currentTime\n                    nextScheduledTimeTemp = startTime\n                }\n          }\n          else{\n              nextScheduledTimeTemp = startTime\n\n              if (startTime - currentTime > 0) {\n                  timeToNextScheduledTemp = startTime - currentTime\n              }\n\n              else{\n                timeToNextScheduledTemp = minutesPerDay - currentTime + startTime\n              }\n            }\n\n            if (timeToNextScheduledTemp < timeToNextScheduled) {\n                setTimeToNextScheduled(timeToNextScheduledTemp)\n                setTimeToNextScheduledHours(Math.floor(timeToNextScheduled / 60))\n                setTimeToNextScheduledMinutes(timeToNextScheduled % 60)\n                setNextScheduleName(item.name)\n                setId(item.id)\n\n              }\n              })\n            }\n          }\n\n\n    return (\n        <styled.Container>\n            {/* <pageStyle.Header>\n                <pageStyle.Title schema={'scheduler'}>Schedules</pageStyle.Title>\n                <PlusButton\n                    onClick={() => setShowScheduleCreator(true)}\n                />\n            </pageStyle.Header> */}\n            <ContentHeader content={'scheduler'} onClickAdd={() => setShowScheduleCreator(true)}/>\n            {handleNextExecution()}\n            {timeToNextScheduled < 1440 ?\n\n            <styled.NextExecution\n                onClick={() => {setShowScheduleCreator(true)\n                                setSelectedScheduleId(id)}}>\n                                Next Up:  \" {nextScheduleName} \" will execute in {timeToNextScheduled} minutes\n            </styled.NextExecution>\n            :\n            <></>\n          }\n            {renderTasks()}\n        </styled.Container>\n\n    );\n}\n\n\nexport default ScheduleList\n","import styled from 'styled-components'\nimport Modal from 'react-modal';\nimport {css} from 'styled-components'\n\nconst sharedButtonStyle = css`\n  outline: none !important;\n  outline-offset: none !important;\n  align-self: center;\n  font-size: 1.5rem;\n  position: relative;\n  text-align: center;\n  -webkit-transition-duration: 0.4s; /* Safari */\n  transition-duration: 0.4s;\n  cursor: pointer;\n`\n\nexport const Container = styled(Modal)`\n  outline: none !important;\n  outline-offset: none !important;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  right: auto;\n  bottom: auto;\n\n  position: absolute;\n\n  background: ${props => props.theme.bg.primary};\n  border-width: thin;\n  border-radius: .5em;\n  border-color: ${props => props.theme.bg.quarternary};\n  border-style: solid;\n  padding: 2rem;\n  z-index: 50;\n  \n  color: ${props => props.theme.bg.octonary};\n`;\n\nexport const HeaderContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  border-width: 0;\n  border-bottom-width: thin;\n  border-color: black;\n  border-style: solid;\n  margin-bottom: 2rem;\n`;\n\nexport const Title = styled.h2`\n  text-align: center;\n  font-size: ${props =>  props.theme.fontSize.sz3};\n  font-family: ${props =>  props.theme.font.primary};\n  font-weight: bold;\n`;\n\nexport const TextContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 1.5rem;\n`;\n\nexport const TextMain = styled.h4`\n  text-align: center;\n  font-size: ${props =>  props.theme.fontSize.sz3};\n  font-family: ${props =>  props.theme.font.primary};\n  font-weight: 500;\n`;\n\nexport const Caption = styled.h5`\n  text-align: center;\n  font-size: ${props =>  props.theme.fontSize.sz4};\n  font-family: ${props =>  props.theme.font.primary};\n  font-weight: 400;\n  font-style: italic;\n`;\n\nexport const ButtonForm = styled.form`\n\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n`;\n\nexport const Icon = styled.i`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin: auto auto;\n    color: green;\n    fill: green;\n    font-size: 7rem;\n    width: 14rem;\n    &:hover {\n        cursor: pointer;\n    }\n\n    &:active{\n        filter: brightness(85%)\n    }\n`","import styled from 'styled-components'\nimport { hexToRGBA, LightenDarkenColor, RGB_Linear_Shade } from '../../../methods/utils/color_utils';\n\n\nconst backgroundColor = (props) => {\n  if(props.secondary || props.disabled) {\n    return props.theme.bg.senary;\n  }\n\n  else {\n    if(props.tertiary) {\n      return props.theme.bg.secondary;\n    }\n    else {\n       if(props.disabled) {\n         return props.theme.disabled;\n       }\n       else {\n         return props.theme.fg.primary;\n       }\n     }\n  }\n\n\n}\nexport const SmallButton = styled.button`\n    display: inline-block;\n    height: calc(${props => props.theme.fontSize.sz3} * 2.2);\n    line-height: 1rem;\n    text-align: center;\n    vertical-align: middle;\n    margin: 0.5rem;\n    user-select: none;\n\n    padding: 0.375rem 0.75rem;\n    font-size: ${props => props.theme.fontSize.sz3};\n    font-family: ${props => props.theme.font.primary};\n    font-weight: 500;\n\n    border-radius: calc(${props => props.theme.fontSize.sz3} * 0.3);\n    color: ${props => props.secondary || props.disabled ? props.theme.bg.primary : (props.tertiary ? props.theme.fg.primary : props.theme.bg.octonary)};\n    background-color: ${props => backgroundColor(props)};\n    /*\n    background-color: ${props => props.secondary || props.disabled ?\n       (props.theme.bg.senary)\n      :\n      (props.tertiary ?\n        props.theme.bg.secondary\n        :\n        (props.disabled ? props.theme.disabled :  props.theme.fg.primary))};\n    */\n\n    border: none;\n\n    white-space: pre;\n\n    &:focus {\n        outline: none;\n        background-color: ${props => backgroundColor(props)};\n        //background-color: ${props => props.secondary || props.disabled ? props.theme.bg.senary : (props.tertiary ? props.theme.bg.secondary : props.theme.fg.primary)};\n    }\n\n    &:hover {\n      background-color: ${props => props.disabled ? backgroundColor(props) : LightenDarkenColor(backgroundColor(props), 10)};\n    }\n`;\n","import React from 'react';\nimport * as styled from './small_button.style'\n\nconst SmallButton = ({label, onClick, style, secondary, tertiary, disabled, type, ...props}) => {\n\n    return (\n        <styled.SmallButton onClick={!disabled ? onClick : () => {return}} disabled={disabled} type={type} {...props} style={style} secondary={secondary} tertiary={tertiary}>\n          {props.children ?\n            props.children\n            :\n            label\n          }\n        </styled.SmallButton>\n    )\n};\n\nSmallButton.defaultProps = {\n    secondary : false,\n    tertiary : false,\n    disabled: false\n};\n\nexport default SmallButton;\n","import React from \"react\";\nimport Modal from 'react-modal';\n\nimport * as styled from './modals.style'\nimport SmallButton from '../small_button/small_button.js'\n\n\nModal.setAppElement('body');\n\nexport const ConfirmDeleteModal = (props) => {\n\n  const {\n    isOpen,\n    title,\n    textMain,\n    caption,\n    onCancelClick,\n    onDeleteClick\n\n  } = props\n\n  return (\n    <styled.Container\n      isOpen={isOpen}\n      contentLabel=\"Confirm Delete Modal\"\n      style={{\n        overlay: {\n          zIndex: 500\n        },\n        content: {\n\n        }\n      }}\n    >\n\n\n      <styled.HeaderContainer>\n        <styled.Title>{title}</styled.Title>\n      </styled.HeaderContainer>\n      \n      <styled.TextContainer>\n        <styled.TextMain>{textMain}</styled.TextMain>\n        <styled.Caption>{caption}</styled.Caption>\n      </styled.TextContainer>\n\n      <styled.ButtonForm>\n      <SmallButton\n                    tertiary\n                    onClick={() => onCancelClick()}\n                    label={\"Cancel\"}\n                    type=\"button\"\n                  />\n        <SmallButton\n                    onClick={() => onDeleteClick()}\n                    label={\"Delete\"}\n                    type=\"button\"\n                  />\n      </styled.ButtonForm>\n\n    </styled.Container>\n  );\n};\n\nexport const ConfirmExitModal = (props) => {\n\n\n  return (\n    <styled.Container\n      isOpen={props.isOpen}\n      contentLabel=\"Confirm Exit Modal\"\n    >\n\n      <styled.HeaderContainer>\n        <styled.Title>Are you sure you want to exit?</styled.Title>\n      </styled.HeaderContainer>\n      \n      <styled.TextContainer>\n        <styled.TextMain>Your changes will not be saved</styled.TextMain>\n        {/* <styled.Caption>{props.caption}</styled.Caption> */}\n      </styled.TextContainer>\n\n      <styled.ButtonForm onSubmit={(e) => props.onConfirm()}>\n        <SmallButton\n            tertiary\n            onClick={() => props.onCancel()}\n            label={\"Cancel\"}\n            type=\"button\"\n          />\n        <SmallButton\n            onClick={() => props.onConfirm()}\n            label={\"Continue\"}\n            type=\"submit\"\n          />\n      </styled.ButtonForm>\n\n    </styled.Container>\n  );\n\n};\n\n\nexport const WarningModal  = (props) => {\n\n  return (\n    <styled.Container\n      isOpen={props.isOpen}\n      contentLabel=\"Confirm Delete Modal\"\n    >\n\n      <styled.HeaderContainer>\n        <styled.Title>{props.title}</styled.Title>\n      </styled.HeaderContainer>\n      <styled.TextContainer>\n        <styled.TextMain>{props.textMain}</styled.TextMain>\n        <styled.Caption>{props.caption}</styled.Caption>\n      </styled.TextContainer>\n\n      <styled.ButtonForm>\n        {/* <styled.CancelButton   type={\"button\"} onClick={props.onContinueClick}>Continue</styled.CancelButton> */}\n      </styled.ButtonForm>\n\n    </styled.Container>\n  );\n};\n\nexport const HILModal = React.memo((props) => {\n\n  return(\n    <styled.Container\n      isOpen={props.isOpen}\n\n      contentLabel=\"Confirm Delete Modal\"\n    >\n\n\n      <styled.HeaderContainer>\n        <styled.Title>{props.title}</styled.Title>\n      </styled.HeaderContainer>\n      <styled.TextContainer>\n        <styled.TextMain>{props.textMain}</styled.TextMain>\n        <styled.Caption>{props.timer}</styled.Caption>\n      </styled.TextContainer>\n\n      <styled.ButtonForm>\n        <styled.Icon\n            secondary\n            onClick={() => props.hilSuccess()}\n            type=\"button\"\n            className='far fa-check-square fa-10x'\n          />\n          <styled.Icon\n              secondary\n              onClick={() => props.hilFailure()}\n              type=\"button\"\n              className='far fa-minus-square'\n              style={{color: 'red'}}\n          />\n      </styled.ButtonForm>\n      <styled.ButtonForm>\n        <SmallButton\n          secondary\n          onClick={() => props.onCancelClick()}\n          label={\"Cancel\"}\n          type=\"button\"\n        />\n      </styled.ButtonForm>\n\n\n    </styled.Container>\n  )\n})\n\n","import styled, {css} from 'styled-components'\n\nexport const Container = styled.div`\n    // border-width: thin;\n    // border-style: solid;\n    // border-color: ${props => props.hasError ? \"red\" : \"transparent\"};\n    // box-shadow:  ${props => props.hasError && \"0 0 5px red\"};\n    width: 100%;\n`;\n\nexport const StyledLabel = styled.label`\n  background: pink;\n  height: 3rem;\n`;\n\nexport const ErrorContainerComponent = styled.div`\n    // position: relative;\n    // width: auto;\n    // height: auto;\n    // margin-left: 1rem;\n    left: 50%;\n    // right: 1rem;\n    transform: translateX(50%);\n`;\n\n// export const DefaultButtonViewErrorCss = css`\n//     border-color: ${props => props.hasError && \"red\"};\n//     box-shadow:  ${props => props.hasError && \"0 0 5px red\"};\n// `;\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { useField, useFormikContext } from \"formik\";\n\n// import components\nimport ErrorTooltip from \"../error_tooltip/error_tooltip\";\nimport ButtonGroup from '../../button_group/button_group';\n\n// import styles\nimport * as style from './button_group_field.style'\nimport * as button_group_style from '../../button_group/button_group.style'\n\nconst ButtonGroupField = (\n    {\n        label,\n        containerStyle,\n        LabelComponent,\n        Container,\n        ButtonView,\n        Button,\n        ButtonViewStyle,\n        // ButtonViewErrorCss,\n        enableErrorTooltip,\n        ...props\n    }) => {\n\n    const { setFieldValue, setFieldTouched } = useFormikContext();\n    const [field, meta] = useField(props);\n    const hasError = meta.touched && meta.error;\n\n    return (\n        <>\n            {label &&\n                <LabelComponent htmlFor={props.id || props.name}>{label}</LabelComponent>\n            }\n\n            <style.Container\n                hasError={hasError}\n            >\n                {enableErrorTooltip &&\n                    <ErrorTooltip\n                        visible={hasError}\n                        text={meta.error}\n                        ContainerComponent={style.ErrorContainerComponent}\n                    />\n                }\n\n                <ButtonGroup\n                    {...field}\n                    {...props}\n                    hasError={hasError}\n                    Container={Container}\n                    // ButtonView={<Wrapper hasError={hasError}/>}\n                    ButtonView={ButtonView}\n                    // ButtonView={React.cloneElement(ButtonView, { size: 24 })}\n                    // ButtonView={renderClone(ButtonView)}\n                    Button={Button}\n                    selectedIndexes={field.value}\n                    onPress={(val) => {\n                        const isTouched = meta.touched;\n                        if (!isTouched) {\n                            setFieldTouched(field.name, true)\n                        }\n                        setFieldValue(field.name, val);\n                    }}\n                />\n            </style.Container>\n\n\n            {/*\n            {meta.touched && meta.error ? (\n\t\t\t\t<div className=\"error\">{meta.error}</div>\n\t\t\t) : null}\n            */}\n\n        </>\n    );\n};\n\n// Specifies propTypes\nButtonGroupField.propTypes = {\n\n};\n\n// Specifies the default values for props:\nButtonGroupField.defaultProps = {\n    LabelComponent: null,\n    // ButtonViewErrorCss: style.DefaultButtonViewErrorCss,\n    ButtonView: button_group_style.ButtonView,\n    enableErrorTooltip: true,\n};\n\nexport default ButtonGroupField;\n","// export function generateOptions(length, excludedOptions) {\n//   const arr = [];\n//   for (let value = 0; value < length; value++) {\n//     if (excludedOptions.indexOf(value) < 0) {\n//       arr.push(value);\n//     }\n//   }\n//   return arr;\n// }\n//\n// export function disabledHours(a,b,c,d) {\n//   return [];\n// }\n\nexport function disabledMinutes(h) {\n  switch (h) {\n    case 0:\n      return [0];\n    default:\n      return[];\n  }\n}\n\n// export function disabledSeconds(h, m) {\n//   return [h + m % 60];\n// }\n","import { TEMP_NEW_SCHEDULE_ID, DEFAULT_TASK_ID } from '../../constants/scheduler_constants';\nimport { timeString24HrToDate, uuidv4 } from './utils';\nimport moment from 'moment';\n\nconst timeStringRegex = '^(?:(?:([01]?\\d|2[0-3]):)?([0-5]?\\d):)?([0-5]?\\d)$'\nconst timeStringRegex2 = /^(?:(?:([01]?\\d|2[0-3]):)?([0-5]?\\d):)?([0-5]?\\d)$/\nconst timeStringRegex3 = /(?:[01]\\d|2[0123]):(?:[012345]\\d):(?:[012345]\\d)$/\n\nexport function getScheduleItemTemplate() {\n\n    let start_time = new Date();\n    start_time.setSeconds(0);\n    start_time.setHours(8);\n    start_time.setMinutes(0);\n    start_time = start_time.toTimeString().split(' ')[0];\n    start_time = moment(timeString24HrToDate(start_time))\n    // let start_time = '07:00:00';\n\n    // let  = '00:15:00';\n    let time_interval = new Date();\n    time_interval.setSeconds(0);\n    time_interval.setMinutes(15);\n    time_interval.setHours(0);\n    time_interval = time_interval.toTimeString().split(' ')[0];\n    time_interval = moment(timeString24HrToDate(time_interval))\n\n\n    let stop_time = new Date();\n    stop_time.setSeconds(0);\n    stop_time.setMinutes(0);\n    stop_time.setHours(20);\n    stop_time = stop_time.toTimeString().split(' ')[0];\n    stop_time = moment(timeString24HrToDate(stop_time))\n    // let stop_time =\"8:00:00 PM\";\n\n    const id = uuidv4();\n\n    return {\n        id: id,\n        _id: id,\n        task_id: DEFAULT_TASK_ID,\n        days_on: [],\n        interval_on: false,\n        schedule_on: true,\n        start_time: start_time,\n        time_interval: time_interval,\n        stop_time: stop_time,\n        new: true,\n        name: \"\",\n        task: []\n    }\n}\n\nexport function getScheduleItemTemplate2(timeString) {\n    return {\n        id: uuidv4(),\n        task_id: DEFAULT_TASK_ID,\n        days_on: {\n            friday: false,\n            monday: false,\n            saturday: false,\n            sunday: false,\n            thursday: false,\n            tuesday: false,\n            wednesday: false\n        },\n        interval_on: false,\n        schedule_on: false,\n        start_time: new Date().toTimeString().split(' ')[0],\n        time_interval: new Date().toTimeString().split(' ')[0],\n        label: \"\"\n    };\n}\n\nexport function formatScheduleItemOld(scheduleItem) {\n    console.log('formatScheduleItem scheduleItem', scheduleItem)\n    scheduleItem.id = scheduleItem._id.$oid;\n    if (!scheduleItem.name) scheduleItem.name = \"\";\n    if (!scheduleItem.label) scheduleItem.label = \"\";\n    if (!scheduleItem.task_id) scheduleItem.task_id = \"\";\n\n\n\n    const startTimeIsValid = timeStringRegex3.test(scheduleItem.start_time);\n    if (!startTimeIsValid) {\n        scheduleItem.start_time = \"00:00:00\";\n        scheduleItem.start_time_label = \"NOT SET\";\n    } else {\n        scheduleItem.start_time_label = scheduleItem.start_time;\n    }\n\n    const timeIntervalIsValid = timeStringRegex3.test(scheduleItem.time_interval);\n    if (!timeIntervalIsValid) {\n        scheduleItem.time_interval = \"00:00:00\";\n        scheduleItem.time_interval_label = \"NOT SET\";\n    } else {\n        scheduleItem.time_interval_label = scheduleItem.time_interval;\n    }\n\n    const stopTimeIsValid = timeStringRegex3.test(scheduleItem.stop_time);\n    if (!stopTimeIsValid) {\n        scheduleItem.stop_time = \"00:00:00\";\n        scheduleItem.stop_time_label = \"NOT SET\";\n    } else {\n        scheduleItem.stop_time_label = scheduleItem.stop_time;\n    }\n\n\n\n    console.log('startTimeIsValid', startTimeIsValid)\n    console.log('timeIntervalIsValid', timeIntervalIsValid)\n    console.log('stopTimeIsValid', stopTimeIsValid)\n\n    return scheduleItem;\n}\n\nexport function formatScheduleItem(scheduleItem) {\n\n\n    return scheduleItem;\n}\n\n/*\nfunction isSchedule(arg: any): arg is Schedule {\n    return arg && arg.prop && typeof(arg.prop) == 'number';\n}\n*/\n\nexport class Schedule_v2 {\n    constructor(apiResponse) {\n        this.days_on = {\n            friday: 'boolean',\n            monday: 'boolean',\n            saturday: 'boolean',\n            sunday: 'boolean',\n            thursday: 'boolean',\n            tuesday: 'boolean',\n            wednesday: 'boolean',\n        };\n\n        this.interval_on = 'boolean';\n        this.name = 'string';\n        this.precondition_id = 'string';\n        this.schedule_on = 'boolean';\n        this.start_time = 'string';\n        this.time_interval = 'string';\n    }\n}\n\nexport class Schedule {\n    constructor(apiResponse) {\n        let days_on = {\n            friday: 'boolean',\n            monday: 'boolean',\n            saturday: 'boolean',\n            sunday: 'boolean',\n            thursday: 'boolean',\n            tuesday: 'boolean',\n            wednesday: 'boolean',\n        };\n\n        let interval_on = 'boolean';\n        let name = 'string';\n        let precondition_id = 'string';\n        let schedule_on = 'boolean';\n        let start_time = 'string';\n        let time_interval = 'string';\n    }\n}\n\ninterface ScheduleInterface {\n    days_on: {\n        friday: string;\n        monday: boolean;\n        saturday: boolean;\n        sunday: boolean;\n        thursday: boolean;\n        tuesday: boolean;\n        wednesday: boolean;\n    },\n    interval_on: boolean;\n    name: string;\n    precondition_id: string;\n    schedule_on: boolean;\n    start_time: string;\n    time_interval: string;\n}\n","export const getMinutesFromMoment = (m) => {\n    return m.minutes() + m.hours() * 60;\n}","import styled from 'styled-components'\nimport { css } from 'styled-components'\nimport { Form } from 'formik';\n\n// import components\nimport TimePickerField from '../../../../basic/form/time_picker_field/time_picker_field';\n\nimport { globStyle } from '../../../../../global_style';\nimport { hexToRGBA } from '../../../../../methods/utils/color_utils';\n\nexport const FadeLoaderCSS = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\nexport const FieldLabel = styled.label`\n    padding: 0;\n    width: 100%;\n    font-size: ${props => props.theme.fontSize.sz2};\n    font-family: ${props => props.theme.font.primary};\n    color: ${props => props.theme.bg.septenary};\n`\n\nexport const RowContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    margin-top: 1rem;\n    justify-items: space-between;\n    justify-content: center;\n    align-items: center;\n`;\n\nexport const FlexContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n\n    /* @media (min-width: ${props => props.theme.widthBreakpoint.tablet}) {\n      flex-direction: row;\n      width: 40rem;\n    } */\n`;\n\nexport const FlexBox = styled.div`\n    /* width: 100%; */\n    /* min-width: 15rem; */\n    /* margin-right: 3rem; */\n`;\n\nexport const ToggleTextLeft = styled.h1`\n    font-size: ${props => props.theme.fontSize.sz3};\n    font-family: ${props => props.theme.font.primary};\n    display: flex;\n    margin-top: 0.2rem;\n    padding-right: 0.8rem;\n    color: ${props => props.theme.bg.octonary};\n\n`;\n\nexport const ToggleTextRight = styled.h1`\n    font-size: ${props => props.theme.fontSize.sz3};\n    font-family: ${props => props.theme.font.primary};\n    display: flex;\n    margin-top: 0.2rem;\n    padding-left: 0.8rem;\n    color: ${props => props.theme.bg.octonary};\n\n`;\n\n\n\n\nexport const ErrorComponent = styled.span`\n  color: ${props => props.theme.bad};\n  font-size: ${props => props.theme.fontSize.sz4};\n  font-weight: 600;\n  margin-top: .5rem;\n  align-self: center;\n`;\n\n\n\nexport const StyledForm = styled(Form)`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    max-width: 100%;\n    max-height: 100%;\n    padding: 1rem;\n    \n    overflow-x: hidden;\n`;\n\nexport const ContentContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n    /* overflow-y: scroll; */\n    padding: 1rem;\n    max-width: 100%;\n    overflow-x: hidden;\n`\n\nexport const FooLabel = styled.div``;\n\n// text input\n// ************************************\n// ************************************\nexport const Input = styled.input`\n    background-color: ${props => props.theme.bg.secondary};\n    border: 1px solid ${props => props.theme.bg.primary};\n    font-size: ${props => props.theme.fontSize.sz8};\n    font-family: ${props => props.theme.font.primary};\n    display: flex;\n    flex-grow: 1;\n    color: ${props => props.theme.bg.septenary};\n\n    &:focus {\n        outline: none;\n        border: 1px solid ${props => props.theme.fg.primary};\n        color: ${props => props.theme.bg.septenary};\n        box-shadow: none;\n        background-color: ${props => props.theme.bg.secondary};\n    }\n\n    &::placeholder {\n        font-size: ${props => props.theme.fontSize.sz8};\n        font-family: ${props => props.theme.font.secondary};\n        color: ${props => props.theme.bg.quaternary};\n    }\n`;\n\nexport const InputContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding-bottom: 1rem;\n  width: 100%;\n`;\n\nexport const InputLabel = styled.label`\n    width: 100%;\n    padding: 0;\n    margin-bottom: 1rem;\n    font-size: ${props => props.theme.fontSize.sz2};\n    font-family: ${props => props.theme.font.primary};\n    color: ${props => props.theme.bg.septenary};\n`;\n\nexport const TitleTextbox = styled.input`\n    background-color: ${props => props.theme.bg.secondary};\n    border-color: ${props => props.theme.bg.primary};;\n    font-size: ${props => props.theme.fontSize.sz2};\n    font-family: ${props => props.theme.font.primary};\n    display: flex;\n    flex-grow: 1;\n\n    &:focus {\n        border: 1px solid ${props => props.theme.fg.primary};\n        color: ${props => props.theme.bg.septenary};\n        box-shadow: none;\n        background-color: ${props => props.theme.bg.secondary};\n    }\n\n    &::placeholder {\n        font-size: ${props => props.theme.fontSize.sz2};\n        font-family: ${props => props.theme.font.secondary};\n        color: ${props => props.theme.bg.quaternary};\n    }\n`;\n// ************************************\n// ************************************\n\n\n// drop down field\n// ************************************\n// ************************************\nexport const SelectContainer = styled.div`\n  width: 100%;\n  flex-direction: column;\n  z-index: 2;\n  text-align: center;\n  padding-bottom: 2rem;\n\n`;\n\nexport const ContentComponent = styled.div`\n  display: flex;\n  flex: 1;\n  flex-wrap: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n`;\n\nexport const SelectItemComponent = styled.span`\n  padding: .5rem 1rem .5rem 1rem;\n  cursor: pointer;\n  border-bottom: 1px solid ${globStyle.white};\n  white-space: wrap;\n  display: flex;\n  justify-content: space-between;\n  font-family: ${globStyle.font};\n  flex: 1;\n  max-width: 100%;\n\n  &.react-dropdown-select-item-active {\n    border-bottom: 1px solid ${globStyle.white};\n    ${({ disabled, color }) => !disabled && color && `background: ${hexToRGBA(color, 0.1)};`}\n  }\n\n  :hover,\n  :focus {\n    background: ${globStyle.grey5};\n    outline: none;\n  }\n\n  &.react-dropdown-select-item-selected {\n    ${({ disabled, color }) =>\n        disabled\n            ? `\n    background: ${globStyle.red};\n    color: ${globStyle.black};\n    `\n            : `\n    background: ${globStyle.red};\n    color: ${globStyle.black};\n    border-bottom: 1px solid ${globStyle.white};\n    `}\n  }\n\n  ${({ disabled }) =>\n        disabled\n            ? `\n    background: ${globStyle.white};\n    color: ${globStyle.grey3};\n\n    ins {\n      text-decoration: none;\n      border:1px solid #ccc;\n      border-radius: 2px;\n      padding: 0px 3px;\n      font-size: x-small;\n      text-transform: uppercase;\n    }\n    `\n            : ''}\n\n    background-color: ${globStyle.white};\n`;\n\nexport const TextComponent = styled.span`\n  overflow: wrap;\n  white-space: wrap;\n  flex-wrap: wrap;\n  max-width: 100%;\n\n`;\n\n\nexport const SelectLabel = styled.label`\nwidth: 100%;\npadding: 0;\nmargin-bottom: 1rem;\nfont-size: ${props => props.theme.fontSize.sz2};\nfont-family: ${props => props.theme.font.primary};\ncolor: ${props => props.theme.bg.septenary};\n\n`;\n// ************************************\n// ************************************\n\n// ButtonGroup\n// ************************************\n// ************************************\nexport const ButtonGroupContainer = styled.div`\n  background: transparent;\n  align-items: start;\n  width: 100%;\n  max-width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: start;\n  padding-bottom: 2rem;\n\n`;\n\n\n\n// ************************************\n// ************************************\n\nexport const StyledErrorMessage = styled.div`\n\n`;\n\n// date picker\n// ************************************\n// ************************************\n\nconst sharedTimePickerContainerStyle = css`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  align-items: center;\n  flex-wrap: wrap;\n`\n\nexport const TimePickerContainer = styled.div`\n  ${sharedTimePickerContainerStyle}\n  justify-content: center;\n  width: 100%;\n  \n  padding-top: 0.5rem;\n  flex-direction: row;\n`;\n\nexport const TimePickerErrorComponent = styled.span`\n  color: ${props => props.theme.bad};\n  font-size: ${props => props.theme.fontSize.sz4};\n  font-weight: 600;\n  margin-top: .25rem;\n`;\n\nexport const StopTimePickerContainer = styled.div`\n  ${sharedTimePickerContainerStyle}\n  justify-content: flex-start;\n  padding-bottom:2rem;\n  width: 100%;\n  font-size: ${props => props.theme.fontSize.sz2};\n  font-family: ${props => props.theme.font.primary};\n  color: ${props => props.theme.bg.septenary};\n`;\n\nexport const StyledTimePickerField = styled(TimePickerField)`\n\n`;\n\n\nexport const SwitchLabel = styled.label`\n\n`;\n\nexport const DatePickerLabel = styled.label`\n  font-size: ${props => props.theme.fontSize.sz4};\n  font-family: ${props => props.theme.font.primary};\n  color: ${props => props.theme.bg.septenary};\n\n  // flex-grow: 1;\n  // flex-basis: 12rem;\n\n  line-height: 2.5rem;\n  width: 7rem;\n  margin-right: 1rem;\n`;\n// ************************************\n// ************************************\n\n\n\n// bottom buttons\n// ************************************\n// ************************************\nexport const FormButtonsContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  background: transparent;\n    width: 100%;\n  justify-content: center;\n`;\n\nexport const FormButton = styled.button`\n\n\n`;\n// ************************************\n// ************************************\n","import styled, {css} from 'styled-components';\n\nexport const Container = styled.div`\n    width: 100%;\n    max-width: 100%;\n    background: transparent;\n    border-color: transparent;\n    border-width: 0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-wrap: wrap;\n    \n    word-break: break-all;\n    \n`\n\nexport const Button = styled.button`\n    // width: 7rem;\n\n    background: transparent;\n    outline: none !important;\n    outline-offset: none !important;\n    border-color: transparent;\n    border-width: 0;\n\n    margin-bottom: 0.5rem;\n    word-break: break-all;\n    \n`\n\nexport const buttonViewCss = css`\n\tword-break: break-all;\n`\n\nexport const ButtonView = styled.div`\n\n    flex-grow: 1;\n\n    @media (max-width: ${props => props.theme.widthBreakpoint.tiny}) {\n        height: 7rem;\n        line-height: 7rem;\n    }\n\n    background: ${props => props.isSelected ? props.theme.schema['scheduler'].solid : 'transparent'};\n    color: ${props => props.isSelected ? props.theme.bg.primary : props.theme.bg.octonary};\n\n    outline: none !important;\n    outline-offset: none !important;\n    padding: .75rem;\n    margin-left: -0.2rem;\n    margin-bottom: .5rem;\n    border-radius: .3rem;\n    border-width: .15rem;\n    border-color: ${props => props.theme.schema['scheduler'].solid};\n\n    border-style: solid;\n\n\n    font-size: ${props => props.theme.fontSize.sz4};\n    font-family: ${props => props.theme.font.primary};\n    font-weight: 400;\n    @media ${props => props.theme.widthBreakpoint.mobileL} {\n      padding: .25rem;\n      fontSize: ${props => props.theme.fontSize.sz5};\n    }\n    \n    border-color: ${props => props.hasError && \"red\"};\n    box-shadow:  ${props => props.hasError && \"0 0 5px red\"};\n    word-break: break-all;\n`\n","// import external dependencies\nimport React, { useContext, useState } from 'react'\nimport PropTypes from 'prop-types'\n\n// import external components\nimport FadeLoader from \"react-spinners/FadeLoader\"\n\n// external functions\nimport { Formik } from 'formik'\nimport { ThemeContext } from \"styled-components\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport moment from 'moment'\n\n// import components\nimport ContentHeader from '../../content_header/content_header'\nimport ButtonGroupField from '../../../../basic/form/button_group_field/button_group_field'\nimport TextField from '../../../../basic/form/text_field/text_field.js'\nimport SwitchField from '../../../../basic/form/switch_field/switch_field.js'\nimport DropDownSearchField from '../../../../basic/form/drop_down_search_field/drop_down_search_field.js'\nimport Button from '../../../../basic/button/button'\nimport BackButton from \"../../../../basic/back_button/back_button\"\nimport Textbox from \"../../../../basic/textbox/textbox\";\n\n// import utils\nimport * as helpers from './create_schedule_form.helpers'\nimport { daysOfTheWeek } from '../../../../../constants/scheduler_constants'\nimport { FORM_MODES } from '../../../../../constants/scheduler_constants'\nimport { scheduleSchema } from '../../../../../methods/utils/form_schemas'\nimport { timeString24HrToDate } from \"../../../../../methods/utils/utils\"\nimport { getScheduleItemTemplate } from \"../../../../../methods/utils/schedules_utils\"\nimport { getMinutesFromMoment } from \"../../../../../methods/utils/time_utils\"\n\n// actions\nimport { postSchedule, putSchedule } from \"../../../../../redux/actions/schedule_actions\"\nimport { getTasks } from \"../../../../../redux/actions/tasks_actions\";\n\n// import styles\nimport * as styled from './create_schedule_form.style'\nimport * as pageStyle from '../scheduler_content.style'\nimport * as ButtonGroupComponents from './button_group.style'\n\n// logger\nimport log from '../../../../../logger'\n\nconst logger = log.getLogger(\"CreateScheduleForm\", \"Scheduler\")\nlogger.setLevel(\"silent\")\n\nconst widthBreakPoint = 525\n\nconst CreateScheduleForm = (props) => {\n\n    const {\n        onDeleteClick,\n        hideScheduleCreator,\n        selectedScheduleId,\n        setSelectedScheduleId,\n        schedules,\n        tasks,\n    } = props\n\n    const dispatch = useDispatch()\n\n    const width = useSelector(state => state.sidebarReducer.width)\n    const currentMap = useSelector(state => state.mapReducer.currentMap)\n    const isSmall = width < widthBreakPoint\n\n    const tasksArr = Object.values(tasks).filter((task) => task.map_id === currentMap._id) // get copy of tasks as arr here instead of calling Object.values() multiple times\n\n    const themeContext = useContext(ThemeContext)\n\n    /*\n    * submission logic for form\n    *\n    * extracts form values into a new object that will be send as either a POST or PUT request depending on whether a new item is being created, or an existing item modified\n    *\n    * expected fields\n    *   start_time: Moment\n    *   time_interval: Moment\n    *   stop_time: Moment\n    *   days_on: array - [1,2,3]\n    *   name: string - \"this is a name\"\n    *   task: array of objects - [{}]\n    *   interval_on: bool - false\n    * */\n    const handleSubmit = async (values, formMode) => {\n\n        // convert days_on from array of indices to object with the days as keys and values as either true or false\n        const days_on = {}\n        Object.values(daysOfTheWeek).forEach((day, ind, arr) => {\n            days_on[day] = values.days_on.includes(ind)\n        })\n\n        const {\n            task,\n            name,\n            schedule_on,\n            start_time,\n            interval_on,\n            time_interval,\n            stop_time,\n            map_id,\n            next_time\n        } = values\n\n        // eextract properties into new object for submission\n        const submitItem = {\n            task_id: task[0]?._id,\n            days_on,\n            name: name,\n            schedule_on: schedule_on,\n            start_time: start_time.format(\"HH:mm:ss\"),\n            interval_on: interval_on,\n            time_interval: time_interval.format(\"HH:mm:ss\"),\n            stop_time: stop_time.format(\"HH:mm:ss\"),\n            next_time: next_time,\n            map_id: map_id,\n        }\n\n        // update existing object - PUT request\n        if (formMode === FORM_MODES.UPDATE) {\n            // dispatch update action\n            dispatch(putSchedule(selectedScheduleId, submitItem))\n\n            // create new object - POST request\n        } else if (formMode === FORM_MODES.CREATE) {\n            // dispatch post action\n            const createdSchedule = await dispatch(postSchedule(submitItem))\n            setSelectedScheduleId(createdSchedule?._id?.$oid) // set selected schedule id, which will update the form mode from create to update\n        }\n\n        // close form optionally\n        hideScheduleCreator()\n    }\n\n    /*\n    * returns the initial values for the form\n    *\n    * initial values are found by finding the schedule from redux with the id matching selectedScheduleId passed via props\n    * If selectedScheduleId is null, or no matching schedule is found, a template for creating a new schedule is returned instead\n    * */\n    const getInitialValues = () => {\n\n        // Gets the selected schedule for the list of schedules\n        let selectedScheduleItem = schedules[selectedScheduleId]\n        logger.log(\"getInitialValues selectedScheduleItem\", selectedScheduleItem)\n        logger.log(\"getInitialValues selectedScheduleId\", selectedScheduleId)\n\n        // get initial values from schedule\n        if (selectedScheduleItem) {\n\n            // convert days_on from object to array of indices (required for button group)\n            const days_on = []\n            if (selectedScheduleItem) {\n                Object.values(daysOfTheWeek).forEach((val, ind) => {\n                    if (selectedScheduleItem.days_on[val]) days_on.push(ind)\n                })\n            }\n\n            // default time value for time fields that don't exist\n            const nowDate = new Date()\n            const nowTimeString = moment(timeString24HrToDate(nowDate))\n\n            // create new object with required properties\n            const initialValues = {\n                days_on: days_on,\n                start_time: selectedScheduleItem.start_time ? moment(timeString24HrToDate(selectedScheduleItem.start_time)) : nowTimeString,\n                schedule_on: selectedScheduleItem.schedule_on,\n                time_interval: selectedScheduleItem.time_interval ? moment(timeString24HrToDate(selectedScheduleItem.time_interval)) : nowTimeString,\n                interval_on: selectedScheduleItem.interval_on,\n                next_time: selectedScheduleItem.next_time,\n                map_id: currentMap._id,\n                stop_time: selectedScheduleItem.stop_time ? moment(timeString24HrToDate(selectedScheduleItem.stop_time)) : nowTimeString,\n                name: selectedScheduleItem.name ? selectedScheduleItem.name : '',\n                selectedScheduleId: selectedScheduleItem.id,\n                task: (selectedScheduleItem.task_id && tasks[selectedScheduleItem.task_id]) ?\n                    [tasks[selectedScheduleItem.task_id]]\n                    :\n                    // if task id equals TASK DELETED, the corresponding task has been deleted,\n                    // set task property to reflect this\n                    selectedScheduleItem.task_id == 'TASK DELETED' ?\n                        [{\n                            _id:\n                                \"TASK DELETED\"\n                            ,\n                            name: 'TASK DELETED'\n                        }]\n                        :\n                        // NO task, and task id isn't deleted, set set to default value that will prevent the dropdownsearch from throwing an error\n                        [{\n                            _id:\n                                \"TEMP_NEW_SCHEDULE_ID\"\n                            ,\n                            name: ''\n                        }],\n            }\n\n            return initialValues\n\n            // no schedule was found, return template\n        } else {\n            let newScheduleTemplate = getScheduleItemTemplate()\n            newScheduleTemplate.map_id = currentMap._id\n            return newScheduleTemplate\n        }\n    }\n\n    /*\n    * performs additional validation not covered by the schema\n    * some validation is easier to perform this way rather than in the schema\n    * */\n    const validate = async (values, initialValues) => {\n        logger.log('handleValidate: values:', values)\n\n        // validate gets called every time form changes\n        // so this can be used to handle any desired on change function\n        // handleFormChange(values, initialValues)\n\n        // initialize empty error object\n        var errors = {}\n\n        // stop time  must be greater than start time:\n        {\n            const { start_time, stop_time, interval_on } = values\n\n            if (interval_on) {\n                const startMin = getMinutesFromMoment(start_time)\n                const stopMin = getMinutesFromMoment(stop_time)\n\n                if (startMin >= stopMin) {\n                    errors.stop_time = \"Stop time must be greater than start time.\"\n                }\n            }\n        }\n\n        // return error object\n        return errors\n    }\n\n    /*\n    * use to implement any desired on change logic\n    * not currently used, but left so it can be easily implemented if desired\n    * */\n    const handleFormChange = (values, initialValues) => {\n        // not currently used, but can add logic here for any time a form value changes\n    }\n\n    const initialValues = getInitialValues() // get initial values\n    const formMode = selectedScheduleId ? FORM_MODES.UPDATE : FORM_MODES.CREATE // if a schedule id was passed, form is being used to edit an existing item, otherwise a new item is being created\n\n    return (\n        <Formik\n            initialValues={initialValues}\n\n            // validation control\n            validationSchema={scheduleSchema}\n            validateOnChange={true}\n            validate={(values) => validate(values, initialValues)}\n            validateOnMount={false} // leave false, if set to true it will generate a form error when new data is fetched\n            validateOnBlur={true}\n\n            enableReinitialize={false} // leave false, otherwise values will be reset when new data is fetched for editing an existing item\n            onSubmit={async (values, { setSubmitting, setTouched }) => {\n                // set submitting to true, handle submit, then set submitting to false\n                // the submitting property is useful for eg. displaying a loading indicator\n                setSubmitting(true)\n                await handleSubmit(values, formMode)\n                setTouched({}) // after submitting, set touched to empty to reflect that there are currently no new changes to save\n                setSubmitting(false)\n            }}\n        >\n            {formikProps => {\n\n                // extract common properties from formik\n                const { errors, values, touched, isSubmitting } = formikProps\n\n                // use this instead of validateOnMount\n                // validateOnMount will cause an error when new data is fetched\n                // eg. when the tasks dropdown is opened, it fetches tasks from the backend, this trigger a remount, which will then create an undesired form error\n                // if( (formMode === FORM_MODES.UPDATE) && (submitCount === 0) ) submitForm()\n\n                // get number of field errors\n                const errorCount = Object.keys(errors).length > 0\n\n                // get number of touched fields\n                const touchedReducer = (accumulator, currentValue) => (currentValue === true) ? accumulator + 1 : accumulator\n                const touchedCount = Object.values(touched).reduce(touchedReducer, 0)\n\n                // submit disabled if:\n                //      form contains any errors\n                //      no fields have been touched\n                //      form is currently submitting\n                const submitDisabled = (errorCount > 0) || (touchedCount === 0) || isSubmitting\n\n                return (\n                    (\n                        <styled.StyledForm>\n                            <ContentHeader\n                                content={'scheduler'}\n                                mode={'create'}\n                                onClickBack={hideScheduleCreator}\n                                onClickSave={() => formikProps.submitForm()}\n                                disabled={submitDisabled}\n                            // Need to figure out how to submit formik using this method. No internet atm so this'll have to wait\n\n                            />\n\n                            <styled.ContentContainer>\n                                <FadeLoader\n                                    css={styled.FadeLoaderCSS}\n                                    height={5}\n                                    width={3}\n                                    loading={isSubmitting}\n                                />\n\n                                <styled.FieldLabel>{'Schedule Name'}</styled.FieldLabel>\n                                <styled.InputContainer className=\"form-group\">\n                                    <TextField\n                                        name=\"name\"\n                                        type=\"text\"\n                                        placeholder=\"Schedule Name\"\n                                        InputComponent={Textbox}\n                                    />\n                                </styled.InputContainer>\n\n                                <styled.SelectContainer>\n                                    <DropDownSearchField\n                                        pattern={null}\n                                        name=\"task\"\n                                        options={tasksArr\n                                            // Filters outs any tasks that don't belong to the current map\n                                            .filter(task => task.map_id === currentMap._id)\n                                        }\n                                        // valueField={tasksArr.length > 0 ? \"_id.$oid\" : 'id'}\n                                        valueField={tasksArr.length > 0 ? \"_id\" : 'id'}\n                                        label={'Choose Task'}\n                                        onDropdownOpen={() => {\n                                            dispatch(getTasks())\n                                        }}\n                                        labelField={'name'}\n                                    />\n                                </styled.SelectContainer>\n\n                                <styled.FieldLabel>Schedule</styled.FieldLabel>\n                                <styled.ButtonGroupContainer>\n                                    <ButtonGroupField\n                                        name=\"days_on\"\n                                        buttons={Object.values(daysOfTheWeek)}\n                                        selectMultiple\n                                        Container={ButtonGroupComponents.Container}\n                                        ButtonView={ButtonGroupComponents.ButtonView}\n                                        Button={ButtonGroupComponents.Button}\n                                        buttonViewCss={ButtonGroupComponents.buttonViewCss}\n                                    />\n                                </styled.ButtonGroupContainer>\n\n                                <styled.RowContainer style={{ marginBottom: '2.5rem' }}>\n                                    <styled.ToggleTextLeft>{'Interval Off'}</styled.ToggleTextLeft>\n                                    <SwitchField\n                                        name=\"interval_on\"\n                                        onColor={themeContext.schema.scheduler.solid}\n                                        LabelComponent={styled.SwitchLabel}\n                                    />\n                                    <styled.ToggleTextRight>{'Interval On'}</styled.ToggleTextRight>\n                                </styled.RowContainer>\n\n                                <styled.RowContainer>\n                                    {/*\n                                        <styled.DatePickerLabel>Start Time</styled.DatePickerLabel>\n                                    */}\n\n                                    <styled.TimePickerContainer>\n                                        <styled.StyledTimePickerField\n                                            LabelComponent={styled.DatePickerLabel}\n                                            label=\"Start Time\"\n                                            name=\"start_time\"\n                                            use12Hours\n                                            format={'h:mm a'}\n                                            ErrorComponent={styled.TimePickerErrorComponent}\n                                            autoComplete=\"off\"\n                                            autoCorrect=\"off\"\n                                            spellCheck=\"off\"\n                                        />\n                                        {/*<SwitchField\n                                          name=\"scheduleOn\"\n                                          LabelComponent={styled.ButtonGroupLabel}\n                                        />*/}\n                                    </styled.TimePickerContainer>\n                                </styled.RowContainer>\n\n                                <styled.RowContainer>\n                                    {/*\n                                        <styled.DatePickerLabel>Time Interval</styled.DatePickerLabel>\n                                    */}\n\n                                    <styled.TimePickerContainer>\n                                        <styled.StyledTimePickerField\n                                            LabelComponent={styled.DatePickerLabel}\n                                            label=\"Time Interval\"\n                                            name=\"time_interval\"\n                                            // disabledHours={helpers.disabledHours}\n                                            disabledMinutes={helpers.disabledMinutes}\n                                            ErrorComponent={styled.TimePickerErrorComponent}\n                                            use12Hours={false}\n                                            disabled={!values.interval_on}\n                                            autoComplete=\"off\"\n                                            autoCorrect=\"off\"\n                                            spellCheck=\"off\"\n                                        // format = {'h:mm'}\n                                        />\n                                    </styled.TimePickerContainer>\n                                </styled.RowContainer>\n\n                                <styled.RowContainer>\n                                    {/*\n                                        <styled.DatePickerLabel>Stop Time</styled.DatePickerLabel>\n                                    */}\n\n                                    <styled.TimePickerContainer>\n                                        <styled.StyledTimePickerField\n                                            LabelComponent={styled.DatePickerLabel}\n                                            label=\"Stop Time\"\n                                            name=\"stop_time\"\n                                            ErrorComponent={styled.TimePickerErrorComponent}\n                                            use12Hours\n                                            format={'h:mm a'}\n                                            disabled={!values.interval_on}\n                                            autoComplete=\"off\"\n                                            autoCorrect=\"off\"\n                                            spellCheck=\"off\"\n                                        />\n                                    </styled.TimePickerContainer>\n                                </styled.RowContainer>\n\n\n                                <styled.FormButtonsContainer>\n\n                                    {/* delete button only makes sense for a schedule that has been created */}\n                                    {/* {formMode === FORM_MODES.UPDATE && */}\n                                    <Button schema={'scheduler'} secondary style={{ display: 'inline-block', float: 'right', width: '100%', maxWidth: '10rem', marginTop: '2rem' }}\n                                        onClick={() => {\n                                            onDeleteClick()\n                                        }}\n                                        type={\"button\"}\n                                    >\n                                        Delete\n                                    </Button>\n                                    {/* } */}\n\n                                </styled.FormButtonsContainer>\n                            </styled.ContentContainer>\n                        </styled.StyledForm>\n                    )\n                )\n            }}\n        </Formik>\n    )\n}\n\nCreateScheduleForm.propTypes = {\n    onDeleteClick: PropTypes.func,\n    hideScheduleCreator: PropTypes.func,\n    selectedScheduleId: PropTypes.string,\n    setSelectedScheduleId: PropTypes.func,\n}\n\nCreateScheduleForm.defaultProps = {\n    onDeleteClick: () => { },\n    hideScheduleCreator: () => { },\n    selectedScheduleId: \"\",\n    setSelectedScheduleId: () => { },\n}\n\nexport default CreateScheduleForm\n","import React, { useState} from 'react'\n\n// external funcs\nimport {useDispatch, useSelector} from 'react-redux'\n\n// import components\nimport ScheduleList from './schedule_list/schedule_list'\nimport {ConfirmDeleteModal} from \"../../../basic/modals/modals\"\nimport CreateScheduleForm from \"./create_schedule_form/create_schedule_form\"\n\n// import styles\nimport * as styled from './scheduler_content.style'\n\n// logging\nimport log from '../../../../logger.js'\nimport {deleteSchedule} from \"../../../../redux/actions/schedule_actions\";\nconst logger = log.getLogger(\"Schedule\")\n\nconst SchedulerContent = () => {\n\n    // dispatch\n    const dispatch = useDispatch()\n\n    // self contained state\n    const [selectedScheduleId, setSelectedScheduleId] = useState(null)\n    const [showScheduleCreator, setShowScheduleCreator] = useState(false)\n    const [showDeleteModal, setShowDeleteModal] = useState(false)\n\n    // redux state\n    const tasks = useSelector(state => {return state.tasksReducer.tasks})\n    const schedules = useSelector(state => {\n        return state.schedulesReducer.schedules\n    })\n\n    const handleSelectTask = (taskId) => {\n        setSelectedScheduleId(taskId)\n        setShowScheduleCreator(true)\n    }\n\n    const handleDelete = async () => {\n        // get schedule item - clone to avoid directly modifying redux state\n        const foundScheduleItem = schedules[selectedScheduleId]\n\n        if (foundScheduleItem) {\n            // dispatch action to make delete request to api and update redux\n            await dispatch(deleteSchedule(selectedScheduleId))\n        }\n\n        setShowDeleteModal(false)\n        setShowScheduleCreator(false)\n    }\n    return (\n        <styled.Container>\n            <ConfirmDeleteModal\n                isOpen={showDeleteModal}\n                title={\"Confirm Delete\"}\n                textMain={\"Are you sure you want to delete this schedule?\"}\n                caption={\"This action cannot be undone.\"}\n                onCancelClick={()=>setShowDeleteModal(false)}\n                onDeleteClick={handleDelete}\n            />\n            {showScheduleCreator ?\n                <CreateScheduleForm\n                    selectedScheduleId={selectedScheduleId}\n                    onDeleteClick={() => setShowDeleteModal(true)}\n                    setSelectedScheduleId={setSelectedScheduleId}\n                    hideScheduleCreator={()=> {\n                        setShowScheduleCreator(false)\n                        setSelectedScheduleId(null)\n                    }}\n                    schedules={schedules}\n                    tasks={tasks}\n\n                />\n                :\n                <ScheduleList\n                    selectedScheduleId={selectedScheduleId}\n                    handleSelectTask={handleSelectTask}\n                    schedules={schedules}\n                    setShowScheduleCreator={setShowScheduleCreator}\n                    setSelectedScheduleId = {(id)=>setSelectedScheduleId(id)}\n                    openSchedule={(id) => {\n                        setSelectedScheduleId(id)\n                        setShowScheduleCreator(true)\n                    }}\n                    tasks={tasks}\n                />\n            }\n        </styled.Container>\n    )\n}\n\nexport default SchedulerContent\n","import styled, { css } from 'styled-components'\nimport { RGB_Linear_Shade, hexToRGBA } from '../../../../methods/utils/color_utils'\nimport * as commonCss from \"../../../../common_css/common_css\";\n\n\n// ========== Content ========== //\nexport const DefaultContainer = styled.div`\n\tpostion: relative;\n`;\n\n\nexport const DefaultErrorTooltipContainerComponent = styled.div`\n  margin: 0 1rem;\n`\n\n\nexport const ListItem = styled.div`\n    display: flex;\n    align-items: center;\n    width: auto;\n    height: 3rem;\n    text-overflow: ellipsis;\n    justify-content: space-between;\n    background: transparent;\n    padding: 0rem 1rem;\n\n    border-radius: 0.5rem;\n    border: 0.1rem solid;\n    border-color:  white;\n  \n    // border-color: ${props => props.isNew ? 'blue' : 'white'};\n\n  ${props => props.isNew &&  commonCss.newGlow};\n  ${props => props.edited &&  commonCss.newGlow};\n  ${props => props.error &&  commonCss.errorGlow};\n    \n\n`\n\nexport const ListItemRect = styled.div`\n    height: 100%;\n    width: 100%;\n\n    border-radius: 0.5rem;\n    text-align: center;\n    padding-right:0.5rem;\n    cursor: pointer;\n    user-select: none;\n\n    border: 0.1rem solid white;\n    box-sizing: border-box;\n\n    &:hover {\n        background: ${props => props.theme.bg.octonary};\n    }\n\n`\nexport const ListItemTitle = styled.h1`\n\n    font-family: ${props => props.theme.font.primary};\n    /* font-size: ${props => props.theme.fontSize.sz3}; */\n    font-size: 1rem;\n    font-weight: 500;\n    color: ${props => props.theme.bg.octonary};\n\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    margin-right:0.5rem;\n    margin-bottom: 0rem;\n    width: 75%;\n`\n\nconst disabledCss = css`\n  color: ${props => props.theme.disabled};\n  \n  &:hover {\n    cursor: default;\n    color: ${props => props.theme.disabled};\n  }\n`\n\nexport const ListItemIcon = styled.i`\n\n    font-size: 1.3rem;\n    color: lightgreen;\n    \n\n\n\n    &:hover {\n        cursor: pointer;\n        color:green;\n    }\n  \n    ${props => props.disabled && disabledCss};\n`\n\n\n\nexport const ListItemIconContainer = styled.div`\n    position: relative;\n    display: flex;\n    //width: 10%;\n`","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { useField, useFormikContext } from \"formik\";\n\nimport ErrorTooltip from '../error_tooltip/error_tooltip';\nimport * as styled from './list_item_field.style'\nimport {getMessageFromError} from \"../../../../methods/utils/form_utils\";\n\nconst ListItemField = (props) => {\n\tconst {\n\t\tContainer,\n\t\tcontainerStyle,\n\t\tErrorTooltipContainerComponent,\n\t\tonMouseEnter,\n\t\tonMouseLeave,\n\t\tonIconClick,\n\t\tonEditClick,\n\t\tonTitleClick,\n\t\t...rest\n\t} = props\n\n\tconst { setFieldValue, setFieldTouched, validateOnChange, validateOnBlur, validateField, validateForm, ...context } = useFormikContext();\n\tconst [field, meta] = useField(rest);\n\tconst {\n\t\tvalue: fieldValue,\n\t\tname: fieldName\n\t} = field\n\n\tconst {\n\t\tname,\n\t\tnew: isNew,\n\t\tchanged,\n\t\tunsaved\n\t} = fieldValue\n\n\tconst {\n\t\ttouched,\n\t\terror\n\t} = meta\n\n\tconst hasError = error\n\tconst errorMessage = getMessageFromError(error)\n\n\tconst edited = changed\n\n\tconst disabled = hasError || isNew || edited || unsaved\n\n\n\treturn (\n\t\t<Container\n\t\t\tstyle={containerStyle}\n\t\t>\n\t\t<styled.ListItem\n\t\t\tedited={edited}\n\t\t\terror={hasError}\n\t\t\tisNew={isNew || unsaved}\n\t\t\tonMouseEnter={onMouseEnter}\n\t\t\tonMouseLeave={onMouseLeave}\n\t\t>\n\t\t\t<styled.ListItemIconContainer style={{ width: '15%' }}>\n\t\t\t\t<styled.ListItemIcon\n\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\tclassName='fas fa-play'\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tif(!disabled) onIconClick()\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</styled.ListItemIconContainer>\n\n\t\t\t{/* <styled.ListItemTitle schema={props.schema} onClick={() => props.onClick(element)}>{element.name}</styled.ListItemTitle> */}\n\t\t\t<styled.ListItemTitle\n\t\t\t\tschema={'processes'}\n\t\t\t\tonClick={onTitleClick}\n\t\t\t>\n\t\t\t\t{name}\n\t\t\t</styled.ListItemTitle>\n\n\t\t\t<styled.ListItemIconContainer>\n\n\t\t\t\t<styled.ListItemIcon\n\t\t\t\t\tclassName='fas fa-edit'\n\t\t\t\t\tonClick={onEditClick}\n\t\t\t\t\tstyle={{ color: '#c6ccd3' }}\n\t\t\t\t/>\n\n\t\t\t\t{hasError ?\n\t\t\t\t\t<ErrorTooltip\n\t\t\t\t\t\tvisible={hasError}\n\t\t\t\t\t\ttext={errorMessage}\n\t\t\t\t\t\t// className={\"fas fa-exclamation-circle\"}\n\t\t\t\t\t\t// color={\"red\"}\n\t\t\t\t\t\tContainerComponent={ErrorTooltipContainerComponent}\n\t\t\t\t\t/>\n\t\t\t\t:\n\t\t\t\t\t(isNew || unsaved) ?\n\t\t\t\t\t<ErrorTooltip\n\t\t\t\t\t\tvisible={(isNew || unsaved)}\n\t\t\t\t\t\ttext={\"This route is not saved. Leaving the editor will remove the route.\"}\n\t\t\t\t\t\tclassName={\"fas fa-exclamation-circle\"}\n\t\t\t\t\t\tcolor={\"yellow\"}\n\t\t\t\t\t\tContainerComponent={ErrorTooltipContainerComponent}\n\t\t\t\t\t/>\n\t\t\t\t\t:\n\t\t\t\t\t\tedited &&\n\t\t\t\t\t\t<ErrorTooltip\n\t\t\t\t\t\t\tvisible={edited}\n\t\t\t\t\t\t\ttext={\"This route contains unsaved changes. Leaving the editor without saving will undo your changes.\"}\n\t\t\t\t\t\t\tclassName={\"fas fa-exclamation-circle\"}\n\t\t\t\t\t\t\tcolor={\"yellow\"}\n\t\t\t\t\t\t\tContainerComponent={ErrorTooltipContainerComponent}\n\t\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t</styled.ListItemIconContainer>\n\t\t</styled.ListItem>\n\t\t</Container>\n\t);\n};\n\n/* *\n*\n* Returns style for input component\n* Accepts hasError prop, which can be used to change styling based on presence of errors\n*\n* */\nconst defaultInputStyleFunc = (hasError) => {\n\treturn {\n\t}\n}\n\n// Specifies propTypes\nListItemField.propTypes = {\n};\n\n// Specifies the default values for props:\nListItemField.defaultProps = {\n\tContainer: styled.DefaultContainer,\n\tErrorTooltipContainerComponent: styled.DefaultErrorTooltipContainerComponent,\n\tonMouseEnter: () => {},\n\tonMouseLeave: () => {},\n\tonIconClick: () => {},\n\tonEditClick: () => {},\n};\n\nexport default ListItemField;\n","import styled from 'styled-components'\nimport {Form} from \"formik\";\n\nimport * as stylec from '../../content_list/content_list.style'\n\nexport const ListItemTitle = styled(stylec.ListItemTitle)`\n`\n\nexport const ListItemIcon = styled(stylec.ListItemIcon)`\n`\n\nexport const ListItemRect = styled(stylec.ListItemRect)`\n`\n\nexport const ListItem = styled(stylec.ListItem)`\n`\n\nexport const Container = styled(stylec.Container)`\n\toverflow: hidden;\n`\n\nexport const ListItemIconContainer = styled(stylec.ListItemIconContainer)`\n\n`\n\nexport const Title = styled.h1`\n    font-family: ${props => props.theme.font.primary};\n    font-size: 1.5rem;\n    font-weight: 500;\n    color: ${props => props.theme.schema[props.schema].solid};\n    user-select: none;\n`\n\nexport const InfoText = styled.span`\n  font-family: ${props => props.theme.font.primary};\n  font-size: ${props => props.theme.fontSize.sz3};\n  color: ${props => props.theme.bg.octonary};\n`\n\nexport const SectionContainer = styled.div`\n    border-bottom: 0.1rem solid ${props => props.theme.bg.septenary};\n    margin-bottom: 1rem;\n  \tborder-top: ${props => props.showTopBorder && `0.1rem solid ${props.theme.bg.septenary}`};\n  \tmargin-top: ${props => props.showTopBorder && `1rem`};\n  \n  \twidth: 100%;\n  \n  \tpadding: 1rem .5rem;\n  \t//flex: 1;\n  overflow-y: auto;\n  overflow-x: hidden;\n  \t\n`\n\nexport const TaskContainer = styled.div`\n    background-color: ${props => props.theme.bg.tertiary};\n    border-radius: 1rem;\n  overflow: auto;\n\n`\n","import React, {useState, useEffect, useRef} from 'react'\n\n// external functions\nimport uuid from 'uuid'\nimport { useSelector, useDispatch } from 'react-redux'\n\n// internal components\nimport Textbox from '../../../../basic/textbox/textbox.js'\nimport Button from '../../../../basic/button/button'\nimport TaskField from '../../tasks/task_field/route_field'\nimport ContentHeader from '../../content_header/content_header'\nimport ConfirmDeleteModal from '../../../../basic/modals/confirm_delete_modal/confirm_delete_modal'\nimport TextField from \"../../../../basic/form/text_field/text_field\";\nimport ListItemField from \"../../../../basic/form/list_item_field/list_item_field\";\n\n// Import actions\nimport {\n    deleteRouteClean,\n    postRouteClean,\n    putRouteClean,\n    setSelectedTask,\n} from '../../../../../redux/actions/tasks_actions'\nimport { setSelectedProcess, setFixingProcess } from '../../../../../redux/actions/processes_actions'\nimport {handlePostTaskQueue, postTaskQueue} from '../../../../../redux/actions/task_queue_actions'\n\n// Import Utils\nimport {\n    generateDefaultRoute, getLoadStationDashboard,\n    getRouteProcesses,\n    isHumanTask,\n    isMiRTask\n} from \"../../../../../methods/utils/route_utils\";\nimport {isBrokenProcess, willRouteAdditionFixProcess, willRouteDeleteBreakProcess} from \"../../../../../methods/utils/processes_utils\";\nimport {isEmpty, isObject} from \"../../../../../methods/utils/object_utils\";\nimport useChange from \"../../../../basic/form/useChange\";\n\n// styles\nimport * as styled from './process_field.style'\nimport {DEVICE_CONSTANTS} from \"../../../../../constants/device_constants\";\nimport {throttle} from \"../../../../../methods/utils/function_utils\";\n\nexport const ProcessField = (props) => {\n    const {\n        formikProps,\n        onDelete,\n        onSave,\n        onBack,\n    } = props\n\n    // extract formik props\n    const {\n        errors,\n        values,\n        touched,\n        isSubmitting,\n        setFieldValue,\n        setFieldError,\n        setFieldTouched,\n        getFieldMeta,\n        validateForm\n    } = formikProps\n\n    useChange() // adds changed key to values - true if the field has changed\n\n    let errorCount = 0\n    Object.values(errors).forEach((currError) => {\n        if(!isEmpty(currError)) errorCount++\n    }) // get number of field errors\n    const touchedCount = Object.values(touched).length // number of touched fields\n    const submitDisabled = ((errorCount > 0) || (touchedCount === 0) || isSubmitting ||!values.changed) //&& (submitCount > 0) // disable if there are errors or no touched field, and form has been submitted at least once\n\n    const dispatch = useDispatch()\n    const dispatchSetSelectedTask = async (task) => await dispatch(setSelectedTask(task))\n    const dispatchSetSelectedProcess = (process) => dispatch(setSelectedProcess(process))\n    const onHandlePostTaskQueue = (props) => dispatch(handlePostTaskQueue(props))\n    const dispatchSetFixingProcess = async (bool) => await dispatch(setFixingProcess(bool))\n    const dispatchDeleteRouteClean = async (routeId) => await dispatch(deleteRouteClean(routeId))\n\n    const tasks = useSelector(state => state.tasksReducer.tasks)\n    const stations = useSelector(state => state.stationsReducer.stations)\n    const selectedTask = useSelector(state => state.tasksReducer.selectedTask)\n    const selectedProcess = useSelector(state => state.processesReducer.selectedProcess)\n    const fixingProcess = useSelector(state => state.processesReducer.fixingProcess)\n\n    const taskQueue = useSelector(state => state.taskQueueReducer.taskQueue)\n\n    // State definitions\n    const [shift, ] = useState(false) // Is shift key pressed ?\n    const [isTransportTask, ] = useState(true) // Is this task a transport task (otherwise it may be a 'go to idle' type task)\n    const [editingTask, setEditingTask] = useState(false) // Used to tell if a task is being edited\n    const [confirmDeleteModal, setConfirmDeleteModal] = useState(false);\n    const [showExistingTaskWarning, setShowExistingTaskWarning] = useState(false);\n\n    const valuesRef = useRef(values);\n\n    // throttled func\n    const [dispatchSetSelectedProcess_Throttled, ] = useState(()=>throttle(\n        ()=> {\n            if(valuesRef.current) dispatchSetSelectedProcess({\n                ...valuesRef.current,\n            })\n        }, 500));\n\n    useEffect(() => {\n        valuesRef.current = values;\n    }, [values]);\n\n    useEffect(() => {\n\n        // update selectedProcess (throttled to reduce lag from updating constantly\n        dispatchSetSelectedProcess_Throttled()\n\n        return () => {}\n\n    }, [values]);\n\n    useEffect(() => {\n\n        // when editing task is toggled off, reset newRoute\n        if(!editingTask) {\n            setFieldTouched(\"newRoute\", {})\n            setFieldError(\"newRoute\", {})\n            setFieldValue(\"newRoute\", null)\n        }\n\n    }, [editingTask])\n\n    const handleAddTask = async () => {\n\n        // contains new route\n        if(values.newRoute) {\n            // extract newRoute values\n            const {\n                needsSubmit,    // remove from route\n                new: isNew,     // remove from route\n                temp,\n                ...remainingRoute\n            } = values.newRoute || {}\n\n            const {\n                insertIndex\n            } = temp || {}\n\n            // add unsaved key if route being added doesn't already exist - used to determine if a route has been saved or not\n            var newRoute\n            if(tasks[remainingRoute._id]) {\n                // task exists\n                newRoute = {...remainingRoute}\n            }\n            else {\n                // task doesn't exist, add unsaved key\n                newRoute = {...remainingRoute, new: isNew}\n            }\n\n            // make copy of routes\n            let updatedRoutes = [...values.routes]\n\n            // add route to values at broken index\n            updatedRoutes.splice(insertIndex, 0, newRoute)\n\n            // update values\n            setFieldValue(\"routes\", updatedRoutes)\n            setFieldValue(\"broken\", isBrokenProcess(updatedRoutes))\n            setEditingTask(false)\n        }\n\n        // not a new route\n        else {\n            // get data for route being edited\n            const fieldMeta = getFieldMeta(editingTask)\n            const {\n                value: currRouteValue,\n            } = fieldMeta\n\n            const routeProcesses = getRouteProcesses(currRouteValue._id) // get routes processes\n            const belongsToAnotherProcess = routeProcesses.findIndex((currProcess) => currProcess._id !== values._id) // does route belong to another process?\n\n            // if route belongs to more than one process, give option to make a copy of the route so other processes won't be affected\n            if(belongsToAnotherProcess !== -1) {\n                setShowExistingTaskWarning(true)\n            }\n\n            // if it only belongs to one process, go ahead and update it\n            else {\n                updateExistingRoute()\n            }\n\n        }\n\n        // clear newRoute and selectedTask\n        setFieldValue(\"newRoute\", null)\n        dispatchSetSelectedTask(null)\n\n        validateForm() // run validation so errors will show up right away\n    }\n\n    // clear selectedTask and add new route to values.routes\n    const updateExistingRoute = () => {\n        const fieldMeta = getFieldMeta(editingTask)\n        const {\n            value: currRouteValue,\n        } = fieldMeta\n\n        const {\n            needsSubmit,\n            ...remainingValues\n        } = currRouteValue || {}\n\n\n        setFieldValue(\"broken\", isBrokenProcess(values.routes, tasks))\n        setFieldValue(editingTask, {...remainingValues})\n        setEditingTask(false)\n        dispatchSetSelectedTask(null)\n    }\n\n    const cloneRoute = async () => {\n        // get current route's meta data\n        const fieldMeta = getFieldMeta(editingTask)\n        const {\n            initialValue,\n            value: currRouteValue,\n        } = fieldMeta\n\n\n        const {\n            changed,\n            needsSubmit,\n            ...remainingValues\n        } = currRouteValue || {}\n\n\n        const newId = uuid.v4()\n        const routeClone = {...remainingValues, _id: newId, new: true} // copy all attributes, but make new id\n\n        // Not a new process, so save changes now\n        if(!values.new) {\n\n            const index = editingTask.match(/\\d+/)[0] // \"3\"\n            const updatedRoutes = [...values.routes]\n            updatedRoutes.splice(index, 1, routeClone) // replace existing route with new clone\n\n            setFieldValue(\"routes\", updatedRoutes)\n        }\n\n        else {\n            // if process doesn't exist yet, just add to field\n            setFieldValue(editingTask, {...routeClone, new: true})\n        }\n\n        // if not new route, only thing to check is if any changes broke the process\n        setFieldValue(\"broken\", isBrokenProcess(values.routes, tasks))\n        setEditingTask(false)\n        dispatchSetSelectedTask(null)\n    }\n\n    /**\n     * Removes the route from the array of routes for a process\n     */\n    const handleRemoveRoute = (routeId) => {\n\n        // clear editing values\n        setEditingTask(false)\n        setFieldValue(\"newRoute\", null)\n        dispatchSetSelectedTask(null)\n\n        // update broken\n        const willBreak = willRouteDeleteBreakProcess(values.routes, routeId)\n        setFieldValue(\"broken\", willBreak)\n\n        // Remove the route from the process\n        const index = values.routes.findIndex((currRoute) => currRoute._id === routeId)\n        let updatedRoutes = [...values.routes]\n        updatedRoutes.splice(index, 1)\n\n        // update routes\n        setFieldValue(\"routes\", updatedRoutes)\n    }\n\n    const handleTaskBack = async () => {\n        // clear newRoute and selectedTask\n        setFieldValue(\"newRoute\", null)\n        await dispatchSetSelectedTask(null)\n        setEditingTask(false)\n\n        // run validation\n        validateForm()\n    }\n\n    const handleDeleteRoute = async (routeId) => {\n        setEditingTask(false)\n        dispatchSetSelectedTask(null)\n\n        const willBreak = willRouteDeleteBreakProcess(values.routes, routeId)\n        setFieldValue(\"broken\", willBreak)\n\n        await dispatchDeleteRouteClean(routeId)\n\n        setFieldValue(\"routes\", values.routes.filter(((currRoute) => currRoute._id !== routeId)))\n    }\n\n    const handleExecuteProcessTask = async (routeId) => {\n        const task = tasks[routeId] || null\n        if(!isObject(task)) return\n\n        const routeName = task.name\n\n        let deviceType\n        if(isMiRTask(task)) {\n            // if MiR is available, default to MiR\n            deviceType = DEVICE_CONSTANTS.MIR_100\n        }\n        else if(isHumanTask(task)){\n            // otherwise if human is available, submit human\n            deviceType = DEVICE_CONSTANTS.HUMAN\n        }\n\n        const dashboardID = getLoadStationDashboard(selectedTask)\n\n        onHandlePostTaskQueue({dashboardID, tasks, deviceType, taskQueue, Id: routeId, name: routeName, custom: false, fromSideBar: true})\n    }\n\n    // Maps through the list of existing routes\n    const renderRoutes = (routes) => {\n\n        return routes.filter((currRoute, currIndex) => {\n\n            if (currRoute === undefined) {\n                return false\n            }\n            return true\n\n        }).map((currRoute, currIndex) => {\n\n            const {\n                _id: currRouteId = \"\",\n            } = currRoute || {}\n\n            const isLast = currIndex === routes.length - 1\n            const fieldName = `routes[${currIndex}]`\n\n            return (\n                <div key={`li-${currIndex}`}>\n                    <ListItemField\n                        containerStyle={{marginBottom: isLast ? 0 : \"1rem\"}}\n                        name={fieldName}\n                        onMouseEnter={() => {\n                            if (!selectedTask && !editingTask) {\n                                dispatchSetSelectedTask(currRoute)\n                            }\n\n                        }}\n                        onMouseLeave={() => {\n                            if (selectedTask !== null && !editingTask) {\n                                dispatchSetSelectedTask(null)\n                            }\n                        }}\n                        onIconClick={() => {\n                            handleExecuteProcessTask(currRouteId)\n                        }}\n                        onEditClick={() => {\n                            setEditingTask(fieldName)\n                            dispatchSetSelectedTask(currRoute)\n                        }}\n                        onTitleClick={() => {\n                            setEditingTask(fieldName)\n                            dispatchSetSelectedTask(currRoute)\n                        }}\n                        key={`li-${currIndex}`}\n                    />\n\n\n\n                    {/* If the process is broken and it's at the broken index, then show a button there to fix it */}\n                    {(!!values.broken && currIndex === values.broken - 1) &&\n\n                    <Button\n                        schema={'devices'}\n                        // disabled={!!selectedProcess && !!selectedProcess._id && !!selectedProcess.new}\n                        style={{margin: 0, marginBottom: '1rem', width: \"100%\", textOverflow: 'ellipsis', whiteSpace: 'nowrap', overflow: 'hidden'}}\n                        secondary\n                        disabled={selectedTask?.new}\n                        onClick={() => {\n                            let prevObj\n                            if(values.routes.length > 0) {\n                                prevObj = values.routes[values.routes.length - 1].obj\n                            }\n\n                            const newTask = {...generateDefaultRoute(prevObj), temp: {insertIndex: values.broken}}\n\n                            dispatchSetSelectedTask(newTask)\n                            setFieldValue(\"newRoute\", newTask)\n\n                            // Tells the map that the new task is supposed to be fixing the process\n                            // This means instead of only allowing to to pick a location that belongs to the last route\n                            // Now you must pick a location that is connected to the location before the broken route occurs\n                            dispatchSetFixingProcess(true)\n                            setEditingTask(\"newRoute\")\n                        }}\n                    >\n                        Add Route To Fix Process\n                    </Button>\n\n                    }\n                </div>\n            )\n        })\n    }\n\n    const handleAddRoute = () => {\n\n        return (\n            <>\n                <Button\n                    schema={'processes'}\n                    // disabled={!!selectedProcess && !!selectedProcess._id && !!selectedProcess.new}\n                    secondary\n                    disabled={editingTask}\n                    onClick={() => {\n\n                        let prevObj\n                        if(values.routes.length > 0) {\n                            prevObj = values.routes[values.routes.length - 1].obj\n                        }\n\n                        const newTask = {...generateDefaultRoute(prevObj), temp: {insertIndex: values.routes.length}}\n                        setFieldValue(\"newRoute\", newTask)\n                        dispatchSetSelectedTask(newTask)\n                        setEditingTask(\"newRoute\")\n                    }}\n                >\n                    Add Route\n                </Button>\n\n            </>\n        )\n    }\n\n    const handleAddBeginningRoute = () => {\n\n        return (\n            <>\n                <Button\n                    schema={'processes'}\n                    // disabled={!!selectedProcess && !!selectedProcess._id && !!selectedProcess.new}\n                    secondary\n                    disabled={editingTask}\n                    onClick={() => {\n\n                        let prevObj\n                        if(values.routes.length > 0) {\n                            prevObj = values.routes[values.routes.length - 1].obj\n                        }\n\n                        const newTask = {...generateDefaultRoute(prevObj), temp: {insertIndex: 0}}\n\n                        setFieldValue(\"newRoute\", newTask)\n                        dispatchSetSelectedTask(newTask)\n                        setEditingTask(\"newRoute\")\n                    }}\n                >\n                    Add Route To Beginning\n                </Button>\n\n            </>\n        )\n    }\n\n    const getChildren = () => {\n        const fieldMeta = getFieldMeta(editingTask)\n        const {\n            value: currRouteValue,\n        } = fieldMeta\n        const routeProcesses = getRouteProcesses(currRouteValue._id)\n\n        return(\n            <div>\n                {routeProcesses.map((currProcess) => {\n                    const {\n                        name: currProcessName\n                    } = currProcess\n\n                    return <div>{currProcessName} aaaa</div>\n                })}\n            </div>\n\n        )\n    }\n    return(\n        <>\n          {selectedProcess.routes.length !==0 ?\n            <ConfirmDeleteModal\n                isOpen={!!confirmDeleteModal}\n                title={\"Are you sure you want to delete this process?\"}\n                button_1_text={\"Delete process and KEEP associated routes\"}\n                button_2_text={\"Delete process and DELETE associated routes\"}\n                handleClose={() => setConfirmDeleteModal(null)}\n                handleOnClick1={() => {\n                    onDelete(false)\n                    setConfirmDeleteModal(null)\n                }}\n                handleOnClick2={() => {\n                    onDelete(true)\n                    setConfirmDeleteModal(null)\n                }}\n            />\n            :\n            <ConfirmDeleteModal\n                isOpen={!!confirmDeleteModal}\n                title={\"Are you sure you want to delete this process?\"}\n                button_1_text={\"Yes\"}\n                button_2_text={\"No\"}\n                handleClose={() => setConfirmDeleteModal(null)}\n                handleOnClick1={() => {\n                  onDelete(true)\n                  setConfirmDeleteModal(null)\n                }}\n                handleOnClick2={() => {\n                  setConfirmDeleteModal(null)\n\n                }}\n            />\n\n          }\n\n\n            {showExistingTaskWarning &&\n            <ConfirmDeleteModal\n                isOpen={!!showExistingTaskWarning}\n                title={\"Changing an existing route will affect other processes that use this route. Would you like to make a copy, or change the existing route?\"}\n                button_1_text={\"Make a Copy\"}\n                button_2_text={\"Change the Existing Route\"}\n                handleClose={() => setShowExistingTaskWarning(false)}\n                children={getChildren()}\n                handleOnClick1={() => {\n                    cloneRoute()\n                    setShowExistingTaskWarning(false)\n                }}\n                handleOnClick2={() => {\n                    updateExistingRoute()\n                    setShowExistingTaskWarning(false)\n\n                }}\n            />\n            }\n\n            <styled.Container>\n                <div style={{ marginBottom: '1rem' }}>\n                    <ContentHeader\n                        content={'processes'}\n                        mode={'create'}\n                        disabled={(!!selectedTask && !!editingTask) || submitDisabled}\n                        onClickSave={() => {\n                            onSave(values, true)\n                        }}\n\n                        onClickBack={() => {\n                            onBack()\n                        }}\n\n                    />\n                </div>\n\n                <div style={{marginBottom: \"1rem\"}}>\n                    <TextField\n                        focus={!values.name}\n                        placeholder='Process Name'\n                        defaultValue={values.name}\n                        schema={'processes'}\n                        name={`name`}\n                        InputComponent={Textbox}\n                        style={{ fontSize: '1.2rem', fontWeight: '600'}}\n                        textboxContainerStyle={{border: \"none\"}}\n                    />\n                </div>\n\n                {editingTask && selectedTask ?\n                <styled.TaskContainer schema={'processes'}>\n                    <TaskField\n                        {...formikProps}\n                        isNew={editingTask === \"newRoute\"}\n                        onRemove={handleRemoveRoute}\n                        onDelete={handleDeleteRoute}\n                        onBackClick={handleTaskBack}\n                        onSave={handleAddTask}\n                        fieldParent={editingTask}\n                        shift={shift}\n                        isTransportTask={isTransportTask}\n                        isProcessTask={true}\n                        toggleEditing={(props) => {\n                            setEditingTask(props)\n                        }}\n                    />\n                </styled.TaskContainer>\n                    :\n                    <>\n                        <styled.Title schema={'processes'}>Associated Routes</styled.Title>\n\n                        {values.routes.length > 0 && handleAddBeginningRoute()}\n\n                        <styled.SectionContainer\n                            showTopBorder={values.routes.length > 0}\n                        >\n                            {values.routes.length > 0 ?\n                                renderRoutes(values.routes)\n                                :\n                                <styled.InfoText></styled.InfoText>\n\n                            }\n                        </styled.SectionContainer>\n\n                        {handleAddRoute()}\n\n                        {/*<div style={{ height: \"100%\", paddingTop: \"1rem\" }} />*/}\n\n                        {/* Delete Task Button */}\n                        <Button\n                            schema={'processes'}\n                            disabled={!!selectedProcess && !!selectedProcess._id && !!selectedProcess.new}\n                            style={{ marginBottom: '0rem', borderColor: 'red' }}\n                            secondary\n                            onClick={() => {\n                                setConfirmDeleteModal(true)\n                            }}\n                        >\n                            Delete\n                        </Button>\n                    </>\n                }\n\n\n\n            </styled.Container>\n        </>\n\n    )\n}\n\nexport default ProcessField\n","export const throttle = (func, limit) => {\n    let lastFunc\n    let lastRan\n    return function() {\n        const context = this\n        const args = arguments\n        if (!lastRan) {\n            func.apply(context, args)\n            lastRan = Date.now()\n        } else {\n            clearTimeout(lastFunc)\n            lastFunc = setTimeout(function() {\n                if ((Date.now() - lastRan) >= limit) {\n                    func.apply(context, args)\n                    lastRan = Date.now()\n                }\n            }, limit - (Date.now() - lastRan))\n        }\n    }\n}","import {useDispatch, useSelector} from \"react-redux\";\nimport {Formik} from \"formik\";\nimport {processSchema} from \"../../../../../methods/utils/form_schemas\";\nimport React, {useEffect} from \"react\";\nimport {ProcessField} from \"../process_field/process_field\";\nimport uuid from 'uuid'\nimport {\n\tdeleteRouteClean,\n\tdeleteTask,\n\tputRouteClean,\n\tputTask, saveFormRoute,\n\tsetSelectedTask\n} from \"../../../../../redux/actions/tasks_actions\";\nimport {\n\tdeleteProcesses,\n\tpostProcesses,\n\tputProcesses,\n\tsetSelectedProcess\n} from \"../../../../../redux/actions/processes_actions\";\nimport * as taskActions from \"../../../../../redux/actions/tasks_actions\";\nimport {isObject} from \"../../../../../methods/utils/object_utils\";\nimport {isArray} from \"../../../../../methods/utils/array_utils\";\n\nconst ProcessForm = (props) => {\n\n\tconst {\n\t\ttoggleEditingProcess,\n\t} = props\n\n\tconst dispatchSetSelectedTask = (task) => dispatch(setSelectedTask(task))\n\n\n\tconst dispatch = useDispatch()\n\tconst dispatchPostProcess = async (process) => await dispatch(postProcesses(process))\n\n\tconst dispatchPutProcess = async (process) => await dispatch(putProcesses(process))\n\n\tconst dispatchPostRouteClean = async (route) => await dispatch(taskActions.postRouteClean(route))\n\tconst dispatchPutRouteClean = (task, ID) => dispatch(putRouteClean(task, ID))\n\n\tconst dispatchSetSelectedProcess = (process) => dispatch(setSelectedProcess(process))\n\tconst dispatchDeleteProcess = async (ID) => await dispatch(deleteProcesses(ID))\n\tconst dispatchDeleteRouteClean = (routeId) => dispatch(deleteRouteClean(routeId))\n\tconst dispatchSaveFormRoute = async (formRoute) => await dispatch(saveFormRoute(formRoute))\n\n\tconst tasks = useSelector(state => state.tasksReducer.tasks)\n\tconst selectedProcess = useSelector(state => state.processesReducer.selectedProcess)\n\tconst objects = useSelector(state => state.objectsReducer.objects)\n\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t\tdispatchSetSelectedTask(null)\n\t\t\tdispatchSetSelectedProcess(null)\n\t\t}\n\t}, []);\n\n\tconst handleSave = async (values, close) => {\n\n\t\t// extract some values\n\t\tconst {\n\t\t\tnewRoute,\n\t\t\tchanged,\n\t\t\t...remainingValues\n\t\t} = values\n\n\t\t// perform any updates for routes\n\t\tfor (const currRoute of remainingValues.routes) {\n\t\t\tawait dispatchSaveFormRoute(currRoute)\n\t\t\tcleanRoute(currRoute)\n\t\t}\n\n\t\tdispatchSetSelectedTask(null) // clear selected task\n\t\tconst mappedRoutes = remainingValues.routes.map((currRoute) => currRoute._id)\n\n\t\t// if new, POST\n\t\tif (remainingValues.new) {\n\t\t\tawait dispatchPostProcess({\n\t\t\t\t...remainingValues,\n\t\t\t\troutes: mappedRoutes\n\t\t\t})\n\t\t}\n\n\t\t// Else put\n\t\telse {\n\t\t\tawait dispatchPutProcess({\n\t\t\t\t...remainingValues,\n\t\t\t\troutes: mappedRoutes\n\t\t\t})\n\t\t}\n\n\t\t// close editor\n\t\tif(close) {\n\t\t\tdispatchSetSelectedProcess(null)\n\t\t\ttoggleEditingProcess(false)\n\t\t}\n\t}\n\n\t// remove keys from route that shouldn't be saved\n\tconst cleanRoute = (route) => {\n\t\tdelete route.new\n\t\tdelete route.changed\n\t\tdelete route.needsSubmit\n\t\tdelete route.unsaved\n\t}\n\n\tconst handleBack = async () => {\n\t\t// clear selectedTask, selectedProcess, and set toggleEditing to false\n\t\tawait dispatchSetSelectedTask(null)\n\t\tdispatchSetSelectedProcess(null)\n\t\ttoggleEditingProcess(false)\n\t}\n\n\n\n\tconst handleDelete = (withRoutes) => {\n\t\tif(withRoutes) {\n\t\t\thandleDeleteWithRoutes()\n\t\t}\n\n\t\telse {\n\t\t\thandleDeleteWithoutRoutes()\n\t\t}\n\t}\n\tconst handleDeleteWithRoutes = async () => {\n\n\t\t// If there's routes in this process, delete the routes\n\t\tif (selectedProcess.routes.length > 0) {\n\t\t\tselectedProcess.routes.forEach(route => {\n\t\t\t\tif(isObject(route)) {\n\t\t\t\t\tdispatchDeleteRouteClean(route._id)\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdispatchDeleteRouteClean(route)\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tawait dispatchDeleteProcess(selectedProcess._id)\n\n\t\tdispatchSetSelectedTask(null)\n\t\tdispatchSetSelectedProcess(null)\n\t\ttoggleEditingProcess(false)\n\t}\n\n\tconst handleDeleteWithoutRoutes = async () => {\n\n\t\tawait dispatchDeleteProcess(selectedProcess._id)\n\n\t\tdispatchSetSelectedTask(null)\n\t\tdispatchSetSelectedProcess(null)\n\t\ttoggleEditingProcess(false)\n\t}\n\n\tconst handleDefaultObj = (objId, prevObj) => {\n\n\t\tif(isObject(objects[objId])) {\n\t\t\treturn objects[objId]\n\t\t}\n\t\telse if (prevObj) {\n\t\t\treturn prevObj\n\t\t}\n\t\telse {\n\t\t\treturn null\n\t\t}\n\t}\n\n\tconst handleInitialRoutes = () => {\n\t\tif(selectedProcess && selectedProcess.routes && Array.isArray(selectedProcess.routes)) {\n\t\t\tlet prevObj = null\n\n\t\t\treturn selectedProcess.routes\n\t\t\t\t.filter((currRouteItem) => {\n\t\t\t\t\treturn isObject(isObject(currRouteItem) ? currRouteItem : tasks[currRouteItem])\n\t\t\t\t})\n\t\t\t\t.map((currRouteItem) => {\n\n\t\t\t\tconst route = isObject(currRouteItem) ? currRouteItem : tasks[currRouteItem]\n\n\t\t\t\tconst obj = handleDefaultObj(route.obj, prevObj)\n\t\t\t\tprevObj = obj\n\n\t\t\t\treturn {\n\t\t\t\t\t...route,\n\t\t\t\t\tobj\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\t// otherwise initialize to empty array\n\t\treturn []\n\n\t}\n\n\n\treturn (\n\t\t<Formik\n\t\t\tinitialValues={{\n\t\t\t\tname: selectedProcess ? selectedProcess.name : \"\",\n\t\t\t\troutes: handleInitialRoutes(),\n\t\t\t\tbroken: selectedProcess ? selectedProcess.broken : false,\n\t\t\t\t_id: selectedProcess ? selectedProcess._id : uuid.v4(),\n\t\t\t\tnew: selectedProcess.new,\n\t\t\t\tnewRoute: null\n\t\t\t}}\n\n\t\t\t// validation control\n\t\t\tvalidationSchema={processSchema}\n\t\t\tvalidateOnChange={true}\n\t\t\tvalidateOnMount={false} // leave false, if set to true it will generate a form error when new data is fetched\n\t\t\tvalidateOnBlur={true}\n\n\t\t\t// enableReinitialize={true} // leave false, otherwise values will be reset when new data is fetched for editing an existing item\n\t\t\tonSubmit={async (values, formikHelpers) => {\n\n\t\t\t\tconst {\n\t\t\t\t\tsetSubmitting,\n\t\t\t\t\tsetTouched,\n\t\t\t\t\tresetForm\n\t\t\t\t} = formikHelpers\n\n\t\t\t\t// set submitting to true, handle submit, then set submitting to false\n\t\t\t\t// the submitting property is useful for eg. displaying a loading indicator\n\t\t\t\tconst {\n\t\t\t\t\tbuttonType\n\t\t\t\t} = values\n\n\t\t\t\tsetSubmitting(true)\n\t\t\t\t// await handleSubmit(values, formMode)\n\t\t\t\tsetTouched({}) // after submitting, set touched to empty to reflect that there are currently no new changes to save\n\t\t\t\tsetSubmitting(false)\n\n\t\t\t}}\n\t\t>\n\t\t\t{formikProps => {\n\t\t\t\tconst {\n\t\t\t\t\tsetSubmitting,\n\t\t\t\t\tsubmitForm,\n\t\t\t\t\tsetTouched,\n\t\t\t\t\tresetForm,\n\t\t\t\t\tsetFieldValue\n\t\t\t\t} = formikProps\n\n\n\t\t\t\treturn(\n\t\t\t\t\t<ProcessField\n\t\t\t\t\t\tonSave={async (values, close) => {\n\t\t\t\t\t\t\tsetSubmitting(true)\n\t\t\t\t\t\t\tawait handleSave(values, close)\n\t\t\t\t\t\t\tsetTouched({}) // after submitting, set touched to empty to reflect that there are currently no new changes to save\n\t\t\t\t\t\t\tsetSubmitting(false)\n\n\t\t\t\t\t\t\t// reset changed to false\n\t\t\t\t\t\t\tsetFieldValue(\"changed\", false)\n\n\n\t\t\t\t\t\t\t// resetForm()\n\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonBack={handleBack}\n\t\t\t\t\t\tonDelete={handleDelete}\n\t\t\t\t\t\tformikProps={formikProps}\n\t\t\t\t\t\ttoggleEditingProcess={toggleEditingProcess}\n\t\t\t\t\t/>\n\t\t\t\t)\n\t\t\t}}\n\t\t</Formik>\n\t)\n}\n\nexport default ProcessForm","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory } from \"react-router-dom\";\n\nimport * as styled from './processes_content.style'\n\n// Import basic components\nimport ContentHeader from '../content_header/content_header'\nimport Textbox from '../../../basic/textbox/textbox.js'\nimport Button from '../../../basic/button/button'\nimport DropDownSearch from '../../../basic/drop_down_search_v2/drop_down_search'\nimport TextBoxSearch from '../../../basic/textbox_search/textbox_search'\n\nimport ContentList from '../content_list/content_list'\n\n// Import actions\nimport { setSelectedProcess, editingProcess, putProcesses } from '../../../../redux/actions/processes_actions'\nimport { postTaskQueue } from '../../../../redux/actions/task_queue_actions'\n\n// Import Utils\nimport { deepCopy } from '../../../../methods/utils/utils'\nimport { isBrokenProcess } from '../../../../methods/utils/processes_utils'\n\nimport uuid from 'uuid'\nimport { uuidv4 } from \"../../../../methods/utils/utils\";\nimport ProcessForm from \"./process_form/process_form\";\n\nconst ProcessesContent = () => {\n\n    const history = useHistory()\n\n    const dispatch = useDispatch()\n    const dispatchSetSelectedProcess = (process) => dispatch(setSelectedProcess(process))\n    const dispatchEditing = (props) => dispatch(editingProcess(props))\n    const dispatchPutProcess = (process) => dispatch(putProcesses(process))\n\n    let tasks = useSelector(state => state.tasksReducer.tasks)\n    let selectedTask = useSelector(state => state.tasksReducer.selectedTask)\n    const selectedProcess = useSelector(state => state.processesReducer.selectedProcess)\n    const processes = useSelector(state => state.processesReducer.processes)\n    const editing = useSelector(state => state.processesReducer.editingProcess)\n\n    // State definitions\n    const [shift, setShift] = useState(false) // Is shift key pressed ?\n    const [isTransportTask, setIsTransportTask] = useState(true)\n\n\n    useEffect(() => {\n\n        return () => {\n            dispatchSetSelectedProcess(null)\n        }\n    }, [])\n\n    useEffect(() => {\n        // Maps through all process and sees if they're broken\n        Object.values(processes).map((process) => {\n            const processRoutes = process.routes.map((currRoute) => tasks[currRoute]) || {}\n\n            // If it was previously broken, but not anymore, then correct that ish\n            if (!!process.broken && !isBrokenProcess(processRoutes, tasks)) {\n                process.broken = null\n                dispatchPutProcess(process)\n            }\n\n            // Else if the process is broken, so fix that ish\n            else if (!!isBrokenProcess(processRoutes, tasks) && process.broken === null) {\n                process.broken = isBrokenProcess(processRoutes, tasks)\n                dispatchPutProcess(process)\n            }\n        })\n        return () => {\n        }\n    }, [processes])\n\n\n    const onCardView = (element) => {\n        const currentPath = history.location.pathname\n        history.push(currentPath + '/' + element._id + \"/lots\")\n    }\n\n    if (editing && selectedProcess !== null) { // Editing Mode\n        return (\n            <ProcessForm\n                toggleEditingProcess={props => dispatchEditing(props)}\n            />\n        )\n    } else {    // List Mode\n        return (\n            <ContentList\n                title={'Processes'}\n                schema={'processes'}\n                // elements={Object.values(tasks)}\n                elements={Object.values(processes)}\n                onMouseEnter={(process) => dispatchSetSelectedProcess(process)}\n                onMouseLeave={() => dispatchSetSelectedProcess(null)}\n                handleCardView={(element) => onCardView(element)}\n                onClick={(process) => {\n                    // If task button is clicked, start editing it\n                    dispatchSetSelectedProcess(process)\n                    dispatchEditing(true)\n                }}\n                onPlus={() => {\n                    const newProcess = {\n                        name: '',\n                        _id: uuid.v4(),\n                        new: true,\n                        routes: [],\n                        broken: null,\n                    }\n                    // TODO: May have to do this with processes\n                    // dispatch(taskActions.addTask(newTask))\n                    dispatchSetSelectedProcess(newProcess)\n                    dispatchEditing(true)\n                }}\n            />\n        )\n    }\n}\n\nexport default ProcessesContent\n","import styled from 'styled-components'\nimport {globStyle} from '../../../global_style'\n\nexport const Header = styled.h1`\n    color: ${globStyle.black};\n    font-size: ${globStyle.lrgFontSize};\n    font-family: ${globStyle.font};\n    margin-bottom: 1rem;\n`;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport * as styled from './settings.style'\n\nimport ContentHeader from '../content_header/content_header'\n\n// Import Components\nimport Textbox from '../../../basic/textbox/textbox'\nimport Header from '../../../basic/header/header'\nimport SmallButton from '../../../basic/small_button/small_button'\nimport Switch from 'react-ios-switch';\n\nimport TimezonePicker, { timezones } from 'react-timezone';\n\nimport Button from \"../../../basic/button/button\";\n\n// Import Actions\nimport { postSettings, getSettings } from '../../../../redux/actions/settings_actions'\nimport { postLocalSettings } from '../../../../redux/actions/local_actions'\nimport { deviceEnabled } from '../../../../redux/actions/settings_actions'\nimport { getStatus } from '../../../../redux/actions/status_actions'\nimport { postStatus } from '../../../../api/status_api'\nimport { setCurrentMap } from '../../../../redux/actions/map_actions'\n\n// Import Utils\nimport { isEquivalent } from '../../../../methods/utils/utils'\nimport DropDownSearch from \"../../../basic/drop_down_search_v2/drop_down_search\";\nimport * as taskActions from \"../../../../redux/actions/tasks_actions\";\n\nconst Settings = () => {\n\n    const dispatch = useDispatch()\n    const onPostSettings = (settings) => dispatch(postSettings(settings))\n    const onGetSettings = () => dispatch(getSettings())\n    const onPostLocalSettings = (settings) => dispatch(postLocalSettings(settings))\n    const onSetCurrentMap = (map) => dispatch(setCurrentMap(map))\n    const onGetStatus = () => dispatch(getStatus())\n    const onDeviceEnabled = (bool) => dispatch(deviceEnabled(bool))\n\n    const mapReducer = useSelector(state => state.mapReducer)\n    const serverSettings = useSelector(state => state.settingsReducer.settings)\n    const localSettings = useSelector(state => state.localReducer.localSettings)\n    const status = useSelector(state => state.statusReducer.status)\n    const MiRMapEnabled = useSelector(state => state.localReducer.localSettings.MiRMapEnabled)\n    const devices = useSelector(state =>state.devicesReducer.devices)\n    const deviceEnabledSetting = serverSettings.deviceEnabled\n    const {\n        currentMap,\n        maps\n    } = mapReducer\n\n    const [serverSettingsState, setServerSettingsState] = useState({})\n    const [localSettingsState, setLocalSettingsState] = useState({})\n    const [mapSettingsState, setMapSettingsState] = useState(currentMap)\n    const [mirUpdated, setMirUpdated] = useState(false)\n    const [devicesEnabled, setDevicesEnabled] = useState(!!deviceEnabledSetting)\n\n    /**\n     *  Sets current settings to state so that changes can be discarded or saved\n     * */\n    useEffect(() => {\n        setServerSettingsState(serverSettings)\n        setLocalSettingsState(localSettings)\n    }, [])\n\n\n    /**\n     * Handles updating settings on the server\n     * All devices that are connected to the server will have these settings\n     */\n    const handleUpdateServerSettings = (setting) => {\n\n        const key = Object.keys(setting)[0]\n        const value = Object.values(setting)[0]\n\n        const updatedSettings = {\n            ...serverSettingsState,\n            [key]: value,\n        }\n\n        setServerSettingsState(updatedSettings)\n\n    }\n\n    /**\n     * Handles updating settings on the device\n     * These are device specific settings,\n     * Changing these will only effect the current device\n     */\n    const handleUpdateLocalSettings = (setting) => {\n\n        const key = Object.keys(setting)[0]\n        const value = Object.values(setting)[0]\n\n        const updatedSettings = {\n            ...localSettingsState,\n            [key]: value,\n        }\n\n        console.log(updatedSettings)\n        \n        setLocalSettingsState(updatedSettings)\n\n    }\n\n    // Submits the Mir Connection to the backend\n    const handleMirConnection = async () => {\n        // Tells the backend that a new mir ip has been entered\n        const mir = { mir_connection: 'connecting' }\n\n        // post both settiings and status because the IP address is in settings but the backend knows it was updated from the status\n        await onPostSettings(serverSettingsState)\n        await postStatus(mir)\n\n        setMirUpdated(false)\n\n    }\n\n    // Submits settings to the backend\n    const handleSumbitSettings = async () => {\n        // Sees if either settings have changed. If the state settigns and redux settings are different, then they've changed\n        const localChange = isEquivalent(localSettingsState, localSettings)\n        const serverChange = isEquivalent(serverSettingsState, serverSettings)\n        const mapChange = !isEquivalent(mapSettingsState, currentMap)\n        const deviceChange = isEquivalent(deviceEnabled, deviceEnabledSetting)\n\n        if (!localChange) {\n            await onPostLocalSettings(localSettingsState)\n            if(localSettingsState.mapViewEnabled){\n              //const hamburger = document.querySelector('.hamburger')\n              //hamburger.classList.toggle('is-active')\n            }\n\n        }\n\n        if (!serverChange) {\n            delete serverSettingsState._id\n            await onPostSettings(serverSettingsState)\n        }\n\n        if (mapChange) {\n            // await onPostLocalSettings(localSettingsState)\n            await onSetCurrentMap(mapSettingsState)\n        }\n\n        if(!deviceChange) {\n          await onDeviceEnabled(devicesEnabled)\n          await onPostSettings(serverSettingsState)\n        }\n\n        await onGetSettings()\n        await onGetStatus()\n\n    }\n\n    // Handles Time zone (NOT WORKING)\n    const TimeZone = () => {\n\n\n        return (\n            <styled.SettingContainer>\n\n                <styled.Header>Time Zone (NOT WORKING)</styled.Header>\n\n                <TimezonePicker\n                    value='Pacific/Honolulu'\n                    onChange={() => {}}\n                    inputProps={{\n                        placeholder: 'Select Timezone ...',\n                        name: 'timezone',\n                    }}\n                    style={{ width: '100%' }}\n\n                />\n            </styled.SettingContainer>\n\n        )\n    }\n\n    // Handles the MIR IP connectiong\n    const MirIp = () => {\n\n        let connectionIcon = ''\n        let connectionText = ''\n\n        // Sets the connection variables according to the state of\n        if (mirUpdated) {\n            connectionIcon = 'fas fa-question'\n            connectionText = 'Not Connected'\n        }\n        else if (status.mir_connection === 'connected') {\n            connectionIcon = 'fas fa-check'\n            connectionText = 'Connected'\n        }\n        else if (status.mir_connection === 'connecting') {\n            connectionIcon = 'fas fa-circle-notch fa-spin'\n            connectionText = 'Connecting'\n        }\n        else if (status.mir_connection === 'failed') {\n            connectionIcon = 'fas fa-times'\n            connectionText = 'Failed'\n        }\n        else {\n            connectionIcon = 'fas fa-question'\n            connectionText = 'Not Connected'\n\n        }\n\n        if (MiRMapEnabled) {\n            return (\n                <styled.SettingContainer style={{ marginTop: '1rem' }}>\n\n\n\n                    <styled.RowContainer style={{ position: 'relative', justifyContent: 'space-between' }}>\n                        <styled.Header>MIR IP</styled.Header>\n                        <styled.ConnectionButton onClick={() => handleMirConnection()} disabled={(connectionText === 'Connected' || connectionText === 'Connecting')}>\n                            {connectionText}\n                            <styled.ConnectionIcon className={connectionIcon} />\n                        </styled.ConnectionButton>\n\n                    </styled.RowContainer>\n\n                    <Textbox\n                        placeholder=\"MiR IP Address\"\n                        value={serverSettingsState.mir_ip}\n                        onChange={(event) => {\n                            setServerSettingsState({\n                                ...serverSettingsState,\n                                mir_ip: event.target.value\n                            })\n                        }}\n                        style={{ width: '100%' }}\n\n                    />\n\n                </styled.SettingContainer>\n            )\n        }\n    }\n\n    const APIAddress = () => {\n        //  if(MiRMapEnabled){\n        return (\n            <styled.SettingContainer>\n\n\n\n                <styled.RowContainer>\n                    <styled.Header>Show Developer Settings</styled.Header>\n`                  <Switch\n                        checked={localSettingsState.toggleDevOptions}\n                        onChange={() => {\n                            handleUpdateLocalSettings({ toggleDevOptions: !localSettingsState.toggleDevOptions })\n                        }}\n                        onColor='red'\n                        style={{ marginRight: '1rem' }}\n                    />\n\n                </styled.RowContainer>\n\n                {localSettingsState.toggleDevOptions ?\n                    <>\n\n                        <styled.Header style = {{fontSize: '1.2rem'}}>Non Local API IP Address</styled.Header>\n\n                        <styled.RowContainer>\n                            <Switch\n                                checked={localSettingsState.non_local_api}\n                                onChange={() => {\n                                    handleUpdateLocalSettings({ non_local_api: !localSettings.non_local_api })\n                                }}\n                                onColor='red'\n                                style={{ marginRight: '1rem' }}\n                            />\n                            <Textbox\n                                placeholder=\"API IP Address\"\n                                value={localSettingsState.non_local_api_ip}\n                                onChange={(event) => {\n                                    handleUpdateLocalSettings({ non_local_api_ip: event.target.value })\n                                }}\n                                style={{ width: '100%' }}\n                            // type = 'number'\n                            />\n                        </styled.RowContainer>\n\n                        <styled.Header style = {{fontSize: '1.2rem', paddingTop: '2rem'}}>Devices Enabled</styled.Header>\n\n                        <styled.RowContainer>\n                            <styled.Header style = {{fontSize: '.8rem', paddingTop: '1rem', paddingRight: '1rem'}}>Disabled</styled.Header>\n                            <Switch\n                                checked={serverSettingsState.deviceEnabled}\n                                onChange={() => {\n                                    setDevicesEnabled(!devicesEnabled)\n                                    setServerSettingsState({\n                                        ...serverSettingsState,\n                                        deviceEnabled: !devicesEnabled\n                                    })\n                                }}\n                                onColor='red'\n                                style={{ marginRight: '1rem' }}\n                            />\n                            <styled.Header style = {{fontSize: '.8rem', paddingTop: '1rem'}}>Enabled</styled.Header>\n                        </styled.RowContainer>\n                    </>\n                    :\n                    <></>\n                }\n\n            </styled.SettingContainer>\n        )\n        //  }\n    }\n\n\n    const MapViewEnabled = () => {\n        return (\n            <styled.SettingContainer>\n\n\n                <styled.Header>Show Map View</styled.Header>\n\n\n                <styled.RowContainer>\n                    <styled.SwitchContainerLabel>Show List View</styled.SwitchContainerLabel>\n                    <Switch\n                        onColor='red'\n                        checked={localSettingsState.mapViewEnabled}\n                        onChange={() => {\n                            handleUpdateLocalSettings({ mapViewEnabled: !localSettingsState.mapViewEnabled })\n                        }}\n                        style={{ margin: \"0 2rem 0 2rem\" }}\n                    />\n                    <styled.SwitchContainerLabel>Show Map View</styled.SwitchContainerLabel>\n                </styled.RowContainer>\n\n            </styled.SettingContainer>\n        )\n    }\n\n    const CurrentMap = () => {\n        const selectedMap = maps.find((map) => map._id === localSettings.currentMapId)\n        return (\n            <styled.SettingContainer>\n\n\n                <styled.Header>Current Map</styled.Header>\n\n\n                <styled.RowContainer>\n                    <DropDownSearch\n                        placeholder=\"Select Map\"\n                        label=\"Select the map you would like to use for RMStudio\"\n                        labelField=\"name\"\n                        valueField=\"_id\"\n                        options={maps}\n                        values={selectedMap ? [selectedMap] : []}\n                        dropdownGap={5}\n                        noDataLabel=\"No matches found\"\n                        closeOnSelect=\"true\"\n                        onChange={values => {\n                            // update current map\n                            setMapSettingsState(values[0])\n                            // update current map in local storage\n                            handleUpdateLocalSettings({ currentMapId: values[0]._id })\n                        }}\n                        className=\"w-100\"\n                    />\n                </styled.RowContainer>\n\n            </styled.SettingContainer>\n        )\n    }\n\n    const SignOut = () => {\n\n        const localReducer = useSelector(state => state.localReducer.localSettings)\n\n        const signOut = async () => {\n\n            await onPostLocalSettings({\n                ...localReducer,\n                authenticated: null\n            })\n\n         }\n        return (\n            <styled.SettingContainer>\n\n                <Button onClick={signOut}> Sign Out </Button>\n\n            </styled.SettingContainer>\n        )\n    }\n\n    return (\n        <styled.SettingsContainer>\n            <ContentHeader content={'settings'} mode={'title'} saveEnabled={true} onClickSave={handleSumbitSettings} />\n            {MirIp()}\n            {MapViewEnabled()}\n            {CurrentMap()}\n            {SignOut()}\n            {APIAddress()}\n\n            {/* {TimeZone()} */}\n        </styled.SettingsContainer>\n    )\n}\n\nexport default Settings\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    flex-grow: 1;\n    justify-content: center;\n    align-items: center;\n`;\n\nexport const Text = styled.h1`\n\n`\n\nexport const ReloadButton = styled.button`\n  margin-top: .5rem;\n`\n","import React, {Component} from 'react';\n\n// import styles\nimport * as styled from './page_error_boundary.style'\n\nclass PageErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n       hasError: false,\n       error:null,\n       info:null\n     };\n  }\n\n\n  getDerivedStateFromError(error) {\n    return {hasError:true}\n  }\n\n  componentDidCatch(error, info) {\n    // log the error to an error reporting service\n    this.setState({\n    hasError: true,\n    error: error,\n    info: info\n  });\n}\n\n\n\n  handleReloadPage = () => {\n    window.location.reload();\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return(\n        <styled.Container>\n          <styled.Text>There was an issue loading the page... sorry!</styled.Text>\n          <styled.ReloadButton onClick={this.handleReloadPage} className=\"btn btn-outline-danger\">\n            Reload Page\n          </styled.ReloadButton>\n          <styled.ReloadButton onClick={this.props.deleteLocalSettings} className=\"btn btn-outline-danger\">\n            Delete Local Storage\n          </styled.ReloadButton>\n        </styled.Container>\n      )\n\n    }\n    else{\n      return this.props.children\n    }\n  }\n}\n\nexport default PageErrorBoundary;\n","import styled from 'styled-components'\nimport {Calendar} from \"react-calendar\";\n\n\nexport const TitleContainer = styled.h1`\n    font-size: ${props => props.theme.fontSize.sz2};\n    font-family: ${props => props.theme.font.primary};\n    color: ${props => props.theme.bg.septenary};\n    margin-top: .6rem;\n`;\n\nexport const DefaultContainer = styled.div`\n`;\n\nexport const DefaultFieldContentContainer = styled.div`\n    width: 100%;\n    height: auto;\n    position: relative;\n`;\n\nexport const DefaultFieldDropdownContainer = styled.div`\n    flex: 1;\n`;\n\nexport const IconContainerComponent = styled.div`\n    width: auto;\n    height: auto;\n    position: absolute;\n    top: 50%;\n    right: 2rem;\n    transform: translateY(-50%);\n    margin: 0;\n    padding: 0;\n    background; cyan;\n`;\n\nexport const StyledCalendar = styled(Calendar)`\n\n\t.react-calendar {\n    width: 100%;\n    max-width: 100%;\n    // background: white;\n    border: 1px solid #a0a096;\n    font-family: Arial, Helvetica, sans-serif;\n    line-height: 1.125em;\n    \n}\n.react-calendar--doubleView {\n    width: 700px;\n}\n.react-calendar--doubleView .react-calendar__viewContainer {\n    display: flex;\n    margin: -0.5em;\n}\n.react-calendar--doubleView .react-calendar__viewContainer > * {\n    width: 50%;\n    margin: 0.5em;\n}\n.react-calendar,\n.react-calendar *,\n.react-calendar *:before,\n.react-calendar *:after {\n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n    box-sizing: border-box;\n}\n.react-calendar button {\n    margin: 0;\n    border: 0;\n    outline: none;\n    outline: none !important;\n}\n.react-calendar button:enabled:hover {\n    cursor: pointer;\n}\n.react-calendar__navigation {\n    height: 44px;\n    margin-bottom: 1em;\n}\n.react-calendar__navigation button {\n    min-width: 44px;\n    background: none;\n    background: ${props => props.theme.bg.quinary};\n    color: ${props => props.theme.bg.octonary};\n}\n.react-calendar__navigation button:enabled:hover,\n.react-calendar__navigation button:enabled:focus {\n    background-color: #e6e6e6;\n}\n.react-calendar__navigation button[disabled] {\n    background-color: #f0f0f0;\n}\n.react-calendar__month-view__weekdays {\n    text-align: center;\n    text-transform: uppercase;\n    font-weight: bold;\n    font-size: 0.75em;\n}\n.react-calendar__month-view__weekdays__weekday {\n    padding: 0.5em;\n}\n.react-calendar__month-view__weekNumbers {\n    font-weight: bold;\n}\n.react-calendar__month-view__weekNumbers .react-calendar__tile {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 0.75em;\n    padding: calc(0.75em / 0.75) calc(0.5em / 0.75);\n    \n}\n.react-calendar__month-view__days__day {\n\tcolor: white;\n}\n.react-calendar__month-view__days__day--weekend {\n    color: ${props => props.theme.bg.senary};\n}\n.react-calendar__month-view__days__day--neighboringMonth {\n    color: grey;\n}\n.react-calendar__year-view .react-calendar__tile,\n.react-calendar__decade-view .react-calendar__tile,\n.react-calendar__century-view .react-calendar__tile {\n    padding: 2em 0.5em;\n}\n.react-calendar__tile {\n    max-width: 100%;\n    text-align: center;\n    padding: 0.75em 0.5em;\n    background: ${props => props.theme.bg.quinary};\n    \n}\n.react-calendar__tile:disabled {\n    background-color: #f0f0f0;\n}\n.react-calendar__tile:enabled:hover,\n.react-calendar__tile:enabled:focus {\n    background-color: #e6e6e6;\n}\n.react-calendar__tile--now {\n    background: ${props => props.theme.bg.senary};\n}\n.react-calendar__tile--now:enabled:hover,\n.react-calendar__tile--now:enabled:focus {\n    background: ${props => props.theme.bg.septenary};\n}\n.react-calendar__tile--hasActive {\n    background: #76baff;\n}\n.react-calendar__tile--hasActive:enabled:hover,\n.react-calendar__tile--hasActive:enabled:focus {\n    background: #a9d4ff;\n}\n.react-calendar__tile--active {\n    background: #006edc;\n    color: white;\n}\n.react-calendar__tile--active:enabled:hover,\n.react-calendar__tile--active:enabled:focus {\n    background: #1087ff;\n}\n.react-calendar--selectRange .react-calendar__tile--hover {\n    background-color: #e6e6e6;\n}\n\n\n\n`\n","import React, {useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport { useField, useFormikContext } from \"formik\";\nimport Calendar from 'react-calendar'\nimport { getMessageFromError } from \"../../../../methods/utils/form_utils\";\n\n// import styles\nimport * as styled from './calendar_field.style'\nimport ErrorTooltip from \"../error_tooltip/error_tooltip\";\nimport {isEmpty} from \"ramda\";\n\n\nconst CalendarField = ({\n\t\t\t\t\t\t\t\t onChange,\n\t\t\t\t\t\t\t\t Container,\n\t\t\t\t\t\t   onDropdownClose,\n\t\t\t\t\t\t\t\t ...props\n\t\t\t\t\t\t\t }) => {\n\n\tconst { setFieldValue, setFieldTouched, ...formikContext } = useFormikContext();\n\tconst [{value, ...field}, {initialValue, ...meta}] = useField(props);\n\tconst hasError = meta.touched && meta.error;\n\n\tconst errorMessage = getMessageFromError(meta.error);\n\n\tconst startYearVal = value?.start?.year || 0\n\tconst startMonthVal = value?.start?.month || 0\n\tconst startDayVal = value?.start?.day || 0\n\n\tconst endYearVal = value?.end?.year || 0\n\tconst endMonthVal = value?.end?.month || 0\n\tconst endDayVal = value?.end?.day || 0\n\n\tconst startDate = (startYearVal && (startMonthVal + 1) && startDayVal) ? new Date(startYearVal, startMonthVal, startDayVal, 0, 0, 0, 0) : new Date()\n\tconst endDate = (endYearVal && (endMonthVal + 1) && endDayVal) ? new Date(endYearVal, endMonthVal, endDayVal, 0, 0, 0, 0) : null\n\n\treturn (\n\t\t<Container>\n\t\t\t\t<styled.StyledCalendar\n\t\t\t\t\tonDropdownClose={()=>{\n\t\t\t\t\t\t// set this field to touched if not already\n\n\t\t\t\t\t\t// call any additional function that was passed as prop\n\t\t\t\t\t\tonDropdownClose && onDropdownClose();\n\t\t\t\t\t}}\n\t\t\t\t\t{...field}\n\t\t\t\t\tselectRange={true}\n\t\t\t\t\t// defaultValue={[initialStartDate, initialEndDate]}\n\t\t\t\t\tvalue={[startDate, endDate]}\n\t\t\t\t\tallowPartialRange\n\t\t\t\t\t// defaultActiveStartDate={initialStartDate}\n\t\t\t\t\t// defaultValue={value}\n\t\t\t\t\t{...props}\n\t\t\t\t\tonChange={value => {\n\t\t\t\t\t\tconst isTouched = meta.touched;\n\t\t\t\t\t\tif(!isTouched) {\n\t\t\t\t\t\t\tsetFieldTouched(true)\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst startDate = value[0]\n\n\n\t\t\t\t\t\tlet month = startDate.getUTCMonth()\n\t\t\t\t\t\tlet day = startDate.getUTCDate();\n\t\t\t\t\t\tlet year = startDate.getUTCFullYear();\n\n\t\t\t\t\t\tlet newValue = {\n\t\t\t\t\t\t\tstart: {year, month, day}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(Array.isArray(value) && value.length > 1) {\n\t\t\t\t\t\t\tconst endDate = value[1]\n\t\t\t\t\t\t\tlet month = endDate.getUTCMonth()\n\t\t\t\t\t\t\tlet day = endDate.getUTCDate() - 1\n\t\t\t\t\t\t\tlet year = endDate.getUTCFullYear()\n\t\t\t\t\t\t\tnewValue[\"end\"] = {year, month, day}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tsetFieldValue(field.name, newValue);\n\t\t\t\t\t\tonChange && onChange(value)\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t{/*</style.DefaultFieldDropdownContainer>*/}\n\n\t\t\t\t<ErrorTooltip\n\t\t\t\t\tvisible={hasError}\n\t\t\t\t\ttext={errorMessage}\n\t\t\t\t\tContainerComponent={styled.IconContainerComponent}\n\t\t\t\t/>\n\t\t</Container>\n\t);\n};\n\n// Specifies propTypes\nCalendarField.propTypes = {\n};\n\n// Specifies the default values for props:\nCalendarField.defaultProps = {\n\tContainer: styled.DefaultContainer,\n\tonChange: null,\n};\n\nexport default CalendarField;\n","import axios from 'axios';\n// import * as log from 'loglevel';\n\nimport logger from '../logger'\n\nimport { apiIPAddress } from '../settings/settings'\nconst operator = 'cards'\nconst log = logger.getLogger('Api')\n\nexport async function getCardHistory(ID) {\n    try {\n        const response = await axios({\n            method: 'get',\n            url: apiIPAddress() + operator + '/' + ID + '/card_history',\n            headers: {\n                'X-API-Key': '123456',\n                'Access-Control-Allow-Origin': '*'\n            }\n        });\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n\n}","import { normalize } from 'normalizr';\n\n// import types\nimport {\n    GET,\n    POST,\n    DELETE,\n    PUT\n} from '../types/prefixes';\n\nimport {\n    CARD_HISTORY,\n} from '../types/data_types';\n\nimport { api_action } from './index';\n\nimport log from \"../../logger\"\nimport * as api from \"../../api/card_history_api\";\nimport {convertArrayToObject} from \"../../methods/utils/utils\";\n\nconst logger = log.getLogger(\"Card History\", \"Redux\")\n\n// get\n// ******************************\nexport const getCardHistory = (cardId) =>  async (dispatch) => {\n\n    const callback = async () => {\n\n        // make request\n        const card = await api.getCardHistory(cardId);\n        console.log(\"getCardHistory card\",card)\n\n        // const cardsObj = convertArrayToObject(cards, \"_id\")\n        // console.log(\"getCards cardsObj\",cardsObj)\n\n        // format response\n        // const normalizedSchedules = normalize(schedules, schedulesSchema);\n\n        // return payload for redux\n        return {\n            cardHistory: card,\n        };\n    }\n\n    const actionName = GET + CARD_HISTORY;\n\n    // payload is returned back\n    const payload = await api_action(actionName, callback, dispatch);\n\n    return payload;\n\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n","import styled from 'styled-components';\nimport TimePicker from 'rc-time-picker';\nimport {css} from 'styled-components'\n\n\nexport const ProcessFieldContainer = styled.div`\n    margin-bottom: 1rem;\n    display: flex;\n    flex-direction: column;\n    //width: auto;\n`\n\n\nexport const ProcessOptionsContainer = styled.div`\n    //margin-bottom: 1rem;\n    display: flex;\n    overflow-x: auto;\n    overflow-y: hidden;\n    position: relative;\n\n\n    box-shadow: ${props => props.hasError && \"0 0 5px red\"};\n\n    background: ${props => props.theme.bg.quinary};\n    padding: 1rem;\n    border-radius: 1rem;\n\n    padding-bottom: 1rem;\n\n    ::-webkit-scrollbar {\n        height: 10px;\n    }\n\n    /* Track */\n    ::-webkit-scrollbar-track {\n        background: rgba(100,100,100,0.2);\n        opacity: 10%;\n    }\n\n    ::-webkit-scrollbar-track:hover {\n        background: rgba(100,100,100,0.6);\n        border-left: 1px solid rgba(100,100,100,0.6);\n        border-right: 1px solid rgba(100,100,100,0.6);\n    }\n\n    /* Handle */\n    ::-webkit-scrollbar-thumb {\n        background: ${props => props.theme.bg.tertiary};\n        border-radius: .5rem;\n    }\n\n    /* Handle on hover */\n    ::-webkit-scrollbar-thumb:hover {\n        background: #555;\n\n    }\n`\nexport const ProcessName = styled.span`\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`\n\nexport const ProcessOption = styled.div`\n\n\t&:hover {\n\t\tcursor: pointer;\n\t}\n\t\n\ttext-shadow: 0.05rem 0.05rem 0.2rem #303030;\n\t&:hover {\n\t\tcursor: pointer;\n\t\tfilter: brightness(140%);\n\t}\n\t\n\t&:active{\n\t\tfilter: brightness(85%);\n\t\ttext-shadow: none;\n\t}\n  \n  \tbackground: ${props => props.theme.bg.senary};\n\t\n  \tpadding: 1rem;\n\tborder-radius: 1rem;\n  \tmargin-right: 1rem;\n  \n\tmin-width: 10rem;\n\tmax-width: 10rem;\n\twidth: 10rem;\n\t\n\tdisplay: inline-flex;\n\tjustify-content: center;\n\talign-items: center;\n\t\n\t${props => (!props.isSelected && props.containsSelected) && \"filter: grayscale(50%)\"};\n\t${props => props.isSelected && \"filter: brightness(130%)\"};\n\ttransition: all 0.5s ease;\n\t\n\tfont-size: ${props => props.theme.fontSize.sz3};\n\tfont-weight: ${props => props.theme.fontWeight.normal};\n  \n\toverflow: hidden;\n\twhite-space: nowrap;\n\ttext-overflow: ellipsis;\n`\n\nexport const ErrorTooltipContainerComponent = styled.div`\n\t//align-self: center;\n  width: auto;\n  height: auto;\n  position: absolute;\n  z-index: 500;\n  top: 50%;\n  right: 1rem;\n  transform: translateY(-50%);\n  margin: 0;\n  padding: 0;\n`\n\n\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { useField, useFormikContext } from \"formik\";\n\nimport ErrorTooltip from '../error_tooltip/error_tooltip';\nimport * as styled from './scrolling_buttons_field.style'\n\nimport log from \"../../../../logger\";\nconst logger = log.getLogger(\"ScrollingButtonField\");\n\nconst ScrollingButtonField = ({\n\t\t\t\t\t\tvalueKey,\n\t\t\t\t\t\tlabelKey,\n\t\t\t\t\t\tonBlur,\n\t\t\t\t\t\tonFocus,\n\t\t\t\t\t\tonChange,\n\t\t\t\t\t\tErrorTooltipContainerComponent,\n\t\t\t\t\t\toptions,\n\t\t\t\t\t\t...props }) => {\n\n\t// get formik data\n\tconst { setFieldValue, setFieldTouched, validateOnChange, validateOnBlur, validateField, validateForm, ...context } = useFormikContext();\n\tconst [field, meta] = useField(props);\n\n\t// extract field data\n\tconst {\n\t\tvalue: fieldValue,\n\t\tname: fieldName\n\t} = field\n\n\t// extract meta data\n\tconst { touched, error } = meta\n\n\t// does the field contain an error?\n\tconst hasError = touched && error\n\n\treturn (\n\t\t<div style={{position: \"relative\"}}>\n\t\t\t<ErrorTooltip\n\t\t\t\tvisible={hasError}\n\t\t\t\ttext={error}\n\t\t\t\tContainerComponent={ErrorTooltipContainerComponent}\n\t\t\t/>\n\t\t\t<styled.ProcessOptionsContainer\n\t\t\t\thasError={hasError}\n\t\t\t>\n\t\t\t\t{options\n\n\t\t\t\t\t// each option must contain value and label - filter out any that don't\n\t\t\t\t\t.filter((currOption) => {\n\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\t[valueKey]: currValue = null,\n\t\t\t\t\t\t\t[labelKey]: currLabel = null\n\t\t\t\t\t\t} = currOption\n\n\t\t\t\t\t\tif(currValue && currLabel) {\n\t\t\t\t\t\t\treturn true\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// give warning to developer that item is missing parameter(s)\n\t\t\t\t\t\t\tif(!currValue) logger.warn(\"Option is missing value\")\n\t\t\t\t\t\t\tif(!currLabel) logger.warn(\"Option is missing label\")\n\n\t\t\t\t\t\t\treturn false\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\n\t\t\t\t\t// map remaining options content\n\t\t\t\t\t.map((currOption) => {\n\n\t\t\t\t\tconst {\n\t\t\t\t\t\t[valueKey]: currValue = \"\",\n\t\t\t\t\t\t[labelKey]: currLabel = \"\"\n\t\t\t\t\t} = currOption\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<styled.ProcessOption\n\t\t\t\t\t\t\tkey={currValue}\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tsetFieldValue(fieldName, currValue)\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tisSelected={currValue === fieldValue}\n\t\t\t\t\t\t\tcontainsSelected={fieldValue}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<styled.ProcessName>{currLabel}</styled.ProcessName>\n\t\t\t\t\t\t</styled.ProcessOption>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</styled.ProcessOptionsContainer>\n\t\t</div>\n\t);\n};\n\n// Specifies propTypes\nScrollingButtonField.propTypes = {\n\tErrorTooltipContainerComponent: PropTypes.elementType\n};\n\n// Specifies the default values for props:\nScrollingButtonField.defaultProps = {\n\tErrorTooltipContainerComponent: styled.ErrorTooltipContainerComponent\n};\n\nexport default ScrollingButtonField;\n","import styled from 'styled-components';\nimport TimePicker from 'rc-time-picker';\nimport {css} from 'styled-components'\n\n\nexport const HilInputContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n`\n\n\nexport const IconContainerComponent = styled.div`\n    width: auto;\n    height: auto;\n    position: absolute;\n    top: 50%;\n    right: 2rem;\n    transform: translateY(-50%);\n    margin: 0;\n    padding: 0;\n`;\n\nexport const InputContainer = styled.div`\n\n`\n\nexport const HilInput = styled.input`\n  -webkit-transition: all 0.30s ease-in-out;\n  -moz-transition: all 0.30s ease-in-out;\n  -ms-transition: all 0.30s ease-in-out;\n  -o-transition: all 0.30s ease-in-out;\n\n  transition: all 0.30s ease-in-out;\n  transition: all 0.30s ease-in-out;\n  \n    margin: 1rem 1rem;\n    border-radius: .5rem;\n    text-align: center;\n    width: 10rem;\n    font-size: 2rem;\n    color: white;\n  background: ${props => props.theme.bg.quinary};\n  \n    //-webkit-appearance: none !important;\n    &:focus{\n        outline: 0 !important;\n        //border-color: #56d5f5;\n        box-shadow: 0 0 5px #56d5f5;\n      \tborder: 1px solid #56d5f5;\n      filter: brightness(120%);\n      // background: ${props => props.theme.bg.senary};\n    }\n\n  /* Chrome, Safari, Edge, Opera */\n  &::-webkit-outer-spin-button,\n  &::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n\n  /* Firefox */\n  & input[type=number] {\n    -moz-appearance: textfield;\n  }\n  \n  \n  ${props => props.hasError && errorCss};\n`\n\nconst errorCss = css`\n  box-shadow: 0 0 5px red;\n  border: 1px solid red;\n  \n  &:focus{\n    outline: 0 !important;\n    box-shadow: 0 0 5px red;\n    border: 1px solid red;\n  }\n`\n\nexport const HilInputIcon = styled.i`\n    font-size: 5rem;\n    text-shadow: 0.05rem 0.05rem 0.2rem #303030;\n    transition: text-shadow 0.1s ease, filter 0.1s ease;\n  color: ${props => props.color};\n\n  ${props => props.disabled && disabledCss};\n  \n    &:hover {\n        cursor: pointer;\n    }\n\n    &:active{\n        filter: brightness(85%);\n        text-shadow: none;\n    }\n  \n  \n`\n\nconst disabledCss = css`\n  color: ${props => props.theme.disabled};\n`\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { useField, useFormikContext } from \"formik\";\n\nimport ErrorTooltip from '../error_tooltip/error_tooltip';\nimport * as styled from './number_field.style'\nimport useLongPress from \"../../../../hooks/useLongPress\";\n\n// function setDeceleratingTimeout(callback, factor, initialRate, times, minRate)\n// {\n// \tvar internalCallback = function(tick, counter) {\n//\n// \t\tconst newRate = (initialRate) - (++counter * factor)\n//\n// \t\treturn function() {\n// \t\t\tif (--tick >= 0) {\n// \t\t\t\twindow.setTimeout(internalCallback, (newRate > minRate) ? newRate : minRate);\n// \t\t\t\tcallback();\n// \t\t\t}\n// \t\t}\n// \t}(times, 0);\n//\n// \twindow.setTimeout(internalCallback, factor);\n// };\n\nconst NumberField = ({\n\t\t\t\t\t\tmaxValue,\n\t\t\t\t\t\tminValue,\n\t\t\t\t\t   ...props }) => {\n\n\tconst { setFieldValue, setFieldTouched, validateOnChange, validateOnBlur, validateField, validateForm, ...context } = useFormikContext();\n\tconst [field, meta] = useField(props);\n\n\t// extract field data\n\tconst {\n\t\tvalue: fieldValue,\n\t\tname: fieldName\n\t} = field\n\n\t// extract meta data\n\tconst { touched, error } = meta\n\n\t// does the field contain an error?\n\tconst hasError = touched && error\n\n\t// const onLongPress = () => {\n\t//\n\t// \tconsole.log('longpress is triggered');\n\t// \tsetDeceleratingTimeout(\n\t// \t\t() => {\n\t// \t\t\tconsole.log(\"CALLBACK\")\n\t// \t\t\tsetFieldValue(fieldName, parseInt(fieldValue) - 1)\n\t// \t\t},\n\t// \t\t50,\n\t// \t\t500,\n\t// \t\t300,\n\t// \t\t10)\n\t//\n\t// };\n\t//\n\t// const onClick = () => {\n\t// \tconsole.log('click is triggered')\n\t// }\n\t//\n\t// const defaultOptions = {\n\t// \tshouldPreventDefault: true,\n\t// \tdelay: 500,\n\t// };\n\t// const longPressEvent = useLongPress(onLongPress, onClick, defaultOptions);\n\n\n\treturn (\n\t\t<styled.HilInputContainer>\n\t\t\t<styled.HilInputIcon\n\t\t\t\tdisabled={!(fieldValue > minValue)}\n\t\t\t\tclassName='fas fa-minus-circle'\n\t\t\t\tcolor={'#ff1818'}\n\t\t\t\tonClick={() => {\n\t\t\t\t\tif(!touched) {\n\t\t\t\t\t\tsetFieldTouched(fieldName, true)\n\t\t\t\t\t}\n\n\t\t\t\t\tif (maxValue) {\n\t\t\t\t\t\tif (fieldValue > maxValue) {\n\t\t\t\t\t\t\t// fieldValue should not exceed count, it may have been set higher before a lot was selected\n\t\t\t\t\t\t\t// reduce fieldValue to lot count\n\t\t\t\t\t\t\tsetFieldValue(fieldName, maxValue)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// if(minValue !== null) {\n\t\t\t\t\t\t// fieldValue cannot be negative\n\t\t\t\t\t\tif (fieldValue > minValue) setFieldValue(fieldName,fieldValue - 1)\n\t\t\t\t\t// }\n\n\t\t\t\t\t// setFieldValue(fieldName,fieldValue - 1)\n\n\n\t\t\t\t}}\n\t\t\t/>\n\n\t\t\t<div style={{position: \"relative\"}}>\n\t\t\t\t<styled.HilInput\n\t\t\t\t\thasError={hasError}\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tonChange={(e) => {\n\n\t\t\t\t\t\tif(!touched) {\n\t\t\t\t\t\t\tsetFieldTouched(fieldName, true)\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst enteredValue = e.target.value\n\t\t\t\t\t\tconst enteredValueInt = parseInt(enteredValue)\n\n\t\t\t\t\t\tif (isNaN(enteredValueInt)) {\n\t\t\t\t\t\t\tif(enteredValue === \"-\") {\n\t\t\t\t\t\t\t\tsetFieldValue(fieldName, -0)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tsetFieldValue(fieldName, 0)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// if there is a maxValue, the fieldValue cannot exceed this\n\t\t\t\t\t\t\tif (maxValue) {\n\t\t\t\t\t\t\t\tif (enteredValueInt <= maxValue) setFieldValue(fieldName,enteredValueInt)\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// otherwise the value can be anything\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tsetFieldValue(fieldName, enteredValueInt)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t}}\n\t\t\t\t\tvalue={fieldValue}\n\t\t\t\t/>\n\t\t\t\t<ErrorTooltip\n\t\t\t\t\tvisible={hasError}\n\t\t\t\t\ttext={error}\n\t\t\t\t\tContainerComponent={styled.IconContainerComponent}\n\t\t\t\t/>\n\t\t\t</div>\n\n\n\n\t\t\t<styled.HilInputIcon\n\t\t\t\tdefaultValue={0}\n\t\t\t\tdisabled={!(fieldValue < maxValue)}\n\t\t\t\tclassName='fas fa-plus-circle'\n\t\t\t\tcolor={'#1c933c'}\n\t\t\t\tonClick={() => {\n\n\t\t\t\t\tif(!touched) {\n\t\t\t\t\t\tsetFieldTouched(fieldName, true)\n\t\t\t\t\t}\n\n\t\t\t\t\t// if there is a maxValue, fieldValue cannot exceed maxValue\n\t\t\t\t\tif (maxValue) {\n\t\t\t\t\t\tif (fieldValue < maxValue) {\n\t\t\t\t\t\t\tsetFieldValue(fieldName,fieldValue + 1)\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// fieldValue is greater than count (probably was set before lot was selected), reduce to count\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tsetFieldValue(fieldName, parseInt(maxValue))\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\t// otherwise fieldValue can be anything\n\t\t\t\t\telse {\n\t\t\t\t\t\tsetFieldValue(fieldName,fieldValue + 1)\n\t\t\t\t\t}\n\n\t\t\t\t}}\n\t\t\t/>\n\n\n\t\t</styled.HilInputContainer>\n\t);\n};\n\n// Specifies propTypes\nNumberField.propTypes = {\n\n};\n\n// Specifies the default values for props:\nNumberField.defaultProps = {\n\n};\n\nexport default NumberField;\n","import React, {useState, useEffect} from \"react\";\n\n// external functions\nimport PropTypes from \"prop-types\";\nimport {Formik} from \"formik\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport FadeLoader from \"react-spinners/FadeLoader\"\n\n// internal components\nimport CalendarField from \"../../../../basic/form/calendar_field/calendar_field\";\nimport TextField from \"../../../../basic/form/text_field/text_field\";\nimport Textbox from \"../../../../basic/textbox/textbox\";\nimport DropDownSearchField from \"../../../../basic/form/drop_down_search_field/drop_down_search_field\";\nimport Button from \"../../../../basic/button/button\";\nimport ButtonGroup from \"../../../../basic/button_group/button_group\";\n\n// actions\nimport {deleteCard, getCard, postCard, putCard} from \"../../../../../redux/actions/card_actions\";\nimport {getCardHistory} from \"../../../../../redux/actions/card_history_actions\";\n\n// constants\nimport {FORM_MODES} from \"../../../../../constants/scheduler_constants\";\n\n// utils\nimport {parseMessageFromEvent} from \"../../../../../methods/utils/card_utils\";\nimport {CARD_SCHEMA_MODES, cardSchema, getCardSchema} from \"../../../../../methods/utils/form_schemas\";\nimport {getProcessStations} from \"../../../../../methods/utils/processes_utils\";\nimport {isEmpty} from \"../../../../../methods/utils/object_utils\";\n\n// import styles\nimport * as styled from \"./card_editor.style\"\n\n// logger\nimport log from '../../../../../logger'\nimport ErrorTooltip from \"../../../../basic/form/error_tooltip/error_tooltip\";\nimport ScrollingButtonField from \"../../../../basic/form/scrolling_buttons_field/scrolling_buttons_field\";\nimport NumberField from \"../../../../basic/form/number_field/number_field\";\n\nconst logger = log.getLogger(\"CardEditor\")\nlogger.setLevel(\"debug\")\n\nconst CONTENT = {\n\tHISTORY: \"HISTORY\",\n\tCALENDAR_START: \"CALENDAR_START\",\n\tCALENDAR_END: \"CALENDAR_END\",\n\tCALENDAR_RANGE: \"CALENDAR_RANGE\",\n\tMOVE: \"MOVE\"\n}\n\nconst FORM_BUTTON_TYPES = {\n\tSAVE: \"SAVE\",\n\tADD: \"ADD\",\n\tADD_AND_NEXT: \"ADD_AND_NEXT\",\n\tMOVE_OK: \"MOVE_OK\"\n}\n\nconst SubmitErrorHandler = ({ submitCount, isValid, onSubmitError }) => {\n\tconst [lastHandled, setLastHandled] = useState(0);\n\tuseEffect(() => {\n\t\tif (submitCount > lastHandled && !isValid) {\n\t\t\tonSubmitError();\n\t\t\tsetLastHandled(submitCount);\n\t\t}\n\t}, [submitCount, isValid, onSubmitError, lastHandled]);\n\n\treturn null;\n};\n\nconst FormComponent = (props) => {\n\n\tconst {\n\t\tformMode,\n\t\tbins,\n\t\tbinId,\n\t\tsetBinId,\n\t\tcardId,\n\t\tclose,\n\t\tisOpen,\n\t\tonDeleteClick,\n\t\tprocessId,\n\t\terrors,\n\t\tvalues,\n\t\ttouched,\n\t\tisSubmitting,\n\t\tsubmitCount,\n\t\tsetFieldValue,\n\t\tsubmitForm,\n\t\tformikProps,\n\t\tprocessOptions,\n\t\tshowProcessSelector,\n\t\tcontent,\n\t\tsetContent,\n\t\tloaded\n\n\t} = props\n\n\n\t// actions\n\tconst dispatch = useDispatch()\n\tconst onGetCardHistory = async (cardId) => await dispatch(getCardHistory(cardId))\n\n\t// redux state\n\tconst currentProcess = useSelector(state => { return state.processesReducer.processes[processId] })\n\tconst cardHistory = useSelector(state => { return state.cardsReducer.cardHistories[cardId] })\n\tconst routes = useSelector(state => { return state.tasksReducer.tasks })\n\tconst stations = useSelector(state => { return state.stationsReducer.stations })\n\tconst processes = useSelector(state => { return state.processesReducer.processes }) || {}\n\n\t// component state\n\tconst [showLotInfo, setShowLotInfo] = useState(true)\n\n\t// derived state\n\tconst selectedBinName = stations[binId] ?\n\t\tstations[binId].name :\n\t\tbinId === \"QUEUE\" ? \"Queue\" : \"Finished\"\n\n\tconst processStationIds = getProcessStations(currentProcess, routes) // get object with all station's belonging to the current process as keys\n\tconst availableBins = !isEmpty(bins) ? Object.keys(bins) : [\"QUEUE\"]\n\n\tconst startDateText = ((values?.dates?.start?.month + 1) && values?.dates?.start?.day && values?.dates?.start?.year) ?  (values.dates.start.month + 1) + \"/\" + values.dates.start.day + \"/\" + values.dates.start.year : \"Planned start\"\n\tconst endDateText = ((values?.dates?.end?.month + 1) && values?.dates?.end?.day && values?.dates?.end?.year) ?  (values.dates?.end.month + 1) + \"/\" + values.dates?.end.day + \"/\" + values.dates?.end.year : \"Planned end\"\n\n\tconst errorCount = Object.keys(errors).length > 0 // get number of field errors\n\tconst touchedCount = Object.values(touched).length // number of touched fields\n\tconst submitDisabled = ((errorCount > 0) || (touchedCount === 0) || isSubmitting) && (submitCount > 0) // disable if there are errors or no touched field, and form has been submitted at least once\n\n\t/*\n\t*\n\t* */\n\tconst getButtonGroupOptions = () => {\n\t\tvar buttonGroupNames = []\n\t\tvar buttonGroupIds = []\n\t\tavailableBins.forEach((currBinId) =>{\n\t\t\tif(stations[currBinId]) {\n\t\t\t\tbuttonGroupNames.push(stations[currBinId].name)\n\t\t\t\tbuttonGroupIds.push(currBinId)\n\t\t\t}\n\t\t})\n\t\tif(bins[\"QUEUE\"]) {\n\t\t\tbuttonGroupNames.unshift(\"Queue\")\n\t\t\tbuttonGroupIds.unshift(\"QUEUE\")\n\t\t}\n\t\tif(bins[\"FINISH\"]) {\n\t\t\tbuttonGroupNames.push(\"Finished\")\n\t\t\tbuttonGroupIds.push(\"FINISH\")\n\t\t}\n\n\t\treturn [buttonGroupNames, buttonGroupIds]\n\t}\n\n\tconst [buttonGroupNames, buttonGroupIds] = getButtonGroupOptions()\n\n\t/*\n\t* handles when enter key is pressed\n\t*\n\t* This effect attaches an event listener to the keydown event\n\t* The listener effect listens for 'Enter' and 'NumpadEnter' events\n\t* If either of these events occur, the form will be submitted\n\t* */\n\tuseEffect(() => {\n\t\t// keydown event listener\n\t\tconst listener = event => {\n\n\t\t\t// check if event code corresponds to enter\n\t\t\tif (event.code === \"Enter\" || event.code === \"NumpadEnter\" || event.code === 13 || event.key === \"Enter\") {\n\t\t\t\t// prevent default actions\n\t\t\t\tevent.preventDefault()\n\t\t\t\tevent.stopPropagation()\n\n\n\t\t\t\tif(formMode === FORM_MODES.UPDATE) {\n\t\t\t\t\t// if the form mode is set to UPDATE, the default action of enter should be to save the lot\n\t\t\t\t\t// this is done by setting buttonType to SAVE and submitting the form\n\n\t\t\t\t\tswitch(content){\n\t\t\t\t\t\tcase CONTENT.MOVE:\n\t\t\t\t\t\t\tsetFieldValue(\"buttonType\", FORM_BUTTON_TYPES.MOVE_OK)\n\t\t\t\t\t\t\tsubmitForm()\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tsetFieldValue(\"buttonType\", FORM_BUTTON_TYPES.SAVE)\n\t\t\t\t\t\t\tsubmitForm()\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// if the form mode is set to CREATE (the only option other than UPDATE), the default action of the enter key should be to add the lot\n\t\t\t\t\t// this is done by setting buttonType to ADD and submitting the form\n\t\t\t\t\tsetFieldValue(\"buttonType\", FORM_BUTTON_TYPES.ADD)\n\t\t\t\t\tsubmitForm()\n\t\t\t\t}\n\n\t\t\t}\n\t\t};\n\n\t\t// add event listener to 'keydown'\n\t\tdocument.addEventListener(\"keydown\", listener);\n\n\t\t// on dismount remove the event listener\n\t\treturn () => {\n\t\t\tdocument.removeEventListener(\"keydown\", listener);\n\t\t};\n\t}, [])\n\n\tuseEffect(() => {\n\n\t\tif(!isOpen && content) setContent(null)\n\n\t\treturn () => {\n\t\t}\n\t}, [isOpen])\n\n\t/*\n\t* Renders content for moving some or all of a lot from one bin to another\n\t* */\n\tconst renderMoveContent = () => {\n\n\t\t// get destination options for move\n\t\t// the destination options include\n\t\tconst destinationOptions = [...Object.values(stations).filter((currStation) => {\n\t\t\tif((currStation._id !== binId) && processStationIds[currStation._id]) return true\n\t\t})]\n\t\tif(binId !== \"QUEUE\") destinationOptions.unshift({name: \"Queue\", _id: \"QUEUE\"})\n\t\tif(binId !== \"FINISH\") destinationOptions.push({name: \"Finished\", _id: \"FINISH\"})\n\n\t\tconst maxValue = bins[binId]?.count || 0\n\n\t\treturn(\n\t\t\t<styled.BodyContainer\n\t\t\t\tminHeight={\"20rem\"}\n\t\t\t>\n\t\t\t\t<div>\n\t\t\t\t\t<styled.ContentHeader style={{flexDirection: \"column\"}}>\n\t\t\t\t\t\t<styled.ContentTitle>Move lot</styled.ContentTitle>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<styled.InfoText style={{marginRight: \"1rem\"}}>Current Station</styled.InfoText>\n\t\t\t\t\t\t\t<styled.InfoText schema={\"lots\"} highlight={true}>{selectedBinName}</styled.InfoText>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</styled.ContentHeader>\n\t\t\t\t\t<div style={{display: \"flex\", flexDirection: \"column\", alignItems: \"center\", marginBottom: \"1rem\"}}>\n\t\t\t\t\t\t<styled.InfoText>Select Quantity to Move</styled.InfoText>\n\t\t\t\t\t\t<styled.InfoText style={{marginBottom: \"1rem\"}}>{maxValue} Items Available</styled.InfoText>\n\n\t\t\t\t\t\t<NumberField\n\t\t\t\t\t\t\tmaxValue={maxValue}\n\t\t\t\t\t\t\tminValue={0}\n\t\t\t\t\t\t\tname={\"moveCount\"}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\", marginBottom: \"1rem\"}}>\n\t\t\t\t\t\t<styled.InfoText style={{marginBottom: \"1rem\"}}>Select Lot Destination</styled.InfoText>\n\n\t\t\t\t\t\t<DropDownSearchField\n\t\t\t\t\t\t\tcontainerSyle={{minWidth: \"35%\"}}\n\t\t\t\t\t\t\tpattern={null}\n\t\t\t\t\t\t\tname=\"moveLocation\"\n\t\t\t\t\t\t\tlabelField={'name'}\n\t\t\t\t\t\t\toptions={destinationOptions}\n\t\t\t\t\t\t\tvalueField={\"_id\"}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</styled.BodyContainer>\n\t\t)\n\t}\n\n\tconst renderCalendarContent = () => {\n\t\treturn(\n\t\t\t<styled.BodyContainer>\n\t\t\t\t<styled.ContentHeader style={{}}>\n\t\t\t\t\t<styled.ContentTitle>Select Start and End Date</styled.ContentTitle>\n\t\t\t\t\t<div></div>\n\t\t\t\t</styled.ContentHeader>\n\n\t\t\t\t<styled.CalendarContainer>\n\t\t\t\t\t<CalendarField\n\t\t\t\t\t\tname={\"dates\"}\n\t\t\t\t\t/>\n\t\t\t\t</styled.CalendarContainer>\n\t\t\t</styled.BodyContainer>\n\t\t)\n\t}\n\n\tconst renderMainContent = () => {\n\t\treturn(\n\t\t\t<styled.BodyContainer>\n\t\t\t\t<styled.FieldTitle>Station</styled.FieldTitle>\n\n\t\t\t\t<ButtonGroup\n\t\t\t\t\tbuttonViewCss={styled.buttonViewCss}\n\t\t\t\t\tbuttons={buttonGroupNames}\n\t\t\t\t\tselectedIndex={buttonGroupIds.findIndex((ele) => ele === binId)}\n\t\t\t\t\tonPress={(selectedIndex)=>{\n\t\t\t\t\t\tsetBinId(buttonGroupIds[selectedIndex])\n\t\t\t\t\t\t// setFieldValue(\"selectedBin\", buttonGroupIds[selectedIndex])\n\t\t\t\t\t\t// setSelectedBin(availableBins[selectedIndex])\n\t\t\t\t\t}}\n\t\t\t\t\tcontainerCss={styled.buttonGroupContainerCss}\n\t\t\t\t\tbuttonViewSelectedCss={styled.buttonViewSelectedCss}\n\t\t\t\t\tbuttonCss={styled.buttonCss}\n\t\t\t\t/>\n\n\t\t\t\t<styled.RowContainer>\n\t\t\t\t\t<styled.ObjectInfoContainer>\n\t\t\t\t\t\t<styled.ObjectTitleContainer>\n\t\t\t\t\t\t\t<styled.ObjectLabel>Quantity</styled.ObjectLabel>\n\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tname={`bins.${binId}.count`}\n\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\tmapOutput={(val)=>parseInt(val)}\n\t\t\t\t\t\t\t\tmapInput={(val)=>parseInt(val)}\n\t\t\t\t\t\t\t\tInputComponent={styled.CountInput}\n\t\t\t\t\t\t\t\tIconContainerComponent={styled.QuantityErrorContainerComponent}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</styled.ObjectTitleContainer>\n\t\t\t\t\t</styled.ObjectInfoContainer>\n\t\t\t\t</styled.RowContainer>\n\n\t\t\t\t{formMode === FORM_MODES.UPDATE &&\n\t\t\t\t<styled.WidgetContainer>\n\t\t\t\t\t<styled.Icon\n\t\t\t\t\t\tclassName=\"fas fa-history\"\n\t\t\t\t\t\tcolor={\"red\"}\n\t\t\t\t\t\tonClick={()=> {\n\t\t\t\t\t\t\tif(content !== CONTENT.HISTORY) {\n\t\t\t\t\t\t\t\tonGetCardHistory(cardId)\n\t\t\t\t\t\t\t\tsetContent(CONTENT.HISTORY)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tsetContent(null)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</styled.WidgetContainer>\n\t\t\t\t}\n\t\t\t</styled.BodyContainer>\n\t\t)\n\t}\n\n\tconst renderHistory = () => {\n\t\tconst {\n\t\t\tevents = []\n\t\t} = cardHistory || {}\n\n\t\treturn(\n\t\t\t<styled.BodyContainer>\n\t\t\t\t<styled.ContentHeader style={{}}>\n\t\t\t\t\t<styled.ContentTitle>History</styled.ContentTitle>\n\t\t\t\t</styled.ContentHeader>\n\n\n\t\t\t\t<styled.HistoryBodyContainer>\n\t\t\t\t\t{events.map((currEvent) => {\n\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\tdescription,\n\t\t\t\t\t\t\tusername,\n\t\t\t\t\t\t\tdata,\n\t\t\t\t\t\t\tdate: {$date: date}\n\t\t\t\t\t\t} = currEvent\n\n\t\t\t\t\t\tvar jsDate = new Date(date);\n\t\t\t\t\t\tvar currentDate = new Date();\n\t\t\t\t\t\tconst diffTime = Math.abs(currentDate - jsDate);\n\t\t\t\t\t\tconst diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n\n\t\t\t\t\t\tvar {\n\t\t\t\t\t\t\tbins,\n\t\t\t\t\t\t\t...modifiedData\n\t\t\t\t\t\t} = data\n\n\t\t\t\t\t\t// handle route_id change\n\t\t\t\t\t\tif(Object.keys(modifiedData).includes(\"route_id\")) {\n\t\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\t\troute_id: {\n\t\t\t\t\t\t\t\t\tnew: newRouteId,\n\t\t\t\t\t\t\t\t\told: oldRouteId\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t...rest\n\t\t\t\t\t\t\t} = modifiedData\n\n\t\t\t\t\t\t\tmodifiedData = {\n\t\t\t\t\t\t\t\t...rest, \"route\": {\n\t\t\t\t\t\t\t\t\tnew: routes[newRouteId] ? routes[newRouteId].name : \"\",\n\t\t\t\t\t\t\t\t\told: routes[oldRouteId] ? routes[oldRouteId].name : \"\",\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet messages = parseMessageFromEvent(name, username, modifiedData)\n\n\t\t\t\t\t\t// handle bins change\n\t\t\t\t\t\t// if(Object.keys(modifiedData).includes(\"bins\")) {\n\t\t\t\t\t\t// \tconst {\n\t\t\t\t\t\t// \t\tbins: {\n\t\t\t\t\t\t// \t\t\tnew: newBins,\n\t\t\t\t\t\t// \t\t\told: oldBins\n\t\t\t\t\t\t// \t\t},\n\t\t\t\t\t\t// \t\t...rest\n\t\t\t\t\t\t// \t} = modifiedData\n\t\t\t\t\t\t//\n\t\t\t\t\t\t// \tvar oldVals = {}\n\t\t\t\t\t\t// \tvar newVals = {}\n\t\t\t\t\t\t// \tObject.entries(newBins).forEach((currEntry) => {\n\t\t\t\t\t\t// \t\tconst currKey = currEntry[0]\n\t\t\t\t\t\t// \t\tconst currValue = currEntry[1]\n\t\t\t\t\t\t//\n\t\t\t\t\t\t// \t\tif(oldBins[currKey]) {\n\t\t\t\t\t\t// \t\t\tif(oldBins[currKey].count !== newBins[currKey].count) {\n\t\t\t\t\t\t// \t\t\t\tmessages.push(`Changed count in ${currKey} from ${oldBins[currKey].count} to ${newBins[currKey].count}`)\n\t\t\t\t\t\t// \t\t\t}\n\t\t\t\t\t\t//\n\t\t\t\t\t\t// \t\t\t// oldVals[stations[currKey].name] = oldBins[currKey].count\n\t\t\t\t\t\t// \t\t\t// newVals[stations[currKey].name] = newBins[currKey].count\n\t\t\t\t\t\t//\n\t\t\t\t\t\t// \t\t}\n\t\t\t\t\t\t// \t\telse {\n\t\t\t\t\t\t// \t\t\tmessages.push(`Set count to ${newBins[currKey].count} in ${currKey} `)\n\t\t\t\t\t\t// \t\t\t// entries[modifiedData]\n\t\t\t\t\t\t// \t\t\t// modifiedData = {\n\t\t\t\t\t\t// \t\t\t// \t...rest, \"bins\": {\n\t\t\t\t\t\t// \t\t\t// \t\tnew: stations[newStationId] ? stations[newStationId].name : \"\",\n\t\t\t\t\t\t// \t\t\t// \t\told: stations[oldStationId] ? stations[oldStationId].name : \"\",\n\t\t\t\t\t\t// \t\t\t// \t}\n\t\t\t\t\t\t// \t\t\t// }\n\t\t\t\t\t\t// \t\t}\n\t\t\t\t\t\t// \t})\n\t\t\t\t\t\t//\n\t\t\t\t\t\t// }\n\n\t\t\t\t\t\tif(messages.length === 0) return null\n\n\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t<styled.HistoryItemContainer>\n\t\t\t\t\t\t\t\t<styled.HistoryUserContainer>\n\t\t\t\t\t\t\t\t\t<styled.HistoryUserText>{username}</styled.HistoryUserText>\n\t\t\t\t\t\t\t\t</styled.HistoryUserContainer>\n\t\t\t\t\t\t\t\t<styled.HistoryInfoContainer>\n\t\t\t\t\t\t\t\t\t{messages.map((currMessage) => {\n\t\t\t\t\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t\t\t\t\t<styled.HistoryInfoText>\n\t\t\t\t\t\t\t\t\t\t\t\t{currMessage}\n\t\t\t\t\t\t\t\t\t\t\t</styled.HistoryInfoText>\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t</styled.HistoryInfoContainer>\n\t\t\t\t\t\t\t\t<styled.HistoryDateContainer>\n\t\t\t\t\t\t\t\t\t<styled.HistoryDateText>{jsDate.toLocaleString()}</styled.HistoryDateText>\n\t\t\t\t\t\t\t\t</styled.HistoryDateContainer>\n\t\t\t\t\t\t\t</styled.HistoryItemContainer>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t</styled.HistoryBodyContainer>\n\t\t\t</styled.BodyContainer>\n\t\t)\n\t}\n\n\tconst renderProcessSelector = () => {\n\n\t\treturn(\n\t\t\t<styled.ProcessFieldContainer>\n\t\t\t\t<styled.ContentHeader>\n\t\t\t\t\t<styled.ContentTitle>Select Process</styled.ContentTitle>\n\t\t\t\t</styled.ContentHeader>\n\n\t\t\t\t<ScrollingButtonField\n\t\t\t\t\tname={\"processId\"}\n\t\t\t\t\tvalueKey={\"value\"}\n\t\t\t\t\tlabelKey={\"label\"}\n\t\t\t\t\toptions={\n\t\t\t\t\t\tprocessOptions.map((currProcessId, currIndex) => {\n\t\t\t\t\t\t\tconst currProcess = processes[currProcessId] || {}\n\t\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\t\tname: currProcessName = \"\"\n\t\t\t\t\t\t\t} = currProcess\n\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tlabel: currProcessName,\n\t\t\t\t\t\t\t\t\tvalue: currProcessId\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</styled.ProcessFieldContainer>\n\t\t)\n\t}\n\n\tif(loaded) {\n\t\treturn(\n\t\t\t<styled.StyledForm>\n\t\t\t\t<SubmitErrorHandler\n\t\t\t\t\tsubmitCount={submitCount}\n\t\t\t\t\tisValid={formikProps.isValid}\n\t\t\t\t\tonSubmitError={() => {}}\n\t\t\t\t\tformik={formikProps}\n\t\t\t\t/>\n\t\t\t\t<styled.Header>\n\t\t\t\t\t{((content === CONTENT.CALENDAR_START) || (content === CONTENT.CALENDAR_END) || (content === CONTENT.HISTORY) || (content === CONTENT.MOVE))  &&\n\t\t\t\t\t<Button\n\t\t\t\t\t\tonClick={()=>setContent(null)}\n\t\t\t\t\t\tschema={'error'}\n\t\t\t\t\t\t// secondary\n\t\t\t\t\t>\n\t\t\t\t\t\t<styled.Icon className=\"fas fa-arrow-left\"></styled.Icon>\n\t\t\t\t\t</Button>\n\t\t\t\t\t}\n\n\t\t\t\t\t<styled.Title>\n\t\t\t\t\t\t{formMode === FORM_MODES.CREATE ?\n\t\t\t\t\t\t\t\"Create Lot\"\n\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\"Edit Lot\"\n\t\t\t\t\t\t}\n\t\t\t\t\t</styled.Title>\n\n\t\t\t\t\t<Button\n\t\t\t\t\t\tsecondary\n\t\t\t\t\t\tonClick={close}\n\t\t\t\t\t\tschema={'error'}\n\t\t\t\t\t>\n\t\t\t\t\t\t<i className=\"fa fa-times\" aria-hidden=\"true\"/>\n\t\t\t\t\t</Button>\n\t\t\t\t</styled.Header>\n\n\t\t\t\t<styled.TheBody>\n\n\t\t\t\t\t<styled.SectionContainer>\n\n\n\t\t\t\t\t\t{showProcessSelector && renderProcessSelector()}\n\n\t\t\t\t\t\t<styled.ContentHeader>\n\t\t\t\t\t\t\t<styled.ContentTitle>Lot Name</styled.ContentTitle>\n\t\t\t\t\t\t</styled.ContentHeader>\n\t\t\t\t\t\t<styled.NameContainer>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tplaceholder=\"Enter name...\"\n\t\t\t\t\t\t\t\tInputComponent={Textbox}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</styled.NameContainer>\n\n\t\t\t\t\t\t{((content === null)) &&\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t{showLotInfo &&\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<styled.NameContainer>\n\t\t\t\t\t\t\t\t\t<styled.ContentHeader>\n\t\t\t\t\t\t\t\t\t\t<styled.ContentTitle>Lot Description</styled.ContentTitle>\n\t\t\t\t\t\t\t\t\t</styled.ContentHeader>\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\tname=\"description\"\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Description...\"\n\t\t\t\t\t\t\t\t\t\tInputComponent={Textbox}\n\t\t\t\t\t\t\t\t\t\tlines={5}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</styled.NameContainer>\n\n\t\t\t\t\t\t\t\t<styled.DatesContainer>\n\t\t\t\t\t\t\t\t\t<styled.DateItem onClick={()=>setContent(CONTENT.CALENDAR_START)}>\n\t\t\t\t\t\t\t\t\t\t<styled.DateText>{startDateText}</styled.DateText>\n\t\t\t\t\t\t\t\t\t</styled.DateItem>\n\n\t\t\t\t\t\t\t\t\t<styled.DateArrow className=\"fas fa-arrow-right\"></styled.DateArrow>\n\n\t\t\t\t\t\t\t\t\t<styled.DateItem onClick={()=>setContent(CONTENT.CALENDAR_START)}>\n\t\t\t\t\t\t\t\t\t\t<styled.DateText>{endDateText}</styled.DateText>\n\t\t\t\t\t\t\t\t\t</styled.DateItem>\n\t\t\t\t\t\t\t\t</styled.DatesContainer>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\t\t{formMode === FORM_MODES.UPDATE &&\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t// secondary\n\t\t\t\t\t\t\t\tstyle={{margin: \"0 0 1rem 0\", width: \"fit-content\"}}\n\t\t\t\t\t\t\t\ttype={\"button\"}\n\t\t\t\t\t\t\t\tonClick={()=>setShowLotInfo(!showLotInfo)}\n\t\t\t\t\t\t\t\tschema={\"lots\"}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{showLotInfo ? \"Hide Lot Details\" : \"Show Lot Details\"}\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t</>\n\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t</styled.SectionContainer>\n\n\t\t\t\t\t{(content === null) &&\n\t\t\t\t\trenderMainContent()\n\t\t\t\t\t}\n\t\t\t\t\t{(((content === CONTENT.CALENDAR_END) || (content === CONTENT.CALENDAR_START))) &&\n\t\t\t\t\trenderCalendarContent()\n\t\t\t\t\t}\n\t\t\t\t\t{(content === CONTENT.HISTORY) &&\n\t\t\t\t\trenderHistory()\n\t\t\t\t\t}\n\t\t\t\t\t{(content === CONTENT.MOVE) &&\n\t\t\t\t\trenderMoveContent()\n\t\t\t\t\t}\n\n\t\t\t\t</styled.TheBody>\n\n\t\t\t\t{/* render buttons for appropriate content */}\n\t\t\t\t{\n\t\t\t\t\t{\n\t\t\t\t\t\t\"CALENDAR_START\":\n\t\t\t\t\t\t\t<styled.ButtonContainer style={{width: \"100%\"}}>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tstyle={{...buttonStyle, width: \"8rem\"}}\n\t\t\t\t\t\t\t\t\tonClick={()=>setContent(null)}\n\t\t\t\t\t\t\t\t\tschema={\"ok\"}\n\t\t\t\t\t\t\t\t\tsecondary\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tOk\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tstyle={buttonStyle}\n\t\t\t\t\t\t\t\t\tonClick={()=>setContent(null)}\n\t\t\t\t\t\t\t\t\tschema={\"error\"}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</styled.ButtonContainer>,\n\t\t\t\t\t\t\"HISTORY\":\n\t\t\t\t\t\t\t<styled.ButtonContainer>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tstyle={{...buttonStyle}}\n\t\t\t\t\t\t\t\t\tonClick={()=>setContent(null)}\n\t\t\t\t\t\t\t\t\tschema={\"error\"}\n\t\t\t\t\t\t\t\t\t// secondary\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tGo Back\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</styled.ButtonContainer>,\n\t\t\t\t\t\t\"MOVE\":\n\t\t\t\t\t\t\t<styled.ButtonContainer>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tdisabled={submitDisabled}\n\t\t\t\t\t\t\t\t\tstyle={{...buttonStyle, width: \"8rem\"}}\n\t\t\t\t\t\t\t\t\ttype={\"button\"}\n\t\t\t\t\t\t\t\t\tonClick={()=> {\n\t\t\t\t\t\t\t\t\t\tsetFieldValue(\"buttonType\", FORM_BUTTON_TYPES.MOVE_OK)\n\t\t\t\t\t\t\t\t\t\tsubmitForm()\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tschema={\"ok\"}\n\t\t\t\t\t\t\t\t\tsecondary\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tOk\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\ttype={\"button\"}\n\t\t\t\t\t\t\t\t\tstyle={buttonStyle}\n\t\t\t\t\t\t\t\t\tonClick={()=>setContent(null)}\n\t\t\t\t\t\t\t\t\tschema={\"error\"}\n\t\t\t\t\t\t\t\t\t// secondary\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</styled.ButtonContainer>\n\t\t\t\t\t}[content] ||\n\t\t\t\t\t<styled.ButtonContainer>\n\t\t\t\t\t\t{formMode === FORM_MODES.CREATE ?\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tschema={'lots'}\n\t\t\t\t\t\t\t\t\ttype={\"button\"}\n\t\t\t\t\t\t\t\t\tdisabled={submitDisabled}\n\t\t\t\t\t\t\t\t\tstyle={{...buttonStyle, marginBottom: '0rem', marginTop: 0}}\n\t\t\t\t\t\t\t\t\tsecondary\n\t\t\t\t\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\t\t\t\t\tsetFieldValue(\"buttonType\", FORM_BUTTON_TYPES.ADD)\n\t\t\t\t\t\t\t\t\t\tsubmitForm()\n\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tAdd\n\t\t\t\t\t\t\t\t</Button>\n\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tschema={'lots'}\n\t\t\t\t\t\t\t\t\ttype={\"button\"}\n\t\t\t\t\t\t\t\t\tdisabled={submitDisabled}\n\t\t\t\t\t\t\t\t\tstyle={{...buttonStyle, marginBottom: '0rem', marginTop: 0}}\n\t\t\t\t\t\t\t\t\tsecondary\n\t\t\t\t\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\t\t\t\t\tsetFieldValue(\"buttonType\", FORM_BUTTON_TYPES.ADD_AND_NEXT)\n\t\t\t\t\t\t\t\t\t\tsubmitForm()\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tAdd & Next\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tschema={'lots'}\n\t\t\t\t\t\t\t\t\ttype={\"button\"}\n\t\t\t\t\t\t\t\t\tdisabled={submitDisabled}\n\t\t\t\t\t\t\t\t\tstyle={{...buttonStyle, marginBottom: '0rem', marginTop: 0}}\n\t\t\t\t\t\t\t\t\tsecondary\n\t\t\t\t\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\t\t\t\t\tsetFieldValue(\"buttonType\", FORM_BUTTON_TYPES.SAVE)\n\t\t\t\t\t\t\t\t\t\tsubmitForm()\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tSave\n\t\t\t\t\t\t\t\t</Button>\n\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tschema={'lots'}\n\t\t\t\t\t\t\t\t\tstyle={{...buttonStyle, marginBottom: '0rem', marginTop: 0}}\n\t\t\t\t\t\t\t\t\tsecondary\n\t\t\t\t\t\t\t\t\ttype={\"button\"}\n\t\t\t\t\t\t\t\t\tonClick={() => onDeleteClick(binId)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<i style={{marginRight: \".5rem\"}} className=\"fa fa-trash\" aria-hidden=\"true\"/>\n\n\t\t\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tschema={'lots'}\n\t\t\t\t\t\t\t\t\ttype={\"button\"}\n\t\t\t\t\t\t\t\t\tstyle={{...buttonStyle, marginBottom: '0rem', marginTop: 0}}\n\t\t\t\t\t\t\t\t\tsecondary\n\t\t\t\t\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\t\t\t\t\tsetContent(CONTENT.MOVE)\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tMove\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t}\n\t\t\t\t\t</styled.ButtonContainer>\n\t\t\t\t}\n\t\t\t</styled.StyledForm>\n\t\t)\n\t}\n\telse {\n\t\treturn(\n\t\t\t<FadeLoader\n\t\t\t\tcss={styled.FadeLoaderCSS}\n\t\t\t\theight={5}\n\t\t\t\twidth={3}\n\t\t\t\tloading={true}\n\t\t\t/>\n\t\t)\n\t}\n\n\t\t\t}\n\n// overwrite default button text color since it's hard to see on the lots background color\n// const buttonStyle = {color: \"black\"}\nconst buttonStyle = {marginBottom: '0rem', marginTop: 0}\n\n\nconst CardEditor = (props) => {\n\tconst {\n\t\tisOpen,\n\t\tclose,\n\t\tprocessId,\n\t\tprocessOptions,\n\t\tshowProcessSelector\n\t} = props\n\n\t// redux state\n\tconst cards = useSelector(state => { return state.cardsReducer.cards })\n\n\t// actions\n\tconst dispatch = useDispatch()\n\tconst onPostCard = async (card) => await dispatch(postCard(card))\n\tconst onGetCard = async (cardId) => await dispatch(getCard(cardId))\n\tconst onPutCard = async (card, ID) => await dispatch(putCard(card, ID))\n\tconst onDeleteCard = async (cardId, processId) => await dispatch(deleteCard(cardId, processId))\n\n\t// component state\n\tconst [cardDataInterval, setCardDataInterval] = useState(null)\n\n\tconst [cardId, setCardId] = useState(props.cardId) //cardId and binId are stored as internal state but initialized from props (if provided)\n\tconst [binId, setBinId] = useState(props.binId)\n\tconst [content, setContent] = useState(null)\n\tconst [loaded, setLoaded] = useState(false)\n\tconst [formMode, setFormMode] = useState(props.cardId ? FORM_MODES.UPDATE : FORM_MODES.CREATE) // if cardId was passed, update existing. Otherwise create new\n\n\t// get card object from redux by cardId\n\tconst card = cards[cardId] || null\n\n\t// extract card attributes\n\tconst {\n\t\tbins = {}\n\t} = card || {}\n\n\t/*\n\t*\n\t* */\n\tconst handleDeleteClick = async (selectedBin) => {\n\t\tconst {\n\t\t\t[selectedBin]: currentBin,\n\t\t\t...remainingBins\n\t\t} = bins\n\n\t\tvar submitItem = {\n\t\t\t...card,\n\t\t\tbins: {...remainingBins},\n\t\t}\n\n\t\t// if there are no remaining bins, delete the card\n\t\tif(isEmpty(remainingBins)) {\n\t\t\tonDeleteCard(cardId, processId)\n\t\t}\n\n\t\t// otherwise update the card to contain only the remaining bins\n\t\telse {\n\t\t\tconst result = await onPutCard(submitItem, cardId)\n\t\t}\n\n\t\tclose()\n\t}\n\n\t/*\n\t*\n\t* */\n\tconst handleGetCard = async (cardId) => {\n\t\tif(cardId) {\n\t\t\tconst result = await onGetCard(cardId)\n\t\t}\n\t\tif(!loaded) {\n\t\t\tsetLoaded(true)\n\t\t}\n\t}\n\n\t/*\n\t*\n\t* */\n\tuseEffect( () => {\n\t\thandleGetCard(cardId)\n\t\tvar timer = setInterval(()=>handleGetCard(cardId),5000)\n\n\t\treturn () => {\n\t\t\tclearInterval(timer)\n\t\t}\n\n\t}, [cardId])\n\n\t/*\n\t* if card exists, set form mode to update\n\t* */\n\tuseEffect( () => {\n\t\tif(card && !loaded) {\n\t\t\tsetLoaded(true) // if card already exists, set loaded to true\n\t\t}\n\n\t}, [card])\n\n\t/*\n\t*\n\t* */\n\tconst handleSubmit = async (values, formMode) => {\n\n\t\tconst {\n\t\t\tname,\n\t\t\tbins,\n\t\t\tdescription,\n\t\t\tmoveCount,\n\t\t\tmoveLocation,\n\t\t\tbuttonType,\n\t\t\tprocessId: selectedProcessId\n\t\t} = values\n\n\n\t\tconst start = values?.dates?.start || null\n\t\tconst end = values?.dates?.end || null\n\n\t\tif(content === CONTENT.MOVE) {\n\t\t\t// moving card need to update count for correct bins\n\t\t\tif(moveCount && moveLocation) {\n\n\t\t\t\tvar submitItem = {\n\t\t\t\t\tname,\n\t\t\t\t\tbins,\n\t\t\t\t\tdescription,\n\t\t\t\t\tprocess_id: card.process_id,\n\t\t\t\t\tstart_date: start,\n\t\t\t\t\tend_date: end,\n\t\t\t\t}\n\n\t\t\t\t/*\n\t\t\t\t* if lot items are being moved to a different bin, the submitItem's bins key needs to be updated\n\t\t\t\t* namely, the count field for the destination and origin bins needs to updated\n\t\t\t\t*\n\t\t\t\t* The destination bin's count should be incremented by the number of items being moved\n\t\t\t\t* The current bin's count should be decremented by the number of items being moved\n\t\t\t\t*\n\t\t\t\t* */\n\n\t\t\t\t// get count and location info for move from form values\n\t\t\t\tconst {\n\t\t\t\t\tname: moveName,\n\t\t\t\t\t_id: destinationBinId,\n\t\t\t\t} = moveLocation[0]\n\n\t\t\t\t// extract destination, current, and remaining bins\n\t\t\t\tconst {\n\t\t\t\t\t[destinationBinId]: destinationBin,\n\t\t\t\t\t[binId]: currentBin,\n\t\t\t\t\t...unalteredBins\n\t\t\t\t} = bins\n\n\t\t\t\t// update counts of current and destination bins\n\t\t\t\tconst currentBinCount = parseInt(currentBin ? currentBin.count : 0) - moveCount\n\t\t\t\tconst destinationBinCount = parseInt(destinationBin ? destinationBin.count : 0) + moveCount\n\n\t\t\t\t// update bins\n\t\t\t\tvar updatedBins\n\n\t\t\t\tif(currentBinCount) {\n\t\t\t\t\t// both the current bin and the destination bin have items, so update both lots and spread the remaining\n\n\t\t\t\t\tupdatedBins = {\n\t\t\t\t\t\t...unalteredBins, \t\t\t// spread remaining bins\n\t\t\t\t\t\t[destinationBinId]: {\t\t// update destination bin's count, keep remaining attributes\n\t\t\t\t\t\t\t...destinationBin,\n\t\t\t\t\t\t\tcount: destinationBinCount\n\t\t\t\t\t\t},\n\t\t\t\t\t\t[binId]: {\t\t\t// update current bin's count, keep remaining attributes\n\t\t\t\t\t\t\t...currentBin,\n\t\t\t\t\t\t\tcount: currentBinCount\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\telse {\n\t\t\t\t\t// if currentBinCount is 0, the bin no longer has any items associated with the lot, so remove it\n\t\t\t\t\tupdatedBins = {\n\t\t\t\t\t\t...unalteredBins,\n\t\t\t\t\t\t[destinationBinId]: {\n\t\t\t\t\t\t\t...destinationBin,\n\t\t\t\t\t\t\tcount: destinationBinCount\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// update submit items bins\n\t\t\t\tsubmitItem = {\n\t\t\t\t\t...submitItem,\n\t\t\t\t\tbins: updatedBins\n\t\t\t\t}\n\n\t\t\t\t// update card\n\t\t\t\tonPutCard(submitItem, cardId)\n\t\t\t}\n\t\t}\n\n\t\telse {\n\t\t\t// update (PUT)\n\t\t\tif(formMode === FORM_MODES.UPDATE) {\n\n\t\t\t\tvar submitItem = {\n\t\t\t\t\tname,\n\t\t\t\t\tbins,\n\t\t\t\t\tdescription,\n\t\t\t\t\tprocess_id: card.process_id,\n\t\t\t\t\tstart_date: start,\n\t\t\t\t\tend_date: end,\n\t\t\t\t}\n\n\t\t\t\tonPutCard(submitItem, cardId)\n\t\t\t}\n\n\t\t\t// create (POST)\n\t\t\telse {\n\n\t\t\t\tconst submitItem = {\n\t\t\t\t\tname,\n\t\t\t\t\tbins,\n\t\t\t\t\tdescription,\n\t\t\t\t\tprocess_id: processId ? processId : selectedProcessId,\n\t\t\t\t\tstart_date: start,\n\t\t\t\t\tend_date: end,\n\t\t\t\t}\n\n\t\t\t\tconst postResult = await onPostCard(submitItem)\n\n\t\t\t\tif(!(postResult instanceof Error)) {\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconsole.log(\"postResult\",postResult)\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\n\t}\n\n\treturn(\n\t\t<styled.Container\n\t\t\tisOpen={isOpen}\n\t\t\tonRequestClose={()=> {\n\t\t\t\tclose()\n\n\t\t\t}}\n\t\t\tcontentLabel=\"Lot Editor Form\"\n\t\t\tstyle={{\n\t\t\t\toverlay: {\n\t\t\t\t\tzIndex: 500\n\t\t\t\t},\n\t\t\t\tcontent: {\n\n\t\t\t\t}\n\t\t\t}}\n\t\t>\n\t\t\t<Formik\n\t\t\t\tinitialValues={{\n\t\t\t\t\tprocessId: processId,\n\t\t\t\t\tmoveCount: 0,\n\t\t\t\t\tmoveLocation: [],\n\t\t\t\t\tname: card ? card.name : \"\",\n\t\t\t\t\tdescription: card ? card.description : \"\",\n\t\t\t\t\tbins: card && card.bins ?\n\t\t\t\t\t\tcard.bins\n\t\t\t\t\t\t:\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"QUEUE\": {\n\t\t\t\t\t\t\t\tcount: 0\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\tdates: card ? {\n\t\t\t\t\t\tstart: card.start_date,\n\t\t\t\t\t\tend: card.end_date,\n\t\t\t\t\t} : null,\n\t\t\t\t\tcount: card ? card.count : 0,\n\t\t\t\t\t// object: (card && card.object_id) ?  [objects[card.object_id]] : []\n\t\t\t\t}}\n\n\t\t\t\t// validation control\n\t\t\t\tvalidationSchema={getCardSchema((content === CONTENT.MOVE) ? CARD_SCHEMA_MODES.MOVE_LOT : CARD_SCHEMA_MODES.EDIT_LOT, bins[binId]?.count ? bins[binId].count : 0)}\n\t\t\t\tvalidateOnChange={true}\n\t\t\t\tvalidateOnMount={false} // leave false, if set to true it will generate a form error when new data is fetched\n\t\t\t\tvalidateOnBlur={true}\n\n\t\t\t\t// enableReinitialize={true} // leave false, otherwise values will be reset when new data is fetched for editing an existing item\n\t\t\t\tonSubmit={async (values, { setSubmitting, setTouched, resetForm }) => {\n\t\t\t\t\t// set submitting to true, handle submit, then set submitting to false\n\t\t\t\t\t// the submitting property is useful for eg. displaying a loading indicator\n\t\t\t\t\tconst {\n\t\t\t\t\t\tbuttonType\n\t\t\t\t\t} = values\n\n\t\t\t\t\tsetSubmitting(true)\n\t\t\t\t\tawait handleSubmit(values, formMode)\n\t\t\t\t\tsetTouched({}) // after submitting, set touched to empty to reflect that there are currently no new changes to save\n\t\t\t\t\tsetSubmitting(false)\n\n\t\t\t\t\tswitch(buttonType) {\n\t\t\t\t\t\tcase FORM_BUTTON_TYPES.ADD:\n\t\t\t\t\t\t\tresetForm()\n\t\t\t\t\t\t\tclose()\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\tcase FORM_BUTTON_TYPES.MOVE_OK:\n\t\t\t\t\t\t\tresetForm()\n\t\t\t\t\t\t\tclose()\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\tcase FORM_BUTTON_TYPES.ADD_AND_NEXT:\n\t\t\t\t\t\t\tresetForm()\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\tcase FORM_BUTTON_TYPES.SAVE:\n\t\t\t\t\t\t\tclose()\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{formikProps => {\n\n\t\t\t\t\t// extract formik props\n\t\t\t\t\tconst {\n\t\t\t\t\t\terrors,\n\t\t\t\t\t\tvalues,\n\t\t\t\t\t\ttouched,\n\t\t\t\t\t\tisSubmitting,\n\t\t\t\t\t\tsubmitCount,\n\t\t\t\t\t\tsetFieldValue,\n\t\t\t\t\t\tsubmitForm\n\t\t\t\t\t} = formikProps\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<FormComponent\n\t\t\t\t\t\t\tloaded={loaded}\n\t\t\t\t\t\t\tprocessId={processId}\n\t\t\t\t\t\t\tclose={close}\n\t\t\t\t\t\t\tformMode={formMode}\n\t\t\t\t\t\t\tformikProps={formikProps}\n\t\t\t\t\t\t\tcard={card}\n\t\t\t\t\t\t\tbins={bins}\n\t\t\t\t\t\t\tbinId={binId}\n\t\t\t\t\t\t\tsetBinId={setBinId}\n\t\t\t\t\t\t\tcardId={cardId}\n\t\t\t\t\t\t\tisOpen={isOpen}\n\t\t\t\t\t\t\tonDeleteClick={handleDeleteClick}\n\t\t\t\t\t\t\terrors={errors}\n\t\t\t\t\t\t\tvalues={values}\n\t\t\t\t\t\t\ttouched={touched}\n\t\t\t\t\t\t\tisSubmitting={isSubmitting}\n\t\t\t\t\t\t\tsubmitCount={submitCount}\n\t\t\t\t\t\t\tsetFieldValue={setFieldValue}\n\t\t\t\t\t\t\tsubmitForm={submitForm}\n\t\t\t\t\t\t\tformikProps={formikProps}\n\t\t\t\t\t\t\tprocessOptions={processOptions}\n\t\t\t\t\t\t\tshowProcessSelector={showProcessSelector}\n\t\t\t\t\t\t\tcontent={content}\n\t\t\t\t\t\t\tsetContent={setContent}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)\n\t\t\t\t}}\n\t\t\t</Formik>\n\t\t</styled.Container>\n\t)\n}\n\n// Specifies propTypes\nCardEditor.propTypes = {\n\tbinId: PropTypes.string,\n\t\tshowProcessSelector: PropTypes.bool,\n};\n\n// Specifies the default values for props:\nCardEditor.defaultProps = {\n\tbinId: \"QUEUE\",\n\t\tshowProcessSelector: false\n};\n\nexport default CardEditor","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n\tdisplay: flex;\n\twidth: fit-content;\n\tbackground: ${props => props.theme.bg.quaternary};\n\tflex-direction: column;\n\t// flex: 1;\n\tpadding: 1rem;\n\tcolor: ${props => props.theme.bg.octonary};\n\tborder-right: 1px solid ${props => props.theme.bg.tertiary};\n`\n\nexport const Header = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\tmargin-bottom: 1rem;\n`\n\nexport const Title = styled.span`\n\tfont-size: ${props => props.theme.fontSize.sz2};\n\tfont-weight: ${props => props.theme.fontWeight.bold};\n`\n\nexport const CloseButton = styled.i`\n\tfont-size: 1.5rem;\n`\n","import React from \"react\";\n\nimport Button from \"../../../../basic/button/button\";\n\nimport * as styled from \"./card_menu.style\";\nimport DropDownSearch from \"../../../../basic/drop_down_search_v2/drop_down_search\";\nimport DropDownSearchField from \"../../../../basic/form/drop_down_search_field/drop_down_search_field\";\nimport {useSelector} from \"react-redux\";\nimport {useHistory, useParams} from \"react-router-dom\";\n\n\nconst CardMenu = (props) => {\n\tconst {\n\t\tcurrentProcess,\n\t\tclose\n\t} = props\n\n\tconst history = useHistory()\n\tconst processes = Object.values(useSelector(state => { return state.processesReducer.processes }))\n\tlet params = useParams()\n\tconst {\n\t\tid,\n\t\tpage,\n\t\tsubpage\n\t} = params\n\n\treturn(\n\t\t<styled.Container>\n\t\t\t<styled.Header>\n\t\t\t\t<styled.Title>Zones</styled.Title>\n\t\t\t\t<styled.CloseButton\n\t\t\t\t\tclassName=\"fa fa-times\"\n\t\t\t\t\taria-hidden=\"true\"\n\t\t\t\t\tonClick={close}\n\t\t\t\t/>\n\n\t\t\t</styled.Header>\n\n\n\t\t\t<Button\n\t\t\t\tschema={'lots'}\n\t\t\t\tstyle={{ margin: 0, marginBottom: \"1rem\" }}\n\t\t\t\tonClick={async () => {\n\t\t\t\t\thistory.replace ('/lots/summary')\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tLots Summary\n\t\t\t</Button>\n\t\t\t<styled.Title style={{marginBottom: \"1rem\"}}>Processes</styled.Title>\n\t\t\t<DropDownSearch\n\t\t\t\tvalues={currentProcess ? [currentProcess] : []}\n\t\t\t\toptions={processes}\n\t\t\t\tonChange={values => {\n\t\t\t\t\tconst processId = values[0]?._id\n\t\t\t\t\tconst currentPath = history.location.pathname\n\t\t\t\t\t// if(processId) history.push(currentPath + '/' + processId + \"/card\")\n\t\t\t\t\t// history.push ('./../' + processId + \"/card\")\n\t\t\t\t\thistory.replace ('/processes/' + processId + \"/lots\")\n\n\t\t\t\t}}\n\t\t\t\tpattern={null}\n\t\t\t\tlabelField={'name'}\n\t\t\t\tvalueField={\"_id\"}\n\t\t\t\tonDropdownOpen={() => {\n\t\t\t\t}}\n\t\t\t/>\n\n\n\n\t\t</styled.Container>\n\t)\n}\n\nexport default CardMenu\n","import styled, { css } from \"styled-components\";\nimport {Container} from \"react-smooth-dnd\";\n\n// export const RouteContainer = styled.div`\n//     display: flex;\n//     flex: 1;\n//     flex-direction: column;\n//     background: yellow;\n// `\n\nconst minHeight = \"10rem\"\nexport const RotatedRouteName = styled.span`\n// background: red;\n\ttransform: rotate(-90deg);\n\t// transform: translateY(50%);\n`\n\n\nexport const StationContainerCss = css`\n\tdisplay: flex;\n    flex-direction: column;\n    min-height: ${minHeight};\n    \n    width: ${props => props.isCollapsed ? \"2rem\" : \"15rem\"};\n    max-width: ${props => props.isCollapsed ? \"2rem\" : \"15rem\"};\n    min-width: ${props => props.isCollapsed ? \"2rem\" : \"15rem\"};\n    margin-right: 1rem;\n    \n    border-radius: 1rem;\n    overflow: hidden;\n    \n    color: ${props => props.theme.bg.octonary};\n`\n\nexport const StationContainer = styled.div`\n    ${StationContainerCss};\n`\n\nexport const StationHeader = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    justify-content: center;\n    align-items: center;\n    background: ${props => props.theme.bg.quinary};\n    padding: .5rem 1rem;\n    \n \n   \n`\n\nexport const HeaderContent = styled.div`\n    display: flex;\n    flex-direction: row;\n    width: 100%;\n    justify-content: space-between;\n    align-items: center;\n`\n\n\nexport const TitleContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n`\n\n\n\nexport const RouteContainer = styled.div`\n\tdisplay: flex;\n\tborder-bottom: 1px solid black;\n\twidth: 100%;\n`\n\nexport const LabelContainer = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\t// justify-content: space-between;\n`\n\nexport const StationLabel = styled.span`\n    text-align: center;\n    font-size: ${props => props.theme.fontSize.sz4};\n    border-bottom: 1px solid black;\n    width: 100%;\n    padding: .25rem;\n    background: ${props => props.theme.bg.senary};\n`\n\nexport const StationTitle = styled.span`\n    text-align: center;\n    font-size: ${props => props.theme.fontSize.sz3};\n`\n\n\n\nexport const StationButton = styled.button`\n\n`\n\nexport const BodyContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\t// flex: 1;\n\tmin-height: ${minHeight};\n\toverflow: hidden;\n\tbackground: ${props => props.theme.bg.quaternary};\n\topacity: ${props => props.dragEnter ? 0.75 : 1};\n\tborder-bottom-right-radius: 1rem;\n\tborder-bottom-left-radius: 1rem;\n\tjustify-content: center;\n`\n","import styled, { css } from \"styled-components\";\nimport {Container} from \"react-smooth-dnd\";\n\n// export const RouteContainer = styled.div`\n//     display: flex;\n//     flex: 1;\n//     flex-direction: column;\n//     background: yellow;\n// `\n\nconst minHeight = \"10rem\"\nexport const RotatedRouteName = styled.span`\n// background: red;\n\ttransform: rotate(-90deg);\n\t// transform: translateY(50%);\n`\n\n\nexport const StationContainerCss = css`\n\t\n`\n\nexport const StationContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    min-height: ${minHeight};\n    \n    width: ${props => props.isCollapsed ? \"2rem\" : props.maxWidth};\n    max-width: ${props => props.isCollapsed ? \"2rem\" : props.maxWidth};\n    min-width: ${props => props.isCollapsed ? \"2rem\" : props.maxWidth};\n    margin-right: 1rem;\n    max-height: ${props => props.maxHeight};\n    \n    border-radius: 1rem;\n    overflow: hidden;\n    \n    color: ${props => props.theme.bg.octonary};\n`\n\nexport const StationHeader = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    justify-content: center;\n    align-items: center;\n    background: ${props => props.theme.bg.quinary};\n \n   \n`\n\nexport const HeaderContent = styled.div`\n    display: flex;\n    flex-direction: row;\n    width: 100%;\n    justify-content: space-between;\n    align-items: center;\n    padding-left: 1rem;\n    padding-right: 1rem;\n \n \n`\n\n\nexport const TitleContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n`\n\n\n\nexport const RouteContainer = styled.div`\n\tdisplay: flex;\n\tborder-bottom: 1px solid black;\n\twidth: 100%;\n`\n\nexport const LabelContainer = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\t// justify-content: space-between;\n`\n\nexport const StationLabel = styled.span`\n    text-align: center;\n    font-size: ${props => props.theme.fontSize.sz4};\n`\n\nexport const StationTitle = styled.span`\n    text-align: center;\n    font-size: ${props => props.theme.fontSize.sz3};\n`\n\n\n\nexport const StationButton = styled.button`\n\n`\n\nexport const BodyContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\t// flex: 1;\n\tmin-height: ${minHeight};\n\toverflow: hidden;\n\tbackground: ${props => props.theme.bg.quaternary};\n\topacity: ${props => props.dragEnter ? 0.75 : 1};\n\tborder-bottom-right-radius: 1rem;\n\tborder-bottom-left-radius: 1rem;\n\tjustify-content: center;\n`\n","import { SET } from \"../types/prefixes\"\nimport {CARD_DRAGGING, COLUMN_HOVERING, SET_SIZE} from \"../types/ui_types\"\n\nexport const setCardDragging = (lotId, binId) => async dispatch => {\n\tdispatch({ type: SET + CARD_DRAGGING, payload: {lotId, binId} });\n}\n\nexport const setColumnHovering = (isHoveringOverColumn) => async dispatch => {\n\tdispatch({ type: SET + COLUMN_HOVERING, payload: isHoveringOverColumn });\n}\n","import {SortableContainer} from \"react-sortable-hoc\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {deleteCard, putCard} from \"../../../../../../redux/actions/card_actions\";\nimport * as styled from \"./column.style\";\nimport {Container} from \"react-smooth-dnd\";\nimport Card from \"../../card/card\";\nimport React, {useState} from \"react\";\nimport {setCardDragging, setColumnHovering} from \"../../../../../../redux/actions/card_page_actions\";\nimport {generateBinId, sortBy} from \"../../../../../../methods/utils/card_utils\";\n\n\n// const animationDuration = 500\nconst Column = ((props) => {\n\n\tconst {\n\t\tstation_id,\n\t\tstationName = \"Unnamed\",\n\t\thandleCardClick,\n\t\tcards,\n\t\tprocessId,\n\t\tHeaderContent,\n\t\tisCollapsed,\n\t\tmaxWidth,\n\t\tmaxHeight,\n\t\tsortMode\n\t} = props\n\n\tif(sortMode) {\n\t\tsortBy(cards, sortMode)\n\t}\n\n\tconst objects = useSelector(state => { return state.objectsReducer.objects })\n\tconst reduxCards = useSelector(state => { return state.cardsReducer.processCards[processId] }) || {}\n\n\tconst [dragEnter, setDragEnter] = useState(false)\n\n\tconst dispatch = useDispatch()\n\tconst onPutCard = async (card, ID) => await dispatch(putCard(card, ID))\n\tconst dispatchSetCardDragging = async (lotId, binId) => await dispatch(setCardDragging(lotId, binId))\n\n\tconst shouldAcceptDrop = (sourceContainerOptions, payload) => {\n\t\tconst {\n\t\t\tbinId,\n\t\t\tcardId,\n\t\t\tprocess_id: oldProcessId,\n\t\t\t...remainingPayload\n\t\t} = payload\n\n\t\tif(oldProcessId !== processId) return false\n\t\t// if(binId === station_id) return false\n\t\treturn true\n\t}\n\n\tconst handleDrop = async (dropResult) => {\n\t\tconst { removedIndex, addedIndex, payload, element } = dropResult;\n\n\t\tif (payload === null) { //  No new button, only reorder\n\n\t\t} else {\n\t\t\tif(addedIndex !== null) {\n\t\t\t\tconst {\n\t\t\t\t\tbinId,\n\t\t\t\t\tcardId,\n\t\t\t\t\tcount,\n\t\t\t\t\t// process_id: oldProcessId,\n\t\t\t\t\t...remainingPayload\n\t\t\t\t} = payload\n\n\t\t\t\tawait dispatchSetCardDragging(cardId, binId)\n\n\t\t\t\tif(!(binId === station_id)) {\n\n\n\t\t\t\t\tconst droppedCard = reduxCards[cardId] ? reduxCards[cardId] : {}\n\n\t\t\t\t\tconst oldBins = droppedCard.bins ? droppedCard.bins : {}\n\t\t\t\t\tconst {\n\t\t\t\t\t\t[binId]: movedBin,\n\t\t\t\t\t\t...remainingOldBins\n\t\t\t\t\t} = oldBins || {}\n\n\n\t\t\t\t\tif(movedBin) {\n\t\t\t\t\t\t// already contains items in bin\n\t\t\t\t\t\tif(oldBins[station_id] && movedBin) {\n\n\t\t\t\t\t\t\tconst oldCount = parseInt(oldBins[station_id]?.count || 0)\n\t\t\t\t\t\t\tconst movedCount = parseInt(movedBin?.count || 0)\n\n\t\t\t\t\t\t\tawait onPutCard({\n\t\t\t\t\t\t\t\t...remainingPayload,\n\t\t\t\t\t\t\t\tbins: {\n\t\t\t\t\t\t\t\t\t...remainingOldBins,\n\t\t\t\t\t\t\t\t\t[station_id]: {\n\t\t\t\t\t\t\t\t\t\t...oldBins[station_id],\n\t\t\t\t\t\t\t\t\t\tcount:  oldCount + movedCount\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}, cardId)\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// no items in bin\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tconst a = await onPutCard({\n\t\t\t\t\t\t\t\t...remainingPayload,\n\t\t\t\t\t\t\t\tbins: {\n\t\t\t\t\t\t\t\t\t...remainingOldBins,\n\t\t\t\t\t\t\t\t\t[station_id]: {\n\t\t\t\t\t\t\t\t\t\t...movedBin,\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}, cardId)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tawait dispatchSetCardDragging(null, null)\n\t\t\t}\n\t\t}\n\n\t}\n\n\tconst renderCards = () => {\n\t\treturn(\n\t\t\t<styled.BodyContainer\n\t\t\t\tdragEnter={dragEnter}\n\t\t\t>\n\t\t\t\t<div onTouchEndCapture={null}></div>\n\t\t\t\t<Container\n\t\t\t\t\tonDrop={async (DropResult)=> {\n\t\t\t\t\t\tawait handleDrop(DropResult)\n\t\t\t\t\t\tsetDragEnter(false)\n\t\t\t\t\t}}\n\t\t\t\t\tshouldAcceptDrop={shouldAcceptDrop}\n\t\t\t\t\tgetGhostParent={()=>document.body}\n\t\t\t\t\tonDragStart={(dragStartParams, b, c)=>{}}\n\t\t\t\t\tonDragEnd={(dragEndParams)=>{}}\n\t\t\t\t\tonDragEnter={()=> {\n\t\t\t\t\t\tsetDragEnter(true)\n\t\t\t\t\t}}\n\t\t\t\t\tonDragLeave={()=> {\n\t\t\t\t\t\tsetDragEnter(false)\n\t\t\t\t\t}}\n\t\t\t\t\tonDropReady={(dropResult)=>{}}\n\t\t\t\t\tgroupName=\"process-cards\"\n\t\t\t\t\tgetChildPayload={index =>\n\t\t\t\t\t\tcards[index]\n\t\t\t\t\t}\n\t\t\t\t\tstyle={{overflow: \"auto\",height: \"100%\", padding: \"1rem 1rem 2rem 1rem\" }}\n\t\t\t\t>\n\t\t\t\t\t\t{cards.map((card, index) => {\n\t\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\t\t_id,\n\t\t\t\t\t\t\t\tcount = 0,\n\t\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\t\tobject_id,\n\t\t\t\t\t\t\t\tcardId,\n\t\t\t\t\t\t\t\tstart_date,\n\t\t\t\t\t\t\t\tend_date\n\t\t\t\t\t\t\t} = card\n\n\t\t\t\t\t\t\t// const lotName = lots[lot_id] ? lots[lot_id].name : null\n\t\t\t\t\t\t\tconst objectName = objects[object_id] ? objects[object_id].name : null\n\n\t\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t\t<Card\n\t\t\t\t\t\t\t\t\tname={name}\n\t\t\t\t\t\t\t\t\tstart_date={start_date}\n\t\t\t\t\t\t\t\t\tend_date={end_date}\n\t\t\t\t\t\t\t\t\tobjectName={objectName}\n\t\t\t\t\t\t\t\t\tcount={count}\n\t\t\t\t\t\t\t\t\tid={index}\n\t\t\t\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\t\t\t\tonClick={()=>handleCardClick(cardId, processId, station_id)}\n\t\t\t\t\t\t\t\t\tcontainerStyle={{marginBottom: \"0.5rem\"}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})}\n\n\t\t\t\t</Container>\n\t\t\t</styled.BodyContainer>\n\n\t\t)\n\t}\n\n\tif(isCollapsed) {\n\t\treturn(\n\t\t\t<styled.StationContainer\n\t\t\t\tmaxHeight={maxHeight}\n\t\t\t\tisCollapsed={isCollapsed}\n\t\t\t\tmaxWidth={maxWidth}\n\t\t\t>\n\t\t\t\t{HeaderContent}\n\n\t\t\t\t<styled.BodyContainer>\n\t\t\t\t\t<styled.RotatedRouteName>{stationName}</styled.RotatedRouteName>\n\t\t\t\t</styled.BodyContainer>\n\t\t\t</styled.StationContainer>\n\t\t)\n\t}\n\n\telse {\n\t\treturn(\n\t\t\t<styled.StationContainer\n\t\t\t\tisCollapsed={isCollapsed}\n\t\t\t\tmaxWidth={maxWidth}\n\t\t\t\tmaxHeight={maxHeight}\n\t\t\t>\n\t\t\t\t{HeaderContent}\n\n\t\t\t\t{renderCards()}\n\t\t\t</styled.StationContainer>\n\t\t)\n\t}\n\n})\n\nexport default Column","import {SortableContainer} from \"react-sortable-hoc\";\n\nimport * as styled from \"./station_column.style\";\n\nimport React, {useState} from \"react\";\n\nimport Column from \"../column/column\"\n\nconst StationsColumn = ((props) => {\n\tconst {\n\t\tstation_id,\n\t\tstationName = \"Unnamed\",\n\t\thandleCardClick,\n\t\tcards = [],\n\t\tprocessId,\n\t\tmaxHeight,\n\t\tsortMode\n\t} = props\n\n\tconst [isCollapsed, setCollapsed] = useState(false)\n\n\treturn(\n\t\t<Column\n\t\t\tmaxWidth={\"20rem\"}\n\t\t\tsortMode={sortMode}\n\t\t\tmaxHeight={maxHeight}\n\t\t\tHeaderContent={\n\t\t\t\t!isCollapsed ?\n\t\t\t\t<styled.StationHeader>\n\t\t\t\t\t<styled.HeaderContent>\n\t\t\t\t\t\t<i className=\"fa fa-chevron-down\" aria-hidden=\"true\"\n\t\t\t\t\t\t   onClick={() => setCollapsed(true)}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<styled.LabelContainer>\n\n\t\t\t\t\t\t\t<styled.StationTitle>{stationName}</styled.StationTitle>\n\t\t\t\t\t\t</styled.LabelContainer>\n\n\t\t\t\t\t\t<i className=\"fas fa-ellipsis-h\" style={{opacity: 0}}></i>\n\t\t\t\t\t</styled.HeaderContent>\n\t\t\t\t</styled.StationHeader>\n\t\t\t\t\t:\n\t\t\t\t\t<styled.StationHeader>\n\t\t\t\t\t\t<i className=\"fa fa-chevron-right\" aria-hidden=\"true\"\n\t\t\t\t\t\t\tonClick={() => setCollapsed(false)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</styled.StationHeader>\n\t\t\t}\n\t\t\tstation_id={station_id}\n\t\t\tstationName = {stationName}\n\t\t\thandleCardClick={handleCardClick}\n\t\t\tcards = {cards}\n\t\t\tprocessId={processId}\n\t\t\tisCollapsed={isCollapsed}\n\t\t/>\n\t)\n\n\n})\n\nexport default StationsColumn","import styled, { css } from \"styled-components\";\nimport {Container} from \"react-smooth-dnd\";\n\n// export const RouteContainer = styled.div`\n//     display: flex;\n//     flex: 1;\n//     flex-direction: column;\n//     background: yellow;\n// `\n\nconst minHeight = \"10rem\"\nexport const RotatedRouteName = styled.span`\n// background: red;\n\ttransform: rotate(-90deg);\n\t// transform: translateY(50%);\n`\n\n\nexport const StationContainerCss = css`\n\tdisplay: flex;\n    flex-direction: column;\n    min-height: ${minHeight};\n    \n    width: ${props => props.isCollapsed ? \"2rem\" : \"fit-content\"};\n    max-width: ${props => props.isCollapsed ? \"2rem\" : \"fit-content\"};\n    min-width: ${props => props.isCollapsed ? \"2rem\" : \"fit-content\"};\n    margin-right: 1rem;\n    \n    border-radius: 1rem;\n    overflow: hidden;\n    \n    color: ${props => props.theme.bg.octonary};\n`\n\nexport const StationContainer = styled.div`\n    ${StationContainerCss};\n`\n\nexport const StationHeader = styled.div`\n    display: flex;\n    flex-direction: row;\n    width: 100%;\n    justify-content: center;\n    align-items: center;\n    background: ${props => props.theme.bg.quinary};\n    padding: 0.5rem 1rem;\n    \n    // border-top-right-radius: 1rem;\n\t// border-top-left-radius: 1rem;  \n`\n\n\nexport const TitleContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n`\n\n\n\nexport const RouteContainer = styled.div`\n\tdisplay: flex;\n\tborder-bottom: 1px solid black;\n\twidth: 100%;\n`\n\nexport const LabelContainer = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n    margin: 0 2rem;\n\t// justify-content: space-between;\n`\n\nexport const StationLabel = styled.span`\n    text-align: center;\n    margin-right: 1rem;\n    \n    font-size: ${props => props.theme.fontSize.sz3};\n`\n\nexport const StationTitle = styled.span`\n    text-align: center;\n    font-size: ${props => props.theme.fontSize.sz3};\n`\n\n\n\nexport const StationButton = styled.button`\n\n`\n\nexport const BodyContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\t// flex: 1;\n\tmin-height: ${minHeight};\n\toverflow: hidden;\n\tbackground: ${props => props.theme.bg.quaternary};\n\topacity: ${props => props.dragEnter ? 0.75 : 1};\n\tborder-bottom-right-radius: 1rem;\n\tborder-bottom-left-radius: 1rem;\n\tjustify-content: center;\n`\n","import {SortableContainer} from \"react-sortable-hoc\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {putCard} from \"../../../../../../redux/actions/card_actions\";\nimport * as styled from \"./lot_queue.style\";\nimport {Container} from \"react-smooth-dnd\";\nimport Card from \"../../card/card\";\nimport React, {useState} from \"react\";\nimport {setCardDragging, setColumnHovering} from \"../../../../../../redux/actions/card_page_actions\";\nimport Button from \"../../../../../basic/button/button\";\nimport CalendarField from \"../../../../../basic/form/calendar_field/calendar_field\";\nimport PropTypes from 'prop-types';\nimport Column from \"../column/column\";\n\nconst LotQueue = ((props) => {\n\tconst {\n\t\tstation_id = \"QUEUE\",\n\t\tstationName = \"Unnamed\",\n\t\thandleCardClick,\n\t\tcards,\n\t\tprocessId,\n\t\tsetShowCardEditor,\n\t\tshowCardEditor,\n\t\tmaxHeight,\n\t\tsortMode\n\t} = props\n\n\tconst [isCollapsed, setCollapsed] = useState(false)\n\n\treturn(\n\t\t<Column\n\t\t\tsortMode={sortMode}\n\t\t\tmaxHeight={maxHeight}\n\t\t\tmaxWidth={\"20rem\"}\n\t\t\tHeaderContent={\n\t\t\t\t!isCollapsed ?\n\t\t\t\t\t<styled.StationHeader>\n\t\t\t\t\t\t<i className=\"fa fa-chevron-down\" aria-hidden=\"true\"\n\t\t\t\t\t\t   onClick={() => setCollapsed(true)}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<styled.LabelContainer>\n\t\t\t\t\t\t\t<styled.StationTitle>{stationName}</styled.StationTitle>\n\t\t\t\t\t\t</styled.LabelContainer>\n\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tonClick={()=> {\n\t\t\t\t\t\t\t\thandleCardClick(null, processId)\n\t\t\t\t\t\t\t\tsetShowCardEditor(!showCardEditor)\n\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tschema={'lots'}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t+ Lot\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</styled.StationHeader>\n\t\t\t\t\t:\n\t\t\t\t\t<styled.StationHeader>\n\t\t\t\t\t\t<i className=\"fa fa-chevron-right\" aria-hidden=\"true\"\n\t\t\t\t\t\t   onClick={() => setCollapsed(false)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</styled.StationHeader>\n\t\t\t}\n\t\t\tstation_id={station_id}\n\t\t\tstationName = {stationName}\n\t\t\thandleCardClick={handleCardClick}\n\t\t\tcards = {cards}\n\t\t\tprocessId={processId}\n\t\t\tisCollapsed={isCollapsed}\n\t\t/>\n\t)\n\n\n})\n\n// Specifies propTypes\nLotQueue.propTypes = {\n\tstationName: PropTypes.string,\n\thandleCardClick: PropTypes.func,\n\t// cards: [],\n\tsetShowCardEditor: PropTypes.func,\n\tshowCardEditor: PropTypes.bool\n};\n\n// Specifies the default values for props:\nLotQueue.defaultProps = {\n\tstationName: \"Unnamed\",\n\thandleCardClick: ()=>{},\n\tcards: [],\n\tsetShowCardEditor: ()=>{},\n\tshowCardEditor: false\n};\n\nexport default LotQueue","import styled, { css } from \"styled-components\";\nimport {Container} from \"react-smooth-dnd\";\n\n// export const RouteContainer = styled.div`\n//     display: flex;\n//     flex: 1;\n//     flex-direction: column;\n//     background: yellow;\n// `\n\nconst minHeight = \"10rem\"\nexport const RotatedRouteName = styled.span`\n// background: red;\n\ttransform: rotate(-90deg);\n\t// transform: translateY(50%);\n`\n\n\nexport const StationContainerCss = css`\n\tdisplay: flex;\n    flex-direction: column;\n    min-height: ${minHeight};\n    \n    width: ${props => props.isCollapsed ? \"2rem\" : \"15rem\"};\n    max-width: ${props => props.isCollapsed ? \"2rem\" : \"15rem\"};\n    min-width: ${props => props.isCollapsed ? \"2rem\" : \"15rem\"};\n    margin-right: 1rem;\n    \n    border-radius: 1rem;\n    overflow: hidden;\n    \n    color: ${props => props.theme.bg.octonary};\n`\n\nexport const StationContainer = styled.div`\n    ${StationContainerCss};\n`\n\nexport const StationHeader = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    justify-content: center;\n    align-items: center;\n    background: ${props => props.theme.bg.quinary};\n    padding: .5rem 1rem;\n \n   \n`\n\nexport const HeaderContent = styled.div`\n    display: flex;\n    flex-direction: row;\n    width: 100%;\n    justify-content: space-between;\n    align-items: center;\n    padding-left: 1rem;\n    padding-right: 1rem;\n \n \n`\n\n\nexport const TitleContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n`\n\n\n\nexport const RouteContainer = styled.div`\n\tdisplay: flex;\n\tborder-bottom: 1px solid black;\n\twidth: 100%;\n`\n\nexport const LabelContainer = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\t// justify-content: space-between;\n`\n\nexport const StationLabel = styled.span`\n    text-align: center;\n    font-size: ${props => props.theme.fontSize.sz4};\n`\n\nexport const StationTitle = styled.span`\n    text-align: center;\n    font-size: ${props => props.theme.fontSize.sz3};\n`\n\n\n\nexport const StationButton = styled.button`\n\n`\n\nexport const BodyContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\t// flex: 1;\n\tmin-height: ${minHeight};\n\toverflow: hidden;\n\tbackground: ${props => props.theme.bg.quaternary};\n\topacity: ${props => props.dragEnter ? 0.75 : 1};\n\tborder-bottom-right-radius: 1rem;\n\tborder-bottom-left-radius: 1rem;\n\tjustify-content: center;\n`\n","import {SortableContainer} from \"react-sortable-hoc\";\n\nimport * as styled from \"./finish_column.style\";\n\nimport React, {useState} from \"react\";\n\nimport Column from \"../column/column\"\n\nconst FinishColumn = ((props) => {\n\tconst {\n\t\tstation_id,\n\t\tstationName = \"Unnamed\",\n\t\thandleCardClick,\n\t\tcards = [],\n\t\tprocessId,\n\t\tmaxHeight,\n\t\tsortMode\n\t} = props\n\n\tconst [isCollapsed, setCollapsed] = useState(false)\n\n\treturn(\n\t\t<Column\n\t\t\tmaxHeight={maxHeight}\n\t\t\tsortMode={sortMode}\n\t\t\tmaxWidth={\"20rem\"}\n\t\t\tHeaderContent={\n\t\t\t\t!isCollapsed ?\n\t\t\t\t<styled.StationHeader>\n\t\t\t\t\t<styled.HeaderContent>\n\t\t\t\t\t\t<i className=\"fa fa-chevron-down\" aria-hidden=\"true\"\n\t\t\t\t\t\t   onClick={() => setCollapsed(true)}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<styled.LabelContainer>\n\n\t\t\t\t\t\t\t<styled.StationTitle>{stationName}</styled.StationTitle>\n\t\t\t\t\t\t</styled.LabelContainer>\n\n\t\t\t\t\t\t<i className=\"fas fa-ellipsis-h\" style={{opacity: 0}}></i>\n\t\t\t\t\t</styled.HeaderContent>\n\t\t\t\t</styled.StationHeader>\n\t\t\t\t\t:\n\t\t\t\t\t<styled.StationHeader>\n\t\t\t\t\t\t<i className=\"fa fa-chevron-right\" aria-hidden=\"true\"\n\t\t\t\t\t\t\tonClick={() => setCollapsed(false)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</styled.StationHeader>\n\t\t\t}\n\t\t\tstation_id={station_id}\n\t\t\tstationName = {stationName}\n\t\t\thandleCardClick={handleCardClick}\n\t\t\tcards = {cards}\n\t\t\tprocessId={processId}\n\t\t\tisCollapsed={isCollapsed}\n\t\t/>\n\t)\n\n\n})\n\nexport default FinishColumn","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  // max-height: ${props => props.maxHeight};\n  display: flex;\n  flex-direction: row;\n  padding: 1rem;\n  justify-content:  flex-start;\n`","import React, {useEffect, useState} from \"react\"\n\n// components\nimport StationsColumn from \"../columns/station_column/station_column\"\nimport LotQueue from \"../columns/lot_queue/lot_queue\"\nimport FinishColumn from \"../columns/finish_column/finish_column\"\n\n// external functions\nimport {useDispatch, useSelector} from \"react-redux\"\nimport PropTypes from \"prop-types\"\nimport {SortableContainer} from \"react-sortable-hoc\"\n\n// actions\nimport {setDataPage} from \"../../../../../redux/actions/api_actions\"\n\n// styles\nimport * as styled from \"./card_zone.style\"\n\nconst CardZone = ((props) => {\n\n\t// extract props\n\tconst {\n\t\thandleCardClick,\n\t\tprocessId,\n\t\tsetShowCardEditor,\n\t\tshowCardEditor,\n\t\tmaxHeight,\n\t\tlotFilterValue,\n\t\tsortMode\n\t} = props\n\n\t// redux state\n\tconst currentProcess = useSelector(state => { return state.processesReducer.processes[processId] }) || {}\n\tconst routes = useSelector(state => { return state.tasksReducer.tasks })\n\tconst cards = useSelector(state => { return state.cardsReducer.processCards[processId] }) || []\n\tconst stations = useSelector(state => { return state.stationsReducer.stations })\n\tconst draggedLotInfo = useSelector(state => { return state.cardPageReducer.draggedLotInfo })\n\tconst {\n\t\tlotId: draggingLotId = \"\",\n\t\tbinId: draggingBinId = \"\"\n\t} = draggedLotInfo || {}\n\n\n\n\t// console.log(\"draggedLotInfo\",draggedLotInfo)\n\n\tconst [cardsSorted, setCardsSorted] = useState({})\n\tconst [queue, setQueue] = useState([])\n\tconst [finished, setFinished] = useState([])\n\n\t// const onSetDataPage = (page) => setDataPage(page)\n\t//\n\t// useEffect(() => {\n\t//\n\t// \tonSetDataPage(\"CardZone\")\n\t//\n\t// \treturn () => {\n\t// \t\t// remove page\n\t// \t\tonSetDataPage(null)\n\t// \t}\n\t// }, [])\n\n\t// need to loop through the process's routes first and get all station ids involved in the process\n\t// this must be done first in order to avoid showing lots that are in stations that are no longer a part of the process\n\n\tvar prevLoadStationId\t\t// tracks previous load station id when looping through routes\n\tvar prevUnloadStationId\t\t// tracks previous unload station id when looping through routes\n\tvar tempCardsSorted = {}\t// temp var for storing sorted cards\n\n\t// loop through routes, get load / unload station id and create entry in tempCardsSorted for each station\n\tcurrentProcess.routes && currentProcess.routes.forEach((currRouteId, index) => {\n\n\t\t// get current route and load / unload station ids\n\t\tconst currRoute = routes[currRouteId]\n\t\tconst loadStationId = currRoute?.load?.station\n\t\tconst unloadStationId = currRoute?.unload?.station\n\n\t\t// only add loadStation entry if the previous unload wasn't identical (in order to avoid duplicates)\n\t\tif (prevUnloadStationId !== loadStationId) {\n\n\t\t\t// add entry in tempCardsSorted\n\t\t\ttempCardsSorted[loadStationId] = {\n\t\t\t\tstation_id: loadStationId,\n\t\t\t\tcards: []\n\t\t\t}\n\t\t}\n\n\t\t// add entry in tempCardsSorted\n\t\ttempCardsSorted[unloadStationId] = {\n\t\t\tstation_id: unloadStationId,\n\t\t\tcards: []\n\t\t}\n\n\t\t// update prevLoadStationId and prevUnloadStationId\n\t\tprevLoadStationId = loadStationId\n\t\tprevUnloadStationId = unloadStationId\n\t})\n\n\t// now that the object keys have been made, loop through the process's cards and add them to the correct bins\n\n\tvar tempQueue = []\t\t// temp var for storing queue lots\n\tvar tempFinished = []\t// temp var for storing finished lots\n\n\tObject.values(cards).forEach((card) => {\n\n\t\t// extract card attributes\n\t\tconst {\n\t\t\tbins,\n\t\t\t_id,\n\t\t\t...rest\n\t\t} = card\n\n\t\tconst matchesFilter = card.name.toLowerCase().includes(lotFilterValue.toLowerCase())\n\n\t\tif(card.bins && matchesFilter) {\n\n\t\t\t// loop through this lot's bins\n\t\t\tObject.entries(card.bins).forEach((binEntry) => {\n\n\t\t\t\t// get bin attributes\n\t\t\t\tconst binId = binEntry[0]\n\t\t\t\tconst binValue = binEntry[1]\n\t\t\t\tconst {\n\t\t\t\t\tcount\n\t\t\t\t} = binValue\n\n\t\t\t\t// don't render card being dragged - prevents flicker bug after drop\n\t\t\t\tif((binId === draggingBinId) && (_id === draggingLotId)) return\n\n\t\t\t\t// if there is an entry in tempCardsSorted with key matching {binId}, add the card to this bin\n\t\t\t\tif(tempCardsSorted[binId]) {\n\t\t\t\t\ttempCardsSorted[binId].cards.push({\n\t\t\t\t\t\t...rest,\n\t\t\t\t\t\tbinId,\n\t\t\t\t\t\tcount,\n\t\t\t\t\t\tcardId: _id\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\t// if {binId} is queue, add the card to the queue\n\t\t\t\telse if(binId === \"QUEUE\") {\n\t\t\t\t\ttempQueue.push({\n\t\t\t\t\t\t...rest,\n\t\t\t\t\t\tcount,\n\t\t\t\t\t\tbinId,\n\t\t\t\t\t\tcardId: _id\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\t// if the {binId} is finish, add the card to the finished column\n\t\t\t\telse if(binId === \"FINISH\") {\n\t\t\t\t\ttempFinished.push({\n\t\t\t\t\t\t...rest,\n\t\t\t\t\t\tcount,\n\t\t\t\t\t\tbinId,\n\t\t\t\t\t\tcardId: _id\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t})\n\t\t}\n\t})\n\n\t/*\n\t* Renders a {StationColumn} for each entry in {cardsSorted}\n\t*\n\t* */\n\tconst renderStationColumns = () => {\n\n\t\t// loop through each entry in {cardsSorted} and return a {StationsColumn}\n\t\treturn Object.values(tempCardsSorted).map((obj, index) => {\n\n\t\t\t// extract attributes of current bin\n\t\t\tconst {\n\t\t\t\tstation_id,\n\t\t\t\troute_id,\n\t\t\t\tcards: cardsArr\n\t\t\t} = obj\n\n\t\t\t// get current station attributes from {station_id} and redux state\n\t\t\tconst currStation = stations[station_id]\n\t\t\tconst {\n\t\t\t\tname: stationName\n\t\t\t} = currStation || {}\n\n\t\t\treturn (\n\t\t\t\t<StationsColumn\n\t\t\t\t\tsortMode={sortMode}\n\t\t\t\t\tmaxHeight={maxHeight}\n\t\t\t\t\tkey={station_id + index}\n\t\t\t\t\tid={route_id+\"+\"+station_id}\n\t\t\t\t\tstation_id={station_id}\n\t\t\t\t\tstationName={stationName}\n\t\t\t\t\tprocessId={processId}\n\t\t\t\t\troute_id={route_id}\n\t\t\t\t\tcards={cardsArr}\n\t\t\t\t\thandleCardClick={handleCardClick}\n\t\t\t\t/>\n\t\t\t)\n\t\t})\n\t}\n\n\treturn(\n\t\t<styled.Container>\n\t\t\t<LotQueue\n\t\t\t\tkey={\"QUEUE\"}\n\t\t\t\tsortMode={sortMode}\n\t\t\t\tmaxHeight={maxHeight}\n\t\t\t\tstation_id={\"QUEUE\"}\n\t\t\t\tsetShowCardEditor={setShowCardEditor}\n\t\t\t\tshowCardEditor={showCardEditor}\n\t\t\t\tstationName={\"Queue\"}\n\t\t\t\tprocessId={processId}\n\t\t\t\tcards={tempQueue}\n\t\t\t\thandleCardClick={handleCardClick}\n\t\t\t/>\n\n\t\t\t{renderStationColumns()}\n\n\t\t\t<FinishColumn\n\t\t\t\tkey={\"FINISH\"}\n\t\t\t\tsortMode={sortMode}\n\t\t\t\tmaxHeight={maxHeight}\n\t\t\t\tstation_id={\"FINISH\"}\n\t\t\t\tsetShowCardEditor={setShowCardEditor}\n\t\t\t\tshowCardEditor={showCardEditor}\n\t\t\t\tstationName={\"Finished\"}\n\t\t\t\tprocessId={processId}\n\t\t\t\tcards={tempFinished}\n\t\t\t\thandleCardClick={handleCardClick}\n\t\t\t/>\n\t\t</styled.Container>\n\t)\n})\n\n// Specifies propTypes\nCardZone.propTypes = {\n\thandleCardClick: PropTypes.func,\n\tsetShowCardEditor: PropTypes.func,\n\tprocessId: PropTypes.string,\n\tlotFilterValue: PropTypes.string,\n\tshowCardEditor: PropTypes.bool,\n\tmaxHeight: PropTypes.number\n}\n\n// Specifies the default values for props:\nCardZone.defaultProps = {\n\thandleCardClick: () => {},\n\tprocessId: null,\n\tsetShowCardEditor: () => {},\n\tshowCardEditor: false,\n\tmaxHeight: \"30rem\",\n\tlotFilterValue: \"\"\n}\n\nexport default CardZone\n\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n\tdisplay: flex;\n    flex-direction: row;\n    width: 100%;\n    padding: .5rem 1rem; \n    background: ${props => props.theme.bg.quaternary};\n    border-bottom: 1px solid ${props => props.theme.bg.tertiary};\n    z-index: 20;\n`\n\nexport const ColumnContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-right: 1rem;\n`\n\nexport const Description = styled.span`\n  color: white;\n  margin-bottom: .25rem;\n`","import DropDownSearch from \"../../../../basic/drop_down_search_v2/drop_down_search\";\nimport React, {useContext} from \"react\";\nimport {useSelector} from \"react-redux\";\n\nimport * as styled from './zone_header.style'\nimport Textbox from \"../../../../basic/textbox/textbox\";\nimport {ThemeContext} from \"styled-components\";\nimport {SORT_MODES, SORT_OPTIONS} from \"../../../../../constants/common_contants\";\n\nconst ZoneHeader = (props) => {\n\n\tconst {\n\t\tselectedProcesses,\n\t\tsetSelectedProcesses,\n\t\tzone,\n\t\tsetLotFilterValue,\n\t\tsetSortMode,\n\t\tsortMode\n\t} = props\n\n\tconst selectedSortOption =  SORT_OPTIONS.find((currOption) => currOption.sortMode === sortMode)\n\n\tconst themeContext = useContext(ThemeContext)\n\n\tconst processes = useSelector(state => { return Object.values(state.processesReducer.processes) })\n\n\treturn (\n\t\t<styled.Container>\n\n\t\t\t{zone === \"summary\" &&\n\t\t\t<styled.ColumnContainer>\n\t\t\t\t<styled.Description>Selected Processes:</styled.Description>\n\t\t\t\t<DropDownSearch\n\t\t\t\t\tschema={\"lots\"}\n\t\t\t\t\tplaceholder='Select processes...'\n\t\t\t\t\tstyle={{background: themeContext.bg.tertiary, width: \"30rem\"}}\n\t\t\t\t\tonClearAll={()=>{\n\t\t\t\t\t\tsetSelectedProcesses([])\n\t\t\t\t\t}}\n\t\t\t\t\tmulti\n\t\t\t\t\tvalues={selectedProcesses}\n\t\t\t\t\toptions={processes}\n\t\t\t\t\tonChange={values => {\n\t\t\t\t\t\tsetSelectedProcesses(values)\n\t\t\t\t\t}}\n\t\t\t\t\tpattern={null}\n\t\t\t\t\tlabelField={'name'}\n\t\t\t\t\tvalueField={\"_id\"}\n\t\t\t\t\tonDropdownOpen={() => {\n\t\t\t\t\t}}\n\t\t\t\t\tonRemoveItem={(values)=> {\n\t\t\t\t\t\tsetSelectedProcesses(values)\n\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</styled.ColumnContainer>\n\t\t\t}\n\n\t\t\t<styled.ColumnContainer>\n\t\t\t\t<styled.Description>Sort By:</styled.Description>\n\t\t\t\t<DropDownSearch\n\t\t\t\t\tschema={\"lots\"}\n\t\t\t\t\tstyle={{background: themeContext.bg.tertiary, width: \"18rem\"}}\n\t\t\t\t\toptions={SORT_OPTIONS}\n\t\t\t\t\tonChange={(values) => {\n\t\t\t\t\t\tconst selectedOption = values[0]\n\t\t\t\t\t\tsetSortMode(selectedOption.sortMode)\n\t\t\t\t\t}}\n\t\t\t\t\tvalues={selectedSortOption ? [selectedSortOption] : []}\n\n\t\t\t\t\tlabelField={\"description\"}\n\t\t\t\t\tvalueField={\"sortMode\"}\n\t\t\t\t/>\n\t\t\t</styled.ColumnContainer>\n\n\t\t\t<styled.ColumnContainer>\n\t\t\t\t<styled.Description>Filter lots:</styled.Description>\n\t\t\t\t<Textbox\n\t\t\t\t\tplaceholder='Filter lots...'\n\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\tsetLotFilterValue(e.target.value)\n\t\t\t\t\t}}\n\t\t\t\t\tstyle={{ background: themeContext.bg.tertiary, height: \"100%\", width: \"15rem\" }}\n\t\t\t\t\ttextboxContainerStyle={{flex: 1, height: \"100%\" }}\n\t\t\t\t\tschema={\"lots\"}\n\t\t\t\t/>\n\t\t\t</styled.ColumnContainer>\n\t\t</styled.Container>\n\t)\n}\n\nexport default ZoneHeader\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n\toverflow: hidden;\n\tposition: relative;\n\theight: 100%;\n\tdisplay: flex;\n\tflex-direction: column;\n\twidth: 100%;\n\tflex: 1;\n\tmin-height: 100%;\n\tmax-height: 100%;\n\ttransition: all 2s ease;\n`\n\nexport const ProcessesContainer = styled.div`\n\toverflow: auto;\n\twidth: 100%;\n\theight: 100%;\n\tposition: relative;\n\ttransition: all 2s ease;\n`\n\nexport const ZoneContainer = styled.div`\n    display: flex;\n    align-items: center;\n    \n`\n\nexport const ProcessName = styled.h3`\n    padding: 0;\n    margin: 0;\n    margin: 0 2rem;\n    font-size: ${props => props.theme.fontSize.sz3};\n    color: white;\n    text-align: center;\n    width: 5rem;\n    min-width: 8rem;\n    \n    overflow: hidden;\n   text-overflow: ellipsis;\n   display: -webkit-box;\n   -webkit-line-clamp: 2; /* number of lines to show */\n   -webkit-box-orient: vertical;\n`","import React, { useState } from \"react\"\n\n// external functions\nimport {SortableContainer} from \"react-sortable-hoc\"\nimport { useSelector} from \"react-redux\"\nimport PropTypes from \"prop-types\"\n\n// internal components\nimport CardZone from \"../card_zone/card_zone\"\nimport ZoneHeader from \"../zone_header/zone_header\"\n\n// styles\nimport * as styled from \"./summary_zone.style\"\n\n/*\n* This component renders a CardZone for a list of processes\n* */\nconst SummaryZone = ((props) => {\n\n\t// extract props\n\tconst {\n\t\thandleCardClick,\n\t\tsetShowCardEditor,\n\t\tshowCardEditor,\n\t\tlotFilterValue,\n\t\tselectedProcesses,\n\t\tsortMode\n\t} = props\n\n\t/*\n   * This function renders a CardZone for each process in {selectedProcesses}\n   *\n   * For each process, the process's name and id are extracted\n   * a CardZone is rendered for each process, which is contained in a wrapping div for relative styling and additional elements (such as ProcessName)\n   *\n   * no params\n   * */\n\tconst renderSelectedProcesses = () => {\n\t\treturn (\n\t\t\t// map through {selectedProcesses}\n\t\t\tselectedProcesses.map((currProcess, processIndex) => {\n\n\t\t\t\t// extract process attributes\n\t\t\t\tconst {\n\t\t\t\t\tname: processName,\n\t\t\t\t\t_id: processId\n\t\t\t\t} = currProcess\n\n\t\t\t\t// return a CardZone wrapped with a styled container and any additional elements\n\t\t\t\treturn\t(\n\t\t\t\t\t<styled.ZoneContainer>\n\t\t\t\t\t\t<styled.ProcessName>{processName}</styled.ProcessName>\n\n\t\t\t\t\t\t<CardZone\n\t\t\t\t\t\t\tsortMode={sortMode}\n\t\t\t\t\t\t\tlotFilterValue={lotFilterValue}\n\t\t\t\t\t\t\tsetShowCardEditor={setShowCardEditor}\n\t\t\t\t\t\t\tshowCardEditor={showCardEditor}\n\t\t\t\t\t\t\tmaxHeight={\"30rem\"}\n\t\t\t\t\t\t\tprocessId={processId}\n\t\t\t\t\t\t\thandleCardClick={handleCardClick}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</styled.ZoneContainer>\n\t\t\t\t)\n\t\t\t})\n\t\t)\n\t}\n\n\treturn(\n\t\t<styled.Container >\n\t\t\t<styled.ProcessesContainer>\n\t\t\t\t{renderSelectedProcesses()}\n\t\t\t</styled.ProcessesContainer>\n\t\t</styled.Container>\n\t)\n})\n\n// Specifies propTypes\nSummaryZone.propTypes = {\n\thandleCardClick: PropTypes.func,\n\tsetShowCardEditor: PropTypes.func,\n\tshowCardEditor: PropTypes.bool,\n\tlotFilterValue: PropTypes.string\n}\n\n// Specifies the default values for props:\nSummaryZone.defaultProps = {\n\thandleCardClick: () => {},\n\tsetShowCardEditor: () => {},\n\tshowCardEditor: false,\n\tlotFilterValue: \"\"\n}\n\nexport default SummaryZone\n\n","import styled from 'styled-components'\nimport {Calendar} from \"react-calendar\";\n// import { TransformWrapper, TransformComponent } from \"react-zoom-pan-pinch\";\nimport '../../../../index.css';\nexport const Container = styled.div`\n    display: flex;\n    position: relative;\n    flex-direction: column;\n    flex: 1;\n    overflow:hidden;\n    font-style: ${props => props.theme.font.primary};\n`\n\n// HEADER\nexport const Header = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-around;\n\talign-items: center;\n\tpadding: 1rem;\n\tbackground: ${props => props.theme.bg.quinary};\n`\n\nexport const Body = styled.div`\n\tdisplay: flex;\n\tflex: 1;\n  //width: 100%;\n\t// max-width: 50%;\n\toverflow: hidden;\n\tposition: relative;\n\t\n\t\n\tbackground: ${props => props.theme.bg.tertiary};\n`\n\nexport const CardZoneContainer = styled.div`\n\t//overflow: hidden;\n  overflow: auto;\n  flex: 1;\n  //height: 40rem;\n  //height: 100%;\n  position: relative;\n  //padding: 1rem;\n\t//width: 100%;\n\t//height: 100%;\n`\n\nexport const MenuButton = styled.i`\n\tfont-size: 2rem;\n\tpadding: 0;\n\tmargin: 0;\n\tcolor: white;\n\t\n\ttext-shadow: 0.05rem 0.05rem 0.2rem #303030;\n    //transition: text-shadow 0.1s ease, filter 0.1s ease;\n    &:hover {\n        cursor: pointer;\n        filter: brightness(85%);\n    }\n\n    &:active{\n        filter: brightness(85%);\n        text-shadow: none;\n    }\n\n    background: none;\n    outline: none;\n    border: none;\n\n    &:focus {\n        outline: none;\n    }\n`\n\nexport const Title = styled.span`\n\tfont-size: ${props => props.theme.fontSize.sz2};\n\tcolor: white;\n\tfont-weight: ${props => props.theme.fontWeight.bold};\n  margin-bottom: .5rem;\n`\n\nexport const AddCardButton = styled.button`\n\n`\n\nexport const InvisibleItem = styled.div`\n    visibility: hidden;\n    height: 1rem;\n    width: 1rem;\n`\n\n// LIST\nexport const RoutesListContainer = styled.div`\n    background: green;\n    \n    width: 100%;\n    overflow: scroll;\n    \n    \n    display: flex;\n    flex-direction: row;\n    flex: 1;\n    justify-content: flex-start;\n    \n    padding: 1rem;\n    padding-right: 5rem;\n    padding-bottom: 5rem;\n`\n\n\n\n\n\n\n\n","import React, {useEffect, useState, useRef, useContext} from 'react';\n\n// external functions\nimport { useHistory } from 'react-router-dom'\nimport {useDispatch, useSelector} from \"react-redux\";\n\n// internal components\nimport CardEditor from \"./card_editor/card_editor\";\nimport CardMenu from \"./card_menu/card_menu\";\nimport CardZone from \"./card_zone/card_zone\";\nimport SummaryZone from \"./summary_zone/summary_zone\";\n\n// actions\nimport {showEditor} from '../../../../redux/actions/card_actions'\n\n// styles\nimport * as styled from './cards.style'\nimport Textbox from \"../../../basic/textbox/textbox\";\nimport {ThemeContext} from \"styled-components\";\nimport DropDownSearch from \"../../../basic/drop_down_search_v2/drop_down_search\";\nimport ZoneHeader from \"./zone_header/zone_header\";\nimport {SORT_MODES} from \"../../../../constants/common_contants\";\n\nconst Cards = (props) => {\n\n    // extract props\n    const {\n        id\n    } = props\n\n    // history\n    const history = useHistory()\n\n    // theme\n    const themeContext = useContext(ThemeContext)\n\n    //redux state\n    const processes = useSelector(state => { return state.processesReducer.processes })\n    const showCardEditor = useSelector(state=> {return state.cardsReducer.showEditor})\n\n    // actions\n    const dispatch = useDispatch()\n    const onShowCardEditor = (bool) => dispatch(showEditor(bool))\n\n    // internal state\n    const [selectedCard, setSelectedCard] = useState(null)\n    const [title, setTitle] = useState(null)\n    const [currentProcess, setCurrentProcess] = useState(null)\n    const [isProcessView, setIsProcessView] = useState(false)\n    const [showMenu, setShowMenu] = useState(false)\n    const [zoneSize, setZoneSize] = useState({\n        width: undefined,\n        height: undefined,\n        offsetLeft: undefined,\n        offsetTop: undefined,\n    })\n    const [lotFilterValue, setLotFilterValue] = useState('')\n    const [sortMode, setSortMode] = useState(SORT_MODES.END_DESCENDING)\n    // internal component state\n    const [selectedProcesses, setSelectedProcesses] = useState(Object.values(processes)) // array of {process} objects - the list of selected processes\n\n    // refs\n    const zoneRef = useRef(null);\n\n    /*\n    * This effect monitors the div referenced by zoneRef and the window height\n    *\n    * When either of these changes, zoneSize is updated with the current width, height, top offset, and left offset of the div referenced by zoneRef\n    * This ensures that the size of zoneRef is updated when the window size changes\n    *\n    * zoneSize is used for setting the max height of lot columns in the CardZone and SummaryZone\n    *\n    * @param {ref} zoneRef - ref assigned to CardZone\n    * @param {int} window.innerHeight - window height\n    *\n    * */\n    useEffect( () => {\n\n        // if zoneRef is assigned\n        if(zoneRef.current){\n\n            // extract dimensions of zoneRef\n            let height = zoneRef.current.offsetHeight;\n            let width  = zoneRef.current.offsetWidth;\n            let offsetTop  = zoneRef.current.offsetTop;\n            let offsetLeft  = zoneRef.current.offsetLeft;\n\n            // set zoneSize\n            setZoneSize({\n                width: width,\n                height: height,\n                offsetTop: offsetTop,\n                offsetLeft: offsetLeft,\n            });\n        }\n\n    }, [zoneRef, window.innerHeight]);\n\n    /*\n    * This effect updates internal component state basted on the {id} props\n    *\n    * The value of {id} can take on 1 of 3 types of values, {\"summary\"}, {\"timeline\"}, or the id of a process\n    *\n    * The content of the page changes based on the value of id, and this useEffect updates internal component state in order to achieve this\n    *\n    * the value of {id} should produce the following content:\n    *   {\"summary\"} - render content for the summary zone\n    *   {\"timeline\"} - render content for timeline zone *** CURRENTLY DISABLED ***\n    *   a process id - render lot content for the corresponding process\n    *\n    * @param {id} string - id of content to display\n    *\n    * */\n    useEffect( () => {\n\n        // update internal state based on id\n        switch(id) {\n\n            // summary zone\n            case \"summary\":\n                setTitle(\"Lots Summary\")\n                setIsProcessView(false)\n                break\n\n            // timeline zone\n            case \"timeline\":\n                setTitle(\"Timeline Zone\")\n                setIsProcessView(false)\n                break\n\n            // otherwise assume id is the id of a specific process\n            default:\n                setIsProcessView(true)\n                setCurrentProcess(processes[id])\n                setTitle(processes[id]?.name)\n                break\n        }\n    }, [id]);\n\n\n    /*\n   * This function handles the logic for when a lot is clicked\n   *\n   * Clicking a lot should open the lot editor for the clicked lot\n   * In order to do this, the function sets showCardEditor to true and sets selectedCard to the values passed in as arguments to this function\n   *\n   * @param {cardId} string - id of card clicked\n   * @param {processId} string - id of clicked card's process\n   * @param {binId)} string - id of clicked card's bin\n   *\n   * */\n    const handleCardClick = (cardId, processId, binId) => {\n        onShowCardEditor(true)\n        setSelectedCard({cardId, processId, binId})\n    }\n\n    return(\n        <styled.Container>\n            {showCardEditor &&\n            <CardEditor\n                isOpen={showCardEditor}\n                onAfterOpen={null}\n                cardId={selectedCard ? selectedCard.cardId : null}\n                processId={selectedCard ? selectedCard.processId : null}\n                binId={selectedCard ? selectedCard.binId : null}\n                close={()=>{\n                    onShowCardEditor(false)\n                    setSelectedCard(null)\n                }}\n            />\n            }\n            <styled.Header>\n                {isProcessView ?\n                    <styled.MenuButton\n                        style={{marginRight: \"auto\"}}\n                        className=\"fas fa-chevron-left\"\n                        aria-hidden=\"true\"\n                        onClick={()=>{\n                            history.replace ('/processes')}\n                        }\n                    />\n                    :\n                    <styled.InvisibleItem style={{marginRight: \"auto\"}}/> // used for spacing\n                }\n                <div style={{flex: 1, flexDirection:\"column\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\"}}>\n                <styled.Title>{title ? title : \"untitled\"}</styled.Title>\n                </div>\n                <styled.InvisibleItem\n                    style={{marginLeft: \"auto\"}}\n                />\n            </styled.Header>\n            <ZoneHeader\n                sortMode={sortMode}\n                setSortMode={setSortMode}\n                setLotFilterValue={setLotFilterValue}\n                selectedProcesses={selectedProcesses}\n                setSelectedProcesses={setSelectedProcesses}\n                zone={id}\n            />\n\n            <styled.Body id={\"cards-body\"}>\n                {showMenu &&\n                <CardMenu\n                    currentProcess={currentProcess}\n                    close={()=>setShowMenu(false)}\n                />\n                }\n\n                {\n                    {\n                        'summary':\n                            <SummaryZone\n                                sortMode={sortMode}\n                                selectedProcesses={selectedProcesses}\n                                lotFilterValue={lotFilterValue}\n                                handleCardClick={handleCardClick}\n                                setShowCardEditor={onShowCardEditor}\n                                showCardEditor={showCardEditor}\n                            />,\n                        'timeline':\n                            <div\n                                handleCardClick={handleCardClick}\n                                initialProcesses={[currentProcess]}\n                            />\n                    }[id] ||\n                    <styled.CardZoneContainer ref={zoneRef}>\n                        <CardZone\n                            maxHeight={(zoneSize.height - 75) + \"px\"} // maxHeight is set equal to size of parent div with some value subtracted as padding. NOTE: setting height to 100% doesn't currently work for this\n                            setShowCardEditor={onShowCardEditor}\n                            showCardEditor={showCardEditor}\n                            handleCardClick={handleCardClick}\n                            processId={id}\n                            lotFilterValue={lotFilterValue}\n                            sortMode={sortMode}\n                        />\n                    </styled.CardZoneContainer>\n                }\n            </styled.Body>\n        </styled.Container>\n    )\n}\n\nexport default Cards\n","import {\n  WIDGET_PAGE_LOADED,\n  WIDGET_XY_COORDINATES,\n  WIDGET_LOADED,\n  HOVER_STATION_INFO,\n\n} from '../types/widget_types'\n\nexport const widgetPageLoaded = (state) => {\n    return { type: WIDGET_PAGE_LOADED, payload: state}\n}\n\nexport const widgetXYCoordinates = (state) => {\n    return { type: WIDGET_XY_COORDINATES, payload: state}\n}\n\nexport const widgetLoaded = (state) => {\n    return { type: WIDGET_LOADED, payload: state}\n}\n\nexport const hoverStationInfo = (info) => {\n    return { type: HOVER_STATION_INFO, payload: { info } }\n}\n","import React, { useState, useMemo, useRef, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useLocation, useParams } from 'react-router-dom'\nimport { useHistory } from 'react-router-dom'\n\n// Import Styles\nimport * as styled from './side_bar.style'\n\n// Import Components\nimport { DraggableCore } from \"react-draggable\";\nimport SideBarSwitcher from '../../components/side_bar/side_bar_switcher/side_bar_switcher'\nimport LocationsContent from '../../components/side_bar/content/locations/locations_content'\nimport ObjectsContent from '../../components/side_bar/content/objects/objects_content'\nimport TasksContent from '../../components/side_bar/content/tasks/tasks_content'\nimport DevicesContent from '../../components/side_bar/content/devices/devices_content'\nimport SchedulerContent from '../../components/side_bar/content/scheduler/scheduler_content'\nimport ProcessesContent from '../../components/side_bar/content/processes/processes_content'\nimport Settings from '../../components/side_bar/content/settings/settings'\nimport ConfirmDeleteModal from '../../components/basic/modals/confirm_delete_modal/confirm_delete_modal'\nimport PageErrorBoundary from '../../containers/page_error_boundary/page_error_boundary'\nimport Cards from \"../../components/side_bar/content/cards/cards\";\n\n// Import Actions\nimport { setEditingStation, setSelectedStation } from '../../redux/actions/stations_actions'\nimport { setEditingPosition, setSelectedPosition } from '../../redux/actions/positions_actions'\nimport { hoverStationInfo } from '../../redux/actions/widget_actions'\nimport { editingTask } from '../../redux/actions/tasks_actions'\nimport { editingProcess } from '../../redux/actions/processes_actions'\nimport { setWidth, setMode } from \"../../redux/actions/sidebar_actions\";\nimport * as sidebarActions from \"../../redux/actions/sidebar_actions\"\nimport * as taskActions from '../../redux/actions/tasks_actions'\n\nconst SideBar = (props) => {\n\n    const {\n        showSideBar,\n        setShowSideBar\n    } = props\n\n    let params = useParams()\n    const {\n        page,\n        subpage,\n        id\n    } = params\n\n    const dispatch = useDispatch()\n    const dispatchHoverStationInfo = (info) => dispatch(hoverStationInfo(info))\n    const dispatchEditingStation = (bool) => dispatch(setEditingStation(bool))\n    const dispatchEditingPosition = (bool) => dispatch(setEditingPosition(bool))\n    const onSetOpen = (sideBarOpen) => dispatch(sidebarActions.setOpen(sideBarOpen))\n    const onSetWidth = (width) => dispatch(sidebarActions.setWidth(width))\n    const onDeselectTask = () => dispatch(taskActions.deselectTask())\n    const dispatchEditingTask = (bool) => dispatch(editingTask(bool))\n    const dispatchEditingProcess = (bool) => dispatch(editingProcess(bool))\n    const dispatchSetSelectedStation = (station) => dispatch(setSelectedStation(station))\n    const dispatchSetSelectedPosition = (station) => dispatch(setSelectedPosition(station))\n\n    const [width, setWidth] = useState(450)\n    const [prevWidth, setPrevWidth] = useState(width)\n    const [buttonActive, setButtonActive] = useState(false)\n    const [prevParams, setPrevParams] = useState(params)\n    const [confirmDeleteModal, setConfirmDeleteModal] = useState(false);\n\n    const mode = useSelector(state => state.sidebarReducer.mode)\n    const widgetPageLoaded = useSelector(state => { return state.widgetReducer.widgetPageLoaded })\n    const editingStation = useSelector(state => state.stationsReducer.editingStation)\n    const editingPosition = useSelector(state => state.positionsReducer.editingPosition)\n\n    const taskEditing = useSelector(state => state.tasksReducer.editingTask)\n    const processEditing = useSelector(state => state.processesReducer.editingProcess)\n    const sideBarOpen = useSelector(state => state.sidebarReducer.open)\n\n    const history = useHistory()\n    const url = useLocation().pathname\n\n    const locationEditing = !!editingStation ? editingStation : editingPosition\n\n    const boundToWindowSize = () => {\n        const newWidth = Math.min(window.innerWidth, Math.max(360, width))\n        setWidth(newWidth)\n        onSetWidth(newWidth)\n    }\n    useEffect(() => {\n        window.addEventListener('resize', boundToWindowSize, { passive: true })\n\n        return () => {\n            window.removeEventListener('resize', boundToWindowSize, { passive: true })\n        }\n    }, [])\n\n\n    useEffect(() => {\n        onSetOpen(sideBarOpen)\n    })\n\n\n    // sets width to full screen if card subpage is open in processes\n    useEffect(() => {\n        const {\n\n        } = prevParams\n\n        const prevPage = prevParams.page\n        const prevSubpage = prevParams.subpage\n        const prevId = prevParams.id\n\n\n        const time = Date.now()\n        if ((page === \"processes\" || page === \"lots\") && ((subpage === \"lots\")) || (id === \"timeline\") || (id === \"summary\")) {\n\n            if (!prevWidth) setPrevWidth(width) // store previous width to restore when card page is left\n            setWidth(window.innerWidth)\n            onSetWidth(window.innerWidth)\n\n        }\n        else if ((((prevSubpage === \"lots\") || (prevId === \"timeline\") || (prevId === \"summary\")) && (prevPage === \"processes\" || prevPage === \"lots\")) && ((subpage !== \"lots\") || (id === \"timeline\") || (id === \"summary\"))) {\n            setWidth(prevWidth)\n            onSetWidth(prevWidth)\n            setPrevWidth(null)\n        }\n\n        setPrevParams(params)\n\n        if (!showSideBar) {\n            setWidth(450)\n            onSetWidth(450)\n        }\n\n        return () => { }\n\n    }, [page, subpage, id, width, showSideBar])\n\n    /**\n     * Handles the hamburger icon transformation\n     */\n    const handleSideBarOpenCloseButtonClick = () => {\n\n        if(!!showSideBar){\n            dispatchSetSelectedStation(null)\n            dispatchSetSelectedPosition(null)\n            dispatchEditingTask(false)\n            dispatchEditingProcess(false)\n        }\n\n        if (!widgetPageLoaded || widgetPageLoaded && !sideBarOpen) {\n            const hamburger = document.querySelector('.hamburger')\n            hamburger.classList.toggle('is-active')\n        }\n\n        if (!showSideBar && url == '/') {\n            history.push(`/locations`)\n        }\n\n        // If widget page is active, the toggle the widget page, else toggle the side bar\n        if (widgetPageLoaded) {\n            history.push('/locations')\n            dispatchSetSelectedStation(null)\n            dispatchSetSelectedPosition(null)\n            dispatchHoverStationInfo(null)\n        } else {\n            const newSideBarState = !showSideBar\n            setShowSideBar(newSideBarState)\n            onSetOpen(newSideBarState)\n        }\n\n    }\n\n    /**\n     * Handles when widget pages are open\n     * If open and button is not active, then activate the button\n     * Else if the button is active and widget pages aren't open and side bar isnt open then disable\n     */\n    const handleActiveButton = () => {\n\n        // Try catch is here because an error is thrown when the side bar is not mounted due to a full screen dashboard\n        // Ugly way of handling this, but it works at the moment. The error happens becasue no elements have a class hamburger when function runs\n        try {\n            if (!buttonActive && widgetPageLoaded) {\n                setButtonActive(true)\n                const hamburger = document.querySelector('.hamburger')\n                hamburger.classList.toggle('is-active')\n\n            } else if (buttonActive && !widgetPageLoaded && !showSideBar) {\n                setButtonActive(false)\n            }\n        } catch (error) {\n            setTimeout(() => handleActiveButton(), 100)\n        }\n\n    }\n\n    function handleDrag(e, ui) {\n        const newWidth = Math.min(window.innerWidth, Math.max(360, width + ui.deltaX))\n        setWidth(newWidth)\n        onSetWidth(newWidth)\n    }\n\n    let content\n    switch (page) {\n        case 'locations':\n            content = <LocationsContent />\n            break\n\n        // Commented out for now\n        // case '/objects':\n        //     content = <ObjectsContent />\n        //     break\n\n        case 'processes':\n            if (subpage === \"lots\") {\n                content = <Cards id={id} />\n            }\n            else {\n                content = <ProcessesContent subpage={subpage} id={id} />\n            }\n\n            break\n\n        case 'lots':\n            if ((id === \"summary\") || (id === \"timeline\")) {\n                content = <Cards id={id} />\n            }\n            break\n\n        case 'tasks':\n            content = <TasksContent />\n            break\n\n        case 'scheduler':\n            content = <SchedulerContent />\n            break\n\n        case 'devices':\n            content = <DevicesContent />\n            break\n\n        case 'settings':\n            content = <Settings />\n            break\n\n        default:\n            content = null\n            if (showSideBar) {\n                handleSideBarOpenCloseButtonClick()\n            }\n            break\n    }\n\n\n\n    return (\n        <>\n            <ConfirmDeleteModal\n                isOpen={!!confirmDeleteModal}\n                title={\"Are you sure you want to leave this page? Any changes will not be saved\"}\n                button_1_text={\"Yes\"}\n                button_2_text={\"No\"}\n                handleClose={() => setConfirmDeleteModal(null)}\n                handleOnClick1={() => {\n                    handleSideBarOpenCloseButtonClick()\n                    setConfirmDeleteModal(null)\n                }}\n                handleOnClick2={() => {\n                    setConfirmDeleteModal(null)\n                }}\n            />\n\n            <styled.SideBarOpenCloseButton\n                className=\"hamburger hamburger--slider\"\n                type='button'\n                id='sideBarButton'\n                onClick={() => {\n                    if (locationEditing || taskEditing || processEditing) {\n                        setConfirmDeleteModal(true)\n                    }\n                    else { handleSideBarOpenCloseButtonClick() }\n                }}\n            // showSideBar={showSideBar}\n            >\n                <span className='hamburger-box' id='sideBarButton' style={{ display: 'flex', justifyContent: 'center', width: 'auto' }}>\n                    <span className='hamburger-inner' id='sideBarButton' />\n                </span>\n            </styled.SideBarOpenCloseButton>\n\n            {showSideBar &&\n                <styled.SidebarWrapper mode={mode} style={{ width: showSideBar == true ? width : 0, display: \"flex\", }} open={showSideBar}>\n\n                    <SideBarSwitcher\n                        handleClickOutside={handleSideBarOpenCloseButtonClick}\n                        showSideBar={showSideBar}\n                    />\n\n                    <styled.SidebarContent\n                        key=\"sidebar-content\"\n                        style={{}}\n                    >\n                        {content}\n\n                        <DraggableCore key=\"handle\" onDrag={handleDrag} >\n                            <styled.ResizeBar>\n                                <styled.ResizeHandle content={mode}></styled.ResizeHandle>\n                            </styled.ResizeBar>\n                        </DraggableCore>\n                    </styled.SidebarContent>\n                </styled.SidebarWrapper>\n            }\n\n\n            {handleActiveButton()}\n        </>\n    )\n\n\n}\n\nexport default SideBar\n","import axios from 'axios';\n// import * as log from 'loglevel';\n\nimport logger from '../logger'\n\nimport { apiIPAddress } from '../settings/settings'\nconst operator = 'report_events'\nconst log = logger.getLogger('Api')\n\nexport async function getReportEvents() {\n    try {\n        const response = await axios({\n            method: 'get',\n            url: apiIPAddress() + operator, \n            headers: {\n                'X-API-Key': '123456',\n            },\n        });\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n\n}\n\nexport async function deleteReportEvent(ID) {\n    try {\n        const response = await axios({\n            method: 'DELETE',\n            url: apiIPAddress() + operator + '/' + ID,\n            headers: {\n                'Accept': 'application/json',\n                'X-API-Key': '123456',\n            },\n        });\n\n        // Success 🎉\n        // log.debug('response',response);\n        // const data = response.data;\n        // const dataJson = JSON.parse(data)\n        return response;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}\n\nexport async function postReportEvent(reportEvent) {\n    console.log(\"postReportEvent reportEvent\",reportEvent)\n    try {\n        const response = await axios({\n            method: 'POST',\n            url: apiIPAddress() + operator,\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'application/json'\n            },\n            data: reportEvent\n        });\n\n        // Success 🎉\n        // log.debug('response',response);\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        // log.debug('response data json',dataJson);\n\n\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n        // throw error\n    }\n}\n\nexport async function putReportEvent(reportEvent, ID) {\n    try {\n        const response = await axios({\n            method: 'PUT',\n            url: apiIPAddress() + operator + '/' + ID,\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'text/html'\n            },\n            data: reportEvent\n        });\n\n        // Success 🎉\n        // log.debug('response',response);\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}\n\nexport async function getReportAnalytics(stationId, timeSpan) {\n    try {\n        const response = await axios({\n            method: 'PUT',\n            url: apiIPAddress() + operator + '/' + stationId + '/stats',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'text/html'\n            },\n            // A timespan is {time_span: 'day', index: 0}\n            data: timeSpan\n        });\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        return dataJson;\n\n\n    } catch (error) {\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        throw error\n    }\n\n\n}\n","import { normalize } from 'normalizr';\n\n// import types\nimport {\n    GET,\n    POST,\n    DELETE,\n    PUT\n} from '../types/prefixes';\n\nimport {\n    REPORT_EVENTS,\n    REPORT_EVENT\n} from '../types/data_types';\n\nimport { api_action } from './index';\nimport * as api from '../../api/report_events_api'\n\n// import schema\n// import { scheduleSchema, schedulesSchema } from '../../normalizr/schedules_schema';\n\nimport log from \"../../logger\"\nimport {convertArrayToObject} from \"../../methods/utils/utils\";\n\nconst logger = log.getLogger(\"ReportEvents\", \"Redux\")\n\nexport const convertData = (array, key) => {\n    const initialValue = {\n        station_id: {},\n        report_button_id: {}\n    };\n    return array.reduce((obj, item) => {\n        let current = obj.station_id[item.station_id] ? obj.station_id[item.station_id] : []\n        let current1 = obj.report_button_id[item.report_button_id] ? obj.report_button_id[item.report_button_id] : []\n\n        return {\n            ...obj,\n            // [item[key]]: item,\n            _id: {\n                ...obj._id,\n                [item._id]: item\n            },\n            station_id: {\n                ...obj.station_id,\n                [item.station_id]: [...current, item._id]\n            },\n            report_button_id: {\n                ...obj.report_button_id,\n                [item.report_button_id]: [...current1, item._id]\n            }\n        };\n    }, initialValue);\n};\n\n\n// get\n// ******************************\nexport const getReportEvents = () =>  async (dispatch) => {\n\n    /*\n        Invoked in api_action()\n        Whatever is returned from this function is the payload\n        that will be dispatched to redux (if successful)\n    */\n    const callback = async () => {\n\n        // make request\n        const reportEvents = await api.getReportEvents();\n        const reportEventsObj = convertData(reportEvents, \"_id\")\n\n        // format response\n        // const normalizedSchedules = normalize(schedules, schedulesSchema);\n\n        // return payload for redux\n        return {\n            reportEventsObj\n        };\n    }\n\n    const actionName = GET + REPORT_EVENTS;\n\n    // payload is returned back\n    const payload = await api_action(actionName, callback, dispatch);\n\n    return payload;\n\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n\n// create\n// ******************************\nexport const postReportEvent = (reportEvent) =>  async dispatch => {\n\n    const callback = async () => {\n        const createdReportEvent = await api.postReportEvent(reportEvent);\n        console.log(\"createdReportEvent\",createdReportEvent)\n        // const normalizedSchedules = normalize(createdSchedule, scheduleSchema);\n\n        return {\n            createdReportEvent\n        };\n    }\n\n    const actionName = POST + REPORT_EVENT;\n\n    const payload = await api_action(actionName, callback, dispatch, reportEvent);\n\n    return payload\n\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// delete\n// ******************************\nexport const deleteReportEvent = (id) => async (dispatch) => {\n\n    const callback = async () => {\n        await api.deleteReportEvent(id);\n\n        return {\n            id\n        };\n    }\n\n    const actionName = DELETE + REPORT_EVENT;\n    const payload = await api_action(actionName, callback, dispatch, id);\n    return payload;\n\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// update\n// ******************************\nexport const putReportEvent = (id, reportEvent) => async dispatch => {\n\n\n    const callback = async () => {\n        const updatedReportEvent = await api.putReportEvent(reportEvent, id);\n\n        return {\n            updatedReportEvent\n        };\n    }\n\n    const actionName = PUT + REPORT_EVENT           ;\n    const payload = await api_action(actionName, callback, dispatch);\n    return payload;\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nexport const getReportAnalytics = async (stationId, timeSpan) => {\n    try {\n        const stationAnalytics = await api.getReportAnalytics(stationId, timeSpan);\n        return stationAnalytics\n    } catch (error) {\n    }\n};\n","import axios from 'axios';\n// import * as log from 'loglevel';\n\nimport logger from '../logger'\n\nimport { apiIPAddress } from '../settings/settings'\nconst operator = 'lots'\nconst log = logger.getLogger('Api')\n\nexport async function getLot(lotId) {\n    try {\n        const response = await axios({\n            method: 'get',\n            url: apiIPAddress() + operator + \"/\" + lotId,\n            headers: {\n                'X-API-Key': '123456',\n            }\n        });\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n\n}\n\nexport async function getLots() {\n    try {\n        const response = await axios({\n            method: 'get',\n            url: apiIPAddress() + operator, \n            headers: {\n                'X-API-Key': '123456',\n            },\n        });\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n\n}\n\n\nexport async function getProcessLots(processId) {\n    try {\n        const response = await axios({\n            method: 'get',\n            url: apiIPAddress() + \"processes/\" + processId + \"/lots\",\n        headers:{\n            'X-API-Key': '123456',\n        }\n        });\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n\n}\n\nexport async function deleteLot(ID) {\n    try {\n        const response = await axios({\n            method: 'DELETE',\n            url: apiIPAddress() + operator + '/' + ID,\n            headers: {\n                'Accept': 'application/json',\n                'X-API-Key': '123456',\n            },\n        });\n\n        // Success 🎉\n        // log.debug('response',response);\n        // const data = response.data;\n        // const dataJson = JSON.parse(data)\n        return response;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}\n\nexport async function postLot(lot) {\n    try {\n        const response = await axios({\n            method: 'POST',\n            url: apiIPAddress() + operator,\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'application/json'\n            },\n            data: lot\n        });\n\n        // Success 🎉\n        // log.debug('response',response);\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        // log.debug('response data json',dataJson);\n\n\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}\n\nexport async function putLot(lot, ID) {\n    try {\n        const response = await axios({\n            method: 'PUT',\n            url: apiIPAddress() + operator + '/' + ID,\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'text/html'\n            },\n            data: JSON.stringify(lot)\n        });\n\n        // Success 🎉\n        // log.debug('response',response);\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        console.log(\"cards_api putCard dataJson\",dataJson)\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}\n","import { normalize } from 'normalizr';\n\n// import types\nimport {\n    GET,\n    POST,\n    DELETE,\n    PUT\n} from '../types/prefixes';\n\nimport {\n    LOT,\n    LOTS\n} from '../types/data_types';\n\nimport { api_action } from './index';\n\n// import schema\nimport { scheduleSchema, schedulesSchema } from '../../normalizr/schedules_schema';\n\nimport log from \"../../logger\"\nimport {convertArrayToObject} from \"../../methods/utils/utils\";\nimport * as api from \"../../api/lots_api\";\n\nconst logger = log.getLogger(\"Lots\", \"Redux\")\nlogger.setLevel(\"debug\")\n// get\n// ******************************\nexport const getLot = (lotId) =>  async (dispatch) => {\n\n    /*\n        Invoked in api_action()\n        Whatever is returned from this function is the payload\n        that will be dispatched to redux (if successful)\n    */\n    const callback = async () => {\n\n        // make request\n        const lot = await api.getLot(lotId);\n\n        // const cardsObj = convertArrayToObject(cards, \"_id\")\n        // console.log(\"getCard cardsObj\",cardsObj)\n\n        // format response\n        // const normalizedSchedules = normalize(schedules, schedulesSchema);\n\n        // return payload for redux\n        return {\n            lot,\n        };\n    }\n\n    const actionName = GET + LOT;\n\n    // payload is returned back\n    const payload = await api_action(actionName, callback, dispatch);\n\n    return payload;\n\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// get\n// ******************************\nexport const getLots = () =>  async (dispatch) => {\n\n    /*\n        Invoked in api_action()\n        Whatever is returned from this function is the payload\n        that will be dispatched to redux (if successful)\n    */\n    const callback = async () => {\n\n        // make request\n        const lots = await api.getLots();\n\n        const lotsObj = convertArrayToObject(lots, \"_id\")\n\n        // format response\n        // const normalizedSchedules = normalize(schedules, schedulesSchema);\n\n        // return payload for redux\n        return {\n            lots: lotsObj,\n        };\n    }\n\n    const actionName = GET + LOTS;\n\n    // payload is returned back\n    const payload = await api_action(actionName, callback, dispatch);\n\n    return payload;\n\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// get\n// ******************************\n// export const getProcessCards = (processId) =>  async (dispatch) => {\n//\n//     /*\n//         Invoked in api_action()\n//         Whatever is returned from this function is the payload\n//         that will be dispatched to redux (if successful)\n//     */\n//     const callback = async () => {\n//\n//         // make request\n//         const cards = await api.getProcessCards(processId);\n//         console.log(\"getProcessCards cards\",cards)\n//\n//         const cardsObj = convertArrayToObject(cards, \"_id\")\n//         console.log(\"getProcessCards cardsObj\",cardsObj)\n//\n//         // return payload for redux\n//         return {\n//             cards: cardsObj,\n//             processId\n//         };\n//     }\n//\n//     const actionName = GET + PROCESS_CARDS;\n//\n//     // payload is returned back\n//     const payload = await api_action(actionName, callback, dispatch);\n//\n//     return payload;\n//\n// };\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n\n// create\n// ******************************\nexport const postLot = (lot) =>  async dispatch => {\n\n    const callback = async () => {\n        const createdLot = await api.postLot(lot);\n        // const normalizedSchedules = normalize(createdSchedule, scheduleSchema);\n\n        return {\n            lot: createdLot,\n            processId: lot.process_id\n        };\n    }\n    //\n    const actionName = POST + LOT;\n\n    const payload = await api_action(actionName, callback, dispatch, lot);\n\n    return payload.lot\n\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// delete\n// ******************************\nexport const deleteLot = (lotId, processId) => async (dispatch) => {\n\n    const callback = async () => {\n        await api.deleteLot(lotId);\n\n        return {\n            lotId,\n            processId\n        };\n    }\n    //\n    const actionName = DELETE + LOT;\n    const payload = await api_action(actionName, callback, dispatch, lotId);\n    return payload;\n\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// update\n// ******************************\nexport const putLot = (lot, lotId) => async dispatch => {\n\n    const callback = async () => {\n        const response = await api.putLot(lot, lotId);\n        // const normalizedSchedule = normalize(response, scheduleSchema);\n        //\n        return {\n            lot: response,\n            processId: lot.process_id\n        };\n    }\n\n    const actionName = PUT + LOT;\n    const payload = await api_action(actionName, callback, dispatch, { lot});\n    return lot;\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n","// import external dependencies\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from \"react-router-dom\";\n\n// Import Actions\nimport { getMaps } from '../../redux/actions/map_actions'\nimport { getTaskQueue, deleteTaskQueueItem } from '../../redux/actions/task_queue_actions'\nimport { getObjects } from '../../redux/actions/objects_actions'\nimport { getTasks, deleteTask, putTask } from '../../redux/actions/tasks_actions'\nimport { getDashboards, deleteDashboard, postDashboard } from '../../redux/actions/dashboards_actions'\nimport { getSounds } from '../../redux/actions/sounds_actions'\nimport { getProcesses, putProcesses } from '../../redux/actions/processes_actions'\nimport { getTasksAnalysis } from '../../redux/actions/task_analysis_actions'\nimport { getDataStream } from '../../redux/actions/data_stream_actions'\n\nimport { getSchedules } from '../../redux/actions/schedule_actions';\nimport { getDevices, putDevices } from '../../redux/actions/devices_actions'\nimport { getStatus } from '../../redux/actions/status_actions'\n\nimport { getSettings, postSettings } from '../../redux/actions/settings_actions'\nimport { getLocalSettings } from '../../redux/actions/local_actions'\nimport { getLoggers } from '../../redux/actions/local_actions';\nimport { getRefreshToken } from '../../redux/actions/authentication_actions'\n\nimport { getPositions, deletePosition, putPosition } from '../../redux/actions/positions_actions'\nimport { getStations, putStation, deleteStation } from '../../redux/actions/stations_actions'\n\nimport { postLocalSettings } from '../../redux/actions/local_actions'\nimport * as localActions from '../../redux/actions/local_actions'\n\n// Import components\nimport Textbox from '../../components/basic/textbox/textbox'\nimport Button from '../../components/basic/button/button'\nimport Switch from 'react-ios-switch'\nimport SplashScreen from \"../../components/misc/splash_screen/splash_screen\";\n\n// import utils\nimport { getPageNameFromPath } from \"../../methods/utils/router_utils\";\nimport { isEquivalent, deepCopy } from '../../methods/utils/utils'\n\n// import logger\nimport logger from '../../logger.js';\nimport { getMap } from '../../api/map_api';\nimport SideBar from '../side_bar/side_bar';\nimport localReducer from \"../../redux/reducers/local_reducer\";\nimport { getCards, getProcessCards } from \"../../redux/actions/card_actions\";\nimport apiReducer from \"../../redux/reducers/api_reducer\";\nimport { getReportEvents } from \"../../redux/actions/report_event_actions\";\nimport { getLots } from \"../../redux/actions/lot_actions\";\n\nconst ApiContainer = (props) => {\n\n    // Dispatches\n    const dispatch = useDispatch()\n    const onGetMaps = async () => await dispatch(getMaps())\n    const onGetStations = () => dispatch(getStations())\n    const onGetPositions = () => dispatch(getPositions())\n    const onGetDashboards = () => dispatch(getDashboards())\n    const onGetObjects = () => dispatch(getObjects())\n    const onGetTasks = () => dispatch(getTasks())\n    const onGetSounds = (api) => dispatch(getSounds(api))\n    const onGetTaskQueue = () => dispatch(getTaskQueue())\n\n    const dispatchGetDataStream = () => dispatch(getDataStream())\n\n    const onGetProcessCards = (processId) => dispatch(getProcessCards(processId))\n    // const dispatchGetLots = () => dispatch(getLots())\n    const onGetCards = () => dispatch(getCards())\n\n    const onGetProcesses = () => dispatch(getProcesses());\n    const onGetReportEvents = () => dispatch(getReportEvents());\n\n    const onGetSchedules = () => dispatch(getSchedules())\n    const onGetDevices = async () => await dispatch(getDevices())\n    const onGetStatus = () => dispatch(getStatus())\n\n    const onGetSettings = () => dispatch(getSettings())\n    const onGetLocalSettings = () => dispatch(getLocalSettings())\n    const onPostLocalSettings = (settings) => dispatch(postLocalSettings(settings))\n\n    const onGetLoggers = () => dispatch(getLoggers())\n    const onGetRefreshToken = () => dispatch(getRefreshToken())\n\n    const onDeleteTask = (ID) => dispatch(deleteTask(ID))\n    const onDeleteDashboard = (ID) => dispatch(deleteDashboard(ID))\n    const onDeletePosition = (position, ID) => dispatch(deletePosition(position))\n    const onDeleteStation = async (ID) => await dispatch(deleteStation(ID))\n    const onDeleteTaskQItem = async (ID) => await dispatch(deleteTaskQueueItem(ID))\n\n    const onPutDevice = async (device, ID) => await dispatch(putDevices(device, ID))\n    const onPutPosition = (position, ID) => dispatch(putPosition(position, ID))\n    const onPutProcess = (process) => dispatch(putProcesses(process))\n    const onPutStation = async (station, ID) => await dispatch(putStation(station, ID))\n    const dispatchPutTask = async (task, ID) => await dispatch(putTask(task, ID))\n\n    const onPostDashoard = (dashboard) => dispatch(postDashboard(dashboard))\n    const dispatchStopAPICalls = (bool) => dispatch(localActions.stopAPICalls(bool))\n\n\n    // Selectors\n    const schedulerReducer = useSelector(state => state.schedulerReducer)\n    const devices = Object.values(useSelector(state => { return state.devicesReducer })?.devices || {})\n    const localReducer = useSelector(state => state.localReducer)\n    const MiRMapEnabled = localReducer?.localSettings?.MiRMapEnabled\n    const apiPage = useSelector(state => state.apiReducer.page)\n    const stopAPICalls = useSelector(state => state.localReducer.stopAPICalls)\n    const mapViewEnabled = useSelector(state => state.localReducer.localSettings.mapViewEnabled)\n\n    // States\n    const [currentPage, setCurrentPage] = useState('')\n    const [apiIpAddress, setApiIpAddress] = useState('')\n    const [apiError, setApiError] = useState(false)\n    const [pageDataInterval, setPageDataInterval] = useState(null)\n    const [criticalDataInterval, setCriticalDataInterval] = useState(null)\n    const [mapDataInterval, setMapDataInterval] = useState(null)\n\n    const params = useParams()\n\n    useEffect(() => {\n        loadInitialData() // initial call to load data when app opens\n\n        // this interval is always on\n        // loads essential info used on every page such as status and taskQueue\n        setCriticalDataInterval(setInterval(() => loadCriticalData(), 500));\n        setMapDataInterval(setInterval(() => loadMapData(), 1000));\n\n\n        return () => {\n            // clear intervals\n            clearInterval(pageDataInterval);\n            clearInterval(criticalDataInterval);\n            //clearInterval(mapDataInterval)\n        }\n    }, [])\n\n    useEffect(() => {\n        if (stopAPICalls === true) {\n            clearInterval(criticalDataInterval);\n            clearInterval(pageDataInterval);\n            clearInterval(mapDataInterval);\n            //dispatchStopAPICalls(false)\n        }\n    }, [stopAPICalls])\n\n\n    useEffect(() => {\n\n\n        // once MiR map is enabled, it's always enabled, so only need to do check if it isn't enabled\n        if (!MiRMapEnabled) {\n            let containsMirCart = false\n            // check each device\n            // in order for MiR mode to be enabled, there must be at least one device of MiR type\n            Object.values(devices).forEach((currDevice, index) => {\n                const device_model = currDevice?.device_model ? currDevice?.device_model : \"\"\n                // const x = currDevice?.position?.x\n                // const y = currDevice?.position?.y\n                if (\n                    device_model === \"MiR100\"\n                ) containsMirCart = true\n            })\n\n            // only update if MiRMapEnabled isn't currently set or MiRMapEnabled needs to be updated because it isn't equal to containsMirCart\n            if ((MiRMapEnabled === undefined) || (MiRMapEnabled !== containsMirCart)) onPostLocalSettings({\n                ...localReducer.localSettings,\n                MiRMapEnabled: containsMirCart,\n            })\n        }\n\n    }, [devices, MiRMapEnabled])\n\n    useEffect(() => {\n\n        if (stopAPICalls !== true) {\n            updateCurrentPage();\n        }\n\n    })\n\n    const updateCurrentPage = () => {\n\n        // let pathname = this.props.location.pathname;\n\n        const currentPageRouter = params\n        // const currentPageRouter = getPageNameFromPath(pathname);\n        // this.logger.debug(\"api_container currentPage\", currentPage);\n        // this.logger.debug(\"api_container currentPageRouter\", currentPageRouter);\n\n\n        // If the current page state and actual current page are different, then the page has changed so the data interval should change\n        if (!isEquivalent(currentPageRouter, currentPage)) {\n            // page changed\n\n            // update state\n            setCurrentPage(currentPageRouter)\n\n            // update data interval to get data for new currentPage\n            setDataInterval(currentPageRouter);\n        }\n\n\n    }\n\n\n    /**\n     * Handles data interval based on page\n     */\n\n    const setDataInterval = (pageParams) => {\n        let pageName = ''\n        const {\n            data1,\n            data2\n        } = pageParams\n\n        if (Object.keys(pageParams)[0] === 'sidebar') {\n            pageName = pageParams.sidebar\n\n\n        } else if (Object.keys(pageParams)[0] === 'stationID') {\n\n            // Not the best way to do this, but if the params have a locationId and it's undefined\n            // then it's url is just locations and not a widget page\n            // This happens in app.js file in the route path.\n            if (pageParams.widgetPage === undefined) {\n                pageName = 'locations'\n\n            } else {\n                pageName = pageParams.widgetPage\n\n            }\n\n        }\n\n        // clear current interval\n        clearInterval(pageDataInterval);\n\n        // set new interval for specific page\n        switch (pageName) {\n\n            case 'objects':\n                setPageDataInterval(setInterval(() => loadObjectsData(), 10000))\n                break;\n\n            case 'scheduler':\n                setPageDataInterval(setInterval(() => loadSchedulerData(), 1000000))\n                break;\n\n            case 'dashboards':\n                setPageDataInterval(setInterval(() => loadDashboardsData(), 3000))\n                break;\n\n            case 'tasks':\n                setPageDataInterval(setInterval(() => loadTasksData(), 4000))\n                break;\n\n            case 'settings':\n                setPageDataInterval(setInterval(() => loadSettingsData(), 10000))\n                break;\n\n            case 'lots':\n                setPageDataInterval(setInterval(() => loadCardsData(), 1000))\n                break\n\n            case 'processes':\n                if (data2 === \"lots\") {\n                    loadCardsData(data1) // initial call\n                    setPageDataInterval(setInterval(() => loadCardsData(data1), 1000))\n                }\n                else if (data1 === \"timeline\") {\n                    loadCardsData() // initial call\n                    setPageDataInterval(setInterval(() => loadCardsData(), 1000))\n                }\n                else if (data1 === \"summary\") {\n                    loadCardsData() // initial call\n                    setPageDataInterval(setInterval(() => loadCardsData(), 10000))\n                }\n                else {\n                    setPageDataInterval(setInterval(() => loadTasksData(), 5000))\n                }\n\n                break\n\n            case 'more':\n                setPageDataInterval(setInterval(() => loadMoreData(), 10000))\n                // pageDataInterval = ;\n                break;\n\n            default:\n                break;\n        }\n\n    }\n\n    const loadInitialData = async () => {\n        // Local Settings must stay on top of initial data so that the correct API address is seleceted\n        const localSettings = await onGetLocalSettings()\n        const settings = await onGetSettings();\n        await postSettings(settings)\n        // const refreshToken = await onGetRefreshToken()\n        const devices = await onGetDevices()\n        const maps = await onGetMaps()\n\n        if (maps.length === undefined) {\n            props.onLoad()\n            setApiError(true)\n            return\n        }\n\n        const stations = await onGetStations()\n        const positions = await onGetPositions()\n        const dashboards = await onGetDashboards()\n        const objects = await onGetObjects()\n        const sounds = await onGetSounds()\n        const tasks = await onGetTasks()\n        const taskQueue = await onGetTaskQueue()\n        const processes = await onGetProcesses()\n        const cards = onGetCards()\n\n        const status = await onGetStatus()\n        const getSchedules = await onGetSchedules()\n\n        const loggers = await onGetLoggers()\n\n        // Data Update Functions\n        // const dataUpdate = await onUpdateTaskData(tasks)\n\n        // Cleaner Functions\n        if (!!mapViewEnabled) {\n\n            // const funtion = await handleDeviceWithoutADashboard(devices, dashboards)\n            // const funtion1 = await handleTasksWithBrokenPositions(tasks, stations, positions)\n            // const funtion2 = await handlePositionsWithBrokenParents(stations, positions)\n            // const funtion3 = await handleDevicesWithBrokenStations(devices, stations)\n            // const funtion4 = await handleStationsWithBrokenDevices(devices, stations)\n            // const funtion5 = await handleDashboardsWithBrokenStations(dashboards, stations)\n            // const funtion6 = await handleStationsWithBrokenChildren(stations, positions)\n            // const funtion7 = await handleTasksWithBrokenProcess(processes, tasks)\n            // const funtion8 = await handleProcessesWithBrokenRoutes(processes, tasks)\n        }\n\n        // Commented out for now. Was causing an issue when sending a cart to a location using simple move. Since its just a one off task, the task is never added to the backend so if the page was refreshed, the task q item would be deleted\n        // const funtion9 = await handleTaskQueueWithBrokenTasks(taskQueue, tasks)\n\n        props.apiLoaded()\n        props.onLoad()\n\n    }\n\n    //  DATA LOADERS SECTION BEGIN\n    //  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n    /*\n        Loads critical data used on every page\n\n        required data:\n        status, taskQueue, devices\n    */\n\n    const loadCriticalData = async () => {\n        const dataStream = dispatchGetDataStream()\n    }\n\n\n\n    /*\n        Loads data pertinent to Objects page\n\n        required data:\n        objects, poses, models\n    */\n    const loadObjectsData = async () => {\n        const objects = await onGetObjects();\n        // const poses = await this.props.getPoses();\n        // const models = await this.props.getModels();\n    }\n\n    /*\n        Loads data pertinent to Tasks page\n\n        required data:\n        tasks\n    */\n    const loadTasksData = async () => {\n        const tasks = await onGetTasks()\n        const processes = await onGetProcesses()\n        const objects = await onGetObjects()\n    }\n\n    /*\n        Loads data pertinent to Scheduler page\n\n        required data:\n        schedules, tasks\n    */\n    const loadSchedulerData = async () => {\n        const schedules = await onGetSchedules();\n        const tasks = await onGetTasks();\n\n    }\n\n    /*\n        Loads data pertinent to Dashboards page\n\n        required data:\n        dashboards\n    */\n    const loadDashboardsData = async () => {\n        const dashboards = await onGetDashboards();\n        await onGetCards()\n        await onGetTasks()\n        await onGetProcesses()\n\n    }\n\n    /*\n      Loads data pertinent to Objects page\n\n      required data:\n      tasks, skills, objects, locations, dashboards, sounds\n    */\n    const loadMapData = async () => {\n        const stations = await onGetStations();\n        const positions = await onGetPositions();\n    }\n\n    /*\n        Loads data pertinent to Settings page\n\n        required data:\n        settings, loggers\n    */\n    const loadSettingsData = async () => {\n        const settings = await onGetSettings();\n        const localSettings = await onGetLocalSettings()\n        const loggers = await onGetLoggers();\n\n    }\n\n    /*\n        Loads data pertinent to process card view\n\n        required data:\n        cards\n    */\n    const loadCardsData = async (processId) => {\n        if (processId) {\n            await onGetProcessCards(processId)\n\n        } else {\n            onGetCards()\n        }\n\n        onGetProcesses()\n        onGetTasks()\n    }\n\n    /*\n        Loads data pertinent to More page\n    */\n    const loadMoreData = async () => {\n\n    }\n\n    //  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    //  DATA LOADERS SECTION END\n\n\n    //  DATA CONVERSION\n    //  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n    const onUpdateTaskData = async (tasks) => {\n        Object.values(tasks).map(async (task) => {\n            console.log('QQQQ Task', task)\n        })\n\n    }\n\n\n    //  API DATA CLEAN UP (Ideally these functions should not exist... but it's not an ideal world...)\n    //  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n    /**\n     * Not the best place but it should still work\n     * This will either make a dashboard for the device or replace a lost dashboard\n     */\n    const handleDeviceWithoutADashboard = async (devices, dashboards) => {\n        Object.values(devices).map(async (device) => {\n            // if the device does not have a dashboard, add one\n            if (!device.dashboards || device.dashboards.length === 0) {\n\n                console.log('QQQQ Device does not have a dashboard', deepCopy(device))\n                alert('Device does not have a dashboard')\n\n                const newDeviceDashboard = {\n                    name: `${device.device_name} Dashboard`,\n                    buttons: [],\n                    device: device._id,\n                }\n\n                const newDashboard = onPostDashoard(newDeviceDashboard)\n\n                return newDashboard.then(async (dashPromise) => {\n                    console.log(dashPromise)\n                    device.dashboards = [dashPromise._id.$oid]\n                    await onPutDevice(device, device._id)\n                })\n\n\n            }\n\n            device.dashboards.map((dashboard) => {\n                if (!dashboards[dashboard]) {\n                    console.log('QQQQ Dashboard has dissapeared for some reason', dashboard)\n                    alert('Devices dashboard has been deleted, recreating')\n\n                    const newDeviceDashboard = {\n                        name: `${device.device_name} Dashboard`,\n                        buttons: [],\n                        device: device._id,\n                    }\n\n                    const newDashboard = onPostDashoard(newDeviceDashboard)\n\n                    return newDashboard.then(async (dashPromise) => {\n                        if (dashPromise._id !== undefined){\n                        // Add new dashboard\n                        device.dashboards.push(dashPromise._id.$oid)\n\n                        // Delete old dashboard\n                        const index = device.dashboards.indexOf(dashboard)\n                        device.dashboards.splice(index, 1)\n                        }\n\n                        await onPutDevice(device, device._id)\n                    })\n\n\n                }\n            })\n        })\n    }\n\n    /**\n     * The dashboard is tied to a device that does not exist anymore, so delete the dashboard\n     * @param {*} devices\n     * @param {*} dashboards\n     */\n    const handleDashboardsWithBrokenDevice = (devices, dashboards) => {\n\n    }\n\n\n    /**\n     * This deletes tasks that have broken positions/stations\n     * A broken position/station can be:\n     * a deleted position/station\n     * a position thats parent station has been deleted\n     *  */\n    const handleTasksWithBrokenPositions = async (tasks, stations, positions) => {\n\n        if (tasks === undefined || stations === undefined || positions === undefined) return\n\n        Object.values(tasks).map(async (task) => {\n            // console.log('QQQQ Task', positions[task.load.position], positions[task.unload.position])\n\n            // Deletes the task if the load/unload position/station has been deleted from the positon list\n            if ((!positions[task.load.position] && !stations[task.load.position]) || (!positions[task.unload.position]) && !stations[task.unload.position]) {\n                console.log('QQQQ Position doesnt exist in positions, DELETE TASK', task._id)\n                alert('Position doesnt exist in positions, DELETE TASK')\n                await onDeleteTask(task._id)\n                return\n            }\n\n            // Deletes the task if the load/unload position has a change_key 'deleted'. This means the back end has not deleted the position yet\n            if ((!!positions[task.load.position] && !!positions[task.load.position].change_key && positions[task.load.position].change_key === 'deleted') ||\n                (!!positions[task.unload.position] && !!positions[task.unload.position].change_key && positions[task.unload.position].change_key === 'deleted')) {\n                console.log('QQQQ Position is deleted, waiting on back end, DELETE TASK')\n                alert('Position is deleted, waiting on back end, DELETE TASK')\n                await onDeleteTask(task._id)\n                return\n            }\n\n            // Commented out for the AMR demo\n            // Deletes the task if the load/unload position has a parent, but that parent does not exist in stations (parent has been deleted)\n            // Also should delete the position as well\n            // if ((!!positions[task.load.position].parent && !Object.keys(stations).includes(positions[task.load.position].parent)) ||\n            //     (!!positions[task.unload.position].parent && !Object.keys(stations).includes(positions[task.load.position].parent))) {\n            //     console.log('QQQQ Position parent has been deleted, DELETE TASK AND POSITION')\n            //     await onDeleteTask(task._id)\n            //     return\n            // }\n        })\n    }\n\n    /**\n     * This deletes positions that have parents that are broken\n     * A broken parent is a parent that has been deleted\n     * @param {*} locations\n     */\n    const handlePositionsWithBrokenParents = async (stations, positions) => {\n\n        if (stations === undefined || positions === undefined) return\n\n        Object.values(positions).map(async (position) => {\n\n            if (!!position.parent && !Object.keys(stations).includes(position.parent && position.change_key !== 'deleted')) {\n                console.log('QQQQ This position should be deleted', position)\n                alert('This position should be deleted')\n                onDeletePosition(position)\n            }\n\n        })\n    }\n\n    /**\n     * 1) This finds positions that have become disassociated with their parent stations and reassociates them\n     * 2) Also finds stations that have children positions that have been deleted. Deletes those positions from the stations\n     * This happens because it happens... I have no idea why this happens....\n     * @param {*} locations\n     */\n    const handleStationsWithBrokenChildren = (stations, positions) => {\n\n        if (stations === undefined || positions === undefined) return\n\n        Object.values(stations).map((station) => {\n\n            // if(station.children === undefined) onDeleteStation(station._id)\n\n            station.children.map(async (position, ind) => {\n                if (!!positions[position] && positions[position].parent === null) {\n\n                    const brokenPosition = positions[position]\n                    console.log('QQQQ Stations with broken position', brokenPosition)\n                    alert('Stations with broken position')\n\n                    brokenPosition.parent = station._id\n\n                    onPutPosition(brokenPosition, brokenPosition._id)\n\n                }\n\n                else if (!positions[position]) {\n                    let brokenStation = deepCopy(station)\n                    console.log('QQQQ Stations with deleted position', deepCopy(brokenStation), deepCopy(positions))\n                    alert('Stations with deleted position')\n\n                    brokenStation.children.splice(ind, 1)\n                    await onPutStation(brokenStation, brokenStation._id)\n                }\n            })\n        })\n\n    }\n\n    /**\n     * This deletes device station if the station is broken\n     * A broken station would happen when a station has been deleted\n     * @param {*} devices\n     * @param {*} locations\n     */\n    const handleDevicesWithBrokenStations = async (devices, stations) => {\n\n        if (devices === undefined || stations === undefined) return\n\n        Object.values(devices).map(async (device) => {\n            if (!!device.station_id && !Object.keys(stations).includes(device.station_id)) {\n                console.log('QQQQ Device has a station ID that needs to be deleted', device)\n                alert('Device has a station ID that needs to be deleted')\n                delete device.station_id\n                onPutDevice(device, device._id)\n            }\n        })\n\n    }\n\n    /**\n     * This adds station to device if the station has a device ID and the device does not have a station ID\n     * Why this happens is unkown atm, but this fixes when a device comes back without a station ID but should have one\n     *\n     * It also deletes stations that should be associated with a device, but the device either does not exist or ID has changed\n     *\n     * @param {*} devices\n     * @param {*} locations\n     */\n    const handleStationsWithBrokenDevices = (devices, stations) => {\n\n        if (devices === undefined || stations === undefined) return\n\n        Object.values(stations).map((station) => {\n\n            // Delete station\n            if (!!station.device_id && devices[station.device_id] === undefined) {\n                console.log('QQQQ Station has a device that is deleted')\n                alert('Station has a device that is deleted')\n\n                onDeleteStation(station._id)\n            }\n\n            // Add station to device\n            else if (!!station.device_id && !devices[station.device_id].station_id) {\n                console.log('QQQQ Station has a broken device')\n                alert('Station has a broken device')\n\n                const device = devices[station.device_id]\n                device.station_id = station._id\n                onPutDevice(device, device._id)\n\n            }\n        })\n\n    }\n\n    /**\n     * This deletes dashboards that belong to stations that don't exist\n     * @param {*} dashboards\n     * @param {*} locations\n     */\n    const handleDashboardsWithBrokenStations = (dashboards, stations) => {\n\n        if (dashboards === undefined || stations === undefined) return\n\n        Object.values(dashboards).map((dashboard) => {\n            if (!!dashboard.location && !dashboard.device && !stations[dashboard.location]) {\n                console.log('QQQQ dashboard belongs to a station that does not exist', dashboard)\n                alert('Dashboard belongs to a station that does not exist')\n                onDeleteDashboard(dashboard._id.$oid)\n            }\n        })\n\n\n    }\n\n    /**\n     * This handles broken Processes\n     * 1) A broken process would happen if a route/task that has been deleted but the process has not been updated\n     * 2) Also, a route could have been added to a process, but the process was never added to the route\n     * @param {*} processes\n     * @param {*} tasks\n     */\n    const handleProcessesWithBrokenRoutes = async (processes, tasks) => {\n        if (processes === undefined || tasks === undefined) return\n\n        Object.values(processes).map((process) => {\n\n            // Object.keys(process.routes).map(async (station) => {\n\n            process.routes.map(async (route) => {\n\n                // If the route does not exist anymore in tasks then delete the route from the process\n                if (!tasks[route]) {\n                    // Removes the task from the array of routes\n                    let processRoutes = deepCopy(process.routes)\n                    const index = processRoutes.indexOf(route)\n                    processRoutes.splice(index, 1)\n                    const updatedProcess = {\n                        ...process,\n                        routes: [...processRoutes]\n                    }\n                    console.log('QQQQ route does not exist in anymore, delete from process', deepCopy(updatedProcess))\n                    alert('Route does not exist in anymore, delete from process')\n\n                    await onPutProcess(updatedProcess)\n                }\n\n                // Else the task does exist, see if the task contains the process\n                // else {\n                //     if (!tasks[route].processes.includes(process._id)) {\n                //         console.log('QQQQ Process containes a route, but the route does not contain the process, adding process to route', tasks[route])\n                //         alert('Process containes a route, but the route does not contain the process, adding process to route')\n                //\n                //         let taskCopy = deepCopy(tasks[route])\n                //         taskCopy.processes.push(process._id)\n                //         dispatchPutTask(taskCopy, taskCopy._id)\n                //\n                //     }\n                // }\n            })\n        })\n\n        // })\n    }\n\n    /**\n     * This handles tasks that belong to broken process\n     * 1) the process has been deleted and the task have not\n     * 2) The task was created but the process was never saved\n     * 3) The task has a new tag\n     * @param {*} processes\n     * @param {*} tasks\n     */\n    const handleTasksWithBrokenProcess = async (processes, tasks) => {\n        if (processes === undefined || tasks === undefined) return\n\n        Object.values(tasks).map(async (task) => {\n\n            if (!!task.new) {\n                console.log('QQQQ Task still has a new tag', deepCopy(task))\n                alert('Task still has a new tag, deleting task')\n                onDeleteTask(task._id)\n            }\n\n            if (task.processes.length > 0) {\n                task.processes.map((process) => {\n\n                    // If processes does no contain the process, then the process was deleted so remove it from the task\n                    if (!processes[process]) {\n                        const index = task.processes.indexOf(process)\n                        task.processes.splice(index, 1)\n\n                        console.log('QQQQ Process does not exist anymore, removing from task', task)\n                        alert('Process does not exist anymore, removing from task')\n                        dispatchPutTask(task, task._id)\n\n                    }\n\n                    else if (!processes[process].routes.includes(task._id)) {\n                        console.log('QQQQ Task is associated with a process that is not associated with the task anymore', task, process)\n                        alert('Task is associated with a process that is not associated with the task anymore, adding back to process')\n\n                        const index = task.processes.indexOf(process)\n                        task.processes.splice(index, 1)\n                        dispatchPutTask(task, task._id)\n\n                    }\n\n                })\n            }\n\n        })\n\n    }\n\n    /**\n     * This handles task queue items that belong to a broken task\n     * A task would be broken because it has been deleted\n     * @param {*} taskQueue\n     * @param {*} tasks\n     */\n    const handleTaskQueueWithBrokenTasks = async (taskQueue, tasks) => {\n        if (taskQueue === undefined) return\n\n        Object.values(taskQueue).map(async (Q, i) => {\n            if (tasks[Q.task_id] === undefined) {\n                console.log('QQQQ TaskQ associated task has been deleted')\n                alert('TaskQ associated task has been deleted')\n                await onDeleteTaskQItem(Q._id)\n            }\n        })\n    }\n\n    //  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    //  API DATA CLEAN UP\n\n\n    //  API LOGIN\n    //  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n    return (\n        <SplashScreen\n            isApiLoaded={props.isApiLoaded}\n            apiError={apiError}\n        />\n    )\n}\n\nexport default ApiContainer;\n","import { normalize, schema } from 'normalizr';\n\nimport {\n    GET_DEVICES_SUCCESS,\n    GET_DEVICES_FAILURE\n} from '../types/devices_types'\n\nimport {\n    GET_STATUS_SUCCESS,\n    GET_STATUS_FAILURE\n} from '../types/status_types';\n\nimport {\n    GET_TASK_QUEUE_SUCCESS,\n    GET_TASK_QUEUE_FAILURE,\n    INCREMENT_GET_DATA_FAILURE_COUNT\n} from '../types/task_queue_types';\n\nimport * as api from '../../api/data_stream_api'\nimport { devicesSchema } from '../../normalizr/schema';\nimport { statusesSchema } from '../../normalizr/status_schema'\nimport { taskQueueSchema } from '../../normalizr/task_queue_schema'\n\n\nexport const getDataStream = () => {\n    return async dispatch => {\n\n        function handleDevicesSuccess(response) {\n            dispatch({ type: GET_DEVICES_SUCCESS, payload: response });\n            return response;\n        }\n        function handleDevicesError(error) {\n            dispatch({ type: GET_DEVICES_FAILURE, payload: error });\n            return error;\n        }\n\n        function handleStatusSuccess(response) {\n            dispatch({ type: GET_STATUS_SUCCESS, payload: response });\n            return response;\n        }\n        function handleStatusError(error) {\n            dispatch({ type: GET_STATUS_FAILURE, payload: error });\n            return error;\n        }\n\n        function handleTaskQueueSuccess(response) {\n            dispatch({ type: GET_TASK_QUEUE_SUCCESS, payload: response });\n            return response;\n        }\n        function handleTaskQueueError(error) {\n            dispatch({ type: GET_TASK_QUEUE_FAILURE, payload: error });\n            dispatch({ type: INCREMENT_GET_DATA_FAILURE_COUNT, payload: null })\n            return error;\n        }\n\n        try {\n\n            const dataStream = await api.getDataStream();\n\n            // Devices\n            try {\n                let devices = dataStream.devices\n                devices.forEach((device, ind) => {\n                    if (!(device.position === undefined)) {\n                        devices[ind].position.pos_x = device.position.x\n                        devices[ind].position.pos_y = device.position.y\n                    }\n                })\n\n                const normalizedDevices = normalize(devices, devicesSchema);\n                handleDevicesSuccess(normalizedDevices.entities.devices)\n            } catch (error) {\n                handleDevicesError(error)\n            }\n\n\n            // Status\n            try {\n                let status = dataStream.status\n                handleStatusSuccess(status);\n            } catch (error) {\n                handleStatusError(error)\n            }\n\n\n            // Task Queue\n            try {\n                const taskQueue = dataStream.task_queue\n                const normalizedTaskQueue = normalize(taskQueue, taskQueueSchema);\n                return handleTaskQueueSuccess(normalizedTaskQueue.entities.taskQueue);\n            } catch (error) {\n                return handleTaskQueueError(error)\n            }\n\n\n\n        } catch (error) {\n        }\n    }\n}\n","import styled from 'styled-components';\n\nimport { hexToRGBA } from '../../methods/utils/color_utils'\n\nexport const NotificationsContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n\n    position: absolute;\n    top: 4rem;\n    right: 0;\n\n    padding: 0.5rem;\n    padding-top: 0rem;\n\n    align-items: center;\n\n    width: ${props => props.overlaping ?  '13.75rem' : '20rem'} ;\n    height: auto;\n    max-height: ${props => props.windowHeight};\n    /* max-height: 10rem; */\n\n    box-shadow: -6px 6px 6px 0px rgba(0,0,0,0.3);\n\n    background: ${props => hexToRGBA(props.theme.bg.septenary, 0.97)};\n\n    border-radius: 0 0 0 1rem;\n\n    z-index: 1;\n\n    overflow-y: scroll;\n\n    ::-webkit-scrollbar{\n        display: none;\n    }\n\n`\n\nexport const ClearText = styled.p`\n    color: ${props => props.theme.bg.quaternary};\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz3};\n    margin-bottom: 0rem;\n    user-select: none; /* Standard */\n    &:hover {\n        cursor: pointer;\n    }\n`\n\nexport const NotificationTypeTitle = styled.p`\n    color: ${props => props.theme.bg.senary};\n    font-weight: 600;\n    font-size: 1.3rem;\n    font-family: ${props => props.theme.font.primary};\n    user-select: none; /* Standard */\n\n`\n\nexport const NotificationTypeContainer = styled.div`\n    width: 100%;\n    padding-left: 1rem;\n    position: relative;\n`\n\nexport const NotificationMinimizeIcon = styled.i`\n    position: absolute;\n    right: 1rem;\n    top: 0rem;\n    color: ${props => props.theme.bg.octonary};\n\n    &:hover {\n        cursor: pointer;\n    }\n`\n\nexport const NotificationDisplayContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n`\n\nexport const NewNotificationContainer = styled.div`\n    display: flex;\n    position: absolute;\n    top: 5rem;\n    right: .5rem;\n`\n\nexport const ToggleContainer =styled.div`\n    display: flex;\n    width: 100%;\n    justify-content: center;\n\n    margin: .5rem .5rem;\n`\n\nexport const ToggleButton = styled.div`\n    width: 50%;\n    display: flex;\n    justify-content: center;\n    color: ${props => props.theme.fg.primary};\n    font-size: 1rem;\n\n    user-select: none; /* Standard */\n    background-color: ${props => props.selected == props.type ? props.theme.bg.senary : props.theme.bg.septenary};\n    color: ${props => props.selected == props.type ? props.theme.bg.septenary : props.theme.bg.quaternary};\n\n    height: 1.8rem;\n    line-height: 1.9rem;\n\n    &:hover{\n        cursor: pointer;\n    }\n`\n\nexport const Title = styled.h1`\n    margin-top: 1rem;\n    font-size: ${props => props.theme.fontSize.sz3};\n    font-family: ${props => props.theme.font.primary};\n`\n","import styled, { css } from 'styled-components'\nimport { getDebugStyle } from \"../../../methods/utils/style_utils\";\nimport * as commonCss from \"../../../common_css/common_css\";\n\n\n// shared styles\n// ******************************\nexport const textStyle = css`\n\tfont-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz3};\n    color: ${props => props.warning ? props.theme.okay : props.theme.fg.primary};\n`\n// ******************************\n\nexport const Container = styled.div`\n    width: 100%;\n\n    padding-left: .5rem;\n    padding-right: .5rem;\n    padding-top: .5rem;\n    padding-bottom: .5rem;\n\n    position: relative;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n\n    border-radius: 0.5rem;\n    border: thin solid ${props => props.theme.bg.primary};\n    background-color: transparent;\n    /* // optional overwrite styles passed as css in props */\n    ${props => props.css};\n\n    /* // uncomment to show debug styles */\n    /* // ${getDebugStyle()}; */\n\n    ${props => props.selectable && (props.isSelected ? selectedCss : notSelectedCss)};\n    \n    \n\n`\n\nconst selectedCss = css`\n\n`\n\nconst notSelectedCss = css`\n  filter: contrast(70%);\n    &:hover {\n        filter: contrast(100%);\n    }\n`\n\n\n\n\nexport const Title = styled.span`\n    // align-self: flex-start;\n    // ${textStyle};\n\t\toverflow-wrap: break-word;\n\n    display: inline-flex;\n  \talign-items: center;\n\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz4};\n    font-weight: 500;\n    color: ${props => props.theme.bg.primary};\n\n    /* // optional overwrite styles passed as css in props */\n    ${props => props.css};\n\n    /* // uncomment to show debug styles */\n    // ${getDebugStyle()};\n`\n\nexport const Status = styled.span`\n\n    display: inline-flex;\n  \talign-items: center;\n\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz4};\n    font-weight: 500;\n\t\tcolor: ${props => props.theme.bg.quaternary};\n`\n\nexport const LeftContentContainer = styled.div`\n\t/* // overwrite styles passed as css in props */\n    ${props => props.css};\n\t\toverflow-wrap: break-word;\n`\n\nexport const ContentContainer = styled.div`\n\tflex: 1;\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\n\n\t// optional overwrite styles passed as css in props\n    ${props => props.css};\n\n    // uncomment to show debug styles\n    // ${getDebugStyle()};\n\n`\n\nexport const RightContentContainer = styled.div`\n\t// overwrite styles passed as css in props\n    ${props => props.css};\n`\n\n\nexport const Description = styled.span`\n    align-self: flex-start;\n\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz4};\n    color: ${props => props.theme.bg.senary};\n    cursor: pointer;\n    white-space: pre-line;\n\n    // optional overwrite styles passed as css in props\n    ${props => props.css};\n\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport * as style from './basic_list_item.style'\n\nfunction BasicListItem(props) {\n\n\t// extract props\n\tconst {\n\t\tLeftContentContainer,\n\t\tleftContentContainerCss,\n\t\tleftContentContainerProps,\n\t\tleftContent,\n\t\tRightContentContainer,\n\t\trightContentContainerCss,\n\t\trightContentContainerProps,\n\t\trightContent,\n\t\tContentContainer,\n\t\tcontentContainerCss,\n\t\tcontentContainerProps,\n\t\tContainer,\n\t\tcontainerCss,\n\t\t containerProps,\n\t\ttitle,\n\t\tTitle,\n\t\ttitleCss,\n\t\ttitleProps,\n\t\tonClick,\n\t\tonMouseEnter,\n\t\tonMouseLeave,\n\t\tStatus,\n\t\tstatus,\n\t\tisSelected,\n\t\tselectable\n\t} = props\n\n\treturn (\n\t\t<Container\n\t\t\tisSelected={isSelected}\n\t\t\tselectable={selectable}\n\t\t\t{...containerProps}\n            css={containerCss}\n\t\t>\n\t\t\t<LeftContentContainer css={leftContentContainerCss} {...leftContentContainerProps}>\n\t\t\t\t{leftContent && leftContent}\n\t\t\t</LeftContentContainer>\n\n\t\t\t<ContentContainer\n\t\t\t\t{...contentContainerProps}\n\t\t\t\tcss={contentContainerCss}\n\t\t\t\tonClick={onClick}\n\t\t\t\tonMouseEnter = {onMouseEnter}\n\t\t\t\tonMouseLeave = {onMouseLeave}\n\t\t\t>\n\t\t\t\t<Title css={titleCss}{...titleProps}>\n\t\t\t\t\t{title}\n\t\t\t\t</Title>\n\n                <Status>\n                    {status}\n                </Status>\n\t\t\t</ContentContainer>\n\n\t\t\t<RightContentContainer css={rightContentContainerCss} {...rightContentContainerProps}>\n\t\t\t\t{rightContent && rightContent}\n\t\t\t</RightContentContainer>\n\t\t</Container>\n\t)\n}\n\nBasicListItem.propTypes = {\n\tContainer: PropTypes.elementType,\n\tLeftContentContainer: PropTypes.elementType,\n\tRightContentContainer: PropTypes.elementType,\n\tContentContainer: PropTypes.elementType,\n    Title: PropTypes.elementType,\n    Status: PropTypes.elementType,\n\ttitle: PropTypes.string,\n\tcontainerCss: PropTypes.object,\n\tleftContentContainerCss: PropTypes.object,\n\trightContentContainerCss: PropTypes.object,\n\ttitleCss: PropTypes.object,\n\tcontentContainerCss: PropTypes.object,\n\tisSelected: PropTypes.bool,\n\tselectable: PropTypes.bool,\n}\n\nBasicListItem.defaultProps = {\n\tContainer: style.Container,\n\tLeftContentContainer: style.LeftContentContainer,\n\tRightContentContainer: style.RightContentContainer,\n\tContentContainer: style.ContentContainer,\n    Title: style.Title,\n    Status: style.Status,\n\ttitle: \"\",\n\tcontainerCss: {},\n\ttitleCss: {},\n\tleftContentContainerCss: {},\n\trightContentContainerCss: {},\n\tcontentContainerCss: {},\n\tisSelected: false,\n\tselectable: false,\n}\n\nexport default BasicListItem\n","import styled, {css} from \"styled-components\";\n\nimport RemoveIcon from '@material-ui/icons/Remove';\n\nexport const containerCss = css`\n\tbackground-color: #FFFFFF;\n\tborder-color: transparent;\n\tborder-width: 2px;\n\tcolor: transparent;\n    height: 4.5rem;\n    width: 100%;\n    padding: .25rem;\n\n\t\t&:hover{\n\t\t\t\tborder-color: #798fd9;\n\n\t\t}\n\n`\n\nexport const titleCss = css`\n    color: #000000;\n    margin-right: .5rem;\n\t\twidth:100%;\n\t\tword-break: break-word;\n\n\n`\n\nexport const contentContainerCss = css`\n    flex-direction: row;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    /* white-space: nowrap; */\n\n    /* justify-content: flex-start; */\n`\n\nexport const rightContentContainerCss = css`\n\twidth: auto;\n\tmargin-left: .5rem;\n\tmargin-right: .25rem;\n\tdisplay: flex;\n\talign-items: center;\n`\n\n\nexport const StyledRemoveIcon = styled(RemoveIcon)`\n\tpadding: 0;\n\tmargin: 0;\n`\n\nexport const Spacer = styled.div`\n\theight: 0.4rem;\n\twidth: 100%;\n`\n\nexport const ItemDiv = styled.div`\n    &:hover{\n        cursor: pointer;\n    }\n`\n","import styled, {css} from 'styled-components'\nimport {hexToRGBA, RGB_Linear_Shade} from \"../../../methods/utils/color_utils\";\n\nconst activeContainerStyle = css`\n\tcolor:  ${props => RGB_Linear_Shade(-0.1, hexToRGBA(props.color))};\n`\n\nconst hoverContainerStyle = css`\n\tcolor:  ${props => RGB_Linear_Shade(0.5, hexToRGBA(props.color))};\n`\n\nconst focusContainerStyle = css`\n\toutline: none;\n`\n\nconst disabledContainerStyle = css`\n\tpointer-events: none;\n`\n\n\n\nexport const Container = styled.button`\n\twidth: ${props => props.width};\n\theight: ${props => props.height};\n\tcolor: ${props => props.color};\n\t\n\t// flex layout\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\t\n\tborder: none;\n\ttransition: all 0.2s ease 0s;\n\tcursor: pointer;\n\toutline: none;\n\tbackground-color: transparent;\n\tmargin: 0;\n\tpadding: 0;\n\t\n\t&:focus {\n\t\t${focusContainerStyle};\n\t}\n\t\n\t&:hover {\n\t\t${props => props.hoverable && hoverContainerStyle};\n\t}\n\t// also allow enabling hover style via props\n\t${props=> props.isHovering && hoverContainerStyle};\n\t\n\t&:active {\n\t\t${props => props.clickable && activeContainerStyle};\n\t}\n\t// also allow enabling active style via props\n\t${props=> props.isActive && activeContainerStyle};\n\t\n\t// disabled style\n\t${props => props.disabled && disabledContainerStyle};\n\t\n`\n","import React, {useEffect, useRef, useState} from 'react'\nimport PropTypes from 'prop-types'\n\n// Import Styles\nimport * as style from './icon_button.style'\nimport useOnClickOutside from \"../../../hooks/useOnClickOutside\";\n\nconst IconButton = (props => {\n\n    const {\n        color,\n        children,\n        onClick,\n        disabled,\n        width,\n        height,\n        clickable,\n        hoverable,\n        containerStyle,\n        Component,\n        backgroundColor,\n        isActive,\n        isHovering,\n        onClickOutside\n    } = props\n\n    const ref = useRef() // ref for useOnClickOutside\n    useOnClickOutside(ref, onClickOutside) // calls onClickOutside when click outside of element\n\n    return(\n        <style.Container\n            disabled={disabled}\n            width={width}\n            height={height}\n            onClick={onClick}\n            clickable={clickable}\n            hoverable={hoverable}\n            color={color}\n            backgroundColor={backgroundColor}\n            style={containerStyle}\n            isActive={isActive}\n            isHovering={isHovering}\n            ref={ref}\n        >\n            { children}\n        </style.Container>\n    )\n\n})\n\n\n// Specifies propTypes\nIconButton.propTypes = {\n    clickable: PropTypes.bool,\n    hoverable: PropTypes.bool,\n    isActive: PropTypes.bool,\n    isHovering: PropTypes.bool,\n    onClick: PropTypes.func,\n    onClickOutside: PropTypes.func,\n    disabled: PropTypes.bool\n}\n\n// Specifies the default values for props:\nIconButton.defaultProps = {\n    clickable: true,\n    hoverable: true,\n    onClick: () => {},\n    onClickOutside: () => {},\n    disabled: false,\n    width: \"auto\",\n    height: \"auto\",\n    color: \"#123456\",\n    backgroundColor: \"#FFFFFF\",\n    isActive: false,\n    isHovering: false,\n\n}\n\nexport default IconButton\n","import React, {useContext, useEffect, useState} from 'react';\n\nimport BasicListItem from \"../../basic/basic_list_item/basic_list_item\";\nimport BounceButton from \"../../basic/bounce_button/bounce_button\";\n\nimport * as style from \"./task_queue_item.style\"\nimport { deleteTaskQueueItem } from \"../../../redux/actions/task_queue_actions\";\nimport { getStatus } from \"../../../redux/actions/status_actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport log from \"../../../logger\"\nimport IconButton from \"../../basic/icon_button/icon_button\";\nimport { ThemeContext } from \"styled-components\";\nimport { type } from 'jquery';\n\nimport * as taskActions from '../../../redux/actions/tasks_actions'\n\nconst logger = log.getLogger(\"TaskQueueListItem\")\n\nconst TaskQueueListItem = (props) => {\n\n    // extract props\n    const {\n        id,\n        item,\n        task,\n        onClick,\n        type,\n        ...rest\n    } = props\n\n    // dispatch\n    const dispatch = useDispatch()\n    // theme\n    const themeContext = useContext(ThemeContext);\n\n    const tasks = useSelector(state => { return state.tasksReducer.tasks })\n    const editingTask = useSelector(state => state.tasksReducer.editingTask)\n    const selectedTask = useSelector(state => state.tasksReducer.selectedTask) || {}\n    const {\n        _id: selectedTaskId\n    } = selectedTask\n\n    const {\n        _id: taskId\n    } = task || {}\n\n    const [isSelected, setIsSelected] = useState(false)\n\n    // update isSelected based on if current items task id matches the selectedTask's id\n    useEffect(() => {\n        if(!isSelected && (selectedTaskId === taskId)) {\n            setIsSelected(true)\n        }\n        else if(selectedTask && (selectedTaskId !== taskId)) {\n            setIsSelected(false)\n        }\n    }, [id, selectedTaskId])\n\n    const handleClick = async () => {\n        await dispatch(deleteTaskQueueItem(id))\n        dispatch(getStatus(props.statusApi))\n    }\n\n    /**\n     * This is probably being used to display HILs\n     */\n    const handleTaskItemClicked = () => {\n        if(item.task_id !== 'custom_task'){\n            dispatch({ type: 'TASK_QUEUE_ITEM_CLICKED', payload: id })\n        }\n    }\n\n    const handleMouseEnter = async () => {\n        if (!editingTask && !!tasks[item.task_id]) {\n            await dispatch(taskActions.selectTask(item.task_id))\n        }\n    }\n\n    const handleMouseLeave = async () => {\n        // only deselect if not currently editing\n        if(!editingTask) {\n            await dispatch(taskActions.deselectTask())\n        }\n    }\n\n    return (\n        <style.ItemDiv>\n            <BasicListItem\n                selectable={editingTask}\n                isSelected={isSelected}\n                {...rest}\n                onClick={handleTaskItemClicked}\n                onMouseEnter={handleMouseEnter}\n                onMouseLeave={handleMouseLeave}\n\n                titleCss={style.titleCss}\n                containerCss={style.containerCss}\n                rightContentContainerCss={style.rightContentContainerCss}\n                contentContainerCss={style.contentContainerCss}\n                rightContent={\n                    <>\n                        <IconButton\n                            color={themeContext.fg.primary}\n                        >\n                            {type == 'human' ?\n                                <i className=\"fas fa-user\"></i>\n                                :\n                                <i className=\"fas fa-robot\"></i>\n                            }\n                        </IconButton>\n\n                        <IconButton\n                            color={themeContext.fg.primary}\n                            onClick={handleClick}\n                        >\n                            <style.StyledRemoveIcon\n                                fontSize={\"large\"}\n                            />\n                        </IconButton>\n                    </>\n\n                }\n            />\n            {/*CANT USE MARGIN FOR SPACING ITEMS IN REACT LIST - IT CAUSES A WEIRD FLICKERING ISSUE AND PREVENTS REACT-LIST METHODS FROM WORKING CORRECTLY*/}\n            {/*USER EMPTY DIV INSTEAD FOR NOW*/}\n            <style.Spacer />\n        </style.ItemDiv>\n    )\n}\n\nexport default TaskQueueListItem\n","import styled, {css} from 'styled-components';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  overflow: hidden;\n  width: 100%;\n// `\n\nexport const Header = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\twidth: 100%;\n\t/* box-shadow: 2px 2px 10px black; */\n\tpadding: 1rem;\n\tpadding-top: 1.5rem;\n\t/* background-color: ${props => props.theme.bg.quinary}; */\n    justify-content: space-between;\n`\n\nexport const Title = styled.h1`\n    font-family: ${props => props.theme.font.primary};\n    font-size: 2rem;\n    font-weight: 500;\n    color: ${props => props.theme.schema[props.schema].solid};\n`\n\nexport const ClearIcon = styled(DeleteForeverIcon)`\n\n`\n\nexport const ListContainer = styled.div`\n\twidth: 100%;\n\tflex: 1;\n\n    padding: .1rem;\n    padding-top: 1.5rem;\n\n\toverflow: auto;\n\n\t// optionally style scroll bar\n\t::-webkit-scrollbar {\n\t}\n\t::-webkit-scrollbar-thumb {\n\t}\n`\n","import React, { useEffect, useRef, useState } from 'react';\n\n// external functions\nimport { useDispatch, useSelector } from 'react-redux';\n\n// external components\nimport ReactList from 'react-list';\n\n// import utils\nimport { clone_object } from '../../methods/utils/utils';\n\n// import actions\nimport { deleteTaskQueueAll } from '../../redux/actions/task_queue_actions';\nimport { getStatus } from '../../redux/actions/status_actions';\nimport { getTasks, setSelectedTask } from \"../../redux/actions/tasks_actions\";\n\n\n// components\nimport TaskQueueItem from \"./task_queue_item/task_queue_item\"\n\n// styles\nimport * as style from './task_queue.style'\n\n// logging\nimport log from '../../logger.js';\n\nconst logger = log.getLogger(\"TaskQueueMenu\");\n\nconst TaskQueueMenu = (props) => {\n\n    const tasks = useSelector(state => { return state.tasksReducer.tasks })\n    const selectedTask = useSelector(state => state.tasksReducer.selectedTask)\n\n    const onDeleteTaskQueueAll = () => dispatch(deleteTaskQueueAll()) // Clear Task Q\n    const onGetStatus = (props) => dispatch(getStatus(props))\t// fetch update to status\n\n\n\n    const taskQueue = useSelector(state => {\n\n        const taskQueue = state.taskQueueReducer.taskQueue\n\n        var taskQueueClone = [];\n        if (taskQueue) {\n            Object.values(taskQueue).forEach((queueItem, index) => {\n                let queueItemClone = clone_object(queueItem);\n                // Sees if task is a custom task\n                let task = {}\n                if (queueItem.task_id == 'custom_task') {\n                    task = {\n                        name: 'Simple Move',\n                        mission_status: 'Austin, Please Add Mission Status',\n                    }\n                } else {\n                    task = tasks ? tasks[queueItem.task_id] : {}\n\n                }\n\n                // skip if associated task isn't found\n                if (task) {\n\n                    // If task is a handoff, don't show in task q\n                    if (task.handoff === true) return\n\n                    queueItemClone.task = task;\n                    queueItemClone.name = task.name;\n                    taskQueueClone.push(queueItemClone);\n                } else {\n                    // no matching task found, log warning\n                    // logger.warn(\"Queue item found without corresponding task\", {queueItem})\n                }\n            })\n        }\n\n        return taskQueueClone\n    })\n\n\n    // dispatch\n    const dispatch = useDispatch()\n\n    const itemRenderer = (index, key) => {\n\n\n        // get item from task queue based on index\n        const item = taskQueue[index]\n        const type = item.device_type\n        // extract properties\n        const { name } = item\n        const id = item?._id\n        const status = item.mission_status\n        const task = tasks[item.task_id]\n\n        // return the component with the items properties as props\n        return (\n            <TaskQueueItem\n                title={name}\n                status={status}\n                id={id}\n                key={key}\n                type={type}\n                item={item}\n                task={task}\n            />\n        )\n    }\n\n    const clearTaskQueue = async () => {\n        onDeleteTaskQueueAll()\n        onGetStatus(props.statusApi)\n    }\n\n    return (\n        <style.Container>\n\n            <style.ListContainer>\n\n                <ReactList\n                    itemRenderer={itemRenderer}\n                    length={taskQueue.length}\n                    type='uniform'\n                    style={{ width: '100%' }}\n                />\n            </style.ListContainer>\n        </style.Container>\n    );\n}\n\nexport default TaskQueueMenu;\n","import styled from \"styled-components\";\n\nimport { LightenDarkenColor } from '../../../methods/utils/color_utils'\n\nexport const NotificationContainer = styled.div`\n    width: 19rem;\n    background: ${props => LightenDarkenColor(props.theme.bg.senary, 45)};\n    margin-bottom: 1rem;\n    border-radius: 0.35rem;\n    \n    position: relative;\n    display: flex;\n    flex-direction: column;\n\n    &:hover {\n        cursor: pointer;\n    }\n`;\n\nexport const NotificationHeader = styled.div`\n    height: 1.4rem;\n    width: 100%;\n\n    display: flex;\n    flex-direction: row;\n\n    background: ${props => LightenDarkenColor(props.theme.bg.senary,25)};\n\n    border-radius: 0.35rem 0.35rem 0 0;\n`\n\nexport const NotificationTypeText = styled.h3`\n    color: ${props => props.theme.bg.quaternary};\n    font-weight: 600;\n    font-size: ${props => props.theme.fontSize.sz5};\n    font-family: ${props => props.theme.font.primary};\n    user-select: none; /* Standard */\n\n    line-height: 1.4rem;\n    padding-left: 0.5rem;\n\n    flex-grow: 1;\n`\n\nexport const NotificationDateTime = styled.h4`\n    color: ${props => props.theme.bg.quaternary};\n    font-weight: 400;\n    font-size: ${props => props.theme.fontSize.sz5};\n    font-family: ${props => props.theme.font.primary};\n\n    line-height: 1.4rem;\n    padding-right: 0.5rem;\n`\n\nexport const NotificationBody = styled.div`\n    flex-grow: 1;\n    padding: 0.5rem;\n`\n\nexport const NotificationLabel = styled.h4`\n    color: ${props => props.theme.bg.tertiary};\n    font-weight: 550;\n    font-size: ${props => props.theme.fontSize.sz5};\n    font-family: ${props => props.theme.font.primary};\n    user-select: none; /* Standard */\n`\n\nexport const NotificationMessage = styled.h5`\n    color: ${props => props.theme.bg.quaternary};\n    font-size: ${props => props.theme.fontSize.sz6};\n    font-family: ${props => props.theme.font.primary};\n    user-select: none; /* Standard */\n`\n\nexport const ClearNotification = styled.i`\n    /* position: absolute; */\n    right: 0.5rem;\n    top: 1.5rem;\n    font-size: ${(props) => props.theme.fontSize.sz2};\n\n    display: flex;\n    flex-grow: 1;\n\n    &:hover {\n        cursor: pointer;\n    }\n`;","import React, { useState, useMemo, useRef, useEffect } from \"react\";\n\nimport { useHistory } from 'react-router-dom'\n\nimport * as styled from \"./notification.style\";\nimport { timeFormat } from 'd3-time-format'\nimport { timeDay } from 'd3-time'\n\nconst Notification = (props) => {\n    // const { message, type, ind, id } = props;\n\n    const history = useHistory()\n\n    const dayDelta = timeDay.count(props.notification.dateTime, new Date)\n    let dateTimeFormatter\n    if (dayDelta < 1) {\n        dateTimeFormatter = timeFormat(\"%I:%M %p\")\n    } else if (dayDelta < 7) {\n        dateTimeFormatter = timeFormat(\"%A %I:%M %p\")\n    } else {\n        dateTimeFormatter = timeFormat(\"%b %d\")\n    }\n\n    // const handleNotificationClicked = () => {\n    //     // history.push('/locations/' + id )\n    // }\n\n    const { notification, ind } = props\n\n    const handleType = () => {\n        switch (notification.type) {\n            case \"station_alert\":\n                return \"STATION\"\n            case \"device_alert\":\n                return \"DEVICE\"\n        }\n    }\n\n    return (\n        <styled.NotificationContainer key={ind}>\n            <styled.NotificationHeader>\n                <styled.NotificationTypeText>{handleType()}</styled.NotificationTypeText>\n                <styled.NotificationDateTime>{dateTimeFormatter(props.notification.dateTime)}</styled.NotificationDateTime>\n            </styled.NotificationHeader>\n            \n            <styled.NotificationBody>\n                <styled.NotificationLabel>{notification.label}</styled.NotificationLabel>\n                <styled.NotificationMessage>{notification.message}</styled.NotificationMessage>\n            </styled.NotificationBody>\n        </styled.NotificationContainer>\n    );\n};\n\nexport default Notification;\n","import React, { useState, useMemo, useRef, useEffect } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport * as styled from './notifications.style'\n\nimport Notification from './notification/notification'\n\nconst Notifications = () => {\n    const notifications = useSelector(state => state.notificationsReducer.notifications)\n\n    const handleNotifications = () => {\n        return (\n            <>{\n                notifications.sort((a, b) => b.dateTime - a.dateTime).map((notification, ind) =>\n                    <Notification\n                        key={`notification-${ind}`}\n                        ind={ind}\n                        notification={notification}\n                    />\n                )\n            }</>\n        )\n    }\n\n    return (\n        <>\n            {handleNotifications()}\n        </>\n    )\n}\n\nexport default Notifications","import React, { useState, useMemo, useRef, useEffect } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport * as styled from \"./right_menu.style\";\n\n// Import Components\nimport TaskQueue from '../../components/task_queue/task_queue'\nimport Notifications from \"../../components/notifications/notifications\";\nimport Notification from \"../../components/notifications/notification/notification\";\n\n// Import actions\nimport { deleteTaskQueueAll } from '../../redux/actions/task_queue_actions'\nimport { toggleNotificationTaskQueue } from '../../redux/actions/notifications_actions'\n\nimport useWindowSize from \"../../hooks/useWindowSize\";\n\n\nimport {\n    deepCopy,\n    upperCaseFirstLetterInString,\n} from \"../../methods/utils/utils\";\n\nconst RightMenu = (props) => {\n\n    // This values are defined in Status Header\n    const { showRightMenu, newNotification, overlapStatus } = props;\n\n    const size = useWindowSize();\n\n    const dispatch = useDispatch()\n    const onHideNotifications = (displayType) => dispatch({ type: 'HIDDEN_NOTIFICATIONS', payload: displayType })\n    const onDeleteTaskQueueAll = () => dispatch(deleteTaskQueueAll())\n    const setToggle = (toggle) => dispatch(toggleNotificationTaskQueue(toggle))\n\n\n    const displayType = useSelector(state => state.notificationsReducer.hiddenNotifications)\n    const toggle = useSelector(state => state.notificationsReducer.toggleNotificationTaskQueue)\n\n    const [types, setTypes] = useState({});\n\n    /**\n     * When a new notification comes in, overlay on the map\n     */\n    const handleNewNotification = () => {\n        const notification = {\n            message: \"Station 69 takt time is 420s slower then normal\",\n            type: \"station_alert\",\n            id: \"1234\",\n        };\n\n        return (\n            <styled.NewNotificationContainer>\n                <Notification\n                    message={notification.message}\n                    type={notification.type}\n                    id={notification.id}\n                    onClick={() => {\n                        console.log(\"QQQQ Clicked ID\");\n                    }}\n                />\n            </styled.NewNotificationContainer>\n        );\n    };\n\n    /**\n     * This handles clearing of either the task q or notifications\n     */\n    const handleClear = () => {\n        if (toggle === 'taskQueue') {\n            onDeleteTaskQueueAll()\n        } else if (toggle === 'notifications'){\n            console.log('Clearing Notifications')\n        }\n    }\n\n    return (\n        <>\n            {showRightMenu && (\n\n                <styled.NotificationsContainer\n                    windowHeight={size.height + \"px\"}\n                    overlaping = {overlapStatus}\n                >\n\n                    {/* Commented out for the time being. As of Aug 31 2020 notifications have not been impleneted */}\n                    {/* <styled.ToggleContainer>\n                        <styled.ToggleButton selected={toggle} type={'notifications'} onClick={() => setToggle('notifications')} style={{ borderTopLeftRadius: '0.25rem', borderBottomLeftRadius: '0.25rem' }}>Notifications</styled.ToggleButton>\n                        <styled.ToggleButton selected={toggle} type={'taskQueue'} onClick={() => setToggle('taskQueue')} style={{ borderTopRightRadius: '0.25rem', borderBottomRightRadius: '0.25rem' }}>Task Queue</styled.ToggleButton>\n                    </styled.ToggleContainer> */}\n\n                    <styled.Title>Task Queue</styled.Title>\n\n                    <styled.ClearText\n                        onClick={() => {\n                            handleClear();\n                        }}\n                    >\n                        Clear All\n                    </styled.ClearText>\n                    {toggle === 'notifications' &&\n                        <Notifications />\n                    }\n\n                    {toggle === 'taskQueue' &&\n                        <TaskQueue />\n                    }\n                </styled.NotificationsContainer>\n            )}\n\n            {newNotification && handleNewNotification()}\n        </>\n    );\n};\n\nexport default RightMenu;\n","import styled from 'styled-components';\n\nimport { globStyle } from '../../global_style';\nimport { hexToRGBA, LightenDarkenColor, RGB_Linear_Shade } from '../../methods/utils/color_utils';\n\nexport const StatusHeader = styled.div`\n    position: fixed;\n    width: 100%;\n    height: 4rem;\n\n    display: flex;\n    flex-direction: row;\n    pointer-events: none;\n\n    z-index: 2;\n`\n\nexport const LeftContentContainer = styled.div`\n    flex-grow: 1;\n    z-index: 2;\n    margin-left: 4.5rem;\n    pointer-events: auto;\n\n    display: flex;\n\n`\n\nexport const RightContentContainer = styled.div`\n    flex-grow: 1;\n    z-index: 2;\n    pointer-events: auto;\n\n    display: flex;\n    align-items: right;\n    justify-content: flex-end;\n\n`\n\n\n// logo\n// ************************************\n// ************************************\nexport const Logo = styled.div`\n    display: flex;\n    align-items: center;\n    margin-left: ${props => props.windowWidth > props.widthBreakPoint ? '1rem' : '.4rem'};\n`;\n\nexport const LogoIcon = styled.i`\n    font-size: 2.5rem;\n    margin-top: -.5rem;\n    margin-right: .1rem;\n    color: ${props => props.theme.fg.secondary};\n`\n\nexport const LogoSubtitle = styled.h2`\n    color: ${props => props.theme.bg.senary};\n    font-family: 'Montserrat';\n    font-size: ${props => props.theme.fontSize.sz4};\n    font-weight: 600;\n    margin: 0;\n    margin-bottom: -2rem;\n    padding: 0;\n`;\n\n\n// ************************************\n// ************************************\n\n// play button\n// ************************************\n// ************************************\nexport const PlayButton = styled.button`\n    //color:  ${props => props.play ? props.theme.good : props.theme.bad};\n    background: transparent;\n    // border: 0.2rem solid ${props => props.play ? props.theme.good : props.theme.bad};\n    border: none;\n    border-radius: 0.3rem;\n    height: 4rem;\n    padding: .25rem;\n    outline: none !important;\n    outlineOffset: none !important;\n    &:hover {\n        color: ${props => props.play ? RGB_Linear_Shade(.3, props.theme.good) : RGB_Linear_Shade(.3, props.theme.bad)};\n        border-color: ${props => props.play ? RGB_Linear_Shade(.3, props.theme.good) : RGB_Linear_Shade(.3, props.theme.bad)};\n    }\n\n    margin-right: 1.5rem;\n    margin-left: 0;\n\n    @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n        margin-right: 1rem;\n    }\n\n\n`;\n\nexport const PlayButtonIcon = styled.i`\n  color:  ${props => props.play ? props.theme.good : props.theme.bad};\n  font-size: 2rem;\n  // outline: 'none !important',\n  // outlineOffset: 'none !important',\n  line-height: 1.7rem;\n  text-align: center;\n  &:hover {\n    color: ${props => props.play ? RGB_Linear_Shade(.3, props.theme.good) : RGB_Linear_Shade(.3, props.theme.bad)};\n  }\n`;\n\n// ************************************\n// ************************************\n\n// Notifications\n// ************************************\n// ************************************\n\nexport const NotificationIcon = styled.i`\n    font-size: 2.2rem;\n    /* font-size: ${props => props.theme.fontSize.sz3}; */\n    color: ${props => props.theme.fg.primary};\n    margin-left: .2rem;\n    margin-right: .2rem;\n    margin-bottom: 0.4rem;\n`\n\nexport const RightMenuContainer = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    width: 3.6rem;\n    height: 3.2rem;\n    margin-top: 0.4rem;\n\n    border-radius: .5rem;\n    // border: .2em solid;\n    // border-color: ${props => props.theme.fg.primary};\n\n\n    &:hover {\n        cursor: pointer;\n    }\n\n\n    ${props => props.checked && `\n        box-shadow: inset 2px 2px 4px 0px rgba(0, 0, 0, 0.25), inset -2px -2px 3px 0px rgba(255, 255, 255, 0.6);\n        background: rgba(0,0,0,0.01);\n    `}\n\n    margin-left: 0;\n    margin-right: 2rem;\n\n    @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n        margin-right: 1rem;\n    }\n\n`\n\nexport const NotificationText = styled.p`\n    height: 1.4rem;\n    width: 1.4rem;\n    user-select: none;\n\n    position: absolute;\n    transform: translate(0.9rem, 0.6rem);\n\n    background-color: ${props => props.theme.bg.septenary};\n    border: 0.1rem solid ${props => props.theme.fg.primary};\n    border-radius: 0.7rem;\n\n    font-size: 1rem;\n    font-weight: 600;\n    color: ${props => props.theme.fg.primary};\n    margin: 0;\n    padding: 0;\n\n    line-height: 1.4rem;\n    text-align: center\n`\n","// import external dependencies\nimport React, { useState, useMemo, useRef, useEffect, useContext } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams, useHistory } from 'react-router-dom'\n\n// import methods\nimport { getBatteryClassName } from '../../methods/utils/class_name_utils';\nimport { uuidv4, deepCopy } from '../../methods/utils/utils';\nimport { parseCondition } from '../../methods/utils/skills_utils.js'\nimport { hexToRGBA, LightenDarkenColor, RGB_Linear_Shade } from '../../methods/utils/color_utils';\n\n// import actions\nimport { postStatus } from '../../redux/actions/status_actions'\nimport * as taskQueueActions from '../../redux/actions/task_queue_actions'\nimport { setWidth, setOpen} from \"../../redux/actions/sidebar_actions\";\n\n// import components\nimport RightMenu from '../right_menu/right_menu'\n\n// import hooks\nimport useWindowSize from '../../hooks/useWindowSize'\n\n// import logger\nimport log, { disableAll } from '../../logger.js';\n\n// import styles\nimport * as styled from './status_header.style'\nimport { render } from '@testing-library/react';\nimport { ThemeContext } from 'styled-components'\n\n\nconst StatusHeader = (props) => {\n\n    // this.logger = log.getLogger(this.constructor.name);\n\n    //const [showRightMenu, setShowRightMenu] = useState(false)\n    const [newNotification, setNewNotification] = useState(false)\n\n    const status = useSelector(state => state.statusReducer.status)\n    const displayType = useSelector(state => state.notificationsReducer.hiddenNotifications)\n    const notifications = useSelector(state => state.notificationsReducer.notifications)\n\n    const sideBarWidth = useSelector(state => state.sidebarReducer.width)\n    const toggle = useSelector(state => state.notificationsReducer.toggleNotificationTaskQueue)\n    const isSideBarOpen = useSelector(state => state.sidebarReducer.open)\n    const taskQueueOpen = useSelector(state => state.taskQueueReducer.taskQueueOpen)\n\n    const MiRMapEnabled = useSelector(state => state.localReducer.localSettings.MiRMapEnabled)\n    const serverSettings = useSelector(state => state.settingsReducer.settings)\n    const deviceEnabled = serverSettings.deviceEnabled\n    const [initialRender, setInitialRender] = useState (null)\n    const [statusBarPath, setStatusBarPath] = useState(``)\n    const [rightCurvePoint, setRightCurvePoint] = useState(``)\n    const [overlapStatus, setOverlapStatus] = useState('')\n\n    const prevNotificationRef = useRef()\n\n\n    let params = useParams()\n    const widgetPage = params.widgetPage\n\n\n    const theme = useContext(ThemeContext)\n    const widthBreakPoint = 1025\n\n    const dispatch = useDispatch()\n    const onHideNotifications = (displayType) => dispatch({ type: 'HIDDEN_NOTIFICATIONS', payload: displayType })\n    const onTaskQueueOpen = (props) => dispatch(taskQueueActions.taskQueueOpen(props))\n    const onSetWidth = (props) => dispatch (setWidth(props))\n    const onSetOpen = (props) => dispatch (setOpen(props))\n\n\n\n\n    // Used for determining break point of header\n    const size = useWindowSize()\n    const windowWidth = size.width\n\n\n    const generatePath = () => {\n\n        const pageWidth = window.innerWidth\n        const windowWidth = size.width\n\n        if (windowWidth < 800 && isSideBarOpen && taskQueueOpen) {\n            setRightCurvePoint(220)\n            setOverlapStatus(true)\n        }\n        else {\n            setRightCurvePoint(320)\n            setOverlapStatus(false)\n        }\n\n\n        let x, mergeHeight\n        let leftMargin = 200\n\n        let rightMargin = 200\n        if (window.innerWidth < widthBreakPoint) {\n            x = 60\n            mergeHeight = 2\n            leftMargin = 80\n            rightMargin = !!params.widgetPage ? 80 : 160\n        } else if (!taskQueueOpen && sideBarWidth + 120 > pageWidth - 320) { // No notifications, overlaping containers\n            x = (pageWidth - sideBarWidth - 200) / 2\n            mergeHeight = 5 + (sideBarWidth - pageWidth + 440) * 35 / 120\n        } else if (taskQueueOpen && sideBarWidth + 120 > pageWidth - 440) { // W/ notifications, overlapping containers\n            x = (pageWidth - sideBarWidth - 320) / 2\n            mergeHeight = 5 + (sideBarWidth - pageWidth + 560) * 35 / 220\n        } else {\n            x = 120\n            mergeHeight = 5\n        }\n\n        const path = `\n                M0,0\n                L0,40\n                L${isSideBarOpen && !widgetPage ? sideBarWidth : leftMargin},40\n                C${isSideBarOpen && !widgetPage ? sideBarWidth + x / 2 : leftMargin + x / 2},40 ${isSideBarOpen && !widgetPage ? sideBarWidth + x / 2 : leftMargin + x / 2},${mergeHeight} ${isSideBarOpen && !widgetPage ? sideBarWidth + x : leftMargin + x},${mergeHeight}\n                L${pageWidth - (taskQueueOpen ? rightCurvePoint : rightMargin) - x},${mergeHeight}\n                C${pageWidth - (taskQueueOpen ? rightCurvePoint : rightMargin) - x / 2},${mergeHeight} ${taskQueueOpen ? `${pageWidth - rightCurvePoint},${mergeHeight}` : `${pageWidth - rightMargin - x / 2},40`} ${pageWidth - (taskQueueOpen ? rightCurvePoint : rightMargin)},40\n                L${pageWidth},40\n                L${pageWidth},0\n                Z\n            `\n\n\n        setStatusBarPath(path)\n\n    }\n\n    /**\n     * This handles new notifications\n     * Sets the prev notification state to prevNotificationRef which is used to see if there's any new notifications\n     */\n\n    useEffect(() => {\n        prevNotificationRef.current = notifications\n        handleNotifications()\n    })\n\n\n    // useeffect is used like componentdidmount\n    useEffect(() => {\n        /**\n         * This maps through all the notifications and groups them into types.\n         * Grouping into types allows the ability to give notification type titles and be\n         * able to sort notifications by their types\n         *\n         * Also use displayType to minimize those type groups\n         */\n\n        let types = {}\n        notifications.map((notification) => {\n            // If notification types does not include the specific notification type than add it to types\n            if (types[notification.type] === undefined) {\n                const type = notification.type;\n\n                displayType[type] = true;\n\n                onHideNotifications(displayType)\n\n                types[notification.type] = [notification];\n\n            }\n        });\n        window.addEventListener('resize', generatePath)\n\n        return () => {\n            window.removeEventListener('resize', generatePath)\n        }\n    }, []);\n\n    useEffect(() => {\n        generatePath()\n    })\n    //This should work but the header path isn't updating on windowResize with these conditions...\n    // [sideBarWidth, isSideBarOpen, taskQueueOpen, window.onresize, window.innerWidth, params.widgetPage, windowWidth, sidebarOpenPath]\n\n    // Handles the play pause button\n    const handleTogglePlayPause = async () => {\n\n        //Flip the status to the opposite of the current value when the button is pressed\n        var status_clone = deepCopy(status);\n        const pause_status = !status_clone.pause_status;\n\n        //Post the status to the API\n        await dispatch(postStatus({ pause_status: pause_status }));\n    }\n\n\n    // Renders the left side of the header\n    const renderLeftHeader = useMemo(() => {\n\n        return (\n            <styled.LeftContentContainer\n                windowWidth={windowWidth}\n                widthBreakPoint={widthBreakPoint}\n            >\n                {/* <Link to='/Dashboards' style={{textDecoration:'none'}}> */}\n\n                {/* Hides the logo on mobile mode */}\n\n\n\n            </styled.LeftContentContainer>\n        )\n\n    }, [windowWidth])\n\n    /**\n     * Renders the right side of the header which contains:\n     *\n     * Play Pause Button: Used to start or stop the task queue\n     * Notifications: Used for to display notifications such as device issues, HILs, etc...\n     *\n     */\n    const renderRightContent = () => {\n        let pause_status = ''\n\n        // If there's no status available then set to blank object.\n        try {\n            pause_status = status.pause_status;\n        } catch (e) {\n            pause_status = false;\n        }\n\n        // Handles the icon type being displayed based on the pause_status in status\n        var playButtonClassName = \"fas fa-\";\n        pause_status ? playButtonClassName += 'play' : playButtonClassName += 'pause';\n\n        return (\n            <styled.RightContentContainer>\n\n                {/* Hide play pause button if it's not MirMapEnabled */}\n                {deviceEnabled &&\n                    <styled.PlayButton\n                        play={pause_status}\n                        windowWidth={windowWidth}\n                        widthBreakPoint={widthBreakPoint}\n                    >\n                        <styled.PlayButtonIcon play={pause_status} className={playButtonClassName} onClick={handleTogglePlayPause}></styled.PlayButtonIcon>\n                    </styled.PlayButton>\n                }\n\n                {/* This hides the right menu container if the screen size is below a set point and widgets are open (params.widgetPage) */}\n                {(windowWidth < widthBreakPoint && !params.widgetPage) &&\n                    <>\n                        <styled.RightMenuContainer checked={taskQueueOpen} onClick={() => {\n                            onTaskQueueOpen(!taskQueueOpen)\n                        }}>\n\n                            {toggle === 'notifications' ?\n                                <>\n                                    <styled.NotificationText>2</styled.NotificationText>\n                                    <styled.NotificationIcon className='far fa-bell' />\n                                </>\n                                :\n                                <styled.NotificationIcon className='fa fa-tasks' style={{ marginBottom: '0rem' }} />\n\n                            }\n\n\n                        </styled.RightMenuContainer>\n\n                        {(taskQueueOpen || newNotification) &&\n                            <>\n                                <RightMenu showRightMenu={taskQueueOpen} newNotification={newNotification} overlapStatus={overlapStatus} />\n                            </>\n                        }\n                    </>\n\n                }\n\n                {/* Always renders if page is greater then break point */}\n                {windowWidth > widthBreakPoint &&\n                    <>\n                        <styled.RightMenuContainer checked={taskQueueOpen} onClick={() =>\n                            onTaskQueueOpen(!taskQueueOpen)\n                        }>\n\n                            {toggle === 'notifications' ?\n                                <>\n                                    <styled.NotificationText>2</styled.NotificationText>\n                                    <styled.NotificationIcon className='far fa-bell' />\n                                </>\n                                :\n                                <styled.NotificationIcon className='fa fa-tasks' style={{ marginBottom: '0rem' }} />\n\n                            }\n\n                        </styled.RightMenuContainer>\n\n                        {(taskQueueOpen || newNotification) &&\n                            <>\n                                <RightMenu showRightMenu={taskQueueOpen} newNotification={newNotification} />\n                            </>\n                        }\n                    </>\n                }\n\n            </styled.RightContentContainer>\n        )\n    }\n\n    /**\n     * Handles New Notifications as well as hidding new notifications pop up when the notification panel is open\n     */\n    const handleNotifications = () => {\n\n        const prevNotifications = prevNotificationRef.current\n\n        // If prev state of notifications doesnt match the current state of notifications then a new notification must have been added\n        if (prevNotifications != notifications) {\n\n            setNewNotification(true)\n\n            setTimeout(() => {\n                setNewNotification(false)\n            }, 3000);\n\n        }\n        // If newNotification is true and showRightMenu is clicked, hide the new notifcation pop up\n        else if (taskQueueOpen && newNotification) {\n            setNewNotification(false)\n        }\n    }\n\n    return (\n\n        <styled.StatusHeader>\n            <div\n                style={{\n                    position: 'absolute',\n                    left: '0',\n                    top: '0',\n                    right: '0',\n                    height: '4rem',\n                    zIndex: '1',\n                }}>\n                <svg\n                    fill={hexToRGBA(theme.bg.septenary, 0.97)}\n                    viewBox={`0 0 ${window.innerWidth} 40`}\n                    width='100%' height='100%' preserveAspectRatio=\"none\"\n                >\n                    <path style={{ backdropFilter: 'blur(3px)' }} d={statusBarPath} />\n                </svg>\n\n            </div>\n\n            <styled.LeftContentContainer>\n                {windowWidth > widthBreakPoint &&\n                    <styled.Logo\n                        windowWidth={windowWidth}\n                        widthBreakPoint={widthBreakPoint}\n                    >\n                        <styled.LogoIcon className='icon-rmLogo' />\n                        <styled.LogoSubtitle> Studio</styled.LogoSubtitle>\n                    </styled.Logo>\n                }\n            </styled.LeftContentContainer>\n\n            {renderRightContent()}\n        </styled.StatusHeader>\n\n\n    );\n}\n\nexport default StatusHeader;\n","/*\nREAD-ME\n\nDO ALL CONTROLLING OF LOG LEVELS IN THIS CONTAINER, NEVER ANYWHERE ELSE\n\nInstructions of creating a new logger:\n=====================================\n\n1. import logger from src/logger.js'\n\n2. create a new logger\n    this.logger = logger.getLogger(~ENTER LOGGER NAME HERE~)\n\n3. use logger\n    this.logger.info('Here is a message', hereIsAVariable);\n\n*/\n\n// import external dependencies\nimport React, {Component} from 'react';\nimport { connect } from 'react-redux';\n\n// import actions\nimport { getLoggers, postLoggers } from '../../redux/actions/local_actions';\n\n// import methods\nimport { deepCopy, arraysEqual } from '../../methods/utils/utils'\n\n// import logger\nimport log from '../../logger.js';\n\nclass LoggerContainer extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n          //loggers: log.getLoggers(),\n          disableAll: false,\n          enableAll: false,\n        }\n\n        this.logger = log.getLogger(this.constructor.name);\n\n    }\n\n    componentDidMount() {\n        // initial call to check for loggers\n        this.checkForLoggers();\n\n        // check for new loggers on interval\n        // doesn't appear to be necessary at the moment\n        // this.checkLoggersInterval = setInterval(() => this.checkForLoggers(), 10000);\n\n    }\n\n    componentWillUnmount() {\n        // clearInterval(this.checkLoggersInterval);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        // const currentReduxLoggers = this.props.loggers;\n        // const prevReduxLoggers = prevProps.loggers;\n\n        const currentReduxLoggerNames = Object.keys(this.props.loggers);\n        const prevReduxLoggerNames = Object.keys(prevProps.loggers);\n\n        const loggersChanged = !arraysEqual(currentReduxLoggerNames, prevReduxLoggerNames);\n\n        if(loggersChanged) {\n            // this.checkForLoggers();\n        }\n\n\n\n    }\n\n\n    /*\n        This function disables all loggers\n    */\n    disableAll = () => {\n      this.logger.trace('disableAll called')\n      //Object.values(log.getLoggers()).forEach((logger, index) => {\n      //  logger.setLevel(5);\n      //})\n\n      Object.values(this.props.loggers).forEach((redux_logger, index) => {\n\n          let logger = log.getLogger(redux_logger.name);\n          logger.setLevel(5);\n\n      })\n\n      log.disableAll();\n      this.setState({disableAll: true, enableAll: false});\n    }\n\n    /*\n        This function enables all loggers\n    */\n    enableAll = () => {\n      //Object.values(log.getLoggers()).forEach((logger, index) => {\n      //  logger.setLevel(0);\n      //})\n\n      Object.values(this.props.loggers).forEach((redux_logger, index) => {\n          let logger = log.getLogger(redux_logger.name);\n          logger.setLevel(0);\n      })\n      log.enableAll();\n      this.setState({enableAll: true, disableAll: false});\n    }\n\n\n\n    /*\n        This function updates the actual logger settings to match the config in redux\n    */\n    updateLoggers = () => {\n\n        const existingLoggerNames = Object.values(log.getLoggers()).map((logger, index) => logger.name);\n\n        //If disableAll all is true\n        if(this.props.disableAll && !this.state.disableAll){\n          this.disableAll();\n        }\n\n        if(!this.props.disableAll && this.state.disableAll){\n          this.setState({disableAll: false});\n        }\n\n        //If mute all is false\n        if(this.props.enableAll && !this.state.enableAll){\n          this.enableAll();\n        }\n\n        if(!this.props.enableAll && this.state.enableAll){\n          this.setState({enableAll: false});\n        }\n\n        // only perform the logger updates if neither disableAll nor enableAll are true\n        if(!this.props.disableAll && !this.props.enableAll) {\n\n          // for each logger in redux:\n          //    get the actual logger\n          //    set the level to match the redux config\n          Object.values(this.props.loggers).forEach((redux_logger, index) => {\n\n            if(existingLoggerNames.includes(redux_logger.name)) {\n                let logger = log.getLogger(redux_logger.name);\n\n                let level = redux_logger.level;\n                let enabled = redux_logger.enabled;\n\n                // if logger isn't enabled and isn't already set to silent,\n                // set it to silent\n                if(!enabled && (logger.getLevel() !== 5)) {\n                  logger.setLevel(5);\n                }\n\n                // if the logger is enabled, and the actual level doesn't\n                // match the level config in redux, update it\n                if(enabled && (logger.getLevel() !== level)) {\n                  logger.setLevel(level);\n                }\n            }\n\n          });\n        }\n\n    }\n\n\n\n\n    /*\n        This function checks if any loggers exist that do not exist in the redux store\n        If a logger is found that isn't in the store, it will add a new logger object to the store\n    */\n    checkForLoggers = async () => {\n        // true if the redux store has read the logger config\n        // false otherwise\n        const { loaded } = this.props;\n\n        // only perform the check if the saved settings have been loaded\n        if(true) {\n\n          // get all loggers\n          const loggers = Object.values(log.getLoggers());\n          const loggerNames = loggers.map((logger) => logger.name);\n\n          // get name of loggers in redux\n          const reduxLoggerNames = Object.values(this.props.loggers).map((logger, index) => {\n            return logger.name;\n          });\n\n          // for each logger\n          //    check if the redux store contains a logger with the same name\n          //    if a logger isn't found, create a new one\n          let newLoggers = [];\n          loggers.forEach( async (logger, index) => {\n\n              let name = logger.name;\n              let level = logger.getLevel();\n\n              // if level is equal to 5 (silent), enabled is false, and true otherwise\n              let enabled = level === 5 ? false : true;\n\n              if(!reduxLoggerNames.includes(name)) {\n\n                  let newLogger = {\n                    name,\n                    level,\n                    enabled\n                  };\n\n                  this.logger.info('Adding new logger', newLogger)\n\n                  newLoggers.push(newLogger);\n              }\n          });\n\n          await this.addLoggers(newLoggers);\n\n\n          // this block will remove loggers from redux that don't actually exist\n          // this will be necessary for loggers that have been deleted from code\n          // but still have local saved settings\n\n          /*\n          let removeLoggers = [];\n          // delete\n          reduxLoggerNames.forEach( (reduxLoggerName, index) => {\n              if(!loggerNames.includes(reduxLoggerName)) {\n                this.logger.info(\"Adding logger to list to be removed\", reduxLoggerName);\n                removeLoggers.push(reduxLoggerName);\n              }\n          });\n\n          this.logger.info('About to remove loggers', removeLoggers)\n          if(removeLoggers.length > 0) {\n              //  await this.removeLogger(removeLoggers);\n\n          }\n          */\n\n\n        }\n    }\n\n    /*\n        This function adds a new logger to the redux store\n    */\n    addLoggers = async (newLoggers) => {\n        const { loggers, enableAll, disableAll, loaded } = this.props;\n\n        // copy loggers (don't directly modify state)\n        let loggersCopy = deepCopy(loggers);\n\n        newLoggers.forEach((newLogger, index) => {\n            // add newLogger to loggers copy\n            loggersCopy[newLogger.name] = newLogger;\n        })\n\n\n        // create logger config\n        var loggerConfig = {};\n        loggerConfig['loggers'] = loggersCopy;\n        loggerConfig['enableAll'] = enableAll;\n        loggerConfig['disableAll'] = disableAll;\n\n        await this.props.postLoggers(loggerConfig, loaded);\n    }\n\n    /*\n        This function removes logger from the redux store\n    */\n    removeLogger = async (loggerNames) => {\n        const { loggers, enableAll, disableAll } = this.props;\n\n        this.logger.debug(\"removeLogger: loggerNames\", loggerNames);\n        this.logger.debug(\"removeLogger: loggers\", loggers)\n\n        // copy loggers (don't directly modify state)\n        let loggersCopy = deepCopy(loggers);\n\n        loggerNames.forEach((name, index) => {\n          // delete logger\n          delete loggersCopy[name];\n        })\n\n\n        this.logger.debug(\"removeLogger: loggersCopy after removal\", loggersCopy)\n\n        // create logger config\n        var loggerConfig = {};\n        loggerConfig['loggers'] = loggersCopy;\n        loggerConfig['enableAll'] = enableAll;\n        loggerConfig['disableAll'] = disableAll;\n\n        await this.props.postLoggers(loggerConfig);\n    }\n\n    /*\n    printLoggers = () => {\n      let loggers = Object.values(log.getLoggers());\n      console.log('printLoggers')\n\n      loggers.forEach((logger, index) => {\n\n        console.log(logger.name)\n        console.log(logger.getLevel())\n        console.log(logger)\n      })\n\n\n    }\n    */\n\n    /*\n    printReduxLoggers = () => {\n      let loggers = Object.values(this.props.loggers);\n      console.log('printReduxLoggers')\n\n      loggers.forEach((logger, index) => {\n\n        console.log(logger.name)\n        console.log(logger.level)\n        console.log(logger.enabled)\n      })\n\n\n    }\n    */\n\n    render(){\n\n      this.updateLoggers();\n\n      //this.printLoggers()\n      //this.printReduxLoggers()\n\n\n      return(\n        <>\n        </>\n      );\n    }\n}\n\nconst mapStateToProps = function(state) {\n  return {\n    loggers: state.localReducer.loggers,\n    enableAll: state.localReducer.enableAll,\n    disableAll: state.localReducer.disableAll,\n    loaded: state.localReducer.loaded,\n  };\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    postLoggers: (loggerConfig) => dispatch(postLoggers(loggerConfig))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoggerContainer);\n","import styled from 'styled-components'\n\nexport const MapContainer = styled.div`\n    height: 100%;\n    width: 100%;\n    flex: 1;\n    background: ${props => props.theme.bg.secondary};\n    user-select: none;\n\n    cursor: move; /* fallback if grab cursor is unsupported */\n    cursor: grab;\n    cursor: -moz-grab;\n    cursor: -webkit-grab;\n\n    &:active {\n        cursor: grabbing;\n        cursor: -moz-grabbing;\n        cursor: -webkit-grabbing;\n    }\n\n    background-size: cover;\n    overflow: visible;\n`\n\nexport const MapGroup = styled.g`\n`\n\nexport const MapImage = styled.img`\n    height: 100%;\n    width: auto;\n\n    // ${props => props.tall && `\n    //     height: auto;\n    //     width: 100%;\n    // `}\n    \n`","import React, { useState, useEffect, useRef } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\n// Import Actions\nimport { setTaskAttributes } from '../../../redux/actions/tasks_actions'\nimport {getLoadPositionId, getUnloadPositionId} from \"../../../methods/utils/route_utils\";\n\nexport default function TaskPaths(props) {\n\n    const {\n        route,\n    } = props\n\n    const selectedTaskReducer = useSelector(state => state.tasksReducer.selectedTask)\n    const positions = useSelector(state => state.positionsReducer.positions)\n    const stations = useSelector(state => state.stationsReducer.stations)\n    const dispatch = useDispatch()\n\n    let selectedTask = null\n\n    // This sets the selected task to either whats in the reducer or whats being passed in through props\n    // It would be using props because this task path is part of a process\n    if (!!route) {\n        selectedTask = route\n    } else {\n        selectedTask = selectedTaskReducer\n    }\n\n\n    const stateRef = useRef()\n    stateRef.current = selectedTask\n\n    const loadPositionId = getLoadPositionId(selectedTask)\n    const unloadPositionId = getUnloadPositionId(selectedTask)\n\n    const [mousePos] = useState({ x: 0, y: 0 })\n\n    const [x1, setX1] = useState(0)\n    const [y1, setY1] = useState(0)\n    const [x2, setX2] = useState(0)\n    const [y2, setY2] = useState(0)\n\n    // To be able to remove the event listener, we need to reference the same function.\n    // Therefore we save the function in the state\n    const [lockToMouse] = useState(() => e => {\n        setX2(e.clientX)\n        setY2(e.clientY)\n    })\n\n    // A callback that will set the load position to null when you press escape\n    const [exitTaskPath] = useState(() => e => {\n        if (e.key == 'Escape') {\n            let load = stateRef.current.load\n            load.position = null\n            load.station = null\n            dispatch(setTaskAttributes(stateRef.current._id, { load }))\n        }\n    })\n\n    // Set the start and end position if they exist\n    useEffect(() => {\n        const loadPositionId = getLoadPositionId(selectedTask)\n        const unloadPositionId = getUnloadPositionId(selectedTask)\n\n        if (selectedTask !== null) {\n            if (loadPositionId !== null) {\n                // Check to see if its a station or position\n                const startPos = !!positions[loadPositionId] ? positions[loadPositionId] : stations[loadPositionId]\n                if(startPos) {\n                    setX1(startPos.x)\n                    setY1(startPos.y)\n                }\n            }\n            if (unloadPositionId !== null) {\n                // Check to see if its a station or position\n                const endPos = !!positions[unloadPositionId] ? positions[unloadPositionId] : stations[unloadPositionId]\n                if(endPos) {\n                    setX2(endPos.x)\n                    setY2(endPos.y)\n                }\n            }\n        }\n    })\n\n    // If there is a load position but not an unload, set a listener to set the endpoint to the mouse position\n    useEffect(() => {\n        const loadPositionId = getLoadPositionId(selectedTask)\n        const unloadPositionId = getUnloadPositionId(selectedTask)\n\n        if (selectedTask !== null && loadPositionId !== null && unloadPositionId === null) {\n            setX2(x1)\n            setY2(y1)\n            window.addEventListener('mousemove', lockToMouse, false)\n            window.addEventListener('keydown', exitTaskPath)\n        } else {\n            window.removeEventListener('mousemove', lockToMouse, false)\n            window.removeEventListener('keydown', exitTaskPath)\n        }\n\n        return () => {\n            window.removeEventListener('mousemove', lockToMouse, false)\n            window.removeEventListener('keydown', exitTaskPath)\n        }\n    }, [selectedTask])\n\n    if (selectedTask !== null && loadPositionId != null) {\n        const startPos = positions[loadPositionId]\n\n        let endPos\n        if (unloadPositionId !== null) { // The task has a start AND end position\n            endPos = positions[unloadPositionId]\n        } else { // Task has a start position but no end position (instead snap to mouse position)\n            endPos = mousePos\n        }\n\n        const lineLen = Math.sqrt(Math.pow((x2 - x1), 2) + Math.pow((y2 - y1), 2))\n        const lineRot = Math.atan2((y2 - y1), (x2 - x1))\n        const arrowRot = lineRot * 180 / Math.PI\n\n        const dashes = [...Array(Math.ceil(lineLen / (10 * props.d3.scale))).keys()]\n\n        // Changes the color based on whether it's a selected task or part of a process\n        const primaryColor = !route ? 'rgba(56, 235, 135, 0.95)' : 'rgba(255, 182, 46, 0.95)'\n        const secondaryColor = !route ? 'rgba(184, 255, 215, 0.7)' : 'rgba(255, 236, 201, 0.7)'\n        const dashColor = !route ? 'rgba(56, 235, 135, 0.95)' : 'rgba(255, 182, 47, 0.95)'\n        return (\n            <>\n                <g>\n                    <defs>\n\n                        {/* a transparent glow that takes on the colour of the object it's applied to */}\n                        <filter id=\"glow\">\n                            <feGaussianBlur stdDeviation=\"1\" result=\"coloredBlur\" />\n                            <feMerge>\n                                <feMergeNode in=\"coloredBlur\" />\n                                <feMergeNode in=\"SourceGraphic\" />\n                            </feMerge>\n                        </filter>\n\n                    </defs>\n\n                    <line x1={`${x1}`} y1={`${y1}`}\n                        x2={`${x2}`} y2={`${y2}`}\n                        strokeWidth={`${props.d3.scale * 8}`} stroke={primaryColor}\n                        strokeLinecap=\"round\"\n                    />\n                    <line x1={`${x1}`} y1={`${y1}`}\n                        x2={`${x2}`} y2={`${y2}`}\n                        strokeWidth={`${props.d3.scale * 6}`} stroke={secondaryColor}\n                        strokeLinecap=\"round\"\n                    />\n\n                    {dashes.map(delta =>\n                        <g key={`arrow-${delta}`}\n                            transform={`translate(${x1 + delta * props.d3.scale * 10 * Math.cos(lineRot)} ${y1 + delta * props.d3.scale * 10 * Math.sin(lineRot)})`}>\n                            <g viewBox=\"-50 -50 50 50\" transform={`rotate(${arrowRot}) scale(${0.05 * props.d3.scale})`}>\n                                <polygon points=\"-40,-50 -40,50 40,0\" fill={dashColor} />\n                            </g>\n                        </g>\n                    )}\n                </g>\n            </>\n        )\n    }\n\n    return (null)\n}\n","import React, { useState, useEffect, useRef } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport TaskPaths from '../task_paths/task_paths'\nimport {isObject} from \"../../../methods/utils/object_utils\";\n\nconst ProcessPaths = (props) => {\n    const {\n        d3\n    } = props\n\n    const selectedProcess = useSelector(state => state.processesReducer.selectedProcess)\n    const tasks = useSelector(state => state.tasksReducer.tasks)\n\n    // Maps through all the associated routes with the process and displays them\n    const handleTaskPaths = () => {\n        // return Object.keys(selectedProcess.routes).map((station, ind) => {\n        return selectedProcess.routes.map((route, ind) => {\n            if( isObject(route) ) {\n                return (\n                    <TaskPaths d3={d3} route={route} key={route._id} />\n                )\n            }\n            else {\n                return (\n                    <TaskPaths d3={d3} route={tasks[route]} key={route} />\n                )\n            }\n        })\n\n        // })\n    }\n\n    return (\n        <>\n            {handleTaskPaths()}\n        </>\n    )\n\n}\n\nexport default ProcessPaths","import React from 'react'\n\nimport { DeviceTypes } from '../../../../constants/device_constants'\n\nconst MiR100 = (props) => {\n\n    const {\n        device,\n        d3\n    } = props\n\n    const shouldGlow = false\n\n\n    let type = 'cart'\n\n    if (device['shelf_attached'] > 0) {\n        type = 'shelf'\n    }\n\n    let color = DeviceTypes[type].primaryColor\n\n    if (device.state_text === 'EmergencyStop') {\n        color = 'red'\n    }\n\n\n\n    return (\n        <g\n            style={{ fill: color, stroke: color, strokeWidth: '0', opacity: '0.8' }}\n            transform={`translate(${device.position.x},${device.position.y}) rotate(${360 - device.position.orientation - 90}) scale(${d3.scale / d3.imgResolution},${-d3.scale / d3.imgResolution})`}\n        >\n\n            <svg x=\"-10\" y=\"-10\" width=\"20\" height=\"20\" viewBox=\"0 0 400 400\">\n\n                {DeviceTypes[type].svgPath}\n\n            </svg>\n\n\n        </g>\n    )\n\n}\n\nexport default MiR100","import styled from 'styled-components'\n\n\nexport const MenuContainer = styled.div`\n    position: absolute;\n    width: 12rem;\n    height: auto;\n    z-index: 10000;\n\n    background: white;\n\n    box-shadow: 0 0.1rem 0.2rem 0rem #303030;\n    border-radius: 1rem;\n\n    backdrop-filter: blur(10px);\n    background-color: rgba(255, 255, 255, 0.6);\n    padding: .1rem 0rem;\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    overflow: hidden;\n`\n\nexport const MenuButton = styled.button`\n    border: none;\n    text-align: center;\n    width: 100%;\n    height: 2rem;\n    outline:none;\n\n    margin: .1rem;\n\n    background-color: transparent;\n\n    &:hover{\n        background-color: ${props => props.theme.bg.septenary};\n    }\n\n    &:focus{\n        outline: 0 !important\n    }\n\n    &:active{\n        box-shadow: none;\n    }\n`;","import React, { useState, useEffect } from 'react'\nimport { useHistory, useLocation } from 'react-router-dom'\n\n\nimport { useSelector, useDispatch } from 'react-redux'\n\n// Import actions\nimport { addStation, setSelectedStation, setEditingStation } from '../../../redux/actions/stations_actions'\nimport { addPosition, setSelectedPosition, setEditingPosition } from '../../../redux/actions/positions_actions'\nimport { setOpen } from \"../../../redux/actions/sidebar_actions\"\n\n\n\n// Import utils\nimport { convertD3ToReal } from '../../../methods/utils/map_utils'\nimport { deepCopy } from '../../../methods/utils/utils'\n\n// Import Constants\nimport { PositionTypes } from '../../../constants/position_constants'\n\n// import styling\nimport * as styled from './right_click_menu.style'\n\nimport uuid from 'uuid'\n\n/**\n * This is the menu that opens on right click\n * It does some funky things that will be explained here\n *\n * Send cart to location\n * Makes a temp position with a schema of 'temporary_position'\n * That schema is used in locations, widgets, map view and positions to tell if its a right click menu\n * If it is a right click menu position then the widgets should always be displayed for send or cancel, and not disappear on mouse leave. (see map_view and widgets)\n *\n * The widget buttons have custom actions, and those actions can be found inside of widget_button is widgets\n * @param {*} props\n */\nconst RightClickMenu = (props) => {\n\n    const {\n        coords,\n        buttonClicked,\n        d3,\n    } = props\n\n    const dispatch = useDispatch()\n\n    const dispatchAddPositions = (position) => dispatch(addPosition(position))\n    const dispatchSetSelectedPosition = (position) => dispatch(setSelectedPosition(position))\n    const dispatchEditingPosition = (bool) => dispatch(setEditingPosition(bool))\n\n    const dispatchAddStation = (station) => dispatch(addStation(station))\n    const dispatchSetSelectedStation = (station) => dispatch(setSelectedStation(station))\n    const dispatchEditingStation = (bool) => dispatch(setEditingStation(bool))\n\n    const dispatchShowSideBar = (bool) => dispatch(setOpen(bool))\n\n    const currentMap = useSelector(state => state.mapReducer.currentMap)\n    const showSideBar = useSelector(state => state.sidebarReducer.open)\n    const MiRMapEnabled = useSelector(state => state.localReducer.localSettings.MiRMapEnabled)\n    const selectedStation = useSelector(state => state.stationsReducer.selectedStation)\n    const history = useHistory()\n\n\n    const disbaleStation = !!selectedStation ? true : false\n\n    const onSendCartToPosition = async () => {\n        const pos = convertD3ToReal([coords.x, coords.y], d3)\n\n        const tempSelectedPosition = {\n            name: '',\n            schema: 'temporary_position',\n            type: 'cart_position',\n            map_id: currentMap._id,\n            pos_x: pos[0],\n            pos_y: pos[1],\n            rotation: 0,\n            x: coords.x,\n            y: coords.y,\n            _id: uuid.v4()\n        }\n\n        await Object.assign(tempSelectedPosition, { ...PositionTypes['temporary_cart_position'].attributes, temp: true })\n        await dispatchAddPositions(tempSelectedPosition)\n        await dispatchSetSelectedPosition(tempSelectedPosition)\n\n        buttonClicked()\n    }\n\n    const onAddStation = async () => {\n\n        const pos = convertD3ToReal([coords.x, coords.y], d3)\n\n        const tempSelectedStation = {\n            new: true,\n            name: '',\n            schema: 'station',\n            type: 'human',\n            pos_x: pos[0],\n            pos_y: pos[1],\n            rotation: 0,\n            x: coords.x,\n            y: coords.y,\n            _id: uuid.v4(),\n            map_id: currentMap._id,\n            children: [],\n            dashboards: []\n        }\n        dispatchEditingStation(true)\n        dispatchAddStation(tempSelectedStation)\n        dispatchSetSelectedStation(tempSelectedStation)\n\n        history.push('/locations')\n\n        if (!showSideBar) {\n            const hamburger = document.querySelector('.hamburger')\n            hamburger.classList.toggle('is-active')\n        }\n        dispatchShowSideBar(true)\n\n\n        buttonClicked()\n    }\n\n    return (\n        <styled.MenuContainer style={{ top: coords.y, left: coords.x }}>\n            {MiRMapEnabled ?\n                <>\n                    <styled.MenuButton disabled={disbaleStation} onClick={() => !disbaleStation && onAddStation()}>Add Station</styled.MenuButton>\n                    <styled.MenuButton onClick={onSendCartToPosition}>Send Cart to Position</styled.MenuButton>\n                </>\n                :\n                <styled.MenuButton onClick={onAddStation}>Add Station</styled.MenuButton>\n\n            }\n\n        </styled.MenuContainer>\n    )\n}\n\nexport default RightClickMenu\n","import styled from 'styled-components'\n\n\nexport const TaskStatisticsContainer = styled.div`\n    position: absolute;\n    display: flex;\n\n    flex-direction: column;\n    align-items: center;\n\n    top: ${props => props.yPosition};\n    left: ${props => props.xPosition};\n\n    max-height: 6.5rem;\n    width: 10rem;\n    padding: .5rem;\n\n    background: red;\n    border-radius: 1rem;\n    box-shadow: 0 0.1rem 0.2rem 0rem #303030;\n    background-color: rgba(255, 255, 255, 0.9);\n\n    overflow: hidden;\n\n`\n\nexport const TaskNameText = styled.span`\n    margin-bottom: 0rem;\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz3};\n    font-weight: bold;\n\n    overflow-wrap: break-word;\n    align-items: center;\n    box-align: center;\n    width: 100%;\n    height: 100%;\n    word-break: break-word;\n\n`\n\nexport const TaskNameContainer = styled.div`\n\tflex: 1;\n\tdisplay: flex;\n\tjustify-content: first baseline;\n    flex-direction: column;\n    overflow: hidden;\n    text-overflow: ellipsis;\n\n    max-height: 4rem;\n\n\n`\n\nexport const TaskText = styled.p`\n    align-self: auto;\n    margin-left: .25rem;\n    margin-top: auto;\n    margin-bottom: auto;\n    font-family: ${props => props.theme.font.primary};\n\n`\n\nexport const TaskIcon = styled.i`\n    margin-bottom: .2rem;\n`\n\nexport const RowContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n`","import React, { useState, useEffect, useRef } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\n// Import Styles\nimport * as styled from './task_statistics.style'\nimport taskAnalysisReducer from \"../../../redux/reducers/task_analysis_reducer\";\nimport {getTasksAnalysis} from \"../../../redux/actions/task_analysis_actions\";\n\nconst TaskStatistics = (props) => {\n\n    const {\n        // selectedTask,\n        // positions,\n        d3,\n    } = props\n\n    const dispatch = useDispatch()\n    const onGetTasksAnalysis = () => dispatch(getTasksAnalysis())\n\n    const selectedTask = useSelector(state => state.tasksReducer.selectedTask)\n    const selectedProcess = useSelector(state => state.processesReducer.selectedProcess)\n    const tasks = useSelector(state => state.tasksReducer.tasks)\n    const positions = useSelector(state => state.positionsReducer.positions)\n    const tasksAnalysis = useSelector(state => state.taskAnalysisReducer.tasksAnalysis) || {}\n\n    useEffect(() => {\n        onGetTasksAnalysis()\n    }, [])\n\n    const handleSingleTask = (task) => {\n        if (task === undefined) return null\n        const selectedTaskAnalysis = tasksAnalysis[task._id]\n        if (selectedTaskAnalysis === undefined) return null\n\n        const startPos = positions[task.load.position]\n        const endPos = positions[task.unload.position]\n\n        if (task === null || positions === null || startPos === undefined || endPos === undefined) return null\n\n        // const xPosition = (startPos.x + endPos.x) / 2 + 10 * d3.scale + 'px'\n        // const yPosition = (startPos.y + endPos.y) / 2 - 30 + 'px'\n\n        // const xPosition = (startPos.x + endPos.x) / 2 + 'px'\n        // const yPosition = (startPos.y + endPos.y) / 2 - 30 + 'px'\n\n        // Some fancy calculation to find a common offset from a task path\n        // Doesnt work because it doesnt\n\n        const x1 = startPos.x\n        const y1 = startPos.y\n        const x2 = endPos.x\n        const y2 = endPos.y\n\n        const midX = (x1 + x2) / 2\n        const midY = (y1 + y2) / 2\n\n        const difY = (y2 - y1)\n\n        // const height = (25*Math.pow(difY,1/4))/Math.pow(d3.scale/5.8,1/4)\n\n        const height = () => {\n            if ((150 / difY) > 50) {\n                return 50\n            } else {\n                return 100 - 150 / difY\n            }\n        }\n\n        // const height = 100\n\n        const numerator = Math.abs(y2 - (midY))\n\n        // const denominator = Math.sqrt(Math.pow(x2 - (midX), 2) + Math.pow(y2 - (midY), 2))\n        const denominator = Math.abs(x2 - (midX))\n\n        const theta = Math.atan(numerator / denominator)\n\n        // const xPosition = (midX - height() * Math.sin(theta)) - 80 + 'px'\n        // const yPosition = (midY + height() * Math.cos(theta)) - 40 + 'px'\n\n        const xPosition = midX -80 + 'px'\n        const yPosition = midY + 'px'\n\n        return (\n            <styled.TaskStatisticsContainer xPosition={xPosition} yPosition={yPosition}>\n\n                <styled.TaskNameContainer>\n                    <styled.TaskNameText>{task.name}</styled.TaskNameText>\n                </styled.TaskNameContainer>\n\n                <styled.RowContainer style={{ justifyContent: 'space-between', width: '100%', marginTop: '.25rem' }}>\n                    <styled.RowContainer>\n                        <styled.TaskIcon className='far fa-clock' />\n                        <styled.TaskText>{`${selectedTaskAnalysis.avg_run_time}s`}</styled.TaskText>\n                    </styled.RowContainer>\n\n                    <styled.RowContainer>\n                        <styled.TaskIcon className='far fa-check-circle' />\n                        <styled.TaskText>{selectedTaskAnalysis.successes}</styled.TaskText>\n                    </styled.RowContainer>\n\n                    <styled.RowContainer>\n                        <styled.TaskIcon className='far fa-times-circle' />\n                        <styled.TaskText>{selectedTaskAnalysis.failures}</styled.TaskText>\n                    </styled.RowContainer>\n\n                </styled.RowContainer>\n            </styled.TaskStatisticsContainer>\n        )\n    }\n\n    const handleProcessTasks = () => {\n\n        if (!!selectedTask) {\n            return handleSingleTask(selectedTask)\n        }\n\n        // return Object.keys(selectedProcess.routes).map((station) => {\n        return selectedProcess.routes.map((route) => {\n            return handleSingleTask(tasks[route])\n\n        })\n        // })\n    }\n\n\n    return (\n\n        !!selectedProcess ?\n            handleProcessTasks()\n            :\n            handleSingleTask(selectedTask)\n\n\n    )\n\n}\n\nexport default TaskStatistics","import styled, { css } from 'styled-components'\n\nimport { hexToRGBA } from '../../../methods/utils/color_utils'\n\n\nexport const Container = styled.div`\n    position: absolute;\n    padding: inherit;\n    z-index: 1;\n\n    top: 5rem;\n    bottom: 1rem;\n    left: 1rem;\n    right: ${props => !!props.taskQueueOpen ? '21rem' : '1rem'};\n\n\n    display: flex;\n    /* background-color: ${props => hexToRGBA(props.theme.bg.tertiary, !!props.showWidgetPage ? 0.97 : 0)}; */\n    flex-direction: column;\n\n    /* // styles when showWidgetPage is true */;\n    visibility: ${props => !!props.showWidgetPage ? 'visible' : 'hidden'};\n\n    opacity: ${props => !!props.showWidgetPage ? '100%' : '0%'};\n    transition-delay: .2s;\n    transition-property: opacity;\n    transition-duration: .25s;\n    transition-timing-function: ease;\n\n\n    @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n        top: 5rem;\n        bottom: .5rem;\n        left: .5rem;\n        right: .5rem;\n    }\n\n`\n\nexport const WidgetPageContainer = styled.div`\n    height: 100%;\n    width: 100%;\n    z-index: 3;\n    position: relative;\n\n    border-radius: 1rem;\n    box-shadow: 0 0.2rem 0.4rem 0rem #303030;\n    // background-color: transparent;\n    background-color: ${props => props.theme.bg.primary};\n\n    overflow: hidden;\n\n    cursor: default;\n    /* transition: all 2s ease; */\n`\n\nexport const WidgetsContainer = styled.div`\n    position: relative;\n    display: flex;\n\n    margin: .5rem 0;\n\n    @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n        margin: 0;\n    }\n`\n","import styled from 'styled-components'\n\n\nexport const HeaderContainer = styled.div`\n    width: 100%;\n    display: flex;\n    justify-content: center;\n`\n\nexport const HeaderText = styled.h1`\n    display: flex;\n`\n\nexport const HeaderStation = styled.h1`\n    display: flex;\n`","import styled from \"styled-components\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport AssignmentOutlinedIcon from \"@material-ui/icons/AssignmentOutlined\";\n\nexport const Header = styled.div`\n    flex-grow: 1;\n    display: flex;\n\n    flex-direction: row;\n    // align-items: center;\n    justify-content: flex-start;\n\n    margin: 0rem 5rem 0rem 5rem;\n\n    height: 6rem;\n    max-height: 6rem;\n    min-height: 6rem;\n    line-height: 6rem;\n\n`\n\nexport const Title = styled.h2`\n    color: ${props => props.theme.bg.octonary};\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz1};\n\n    flex-grow: 1;\n\n    text-align: center;\n    line-height: 6rem;\n\n    // tablet style\n    @media only screen and (max-width: ${props => props.theme.widthBreakpoint.tablet}) {\n        font-size: ${props => props.theme.fontSize.sz2};\n    }\n    user-select: none;\n\n    pointer-events: none;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n`\n\nexport const LotsTitle = styled.h2`\n    color: ${props => props.theme.bg.octonary};\n    font-family: ${props => props.theme.font.primary};\n    font-size: 1rem;\n    padding-right:1rem;\n    padding-top:0.4rem;\n\n`\n\nexport const SidebarButton = styled(AssignmentOutlinedIcon)`\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz1};\n\n    border:none;\n    padding:0;\n    margin:0;\n    outline: none;\n    background: transparent;\n`\n\n\nexport const RowContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: flex-start;\n\n    margin-left:2rem;\n    padding-top:1rem;\n    padding-right:2rem;\n    padding-bottom: 1rem;\n    width: 100%;\n    height: 3rem;\n    overflow:hidden;\n    flex-wrap: wrap;\n\n\n\n    @media only screen and (max-width: ${props => props.theme.widthBreakpoint.tablet}) {\n        margin-left: 2rem;\n        margin-right: 2rem;\n    }\n`\n\nexport const ColumnContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n\n`\nexport const Dots = styled.div`\n    align-items: center;\n    justify-content: flex-start;\n    height: 1.7rem;\n    color: white;\n    width:15rem;\n\n    white-space: nowrap;\n    text-overflow: ellipsis;\n\n    padding-top: .2rem;\n\n\n`\n\nexport const LotItem = styled.div`\n    align-items: center;\n    justify-content: center;\n    height: 1.7rem;\n    color: white;\n\n    white-space: nowrap;\n\n    width: auto;\n    background: transparent;\n\n    padding-right:.5rem;\n    padding-left:.5rem;\n    margin-right:.5rem;\n\n    border-radius: 0.5rem;\n    border: 0.1rem solid;\n    border-color: ${props => props.error ? 'red' : 'white'};\n\n\n`\n","import styled from 'styled-components'\nimport {RGB_Linear_Shade, hexToRGBA, LightenDarkenColor} from \"../../../../../methods/utils/color_utils\";\nimport * as pageStyle from '../dashboards_header/dashboards_header.style';\nimport SmallButton from \"../../../../basic/small_button/small_button\";\n\nexport const AddButton = styled.button`\n    flex-grow: 8;\n    background-color: #BCBCBC;\n`\n\nexport const Container = styled.div`\n    \n    // flex layout\n    display: flex;\n    flex-direction: column;\n    \n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n    \n    background: ${props => props.theme.bg.quaternary};\n    \n`\n\nexport const AddContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: flex-end;\n    padding-top: .2rem;\n    justify-content: center;\n    padding-bottom: .2rem;\n`\n\nexport const HeaderContentContainer = styled.div`\n    width: 100%;\n    height: 100%;\n    \n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    \n`\n\nexport const Title = styled(pageStyle.Title)`\n    padding: 0;\n    margin: 0;\n    margin-left: 4rem;\n`\n\n\nexport const CreateNewText = styled.span`\n    // font-weight: bold;\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz3};\n`\n\n\nexport const DashboardContainer = styled.div`\n    \n    width: 100%;\n    max-width: 100%;\n    max-height: 100%;\n    height: 100%;\n    \n    overflow: auto;\n    overflow-x: hidden;\n    \n    padding: 2rem;\n    \n    // hide scroll bar\n    ::-webkit-scrollbar {\n        width: 0px;  /* Remove scrollbar space */\n        background: transparent;  /* Optional: just make scrollbar invisible */\n    }\n    ::-webkit-scrollbar-thumb {\n        background: transparent;\n    }\n    \n`\n\nexport const DashboardList = styled.div`\n    \n    width: 100%;\n    max-width: 100%;\n    max-height: 100%;\n    height: 100%;\n    \n    // flex layout\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    align-items:center;\n    justify-content: center;\n    \n`\n\nexport const MenuButton = styled.div`\n    display: flex;\n    flex-grow: 1;\n    justify-content: center;\n\n    &:hover {\n        cursor: pointer;\n    }\n`\nexport const AddButtonContainer = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`\n\nexport const AddHeadContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n    padding-top: 2rem;\n    padding-bottom: 1rem;\n    position: relative;\n    \n    background-image: linear-gradient(${props => props.theme.bg.tertiary}, ${props => props.theme.bg.primary});\n    // background: ${props => props.theme.bg.secondary};\n    border-bottom: thin solid ${props => props.theme.bg.tertiary};\n    box-shadow: 0px 0px 15px black;\n    \n    z-index: 1;\n    \n    height: 5rem;\n    max-height: 5rem;\n`\nexport const AddHeader = styled.h2`\n    display: flex;\n    margin: auto auto;\n    font-weight: bold;\n    color: #FF4B4B;\n    font-family: ${props => props.theme.font.primary};\n    \n\n`\n\nexport const HeaderButtonLeft = styled.button`\n    display: flex;\n    position: absolute;\n    left: .5rem;\n    top: 0.5rem;\n    background: ${props => props.theme.fg.primary};\n    height: 2rem;\n    text-align: center;\n    color: ${props => props.theme.bg.primary};\n    margin-top: 2rem;\n\n    @media (max-width: 1000px) {\n        top: -1.5rem;\n\n    }\n\n\n    &:hover {\n        color: ${props => props.theme.bg.primary};\n    }\n`\nexport const HeaderButtonLabel = styled.span`\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz4};\n    font-weight: 400;\n    color: ${props => props.theme.bg.primary};\n`;\n\nexport const HeaderButtonRight = styled.button`\n    display: flex;\n    position: absolute;\n    right: 1rem;\n    background: ${props => props.theme.fg.primary};\n    height: 2.5rem;\n    text-align: center;\n    color: ${props => props.theme.bg.primary};\n\n    &:hover {\n        color: ${props => props.theme.bg.primary};\n    }\n`\n\nexport const DashboardHeaderStatus = styled.p`\n`\n\nexport const UnstyledList = styled.ul`\n    list-style: none;\n    list-style-type: none;\n    margin-top: 2rem;\n    padding-inline-start: 0rem;\n`\n\nexport const TitleTextbox = styled.input`\n    background-color: ${props => props.theme.bg.secondary};\n    border-color: ${props => props.theme.bg.primary};\n    font-size: ${props => props.theme.fontSize.sz2};\n    font-family: ${props => props.theme.font.primary};\n    display: flex;\n    flex-grow: 1;\n\n    &:focus {\n        border: 1px solid ${props => props.theme.fg.primary};\n        color: ${props => props.theme.bg.septenary};\n        box-shadow: none;\n        background-color: ${props => props.theme.bg.secondary};\n    }\n\n    &::placeholder {\n        font-size: ${props => props.theme.fontSize.sz2};\n        font-family: ${props => props.theme.font.secondary};\n        color: ${props => props.theme.bg.quaternary};\n    }\n    margin: 0;\n    padding: 0;\n`;\n\nexport const NewDashboard = styled.button`\n\tposition: relative;\n\t\n\t// default font\n\tfont-family: ${props => props.theme.font.primary};\n\tfont-size: ${props => props.theme.fontSize.sz3};\n\t\n\t// remove default button padding and margin\n\tpadding: 0;\n\tmargin: 0;\n    width: 26rem;\n    min-width: 26rem;\n    max-width: 26rem;\n\t\n    margin-bottom: 1rem;\n\tmargin-left: 0.5rem;\n\tmargin-right: 0.5rem;\n\t\n\t// border related styling\n\tborder: 0.3rem solid ${props => props.theme.bg.senary};\n\tborder-radius: 0.5rem;\n\tbox-shadow: 5px 5px 10px ${props => props.theme.bg.quaternary};\n\t\n\tbackground: transparent;\n\t\n\t// flex layout\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: space-between;\n\t\n\tmax-height: 15rem;\n\theight: 15rem;\n\toverflow: hidden;\n\t\n\toutline: none;\n\t&:focus {\n\t\toutline: none;\n\t}\n\t\n\t&:active {\n\t\tbox-shadow: 0px 0px 0px white;\n\t}\n`\n\nexport const AddDashboardContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 0rem;\n\n    flex-grow: 1;\n\n    background: none;\n    justify-content: center;\n`\n\nexport const AddDashboardButtonText = styled.p`\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz2};\n    font-weight: 600;\n    color: ${props => props.theme.bg.senary};\n`\n\nexport const PlusButton = styled.i`\n    color: ${props => props.theme.bg.senary};\n    font-size: 2rem;\n`\n","import styled from 'styled-components'\nimport * as style from '../DashboardsList.style'\nimport SmallButton from \"../../../../../basic/small_button/small_button\";\n\nimport { LightenDarkenColor } from '../../../../../../methods/utils/color_utils'\n\nexport const AddContainer = styled(style.AddContainer)`\n\tpadding-bottom: 1rem;\n\talign-content: center;\n\twidth: 45%;\n`\n\nexport const Container = styled.button`\n\tposition: relative;\n\t\n\t// default font\n\tfont-family: ${props => props.theme.font.primary};\n\tfont-size: ${props => props.theme.fontSize.sz3};\n\t\n\t// remove default button padding and margin\n\tpadding: 0;\n\tmargin: 0;\n\t\n\t// // large screen style\n\t// @media (min-width: ${props => props.theme.widthBreakpoint.mobileL}){\n\t//   width: 100%;\n\t//   max-width: 100%;\n\t// }\n\t\n\t// // small screen style\n\t// @media (min-width: ${props => props.theme.widthBreakpoint.tablet}){\n\t// \twidth: 45%;\n\t// \tmargin-left: .5rem;\n\t// \tmargin-right: .5rem;\n\t// }\n\tmin-width: 26rem;\n\twidth: 26rem;\n\tmax-width: 26rem;\n\t\n\tmargin-bottom: 1rem;\n\tmargin-left: 0.5rem;\n\tmargin-right: 0.5rem;\n\t\n\t// border related styling\n\tborder: 0.3rem solid ${props => props.theme.bg.septenary};\n\tborder-radius: 0.5rem;\n\tbox-shadow: 5px 5px 10px ${props => props.theme.bg.quaternary};\n\t\n\tbackground: transparent;\n\t\n\t// flex layout\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\t// justify-content: space-between;\n\t\n\tmax-height: 15rem;\n\theight: 15rem;\n\toverflow: visible;\n\t\n\toutline: none;\n\t&:focus {\n\t\toutline: none;\n\t}\n\t\n\t&:active {\n\t\tbox-shadow: 0px 0px 0px white;\n\t}\n`\n\nexport const HeaderContainer = styled.div`\n\twidth: 100%;\n\tpadding-top: 0.75rem;\n\tpadding-bottom: 0.5rem;\n   \t\n\tz-index: 1;\n\t\n\t// flex layout\n\tflex-grow: 0;\n\theight: 3rem;\n\tdisplay: flex;\n\tjustify-content: center;\n\n\n\t// background-color: ${props => props.theme.bg.septenary};\n`\n\nexport const Title = styled.h3`\n\tpadding: 0;\n\tmargin: 0;\n\tcolor: ${props => props.theme.bg.septenary};\n\t\n\tfont-family: ${props => props.theme.font.primary};\n\tfont-size: ${props => props.theme.fontSize.sz2};\n\tfont-weight: bold;\n\t\n\twhite-space: nowrap;\n\toverflow: hidden;\n\twidth: 100%;\n\t\n\ttext-overflow: ellipsis;\n\t\n`\n\nexport const NoGoals = styled.div`\n\talign-self: center;\n\tcolor: ${props => LightenDarkenColor(props.theme.bg.senary, -40)};\n`\n\nexport const List = styled.div`\n\twidth: 24rem;\n\tmax-width: 100%;\n\tmin-width: 100%;\n\toverflow-y: scroll;\n\toverflow-x: hidden;\n\n\tflex-grow: 1;\n\tmax-height: 100%;\n\theight: 11.4rem;\n\n\ttext-align: center;\n\t\n\tpadding: 1rem;\n\tpadding-top: 0;\n\t\n\t// hide scroll bar\n\t::-webkit-scrollbar {\n\t\twidth: 0px;  /* Remove scrollbar space */\n\t\t// background: transparent;  /* Optional: just make scrollbar invisible */\n\t}\n\t::-webkit-scrollbar-thumb {\n\t\tbackground: transparent;\n\t}\n\t\n`\n\nexport const ListContainer = styled.div`\n\twidth: 100%;\n\tmax-height: 100%;\n\n\ttext-align: center;\n`\n\nexport const TaskButton = styled.li`\n\tcolor: ${props => props.theme.bg.quaternary};\n\tbackground: ${props => `linear-gradient(180deg, rgba(255,255,255,0.4) 0%, rgba(255,255,255,0.4) 100%), ${LightenDarkenColor(props.color, -60)}`};\n\tfont-size: ${props => props.theme.fontSize.sz3};\n\tfont: ${props => props.theme.font.primary};\n\ttext-align: center;\n\n\tuser-select: none;\n\n\tmargin-bottom: 0.15rem;\n\tpadding: 0 1.2rem 0 1.2rem;\n\tborder-radius: 0.3rem;\n\t\n\t// hide long names\n\twhite-space: nowrap;\n\toverflow: hidden;\n\ttext-overflow: ellipsis;\n\n\tlist-style-type: none;\n\twidth: 100%;\n\tflex-grow: 1;\n\t\n`\n\nexport const DashboardButtonTitle = styled.h2`\n\tmin-width: 0;\n\twhite-space: nowrap;\n\toverflow: hidden;\n\ttext-overflow: ellipsis;\n\n\tfont-family: ${props => props.theme.font.primary};\n\tfont-size: ${props => props.theme.fontSize.sz2};\n\tpadding: 1rem 4rem 0 0;\n\tfont-weight: bold;\n\tcolor: ${props => props.theme.bg.senary};\n\twidth: 100%;\n`\n\n\n\n\nexport const ButtonsContainer = styled.div`\n\twidth: 100%;\n\tdisplay: flex;\n\tz-index: 1;\n`\n\nexport const Button = styled(SmallButton)`\n\tflex: 1;\n\tmargin: 0;\n\tpadding: 0;\n\t\n\t&:hover {\n\t\tcursor: pointer;\n\t}\n\tbackground: transparent;\n\tz-index: 2;\n`\n\nexport const DashboardButtonRowConatiner = styled.div`\n\tdisplay: flex;\n\tflex-direction: row;\n\talign-content:center;\n`\n\nexport const DashboardButtonIcon = styled.a`\n\tdisplay: flex;\n\tposition: absolute;\n\tright: 1.5rem;\n\ttop: 1.5rem;\n\t/* z-index: 2; */\n\tpadding: 1rem;\n\tmargin: -1rem;\n\t&:hover {\n\t\tcursor: pointer;\n\t}\n`\n\n\nexport const Icon = styled.i`\n\tdisplay: flex;\n\tcolor: ${props => props.theme.fg.primary};\n\tfont-size: 2rem;\n\tmargin-left: 0.75rem;\n\tmargin-right: 0.75rem;\n\t&:hover {\n\t\tcursor: pointer;\n\t}\n`\nexport const HILStatus = styled.i`\n\tbottom: 2.55rem;\n\tright: 2rem;\n\tdisplay: flex;\n\tposition: absolute;\n\tcolor: ${props => props.theme.good};\n`\n\nexport const HILTimer = styled.p`\n\tbottom: 1.2rem;\n\tright: 3.5rem;\n\tdisplay: flex;\n\tposition: absolute;\n\tcolor: ${props => props.theme.good};\n\tfont-family: ${props => props.theme.font.primary};\n\tfont-weight: bold;\n`\n\nexport const WarningIcon = styled.i`\n\tmargin-right: 2rem;\n\tcolor: ${props => props.theme.bad};\n\tz-index: 10;\n\tfont-size: 1.2rem;\n`\n\n// export const AddNewDashboardContainer = styled.div`\n// \tdisplay: flex;\n// \tborder: 0.25rem solid ${props => props.theme.bg.quaternary};\n// \tbackground: none;\n// \theight: 10rem;\n// \tborder-radius: 0.5rem;\n// \tjustify-content: center;\n// \talign-items:center;\n// `\n\n// export const AddDashboardButton = styled.button`\n//\n//\n// `\n","import styled from 'styled-components'\n\nimport { LightenDarkenColor } from '../../../../../../methods/utils/color_utils'\n\nexport const Container = styled.div`\n\n    \n    width: 100%;\n    display: flex;\n    justify-content: center;\n    \n    margin-bottom: 0.4rem;\n    \n    &:focus {\n        outline: none;\n    }\n    \n    border: 0;\n`\n\nexport const Button = styled.button`\n    border-radius: .5rem;\n    \n    height: 5rem;\n    \n    &:focus {\n        outline: none;\n    }\n    width: 80%;\n    max-width: 80%;\n    \n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n`\n\nexport const Title = styled.span`\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz3};\n    font-weight: bold;\n    \n    // white-space: nowrap;\n    // overflow: hidden;\n    //   max-width: 10%;\n    //   width: 20%;\n    // word-break: break-word;\n    //\n    // text-overflow: ellipsis;\n    \n\n`","import React, { useEffect } from 'react';\nimport { Draggable } from 'react-smooth-dnd';\n\nimport DashboardButton from \"../../dashboard_buttons/dashboard_button/dashboard_button\";\n\nimport * as style from \"./dashboard_sidebar_button.style\"\n\nimport log from '../../../../../../logger'\nimport { randomHash } from \"../../../../../../methods/utils/utils\";\n\nconst logger = log.getLogger(\"Dashboards\")\n\nconst DashboardSidebarButton = (props) => {\n    const { name, color, id, task_id, clickable, onTaskClick, disabled  } = props;\n\n\n    logger.log(\"DashboardSidebarButton: name: \", name)\n    logger.log(\"DashboardSidebarButton: props: \", props)\n\n    if (!clickable) {\n        return(\n            <Draggable key={id}>\n                <style.Container>\n                        <DashboardButton\n                            title={name}\n                            width={\"80%\"}\n                            clickable={clickable}\n                            color={color}\n                            onClick={() => onTaskClick(task_id)}\n                            disabled={disabled}\n                        />\n                </style.Container>\n            </Draggable>\n        )\n    } else {\n        return(\n            <style.Container>\n                    <DashboardButton\n                        title={name}\n                        width={\"80%\"}\n                        clickable={clickable}\n                        color={color}\n                        onClick={() => onTaskClick(task_id, name)}\n                        disabled={disabled}\n                    />\n            </style.Container>\n        )\n    }\n    \n}\n\nexport default DashboardSidebarButton","import React, { useRef, useEffect } from 'react';\nimport PropTypes from \"prop-types\";\n\n// import external functions\nimport { useDrag, useDrop } from \"react-dnd\";\n\n// import external components\nimport ReactList from 'react-list';\nimport ReactTooltip from \"react-tooltip\";\n\n// import internal components\nimport DashboardButton from \"../../dashboard_buttons/dashboard_button/dashboard_button\";\n\n// Import styles\nimport * as style from './dashboard.style';\n\n// import logging\nimport log from \"../../../../../../logger\"\nimport DashboardSidebarButton from \"../../dashboards_sidebar/dashboard_sidebar_button/dashboard_sidebar_button\";\nimport { randomHash } from \"../../../../../../methods/utils/utils\";\nconst logger = log.getLogger(\"Dashboards\")\n\nconst Dashboard = React.memo(props => {\n    logger.log(\"DashboardContainers: props\", props)\n    // extract props\n    const {\n        onDrop,\n        deleted,\n        HILTimer,\n        editingclicked,\n        onDeleteClick,\n        setSelectedDashboard,\n        openDashboard,\n        id,\n        key,\n        title,\n        buttons\n    } = props\n\n    logger.log(\"Dashboard: props\", props)\n    logger.log(\"Dashboard: taskButtons\", buttons)\n\n    // handle drop items\n    const [{ opacity }, dropRef] = useDrop({\n        accept: \"DashboardSidebarButton\",\n        drop: (item, monitor) => {\n            onDrop(item, id)\n            return item\n        },\n        hover: (item, monitor) => {\n            const isOver = monitor.isOver({ shallow: true })\n            logger.log(\"isOver\", isOver)\n\n        },\n        // collect: (monitor) => ({\n        // \topacity: monitor.isOver({ shallow: true }) ? 0.5 : 1\n        // })\n    })\n\n    const listRef = useRef(null);\n    const itemRenderer = (index, key) => {\n        const button = buttons[index]\n\n        logger.log(\"itemRenderer currentButton\", button)\n\n        return <style.TaskButton key={'task-button-' + index} color={button.color} onDragOver={() => console.log('hey')}>{button.name}</style.TaskButton>\n\n    }\n\n    React.useEffect(() => {\n        listRef.current &&\n            listRef.current.scrollTo(buttons.length);\n    }, [buttons.length]);\n\n    return (\n        <style.Container\n            ref={dropRef}\n            onClick={props.openDashboard}\n        >\n            <style.HeaderContainer>\n                <style.Title>{props.title ? props.title : \"Untitled\"}</style.Title>\n            </style.HeaderContainer>\n\n            <style.List>\n                {(buttons && (buttons.length > 0)) ?\n                    <ReactList\n                        ref={listRef}\n                        itemRenderer={itemRenderer}\n                        length={buttons.length}\n                        type='uniform'\n                        itemsRenderer={(items, ref) => {\n                            return (\n                                <style.ListContainer ref={ref}>\n                                    {items}\n                                </style.ListContainer>\n\n                            )\n                        }}\n                    />\n\n                    :\n                    <style.NoGoals>Dashboard is empty...</style.NoGoals>\n                }\n\n            </style.List>\n\n        </style.Container>\n\n\n\n    )\n})\n\n\n// Specifies propTypes\nDashboard.propTypes = {\n    onDrop: PropTypes.func,\n};\n\n// Specifies the default values for props:\nDashboard.defaultProps = {\n    onDrop: () => { logger.log(\"onDrop Called\") },\n};\n\n\n\nexport default Dashboard\n","import React, { useContext, useEffect, useState, useMemo } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useParams, useHistory } from 'react-router-dom'\n\n// import components\nimport BounceButton from \"../../../../basic/bounce_button/bounce_button\";\nimport BackButton from '../../../../basic/back_button/back_button'\nimport Button from '../../../../basic/button/button'\n\n// Import hooks\nimport useWindowSize from '../../../../../hooks/useWindowSize'\n\n// import external funcations\nimport { ThemeContext } from \"styled-components\";\nimport { withRouter } from \"react-router-dom\";\nimport { getCards } from \"../../../../../redux/actions/card_actions\";\n\n\n// import constants\nimport { PAGES } from \"../../../../../constants/dashboard_contants\";\n\nimport * as style from \"./dashboards_header.style\";\n\nconst widthBreakPoint = 1000;\n\nconst DashboardsHeader = (props) => {\n\n    const {\n        children,\n        showTitle,\n        showBackButton,\n        showEditButton,\n        showSaveButton,\n        showSidebar,\n        setShowSidebar,\n        setEditingDashboard,\n        page,\n\n        saveDisabled,\n        onBack,\n        onDelete\n    } = props\n\n    const themeContext = useContext(ThemeContext);\n\n    // extract url params\n    const { stationID, dashboardID, editing } = props.match.params\n    const dispatch = useDispatch()\n    const onGetCards = () => dispatch(getCards())\n\n    const cards = useSelector(state => state.cardsReducer.cards)\n    const stations = useSelector(state => state.stationsReducer.stations)\n    const positions = useSelector(state => state.positionsReducer.positions)\n\n    const locations = {\n        ...positions,\n        ...stations\n    }\n\n    const location = locations[stationID]\n\n    const [slice, setSlice] = useState(null)\n    const size = useWindowSize()\n    const windowWidth = size.width\n    const mobileMode = windowWidth < widthBreakPoint;\n\n\n    // goes to main dashboards page\n    const goToMainPage = () => {\n        props.history.push(`/locations/${stationID}/dashboards`)\n    }\n\n    /**\n     * Renders Lots that are are the station\n     */\n    const renderLotsTitle = useMemo(() => {\n\n        //  If there is a location then see if it has lots. There wouldnt be a location because its a Mir dashboard\n        if (location === undefined) return\n\n        let hasLot = false\n\n        for (let i = 0; i < Object.values(cards).length; i++) {\n            if (!!Object.values(cards)[i].bins[location._id]) {\n                hasLot = true\n                break\n            }\n        }\n\n        if (!!hasLot) {\n            return (\n                <style.RowContainer windowWidth={windowWidth}>\n                    <style.LotsTitle>Lots:</style.LotsTitle>\n                    {Object.values(cards).map((card, ind) =>\n                        <>\n                            {!!card.bins[location._id] &&\n\n                                <style.LotItem>{card.name + ' (' + card.bins[location._id].count + ')'}</style.LotItem>\n                            }\n                        </>\n\n                    )}\n                </style.RowContainer>\n            )\n        }\n\n        else {\n            return (\n                <style.RowContainer>\n                    <style.LotsTitle>No Lots</style.LotsTitle>\n                </style.RowContainer>\n            )\n        }\n    }, [cards])\n\n    return (\n        <style.ColumnContainer>\n\n            {renderLotsTitle}\n\n            <style.Header>\n\n                {showBackButton &&\n                    <BackButton style={{ order: '1' }} containerStyle={{ marginTop: '1.8rem' }}\n                        onClick={onBack}\n                    />\n                }\n\n                {showTitle &&\n                    <style.Title style={{ order: '2' }}>{page}</style.Title>\n                }\n\n                {showEditButton && !mobileMode &&\n                    <Button style={{ order: '3', marginTop: '1.8rem' }}\n                        onClick={setEditingDashboard}\n                    >\n                        Edit\n  \t\t\t\t</Button>\n                }\n\n                {showSaveButton &&\n                    <>\n                        <Button style={{ order: '3', marginTop: '1.8rem' }}\n                            type=\"submit\"\n                            disabled={saveDisabled}\n                        >\n                            Save\n  \t\t\t\t</Button>\n\n                        {/* Comment out for now since locations only have one dashboard, so you should not be able to delete the only dashboard */}\n                        {/* <Button\n                          schema={'delete'}\n                          style={{ order: '4', marginTop: '1.8rem', marginLeft: '2rem' }}\n                          onClick={onDelete}\n                      >\n                          Delete\n                      </Button> */}\n                    </>\n                }\n\n                {children}\n            </style.Header>\n        </style.ColumnContainer>\n\n    )\n}\n\nexport default withRouter(DashboardsHeader)\n","import React, { useState, useRef, useContext, useEffect } from 'react';\n\n// external functions\nimport { ThemeContext } from \"styled-components\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useParams, useHistory } from 'react-router-dom'\n\n// import external components\nimport ReactList from \"react-list\";\nimport { useDrop } from 'react-dnd'\n\n// Import Components\nimport Dashboard from './dashboard/dashboard'\nimport { ConfirmDeleteModal } from '../../../../basic/modals/modals'\nimport DashboardsHeader from \"../dashboards_header/dashboards_header\";\nimport BounceButton from \"../../../../basic/bounce_button/bounce_button\";\n\n// Import Actions\nimport * as dashboardActions from '../../../../../redux/actions/dashboards_actions'\nimport * as stationActions from '../../../../../redux/actions/stations_actions'\nimport * as taskActions from '../../../../../redux/actions/tasks_actions'\n\n// import utils\nimport { deepCopy } from \"../../../../../methods/utils/utils\";\n\n// import constants\nimport { PAGES } from \"../../../../../constants/dashboard_contants\";\n\n// Import Styles\nimport * as style from './DashboardsList.style';\n\n// import logging\nimport log from \"../../../../../logger\";\n\nconst logger = log.getLogger(\"DashboardsPage\");\n\n\nconst DashboardsList = (props) => {\n\n    const {\n        setSelectedDashboard,\n        setEditingDashboard,\n        showSidebar,\n        setShowSidebar,\n        stationID\n    } = props\n\n    // theme\n    const themeContext = useContext(ThemeContext);\n\n    // component state\n    const [dashboardToDelete, setDashboardToDelete] = useState(false);\n\n    // ref for react list\n    const listRef = useRef(null);\n\n    // dispatch\n    const dispatch = useDispatch()\n\n    const params = useParams()\n    const history = useHistory()\n\n    // Drop reference for new dashboard\n    const [{ }, newDashDropRef] = useDrop({\n        accept: \"DashboardSidebarButton\",\n        drop: (item, monitor) => {\n            handleNew(item)\n        },\n    })\n\n    // redux state\n    const dashboards = useSelector(state => state.dashboardsReducer.dashboards)\n    const stations = useSelector(state => state.stationsReducer.stations)\n    const tasks = useSelector(state => state.tasksReducer.tasks)\n    const devices = useSelector(state => state.devicesReducer.devices)\n    const dashboardOpen = useSelector(state => state.dashboardsReducer.dashboardOpen)\n\n    const onPutDashboard = (dashboard, copy, id) => dispatch(dashboardActions.putDashboard(dashboard, copy, id))\n    const onPostDashboard = (dashboard) => dispatch(dashboardActions.postDashboard(dashboard))\n    const onPutStation = (station, id) => dispatch(stationActions.putStation(station, id))\n    const onDeleteDashboard = (dashboard) => dispatch(dashboardActions.deleteDashboard(dashboard))\n\n\n\n    const station = stations[stationID]\n    const device = devices[stationID]\n\n    const selectedDashboardType = !!station ? station : device\n\n\n\n    // logger.log(\"DashboardsList dashboards\", dashboards)\n    // logger.log(\"DashboardsList dashboardsArray\", dashboardsArray)\n\n    useEffect(() => {\n        if (dashboards[params.dashboardID] === undefined && !dashboardOpen) {\n            history.push('/locations/')\n        }\n        return () => {\n\n        }\n    }, [])\n\n\n    // Hopefully fixes a bug when there is no dashboards for this type\n    const dashboardsArray = !!selectedDashboardType ? !!selectedDashboardType.dashboards ? selectedDashboardType.dashboards.map(dashboardID => dashboards[dashboardID]) : [] : []\n\n\n    // handles event of button drag-and-drop onto a dashboard\n    // adds the dropped button to the dashboard target\n    const handleDrop = async (button, id) => {\n        // get dashboard that button was dropped in\n        const targetDashboard = dashboards[id]\n        logger.log(\"DashboardsList: handleDrop: targetDashboard\", targetDashboard)\n\n        let targetDashboardCopy = deepCopy(targetDashboard)// clone dashboard\n        targetDashboardCopy.buttons.push(button) // add new button\n\n        // dispatch action to update api and redux\n        onPutDashboard(targetDashboardCopy, targetDashboardCopy._id.$oid)\n    }\n\n    const handleNew = (button) => {\n        // This block iterates through 'i' to find 'Untitled Dashboard i' that\n        // that does not exists at this station\n        var i = 0\n        var exists = true\n        while (exists) {\n            exists = false\n            i++\n            selectedDashboardType.dashboards.forEach(dashboardID => {\n                if (dashboards[dashboardID].name == 'Untitled Dashboard ' + i) {\n                    exists = true\n                }\n            })\n        }\n\n        // Post the new dashboard and wait for the returned ID\n        let newDash = {\n            name: 'Untitled Dashboard ' + i,\n            station: stationID,\n            buttons: [],\n        }\n        if (!!button) {\n            newDash.buttons.push(button)\n        }\n        const postDashboardPromise = onPostDashboard(newDash)\n\n        // Add this new dashboard to the station\n        postDashboardPromise.then(async postedDashboard => {\n\n            let stationDashboards = selectedDashboardType.dashboards\n            stationDashboards.push(postedDashboard._id.$oid)\n            await dispatch(stationActions.setStationAttributes(station._id, { dashboards: stationDashboards }))\n            const stationID = station._id\n            delete station._id\n            await onPutStation(station, stationID)\n\n            if (button == null) { // Drop not click\n                // Go into the new dashboard\n                setSelectedDashboard(postedDashboard._id.$oid)\n            }\n        })\n    }\n\n    // renders a single dashboard based on the index in the dashboards array\n    const itemRenderer = (index, key) => {\n        if (index >= dashboardsArray.length) {\n\n            // Extra dashboard which will be the 'New Dashboard' dashboard\n            return (\n                <style.NewDashboard ref={newDashDropRef} onClick={() => handleNew(null)} key={key}>\n                    <style.AddDashboardContainer>\n                        <style.AddDashboardButtonText>New Dashboard</style.AddDashboardButtonText>\n                        <style.PlusButton className='far fa-plus-square'></style.PlusButton>\n                    </style.AddDashboardContainer>\n                </style.NewDashboard>\n            )\n        } else {\n            const currDashboard = dashboardsArray[index]\n            if (currDashboard === undefined) {\n                return null\n            }\n\n            // get dashboard properties\n            let name = currDashboard.name\n            let ID = currDashboard._id.$oid\n            let buttons = currDashboard.buttons\n            let deleted = false\n\n            logger.log(\"rednering dashboard\")\n            return (\n                <Dashboard\n                    listRef={listRef}\n                    title={name}\n                    buttons={buttons}\n                    key={index}\n                    id={ID}\n                    openDashboard={() => {\n                        setSelectedDashboard(ID)\n                    }}\n                    onDeleteClick={() => {\n                        // opens confirm delete modal\n                        setDashboardToDelete(ID)\n                    }}\n                    editingclicked={() => {\n                        setEditingDashboard(ID)\n                    }}\n                    deleted={deleted}\n                    onDrop={handleDrop}\n                />\n            )\n        }\n    }\n\n    return (\n        <style.Container>\n\n            <style.DashboardContainer\n            >\n                <ReactList\n                    style={{ width: \"100%\" }}\n                    ref={listRef}\n                    minSize={10}\n                    itemRenderer={itemRenderer}\n                    length={dashboardsArray.length + 1}\n                    type='uniform'\n                    itemsRenderer={(items, ref) => {\n                        return (\n                            <style.DashboardList ref={ref}\n                                onScroll={() => logger.log(\"DashboardList scroll\")}\n                            >\n                                {items}\n                            </style.DashboardList>\n\n                        )\n                    }}\n                />\n            </style.DashboardContainer>\n\n            {/* Confimation modal before deleting a dashboard */}\n            <ConfirmDeleteModal\n                isOpen={dashboardToDelete}\n                title={'Confirm Delete'}\n                textMain={dashboards[dashboardToDelete] && 'Are you sure you want to delete \"' + dashboards[dashboardToDelete].name + '\"'}\n                caption={''}\n                onCancelClick={() => setDashboardToDelete(null)}\n                onDeleteClick={() => {\n                    onDeleteDashboard(dashboardToDelete)\n                    setDashboardToDelete(null)// reset dashboardToDelete\n                }}\n            />\n        </style.Container>\n    )\n}\n\nexport default DashboardsList\n","import styled from \"styled-components\";\nimport {css} from 'styled-components'\n\nexport const Container = styled.ul`\n\t// fill entire container\n\twidth: 90%;\n\tmax-width: 90%;\n\tmax-height: 100%;\n\theight: 100%;\n\tz-index: 15;\n\talign-self: center;\n\talign-items: center;\n\tmargin: 0;\n\tpadding: 0;\n\n\t// allow scroll\n\toverflow: auto;\n\n\t// hide scroll bar\n\t::-webkit-scrollbar {\n\t\twidth: 0px;  /* Remove scrollbar space */\n\t\tbackground: transparent;  /* Optional: just make scrollbar invisible */\n\t}\n\t::-webkit-scrollbar-thumb {\n\t\tbackground: #FF0000;\n\t}\n\n`\n\nexport const ListContainer = styled.div`\n\t// full entire container\n    width: 100%;\n\tmax-height: calc(100% - 8rem);\n\n\n\t// flex layout\n\tdisplay: flex;\n\tflex-direction: row;\n\tflex-wrap: wrap;\n\talign-items:center;\n\tjustify-content: center;\n`\n\n\n// overwrite dashboard button container style\nexport  const ButtonContainerCss = css`\n\t// large screen style\n\n\t@media (min-width: ${props => props.theme.widthBreakpoint.mobileL}){\n\t\twidth: 100%;\n\t\tmax-width: 100%;\n    }\n\n    @media (min-width: ${props => props.theme.widthBreakpoint.tablet}){\n\t\twidth: 45%;\n\t\tmargin-left: .5rem;\n\t\tmargin-right: .5rem;\n    }\n\n`\n","import styled from 'styled-components'\nimport CloseOutlinedIcon from '@material-ui/icons/CloseOutlined';\nimport {RGB_Linear_Shade, hexToRGBA, LightenDarkenColor} from \"../../../../../methods/utils/color_utils\";\nimport * as pageStyle from \"../dashboards_header/dashboards_header.style\"\n\n\nexport const FooterContainer = styled.div`\n\twidth: 100%;\n\tdisplay: flex;\n\toverflow-x: scroll;\n\toverflow-y: hidden;\n\tpadding: 1rem;\n\tborder-top: 1px solid ${props => props.theme.bg.quaternary};\n\tbackground: ${props => props.theme.bg.tertiary + \"B1\"};\n`\n\n// export const\n\nexport const Title = styled(pageStyle.Title)`\n    margin: 0;\n    padding: 0;\n    \n    font-size: ${props => props.isSmall && props.theme.fontSize.sz2};\n    \n    \n`\nexport const Header = styled(pageStyle.Header)`\n    justify-content: center;\n`\n\nexport const Container = styled.div`\n    width: 100%;\n    min-width: ${props => props.width};\n    height: 100%;\n    display: flex;\n    \n    flex-direction: column;\n    // justify-content: flex-start;\n    align-items: center;\n    z-index: 1;\n\n    flex: 1;\n    background: ${props => LightenDarkenColor(props.theme.bg.quaternary, 20)};\n    \n`\n\n\n\nexport const CloseButton = styled(CloseOutlinedIcon)`\n\tz-index: 5;\n`\n\nexport const ListContainer = styled.div`\n    width: 100%;\n    height: 100%;\n    max-height: 100%;\n    padding-top: 3rem;\n\n    padding-left: 2rem;\n    padding-right: 2rem;\n    \n    \n    display: flex;\n    flex-direction: column;\n    // align-items: center;\n    // align-self: center;\n    \n    overflow-y: auto;\n    overflow-x: hidden;\n    z-index: 1;\n    \n    background: ${props => LightenDarkenColor(props.theme.bg.quaternary, 20)};\n    \n    \n    // hide scroll bar\n    ::-webkit-scrollbar {\n        width: 0px;  /* Remove scrollbar space */\n        background: transparent;  /* Optional: just make scrollbar invisible */\n    }\n    ::-webkit-scrollbar-thumb {\n        background: transparent;\n    }\n    \n`\n\n// adds padding to handle to make it easier to click\nexport const HandleContainer = styled.div`\n    padding: .75rem;\n    position: absolute;\n    right: -2rem;\n    top: 50%;\n    transform: translateY(-50%);\n  \n    &:hover {\n        cursor: grab;\n    }\n    z-index:3;\n`\n\nexport const HandleIcon = styled.div`\n    width: 10px;\n    background: ${props => props.theme.bg.septenary};\n    height: 3rem;\n     border-radius: .25rem;\n`\n\n// NEW SIDEBAR STUFF\nexport const SidebarWrapper = styled.div`\n    height: 100%;\n    position: relative;\n\n    display: flex;\n    align-items: stretch;\n    flex-flow: row nowrap;\n    flex-direction: row;\n    width: 100%;\n    flex-grow: 0;\n    z-index: 1;\n\n    background: white;\n    overflow: hidden;\n\n    // box-shadow: 2px 0px 6px 2px rgba(0,0,0,0.4);\n`\n\nexport const SidebarContent = styled.div`\n    display: flex;\n    align-self: stretch;\n    flex-grow: 1;\n\n    // background: ${props => props.theme.bg.primary};\n    z-index: 1;\n\n    border-right: 8px solid ${props => LightenDarkenColor(props.theme.bg.quinary,20)};\n    \n`\n\nexport const ResizeBar = styled.div`\n    cursor: ew-resize;\n    width: 8px;\n    margin-right: -8px;\n    background: transparent;\n    display: flex;\n    z-index: 20;\n    align-items: center ;\n    align-content: center ;\n    justify-content: center;\n`\n\nexport const ResizeHandle = styled.div`\n    cursor: ew-resize;\n    width: 4px;\n    height: 30px;\n    background: ${props => props.theme.bg.octonary};\n    border-radius: 8px;\n    text-align: center;\n    z-index: 2;\n    overflow: hidden;\n    display: flex;\n    align-items: center ;\n\n`","import styled from \"styled-components\";\n\nexport const WidgetText = styled.span`\n\tfont-size: ${props => props.labelSize ? props.labelSize : props.theme.fontSize.sz6};\n\tfont-family: ${props => props.theme.font.primary};\n\t\n\ttext-align: center;\n\talign-self:center;\n\t\n\tcolor: ${props => props.selected ? props.theme.bg.octonary : props.theme.bg.primary};\n\t\n\twhite-space: nowrap;\n\toverflow: hidden;\n\ttext-overflow: ellipsis;\n`;\n\n\nexport const WidgetIcon = styled.i`\n    font-size: 2.2rem;\n    color: ${props =>  props.color };\n\n    @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n        font-size: 2rem;\n    }\n    \n    font-size: 2.2rem;\n    margin-bottom:0.3rem;\n    align-self:center;\n\n    @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n        font-size: 2rem;\n    }\n`\n\nexport const WidgetButton = styled.button`\n\tdisplay:flex;\n\tposition: relative;\n    flex-direction: column;\n    justify-content: center;\n    \n    border: none;\n    border-radius: 1rem;\n    text-align: center;\n    width: 4rem;\n    min-width: 4rem;\n    height: 4rem;\n    max-height: 4rem;\n    min-height: 4rem;\n    outline:none;\n    overflow: hidden;\n    \n    padding-top:.5rem;\n\n    box-shadow: 0 0.1rem 0.2rem 0rem #303030;\n\n    background-color: ${props => props.selected ? props.theme.bg.quaternary : props.theme.bg.septenary};\n\n    transition: background-color 0.25s ease, box-shadow 0.1s ease;\n\n    &:hover{\n        background-color: ${props => props.theme.bg.senary};\n    }\n\n    &:focus{\n        outline: 0 !important\n    }\n\n    &:active{\n        box-shadow: none;\n    }\n\n    @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n        width: 3.5rem;\n        height: 3.5rem;\n        border-radius: .5rem;\n        \n    }\n`;","import React from 'react';\n\n\nimport * as styled from './widget_button.style';\n\n\nconst WidgetButton = props => {\n\n\t// extract props\n\tconst {\n\t\tlabel,\n\t\tcolor,\n\t\ticonClassName,\n\t\tselected,\n\t\tonClick,\n\t\tcontainerStyle,\n\t\tchildren,\n\t\tlabelSize\n\t} = props\n\n\treturn(\n\t\t<styled.WidgetButton\n\t\t\ttype={\"button\"}\n\t\t\tonClick={onClick}\n\t\t\tselected={selected}\n\t\t\tstyle={containerStyle}\n\t\t>\n\t\t\t{children && children}\n\t\t\t<styled.WidgetIcon selected={selected} color={color} className={iconClassName}/>\n\t\t\t{label &&\n\t\t\t\t<styled.WidgetText selected={selected} labelSize={labelSize}>{label}</styled.WidgetText>\n\t\t\t}\n\t\t</styled.WidgetButton>\n\n\t)\n}\n\nexport default WidgetButton\n","import React, { useContext, useEffect, useRef, useState } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { DraggableCore } from \"react-draggable\";\nimport { Container } from 'react-smooth-dnd'\n\nimport * as style from \"./dashboards_sidebar.style\"\nimport { ThemeContext } from \"styled-components\";\n\n// components\nimport DashboardSidebarButton from \"./dashboard_sidebar_button/dashboard_sidebar_button\";\nimport TaskAddedAlert from \"../dashboard_screen/task_added_alert/task_added_alert\";\n\n// Helpers\nimport { handleAvailableTasks } from \"../../../../../methods/utils/dashboards_utils\";\n\n// Import Utils\nimport {ADD_TASK_ALERT_TYPE, DASHBOARD_BUTTON_COLORS} from \"../../../../../constants/dashboard_contants\";\nimport uuid from 'uuid'\n\n// Import Actions\nimport { postTaskQueue } from '../../../../../redux/actions/task_queue_actions'\n\nimport log from '../../../../../logger'\nimport WidgetButton from \"../../../../basic/widget_button/widget_button\";\n\nconst logger = log.getLogger(\"Dashboards\")\n\n\n\nexport const OPERATION_TYPES = {\n    REPORT: {\n        schema: \"error\",\n        name: \"Report\",\n        key: \"REPORT\",\n        _id: 0\n    },\n    KICK_OFF: {\n        schema: \"kick_off\",\n        key: \"KICK_OFF\",\n        name: \"Kick off\",\n        _id: 1\n    },\n    FINISH: {\n        schema: \"finish\",\n        key: \"FINISH\",\n        name: \"Finish\",\n        _id: 2\n    }\n}\n\nexport const TYPES = {\n    // ALL: {\n    //     name: \"ALL\",\n    //     iconName: \"fal fa-globe\"\n    // },\n    ROUTES: {\n        name: \"Routes\",\n        iconName: \"fas fa-route\",\n        key: \"ROUTES\"\n    },\n    OPERATIONS: {\n        name: \"Operations\",\n        iconName: \"fas fa-sticky-note\",\n        key: \"OPERATIONS\"\n    }\n}\n\nconst DashboardsSidebar = (props) => {\n\n    const {\n        width,\n        setWidth,\n        minWidth,\n        showSideBar,\n        stationID,\n        clickable,\n        dashboardId\n    } = props\n\n\n    /*\n    * Tests sidebar width to  determine if styling should be for small or large width\n    * Returns true if width is less than breakpoint, and false otherwise\n    * */\n    const testSize = (width) => {\n        return width < 500\n    }\n\n    /*\n    * ref for scrollable list containing buttons\n    * */\n    const listRef = useRef(null);\n\n    // theme\n    const themeContext = useContext(ThemeContext);\n\n    /*\n    * boolean value for storing width state\n    * isSmall is true if width is less than breakpoint and false otherwise\n    * */\n    const [isSmall, setSmall] = useState(testSize(width)); // used for tracking sidebar dimensions\n\n    const [type, setType] = useState(TYPES.ROUTES.key); // used for tracking sidebar dimensions\n\n    // redux state\n    const dispatch = useDispatch()\n    const tasks = useSelector(state => state.tasksReducer.tasks)\n    const stations = useSelector(state => state.stationsReducer.stations)\n    const code409 = useSelector(state => { return state.taskQueueReducer.error })\n\n    const kickOffEnabledInfo = useSelector(state => { return state.dashboardsReducer.kickOffEnabledDashboards[dashboardId] })\n    const kickOffEnabled = kickOffEnabledInfo && Array.isArray(kickOffEnabledInfo) && kickOffEnabledInfo.length > 0\n\n    const finishEnabledProcesses = useSelector(state => { return state.dashboardsReducer.finishEnabledDashboards[dashboardId] })\n    const finsihedEnabled = finishEnabledProcesses && Array.isArray(finishEnabledProcesses) && finishEnabledProcesses.length > 0\n\n    // self contained state\n    const [addTaskAlert, setAddTaskAlert] = useState(null)\n\n    const handleTaskClick = (Id) => {\n        const clickedTask = tasks[Id]\n        const name = clickedTask?.name\n\n        // add alert to notify task has been added\n        setAddTaskAlert({\n            type: ADD_TASK_ALERT_TYPE.ADDING,\n            message: \"Adding to Queue...\"\n        })\n\n        // dispatch action to add task to queue\n        const postPromise = dispatch(postTaskQueue({ _id: uuid.v4(),\"task_id\": Id }))\n        postPromise.then(() => {\n            try {\n                // code409 is returned if task is already in the queue\n                if (code409.response.data.status === 409) {\n                    // display alert notifying user that task is already in queue\n                    setAddTaskAlert({\n                        type: ADD_TASK_ALERT_TYPE.TASK_EXISTS,\n                        label: \"Alert! Task Already in Queue\",\n                        message: \"'\" + name + \"' not added\"\n                    })\n                }\n\n            } catch {\n                // display alert notifying user that task was successfully added\n                setAddTaskAlert({\n                    type: ADD_TASK_ALERT_TYPE.TASK_ADDED,\n                    label: \"Task Added to Queue\",\n                    message: name\n                })\n            }\n\n            // clear alert after timeout\n            setTimeout(() => setAddTaskAlert(null), 1800)\n        })\n\n\n    }\n\n    const handleReportClick = (Id) => {\n\n    }\n\n    const station = stations[stationID]\n\n    var availableTasks = []\n    try {\n        availableTasks = handleAvailableTasks(tasks, station)\n    }\n    catch (e) {\n        logger.log(\"availableTasks availableTasks\", availableTasks)\n        logger.log(\"availableTasks e\", e)\n    }\n\n    const getRouteButtons = () => {\n        return availableTasks\n            .map((task, index) => {\n            return {\n                name: task.name,\n                color: DASHBOARD_BUTTON_COLORS[index % DASHBOARD_BUTTON_COLORS.length].hex,\n                type: TYPES.ROUTES.key,\n                task_id: task._id,\n                id: task._id,\n            }\n        })\n    }\n\n    const getReportButtons = () => {\n        return Object.entries(OPERATION_TYPES).filter((currEntry, ind) => {\n            const currKey = currEntry[0]\n\n            if(currKey === null) return true // allows old routes that were created without a type to still be rendered\n\n            if(currKey === null) return true // allows old routes that were created without a type to still be rendered\n\n            if(currKey === OPERATION_TYPES.REPORT.key) return true\n\n            if((currKey === OPERATION_TYPES.KICK_OFF.key) && kickOffEnabled) return true\n\n            if((currKey === OPERATION_TYPES.FINISH.key) && finsihedEnabled) return true\n\n        }).map((currEntry, ind) => {\n\n            const currValue = currEntry[1]\n            const currKey = currEntry[0]\n\n            return {\n                name: currValue.name,\n                color: DASHBOARD_BUTTON_COLORS[ind % DASHBOARD_BUTTON_COLORS.length].hex,\n                // themeContext.schema[currValue.schema].solid,\n                id: currValue._id,\n                type: currKey,\n            }\n        })\n    }\n\n    var availableButtons = []\n    var availableReportButtons = []\n\n    switch(type) {\n        case TYPES.ROUTES.key:\n            availableButtons = getRouteButtons()\n            break\n        case TYPES.OPERATIONS.key:\n            availableReportButtons = getReportButtons()\n            break\n\n        // case TYPES.ALL.name:\n        //     availableButtons = getRouteButtons()\n        //     availableReportButtons = getReportButtons()\n        //     break\n\n        default:\n            break\n    }\n\n    function handleDrag(e, ui) {\n        setWidth(Math.max(minWidth, width + ui.deltaX))\n        setSmall(testSize(Math.max(minWidth, width + ui.deltaX)))  // check if width is less than styling breakpoint and update isSmall\n    }\n\n    const renderTypeButtons = () => {\n        return(\n            Object.entries(TYPES).map((currEntry, index) => {\n                const currKey = currEntry[0]\n                const currValue = currEntry[1]\n                return (\n                    <WidgetButton\n                        containerStyle={{marginRight: \"1rem\"}}\n                        label={currValue.name}\n                        color={themeContext.schema[currKey.toLocaleLowerCase()].solid}\n                        iconClassName={currValue.iconName}\n                        selected={type === currKey}\n                        onClick={()=>setType(currKey)}\n                        labelSize={\"0.5rem\"}\n\n                    />\n                )\n            })\n        )\n    }\n\n    return (\n        <style.SidebarWrapper onClick={() => setAddTaskAlert(null)}>\n            <style.SidebarContent\n                key=\"sidebar-content\"\n                style={{ width: width }}\n            >\n                <style.Container>\n                    <style.ListContainer>\n                        <Container\n                            groupName=\"dashboard-buttons\"\n                            getChildPayload={index =>\n                                availableButtons[index]\n                            }\n                        >\n                            {availableButtons.map((button, index) => {\n\n                                return (\n                                    <DashboardSidebarButton\n                                        key={`dashboard-sidebar-button-${button.id}`}\n                                        name={button.name}\n                                        color={button.color}\n                                        task_id={button.task_id}\n                                        id={button.id}\n                                        clickable={clickable}\n                                        onTaskClick={handleTaskClick}\n                                        disabled={!!addTaskAlert}\n                                    />\n                                )\n                            })}\n                        </Container>\n                        <Container\n                            groupName=\"dashboard-buttons\"\n                            getChildPayload={index =>\n                                availableReportButtons[index]\n                            }\n                        >\n                            {availableReportButtons.map((button, index) => {\n                                return (\n                                    <DashboardSidebarButton\n                                        key={`dashboard-sidebar-button-${button.id}`}\n                                        name={button.name}\n                                        color={button.color}\n                                        id={button.id}\n                                        clickable={clickable}\n                                        onTaskClick={handleReportClick}\n                                        disabled={!!addTaskAlert}\n                                    />\n                                )\n                            })}\n                        </Container>\n                    </style.ListContainer>\n\n                    <style.FooterContainer>\n                        {renderTypeButtons()}\n                    </style.FooterContainer>\n                </style.Container>\n\n                <DraggableCore key=\"handle\" onDrag={handleDrag} >\n                    <style.ResizeBar>\n                        <style.ResizeHandle></style.ResizeHandle>\n                    </style.ResizeBar>\n                </DraggableCore>\n            </style.SidebarContent>\n\n            <TaskAddedAlert\n                {...addTaskAlert}\n                visible={!!addTaskAlert}\n            />\n        </style.SidebarWrapper>\n    )\n}\n\nexport default DashboardsSidebar\n","export const postToDashboards = (dashboardName) => {\n    // Requires: buttonID, param, type, buttonName, dashboardName\n    const newDashboard = {\n        \"buttons\": [\n        ],\n        \"name\": dashboardName,\n        \"saved\": false,\n    }\n    return newDashboard     \n}\n\nexport const findDashboardByID = (availableDashboards, ID) => {\n    const dashboardNameIndex = Object.values(availableDashboards).findIndex(d => {\n        return d._id.$oid === ID;\n    })\n    return dashboardNameIndex\n}\n\nexport const handleAvailableTasks = (tasks, station) => {\n    let availableTasks = []\n    Object.values(tasks).forEach(task => {\n        if ((task.type == 'push' || task.type == 'both') && task.load.station == station._id) {\n            availableTasks.push(task)\n        } else if ((task.type == 'pull' || task.type == 'both') && task.unload.station == station._id) {\n            availableTasks.push(task)\n        }\n    })\n    return availableTasks\n}\n\nexport const handleCurrentDashboard = (dashboards, dashboardID) => {\n    let availableDash = []\n    Object.assign(availableDash, dashboards)\n\n    availableDash = Object.values(availableDash)\n\n    const dashboardNameIndex = Object.values(availableDash).findIndex(d => {\n        return d._id.$oid === dashboardID;\n    })\n\n    return availableDash[dashboardNameIndex]\n}","import styled, { css } from 'styled-components'\n\nimport { hexToRGBA, RGB_Linear_Shade, LightenDarkenColor } from '../../../../../../methods/utils/color_utils';\nimport { borderGlowCss, ContainerCss, conditionTextCss } from \"../dashboard_buttons.style\"\n\n\nconst ButtonStyle = css`\n    height: 100%;\n    outline: none;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    &:focus {\n      outline: none;\n    }\n    padding: 0;\n    margin: 0;\n    letter-spacing: 1.5px;\n    border: none;\n    transition: all 0.1s ease 0s;\n    cursor: pointer;\n    outline: none;\n    \n    ${props => props.clickable && !props.disabled &&\n        `&:active {\n            background: ${`linear-gradient(180deg, \n                ${LightenDarkenColor(props.background, -20)} 0%, \n                ${props.background} 50%, \n                ${LightenDarkenColor(props.background, 20)} 100%)`\n            }\n        }`\n    }\n    \n    ${props => props.disabled &&\n        {\n            color: props.theme.bg.quaternary,\n            background: `linear-gradient(180deg, rgba(255,255,255,0.4) 0%, rgba(255,255,255,0.4) 100%), ${LightenDarkenColor(props.background, -60)}`,\n            pointerEvents: \"none\",\n        }\n    }\n    \n`\n\nexport const Header = styled.div`\n    margin: 0;\n    padding: 0;\n    width: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 1.5rem;\n`\n\nexport const ContentContainer = styled.div`\n    display: flex;\n    flex: 2;\n    width: 100%;\n    overflow: hidden;\n`\n\nexport const RobotButton = styled.div`\n    flex: 3;\n    ${ButtonStyle};\n    justify-content: space-around;\n    align-items: center;\n    background: rgba(0,0,0,0);\n    display: flex;\n    flex-direction: column;\n\n`\n\nexport const HumanButton = styled.button`\n    ${ButtonStyle};\n    flex: 1;\n    border-left: 1px solid ${props => props.theme.bg.tertiary};\n    background: ${props => `linear-gradient(180deg, \n                            ${LightenDarkenColor(props.background, -40)} 0%, \n                            ${LightenDarkenColor(props.background, -50)} 50%, \n                            ${LightenDarkenColor(props.background, -60)} 100%)`};\n`\n\nexport const Container = styled.button`\n  ${ContainerCss};\n  \n  // flex layout\n  flex-direction: row;\n\t\n  // padding\n  padding: 0;\n  \n\n`\n\nexport const ConditionText = styled.span`\n    ${conditionTextCss};\n    \n    height: fit-content;\n    display: inline-flex;\n    align-items:center;\n    padding: 0;\n    margin: 0;\n    height: 1.25rem;\n`","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\n// import components\nimport ErrorTooltip from \"../../../../../basic/form/error_tooltip/error_tooltip\";\nimport {SchemaIcon} from \"../../dashboard_editor/button_fields/button_fields.style\";\n\n// Import Styles\nimport * as style from './dashboard_split_button.style'\nimport * as dashboard_buttons_style from '../dashboard_buttons.style'\n\n// import logging\nimport log from '../../../../../../logger'\nimport {DEVICE_CONSTANTS} from \"../../../../../../constants/device_constants\";\n\nconst logger = log.getLogger(\"Dashboards\", \"EditDashboard\");\n\nconst DashboardSplitButton = (props => {\n\n    const {\n        color,\n        title,\n        children,\n        onClick,\n        taskID,\n        disabled,\n        width,\n        height,\n        clickable,\n        hoverable,\n        containerStyle,\n        containerCss,\n        error,\n        iconColor,\n    } = props\n\n    return (\n        <style.Container\n            type={\"button\"}\n            disabled={disabled}\n            width={width}\n            height={height}\n            background={color}\n            borderGlow={taskID === 'hil_success'}\n            style={containerStyle}\n            css={containerCss}\n        >\n            <style.RobotButton\n                background={color}\n                clickable={clickable}\n                onClick={clickable ? () => onClick(taskID, DEVICE_CONSTANTS.MIR_100) : null}\n\n            >\n                <style.ConditionText style={null}>{title}</style.ConditionText>\n\n                <SchemaIcon className={\"icon-cart\"} style={{fontSize: \"1rem\"}} color={iconColor}></SchemaIcon>\n            </style.RobotButton>\n\n            <style.HumanButton\n                clickable={clickable}\n                background={color}\n                onClick={clickable ? () => onClick(taskID, DEVICE_CONSTANTS.HUMAN) : null}\n            >\n                <SchemaIcon className={\"fas fa-user\"} color={iconColor}></SchemaIcon>\n            </style.HumanButton>\n\n            {children && children}\n            <ErrorTooltip\n                visible={error}\n                text={error}\n                ContainerComponent={dashboard_buttons_style.ErrorContainerComponent}\n            />\n        </style.Container>\n    )\n})\n\n// Specifies propTypes\nDashboardSplitButton.propTypes = {\n    clickable: PropTypes.bool,\n    hoverable: PropTypes.bool,\n    title: PropTypes.string,\n    taskID: PropTypes.string,\n    onClick: PropTypes.func,\n    disabled: PropTypes.bool\n};\n\n// Specifies the default values for props:\nDashboardSplitButton.defaultProps = {\n    clickable: true,\n    hoverable: true,\n    title: \"\",\n    taskID: \"\",\n    onClick: () => { },\n    disabled: false\n\n};\n\nexport default (DashboardSplitButton)\n","import React, { useRef, useEffect, useState } from 'react';\n\n// import external components\nimport ReactList from 'react-list';\n\n// import internal components\nimport DashboardButton from \"../../dashboard_buttons/dashboard_button/dashboard_button\";\n\n// style\nimport * as style from \"./dashboard_button_list.style\"\n\n// redux\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getTasks } from '../../../../../../redux/actions/tasks_actions'\n\n// logging\nimport log from \"../../../../../../logger\"\nimport { deepCopy } from \"../../../../../../methods/utils/utils\";\nimport { OPERATION_TYPES, TYPES } from \"../../dashboards_sidebar/dashboards_sidebar\";\nimport { theme } from \"../../../../../../theme\";\nimport DashboardSplitButton from \"../../dashboard_buttons/dashboard_split_button/dashboard_split_button\";\nconst logger = log.getLogger(\"Dashboards\")\n\n\n/*\n*  Renders list of buttons for a Dashboard\n* */\nconst DashboardButtonList = ((props) => {\n\n    const dispatch = useDispatch()\n\n    const dispatchGetTasks = () => dispatch(getTasks())\n\n    const { buttons, addedTaskAlert, onTaskClick } = props\n\n    // ref for list of buttons\n    const listRef = useRef(null);\n\n    // redux state\n    const tasks = useSelector(state => state.tasksReducer.tasks)\n\n    useEffect(() => {\n        dispatchGetTasks()\n    }, [])\n\n    // renders individuals buttons for list\n    const itemRenderer = (index, key) => {\n\n        const currentButton = buttons[index]\n\n        let broken = false\n        let name = currentButton.name\n        const type = currentButton?.type\n        let taskID = currentButton.task_id\n        const task = tasks[taskID]\n        // const associatedTaskId = task?.associated_task\n        const deviceTypes = task?.device_types || []\n\n        // If the task is in tasks or it's a custom task or hil success, then it exists\n        const taskExists = !!tasks[taskID] ? true : taskID === 'custom_task' ? true : taskID === 'hil_success' ? true : false\n\n        var disabled\n        var error\n        var onClick\n\n        const handleRouteClick = () => {\n            disabled = addedTaskAlert || currentButton.deleted || broken || !taskExists\n            error = !taskExists ? \"This buttons task has been deleted.\" : null\n            onClick = (associatedTaskIdArg, deviceType) => {\n                if (taskID === 'custom_task' || taskID === 'hil_success') {\n                    onTaskClick(TYPES.ROUTES.key, associatedTaskIdArg, name, currentButton.custom_task, !!deviceType ? deviceType : currentButton.deviceType)\n                } else {\n                    onTaskClick(TYPES.ROUTES.key, associatedTaskIdArg, name, null, deviceType)\n                }\n            }\n        }\n        switch (type) {\n            case TYPES.ROUTES.key:\n                handleRouteClick()\n                break\n\n            case OPERATION_TYPES.REPORT.key:\n                disabled = addedTaskAlert || currentButton.deleted || broken\n                error = null\n                onClick = () => {\n                    onTaskClick(OPERATION_TYPES.REPORT.key, currentButton.key)\n                }\n                break\n\n            case OPERATION_TYPES.FINISH.key:\n                disabled = addedTaskAlert || currentButton.deleted || broken\n                error = null\n                onClick = () => {\n                    onTaskClick(OPERATION_TYPES.FINISH.key, currentButton.key)\n                }\n                break\n\n            case OPERATION_TYPES.KICK_OFF.key:\n                error = null\n                onClick = () => {\n                    onTaskClick(type)\n                }\n                break\n\n            default:\n                handleRouteClick()\n                break\n        }\n\n        var schema\n        var iconClassName = \"\"\n        var iconColor\n\n        if (type && (typeof type === 'string' || type instanceof String)) {\n            schema = theme.main.schema[type.toLowerCase()]\n            iconClassName = schema?.iconName\n            iconColor = schema?.solid\n        }\n\n        if (deviceTypes.length > 1) return (\n            <DashboardSplitButton\n                title={name}\n                iconColor={\"black\"}\n                iconClassName={iconClassName}\n                key={index}\n                type={type}\n                onClick={onClick}\n                containerStyle={{ height: '4rem', lineHeight: '3rem', marginBottom: '0.5rem', minWidth: '80%' }}\n                hoverable={false}\n                taskID={taskID}\n                color={currentButton.color}\n                disabled={disabled}\n                containerCss={style.ButtonContainerCss}\n                error={error}\n            >\n            </DashboardSplitButton>\n        )\n\n        return (\n            <DashboardButton\n                deviceType={deviceTypes[0]}\n                title={name}\n                iconColor={iconColor}\n                iconClassName={iconClassName}\n                key={index}\n                type={type}\n                onClick={onClick}\n                containerStyle={{ height: '4rem', lineHeight: '3rem', marginBottom: '0.5rem', minWidth: '80%' }}\n                hoverable={false}\n                taskID={taskID}\n                color={currentButton.color}\n                disabled={disabled}\n                containerCss={style.ButtonContainerCss}\n                error={error}\n            />\n        )\n    }\n\n    return (\n        <style.Container>\n            <ReactList\n                ref={listRef}\n                itemRenderer={itemRenderer}\n                length={buttons.length}\n                type='uniform'\n                itemsRenderer={(items, ref) => {\n                    return (\n                        <style.ListContainer ref={ref}>\n                            {items}\n                        </style.ListContainer>\n\n                    )\n                }}\n            />\n        </style.Container>\n    )\n})\n\nexport default DashboardButtonList\n","import styled from \"styled-components\";\n\nexport const ExpandContainer = styled.div`\n    position: absolute;\n    right: ${props => !!props.showTaskQ ? '20rem' : '0rem'};\n    top: 0rem;\n    bottom: 0rem;\n    margin: auto;\n    height: 15rem;\n    width: 10rem;\n    /* z-index: ${props => props.showTaskQ ? 20 : 10}; */\n    z-index: 15;\n    /* border-radius: 1rem 0rem 0rem 1rem; */\n\n    display: flex;\n    align-items: center;\n\n    /* background-color: ${props => props.theme.bg.quinary}; */\n\n\n`\n\nexport const ExpandIcon = styled.i`\n    z-index: 1;\n    position: absolute;\n    right: .5rem;\n    font-size: 2rem;\n\n    &:hover{\n        cursor: pointer;\n    }\n`\n\nexport const ExpandSVG = styled.svg`\n    position: absolute;\n    top: 0rem;\n\n\n    height: 100%;\n    width: 100%;\n`\n\nexport const ExpandPath = styled.path`\n    background-color: ${props => props.theme.bg.quinary};\n\n    &:hover{\n        cursor: pointer;\n    }\n`\n\nexport const TaskQContatiner = styled.div`\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding-top: 1rem;\n    z-index: ${props => props.showTaskQ ? 20 : 10};\n\n    position: absolute;\n    top: 0rem;\n    bottom: 0rem;\n    right: 0rem;\n\n    /* width: 20rem; */\n    width: 100%;\n\n    background-color: ${props => props.theme.bg.quinary};\n\n`\n\nexport const Title = styled.h1`\n    font-family: ${props => props.theme.font.primary};\n    font-size: 2rem;\n    font-weight: 500;\n    color: ${props => props.theme.schema[props.schema].solid};\n`\n\nexport const CloseButton = styled.i`\n    position: absolute;\n    top: 0rem;\n    right: 1rem;\n    font-size: 2.5rem;\n    margin: 1rem;\n`","import React, { Component, useState, useRef } from 'react';\nimport * as styled from './dashboard_task_queue.style'\n\nimport useOnClickOutside from '../../../../../../hooks/useOnClickOutside'\n\nimport theme from '../../../../../../theme'\n\nimport TaskQueue from '../../../../../task_queue/task_queue'\n\nconst DashboardTaskQueue = () => {\n\n    // Ref for click outside\n    const ref = useRef()\n\n    const [showTaskQ, setShowTaskQ] = useState(false)\n\n    useOnClickOutside(ref, () => setShowTaskQ(false))\n\n    const path = `\n        M 1000 0 \n        Q 1000 80 910 140 \n        Q 450 500 910 860 \n        Q 1000 920 1000 1000 \n    `\n    return (\n        <>\n            {!showTaskQ ?\n\n                <styled.ExpandContainer showTaskQ={showTaskQ}>\n                    <styled.ExpandIcon className={'fa fa-tasks'} onClick={() => { setShowTaskQ(!showTaskQ) }} />\n\n                    <styled.ExpandSVG viewBox='0 0 1000 1000'>\n                        <styled.ExpandPath d={path} fill={theme.main.bg.quinary} onClick={() => { setShowTaskQ(!showTaskQ) }} />\n                    </styled.ExpandSVG>\n\n\n\n                    {/* <styled.ExpandIcon className={'fas fa-chevron-' + (!!showTaskQ ? 'right' : 'left')} /> */}\n\n                </styled.ExpandContainer>\n\n                :\n\n                <styled.TaskQContatiner showTaskQ={showTaskQ} ref={ref}>\n                    <styled.Title schema={'taskQueue'}>Task Queue</styled.Title>\n                    <styled.CloseButton\n                        className={'fas fa-times'}\n                        onClick={() => { setShowTaskQ(!showTaskQ) }}\n                    />\n\n\n                    <TaskQueue />\n                </styled.TaskQContatiner>\n            }\n        </>\n    )\n}\n\nexport default DashboardTaskQueue","import styled from \"styled-components\";\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport {RGB_Linear_Shade, hexToRGBA} from \"../../../../../methods/utils/color_utils\";\n\nexport const Container = styled.div`\n    \n    // flex layout\n    display: flex;\n    flex-direction: column;\n    \n    width: 100%;\n    height: 100%;\n    max-height: 100%;\n    // overflow: hidden;\n    \n    background: ${props => props.theme.bg.quaternary};\n    \n`\n\nexport const ButtonContainer = styled.div`\n\n\n`\n\n\nexport const GoBackButton = styled(ArrowBackIosIcon)`\n    color: ${props => props.theme.fg.primary};\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz1};\n    \n    transition: all .25s;\n    &:hover {\n        color: ${props => RGB_Linear_Shade(props.theme.hoverHighlightPer, hexToRGBA(props.theme.fg.primary))};\n        cursor: grab;\n    }\n    margin-left: 1rem;\n    \n`","import styled from 'styled-components';\nimport {TwitterPicker} from \"react-color\";\n// import \"./color_field.css\"\n\nexport const DefaultContainer = styled.div`\n\tposition: absolute;\n\tz-index: 0;\n`\n\n// ===== Color Selector ===== //\nexport const ColorPicker = styled.div`\n    display: flex;\n\tflex-grow: 1;\n\t\n\tposition: absolute;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translate(-50%, -50%);\n\n`\n\nexport const StyledTwitterPicker = styled.div`\n\t&& .twitter-picker {\n\t\tbackground: ${props => props.theme.bg.quinary} !important;\n\t\tborder-radius: 1rem;\n\t}\n\t\n\t.twitter-picker span {\n\t}\n\t\n\t.twitter-picker div {\n\t\tborder-radius: .5rem;\n\t}\n\t\n\tdiv {\n\t\tborder-radius: .5rem;\n\t}\n\t\n\ttwitter-picker {\n\t}\n`\n\n\nexport const ColorButton = styled.button`\n    color: black;\n\tbackground: white;\n\n`\n\nexport const DropdownMenu = styled.div`\n`\n\nexport const ColorOption = styled.button`\n    &:hover {\n      background: ${props => props.color};\n\t}\n\n`\n","import React from \"react\";\n\n// external functions\nimport PropTypes from 'prop-types';\nimport { useField, useFormikContext } from \"formik\";\n// external components\nimport { TwitterPicker } from 'react-color'\n\n// internal components\nimport ErrorTooltip from '../error_tooltip/error_tooltip';\n\n// styles\nimport * as styled from './color_field.style'\n\nconst ColorField = (props) => {\n\n\tconst {\n\t\tContainer,\n\t\ttype,\n\t\tmode,\n\t\tcolors,\n\t\t...rest\n\t} = props\n\n\t// formik related\n\tconst { setFieldValue, setFieldTouched, validateOnChange, validateOnBlur, validateField, validateForm, ...context } = useFormikContext();\n\tconst [field, meta] = useField(props);\n\tconst hasError = meta.touched && meta.error;\n\n\n\treturn (\n\t\t<Container>\n\n\t\t\t{mode === \"twitter\" ?\n\t\t\t\t<styled.StyledTwitterPicker>\n\t\t\t\t<TwitterPicker\n\t\t\t\t\tcolor={ field.value }\n\t\t\t\t\tonChangeComplete={(color)=>{\n\t\t\t\t\t\tsetFieldValue(field.name, color.hex);\n\t\t\t\t\t\tconsole.log(\"ColorField: onChangeComplete: color\",color)\n\t\t\t\t\t}}\n\t\t\t\t\tonChange={(color)=>{\n\t\t\t\t\t\tconsole.log(\"ColorField: onChange: color\",color)\n\t\t\t\t\t\t// setFieldValue(field.name, color.hex);\n\t\t\t\t\t}}\n\t\t\t\t\tstyle={{zIndex: 10}}\n\t\t\t\t\tcolors={colors.map(currColor => currColor.hex)}\n\t\t\t\t\t{...rest}\n\t\t\t\t\ttriangle={\"hide\"}\n\t\t\t\t/>\n\t\t\t\t</styled.StyledTwitterPicker>\n\n\t\t\t\t:\n\t\t\t\t<styled.ColorPicker>\n\t\t\t\t\t<div className=\"dropdown show\" style={{zIndex: '1'}}>\n\t\t\t\t\t\t<styled.ColorButton className=\"btn dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n\t\t\t\t\t\t\tColor\n\t\t\t\t\t\t</styled.ColorButton>\n\n\t\t\t\t\t\t<styled.DropdownMenu className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n\t\t\t\t\t\t\t{colors.map((currColor) => {\n\t\t\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\t\t\thex,\n\t\t\t\t\t\t\t\t\tlabel\n\t\t\t\t\t\t\t\t} = currColor\n\n\t\t\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t\t\t<styled.ColorOption type={type} className=\"dropdown-item\" color={hex} onClick={() => setFieldValue(field.name, hex)}>{label}</styled.ColorOption>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</styled.DropdownMenu>\n\t\t\t\t\t</div>\n\t\t\t\t</styled.ColorPicker>\n\n\t\t\t}\n\n\n\n\n\t\t\t\n\t\t</Container>\n\t);\n};\n\n\n// Specifies propTypes\nColorField.propTypes = {\n\tContainer: PropTypes.elementType,\n\tmode: PropTypes.string,\n\tcolors: PropTypes.arrayOf(PropTypes.string),\n};\n\n// Specifies the default values for props:\nColorField.defaultProps = {\n\tContainer: styled.DefaultContainer,\n\tmode: null,\n\tcolors: [\n\t\t{\n\t\t\thex: '#FF4B4B',\n\t\t\tlabel: \"Red\"\n\t\t},\n\t\t{\n\t\t\thex: '#56d5f5',\n\t\t\tlabel: \"Blue\"\n\t\t},\n\t\t{\n\t\t\thex: '#50de76',\n\t\t\tlabel: \"Green\"\n\t\t},\n\t\t{\n\t\t\thex: '#f2ae41',\n\t\t\tlabel: \"Orange\"\n\t\t},\n\t\t{\n\t\t\thex: '#c7a0fa',\n\t\t\tlabel: \"Purple\"\n\t\t}\n\t]\n};\n\nexport default ColorField;\n","import styled, {css} from 'styled-components'\nimport Modal from 'react-modal';\nimport {Form} from \"formik\";\nimport {LightenDarkenColor} from \"../../../../../../methods/utils/color_utils\";\n\n\nconst borderGlowCss = css`\n    --border-width: .1rem;\n    background: none;\n\n    @keyframes moveGradient {\n        50% {\n          background-position: 100% 50%;\n        }\n      }\n\n    border-radius: var(--border-width);\n\n    &::after {\n    position: absolute;\n    content: \"\";\n    top: calc(-1 * var(--border-width));\n    left: calc(-1 * var(--border-width));\n    z-index: -1;\n    width: calc(100% + var(--border-width) * 2);\n    height: calc(100% + var(--border-width) * 2);\n    background: linear-gradient(\n        60deg,\n        /* hsl(224, 85%, 66%), */\n        /* hsl(269, 85%, 66%), */\n        /* hsl(314, 85%, 66%), */\n        /* hsl(359, 85%, 66%), */\n        hsl(44, 85%, 66%),\n        hsl(89, 85%, 66%),\n        hsl(134, 85%, 66%),\n        hsl(179, 85%, 66%)\n    );\n    background-size: 300% 300%;\n    background-position: 0 50%;\n    border-radius: calc(2 * var(--border-width));\n    animation: moveGradient 4s alternate infinite;\n}\n`\n\nexport const TextboxDiv = styled.div`\n    background-color: ${props => props.theme.bg.quinary};\n    border: none;\n    font-size: ${props => props.theme.fontSize.sz4};\n    font-family: ${props => props.theme.font.primary};\n    font-weight: 500;\n    min-height: 2rem;\n    display: flex;\n    flex-grow: 1;\n    color: ${props => props.theme.bg.octonary};\n    padding: .5rem;\n    border-radius: .5rem;\n\n    box-shadow: 0 0.1rem 0.2rem 0rem rgba(0,0,0,0.1) !important;\n    border-bottom: 2px solid ${props => props.theme.bg.quinary};\n\n    &:focus {\n        background-color: ${props => LightenDarkenColor(props.theme.bg.quinary, 10)};\n        border-bottom: 2px solid ${props => !!props.schema ? props.theme.schema[props.schema].solid : props.theme.fg.primary};\n        color: ${props => props.theme.bg.octonary};\n        outline: none !important;\n    }\n\n    &::placeholder {\n        font-family: ${props => props.theme.font.secondary};\n        color: ${props => props.theme.bg.senary};\n    }\n`;\n\nexport const Container = styled(Modal)`\n\toutline: none !important;\n\toutline-offset: none !important;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translate(-50%, -50%);\n\tright: auto;\n\tbottom: auto;\n\t\n\tposition: absolute;\n\t\n\tz-index: 50;\n\t\n\tmin-width: 95%;\n\tmax-width: 95%;\n\tmax-height: 95%;\n\t// height: 95%;\n\t\n\tcolor: ${props => props.theme.bg.octonary};\n\t\n\tdisplay: flex;\n\tflex-direction: column;\n\t\n\tcolor: ${props => props.theme.bg.octonary};\n\tborder-radius: 1rem;\n\toverflow: hidden;\n`;\n\nexport const HeaderContainer = styled.div`\n\twidth: 100%;\n\tdisplay: flex;\n\tflex-direction: column;\n\tborder-width: 0;\n\tborder-bottom-width: thin;\n\tborder-color: black;\n\tborder-style: solid;\n\tmargin-bottom: 2rem;\n`;\n\nexport const Header = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\tpadding: 0;\n\tmargin: 0;\n\theight: 3rem;\n\tbackground: ${props => props.theme.bg.quinary};\n\t\n`\nexport const Label = styled.span`\n\tpadding-left: 1rem;\n\tfont-size: ${props => props.theme.fontSize.sz3};\n\tmargin-bottom: .25rem;\n`\n\nexport const StyledForm = styled(Form)`\n    display: flex;\n    flex: 1;\n    flex-direction: column;\n    width: 100%;\n    max-width: 100%;\n    position: relative;\n    overflow: scroll;\n`;\n\nexport const Title = styled.h2`\n\tflex: 2;\n\theight: 100%;\n\tmin-height: 100%;\n\tmargin: 0;\n\tpadding: 0;\n\ttext-align: center;\n\tdisplay: inline-flex;\n\tjustify-content: center;\n\talign-items: center;\n\t\n\tfont-size: ${props => props.theme.fontSize.sz2};\n\tfont-weight: ${props => props.theme.fontWeight.bold};\n`;\n\nexport const TextContainer = styled.div`\n\twidth: 100%;\n\tdisplay: flex;\n\tflex-direction: column;\n\tmargin-bottom: 1.5rem;\n`;\n\nexport const BodyContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tpadding: 1rem;\n\tflex: 1;\n\tjustify-content: space-between;\n\toverflow: hidden;\n\t\n\tbackground: ${props => props.theme.bg.quaternary};\n`\n\nexport const ButtonForm = styled.div`\n\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: center;\n\tmin-height: fit-content;\n`;\n\nexport const IconSelectorContainer = styled.div`\n\tbackground: ${props => props.theme.bg.quinary};\n\toverflow: auto;\n\tmin-height: 2rem;\n\twidth: 100%;\n\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tflex-wrap: wrap;\n\tborder-radius: .5rem;\n`\n\nexport const ContentContainer = styled.div`\n\tbackground: ${props => props.theme.bg.quinary};\n\tborder-radius: 1rem;\n\tdisplay: flex;\n\tflex-direction: column;\n\toverflow: hidden;\n\tmargin-bottom: 1rem;\n\talign-items: center;\n`\nexport const ReportButtonsContainer = styled.div`\n\tdisplay: flex;\n\t\n\tflex-direction: column;\n\talign-items: center;\n\t// justify-content: center;\n\tflex-wrap: nowrap;\n\toverflow: auto;\n\tmin-height: 5rem;\n\twidth: 100%;\n`\n\nexport const ConditionText = styled.span`\n\tfont: ${props => props.theme.font.primary};\n\tfont-size: ${props => props.theme.fontSize.sz3};\n\tmax-width: 100 %;\n\toverflow: hidden;\n\ttext-overflow: ellipsis;\n`\n\nexport const RightContentContainer = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: ${props => props.theme.bg.senary};\n    width: 4rem;\n    border-left: 1px solid ${props => props.theme.bg.tertiary};\n    height: 100%;\n    // background-color: ${props => props.theme.bg.septenary};\n    \n    // padding-left: 1rem;\n    // border-top-right-radius: 0.6rem;\n    // border-bottom-right-radius: 0.6rem;\n    \n    \n`\n\nexport const ButtonContainer = styled.button`\n  position: relative;\n  user-select: none;\n  \n  // flex layout\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  // flex-grow: 1;\n  width: 90%;\n  overflow: hidden;\n  height: 4rem;\n  min-height: 4rem;\n  line-height: 3rem;\n  min-width: 80%;\n\t\n  background: ${props => `linear-gradient(180deg, \n                            ${LightenDarkenColor(props.background, 20)} 0%, \n                            ${props.background} 50%, \n                            ${LightenDarkenColor(props.background, -20)} 100%)`};\n  border-radius: 0.6rem;\n  padding: 0;\n\t\n\t\n  // margins\n  margin: .5rem 0 .5rem 0;\n\t\n  // padding\n  // padding: 0.5rem 1rem 0.5rem 1rem;\n  \n  outline: none;\n  &:focus {\n    outline: none;\n  }\n\n  letter-spacing: 1.5px;\n  border: none;\n  box-shadow: ${props => props.clickable ? 'none' : `2px 2px 2px rgba(0, 0, 0, 0.5)`};\n  transition: all 0.1s ease 0s;\n  cursor: pointer;\n  outline: none;\n    \n  &:hover {\n    ${props => props.hoverable && !props.clickable &&\n\t{\n\t\tboxShadow: \"3px 3px 3px rgba(0, 0, 0, 0.5)\",\n\t\ttransform: \"translateY(-1px)\",\n\t}\n}\n  }\n\n  ${props => props.clickable && !props.disabled &&\n\t`&:active {\n      background: ${`linear-gradient(180deg, \n          ${LightenDarkenColor(props.background, -20)} 0%, \n          ${props.background} 50%, \n          ${LightenDarkenColor(props.background, 20)} 100%)`\n\t}\n    }`\n}\n  \n  ${props => props.disabled &&\n\t{\n\t\tcolor: props.theme.bg.quaternary,\n\t\tbackground: `linear-gradient(180deg, rgba(255,255,255,0.4) 0%, rgba(255,255,255,0.4) 100%), ${LightenDarkenColor(props.background, -60)}`,\n\t\tpointerEvents: \"none\",\n\t}\n}\n\n    // --border-width: 3px;\n    ${props => props.borderGlow &&\n\tborderGlowCss\n}\n\n${props => props.css};\n\n`\n\nexport const AddNewButtonContainer = styled.div`\n\tdisplay: flex;\n\tjustify-content: center;\n\twidth: 100%;\n\tborder-bottom:  ${props => props.showBorder && `1px solid` + props.theme.bg.tertiary};\n`\n\nexport const ColorFieldContainer = styled.div`\n\tposition: relative;\n\t\n`\n\n\nexport const Icon = styled.i`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin: auto auto;\n    color: green;\n    fill: green;\n    font-size: 7rem;\n    width: 14rem;\n    &:hover {\n        cursor: pointer;\n    }\n\n    &:active{\n        filter: brightness(85%)\n    }\n`","import styled from 'styled-components';\n\nexport const DefaultViewComponent = styled.div`\n    // background: purple;\n    width: 5rem;\n`\n\n","import React from \"react\";\n\nimport PropTypes from 'prop-types';\nimport { useField, useFormikContext } from \"formik\";\n\nimport MinusButton from \"../../minus_button/minus_button\";\n\n// import styles\nimport * as style from './delete_field_button.style'\n\nconst DeleteFieldButton = ({\n\tContentContainer,\n\tstyle,\n\tButtonComponent,\n\tindex,\n\tViewComponent,\n\t\t\t\t\t\t\t   viewProps,\n\t...props }) => {\n\n\tconst { setValues, values, setFieldValue, setFieldTouched, validateOnChange, validateOnBlur, validateField, validateForm, ...context } = useFormikContext();\n\tconst [field, meta] = useField(props);\n\n\treturn (\n\t\t<ButtonComponent\n\t\t\t{...props}\n\t\t\tonClick={()=>{\n\t\t\t\tconsole.log(\"DeleteFieldButton: values before\",values)\n\t\t\t\tconsole.log(\"DeleteFieldButton: values[field.name]\",values[field.name])\n\t\t\t\tvalues[field.name].splice(index, 1)\n\t\t\t\tvalidateForm()\n\t\t\t}}\n\t\t>\n\t\t\t<ViewComponent\n\t\t\t\t{...viewProps}\n\t\t\t/>\n\t\t</ButtonComponent>\n\t);\n};\n\n// Specifies propTypes\nDeleteFieldButton.propTypes = {\n};\n\n// Specifies the default values for props:\nDeleteFieldButton.defaultProps = {\n\tButtonComponent: MinusButton,\n\tViewComponent: style.DefaultViewComponent\n};\n\nexport default DeleteFieldButton;\n","import React, {useEffect, useState} from \"react\";\nimport Modal from 'react-modal';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport uuid from 'uuid'\n\n// external components\nimport {Formik} from \"formik\";\n\n// internal components\nimport ColorField from \"../../../../../basic/form/color_field/color_field\";\nimport WidgetButton from \"../../../../../basic/widget_button/widget_button\";\nimport Button from \"../../../../../basic/button/button\";\nimport Textbox from \"../../../../../basic/textbox/textbox\";\nimport TextField from \"../../../../../basic/form/text_field/text_field\";\n\n// utils\nimport {faClassNames} from \"../../../../../../methods/utils/class_name_utils\";\nimport {FORM_MODES} from \"../../../../../../constants/scheduler_constants\";\n\n// actions\nimport {putDashboard} from \"../../../../../../redux/actions/dashboards_actions\";\n\n// styles\nimport * as styled from './report_modal.style'\nimport * as style from \"../../dashboard_buttons/dashboard_button/dashboard_button.style\";\nimport * as buttonFieldStyles from \"../../dashboard_editor/button_fields/button_fields.style\";\nimport DeleteFieldButton from \"../../../../../basic/form/delete_field_button/delete_field_button\";\nimport DashboardButton from \"../../dashboard_buttons/dashboard_button/dashboard_button\";\nimport {postReportEvent, putReportEvent} from \"../../../../../../redux/actions/report_event_actions\";\nimport {reportEventSchema, scheduleSchema} from \"../../../../../../methods/utils/form_schemas\";\nimport {DASHBOARD_BUTTON_COLORS} from \"../../../../../../constants/dashboard_contants\";\n\nModal.setAppElement('body');\n\nconst NewButtonForm = (props) => {\n\n    const {\n        cancel,\n        dashboard,\n        buttonId,\n        editing\n    } = props\n\n    const report_buttons = dashboard?.report_buttons || []\n\n\n    const dispatch = useDispatch()\n    const onPutDashboard = (dashboardCopy, dashboardId) =>dispatch(putDashboard(dashboardCopy, dashboardId))\n\n    const editingButton = report_buttons.find((currButton) => currButton._id === buttonId)\n    const _id = editingButton?._id\n    const description = editingButton?.description\n    const iconClassName = editingButton?.iconClassName\n    const color  = editingButton?.color\n    const label  = editingButton?.label\n\n    const formMode = _id ? FORM_MODES.UPDATE : FORM_MODES.CREATE\n\n    const handleSubmit = (values, formMode) => {\n        // extract values and default values\n        const description = values?.description || \"\"\n        const iconClassName = values?.iconClassName\n        const color = values?.color || \"red\"\n        const label = values?.label || \"\"\n        const old_report_buttons = dashboard?.report_buttons || []\n\n        // handle logic for editing buttons\n        if(editing) {\n\n            // update existing button\n            if(formMode === FORM_MODES.UPDATE ) {\n\n                const updatedDashboard = {\n                    ...dashboard,\n                    report_buttons: old_report_buttons.map((currButton) => {\n\n                        // if this is the button being updating, update values\n                        if(currButton._id === _id) {\n                            return {\n                                ...currButton,\n                                description,\n                                iconClassName,\n                                color,\n                                label\n                            }\n                        }\n\n                        // if not current button being editing, return original\n                        return currButton\n                    })\n                }\n\n                // update dashboard\n                onPutDashboard(updatedDashboard, dashboard._id.$oid)\n            }\n\n            // create new button\n            else if(formMode === FORM_MODES.CREATE) {\n                const updatedDashboard = {\n                    ...dashboard,\n                    report_buttons: [\n                        // spread original buttons and add new one with form values\n                        ...old_report_buttons,\n                        {\n                            _id: uuid.v4(),\n                            description,\n                            iconClassName,\n                            color,\n                            label\n                        }\n                    ]\n\n                }\n\n                // update dashboard\n                onPutDashboard(updatedDashboard, dashboard._id.$oid)\n            }\n\n            // close form\n            cancel()\n        }\n\n        // handle submit logic for sending report\n        else {\n\n        }\n    }\n\n    return(\n        <Formik\n            initialValues={{\n                label: label ? label : \"\",\n                description:  description ? description : \"\",\n                iconClassName: iconClassName ? iconClassName : null,\n                color: color ? color : \"red\"\n            }}\n\n            // validation control\n            validationSchema={reportEventSchema}\n            validateOnChange={true}\n            validateOnMount={false} // leave false, if set to true it will generate a form error when new data is fetched\n            validateOnBlur={true}\n            enableReinitialize={true} // leave false, otherwise values will be reset when new data is fetched for editing an existing item\n            onSubmit={async (values, { setSubmitting, setTouched, resetForm }) => {\n                // set submitting to true, handle submit, then set submitting to false\n                // the submitting property is useful for eg. displaying a loading indicator\n                setSubmitting(true)\n                await handleSubmit(values, formMode)\n                setTouched({}) // after submitting, set touched to empty to reflect that there are currently no new changes to save\n                setSubmitting(false)\n                resetForm()\n            }}\n        >\n            {formikProps => {\n                const {\n                    values,\n                    setFieldValue\n                } = formikProps\n\n                const {\n                    color,\n                    label,\n                    iconClassName\n                } = values\n\n                return(\n                    <styled.StyledForm>\n                        {/*uncomment for widget style instead of big rectangles*/}\n                        {/*<WidgetButton*/}\n                        {/*    containerStyle={{alignSelf: \"center\"}}*/}\n                        {/*    label={label}*/}\n                        {/*    color={color}*/}\n                        {/*    iconClassName={iconClassName}*/}\n                        {/*    selected={false}*/}\n                        {/*/>*/}\n                        {editing &&\n                        <DashboardButton\n                            title={label}\n                            type={\"button\"}\n                            iconClassName={iconClassName}\n                            iconColor={color}\n                            containerStyle={{height: '4rem', minHeight: \"4rem\", lineHeight: '3rem', width: '80%', alignSelf: \"center\", marginBottom: \"1rem\"}}\n                            hoverable={false}\n                            color = {color}\n                            disabled = {false}\n                        />\n                        }\n\n                        <div style={{marginBottom: \"1rem\"}}>\n                            <styled.Label>Label</styled.Label>\n                            {editing &&\n                                <TextField\n                                    name=\"label\"\n                                    type=\"text\"\n                                    placeholder=\"Label...\"\n                                    InputComponent={Textbox}\n                                    lines={1}\n                                    style={{borderRadius: \".5rem\"}}\n                                />\n                                // :\n                                // <styled.TextboxDiv\n                                //     name=\"label\"\n                                //     type=\"text\"\n                                //     placeholder=\"Label...\"\n                                //     // value={label}\n                                //     lines={1}\n                                //     style={{marginBottom: \"1rem\"}}\n                                //     readonly\n                                // >\n                                //     {label}\n                                // </styled.TextboxDiv>\n                            }\n                        </div>\n\n                        {editing ?\n                            <div\n                                style={{\n                                    marginBottom: \"1rem\"\n                                }}\n                            >\n                                <styled.Label>Description</styled.Label>\n                                <TextField\n                                    name=\"description\"\n                                    type=\"text\"\n                                    placeholder=\"Description...\"\n                                    InputComponent={Textbox}\n                                    lines={2}\n                                    style={{borderRadius: \"0.5rem\"}}\n                                />\n                            </div>\n                            :\n                            description ?\n                                <div\n                                    style={{\n                                        marginBottom: \"1rem\"\n                                    }}\n                                >\n                                    <styled.Label>Description</styled.Label>\n                                    <styled.TextboxDiv\n                                        name=\"description\"\n                                        type=\"text\"\n                                        placeholder=\"Description...\"\n                                        readonly\n                                    >\n                                        {description}\n                                    </styled.TextboxDiv>\n                                </div>\n                                :\n                                null\n                        }\n\n                        {/*{!editing &&*/}\n                        {/*<div>*/}\n                        {/*    <styled.Label>Comments</styled.Label>*/}\n                        {/*    <TextField*/}\n                        {/*        name=\"comments\"*/}\n                        {/*        type=\"text\"*/}\n                        {/*        placeholder=\"enter additonal comments...\"*/}\n                        {/*        InputComponent={Textbox}*/}\n                        {/*        lines={5}*/}\n                        {/*        style={{marginBottom: \"1rem\", borderRadius: \".5rem\"}}*/}\n                        {/*    />*/}\n                        {/*</div>*/}\n                        {/*}*/}\n\n                        {editing &&\n                        <div\n                            style={{\n                                marginBottom: \"1rem\"\n                            }}\n                        >\n                            <styled.Label>Color</styled.Label>\n                            <ColorField\n                                name={\"color\"}\n                                Container={styled.ColorFieldContainer}\n                                type={\"button\"}\n                                mode={\"twitter\"}\n                                colors={DASHBOARD_BUTTON_COLORS}\n                            />\n                        </div>\n                        }\n\n                        {/*{editing &&*/}\n                        {/*<div style={{overflow: \"hidden\", marginBottom: \"1rem\", display: \"flex\", flexDirection: \"column\"}}>*/}\n                        {/*    <styled.Label>Icon</styled.Label>*/}\n                        {/*    <styled.IconSelectorContainer>*/}\n                        {/*        {faClassNames.map((currClassName, index) => {*/}\n                        {/*            currClassName = \"fas fa-\" + currClassName*/}\n                        {/*            const selected = currClassName === values.iconClassName*/}\n\n                        {/*            return(*/}\n                        {/*                <WidgetButton*/}\n                        {/*                    key={currClassName}*/}\n                        {/*                    containerStyle={{*/}\n                        {/*                        margin: \"1rem\",*/}\n                        {/*                    }}*/}\n                        {/*                    color={color}*/}\n                        {/*                    iconClassName={currClassName}*/}\n                        {/*                    selected={selected}*/}\n                        {/*                    onClick={()=>{*/}\n                        {/*                        setFieldValue(\"iconClassName\", currClassName)*/}\n                        {/*                    }}*/}\n                        {/*                />*/}\n                        {/*            )*/}\n                        {/*        })}*/}\n                        {/*    </styled.IconSelectorContainer>*/}\n                        {/*</div>*/}\n                        {/*}*/}\n\n                        <styled.ButtonForm>\n                            <Button\n                                tertiary\n                                schema={\"dashboards\"}\n                                onClick={cancel}\n                                label={\"Cancel\"}\n                                type=\"button\"\n                            />\n\n                            <Button\n                                primary\n                                schema={\"dashboards\"}\n                                label={editing ? \"Save\" : \"Send\"}\n                                type=\"submit\"\n                            />\n                        </styled.ButtonForm>\n                    </styled.StyledForm>\n                )\n            }}\n        </Formik>\n    )\n}\n\nconst ReportModal = (props) => {\n\n    const {\n        isOpen,\n        title,\n        close,\n        dashboard,\n        onSubmit\n    } = props\n\n    // get current buttons, default to empty array\n    const report_buttons = dashboard?.report_buttons || []\n\n    const dispatch = useDispatch()\n    const onPutDashboard = (dashboardCopy, dashboardId) =>dispatch(putDashboard(dashboardCopy, dashboardId))\n    const onPostReportEvent = (reportEvent) =>dispatch(postReportEvent(reportEvent))\n    const onPutReportEvent = (id, reportEvent) =>dispatch(putReportEvent(id, reportEvent))\n\n    // boolean - true if no buttons, false otherwise\n    const noButtons = report_buttons.length === 0\n\n    const [addingNew, setAddingNew] = useState(false) // edit button form\n    const [editing, setEditing] = useState(noButtons)  // default editing to true if there are currently no buttons\n    const [sending, setSending] = useState(false) // sending report\n    const [buttonId, setButtonId] = useState(null) // button being edited\n    const [submitting, setSubmitting] = useState(false)\n\n    const reportEvents = useSelector(state => { return state.reportEventsReducer.reportEvents })\n\n    const sendReport = async (button) => {\n        setSubmitting(true)\n        const {\n            _id,\n            iconClassName,\n            color,\n            ...rest\n        } = button\n\n        const reportEvent = {\n            // save identifying info\n            dashboard_id: dashboard._id.$oid,\n            station_id: dashboard.station,\n            report_button_id: _id,\n            date: new Date().getTime(),\n\n            // spread rest of buttons data - commented out for now, get remaining data from actual report button when its needed\n            // ...rest\n        }\n\n        // post reportEvent\n        const result = await onPostReportEvent(reportEvent)\n\n        // handle request failed\n        if(result instanceof Error) {\n\n            onSubmit(button.label, false)\n        }\n\n        // handle request success\n        else {\n            onSubmit(button.label, true)\n        }\n        setSubmitting(false)\n        close()\n    }\n\n    return (\n        <styled.Container\n            isOpen={isOpen}\n            contentLabel=\"Confirm Delete Modal\"\n            onRequestClose={close}\n            style={{\n                overlay: {\n                    zIndex: 500\n                },\n                content: {\n\n                }\n            }}\n        >\n            <styled.Header>\n                <styled.Title>{title}</styled.Title>\n\n                <Button\n                    onClick={close}\n                    schema={'dashboards'}\n                >\n                    <i className=\"fa fa-times\" aria-hidden=\"true\"/>\n                </Button>\n            </styled.Header>\n\n            <styled.BodyContainer>\n                {(addingNew || sending) ?\n                    <NewButtonForm\n                        cancel={()=>{\n                            setAddingNew(false)\n                            setSending(false)\n                            setButtonId(null)\n                        }}\n                        dashboard={dashboard}\n                        buttonId={buttonId}\n                        editing={editing}\n                    />\n                    :\n                    <div style={{display: \"flex\", flexDirection: \"column\", overflow: \"hidden\"}}>\n                        <styled.ContentContainer>\n                            {editing &&\n                            <styled.AddNewButtonContainer\n                                showBorder={!noButtons}\n                            >\n                                <Button\n                                    style={{margin: \"1rem 0rem\"}}\n                                    primary\n                                    schema={\"dashboards\"}\n                                    onClick={()=>setAddingNew(true)}\n                                    label={\"+\"}\n                                    type=\"button\"\n                                />\n                            </styled.AddNewButtonContainer>\n                            }\n\n                            {!noButtons &&\n                            <styled.ReportButtonsContainer>\n\n                                {report_buttons.map((currReportButton, ind) => {\n\n                                    const description = currReportButton?.description || \"\"\n                                    const label = currReportButton?.label\n                                    const iconClassName = currReportButton?.iconClassName || \"\"\n                                    const color = currReportButton?.color || \"red\"\n                                    const _id = currReportButton?._id\n                                    return(\n                                        <DashboardButton\n                                            title={label}\n                                            key={_id}\n                                            type={null}\n                                            iconClassName={iconClassName}\n                                            iconColor={color}\n                                            onClick={()=>{\n                                                if(editing) {\n                                                    setAddingNew(true)\n                                                    setButtonId(_id)\n                                                }\n                                                else {\n                                                    // setSending(true)\n                                                    // setButtonId(_id)\n                                                    sendReport(currReportButton)\n                                                }\n                                            }}\n                                            containerStyle={{height: '4rem', minHeight: \"4rem\", lineHeight: '3rem', margin: '0.5rem 0', width: '80%'}}\n                                            hoverable={false}\n                                            taskID = {null}\n                                            color = {color}\n                                            disabled = {false}\n                                        >\n                                            {editing &&\n                                                <div\n                                                    style={{zIndex: 500}}\n                                                    onClick={(event)=>{\n                                                        // remove button\n                                                        event.preventDefault()\n                                                        event.stopPropagation()\n\n\n                                                        const updatedDashboard = {\n                                                            ...dashboard,\n                                                            // filter through buttons, keep all but one with matching id of current button\n                                                            report_buttons: report_buttons.filter((currOldButton) => currOldButton._id !== _id)\n                                                        }\n\n                                                        // update dashboard\n                                                        onPutDashboard(updatedDashboard, dashboard._id.$oid)\n                                                    }}\n                                                >\n                                                    <i\n                                                        style={{color: \"red\", position: \"absolute\", fontSize: \"1.5rem\", top: 5, right: 5}}\n                                                        className=\"fas fa-times-circle\"\n\n                                                    />\n                                                </div>\n\n                                            }\n                                        </DashboardButton>\n                                    )\n\n                                    // uncomment for widget style instead of big rectangles\n                                    // return(\n                                    //     <styled.ButtonContainer\n                                    //         background={color}\n                                    //         onClick={()=>{\n                                    //             if(editing) {\n                                    //               setAddingNew(true)\n                                    //                 setButtonId(_id)\n                                    //             }\n                                    //             else {\n                                    //                 setSending(true)\n                                    //                 setButtonId(_id)\n                                    //             }\n                                    //\n                                    //         }}\n                                    //\n                                    //     >\n                                    //         <div style={{flex: 1}}></div>\n                                    //\n                                    //         <div style={{flex: 1, display: \"flex\", justifyContent: \"center\"}}>\n                                    //             <styled.ConditionText>{label}</styled.ConditionText>\n                                    //         </div>\n                                    //\n                                    //         <div style={{flex: 1, display: \"flex\", justifyContent: \"flex-end\", height: \"100%\"}}>\n                                    //             {iconClassName &&\n                                    //             <styled.RightContentContainer>\n                                    //\n                                    //                 <buttonFieldStyles.SchemaIcon className={iconClassName}\n                                    //                                               color={color}></buttonFieldStyles.SchemaIcon>\n                                    //             </styled.RightContentContainer>\n                                    //             }\n                                    //\n                                    //         </div>\n                                    //\n                                    //         {editing &&\n                                    //             <i\n                                    //                 style={{color: \"red\", position: \"absolute\", top: 5, right: 5}}\n                                    //                 className=\"fas fa-times-circle\"\n                                    //                 onClick={(event)=>{\n                                    //                     // remove button\n                                    //                     event.preventDefault()\n                                    //                     event.stopPropagation()\n                                    //\n                                    //\n                                    //                     const updatedDashboard = {\n                                    //                         ...dashboard,\n                                    //                         // filter through buttons, keep all but one with matching id of current button\n                                    //                         report_buttons: report_buttons.filter((currOldButton) => currOldButton._id !== _id)\n                                    //                     }\n                                    //\n                                    //                     // update dashboard\n                                    //                     onPutDashboard(updatedDashboard, dashboard._id.$oid)\n                                    //                 }}\n                                    //             />\n                                    //         }\n                                    //             {/*<WidgetButton*/}\n                                    //             {/*    key={iconClassName}*/}\n                                    //             {/*    containerStyle={{*/}\n                                    //             {/*        // margin: \"1rem\",*/}\n                                    //             {/*    }}*/}\n                                    //             {/*    color={color}*/}\n                                    //             {/*    iconClassName={iconClassName}*/}\n                                    //             {/*    label={label}*/}\n                                    //             {/*    onClick={()=>{*/}\n                                    //             {/*        if(editing) {*/}\n                                    //             {/*            setAddingNew(true)*/}\n                                    //             {/*            setButtonId(_id)*/}\n                                    //             {/*        }*/}\n                                    //             {/*        else {*/}\n                                    //             {/*            setSending(true)*/}\n                                    //             {/*            setButtonId(_id)*/}\n                                    //             {/*        }*/}\n                                    //\n                                    //             {/*    }}*/}\n                                    //             {/*>*/}\n                                    //             {/*    {editing &&*/}\n                                    //             {/*    <i*/}\n                                    //             {/*        style={{color: \"red\", position: \"absolute\", top: 5, right: 5}}*/}\n                                    //             {/*        className=\"fas fa-times-circle\"*/}\n                                    //             {/*        onClick={(event)=>{*/}\n                                    //             {/*            // remove button*/}\n                                    //\n                                    //             {/*            event.preventDefault()*/}\n                                    //             {/*            event.stopPropagation()*/}\n                                    //\n                                    //\n                                    //             {/*            const updatedDashboard = {*/}\n                                    //             {/*                ...dashboard,*/}\n                                    //             {/*                // filter through buttons, keep all but one with matching id of current button*/}\n                                    //             {/*                report_buttons: report_buttons.filter((currOldButton) => currOldButton._id !== _id)*/}\n                                    //             {/*            }*/}\n                                    //\n                                    //             {/*            // update dashboard*/}\n                                    //             {/*            onPutDashboard(updatedDashboard, dashboard._id.$oid)*/}\n                                    //             {/*        }}*/}\n                                    //             {/*    />*/}\n                                    //             {/*    }*/}\n                                    //             {/*</WidgetButton>*/}\n                                    //\n                                    //         {/*</div>*/}\n                                    //\n                                    //\n                                    //     </styled.ButtonContainer>\n                                    //\n                                    // )\n                                })}\n                            </styled.ReportButtonsContainer>\n                            }\n                        </styled.ContentContainer>\n\n                        <styled.ButtonForm>\n                            <Button\n                                tertiary\n                                schema={\"dashboards\"}\n                                onClick={close}\n                                label={\"Close\"}\n                                type=\"button\"\n                            />\n                            <Button\n                                primary\n                                schema={\"dashboards\"}\n                                onClick={()=>setEditing(!editing)}\n                                label={editing ? \"Done\" : \"Edit\"}\n                                type=\"button\"\n                            />\n                        </styled.ButtonForm>\n                    </div>\n                }\n            </styled.BodyContainer>\n        </styled.Container>\n    );\n};\n\nexport default ReportModal\n","import styled, {css} from 'styled-components'\nimport Modal from 'react-modal';\n\nexport const Container = styled(Modal)`\n\toutline: none !important;\n\toutline-offset: none !important;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translate(-50%, -50%);\n\tright: auto;\n\tbottom: auto;\n\tposition: absolute;\n\tz-index: 50;\n\tmin-width: 95%;\n\tmax-width: 95%;\n\tmax-height: 95%;\n\tcolor: ${props => props.theme.bg.octonary};\n\tdisplay: flex;\n\tflex-direction: column;\n\tcolor: ${props => props.theme.bg.octonary};\n\tborder-radius: 1rem;\n\toverflow: hidden;\n`\n\nexport const HeaderMainContentContainer = styled.div`\n\tdisplay: flex;\n  \tflex-direction: column;\n\tjustify-content: center;\n  align-items: center;\n  flex: 1;\n`\n\nexport const Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0;\n  margin: 0;\n  //height: 5rem;\n  padding: .5rem 1rem;\n  background: ${props => props.theme.bg.quinary};\n`\n\nexport const Title = styled.h2`\n  height: 100%;\n  min-height: 100%;\n  margin: 0;\n  padding: 0;\n  text-align: center;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  font-size: ${props => props.theme.fontSize.sz2};\n  font-weight: ${props => props.theme.fontWeight.bold};\n  margin-bottom: 1rem;\n`;\n\nexport const BodyContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tpadding: 1rem;\n\tflex: 1;\n\tjustify-content: space-between;\n\toverflow: hidden;\n\tbackground: ${props => props.theme.bg.quaternary};\n`\n\nexport const ButtonsContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: center;\n\tmin-height: fit-content;\n`;\n\n\nexport const ContentContainer = styled.div`\n\tbackground: ${props => props.theme.bg.quinary};\n\tborder-radius: 1rem;\n\tdisplay: flex;\n\tflex-direction: column;\n\toverflow: hidden;\n\tmargin-bottom: 1rem;\n\talign-items: center;\n  justify-content: center;\n`\n\nexport const NoButtonsText = styled.span`\n\tfont: ${props => props.theme.font.primary};\n\tfont-size: ${props => props.theme.fontSize.sz3};\n`\n\nexport const FadeLoaderCSS = css`\n \n`;\n\nexport const ReportButtonsContainer = styled.div`\n\talign-items: center;\n\toverflow: auto;\n\tmin-height: 5rem;\n\twidth: 100%;\n  \n  ${props => props.isButtons ? buttonsCss : noButtonsCss }\n`\n\nconst buttonsCss = css`\n`\n\nconst noButtonsCss = css`\n  overflow: auto;\n\tdisplay: flex;\n  flex-drection: column;\n  justify-content: center;\n`\n\n\n\n","import React, {useEffect, useState} from \"react\";\n\n// external components\nimport Modal from 'react-modal';\nimport {useDispatch, useSelector} from \"react-redux\";\n\n// internal components\nimport Button from \"../../../../../basic/button/button\";\nimport DashboardButton from \"../../dashboard_buttons/dashboard_button/dashboard_button\";\n\n// actions\nimport {getCards, getProcessCards, putCard} from \"../../../../../../redux/actions/card_actions\";\n\n// styles\nimport * as styled from './kick_off_modal.style'\nimport {useTheme} from \"styled-components\";\nimport {getProcesses} from \"../../../../../../redux/actions/processes_actions\";\nimport FadeLoader from \"react-spinners/FadeLoader\";\nimport CardEditor from \"../../../../../side_bar/content/cards/card_editor/card_editor\";\nimport Textbox from \"../../../../../basic/textbox/textbox\";\nimport {SORT_MODES} from \"../../../../../../constants/common_contants\";\nimport {sortBy} from \"../../../../../../methods/utils/card_utils\";\nimport Card from \"../../../../../side_bar/content/cards/card/card\";\n\nModal.setAppElement('body');\n\nconst KickOffModal = (props) => {\n\n    const {\n        isOpen,\n        title,\n        close,\n        dashboard,\n        onSubmit\n    } = props\n\n    // get current buttons, default to empty array\n    const dashboardId = dashboard?._id?.$oid\n\n    const theme = useTheme()\n\n    const dispatch = useDispatch()\n    // const onGetProcessCards = (processId) => dispatch(getProcessCards(processId))\n    const dispatchGetCards = () => dispatch(getCards())\n    const dispatchGetProcesses = () => dispatch(getProcesses());\n    const onPutCard = async (card, ID) => await dispatch(putCard(card, ID))\n\n    const kickOffEnabledInfo = useSelector(state => { return state.dashboardsReducer.kickOffEnabledDashboards[dashboardId] })\n    const processCards = useSelector(state => { return state.cardsReducer.processCards })\n    const processes = useSelector(state => { return state.processesReducer.processes }) || {}\n    const routes = useSelector(state => { return state.tasksReducer.tasks }) || {}\n\n    const [lotFilterValue, setLotFilterValue] = useState('')\n    const [shouldFocusLotFilter, setShouldFocusLotFilter] = useState(false)\n    const [submitting, setSubmitting] = useState(false)\n    const [showLotEditor, setShowLotEditor] = useState(false)\n    const [didLoadData, setDidLoadData] = useState(false)\n    const [availableKickOffCards, setAvailableKickOffCards] = useState([])\n    const [sortMode, setSortMode] = useState(SORT_MODES.END_DESCENDING)\n    const isButtons = availableKickOffCards.length > 0\n    const stationId = dashboard.station\n\n    /*\n    * handles the logic for when a kick-off button is pressed\n    *\n    * When a kick-off button is pressed, the card is to be moved from the queue of the current process it resides in\n    * to the first station in the process\n    *\n    * This is done by updating the cards station_id and route_id to those of the first station in the first route\n    * */\n    const onButtonClick = async (card) => {\n\n        // extract card attributes\n        const {\n            bins,\n            name: cardName,\n            process_id,\n            _id: cardId,\n        } = card\n\n        // get process of card\n        const cardProcess = processes[process_id]\n\n        // get routes of process\n        const processRoutes = cardProcess.routes\n\n        // get id of first route\n        var firstRouteId = null\n        if(processRoutes && Array.isArray(processRoutes)) firstRouteId = processRoutes[0]\n\n        // get first route\n        const firstRoute = routes[firstRouteId]\n\n        // extract route attributes\n        const {\n            load: {\n                station: loadStation\n            }\n        } = firstRoute || {}\n\n        // update card\n        if(firstRouteId && firstRoute && loadStation) {\n\n            // extract first station's bin and queue bin from bins\n            const {\n                [loadStation]: firstStationBin,\n                [\"QUEUE\"]: queueBin,\n               ...unalteredBins\n            } = bins || {}\n\n            const queueBinCount = queueBin?.count ? queueBin.count : 0\n            const firstStationCount = firstStationBin?.count ? firstStationBin.count : 0\n\n            // udpated card will maintain all of the cards previous attributes with the station_id and route_id updated\n            const updatedCard = {\n                ...card,                                // spread unaltered attributes\n                bins: {\n                    ...unalteredBins,                   // spread unaltered bins\n                    [loadStation]: {\n                        ...firstStationBin,              // spread unaltered attributes of station bin if it exists\n                        count: parseInt(queueBinCount) + parseInt(firstStationCount)    // increment first station's count by the count of the queue\n                    }\n                },\n            }\n\n            // send update action\n            const result = await onPutCard(updatedCard, cardId)\n\n            var requestSuccessStatus = false\n\n            // check if request was successful\n            if(!(result instanceof Error)) {\n                requestSuccessStatus = true\n            }\n\n            onSubmit(cardName, requestSuccessStatus)\n            setSubmitting(false)\n            close()\n        }\n    }\n\n\n    /*\n    * renders an array of buttons for each kick off lot\n    * */\n    const renderKickOffButtons = () => {\n        return availableKickOffCards\n            .filter((currLot) => {\n                const {\n                    name: currLotName,\n                } = currLot || {}\n\n                if(\n                    currLotName\n                        .toLowerCase()\n                        .includes(lotFilterValue.toLowerCase())\n                ) {\n                    return true\n                }\n                else {\n                    return false\n                }\n            })\n            .map((currCard, cardIndex) => {\n                const {\n                    _id: lotId,\n                    name,\n                    start_date,\n                    end_date,\n                    bins = {}\n                } = currCard\n\n                const count = bins[\"QUEUE\"]?.count || 0\n\n                return(\n                        <Card\n                            name={name}\n                            start_date={start_date}\n                            end_date={end_date}\n                            // objectName={objectName}\n                            count={count}\n                            id={lotId}\n                            index={cardIndex}\n                            onClick={()=>{\n                                onButtonClick(currCard)\n                            }}\n                            containerStyle={{marginBottom: \"0.5rem\", width: \"80%\", margin: '.5rem auto .5rem auto'}}\n                        />\n                )\n        })\n    }\n\n    const loadData = async () => {\n        const cardsResult = await dispatchGetCards()\n        const processesResult = await dispatchGetProcesses()\n\n        if(!(cardsResult instanceof Error) && !(processesResult instanceof Error)) {\n            setDidLoadData(true)\n        }\n    }\n\n    /**\n     * When modal is opened, get all cards associated with the processes\n     *\n     *\n     */\n    useEffect(() => {\n        loadData()\n    }, [])\n\n    /**\n     * Get the cards actually available for kick off\n     *\n     * For a card to be available for kick off, it must have at least 1 item in the 'queue' bin\n     *\n     * This function creates a temporary array for storing kick off cards as it checks each card of each process associated with the station\n     *\n     * This function loops through every card belonging to a process that the current station is the first station of\n     * Each card's bins attribute is checked to see if it contains any items in the \"QUEUE\" bin\n     *\n     * if a card is found to have items in the \"QUEUE\" bin, it is added to the list of kick off cards\n     *\n     * finally, local state variable availableKickOffCards is set to the list of kick off cards for later use\n     *\n     */\n    useEffect(() => {\n        var tempAvailableCards = []\n\n        if(kickOffEnabledInfo && Array.isArray(kickOffEnabledInfo)) kickOffEnabledInfo.forEach((currProcessId) => {\n            const currProcessCards = processCards[currProcessId]\n\n            var filteredCards = []\n            if(currProcessCards) filteredCards = Object.values(currProcessCards).filter((currCard) => {\n                // currCard.station_id === \"QUEUE\"\n                if(currCard.bins && currCard.bins[\"QUEUE\"]) return true\n            })\n            tempAvailableCards = tempAvailableCards.concat(filteredCards)\n        })\n\n\n        if(sortMode) {\n            sortBy(tempAvailableCards, sortMode)\n        }\n        setAvailableKickOffCards(tempAvailableCards)\n\n    }, [processCards])\n\n    // if number of available lots >= 5, auto focus lot filter text box\n    useEffect(() => {\n        if(availableKickOffCards.length >= 5 ) {\n            setShouldFocusLotFilter(true)\n        }\n    }, [availableKickOffCards.length])\n\n    return (\n        <styled.Container\n            isOpen={isOpen}\n            contentLabel=\"Kick Off Modal\"\n            onRequestClose={close}\n            style={{\n                overlay: {\n                    zIndex: 500\n                },\n                content: {\n\n                }\n            }}\n        >\n            {showLotEditor &&\n            <CardEditor\n                isOpen={true}\n                onAfterOpen={null}\n                processOptions={kickOffEnabledInfo}\n                showProcessSelector={true}\n                cardId={null}\n                processId={null}\n                // binId={null}\n                close={()=>{\n                    setShowLotEditor(false)\n                    // setSelectedCard(null)\n                }}\n            />\n            }\n            <styled.Header>\n                <styled.HeaderMainContentContainer>\n                    <styled.Title>{title}</styled.Title>\n\n                    <div style={{display: \"flex\", alignItems: \"center\", justifyContent: \"center\", width: \"40rem\", minWidth: \"10rem\", maxWidth: \"50%\"}}>\n                        <Textbox\n                            focus={shouldFocusLotFilter}\n                            placeholder='Filter lots...'\n                            onChange={(e) => {\n                                setLotFilterValue(e.target.value)\n                            }}\n                            style={{background: theme.bg.quaternary }}\n                            textboxContainerStyle={{flex: 1}}\n                        />\n                    </div>\n                </styled.HeaderMainContentContainer>\n\n                <Button\n                    onClick={close}\n                    schema={'dashboards'}\n                >\n                    <i className=\"fa fa-times\" aria-hidden=\"true\"/>\n                </Button>\n            </styled.Header>\n\n            <styled.BodyContainer>\n                    <div style={{display: \"flex\", flexDirection: \"column\", overflow: \"hidden\"}}>\n                        <styled.ContentContainer>\n                            <styled.ReportButtonsContainer isButtons={isButtons}>\n                                {isButtons ?\n                                    renderKickOffButtons()\n                                    :\n                                    didLoadData ?\n                                    <styled.NoButtonsText>There are currently no lots in the queue available for kick off.</styled.NoButtonsText>\n                                        :\n                                        <FadeLoader\n                                            css={styled.FadeLoaderCSS}\n                                            height={5}\n                                            width={3}\n                                            loading={true}\n                                        />\n                                }\n\n                            </styled.ReportButtonsContainer>\n                        </styled.ContentContainer>\n\n                        <styled.ButtonsContainer>\n                            <Button\n                                tertiary\n                                schema={\"dashboards\"}\n                                onClick={close}\n                                label={\"Close\"}\n                                type=\"button\"\n                            />\n                            <Button\n                                // tertiary\n                                // secondary\n                                schema={\"dashboards\"}\n                                // onClick={close}\n                                onClick={()=>setShowLotEditor(true)}\n                                label={\"Add Lot\"}\n                                type=\"button\"\n                            />\n                        </styled.ButtonsContainer>\n                    </div>\n            </styled.BodyContainer>\n        </styled.Container>\n    );\n};\n\nexport default KickOffModal\n","import styled, {css} from 'styled-components'\nimport Modal from 'react-modal';\n\nexport const Container = styled(Modal)`\n\toutline: none !important;\n\toutline-offset: none !important;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translate(-50%, -50%);\n\tright: auto;\n\tbottom: auto;\n\tposition: absolute;\n\tz-index: 50;\n\tmin-width: 95%;\n\tmax-width: 95%;\n\tmax-height: 95%;\n\tcolor: ${props => props.theme.bg.octonary};\n\tdisplay: flex;\n\tflex-direction: column;\n\tcolor: ${props => props.theme.bg.octonary};\n\tborder-radius: 1rem;\n\toverflow: hidden;\n`\n\nexport const Header = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\tpadding: 0;\n\tmargin: 0;\n\t//height: 5rem;\n  padding: .5rem 1rem;\n\tbackground: ${props => props.theme.bg.quinary};\n`\n\nexport const HeaderMainContentContainer = styled.div`\n\tdisplay: flex;\n  \tflex-direction: column;\n\tjustify-content: center;\n  align-items: center;\n  flex: 1;\n`\nexport const Title = styled.h2`\n\t//flex: 2;\n  \t\n\theight: 100%;\n\tmin-height: 100%;\n\tmargin: 0;\n\tpadding: 0;\n\ttext-align: center;\n\tdisplay: inline-flex;\n\tjustify-content: center;\n\talign-items: center;\n\tfont-size: ${props => props.theme.fontSize.sz2};\n\tfont-weight: ${props => props.theme.fontWeight.bold};\n  margin-bottom: 1rem;\n`;\n\nexport const BodyContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tpadding: 1rem;\n\tflex: 1;\n\tjustify-content: space-between;\n\toverflow: hidden;\n\tbackground: ${props => props.theme.bg.quaternary};\n`\n\nexport const ButtonsContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: center;\n\tmin-height: fit-content;\n`;\n\n\nexport const ContentContainer = styled.div`\n\tbackground: ${props => props.theme.bg.quinary};\n\tborder-radius: 1rem;\n\tdisplay: flex;\n\tflex-direction: column;\n\toverflow: hidden;\n\tmargin-bottom: 1rem;\n\talign-items: center;\n`\n\nexport const NoButtonsText = styled.span`\n\tfont: ${props => props.theme.font.primary};\n\tfont-size: ${props => props.theme.fontSize.sz3};\n`\nconst buttonsCss = css`\n`\n\nconst noButtonsCss = css`\n  overflow: auto;\n\tdisplay: flex;\n  flex-drection: column;\n  justify-content: center;\n`\n\nexport const ReportButtonsContainer = styled.div`\n  align-items: center;\n  overflow: auto;\n  min-height: 5rem;\n  width: 100%;\n\n  ${props => props.isButtons ? buttonsCss : noButtonsCss }\n`\n\n\n\n\n\n","import React, {useEffect, useState} from \"react\";\n\n// external components\nimport Modal from 'react-modal';\nimport {useDispatch, useSelector} from \"react-redux\";\n\n// internal components\nimport Button from \"../../../../../basic/button/button\";\nimport DashboardButton from \"../../dashboard_buttons/dashboard_button/dashboard_button\";\n\n// actions\nimport {getCards, getProcessCards, putCard} from \"../../../../../../redux/actions/card_actions\";\n\n// styles\nimport * as styled from './finish_modal.style'\nimport {useTheme} from \"styled-components\";\nimport {getProcesses} from \"../../../../../../redux/actions/processes_actions\";\nimport Textbox from \"../../../../../basic/textbox/textbox\";\nimport {SORT_MODES} from \"../../../../../../constants/common_contants\";\nimport {sortBy} from \"../../../../../../methods/utils/card_utils\";\nimport Card from \"../../../../../side_bar/content/cards/card/card\";\n\nModal.setAppElement('body');\n\nconst FinishModal = (props) => {\n\n    const {\n        isOpen,\n        title,\n        close,\n        dashboard,\n        onSubmit\n    } = props\n\n    // get current buttons, default to empty array\n    const dashboardId = dashboard?._id?.$oid\n\n    const theme = useTheme()\n\n    const dispatch = useDispatch()\n    // const onGetProcessCards = (processId) => dispatch(getProcessCards(processId))\n    const dispatchGetCards = () => dispatch(getCards())\n    const dispatchGetProcesses = () => dispatch(getProcesses())\n    const onPutCard = async (card, ID) => await dispatch(putCard(card, ID))\n\n    const finishEnabledDashboard = useSelector(state => { return state.dashboardsReducer.finishEnabledDashboards[dashboardId] })\n    const processCards = useSelector(state => { return state.cardsReducer.processCards })\n    const processes = useSelector(state => { return state.processesReducer.processes }) || {}\n    const routes = useSelector(state => { return state.tasksReducer.tasks }) || {}\n\n    const [lotFilterValue, setLotFilterValue] = useState('')\n    const [shouldFocusLotFilter, setShouldFocusLotFilter] = useState(false)\n    const [submitting, setSubmitting] = useState(false)\n    const [availableKickOffCards, setAvailableKickOffCards] = useState([])\n    const [sortMode, setSortMode] = useState(SORT_MODES.END_DESCENDING)\n\n    const isButtons = availableKickOffCards.length > 0\n\n    const stationId = dashboard.station\n\n    /*\n    * handles the logic for when a kick-off button is pressed\n    *\n    * When a kick-off button is pressed, the card is to be moved from the queue of the current process it resides in\n    * to the first station in the process\n    *\n    * This is done by updating the cards station_id and route_id to those of the first station in the first route\n    * */\n    const onButtonClick = async (card) => {\n\n        // extract card attributes\n        const {\n            bins,\n            name: cardName,\n            process_id,\n            _id: cardId,\n        } = card\n\n        // update card\n        if(true) {\n\n            // extract first station's bin and queue bin from bins\n            const {\n                [stationId]: currentStationBin,\n                [\"FINISH\"]: finishBin,\n               ...unalteredBins\n            } = bins || {}\n\n            const queueBinCount = finishBin?.count ? finishBin.count : 0\n            const currentStationBinCount = currentStationBin?.count ? currentStationBin.count : 0\n\n            // udpated card will maintain all of the cards previous attributes with the station_id and route_id updated\n            const updatedCard = {\n                ...card,                                // spread unaltered attributes\n                bins: {\n                    ...unalteredBins,                   // spread unaltered bins\n                    [\"FINISH\"]: {\n                        ...finishBin,              // spread unaltered attributes of station bin if it exists\n                        count: parseInt(queueBinCount) + parseInt(currentStationBinCount)    // increment first station's count by the count of the queue\n                    }\n                },\n            }\n\n            // send update action\n            const result = await onPutCard(updatedCard, cardId)\n\n            var requestSuccessStatus = false\n\n            // check if request was successful\n            if(!(result instanceof Error)) {\n                requestSuccessStatus = true\n            }\n\n            onSubmit(cardName, requestSuccessStatus)\n            setSubmitting(false)\n            close()\n        }\n    }\n\n\n    /*\n    * renders an array of buttons for each kick off lot\n    * */\n    const renderKickOffButtons = () => {\n        return availableKickOffCards\n            .filter((currLot) => {\n                const {\n                    name: currLotName,\n                } = currLot || {}\n\n                if(\n                    currLotName\n                        .toLowerCase()\n                        .includes(lotFilterValue.toLowerCase())\n                ) {\n                    return true\n                }\n                else {\n                    return false\n                }\n            })\n            .map((currCard, cardIndex) => {\n                const {\n                    _id: lotId,\n                    // count = 0,\n                    name,\n                    start_date,\n                    end_date,\n                    bins = {}\n                } = currCard\n\n                const count = bins[stationId]?.count\n\n                return(\n                    <Card\n                        name={name}\n                        start_date={start_date}\n                        end_date={end_date}\n                        // objectName={objectName}\n                        count={count}\n                        id={lotId}\n                        index={cardIndex}\n                        onClick={()=>{\n                            onButtonClick(currCard)\n                        }}\n                        containerStyle={{marginBottom: \"0.5rem\", width: \"80%\", margin: '.5rem auto .5rem auto'}}\n                    />\n                )\n        })\n    }\n\n    /**\n     * When modal is opened, get all cards associated with the processes\n     *\n     *\n     */\n    useEffect(() => {\n        dispatchGetCards()\n        dispatchGetProcesses()\n    }, [])\n\n    /**\n     * Get the cards actually available for kick off\n     *\n     * For a card to be available for kick off, it must have at least 1 item in the 'queue' bin\n     *\n     * This function creates a temporary array for storing kick off cards as it checks each card of each process associated with the station\n     *\n     * This function loops through every card belonging to a process that the current station is the first station of\n     * Each card's bins attribute is checked to see if it contains any items in the \"QUEUE\" bin\n     *\n     * if a card is found to have items in the \"QUEUE\" bin, it is added to the list of kick off cards\n     *\n     * finally, local state variable availableKickOffCards is set to the list of kick off cards for later use\n     *\n     */\n    useEffect(() => {\n        var tempAvailableCards = []\n\n        if(finishEnabledDashboard && Array.isArray(finishEnabledDashboard)) finishEnabledDashboard.forEach((currProcessId) => {\n            const currProcessCards = processCards[currProcessId]\n\n            var filteredCards = []\n            if(currProcessCards) filteredCards = Object.values(currProcessCards).filter((currCard) => {\n                // currCard.station_id === \"QUEUE\"\n                if(currCard.bins && currCard.bins[stationId]) return true\n            })\n            tempAvailableCards = tempAvailableCards.concat(filteredCards)\n        })\n\n        if(sortMode) {\n            sortBy(tempAvailableCards, sortMode)\n        }\n        setAvailableKickOffCards(tempAvailableCards)\n\n    }, [processCards])\n\n    // if number of available lots >= 5, auto focus lot filter text box\n    useEffect(() => {\n        if(availableKickOffCards.length >= 5 ) {\n            setShouldFocusLotFilter(true)\n        }\n    }, [availableKickOffCards.length])\n\n    return (\n        <styled.Container\n            isOpen={isOpen}\n            contentLabel=\"Kick Off Modal\"\n            onRequestClose={close}\n            style={{\n                overlay: {\n                    zIndex: 500\n                },\n                content: {\n\n                }\n            }}\n        >\n            <styled.Header>\n                <styled.HeaderMainContentContainer>\n                <styled.Title>{title}</styled.Title>\n\n                    <div style={{display: \"flex\", alignItems: \"center\", justifyContent: \"center\", width: \"40rem\", minWidth: \"10rem\", maxWidth: \"50%\"}}>\n                        <Textbox\n                            focus={shouldFocusLotFilter}\n                            placeholder='Filter lots...'\n                            onChange={(e) => {\n                                setLotFilterValue(e.target.value)\n                            }}\n                            style={{flex: 1, background: theme.bg.quaternary }}\n                        />\n                    </div>\n                </styled.HeaderMainContentContainer>\n\n                <Button\n                    onClick={close}\n                    schema={'dashboards'}\n                >\n                    <i className=\"fa fa-times\" aria-hidden=\"true\"/>\n                </Button>\n            </styled.Header>\n\n            <styled.BodyContainer>\n                    <div style={{display: \"flex\", flexDirection: \"column\", overflow: \"hidden\"}}>\n                        <styled.ContentContainer>\n                            <styled.ReportButtonsContainer isButtons={isButtons}>\n                                {isButtons ?\n                                    renderKickOffButtons()\n                                    :\n                                    <styled.NoButtonsText>No available lots.</styled.NoButtonsText>\n                                }\n\n                            </styled.ReportButtonsContainer>\n                        </styled.ContentContainer>\n\n                        <styled.ButtonsContainer>\n                            <Button\n                                tertiary\n                                schema={\"dashboards\"}\n                                onClick={close}\n                                label={\"Close\"}\n                                type=\"button\"\n                            />\n                        </styled.ButtonsContainer>\n                    </div>\n            </styled.BodyContainer>\n        </styled.Container>\n    );\n};\n\nexport default FinishModal\n","import React, { Component, useState, useEffect } from 'react';\n\nimport { useHistory, useParams } from 'react-router-dom'\n\n// import external functions\nimport { connect, useDispatch, useSelector } from 'react-redux';\n\n// Import components\nimport DashboardButtonList from \"./dashboard_button_list/dashboard_button_list\";\nimport TaskAddedAlert from \"./task_added_alert/task_added_alert\";\nimport DashboardTaskQueue from './dashboard_task_queue/dashboard_task_queue'\n\n// Import Utils\nimport { ADD_TASK_ALERT_TYPE, PAGES } from \"../../../../../constants/dashboard_contants\";\nimport { deepCopy } from '../../../../../methods/utils/utils'\nimport uuid from 'uuid';\n\n// Import Hooks\nimport useWindowSize from '../../../../../hooks/useWindowSize'\n\n// Import API\nimport { postStatus } from '../../../../../api/status_api'\n\n// Import Actions\nimport { handlePostTaskQueue, postTaskQueue, putTaskQueue } from '../../../../../redux/actions/task_queue_actions'\nimport { dashboardOpen, setDashboardKickOffProcesses } from '../../../../../redux/actions/dashboards_actions'\n\nimport * as localActions from '../../../../../redux/actions/local_actions'\n\n// Import styles\nimport * as pageStyle from '../dashboards_header/dashboards_header.style'\nimport * as style from './dashboard_screen.style'\n\nimport DashboardsHeader from \"../dashboards_header/dashboards_header\";\n\n// import logging\nimport log from \"../../../../../logger\";\nimport { OPERATION_TYPES, TYPES } from \"../dashboards_sidebar/dashboards_sidebar\";\nimport ReportModal from \"./report_modal/report_modal\";\nimport KickOffModal from \"./kick_off_modal/kick_off_modal\";\nimport FinishModal from \"./finish_modal/finish_modal\";\nimport { getProcesses } from \"../../../../../redux/actions/processes_actions\";\nimport { isEmpty } from \"../../../../../methods/utils/object_utils\";\n\n\n\nconst logger = log.getLogger(\"DashboardsPage\");\n\nconst widthBreakPoint = 1026;\n\n\nconst DashboardScreen = (props) => {\n\n    const {\n        dashboardId,\n        setShowSidebar,\n        showSidebar,\n        setEditingDashboard,\n    } = props\n\n    // redux state\n    const status = useSelector(state => { return state.statusReducer.status })\n    const currentDashboard = useSelector(state => { return state.dashboardsReducer.dashboards[dashboardId] })\n    const taskQueue = useSelector(state => state.taskQueueReducer.taskQueue)\n    const devices = useSelector(state => state.devicesReducer.devices)\n    const positions = useSelector(state => state.positionsReducer.positions)\n    const tasks = useSelector(state => state.tasksReducer.tasks)\n    const hilResponse = useSelector(state => state.taskQueueReducer.hilResponse)\n    const stopAPICalls = useSelector(state => state.localReducer.stopAPICalls)\n\n    //actions\n    const dispatchGetProcesses = () => dispatch(getProcesses())\n\n    // self contained state\n    const [addTaskAlert, setAddTaskAlert] = useState(null);\n    const [reportModal, setReportModal] = useState(null);\n    const [allowKickOff, setAllowKickOff] = useState(false);\n\n    // actions\n    const dispatch = useDispatch()\n    const onDashboardOpen = (bol) => dispatch(dashboardOpen(bol))\n    const onHandlePostTaskQueue = (props) => dispatch(handlePostTaskQueue(props))\n    const onHILResponse = (response) => dispatch({ type: 'HIL_RESPONSE', payload: response })\n    const onLocalHumanTask = (bol) => dispatch({ type: 'LOCAL_HUMAN_TASK', payload: bol })\n    const onPutTaskQueue = async (item, id) => await dispatch(putTaskQueue(item, id))\n    const dispatchStopAPICalls = (bool) => dispatch(localActions.stopAPICalls(bool))\n\n    const history = useHistory()\n    const params = useParams()\n\n    const stationID = params.stationID\n    const dashboardID = params.dashboardID\n    const widgetPage = params.widgetPage\n    const size = useWindowSize()\n    const windowWidth = size.width\n\n    const mobileMode = windowWidth < widthBreakPoint;\n\n\n    /**\n     * When a dashboard screen is loaded, tell redux that its open\n     * On unmount tell redux that its not loaded\n     *\n     * Used in app.js and widget pages to make dashboard screen full size in mobile mode\n     */\n    useEffect(() => {\n        onDashboardOpen(true)\n        dispatchGetProcesses()\n        return () => {\n            onDashboardOpen(false)\n        }\n    }, [])\n\n\n    // If current dashboard is undefined, it probably has been deleted. So go back to locations just incase the station has been deleted too\n    if (currentDashboard === undefined) {\n        history.push(`/locations`)\n        return (\n            <>\n            </>\n        )\n    }\n\n    /**\n     * Handles buttons associated with selected dashboard\n     *\n     * If it's a AMR device dashboard, add a extra buttons\n     * The extra buttons are:\n     * 'Send to charge location'\n     * 'Send to Idle Location'\n     *\n     * If there's a human task in the human task Q (see human_task_queue_actions for more details)\n     * and if the the tasks unload location is the dashboards station, then show a unload button\n     */\n    const handleDashboardButtons = () => {\n        let { buttons } = currentDashboard\t// extract buttons from dashboard\n\n        // filter out buttons with missing task\n        buttons = buttons.filter((currButton) => {\n            const {\n                task_id,\n                type\n            } = currButton\n\n            if (task_id && !(tasks[task_id])) {\n                // console.error('Task does not exist! Hiding button from dashboard')\n                return false\n            }\n            return true\n        })\n\n        // If this dashboard belongs to a device and the device is a cart, add some unique buttons\n        if (!!devices[stationID] && devices[stationID].device_model === 'MiR100') {\n            const device = devices[stationID]\n\n            // If the device has an idle location, add a button for it\n            if (!!device.idle_location) {\n                buttons = [\n                    ...buttons,\n                    {\n                        'name': 'Send to Idle Location',\n                        'color': '#FF4B4B',\n                        'task_id': 'custom_task',\n                        'custom_task': {\n                            'type': 'position_move',\n                            'position': device.idle_location,\n                            'device_type': 'MiR_100',\n                        },\n                        'deviceType': 'MiR_100',\n                        'id': 'custom_task_idle'\n                    }\n                ]\n            }\n\n            // Map through positions and add a button if it's a charge position\n            Object.values(positions).map((position, ind) => {\n                if (position.type === 'charger_position') {\n                    buttons = [\n                        ...buttons,\n                        {\n                            'name': position.name,\n                            'color': '#FFFF4B',\n                            'task_id': 'custom_task',\n                            'custom_task': {\n                                'type': 'position_move',\n                                'position': position._id,\n                                'device_type': 'MiR_100',\n                            },\n                            'deviceType': 'MiR_100',\n                            'id': `custom_task_charge_${ind}`\n                        }\n                    ]\n                }\n            })\n\n        }\n        // Else if the task q contains a human task that is unloading, show an unload button\n        else if (Object.values(taskQueue).length > 0) {\n\n            // Map through each item and see if it's showing a station, station Id is matching the current station and a human task\n            Object.values(taskQueue).map((item, ind) => {\n                // If it is matching, add a button the the dashboard for unloading\n                if (!!item.hil_station_id && item.hil_station_id === stationID && hilResponse !== item._id && item?.device_type === 'human') {\n                    buttons = [\n                        ...buttons,\n                        {\n                            'name': item.hil_message,\n                            'color': '#90eaa8',\n                            'task_id': 'hil_success',\n                            'custom_task': {\n                                ...item\n                            },\n                            'id': `custom_task_charge_${ind}`\n                        }\n                    ]\n                }\n            })\n        }\n\n        return buttons\n    }\n\n    const handleRouteClick = async (Id, name, custom, deviceType) => {\n\n        // If a custom task then add custom task key to task q\n        if (Id === 'custom_task') {\n            setAddTaskAlert({\n                type: ADD_TASK_ALERT_TYPE.TASK_ADDED,\n                label: \"Task Added to Queue\",\n                message: name\n            })\n\n            // clear alert after timeout\n            return setTimeout(() => setAddTaskAlert(null), 1800)\n        }\n\n        // Else if its a hil success, execute the HIL success function\n        else if (Id === 'hil_success') {\n            return handleHilSuccess(custom)\n        }\n\n        let inQueue = false\n        Object.values(taskQueue).map((item) => {\n            // If its in the Q and not a handoff, then alert the user saying its already there\n            if (item.task_id === Id && !tasks[item.task_id].handoff) inQueue = true\n        })\n\n        // add alert to notify task has been added\n        if (inQueue) {\n            // display alert notifying user that task is already in queue\n            setAddTaskAlert({\n                type: ADD_TASK_ALERT_TYPE.TASK_EXISTS,\n                label: \"Alert! Task Already in Queue\",\n                message: `'${name}' not added`,\n            })\n\n            // clear alert after timeout\n            return setTimeout(() => setAddTaskAlert(null), 1800)\n        }\n        else {\n            if (deviceType !== 'human') {\n                setAddTaskAlert({\n                    type: ADD_TASK_ALERT_TYPE.TASK_ADDED,\n                    label: \"Task Added to Queue\",\n                    message: name\n                })\n\n                // clear alert after timeout\n                return setTimeout(() => setAddTaskAlert(null), 1800)\n            }\n        }\n    }\n\n    /**\n     * Handles event of task click\n     *\n     * Currently there are 3 types of tasks that can be clicked on a dashboard\n     *\n     * 1) Custom task\n     * This task is used to send the cart to a position that does not belong to a station (You cant make a route to a non-station position)\n     * It takes in the custom value, which is the position info, and sends the cart to that position from it's current location\n     *\n     * 2) HIL Success\n     * This is a button that shows up on dashboard when a human tasks unload location is the current dashboard\n     * Instead of showing a HIL modal, it shows an unload button\n     * The reason why is that humans locations are not known so a HIL modal would have to be on the screen the whole time instead of when a autonomous cart arives\n     *\n     * 3) Basic Routes\n     * This is the standard button for a dashboard that just executes the route\n     * If the task is already in the q, then show a warning label and dont add it\n     *\n     *\n     * @param {*} Id\n     * @param {*} name\n     * @param {*} custom\n     */\n    const handleTaskClick = async (type, Id, name, custom, deviceType) => {\n        switch (type.toUpperCase()) {\n            case TYPES.ROUTES.key:\n                if (!(Id === 'hil_success')) {\n                    onHandlePostTaskQueue({ dashboardID, tasks, deviceType, taskQueue, Id, name, custom })\n                }\n                handleRouteClick(Id, name, custom, deviceType)\n                break\n            case TYPES.OPERATIONS.key:\n                handleOperationClick()\n                break\n            case OPERATION_TYPES.REPORT.key:\n                setReportModal(OPERATION_TYPES.REPORT.key)\n                break\n            case OPERATION_TYPES.KICK_OFF.key:\n                setReportModal(OPERATION_TYPES.KICK_OFF.key)\n                break\n            case OPERATION_TYPES.FINISH.key:\n                setReportModal(OPERATION_TYPES.FINISH.key)\n                break\n            default:\n                break\n        }\n\n\n    }\n\n    const handleOperationClick = () => {\n        // setReportModal()\n    }\n\n    const handleReportClick = () => {\n    }\n\n\n    // Posts HIL Success to API\n    const handleHilSuccess = async (item) => {\n\n        let newItem = {\n            ...item,\n            hil_response: true,\n            // quantity: quantity,\n        }\n\n        const ID = deepCopy(item._id)\n\n        delete newItem._id\n        delete newItem.dashboard\n\n        // This is used to make the tap of the HIL button respond quickly\n        // TODO: This may not be necessary here\n        onHILResponse(ID)\n        setTimeout(() => onHILResponse(''), 2000)\n\n        await onPutTaskQueue(newItem, ID)\n\n    }\n\n    return (\n        <style.Container\n        // clear alert\n        // convenient to be able to clear the alert instead of having to wait for the timeout to clear it automatically\n        // onClick={() => setAddTaskAlert(null)}\n        >\n            {(reportModal === OPERATION_TYPES.REPORT.key) &&\n                <ReportModal\n                    isOpen={!!reportModal}\n                    title={\"Send Report\"}\n                    close={() => setReportModal(null)}\n                    dashboard={currentDashboard}\n                    onSubmit={(name, success) => {\n\n                        // set alert\n                        setAddTaskAlert({\n                            type: success ? ADD_TASK_ALERT_TYPE.REPORT_SEND_SUCCESS : ADD_TASK_ALERT_TYPE.REPORT_SEND_FAILURE,\n                            label: success ? \"Report Sent\" : \"Failed to Send Report\",\n                            message: name ? `\"` + name + `\"` : null\n                        })\n\n                        // clear alert\n                        setTimeout(() => setAddTaskAlert(null), 1800)\n                    }}\n                />\n            }\n\n            {(reportModal === OPERATION_TYPES.KICK_OFF.key) &&\n                <KickOffModal\n                    isOpen={true}\n                    stationId={stationID}\n                    title={\"Kick Off\"}\n                    close={() => setReportModal(null)}\n                    dashboard={currentDashboard}\n                    onSubmit={(name, success) => {\n                        // set alert\n                        setAddTaskAlert({\n                            type: success ? ADD_TASK_ALERT_TYPE.KICK_OFF_SUCCESS : ADD_TASK_ALERT_TYPE.KICK_OFF_FAILURE,\n                            label: success ? \"Lot Kick Off Successful\" : \"Lot Kick Off Failed\",\n                            message: name ? `\"` + name + `\"` : null\n                        })\n\n                        // clear alert\n                        setTimeout(() => setAddTaskAlert(null), 1800)\n                    }}\n                />\n            }\n            {(reportModal === OPERATION_TYPES.FINISH.key) &&\n                <FinishModal\n                    isOpen={true}\n                    stationId={stationID}\n                    title={\"Finish\"}\n                    close={() => setReportModal(null)}\n                    dashboard={currentDashboard}\n                    onSubmit={(name, success) => {\n                        // set alert\n                        setAddTaskAlert({\n                            type: success ? ADD_TASK_ALERT_TYPE.FINISH_SUCCESS : ADD_TASK_ALERT_TYPE.FINISH_FAILURE,\n                            label: success ? \"Finish Successful\" : \"Finish Failed\",\n                            message: name ? `\"` + name + `\"` : null\n                        })\n\n                        // clear alert\n                        setTimeout(() => setAddTaskAlert(null), 1800)\n                    }}\n                />\n            }\n            <DashboardsHeader\n                showTitle={false}\n                showBackButton={false}\n                showEditButton={true}\n                showSidebar={showSidebar}\n                setShowSidebar={setShowSidebar}\n                page={PAGES.DASHBOARD}\n                setEditingDashboard={() => setEditingDashboard(dashboardId)}\n\n                onBack={() => { setEditingDashboard(false) }}\n            >\n                <pageStyle.Title>{currentDashboard.name}</pageStyle.Title>\n            </DashboardsHeader>\n\n            <DashboardButtonList\n                buttons={handleDashboardButtons()}\n                addedTaskAlert={addTaskAlert}\n                onTaskClick={handleTaskClick}\n            />\n\n            <TaskAddedAlert\n                {...addTaskAlert}\n                visible={!!addTaskAlert}\n            />\n\n            {mobileMode &&\n                <DashboardTaskQueue />\n            }\n\n        </style.Container>\n    )\n}\n\nexport default DashboardScreen;\n","import styled from 'styled-components'\nimport * as style from '../../dashboard_list/DashboardsList.style'\n\nexport const AvailableTaskList = styled.a`\n    display: flex;\n`\nexport const DropdownButton = styled(style.AddButton)`\n\n`\nexport const DropdownButtonContainer = styled(style.AddButtonContainer)`\n`\n\nexport const AddTaskDropdownContainer = styled(style.AddContainer)`\n    margin-top: 1rem;\n`\n\nexport const FlexDiv = styled.div`\n    display: flex;\n    flex-direction: row;\n    flex-grow: 1;\n`","import styled, { css } from 'styled-components'\n\nimport { hexToRGBA, RGB_Linear_Shade, LightenDarkenColor } from '../../../../../../../methods/utils/color_utils';\n\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport ColorLensIcon from '@material-ui/icons/ColorLens';\nimport Textbox from \"../../../../../../basic/textbox/textbox\";\n\nexport const TransparentTextBox = styled(Textbox)`\n    background: rgba(0 ,0 ,0 , 0.2);\n    border-bottom: 2px solid rgba(0 ,0 ,0 , 0.1);\n\n    &:focus {\n        background-color: rgba(0 ,0 ,0 , 0.3);\n        border-bottom: 2px solid white;\n        outline: none !important;\n    }\n\n    text-align: center;\n`\n\nexport const DashboardEditButton = styled.div`\n    height: 6rem;\n\n    display: flex;\n    flex-direction: row;\n        \n    background: ${props => `linear-gradient(180deg, \n                                ${LightenDarkenColor(props.color, 20)} 0%, \n                                ${props.color} 50%, \n                                ${LightenDarkenColor(props.color, -20)} 100%)`};\n    border-radius: 0.6rem;\n    overflow: visible;\n        \n    // margins\n    margin: 0 2rem 0.5rem 2rem;\n        \n    // padding\n    padding: 0.5rem 1rem 0.5rem 1rem;\n    \n    outline: none;\n    &:focus {\n        outline: none;\n    }\n\n    letter-spacing: 1.5px;\n    box-shadow: 2px 2px 2px rgba(0, 0, 0, 0.5);\n    \n    outline: none;\n    user-select: none;\n\n    transition: transform 0.2s ease;\n\n    cursor: grab;\n    &:active {\n        box-shadow: 2px 2px 2px rgba(0,0,0,0.5);\n        transform: translateY(-2px);\n        cursor: grabbing;\n    }\n\n}\n`\n\nexport const CenterContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    flex-grow: 1;\n    align-items: center;\n    justify-content: center;\n`\n\nexport const TaskName = styled.span`\n\n  font: ${props => props.theme.font.primary};\n  font-size: ${props => props.theme.fontSize.sz3};\n\n  color: ${props => props.theme.bg.tertiary};\n\n`\n\n// ===== Delete Button ===== //\nexport const DeleteButtonIcon = styled(DeleteForeverIcon)`\n    color: white;\n\n    &:hover {\n        color: ${LightenDarkenColor('#FFFFFF', -20)};\n    }\n\n    width: 5rem;\n    height: 5rem;\n  \n`\n\nexport const DeleteButton = styled.button`\n    margin: 0;\n    padding: 0;\n    background: transparent;\n    border: transparent;\n    outline: none;\n    z-index: 7;\n    color: white;\n    \n    &:focus {\n        outline: none;\n    }\n\n    width: 3rem;\n    margin-left: 1rem;\n\n   \n`\n\nexport const ColorDropdownInnerContainer = styled.div`\n    height: 100%;\n    line-height: 100%;\n\n    position: relative;\n    width: 8rem;\n    margin-right: 1rem;\n`","import React, {useContext, useState} from 'react';\nimport { useSelector } from 'react-redux'\n\n// Import  Components\nimport TextField from \"../../../../../../basic/form/text_field/text_field\";\nimport DeleteFieldButton from \"../../../../../../basic/form/delete_field_button/delete_field_button\";\nimport ColorField from \"../../../../../../basic/form/color_field/color_field\";\n\n// Import Styles\nimport * as styled from './dashboard_route_field.style';\nimport * as buttonFieldStyles from \"../button_fields.style\";\nimport {ThemeContext} from \"styled-components\";\n\n// import logging\nimport log from '../../../../../../../logger'\nimport {DASHBOARD_BUTTON_COLORS} from \"../../../../../../../constants/dashboard_contants\";\nconst logger = log.getLogger(\"Dashboards\", \"EditDashboard\");\n\n\nconst DashboardRouteField = props => {\n\n\t// extract props\n\tconst {\n\t\tbutton,\n\t\tind,\n\t} = props\n\n\tconst themeContext = useContext(ThemeContext);\n\n\tconst tasks = useSelector(state => state.tasksReducer.tasks)\n\tconst taskName = tasks[button.task_id]?.name || \"TASK NOT FOUND\"\n\n\tconst schema = themeContext.schema.routes\n\tconst iconClassName = schema.iconName\n\n\n\treturn(\n\t\t// set zindex to make sure the dropdown from buttons above display on top of the buttons below it\n\t\t<buttonFieldStyles.Container style={{position: 'relative', zIndex: `${100-ind}`}}>\n\t\t\t<buttonFieldStyles.DashboardEditButton color={button.color} >\n\n\t\t\t\t<ColorField\n\t\t\t\t\tname={`buttons[${ind}].color`}\n\t\t\t\t\tContainer={buttonFieldStyles.ColorDropdownInnerContainer}\n\t\t\t\t\ttype={\"button\"}\n\t\t\t\t\tcolors={DASHBOARD_BUTTON_COLORS}\n\t\t\t\t/>\n\n\t\t\t\t<buttonFieldStyles.CenterContainer>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tname={`buttons[${ind}].name`}\n\t\t\t\t\t\tInputComponent={buttonFieldStyles.TransparentTextBox}\n\t\t\t\t\t\tstyled={{textAlign: 'center'}}\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tlabel={null}\n\t\t\t\t\t/>\n\t\t\t\t\t<buttonFieldStyles.TaskName>{taskName}</buttonFieldStyles.TaskName>\n\t\t\t\t</buttonFieldStyles.CenterContainer>\n\n\t\t\t</buttonFieldStyles.DashboardEditButton>\n\n\t\t\t<buttonFieldStyles.RightContentContainer>\n\t\t\t\t<buttonFieldStyles.SchemaIcon className={iconClassName} color={schema.solid}></buttonFieldStyles.SchemaIcon>\n\n\t\t\t\t<DeleteFieldButton\n\t\t\t\t\tname={`buttons`}\n\t\t\t\t\tindex={ind}\n\t\t\t\t\ttype={\"button\"}\n\t\t\t\t\tButtonComponent={buttonFieldStyles.DeleteButton}\n\t\t\t\t\tViewComponent={buttonFieldStyles.DeleteButtonIcon}\n\t\t\t\t\tfontSize={\"large\"}\n\t\t\t\t/>\n\t\t\t</buttonFieldStyles.RightContentContainer>\n\t\t</buttonFieldStyles.Container>\n\n\t)\n\n}\n\nexport default (DashboardRouteField)\n","import React, {useContext, useState} from 'react';\n\n// Components\nimport TextField from \"../../../../../../basic/form/text_field/text_field\";\nimport DeleteFieldButton from \"../../../../../../basic/form/delete_field_button/delete_field_button\";\nimport ColorField from \"../../../../../../basic/form/color_field/color_field\";\n\n// constants\nimport {OPERATION_TYPES} from \"../../../dashboards_sidebar/dashboards_sidebar\";\nimport {DASHBOARD_BUTTON_COLORS} from \"../../../../../../../constants/dashboard_contants\";\n\n// styles\nimport * as styled from './dashboard_report_field.style';\nimport * as buttonFieldStyles from \"../button_fields.style\";\nimport {theme} from \"../../../../../../../theme\";\n\n// logging\nimport log from '../../../../../../../logger'\n\nconst logger = log.getLogger(\"Dashboards\", \"EditDashboard\");\n\nconst DashboardReportField = props => {\n\n\t// extract props\n\tconst {\n\t\tbutton,\n\t\tind,\n\t} = props\n\n\tconst taskName = OPERATION_TYPES[button.type].name\n\n\tconst schema = theme.main.schema[button.type.toLowerCase()]\n\tconst iconClassName = schema.iconName\n\n\treturn(\n\t\t// set zindex to make sure the dropdown from buttons above display on top of the buttons below it\n\t\t<buttonFieldStyles.Container style={{position: 'relative', zIndex: `${100-ind}`}}>\n\t\t\t<buttonFieldStyles.DashboardEditButton color={button.color}>\n\n\t\t\t\t<ColorField\n\t\t\t\t\tname={`buttons[${ind}].color`}\n\t\t\t\t\tContainer={buttonFieldStyles.ColorDropdownInnerContainer}\n\t\t\t\t\ttype={\"button\"}\n\t\t\t\t\tcolors={DASHBOARD_BUTTON_COLORS}\n\t\t\t\t/>\n\n\t\t\t\t<buttonFieldStyles.CenterContainer>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tname={`buttons[${ind}].name`}\n\t\t\t\t\t\tInputComponent={buttonFieldStyles.TransparentTextBox}\n\t\t\t\t\t\tstyled={{textAlign: 'center'}}\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tlabel={null}\n\t\t\t\t\t/>\n\t\t\t\t\t<buttonFieldStyles.TaskName>{taskName}</buttonFieldStyles.TaskName>\n\t\t\t\t</buttonFieldStyles.CenterContainer>\n\n\n\t\t\t</buttonFieldStyles.DashboardEditButton>\n\n\t\t\t<buttonFieldStyles.RightContentContainer>\n\t\t\t\t<buttonFieldStyles.SchemaIcon className={iconClassName} color={button.color ? button.color : schema.color} ></buttonFieldStyles.SchemaIcon>\n\n\t\t\t\t<DeleteFieldButton\n\t\t\t\t\tname={`buttons`}\n\t\t\t\t\tindex={ind}\n\t\t\t\t\ttype={\"button\"}\n\t\t\t\t\tButtonComponent={buttonFieldStyles.DeleteButton}\n\t\t\t\t\tViewComponent={buttonFieldStyles.DeleteButtonIcon}\n\t\t\t\t\tfontSize={\"large\"}\n\t\t\t\t/>\n\t\t\t</buttonFieldStyles.RightContentContainer>\n\t\t</buttonFieldStyles.Container>\n\n\t)\n\n}\n\nexport default (DashboardReportField)\n","import React, { useRef, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux'\n\nimport { SortableContainer } from \"react-sortable-hoc\";\nimport DashboardEditTasksField from \"../button_fields/dashboard_route_field/dashboard_route_field\";\n\nimport ReactList from 'react-list';\n\nimport * as style from \"./dashboard_editor_button_renderer.style\"\nimport { Container, Draggable } from 'react-smooth-dnd';\n\nimport log from \"../../../../../../logger\"\nimport {OPERATION_TYPES, TYPES} from \"../../dashboards_sidebar/dashboards_sidebar\";\nimport DashboardReportField from \"../button_fields/dashboard_report_field/dashboard_report_field\";\n\nconst logger = log.getLogger(\"Dashboards\")\n\nconst DashboardEditorButtonRenderer = SortableContainer((props) => {\n\n    const tasks = useSelector(state => state.tasksReducer.tasks)\n\n    const {\n        buttons,\n        onDrop,\n    } = props\n\n    return (\n        <Container\n            onDrop={onDrop}\n            groupName=\"dashboard-buttons\"\n            getChildPayload={() => null}\n            style={{ width: '100%', height: '100%' }}\n        >\n            {buttons.map((button, ind) =>\n                <Draggable key={button.id} index={ind} style={{ overflow: 'visible' }}>\n                    {/*{(button.type === OPERATION_TYPES.REPORT.key || button.type === OPERATION_TYPES.KICK_OFF.key) ?*/}\n                    {(button.type === OPERATION_TYPES.REPORT.key) ?\n                        <DashboardReportField\n                            button={button}\n                            ind={ind}\n                            {...props}\n                        />\n                        :\n                        ((button.type === TYPES.ROUTES.key) || (!button.type)) &&\n                        <DashboardEditTasksField\n                            button={button}\n                            ind={ind}\n                            {...props}\n                        />\n                    }\n                    { (button.type === OPERATION_TYPES.KICK_OFF.key) &&\n                        <DashboardReportField\n                            button={button}\n                            ind={ind}\n                            {...props}\n                        />\n                    }\n                    { (button.type === OPERATION_TYPES.FINISH.key) &&\n                    <DashboardReportField\n                        button={button}\n                        ind={ind}\n                        {...props}\n                    />\n                    }\n                </Draggable>\n            )}\n        </Container>\n    )\n})\n\nexport default DashboardEditorButtonRenderer\n","import styled from \"styled-components\";\nimport {Form, Formik} from \"formik\";\nimport SmallButton from \"../../../../basic/small_button/small_button\";\nimport * as pageStyle from \"../dashboards_header/dashboards_header.style\"\n\nexport const Header = styled(pageStyle.Header)`\n    // align-items: center;\n`\n\nexport const Title = styled(pageStyle.Title)`\n    margin-right: 1rem;\n`\n\nexport const FooterContainer = styled.div`\n    z-index: 0;\n    width: 100%;\n    margin:0;\n    \n    display: flex;\n    justify-content: center;\n    \n    background-image: linear-gradient(to top, ${props => props.theme.bg.tertiary}, ${props => props.theme.bg.primary});\n    border-top: thin solid ${props => props.theme.bg.tertiary};\n    box-shadow: 0px 0px 15px black;\n    \n    padding: 1rem;\n`\n\nexport const StyledForm = styled(Form)`\n\n    display: flex;\n    flex-direction: column;\n    \n    width: 100%;\n    height: 100%;\n    max-height: 100%;\n\n    background: ${props => props.theme.bg.quaternary};\n    \n`\n\nexport const BodyContainer = styled.div`\n    width: 100%;\n    height: 100%;\n    max-height: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    overflow: scroll;\n    \n    margin: 0;\n    padding: 0;\n\n    // hide scroll bar\n\t::-webkit-scrollbar {\n\t\twidth: 0px;  /* Remove scrollbar space */\n\t\t// background: transparent;  /* Optional: just make scrollbar invisible */\n\t}\n\t::-webkit-scrollbar-thumb {\n\t\tbackground: transparent;\n\t}\n    \n`\n\nexport const Button = styled(SmallButton)`\n    margin-left: 1rem;\n    margin-right: 1rem;\n    \n    padding-left: 1rem;\n    padding-right: 1rem;\n    padding-top: .5rem;\n    padding-bottom: .5rem;\n    \n`\n\nexport const TitleTextbox = styled.input`\n\n    font-size: ${props => props.theme.fontSize.sz2};\n\n    &::placeholder {\n        font-size: ${props => props.theme.fontSize.sz2};\n    }\n\n`;","import styled from 'styled-components';\nimport AssignmentOutlinedIcon from '@material-ui/icons/AssignmentOutlined';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\n\nimport {RGB_Linear_Shade, hexToRGBA} from \"../../../../methods/utils/color_utils\";\n\nexport const PageContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    height: 100%;\n    max-height: 100%;\n    overflow: hidden;\n    max-width: 100%;\n    width: 100%;\n    \n    background: ${props => props.theme.bg.octonary};\n    \n    flex: 1;\n    \n`\n\nexport const Container = styled.div`\n    display: flex;\n    flex-grow: 1;\n    flex-direction: column;\n    \n    width: 100%;\n    max-width: 100%;\n    overflow: hidden;\n    height: 100%;\n    max-height: 100%;\n`\n\n\n\n\n\n\n","import styled from 'styled-components'\nimport AddBoxIcon from '@material-ui/icons/AddBox';\n\nexport const Container = styled.button`\n\n    width: 80%;\n    height: 5rem;\n    min-height: 5rem;\n    background: ${props => props.theme.bg.primary};\n    border-radius: 1rem;\n    \n    border: 3px solid ${props => props.theme.bg.secondary};\n    color: ${props => props.theme.bg.secondary};\n    \n    \n    &:focus {\n        outline: none;\n    }\n`\n\nexport const StyledAddBoxIcon = styled(AddBoxIcon)`\n    // font-size: ${props => props.theme.font.fontSize.sz1};\n    font-size: 2rem;\n    height: 2rem;\n`","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport AddBoxIcon from '@material-ui/icons/AddBox';\n\nimport * as style from \"./dashboard_add_button.style\"\n\nimport log from '../../../../../../logger'\nimport {useDrag, useDrop} from \"react-dnd\";\n\nconst logger = log.getLogger(\"Dashboards\")\n\nconst DashboardAddButton = (props) => {\n    const { onDrop } = props\n\n    const [{opacity}, drop] = useDrop({\n        accept:  \"DashboardSidebarButton\",\n        drop: (item, monitor) => {\n            // console.log(\"drop item\",item)\n            onDrop(item)\n            return item\n        },\n        hover: (item, monitor) => {\n            const isOver = monitor.isOver({ shallow: true })\n            // logger.log(\"isOver\",isOver)\n\n        },\n        // collect: (monitor) => ({\n        //     opacity: monitor.isOver({ shallow: true }) ? 0.5 : 1\n        // })\n    })\n\n    // logger.log(\"DashboardAddButton: opacity\", opacity)\n\n    return(\n        <style.Container\n            ref={drop}\n            // opacity={opacity}\n        >\n            <AddBoxIcon/>\n        </style.Container>\n    )\n}\n\nexport default DashboardAddButton","import React, { useEffect, useState } from 'react';\n\n// import external functions\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom'\nimport { Formik } from \"formik\";\nimport { HTML5Backend } from 'react-dnd-html5-backend'\nimport { DndProvider } from 'react-dnd'\nimport { createSelector } from 'reselect'\nimport { isEmpty } from \"ramda\"\n\nimport { SortableContainer } from 'react-sortable-hoc';\nimport arrayMove from 'array-move';\n\n// Import components\nimport DashboardAddTask from './dashboard_add_task/dashboard_add_task'\nimport DashboardRenderer from \"./dashboard_editor_button_renderer/dashboard_editor_button_renderer\";\nimport DashboardsHeader from \"../dashboards_header/dashboards_header\";\n\n// Import basic components\nimport SmallButton from '../../../../basic/small_button/small_button'\nimport TextField from \"../../../../basic/form/text_field/text_field\";\nimport Textbox from '../../../../basic/textbox/textbox'\n\n// Import Utils\nimport { deepCopy } from '../../../../../methods/utils/utils'\nimport { handleAvailableTasks, handleCurrentDashboard } from '../../../../../methods/utils/dashboards_utils'\nimport { randomHash } from \"../../../../../methods/utils/utils\";\n\n// Import Actions\nimport { putDashboard, deleteDashboard, postDashboard } from '../../../../../redux/actions/dashboards_actions'\nimport { postTaskQueue } from '../../../../../redux/actions/task_queue_actions'\nimport { putStation } from '../../../../../redux/actions/stations_actions'\n\nimport { dashboardSchema } from \"../../../../../methods/utils/form_schemas\";\n\n// Import styles\nimport * as style from './dashboard_editor.style'\nimport * as pageStyle from '../dashboards_page.style'\n\n// Import logger\nimport log from '../../../../../logger.js';\nimport DashboardAddButton from \"./dashboard_add_button/dashboard_add_button\";\nimport { useChange } from \"../../../../basic/form/useChange\";\nimport { PAGES } from \"../../../../../constants/dashboard_contants\";\n\nconst logger = log.getLogger(\"Dashboards\", \"EditDashboard\");\n\nconst DashboardEditor = (props) => {\n    let {\n        dashboard,\n        setShowSidebar,\n        showSidebar,\n    } = props\n\n    const history = useHistory()\n    const dispatch = useDispatch()\n    const params = useParams()\n\n\n    const onDeleteDashboard = async (ID) => await dispatch(deleteDashboard(ID))\n    const onPutStation = async (station, ID) => await dispatch(putStation(station, ID))\n    const onPutDashboard = (dashboard, id) => dispatch(putDashboard(dashboard, id))\n    const onPostDashboard = (dashboard) => dispatch(postDashboard(dashboard))\n\n\n    const stations = useSelector(state => state.stationsReducer.stations)\n\n    /*\n    * Returns initialValues object for Formik\n    */\n    const getInitialValues = () => {\n        let initialValues = {\n            name: \"\",\n            buttons: []\n        }\n\n        try {\n            const buttons = dashboard.buttons   // get buttons\n\n            let initialButtons = [];\n            buttons.map((value, index) => {\n                initialButtons.push(value)\n            })\n\n            initialValues = {\n                name: dashboard.name,\n                buttons: initialButtons\n            }\n        } catch (e) {\n\n        }\n\n        return initialValues\n    }\n\n    /*\n    * Returns initialErrors object for Formik\n    */\n    const getInitialErrors = () => {\n        let initialErrors = {} // initialize error object to empty\n\n        // check name\n        if (!dashboard.name) initialErrors.name = \"Please enter a name.\"\n\n        // check button errors\n        let buttonErrors = [] // stores button errors\n        try { // try / catch in case dashboard is null or doesn't have buttons\n            const buttons = dashboard.buttons // get buttons\n\n            for (const button of buttons) {\n                let buttonError = {} // errors for current button - initialize to empty\n                if (!button.name) buttonError.name = \"Please enter name.\" // button must have name\n                if (!isEmpty(buttonError)) buttonErrors.push(buttonError) // only add the error if it isn't empty\n            }\n        }\n        catch (e) { }\n        if (buttonErrors.length > 0) initialErrors.buttons = buttonErrors // only add to error object if errors were found\n\n\n        return initialErrors\n    }\n\n    /* handles for submission, updates redux and api\n    * requirements\n    *   name can't be empty\n    *   dashboard names must be unique\n    *   button names can't be empty\n    * */\n    const handleSubmit = async (values) => {\n        logger.log(\"DashboardEditor: handleSubmit: values\", values)\n\n        // destructure values\n        const { name, buttons } = values\n\n        // clone dashboard\n        const dashboardCopy = deepCopy(dashboard)\n        logger.log(\"DashboardEditor: handleSubmit: dashboardCopy\", dashboardCopy)\n\n        // save id then delete (api doesn't want id in object)\n        // get dashboard id\n        let dashboardId = null\n\n        // use try catch block to prevent error in the case that a dashboard doesn't have _id key\n        try {\n            dashboardId = dashboardCopy._id.$oid\n            delete dashboardCopy._id\n        }\n        catch (e) { }\n\n        logger.log(\"DashboardEditor: handleSubmit: dashboardId\", dashboardId)\n\n        // update dashboard objects properties with submit values\n        dashboardCopy.buttons = buttons\n        dashboardCopy.name = name\n        console.log(buttons)\n\n        // if dashboard has id, it must already exist, so update with put\n        if (dashboardId) {\n            // update\n            onPutDashboard(dashboardCopy, dashboardId)\n        }\n        // otherwise, dashboard is new, so create with post\n        else {\n            // create\n            onPostDashboard(dashboardCopy)\n        }\n\n        history.push(`/locations/${params.stationID}/dashboards/${params.dashboardID}/`)\n\n\n    }\n\n    return (\n        <Formik\n            initialValues={getInitialValues()}\n            initialTouched={{\n                name: false,\n                buttons: [false]\n            }}\n            initialErrors={getInitialErrors()}\n            enableReinitialize={false}\n            validateOnChange={true}\n            validateOnMount={true}\n            validateOnBlur={true}\n            validationSchema={dashboardSchema}\n            onSubmit={async (values, { setSubmitting }) => {\n                logger.log(\"onSubmit called\")\n                setSubmitting(true);    // set submitting to true on start\n                await handleSubmit(values)        // perform submission logic\n                setSubmitting(false);   // set submitting to false after completion\n            }}\n        >\n            {(formikProps) => {\n                const { errors, values, touched, initialValues } = formikProps; // extract formik props\n\n                // disabled submission if there are any errors or not all fields have been touched\n                const allTouched = Object.values(touched).every((val) => val === true)\n                const submitDisabled = !(Object.values(errors).length === 0)\n\n                // adds a button to buttons key in Formik values\n                const handleDrop = (dropResult) => {\n                    const { removedIndex, addedIndex, payload, element } = dropResult;\n                    console.log(removedIndex, addedIndex, payload, element)\n                    const buttonsCopy = (values.buttons)\n\n                    if (payload === null) { //  No new button, only reorder\n                        const shiftedButtonsCopy = arrayMove(buttonsCopy, removedIndex, addedIndex)\n                        formikProps.setFieldValue(\"buttons\", shiftedButtonsCopy)\n                    } else { // New button\n                        if (addedIndex !== null) {\n                            payload.id = randomHash()\n                            buttonsCopy.splice(addedIndex, 0, payload)\n                            formikProps.setFieldValue(\"buttons\", buttonsCopy)\n                        }\n\n                    }\n\n                }\n\n                const handleChangeButton = (id, attr) => {\n                    const buttonsCopy = (values.buttons)\n                    const buttonIndex = buttonsCopy.findIndex(b => b.id == id)\n\n                    Object.assign(buttonsCopy[buttonIndex], attr)\n                    formikProps.setFieldValue(\"buttons\", buttonsCopy)\n                }\n\n                const handleDeleteButton = (id) => {\n                    const buttonsCopy = (values.buttons)\n                    const buttonIndex = buttonsCopy.findIndex(b => b.id == id)\n\n                    buttonsCopy.splice(buttonIndex, 1)\n                    formikProps.setFieldValue(\"buttons\", buttonsCopy)\n                }\n\n                const handleDeleteDashboard = async () => {\n\n                    const stationCopy = deepCopy(stations[params.stationID])\n\n                    const deleteDashboardIndex = stationCopy.dashboards.indexOf(params.dashboardID)\n\n                    stationCopy.dashboards.splice(deleteDashboardIndex, 1)\n\n                    history.push(`/locations/${params.stationID}/dashboards`)\n                    await onPutStation(stationCopy, stationCopy._id)\n                    await onDeleteDashboard(params.dashboardID)\n\n                }\n\n                return (\n                    <style.StyledForm>\n                        <DashboardsHeader\n                            showTitle={false}\n                            showSidebar={showSidebar}\n                            showBackButton={true}\n                            showSaveButton={true}\n                            setShowSidebar={setShowSidebar}\n                            page={PAGES.EDITING}\n                            onDelete={() => {\n                                handleDeleteDashboard()\n                            }}\n                            saveDisabled={submitDisabled}\n                            onBack={() => history.push(`/locations/${params.stationID}/dashboards/${params.dashboardID}/`)}\n                        >\n                            <TextField\n                                name={\"name\"}\n                                disabled={dashboard.name === 'Robot Screen'}\n                                textStyle={{ fontWeight: 'Bold' }}\n                                placeholder='Enter Dashboard Name'\n                                type='text'\n                                InputComponent={Textbox}\n                                inputProps={{\n                                    style: {\n                                        fontSize: '1.2rem',\n                                        fontWeight: '600',\n                                        textAlign: 'center',\n                                        padding: '0 2rem 0 4rem',\n                                        marginTop: '0'\n                                    }\n                                }}\n                            />\n                        </DashboardsHeader>\n                        <style.BodyContainer>\n                            <DashboardRenderer\n                                buttons={values.buttons}\n                                onDrop={handleDrop}\n\n                                handleChangeButton={handleChangeButton}\n                                handleDeleteButton={handleDeleteButton}\n                            />\n                        </style.BodyContainer>\n                    </style.StyledForm>\n\n                )\n            }\n            }\n        </Formik>\n\n    )\n}\nexport default DashboardEditor;\n","import React, { useEffect, useState } from 'react';\n\n// external functions\nimport { useSelector, useDispatch } from 'react-redux'\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport { DndProvider } from \"react-dnd\";\nimport { Container } from 'react-smooth-dnd'\nimport { withRouter } from \"react-router-dom\";\n\n// Import Components\nimport DashboardsList from './dashboard_list/DashboardsList'\nimport DashboardScreen from './dashboard_screen/dashboard_screen'\nimport DashboardEditor from './dashboard_editor/dashboard_editor'\nimport DashboardsSidebar from \"./dashboards_sidebar/dashboards_sidebar.jsx\"\n\nimport { PAGES } from \"../../../../constants/dashboard_contants\";\n\nimport {getDashboards, setDashboardKickOffProcesses, setDashboardFinishProcesses} from '../../../../redux/actions/dashboards_actions'\nimport { getTasks } from '../../../../redux/actions/tasks_actions'\n\n// Import Styles\nimport * as style from './dashboards_page.style'\n\n// logging\nimport log from \"../../../../logger\";\n\nconst logger = log.getLogger(\"DashboardsPage\");\n\nconst DashboardsPage = (props) => {\n\n    // redux state\n    const dispatch = useDispatch()\n    const dispatchSetDashboardKickOffProcesses = async (dashboardId, kickOffEnabled) => await dispatch(setDashboardKickOffProcesses(dashboardId, kickOffEnabled))\n    const dispatchSetDashboardFinishProcesses = async (dashboardId, finishEnabled) => await dispatch(setDashboardFinishProcesses(dashboardId, finishEnabled))\n    const dispatchGetTasks = () => dispatch(getTasks())\n\n    const dashboards = useSelector(state => state.dashboardsReducer.dashboards)\n    const stations = useSelector(state => state.stationsReducer.stations)\n    const devices = useSelector(state => state.devicesReducer.devices)\n    const processes = useSelector(state => { return state.processesReducer.processes })\n    const routes = useSelector(state => { return state.tasksReducer.tasks })\n\n    // self contained state\n    const [selectedDashboard, setSelectedDashboard] = useState(null);\n    const [editingDashboard, setEditingDashboard] = useState(null);\n\n    const [showSidebar, setShowSidebar] = useState(true);\n    const [sidebarWidth, setSidebarWidth] = useState(window.innerWidth < 2000 ? 400 : 700)\n\n    // extract url params\n    const { stationID, dashboardID, editing } = props.match.params\n\n    /**\n     * This useEffect checks whether the current dashboard is kick off enabled\n     *\n     * In order to be kick off enabled, the dashboard's station must be the first station in a process\n     *\n     * To check if the dashboard's station is the first station in a process,\n     * it checks the load station of the first route in each process.\n     * For any process where the first station's id matches the current dashboard's station id, the process id is added to list.\n     * This list is then dispatched to redux with the key being the dashboard's ID and value is the list\n     *\n     * This information is used for determining whether or not to enable the KICK OFF button for a given dashboard\n     */\n    useEffect(() => {\n\n        // list of all processes that the station is the first station of the process\n        var firstStationProcesses = []\n        var lastStationProcesses = []\n\n        // loop through processes and check if the load station of the first route of any process matches the current dashboards station\n        Object.values(processes).forEach((currProcess) => {\n            if(currProcess && currProcess.routes && Array.isArray(currProcess.routes)) {\n                // get first routes id, default to null\n                const firstRouteId = currProcess.routes[0]\n\n                // get route from route id, default to null\n                const currRoute = firstRouteId ? routes[firstRouteId] : null\n\n                // get station id from load key of route\n                const loadStationId = currRoute?.load?.station\n\n                // if the loadStationId matches the current dashboard's stationId, add the process's id to the list\n                if(loadStationId === stationID) firstStationProcesses.push(currProcess._id)\n\n                // now check if station is last route of any process\n                // get last routes id\n                const lastRouteId = currProcess.routes[currProcess.routes.length - 1]\n\n                // get route from route id, default to null\n                const lastRoute = lastRouteId ? routes[lastRouteId] : null\n\n                // get station id from unload key of route\n                const unloadStationId = lastRoute?.unload?.station\n\n                // if the unloadStationId matches the current dashboard's stationId, add the process's id to the list of last stations\n                if(unloadStationId === stationID) lastStationProcesses.push(currProcess._id)\n\n\n            }\n        })\n\n        if(firstStationProcesses.length > 0 ) {\n            dispatchSetDashboardKickOffProcesses(dashboardID, firstStationProcesses)\n        }\n\n        if(lastStationProcesses.length > 0) {\n            dispatchSetDashboardFinishProcesses(dashboardID, lastStationProcesses)\n        }\n\n    }, [processes])\n\n    // On page load, load the first and only dashboard with this station\n    // Leaving the rest of the code in for adding dashboards and dashboard list view because we may need it in the future\n    useEffect(() => {\n        try {\n            const dashboardType = !!stations[stationID] ? stations[stationID] : devices[stationID]\n            const dashID = dashboardType.dashboards[0]\n            props.history.push(`/locations/${stationID}/dashboards/${dashID}`)\n        } catch (error) {\n            \n        }\n\n        return () => {\n\n        }\n    }, [])\n\n    // checks url params and updates editingDashboard / selectedDashboard accordingly\n    useEffect(() => {\n\n        // COMMENT OUT FOR NOW: All station should just have one dashboard. Currently no need to add dashboards.\n        // // if dashboard id is 'new', go to dashboard editor with new dashboard template\n        // if(dashboardID === \"new\") {\n        //     const dashboardTemplate  = {\n        //         name: \"\",\n        //         buttons: [],\n        //         station: stationID\n        //     }\n\n        //     setSelectedDashboard(null)   // only selected OR editing should be set\n        //     setEditingDashboard(dashboardTemplate)   // set editing to empty template\n        // }\n\n        // else {\n        // get dashboard from dashboardID url param\n\n\n        const dashboard = dashboards[dashboardID]\n\n        // if a dashboard was found, then update either selected or editing\n        if (dashboard) {\n\n\n            // if url does not contain editing param, set selected dashboard\n            if (!editing) {\n                setSelectedDashboard(dashboardID)   // set selected\n                setEditingDashboard(null)   // only selected OR editing should be set\n                logger.log(\"useEffect dashboards[dashboardID]\", dashboards[dashboardID])\n            }\n            // url contains editing param, so set dashboard to editing\n            else {\n                setEditingDashboard(dashboard)  // set editing\n                setSelectedDashboard(null)  // only selected OR editing should be set\n            }\n        }\n\n        // if no matching dashboard was found, set editing and selected to null\n        else {\n            setEditingDashboard(null)\n            setSelectedDashboard(null)\n        }\n        // }\n    }, [dashboardID, dashboards, editing])\n\n\n    // sets url to main dashboards page for current station - used in other pages to go back\n    function goToMainPage() {\n        props.history.push(`/locations/${stationID}/dashboards`);\n    }\n\n    // returns string of current page name based on current state\n    const getPage = () => {\n        let page = \"\"\n\n        // if neither a dashboard is selected nor being edited, show main page\n        if (!(selectedDashboard || editingDashboard)) {\n            page = PAGES.DASHBOARDS\n        }\n        // if editing, show editing page\n        else if (editingDashboard) {\n            page = PAGES.EDITING\n        }\n        // only other option is dashboard is selected\n        else {\n            page = PAGES.DASHBOARD\n        }\n        return page\n    }\n    const page = getPage()\n\n    // sets showSidebar to false if on dashboard page, effectively hiding the sidebar\n    // sidebar is never used in a dashboard\n    useEffect(() => {\n        if (page === PAGES.DASHBOARD) setShowSidebar(false)\n        else if (page === PAGES.EDITING || page === PAGES.DASHBOARDS) setShowSidebar(true)\n    }, [page])\n\n\n    return (\n        <style.PageContainer>\n            <DndProvider backend={HTML5Backend}>\n\n                <div style={{ width: showSidebar && window.innerWidth > 1000 ? sidebarWidth : 0 }}>\n                    <DashboardsSidebar\n                        dashboardId={dashboardID}\n                        stationID={stationID}\n                        width={showSidebar ? sidebarWidth : 0}\n                        setWidth={setSidebarWidth}\n                        minWidth={300}\n\n                        clickable={page === PAGES.DASHBOARDS}\n                    />\n                </div>\n\n                <style.Container style={{ flexGrow: '1' }}>\n                    {/* If the length of ID is not 0, then a dashboard must have been clicked */}\n                    {page === PAGES.DASHBOARDS ?\n                        <DashboardsList\n                            stationID={stationID}\n                            setSelectedDashboard={(dashID) => {\n                                props.history.push(`/locations/${stationID}/dashboards/${dashID}`)\n                            }}\n                            setEditingDashboard={(dashID) => {\n                                props.history.push(`/locations/${stationID}/dashboards/${dashID}/editing`)\n                            }}\n                            setShowSidebar={setShowSidebar}\n                            showSidebar={showSidebar}\n                        />\n                        :\n                        (page === PAGES.EDITING) ?\n                            <DashboardEditor\n                                dashboard={editingDashboard}\n                                onCancelClicked={goToMainPage}\n                                setShowSidebar={setShowSidebar}\n                                showSidebar={showSidebar}\n                            />\n                            :\n                            <DashboardScreen\n                                dashboardId={selectedDashboard}\n                                setSelectedDashboard={setSelectedDashboard}\n                                goBack={() => setSelectedDashboard(null)}\n                                setShowSidebar={setShowSidebar}\n                                showSidebar={showSidebar}\n                                setEditingDashboard={(dashID) => {\n                                    props.history.push(`/locations/${stationID}/dashboards/${dashID}/editing`)\n                                }}\n                            />\n                    }\n                </style.Container>\n            </DndProvider>\n        </style.PageContainer>\n    )\n}\n\nexport default withRouter(DashboardsPage)\n","import styled from 'styled-components'\n\nexport const PageContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    max-height: 100%;\n    overflow: hidden;\n    max-width: 100%;\n    width: 100%;\n    align-items: center;\n    position: relative;\n\n    background: ${props => props.theme.bg.octonary};\n    \n    flex: 1;\n    \n`","import styled from 'styled-components'\nimport  * as styleO from '../objects_page.style'\n\nexport const LeftColumn = styled.div`\n    position: absolute;\n    height: 100%;\n    width: 15rem;\n    left: 0;\n    /* background: lightcoral; */\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`\n\nexport const RightColumn = styled.div`\n    position: absolute;\n    height: 100%;\n    width: 15rem;\n    right: 0;\n    /* background: lightskyblue; */\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`\n\nexport const ColumnLabel = styled.h1`\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz2};\n    font-weight: bold;\n    margin-top: 2rem;\n    margin-bottom: 2rem;\n`\n\nexport const ObjectContainer = styled.div`\n    width: 13rem;\n    height: 3rem;\n    \n    border-radius: 1rem;\n\n    border: .2rem solid red;\n\n    display: flex;\n    justify-content: center;\n\n    margin: .5rem;\n`\n\nexport const ObjectName = styled.p`\n    margin: auto;\n`\n\nexport const PageContinaer = styled(styleO.PageContainer)`\n\n`","import React, { useState, useEffect } from 'react'\n\n\nconst ObjectLink = (props) => {\n    const {\n        objectLinks\n    } = props\n\n    // console.log('QQQQ Object Link Props', objectLinks)\n\n    const [x1, setX1] = useState(0)\n    const [y1, setY1] = useState(0)\n    const [x2, setX2] = useState(0)\n    const [y2, setY2] = useState(0)\n\n    useEffect(() => {\n\n        // If startPos is not null but endPos is, then set the end pos\n        if (objectLinks.startPos.x !== null && objectLinks.endPos.x === null) {\n            setX1(objectLinks.startPos.x)\n            setY1(objectLinks.startPos.y)\n            setX2(objectLinks.startPos.x)\n            setY2(objectLinks.startPos.y)\n            window.addEventListener('mousemove', lockToMouse, false)\n        }\n        // If the opposite is true, then set the start pos\n        else if (objectLinks.endPos.x !== null && objectLinks.startPos.x === null) {\n            setX1(objectLinks.endPos.x)\n            setY1(objectLinks.endPos.y)\n            setX2(objectLinks.endPos.x)\n            setY2(objectLinks.endPos.y)\n            window.addEventListener('mousemove', lockToMouse, false)\n        }\n\n        // Else both are defined so that's good, I guess...\n        else {\n            setX1(objectLinks.startPos.x)\n            setY1(objectLinks.startPos.y)\n            setX2(objectLinks.endPos.x)\n            setY2(objectLinks.endPos.y)\n            window.removeEventListener('mousemove', lockToMouse, false)\n\n        }\n\n        return () => {\n            window.removeEventListener('mousemove', lockToMouse, false)\n\n        }\n\n\n    }, [objectLinks])\n\n    /**\n     * Locks line to cursor\n     * @param {*} e\n     */\n    const lockToMouse = (e) => {\n\n        // Have to get the widget page bounding box to get correct location of mouse\n        // Since the widget page is not 100% of the page, the cursor position is offset by the margins\n        const rect = document.getElementById('widgetPage').getBoundingClientRect()\n\n        setX2(e.clientX - rect.left)\n        setY2(e.clientY - rect.top)\n    }\n\n    // console.log('QQQQ Y2 and X2', x2, y2)\n\n    return (\n        <>\n            <g>\n                <line\n                    x1={`${x1}`} y1={`${y1}`}\n                    x2={`${x2}`} y2={`${y2}`}\n                    strokeWidth={'1rem'} stroke='rgba(95,166,236, 0.95)'\n                    strokeLinecap=\"round\"\n                />\n            </g>\n        </>\n    )\n}\n\nexport default ObjectLink\n","import React, { useState, useMemo, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useParams, useHistory } from 'react-router-dom'\n\nimport * as styled from './object_columns.style'\n\nimport ObjectLink from '../object_link/object_link'\n\n\nconst ObjectColumns = (props) => {\n\n    const {\n        parsedObjects\n    } = props\n\n    const [objectLinks, setObjectLinks] = useState({})\n    const [link, setLink] = useState({\n        startPos: {\n            id: null,\n            x: null,\n            y: null,\n        },\n        endPos: {\n            id: null,\n            x: null,\n            y: null,\n        }\n    })\n\n    const locations = useSelector(state => { return state.locationsReducer.locations })\n    const objects = useSelector(state => state.objectsReducer.objects)\n\n    // const [parsedObjects, setParsedObjects] = useState({parsedObjectsProps})\n    if (Object.keys(parsedObjects).length === 0) return null\n\n    /**\n     * Handles all the objects arriving at the stating (unloaded objects). These objects will appear in the left column\n     */\n    const handleUnloadObjects = () => {\n\n        // A list of all the unload objects ids\n        const unloadObjects = Object.values(parsedObjects.unload)\n        \n        return unloadObjects.map((object, ind) => {\n            if(object === undefined) return\n\n            const currentObject = objects[object]\n\n            const currentObjectName = currentObject.name\n\n            return (\n                <styled.ObjectContainer\n                    key={`unload-${ind}`}\n                    id={`unload-${ind}`}\n\n                    onClick={() => {\n                        const el = document.getElementById(`unload-${ind}`).getBoundingClientRect()\n\n                        console.log('QQQQ X and Y', el)\n\n                        // Have to get the widget page bounding box to get correct location of mouse\n                        // Since the widget page is not 100% of the page, the cursor position is offset by the margins\n                        const rect = document.getElementById('widgetPage').getBoundingClientRect()\n\n                        const x = el.x - rect.left + el.width\n                        const y = el.y - rect.top + el.height/2\n\n                        handleObjectLinkPoints({\n                            unload: true,\n                            id: currentObject._id.$oid,\n                            x: x,\n                            y: y,\n                        })\n\n                    }}\n                >\n                    <styled.ObjectName>{currentObjectName}</styled.ObjectName>\n                </styled.ObjectContainer>\n            )\n        })\n    }\n\n    /**\n     * Handles all the objects leaving the station (load objects). These objects will appear in the right column\n     */\n    const handleLoadObjects = () => {\n\n        // A list of all the unload objects ids\n        const loadObjects = Object.values(parsedObjects.load)\n\n        return loadObjects.map((object, ind) => {\n            if(object === undefined) return\n            const currentObject = objects[object]\n\n            const currentObjectName = currentObject.name\n\n            return (\n                <styled.ObjectContainer\n                    key={`load-${ind}`}\n                    id={`load-${ind}`}\n                    onClick={() => {\n                        const el = document.getElementById(`load-${ind}`).getBoundingClientRect()\n\n                        console.log('QQQQ X and Y', el)\n\n                        // Have to get the widget page bounding box to get correct location of mouse\n                        // Since the widget page is not 100% of the page, the cursor position is offset by the margins\n                        const rect = document.getElementById('widgetPage').getBoundingClientRect()\n\n                        const x = el.x - rect.left\n                        const y = el.y - rect.top + el.height/2\n\n                        handleObjectLinkPoints({\n                            unload: false,\n                            id: currentObject._id.$oid,\n                            x: x,\n                            y: y,\n                        })\n                    }}\n                >\n                    <styled.ObjectName>{currentObjectName}</styled.ObjectName>\n                </styled.ObjectContainer>\n            )\n        })\n    }\n\n    const handleObjectLinks = () => {\n        \n    }\n\n    /**\n     * This handles link points.\n     * If the selected object is loading from the station, then its an end point (on the right side of the screen)\n     * If the selected object is unloading to the station, then its a start point (on the left side of the screen)\n     * @param {*} point \n     */\n    const handleObjectLinkPoints = (point) => {\n\n        let editedLink = {\n            ...link\n        }\n\n        if (point.unload) {\n            editedLink = {\n                ...link,\n                startPos: {\n                    id: point.id,\n                    x: point.x,\n                    y: point.y\n                }\n            }\n            setLink(editedLink)\n        } else {\n            editedLink = {\n                ...link,\n                endPos: {\n                    id: point.id,\n                    x: point.x,\n                    y: point.y\n                }\n            }\n            setLink(editedLink)\n        }\n\n        setObjectLinks(\n            // ...objectLinks,\n            // [link.startPos.id]: link,\n            editedLink\n        )\n\n    }\n\n    // const handleMouseMove = (event) => {\n    //     console.log('QQQQ Event', event)\n    // }\n\n    // document.onmousemove = handleMouseMove;\n\n    return (\n        <>\n            <svg width=\"100%\" height=\"100%\">\n                {Object.keys(objectLinks).length > 0 &&\n                    <ObjectLink objectLinks={objectLinks} />\n\n                }\n            </svg>\n\n            <styled.LeftColumn>\n                <styled.ColumnLabel>Incoming</styled.ColumnLabel>\n                {handleUnloadObjects()}\n            </styled.LeftColumn>\n\n            <styled.RightColumn>\n                <styled.ColumnLabel>Outgoing</styled.ColumnLabel>\n                {handleLoadObjects()}\n            </styled.RightColumn>\n\n\n        </>\n    )\n}\n\nexport default ObjectColumns","import React, { useState, useMemo, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useParams, useHistory } from 'react-router-dom'\n\nimport * as styled from './objects_page.style'\n\n// Import Components\nimport ObjectColumns from './object_columns/object_columns'\n\n// Import utils\nimport { handleParseTaskBasedOnLoadUnload } from '../../../../methods/utils/object_utils'\n\n\nconst ObjectsPage = () => {\n\n    const params = useParams()\n    const stationID = params.stationID\n    const tasks = useSelector(state => state.tasksReducer.tasks)\n\n    const [parsedObjects, setParsedObjects] = useState({})\n\n\n    /**\n     * Handle associated objects on page mount\n     */\n    useEffect(() => {\n        handleAssociatedObjects()\n    }, [])\n\n    /**\n     * Finds all asociated objects for the location\n     */\n    const handleAssociatedObjects = () => {\n        const parsedObjectsReturned = handleParseTaskBasedOnLoadUnload(tasks, stationID)\n\n        setParsedObjects(parsedObjectsReturned)\n    }\n\n    \n\n    return (\n\n        <styled.PageContainer>\n            <ObjectColumns parsedObjects={parsedObjects}/>\n            <p>This'll Be the Objects Page</p>\n        </styled.PageContainer>\n    )\n}\n\nexport default ObjectsPage","import styled from 'styled-components'\n\nexport const StatisticsContainer = styled.div`\n    height: 100%;\n    width: 100%;\n\n    background: ${props => props.theme.bg.quaternary};\n`\n\nexport const StatisticsSectionsContainer = styled.div`\n    display: flex;\n    position: absolute;\n    text-align: center;\n    justify-content: center;\n    left: 0;\n    right: 0;\n    top: .5rem;\n    margin-left: auto;\n    margin-right: auto;\n    margin-top: 0.5rem;\n    width: 15rem;\n    /* background-color: red; */\n`\n\nexport const StatisticsSectionsButton = styled.button`\n    font-size: 1.5rem;\n    width: 10rem;\n    border: none;\n    font-family: ${props => props.theme.font.primary};\n\n    box-shadow: ${props => props.selected ? 'none' : '0 0.1rem 0.2rem 0rem #303030'};\n\n    z-index: ${props => props.selected ? '0' : '1'};\n\n    transition: background-color 0.25s ease, box-shadow 0.1s ease;\n\n    &:focus{\n        outline: 0 !important\n    }\n\n    &:active{\n        box-shadow: none;\n    }\n\n    &:hover{\n        background-color: ${props => props.theme.bg.secondary};\n    }\n`\n\nexport const StatisticsDownloadButton = styled.button`\n    display: auto;\n    position: absolute;\n    right: 1rem;\n    top: 1rem;\n    border: none;\n    border-radius: .5rem;\n    width: 10rem;\n    height: 3rem;\n    font-family: ${props => props.theme.font.primary};\n\n    box-shadow: 0 0.1rem 0.2rem 0rem #303030;\n\n    transition: background-color 0.25s ease, box-shadow 0.1s ease;\n\n\n    &:focus{\n        outline: 0 !important\n    }\n\n    &:active{\n        box-shadow: none;\n    }\n\n    &:hover{\n        background-color: ${props => props.theme.bg.secondary};\n    }\n\n    @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n        display: none;\n    }\n`\n","import styled from 'styled-components'\n\nimport { LightenDarkenColor } from '../../../../../methods/utils/color_utils'\n\nexport const OverviewContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    text-align: center;\n    width: 100%;\n    height: 100%;\n    flex: 1;\n    border-radius: 1rem;\n\n    align-items: center;\n    justify-content: start;\n\n    //padding-top: 1rem;\n    // padding: .5rem;\n\n`\n\nexport const StationName = styled.h1`\n    color: ${props => props.theme.bg.septenary};\n    font-family: ${props => props.theme.font.primary};\n`\n\nexport const Header = styled.div`\n\tbackground: ${props => props.theme.bg.quinary};\n  \tborder-bottom: 1px solid black;\n  \twidth: 100%;\n  \tpadding: 1rem;\n`\n\n\n\n\n\nexport const PlotsContainer = styled.div`\n  \t//align-items: center;\n  \tposition: relative;\n    //display: flex;\n    //flex-direction: row;\n    //flex: 1;\n    width: 100%;\n    // background: red;\n    overflow: auto;\n    padding: 1rem 1rem 0rem 1rem;\n  \n    \n    // @media (max-width: ${props => props.theme.widthBreakpoint.laptopL}){\n    //     flex-direction: column;\n    // }\n\n    // display: flex;\n    // flex-direction: column;\n    // flex: 1;\n    // align-items: center;\n\n\t/* @media (min-width: ${props => props.theme.widthBreakpoint.laptopL}){\n      display: flex;\n      flex-direction: row;\n      flex: 1;\n\t} */\n`\n\nexport const PlotHeader = styled.div`\n\t//height: 30rem;\n\t//min-height: 30rem;\n`\n\nexport const SinglePlotContainer = styled.div`\n\tposition: relative;\n\tdisplay: flex;\n\tflex-direction: column;\n\tbackground: ${props => props.theme.bg.tertiary};\n\tborder-radius: 1.5rem;\n\tpadding: 1rem;\n\tmin-width: 60rem;\n\toverflow: hidden;\n\t\n\n    width: 100%;\n    // max-width: 60%;\n    margin-bottom: 1rem;\n    // min-height: ${props => (props.minHeight && props.minHeight > 25) ? props.minHeight.toString() + \"rem\" : \"30rem\"};\n    height: fit-content;\n    min-height: fit-content;\n  \n  \t// /* // row layout\n\t// @media (min-width: ${props => props.theme.widthBreakpoint.laptopL}){\n\t// \t//flex: 1;\n\t// \twidth: 100%;\n\t// \tmargin: 0 5rem;\n\t// \theight: fit-content;\n\t// \tmin-height: fit-content;\n\t// }\n    //\n  \t// // column layout\n\t// @media (max-width: ${props => props.theme.widthBreakpoint.laptopL}){\n\t// \twidth: 100%;\n\t// \tmargin-bottom: 1rem;\n\t// \t// min-height: ${props => (props.minHeight && props.minHeight > 25) ? props.minHeight.toString() + \"rem\" : \"30rem\"};\n\t// \theight: fit-content;\n\t// \tmin-height: fit-content;\n\t// } */\n`\n\nexport const PlotContainer = styled.div`\n\tposition: relative;\n\t\n\tmax-height: ${props => (props.minHeight && props.minHeight > 25) ? props.minHeight.toString() + \"rem\" : \"25rem\"};\n\tmin-height: ${props => (props.minHeight && props.minHeight > 25) ? props.minHeight.toString() + \"rem\" : \"25rem\"};\n\theight: ${props => (props.minHeight && props.minHeight > 25) ? props.minHeight.toString() + \"rem\" : \"25rem\"};\n  \n  \t//height: 100rem;\n  \t//min-height: 100rem;\n  \t//max-height: 100rem;\n  \n\tmin-width: 60rem;\n  \n\toverflow: hidden;\n`\n\nexport const NoDataText = styled.span`\n\tposition: absolute;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translate(-50%, -50%);\n\tfont-size: ${props => props.theme.fontSize.sz2};\n\tfont-family: ${props => props.theme.font.primary};\n\tfont-weight: ${props => props.theme.fontWeight.bold};\n\tcolor: ${props => props.theme.bg.septenary};\n`\n\n// ========== Statistics Container ========== //\nexport const StatsSection = styled.div`\n    /* background: ${props => LightenDarkenColor(props.theme.bg.quaternary, -10)}; */\n    border-radius: 0.5rem;\n\n    /* margin-bottom: 1rem; */\n\n    max-width: 60rem;\n    width: 100%;\n\n    height: 12rem;\n\n    display: flex;\n    flex-direction: row;\n\n    align-items: center;\n    justify-content: center;\n\n    padding: 0rem 4rem 0 4rem;\n`\nexport const StatTitle = styled.h2`\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 4rem;\n    \n    text-align: center;\n\n    font-size: ${props => props.theme.fontSize.sz2};\n    font-family: ${props => props.theme.font.primary};\n    color: white;\n`\n\nexport const Col = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n`\n\nexport const Stat = styled.div`\n    display: flex;\n    flex-direction: row;\n\n    align-items: center;\n    justify-content: center;\n\n`\n\nexport const StatLabel = styled.h3`\n    font-size: ${props => props.theme.fontSize.sz2};\n    font-family: ${props => props.theme.font.primary};\n    color: ${props => props.theme.fg.primary};\n\n    margin-right: 1rem;\n`\n\nexport const StatValue = styled.h4`\n    font-size: ${props => props.theme.fontSize.sz3};\n    font-family: ${props => props.theme.font.primary};\n    color: white;\n`\n\nexport const RowContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n\n    // width: 100%;\n    min-width: 15rem;\n    max-width: 45rem;\n`\n\nexport const DateSelectorIcon = styled.i`\n    font-size: 1.5rem;\n    margin-right: 1rem;\n    margin-left: 1rem;\n    color: ${props => props.theme.bg.septenary};\n\n    &:hover{\n        cursor:pointer;\n    }\n`\n\nexport const PlotTitle = styled.h2`\n  font-size: ${props => props.theme.fontSize.sz2};\n  font-family: ${props => props.theme.font.primary};\n  color: ${props => props.theme.bg.septenary};\n\n  margin: 0rem .5rem 1rem .5rem;\n`\n\nexport const DateSelectorTitle = styled.h1`\n    font-size: ${props => props.theme.fontSize.sz2};\n    font-family: ${props => props.theme.font.primary};\n    color: ${props => props.theme.bg.septenary};\n\n    margin: 0rem .5rem;\n\n`\n\nexport const LoadingIcon = styled.i`\n    font-size: 1.5rem;\n`","import styled from 'styled-components'\n\nexport const Container = styled.div`\n    /* position: absolute; */\n    /* left: 12rem; */\n    /* bottom: 3rem; */\n    /* right: 12rem; */\n    /* border-bottom: 0.02rem solid white; */\n    z-index: 1;\n    margin-bottom: 1rem;\n\n\n`;\n\nexport const TimespanButton = styled.button`\n    background: none;\n    border: none;\n    position: relative;\n\n    display: inline-block;\n    width: 5rem;\n    height: 2rem;\n    margin: 0rem .25rem;\n    \n    color: ${props => props.selected ? props.color : \"white\"};\n    line-height: 2rem;\n    text-align: center;\n    font-size: 1rem;\n    font-weight: 600;\n    font-family: ${props => props.thcolor};\n\n    border-bottom: ${props => props.selected ? '0.14rem' : '0.02rem'} solid ${props => props.selected ? props.color : \"white\"};\n    box-sizing: border-box;\n\n    cursor: pointer;\n    z-index: 2;\n    &:focus {outline:0;}\n    &:hover {\n        color: ${props => props.color};\n    }\n`;","import React from 'react';\n\nimport * as styled from './timespans.style'\n\nconst TimeSpans = (props) => {\n\n    const {\n        timeSpan,\n        setTimeSpan,\n        color\n    } = props\n\n    return (\n        <styled.Container>\n            {/* <styled.TimespanButton color={color} selected={timeSpan == 'live'} onClick={() => setTimeSpan('live')}>Live</styled.TimespanButton> */}\n            <styled.TimespanButton color={color} selected={timeSpan == 'day'} onClick={() => setTimeSpan('day')}>Day</styled.TimespanButton>\n            <styled.TimespanButton color={color} selected={timeSpan == 'week'} onClick={() => setTimeSpan('week')}>Week</styled.TimespanButton>\n            <styled.TimespanButton color={color} selected={timeSpan == 'month'} onClick={() => setTimeSpan('month')}>6 weeks</styled.TimespanButton>\n            <styled.TimespanButton color={color} selected={timeSpan == 'year'} onClick={() => setTimeSpan('year')}>Year</styled.TimespanButton>\n            {/* <styled.TimespanButton color={color} selected={timeSpan == 'all'} onClick={() => setTimeSpan('all')}>ALL</styled.TimespanButton> */}\n        </styled.Container>\n    )\n}\n\nexport default TimeSpans","import styled from 'styled-components'\n\nimport { LightenDarkenColor } from '../../../../../../methods/utils/color_utils'\n\nexport const ButtonGroupContainer = styled.div`\n    width: 60rem;\n    max-width: 60rem;\n    height: 2.5rem;\n\n    display: flex;\n    flex-directin: row;\n`\n\nexport const SelectorButton = styled.button`\n    flex-grow: 1;\n    border: none;\n\n    color: ${props => props.selected ? props.theme.fg.primary : props.theme.bg.senary};\n    background: ${props => LightenDarkenColor(props.theme.bg.quaternary, props.selected ? -10 : -15)};\n\n    &:focus {\n        outline: none;\n    }\n`","import React, {useContext} from 'react';\n\n// Import component\nimport { ResponsiveBar } from '@nivo/bar'\n\n// Import utils\nimport { } from '../../../../../../methods/utils/utils'\nimport PropTypes from \"prop-types\";\nimport DashboardButton from \"../../../dashboards_page/dashboard_buttons/dashboard_button/dashboard_button\";\nimport {ThemeContext} from \"styled-components\";\n\n\n\nconst BarChart = (props) => {\n\n    const {\n        data,\n        selector,\n        mainTheme,\n        timeSpan,\n        axisBottom,\n        axisLeft,\n        horizontal,\n        layout,\n        enableGridX,\n        enableGridY,\n        ...rest\n    } = props\n\n    const themeContext = useContext(ThemeContext);\n\n\n    const theme = {\n        background: 'transparent',\n        // background: 'red',\n        fontFamily: 'sans-serif',\n        fontSize: 11,\n        textColor: 'white',\n        whiteSpace: \"nowrap\",\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        axis: {\n            domain: {\n                line: {\n                    stroke: themeContext.bg.quinary,\n                    strokeWidth: 2\n                }\n            },\n            ticks: {\n                line: {\n                    stroke: themeContext.bg.septenary,\n                    strokeWidth: 1\n                },\n                text: {\n\n                }\n            },\n            legend: {\n                text: {\n                    fontSize: 12,\n                }\n            }\n        },\n        grid: {\n            line: {\n                stroke: themeContext.bg.senary,\n                strokeWidth: 1\n            }\n        },\n        legends: {\n            text: {\n                fill: '#333333'\n            }\n        },\n        labels: {\n            text: {}\n        },\n        markers: {\n            lineColor: '#000000',\n            lineStrokeWidth: 1,\n            text: {}\n        },\n        dots: {\n            text: {}\n        },\n        tooltip: {\n            container: {\n                background: 'white',\n                color: 'inherit',\n                fontSize: 'inherit',\n                borderRadius: '2px',\n                boxShadow: '0 1px 2px rgba(0, 0, 0, 0.25)',\n                padding: '5px 9px'\n            },\n            basic: {\n                whiteSpace: 'pre',\n                display: 'flex',\n                alignItems: 'center'\n            },\n            table: {},\n            tableCell: {\n                padding: '3px 5px'\n            }\n        },\n        crosshair: {\n            line: {\n                stroke: '#000000',\n                strokeWidth: 1,\n                strokeOpacity: 0.75,\n                strokeDasharray: '6 6'\n            }\n        },\n        annotations: {\n            text: {\n                fontSize: 13,\n                outlineWidth: 2,\n                outlineColor: '#ffffff'\n            },\n            link: {\n                stroke: '#000000',\n                strokeWidth: 1,\n                outlineWidth: 2,\n                outlineColor: '#ffffff'\n            },\n            outline: {\n                fill: 'none',\n                stroke: '#000000',\n                strokeWidth: 2,\n                outlineWidth: 2,\n                outlineColor: '#ffffff'\n            },\n            symbol: {\n                fill: '#000000',\n                outlineWidth: 2,\n                outlineColor: '#ffffff'\n            }\n        }\n    }\n\n\n    // if (data === null || data === undefined) { return null }\n    return (\n        <ResponsiveBar\n            data={selector ? data[selector] : data}\n            keys={['y']}\n            // borderColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\n            indexBy='x'\n            // indexScale={{ type: 'band', round: true }}\n            animate={false}\n            colors={{ scheme: 'nivo' }}\n            colorBy={\"index\"}\n            // colors={['#d177ed', \"#eed312\"]}\n            // color={['#d177ed', \"#eed312\"]}\n            borderColor={{ from: 'color' }}\n            // borderColor='#d177ed'\n            // xScale={{ type: 'time', format: '%Y-%m-%d %H:%M:%S', useUTC: false, precision: 'second', }}\n            // xFormat={'time:' + format}\n            // xFormat=\"time:%Y-%m-%d\"\n            // yScale={{ type: 'linear', min: 'auto', max: 'auto', stacked: false, reverse: false }}\n            margin={{ top: 20, left: 80, right: 80, bottom: 75 }}\n            // padding={{ top: 5, left: 5, right: 5, bottom: 5 }}\n            layout={layout}\n\n            axisTop={null}\n            axisRight={null}\n            axisBottom={{\n                tickSize: 5,\n                // tickPadding: layout === \"horizontal\" ? 10 : -40,\n                // translateY: -25\n                legendOffset: 50,\n                tickRotation: 0,\n                legend: 'Time',\n                fontSize: \"8rem\",\n                legendPosition: 'middle',\n                // legendOffset: 50,\n                ...axisBottom\n\n\n                // format: (value) => {\n                //     console.log('QQQQ val', value.split(' ')[1])\n                //     // value.split(' ')[1]\n                // },\n            }}\n            axisLeft={{\n                tickSize: 5,\n                zIndex: 200,\n                // anchor: \"right\",\n                // tickPadding: layout === \"horizontal\" ? 40 : 4,\n                tickRotation: 0,\n                legend: 'Units',\n                legendPosition: 'middle',\n                legendOffset: -70,\n                ...axisLeft\n            }}\n\n            // enableGridX={false}\n            // enableGridY={false}\n            theme={theme}\n            enableGridY={enableGridY}\n            enableGridX={enableGridX}\n            {...rest}\n\n        // legends={[{\n        //     fontSize: '1rem'\n        // }]}\n\n        />\n    )\n}\n\n// Specifies propTypes\nBarChart.propTypes = {\n};\n\n// Specifies the default values for props:\nBarChart.defaultProps = {\n    layout: \"vertical\",\n    enableGridX: false,\n    enableGridY: false,\n};\n\nexport default BarChart","import React, { useState, useEffect, useContext, useRef, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useParams, useHistory } from 'react-router-dom'\n\n// Import styles\nimport * as styled from './statistics_overview.style'\nimport { ThemeContext } from 'styled-components';\n\n// Import Components\nimport TimeSpans from './timespans/timespans'\nimport DataSelector from './data_selector/data_selector.js'\nimport ApexGaugeChart from './apex_gauge_chart'\nimport BarChart from '../statistics_charts/statistics_charts_types/bar_chart'\n\nimport { ResponsiveLine } from '@nivo/line'\n\n// Import Actions\nimport { getStationAnalytics } from '../../../../../redux/actions/stations_actions'\n\n\nimport { ResponsiveBar } from '@nivo/bar';\n\n// Import Utils\nimport { getDateName, getDateFromString, convertArrayToObject } from '../../../../../methods/utils/utils'\nimport {getReportAnalytics, getReportEvents} from \"../../../../../redux/actions/report_event_actions\";\n\nconst tempColors = ['#FF4B4B', '#56d5f5', '#50de76', '#f2ae41', '#c7a0fa']\n\n// TODO: Commented out charts for the time being (See comments that start with TEMP)\nconst StatisticsOverview = (props) => {\n\n    const themeContext = useContext(ThemeContext);\n\n    const params = useParams()\n    const stationID = params.stationID\n    let plotRef = useRef()\n\n    const dispatch = useDispatch()\n    const onGetReportEvents = () => dispatch(getReportEvents());\n\n    const [delayChartRender, setDelayChartRender] = useState('none')\n    const widgetPageLoaded = useSelector(state => { return state.widgetReducer.widgetPageLoaded })\n    const stations = useSelector(state => state.stationsReducer.stations)\n    const devices = useSelector(state => state.devicesReducer.devices)\n    const reportEvents = useSelector(state => { return state.reportEventsReducer.reportEvents }) || {}\n    const dashboards = useSelector(state => { return state.dashboardsReducer.dashboards }) || {}\n\n    const [throughputData, setThroughputData] = useState(null)\n    const [reportData, setReportData] = useState(null)\n\n    const [timeSpan, setTimeSpan] = useState('day')\n    const [dateIndex, setDateIndex] = useState(0)\n    const [format, setFormat] = useState('%m-%d %H:%M')\n    const [selector, setSelector] = useState('throughPut')\n    const [slice, setSlice] = useState(null)\n    const [defaultTicks, setDefaultTicks] = useState([])\n    const [isThroughputLoading, setIsThroughputLoading] = useState(false)\n    const [isReportsLoading, setIsReportsLoading] = useState(false)\n\n    const [isDevice, setIsDevice] = useState(false)\n    const [locationName, setLocationName] = useState(\"\")\n    const [reportButtons, setReportButtons] = useState([])\n\n    // update location properties\n    useEffect(() => {\n\n        const location = stations[stationID]\n        setLocationName(location.name)\n\n        // get report buttons\n        const dashboardId = location.dashboards && Array.isArray(location.dashboards) && location.dashboards[0]\n        const dashboard = dashboards[dashboardId] ? dashboards[dashboardId] : {}\n        const currReportButtons = dashboard.report_buttons ? dashboard.report_buttons : []\n\n        // store as object of ids to prevent excessive looping\n        setReportButtons(convertArrayToObject(currReportButtons, \"_id\"))\n\n    }, [stationID, dashboards, stations])\n\n\n    const colors = {\n        taktTime: '#42e395',\n        pYield: '#59dbff',\n        throughPut: '#d177ed'\n    }\n\n    // On page load, load in the data for today\n    useEffect(() => {\n        onGetReportEvents() // load report events\n\n\n        if (stations[params.stationID].device_id !== undefined) {\n            setIsDevice(true)\n        }\n\n        // TEMP\n        // If the page has been loaded in (see widget pages) then don't delay chart load, \n        // else delay chart load because it slows down the widget page opening animation.\n        if (widgetPageLoaded) {\n            setDelayChartRender('flex')\n        } else {\n            setTimeout(() => {\n                setDelayChartRender('flex')\n            }, 300);\n        }\n\n        // TEMP\n        const body = { timespan: timeSpan, index: dateIndex }\n        const dataPromise = getStationAnalytics(stationID, body)\n        dataPromise.then(response => {\n            if (response === undefined) return\n            setThroughputData(response)\n\n        })\n\n        getReportData(body)\n    }, [])\n\n    const getReportData = async (body) => {\n        const reportAnalyticsResponse = await getReportAnalytics(stationID, body)\n\n        if(reportAnalyticsResponse && !(reportAnalyticsResponse instanceof Error)) {\n            setReportData(reportAnalyticsResponse)\n            setIsReportsLoading(false)\n        }\n    }\n\n    const handleDeviceStatistics = () => {\n\n        const device = devices[stations[params.stationID].device_id]\n        if (device === undefined) return\n        return (\n\n            <>\n                {/* <p>{Object.keys(device.real_data)}</p> */}\n                <styled.StatLabel>{device.real_data}</styled.StatLabel>\n            </>\n        )\n    }\n\n    // TEMP\n    // useEffect(() => {\n    //     if (data !== null) {\n    //         const N = Math.round(Math.max(data[selector].length, 80) / 6)\n    //         const ticks = everyN(data[selector], N).map(datapoint => datapoint.x)\n    //         setDefaultTicks(ticks)\n    //     }\n    // }, [data])\n\n    const findSlice = e => {\n        // console.log(e.clientX, plotRef.getBoundingClientRect())\n    }\n\n    const everyN = (array, N) => {\n        return array.filter(function (value, index) {\n            return index % N == 0 || index == array.length - 1;\n        });\n    }\n\n    const pickN = (array, N) => {\n        const linspace = Math.round(array.length / N)\n        return everyN(array, linspace)\n    }\n\n    const ToolTipCallback = (props) => {\n        setSlice(props.slice.points[0].data)\n        return null\n    }\n\n    /**\n     * Gets the new data based on the selected time span and dateIndex\n     * \n     * TimeSpan:\n     * Can be either Day, Week, Month or Year\n     * \n     * DateIndex:\n     * The current date (today) index is 0, if you want to go back to the past date, the index would be 1 \n     * \n     * @param {*} newTimeSpan \n     * @param {*} newDateIndex \n     */\n    const handleTimeSpan = async (newTimeSpan, newDateIndex) => {\n\n        setTimeSpan(newTimeSpan)\n        setDateIndex(newDateIndex)\n\n        setIsThroughputLoading(true)\n        setIsReportsLoading(true)\n\n        const body = { timespan: newTimeSpan, index: newDateIndex }\n        const dataPromise = getStationAnalytics(stationID, body)\n        const reportAnalyticsResponse = await getReportAnalytics(stationID, body)\n\n        if(reportAnalyticsResponse && !(reportAnalyticsResponse instanceof Error)) {\n            setReportData(reportAnalyticsResponse)\n            setIsReportsLoading(false)\n        }\n\n        dataPromise.then(response => {\n\n            if (response === undefined) return setIsThroughputLoading(false)\n\n            setThroughputData(response)\n            setIsThroughputLoading(false)\n        })\n\n        // Usses a regex to take all characters before a '['\n        // switch (timeSpan(/^(.*?)(?=\\[|$)/)) {\n        switch (newTimeSpan) {\n            case 'live':\n                setFormat('%I:%M:%S %p')\n                setTimeSpan('live')\n                break\n            case 'day':\n                setFormat('%I:%M %p')\n                setTimeSpan('day')\n                break\n            case 'week':\n                setFormat('%m-%d %I:%M %p')\n                setTimeSpan('week')\n                break\n            case 'month':\n                setFormat('%m-%d')\n                setTimeSpan('month')\n                break\n            case 'year':\n                setFormat('%Y-%m-%d')\n                setTimeSpan('year')\n                break\n            case 'all':\n                setFormat('%Y-%m-%d')\n                setTimeSpan('all')\n                break\n        }\n    }\n\n    const renderHeader = () => {\n        return (\n            <div style={{ marginBottom: '1rem', alignItems: \"center\", display: \"flex\", flexDirection: \"column\" }}>\n                {\n                    <>\n                        <TimeSpans color={colors[selector]} setTimeSpan={(timeSpan) => handleTimeSpan(timeSpan, 0)} timeSpan={timeSpan}></TimeSpans>\n\n                        {/* Commented out for now, only need through put bar chart */}\n                        {/* {handleGaugeCharts()} */}\n                    </>\n                }\n                {renderDateSelector()}\n            </div>\n        )\n    }\n\n    const renderReportChart = () => {\n        // get array of report buttons for current station\n        const reportButtonsArr = Object.values(reportButtons)\n\n        // get just the names of the buttons as an array\n        const reportButtonNames = (reportButtonsArr && Array.isArray(reportButtonsArr)) ? reportButtonsArr.map((currButton) => currButton.label) : []\n\n        // data comes from back end with the key of the button as the key and the value as the count, but we want the name of the button\n        // therefore, must map through each item and replace the button's id with its name\n        const filteredData = (reportData && reportData.reports && Array.isArray(reportData.reports))  ?\n            reportData.reports.map((currReport) => {\n\n                const {\n                    lable, // extract label\n                    ...currReportEntries // this contains the button keys followed by their count as the value\n                } = currReport\n\n                // create object for storing new key value paies (buttonName: count)\n                var updatedReport = {\n                    lable\n                }\n\n                const currReportButtonIds = Object.keys(currReportEntries)\n\n                currReportButtonIds.forEach((currButtonId) => {\n\n                    // if there is a button with the corresponding id\n                    if(reportButtons[currButtonId]) {\n                        // get the label from the actual button, and get the count from the entry, then add it to the updated report\n                        updatedReport[reportButtons[currButtonId].label] =  currReportEntries[currButtonId] ? currReportEntries[currButtonId] : 0\n                    }\n                })\n\n                return updatedReport\n            })\n            :\n            []\n\n        // set min height based on number of entries so chart won't squeeze rows too close together\n        const minHeight = (filteredData && Array.isArray(filteredData)) ?  filteredData.length * 2 : 0\n\n        return (\n            <styled.SinglePlotContainer\n                minHeight={minHeight}\n            >\n                <styled.PlotHeader>\n                    <styled.PlotTitle>Reports</styled.PlotTitle>\n                </styled.PlotHeader>\n\n                {isThroughputLoading ?\n                    <styled.PlotContainer>\n                        <styled.LoadingIcon className=\"fas fa-circle-notch fa-spin\" style={{ fontSize: '3rem', marginTop: '5rem' }} />\n                    </styled.PlotContainer>\n                    :\n                    <styled.PlotContainer\n                        minHeight={minHeight}\n                    >\n                        <BarChart\n                            data={filteredData ? filteredData : []}\n                            keys={reportButtonNames}\n                            indexBy={'lable'}\n                            colorBy={\"id\"}\n                            mainTheme={themeContext}\n                            timeSpan={timeSpan}\n                            layout={true ? \"horizontal\" : \"vertical\"}\n                            enableGridX={true ? true : false}\n                            enableGridY={!true ? true : false}\n                            axisBottom={{\n                                legend: 'Count',\n                            }}\n                            axisLeft={{\n                                legend: 'Time'\n                            }}\n                        />\n\n                        {!throughputData &&\n                        <styled.NoDataText>No Data</styled.NoDataText>\n                        }\n                    </styled.PlotContainer>\n                }\n\n            </styled.SinglePlotContainer>\n        )\n    }\n\n    const renderThroughputChart = () => {\n\n        const filteredData = throughputData?.throughPut\n\n        const minHeight = 0\n\n        const isData = (filteredData && Array.isArray(filteredData) && filteredData.length > 0)\n\n        return (\n            <styled.SinglePlotContainer\n                minHeight={minHeight}\n            >\n                <styled.PlotHeader>\n                    <styled.PlotTitle>Throughput</styled.PlotTitle>\n                </styled.PlotHeader>\n\n                {isThroughputLoading ?\n                    <styled.PlotContainer>\n                        <styled.LoadingIcon className=\"fas fa-circle-notch fa-spin\" style={{ fontSize: '3rem', marginTop: '5rem' }} />\n                    </styled.PlotContainer>\n                    :\n\n                    <styled.PlotContainer\n                        minHeight={minHeight}\n                    >\n                        <BarChart\n                            data={filteredData ? filteredData : []}\n                            enableGridY={isData ? true : false}\n                            mainTheme={themeContext}\n                            timeSpan={timeSpan}\n                            axisBottom={{\n                                tickRotation: -90,\n                            }}\n                            axisLeft={{\n                                enable: true,\n                            }}\n                        />\n\n                        {!throughputData &&\n                            <styled.NoDataText>No Data</styled.NoDataText>\n                        }\n                    </styled.PlotContainer>\n                }\n\n            </styled.SinglePlotContainer>\n        )\n    }\n\n    // Handles the date selector at the top of the charts\n    const renderDateSelector = () => {\n\n        if (throughputData === null) return null\n\n        const throughPut = throughputData.throughPut\n\n        let dateSelectorTitle = ''\n        let date\n        const today = new Date()\n\n        switch (timeSpan) {\n            case 'day':\n                // date = getDateFromString(Object.values(throughPut)[0].x)\n                dateSelectorTitle = today.toDateString()\n                break;\n\n            case 'week':\n                const firstDate = getDateFromString(Object.values(throughPut)[0].x)\n                const lastDate = getDateFromString(Object.values(throughPut)[Object.values(throughPut).length - 1].x)\n                dateSelectorTitle = `${firstDate.toDateString()} - ${lastDate.toDateString()}`\n                break;\n\n            case 'month':\n                date = getDateFromString(Object.values(throughPut)[0].x)\n                const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n                dateSelectorTitle = `${months[date.getMonth()]} ${date.getFullYear()}`\n                break;\n\n            case 'year':\n                date = getDateFromString(Object.values(throughPut)[0].x)\n                dateSelectorTitle = `${date.getFullYear()}`\n                break;\n\n            default:\n                break;\n        }\n\n\n        return (\n            <styled.RowContainer>\n                <styled.DateSelectorIcon\n                    className='fas fa-chevron-left'\n                    onClick={() => {\n                        const index = dateIndex + 1\n                        handleTimeSpan(timeSpan, index)\n                    }}\n                />\n                {isThroughputLoading ?\n                    <styled.LoadingIcon className=\"fas fa-circle-notch fa-spin\" />\n                    :\n                    <styled.DateSelectorTitle>{throughputData.date_title}</styled.DateSelectorTitle>\n\n                }\n\n                {/* If the current dateIndex is 0, then have a blank icon that does nothing. Can't go to the future now can we dummy */}\n                {dateIndex !== 0 ?\n                    <styled.DateSelectorIcon\n                        className='fas fa-chevron-right'\n                        onClick={() => {\n                            const index = dateIndex - 1\n                            handleTimeSpan(timeSpan, index)\n                        }}\n                    />\n                    :\n                    <styled.DateSelectorIcon />\n\n                }\n            </styled.RowContainer>\n        )\n\n    }\n\n    const handleGaugeCharts = () => {\n        return (\n            <styled.StatsSection>\n                <ApexGaugeChart max={Math.min(...throughputData.taktTime.map(point => point.y))} min={Math.max(...throughputData.taktTime.map(point => point.y))} value={throughputData.taktTime[throughputData.taktTime.length - 1].y}\n                    formatValue={() => {\n                        // const val = data.taktTime[data.taktTime.length - 1].y\n                        // return String(Math.floor(val)) + ':' + String(Math.round((val % 1) * 60))\n                        return '1:23'\n                    }}\n                    name='Takt Time' color={colors.taktTime} onClick={() => setSelector('taktTime')} selected={selector == 'taktTime'} />\n                <ApexGaugeChart min={Math.min(...throughputData.pYield.map(point => point.y))} max={Math.max(...throughputData.pYield.map(point => point.y))} value={throughputData.pYield[throughputData.pYield.length - 1].y}\n                    formatValue={() =>\n                        Math.round(10 * throughputData.pYield[throughputData.pYield.length - 1].y) / 10\n                    }\n                    name='Quality' color={colors.pYield} onClick={() => setSelector('pYield')} selected={selector == 'pYield'} />\n                <ApexGaugeChart min={Math.min(...throughputData.throughPut.map(point => point.y))} max={Math.max(...throughputData.throughPut.map(point => point.y))} value={throughputData.throughPut[throughputData.throughPut.length - 1].y}\n                    formatValue={() =>\n                        throughputData.throughPut[throughputData.throughPut.length - 1].y\n                    }\n                    name='Throughput' color={colors.throughPut} onClick={() => setSelector('throughPut')} selected={selector == 'throughPut'} />\n            </styled.StatsSection>\n        )\n    }\n\n\n\n    return (\n\n        <styled.OverviewContainer>\n            <styled.Header>\n                <styled.StationName>{locationName}</styled.StationName>\n            </styled.Header>\n\n            {/* {isDevice &&\n                handleDeviceStatistics()\n            } */}\n\n\n            {/* Commented out for now, only need through put bar chart */}\n            {/* <DataSelector selector={selector} setSelector={setSelector} /> */}\n\n            <styled.PlotsContainer\n                ref={pc => plotRef = pc}\n                // onMouseMove={findSlice}\n                onMouseLeave={() => { setSlice(null) }}\n            >\n                {renderHeader()}\n                {renderThroughputChart()}\n                {renderReportChart()}\n            </styled.PlotsContainer>\n\n        </styled.OverviewContainer>\n    )\n}\n\nexport default StatisticsOverview","import styled from 'styled-components'\n\nexport const ChartContainer = styled.div`\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    width: 90%;\n    height: 80rem;\n`\n\nexport const StatisticsIcon = styled.i`\n    font-size: 5rem;\n\n`","import React, { useState, useEffect } from 'react';\n\nimport * as styled from './statistics_page.style'\n\n// Import Components\nimport StatisticsOverview from './statistics_overview/statistics_overview'\nimport StatisticsCharts from './statistics_charts/statistics_charts'\n\n// Import Actions\nimport moduleName from '../../../../redux/actions/'\n\nconst StatisticsPage = () => {\n\n    useEffect(() => {\n        \n        return () => {\n            \n        }\n    }, [])\n\n    return (\n        <styled.StatisticsContainer>\n\n            {/* <styled.StatisticsDownloadButton>\n                Download CSV\n            </styled.StatisticsDownloadButton> */}\n\n            {/* <styled.StatisticsSectionsContainer>\n                <styled.StatisticsSectionsButton \n                    style={{borderRadius:'.5rem 0rem 0rem .5rem'}} \n                    onClick={() => {\n                        setShowCharts(false)\n                        setShowOverview(true)\n                    }}\n                    selected={showOverview}\n                >\n                    Overview\n                </styled.StatisticsSectionsButton>\n                \n                <styled.StatisticsSectionsButton \n                    style={{borderRadius:'0rem .5rem .5rem 0rem'}}\n                    onClick={() => {\n                        setShowCharts(true)\n                        setShowOverview(false)\n                    }}\n                    selected={showCharts}\n\n                >\n                    Charts\n                </styled.StatisticsSectionsButton>\n\n            </styled.StatisticsSectionsContainer> */}\n\n            <StatisticsOverview/>\n            \n            {/* \n\n            {showOverview &&\n                <div style={{display:'flex', width:'100%', justifyContent:'center', alignItems:'center', marginTop:'5rem', flexDirection:'column'}}>\n                    <StatisticsOverview/>\n                </div>\n            }\n\n\n            {showCharts &&\n                <div style={{display:'flex', width:'100%', justifyContent:'center', alignItems:'center', marginTop:'5rem', flexDirection:'column'}}>\n                    <StatisticsCharts/>\n                </div>\n            } */}\n\n        </styled.StatisticsContainer>\n    )\n}\n\nexport default StatisticsPage","import React from 'react';\n\n\nconst TasksPage = (props) => {\n\n\n\treturn (\n\t\t<div style={{width: \"100%\", height: \"100%\"}}>\n\t\t\tTasks page coming soon...\n\t\t</div>\n\n\t)\n}\n\nexport default TasksPage","import styled from 'styled-components';\n\nexport const PageContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    max-height: 100%;\n    overflow: hidden;\n    max-width: 100%;\n    width: 100%;\n    align-items: center;\n    position: relative;\n\n\n    flex: 1;\n`\n\nexport const ConnectContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 1rem;\n    width: 100%;\n`\n\nexport const DeviceName = styled.p`\n    max-width: 100%;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    margin: 0;\n`\n\nexport const LiveText = styled.span`\n    max-width: 100%;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    margin: 0;\n    color: red;\n\n    position: absolute;\n    right: 1rem;\n`\n\nexport const Icon = styled.i`\n\tmargin: 1rem;\n\tcolor: black;\n\tfont-size: 1.5rem;\n`\n\nexport const TitleContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  margin: 0;\n  padding: 0;\n  padding-top: .2rem;\n  padding-bottom: .2rem;\n`\n","import styled, { css } from 'styled-components';\n\n\nexport const VideoContainer = styled.video`\n    z-index: 500;\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    top: 0;\n    left: 0;\n`\n\nexport const PlayerWrapper = styled.div`\nz-index:500;\n  position: relative;\n  width: 100%;\n  height: 100%;\n  background: grey;\n   /* Player ratio: 100 / (1280 / 720) */\n  //padding-top: 56.25%;\n  //max-height: 20rem;\n\n\n`\n\nexport const TextContainer = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  z-index: 500;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n\n`\n\nexport const loaderCss = css`\n  z-index: 2000;\n  display: block;\n  margin: 0 auto;\n  //color: pink;\n  //border-color: red;\n\n\n`\n\nconst textStyle = css`\n\n  //color: red;\n\n`\n\n\nexport const ErrorText = styled.div`\n  ${textStyle};\n  color: red;\n\n`\n\nexport const StatusText = styled.div`\n  ${textStyle};\n  color: white;\n\n`\n","import React, { useEffect } from 'react';\n\nimport ClipLoader from \"react-spinners/ClipLoader\"\n\nimport * as styled from './stream_container.style'\n\nconst StreamContainer = (props) => {\n    const {\n        status,\n        error,\n        myPeerId,\n        loading, streams\n    } = props\n\n\n    const getVideoElement = () => {\n        return document.getElementById(\"stream\");\n    }\n\n    const resetVideo = () => {\n        console.log(\"resetVideo called\")\n        // Reset the video element and stop showing the last received frame\n        var videoElement = getVideoElement();\n        if(videoElement) {\n            videoElement.pause();\n            videoElement.src = \"\";\n            videoElement.load();\n        }\n\n    }\n\n    useEffect(() => {\n        const vidEle = getVideoElement()\n        if(streams && Array.isArray(streams)) {\n            if (vidEle.srcObject !== streams[0]) {\n\n                // clean up old stream\n                let oldStream = vidEle.srcObject;\n\n                if(oldStream) {\n                    let tracks = oldStream.getTracks();\n                    tracks.forEach(function(track) {\n                        track.stop();\n                        track = null\n                    });\n                    oldStream = null\n                }\n\n\n                // streams.forEach((stream, ind) => {\n                //     logger.log(\"closing stream\", stream)\n                //     if (stream != undefined) {\n                //         if (stream.active) {\n                //             stream.getTracks().forEach(function (track) {\n                //                 logger.log(\"closing track\", track)\n                //\n                //                 track.stop();\n                //             });\n                //             stream = null;\n                //         }\n                //     }\n                // })\n\n                // set new stream\n                getVideoElement().srcObject = streams[0];\n            }\n        } else {\n\n\n            getVideoElement().srcObject = null\n        }\n    }, [streams])\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            let vidEle = getVideoElement()\n            if(vidEle.getVideoPlaybackQuality().droppedVideoFrames > 0) resetVideo()\n        }, 1000);\n\n        return () => clearInterval(interval);\n    }, []);\n\n\n    return (\n        <styled.PlayerWrapper>\n            <styled.TextContainer>\n                <ClipLoader\n                    css={styled.loaderCss}\n                    color={'white'}\n                    size={50}\n                    loading={loading}\n                />\n                {status &&\n                <styled.StatusText>{status}</styled.StatusText>\n                }\n\n                {error &&\n                <styled.ErrorText>{error}</styled.ErrorText>\n                }\n            </styled.TextContainer>\n\n            <styled.VideoContainer\n                id=\"stream\"\n                autoPlay\n                playsInline\n                muted\n\n            >\n                Your browser doesn't support video\n            </styled.VideoContainer>\n        </styled.PlayerWrapper>\n    );\n}\n\nexport default StreamContainer;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n\tborder: 1px solid black;\n\twidth: 100%;\n\tpadding: .5rem 1rem .5rem 1rem;\n`\n\nexport const Item = styled.div`\n\n`","import React, { useState, useEffect } from 'react';\nimport * as styled from \"./stream_info.style\"\n\nconst StreamInfo = (props) => {\n\n\tconst {\n\t\tloading,\n\t\tstatus,\n\t\terror,\n\t\toutID,\n\t\tpeerID,\n\t\tstreams\n\t} = props\n\n\treturn(\n\t\t<styled.Container>\n\t\t\t<styled.Item>loading: {loading}</styled.Item>\n\t\t\t<styled.Item>status: {status}</styled.Item>\n\t\t\t<styled.Item>error: {error}</styled.Item>\n\t\t\t<styled.Item>my ID: {outID}</styled.Item>\n\t\t\t<styled.Item>peer ID: {peerID}</styled.Item>\n\t\t</styled.Container>\n\n\t)\n}\n\nexport default StreamInfo","import log from 'loglevel';\n\nconst logger = log.getLogger(\"reconnectingWebRTCSocket\")\n\nlogger.setLevel(\"silent\")\n// RTCPeerConnection = window.RTCPeerConnection || window.webkitRTCPeerConnection\nconst googleSTUN = \"stun:stun.l.google.com:19302\"\nconst mozillaSTUN = \"stun:stun.services.mozilla.com\"\n\n// RTCPeerConnection = window.RTCPeerConnection || window.webkitRTCPeerConnection;\n\nRTCSessionDescription = window.RTCSessionDescription || window.RTCSessionDescription\nRTCIceCandidate = window.RTCIceCandidate || window.RTCIceCandidate\n\nvar default_rtc_configuration = {\n    iceServers: [\n        {\n            urls: mozillaSTUN\n        },\n        {\n            urls: googleSTUN\n        }\n    ],\n    iceCandidatePoolSize: 10,\n\t\tasdasdsa: 2322\n};\n\n\n\nexport default function reconnectingWebRTCSocket(URL, our_id, peer_id, rtc_config) {\n    let client;\n    let isConnected = false;\n    let reconnectOnClose = true;\n    let messageListeners = [];\n    let stateChangeListeners = [];\n    var peer_connection;\n    var send_channel;\n    var remoteTrackListeners = [];\n    var errorListeners = [];\n    var statusListeners = [];\n    var status = null;\n    var error = null;\n    var roomReconnectInterval;\n    var peerReconnectInterval;\n    var helloInterval;\n    var rtc_configuration = rtc_config || default_rtc_configuration\n    var streams = []\n\n    function addMessageListener(fn) {\n\n        messageListeners.push(fn);\n    }\n\n    function removeMessageListener(fn) {\n        messageListeners = messageListeners.filter(l => l !== fn);\n    }\n\n    function addErrorListener(fn) {\n\n        errorListeners.push(fn);\n        return () => {\n            errorListeners = errorListeners.filter(l => l !== fn);\n        };\n    }\n\n    const setError = (message) => {\n        logger.error(\"setError: measssadasdsasagee\",message)\n        error = message;\n        errorListeners.forEach(fn => fn(message));\n    }\n\n    function addStatusListener(fn) {\n        statusListeners.push(fn);\n        return () => {\n            statusListeners = statusListeners.filter(l => l !== fn);\n        };\n    }\n\n    const setStatus = (message) => {\n        status = message;\n        statusListeners.forEach(fn => fn(message));\n    }\n\n    function onStateChange(fn) {\n        stateChangeListeners.push(fn);\n        return () => {\n            stateChangeListeners = stateChangeListeners.filter(l => l !== fn);\n        };\n    }\n\n    function start() {\n        client = new WebSocket(URL);\n\n        client.onopen = () => {\n            isConnected = true;\n            stateChangeListeners.forEach(fn => fn(true));\n\n            setHelloInterval()\n        }\n\n        const close = client.close;\n\n        // Close without reconnecting;\n        client.close = () => {\n            reconnectOnClose = false;\n            close.call(client);\n        }\n\n        client.onmessage = (event) => {\n            logger.log(\"onmessage event.dataa\", event.data)\n\n            messageListeners.forEach(fn => fn(event));\n            let msg;\n\n            switch (event.data) {\n                case \"HELLO\":\n                    setStatus(\"Registered with server.\");\n                    clearHelloInterval()\n                    setRoomReconnectInterval()\n                    return;\n\n                case \"SESSION_OK\":\n                    // successfully connected, clear interval\n                    clearRoomReconnectInterval()\n\n                    setStatus(\"Successfuly started session with \" + peer_id);\n                    return\n\n                default:\n                    if (event.data.startsWith(\"ERROR\")) {\n                        setError(event.data);\n                        return;\n                    }\n                    else if (event.data.startsWith(\"SESSION_PEER_LEFT\")) {\n                        // reconnectToPeer()\n                    }\n                    else if (event.data.startsWith(\"ROOM_OK\")) {\n                        clearRoomReconnectInterval()\n                        setStatus(\"Successfuly joined room \" + peer_id);\n                        setPeerReconnectInterval(5000)\n                        return\n                    }\n                    else if (event.data.startsWith(\"ROOM_PEER_LEFT\")) {\n                        logger.log(\"ROOM_PEEsaR_LEFT\")\n                        return\n                    }\n                    else if (event.data.startsWith(\"ROOM_PEER_MSG\")) {\n                        logger.log(\"ROOM_PEEsR_MSG ROOM_PEER_MSG ROOM_PEER_MSG\")\n                        var splitted = event.data.split(\" \");\n                        logger.log(\"splitted\",splitted)\n\n                        return\n                    }\n                    else if (event.data.startsWith(\"ping\")) {\n                        return\n                    }\n                    if (event.data.startsWith(\"OFFER_REQUEST\")) {\n                        // The peer wants us to set up and then send an offer\n                        if (!peer_connection)\n                            createCall(null).then (generateOffer);\n                    }\n                    else {\n                        // Handle incoming JSON SDP and ICE messages\n                        try {\n                            msg = JSON.parse(event.data);\n                        } catch (e) {\n                            if (e instanceof SyntaxError) {\n                                setError(\"Error parsing incoming JSON: \" + event.data)\n                            } else {\n                                setError(\"Unknown error parsing response: \" + event.data)\n                            }\n                            return;\n                        }\n\n                        // Incoming JSON signals the beginning of a call\n                        msg = msg.content\n                        if (!peer_connection) {\n                            createCall(msg);\n                        }\n\n                        if (msg.sdp != null) {\n                            onIncomingSDP(msg.sdp);\n                        } else if (msg.ice != null) {\n                            onIncomingICE(msg.ice);\n                        }  else if (msg === \"PIPELINE_STOPPED\") {\n                            reconnectToPeer(100)\n                            // closePeerConnection()\n                            logger.log(\"PIPELINE_STOPPED\")\n\n                        }\n                        else {\n                            setError(\"Unknown incoming JSON: \" + msg);\n                        }\n                    }\n            }\n        }\n\n        client.onerror = (e) => logger.error(e);\n\n        client.onclose = () => {\n            logger.log(\"client.onclose\")\n\n            isConnected = false;\n            stateChangeListeners.forEach(fn => fn(false));\n\n            closePeerConnection()\n\n            clearPeerReconnectInterval()\n            clearRoomReconnectInterval()\n            clearHelloInterval()\n\n            if (!reconnectOnClose) {\n                logger.log('ws closed by app');\n                return;\n            }\n\n            logger.log('ws closed by server');\n\n            // attempt reconnect\n            setTimeout(start, 3000);\n\n\n            setStatus('Disconnected from server');\n\n\n\n        }\n    }\n\n\n\n\n    function createCall(msg) {\n        logger.warn(\"*** createCall ***\");\n        logger.log(\"createCall: msg\", msg)\n        // Reset connection attempts because we connected successfully\n        // connect_attempts = 0;\n\n        logger.log('Creating RTCPeerConnection');\n\n\n        peer_connection = new RTCPeerConnection(rtc_configuration);\n        // peer_connection = new RTCPeerConnection();\n\n        // send_channel = peer_connection.createDataChannel('label', null);\n        // send_channel.onopen = handleDataChannelOpen;\n        // send_channel.onmessage = handleDataChannelMessageReceived;\n        // send_channel.onerror = handleDataChannelError;\n        // send_channel.onclose = handleDataChannelClose;\n        peer_connection.ondatachannel = onDataChannel;\n        peer_connection.ontrack = onRemoteTrack;\n\n\n\n        peer_connection.onicecandidateerror = (event)=>{\n\n            logger.log(\"onicecandidateerror event\", event)\n            if (event.errorCode >= 300 && event.errorCode <= 699) {\n                // STUN errors are in the range 300-699. See RFC 5389, section 15.6\n                // for a list of codes. TURN adds a few more error codes; see\n                // RFC 5766, section 15 for details.\n            } else if (event.errorCode >= 700 && event.errorCode <= 799) {\n                // Server could not be reached; a specific error number is\n                // provided but these are not yet specified.\n            }\n        };\n\n        peer_connection.onremovestream = (event)=>{\n            logger.log(\"onremovestream event\", event)\n        };\n\n\n\n        peer_connection.onsignalingstatechange = (event)=>{\n            logger.log(\"onsignalingstatechange event\", event)\n            logger.log(\"onsignalingstatechange peer_connection.signalingState\", peer_connection.signalingState)\n\n        };\n\n        peer_connection.onicegatheringstatechange = (event)=>{\n            logger.log(\"onicegatheringstatechange event\", event)\n            logger.log(\"peer_connection.iceGatheringState\", peer_connection.iceGatheringState)\n        };\n\n        peer_connection.oniceconnectionstatechange = (event)=>{\n            logger.log(\"oniceconnectionstatechange event\", event)\n            logger.log(\"oniceconnectionstatechange pc.iceConnectionState\", peer_connection.iceConnectionState)\n\n        };\n\n        peer_connection.onconnectionstatechange = (event)=>{\n            logger.log(\"peer_connection onconnectionstatechange event\", event)\n            logger.log(\"peer_connection onconnectionstatechange peer_connection\", peer_connection)\n            logger.log(\"peer_connection onconnectionstatechange peer_connection.connectionState\", peer_connection.connectionState)\n\n            switch(peer_connection.connectionState) {\n                case \"connected\":\n                    // The connection has become fully connected\n                    break;\n                case \"disconnected\":\n                    reconnectToPeer()\n\n                    break;\n                case \"failed\":\n                    // One or more transports has terminated unexpectedly or in an error\n                    break;\n                case \"closed\":\n                    // The connection has been closed\n                    break;\n                default:\n                    break\n            }\n        };\n\n        if (msg != null && !msg.sdp) {\n            logger.log(\"WARNING: First message wasn't an SDP message!?\");\n        }\n\n        peer_connection.onicecandidate = (event) => {\n            logger.warn(\"*** onicecandidate *** - sending candidate\", event)\n            // We have a candidate, send it to the remote party with the\n            // same uuid\n            if (event.candidate == null) {\n                logger.log(\"ICE Candidate was null, done\");\n                return;\n            }\n\n\n            client.send(JSON.stringify({\n                type: \"ROOM_PEER_MSG\",\n                to: peer_id.toString(),\n                content: {'ice': event.candidate}\n            }));\n        };\n\n        if (msg != null)\n            setStatus(\"Created peer connection for call, waiting for SDP\");\n\n    }\n\n    // SDP offer received from peer, set remote description and create an answer\n    const onIncomingSDP = (sdp) => {\n        logger.warn(\"*** onIncomingSDP ***\", sdp)\n        peer_connection.setRemoteDescription(sdp).then(() => {\n            setStatus(\"Remote SDP set\");\n            if (sdp.type !== \"offer\")\n                return;\n            setStatus(\"Got SDP offer\");\n            peer_connection.createAnswer()\n                .then(onLocalDescription).catch(setError);\n        }).catch(setError);\n    }\n\n    // Local description was set, send it to peer\n    const onLocalDescription = (desc) => {\n        logger.warn(\"*** onLocalDescription ***\");\n        logger.log(\"Got local description: \", JSON.stringify(desc));\n        logger.log(\"Got local description: \", desc);\n\n        peer_connection.setLocalDescription(desc).then(function() {\n            setStatus(\"Sending SDP \" + desc.type);\n            let sdp = {\n                content: {'sdp': peer_connection.localDescription},\n                type: \"ROOM_PEER_MSG\",\n                to: peer_id.toString()\n            }\n            client.send(JSON.stringify(sdp));\n        });\n    }\n\n    const generateOffer = () => {\n        logger.warn(\"*** generateOffer ***\");\n        peer_connection.createOffer().then(onLocalDescription).catch(setError);\n    }\n\n    // ICE candidate received from peer, add it to the peer connection\n    const onIncomingICE = (ice) => {\n\n        var candidate = new RTCIceCandidate(ice);\n        logger.warn(\"*** onIncomingICE ***\", candidate);\n        peer_connection.addIceCandidate(candidate).catch(setError);\n    }\n\n    function addRemoteTrackListener(fn) {\n        logger.warn(\"*** addRemoteTrackListener ***\");\n        remoteTrackListeners.push(fn);\n        return () => {\n            remoteTrackListeners = remoteTrackListeners.filter(l => l !== fn);\n        };\n    }\n\n    const closePeerConnection = () => {\n        logger.warn(\"*** closePeerConnection ***\");\n\n        if(peer_connection) {\n            // peer_connection.restartIce()\n            peer_connection.close()\n        }\n        peer_connection = null\n    }\n\n    const onRemoteTrack = (event) => {\n\n        logger.warn(\"*** onRemoteTrack *** event\", event)\n        var identity = peer_connection.peerIdentity\n        logger.log(\"identity\",identity)\n        setError(null)\n        setStatus(\"Received track.\")\n\n        // streams = streams.concat(event.streams)\n        logger.log(\"onRemoteTrack streams\", streams)\n\n        remoteTrackListeners.forEach(fn => fn(event.streams));\n    }\n\n    const handleDataChannelOpen = (event) =>{\n        logger.warn(\"*** handleDataChannelOpen ***\", event);\n    };\n\n    const handleDataChannelMessageReceived = (event) =>{\n        logger.warn(\"*** handleDataChannelMessageReceived ***\");\n        logger.log(\"dataChannel.OnMessage:\", event, event.data.type);\n\n        setStatus(\"Received data channel message\");\n        if (typeof event.data === 'string' || event.data instanceof String) {\n            logger.log('Incoming string message: ' + event.data);\n            let textarea = document.getElementById(\"text\")\n            textarea.value = textarea.value + '\\n' + event.data\n        } else {\n            logger.log('Incoming data message');\n        }\n        send_channel.send(\"Hi! (from browser)\");\n    };\n\n    const handleDataChannelError = (error) =>{\n        logger.warn(\"*** handleDataChannelError ***\");\n        logger.log(\"dataCh\" +\n            \"annel.OnError:\", error);\n    };\n\n    const handleDataChannelClose = (event) =>{\n        logger.warn(\"*** handleDataChannelClose ***\");\n        logger.log(\"dataChannel.OnClose\", event);\n    };\n\n    function onDataChannel(event) {\n        logger.warn(\"*** onDataChannel ***\");\n        setStatus(\"Data channel created\");\n        let receiveChannel = event.channel;\n        receiveChannel.onopen = handleDataChannelOpen;\n        receiveChannel.onmessage = handleDataChannelMessageReceived;\n        receiveChannel.onerror = handleDataChannelError;\n        receiveChannel.onclose = handleDataChannelClose;\n    }\n\n    const reconnectToPeer = (interval) => {\n        logger.warn(\"*** reconnectToPeer ***: interval\", interval);\n        if(peer_connection) peer_connection.restartIce()\n\n        if(isConnected) {\n            logger.log(\"reconnectToPeer peer_connection\", peer_connection)\n            // close current connection\n            closePeerConnection()\n            peer_connection = null;\n            setPeerReconnectInterval(3000)\n        }\n    }\n\n    const clearPeerReconnectInterval = () => {\n        clearInterval(peerReconnectInterval)\n        peerReconnectInterval = null\n    }\n\n    const setPeerReconnectInterval = (interval) => {\n\n        logger.warn(\"*** setPeerReconnectInterval a***\");\n\n        if(isConnected) {\n            setStatus(`Attempting to connect to peer ${peer_id}.`);\n\n            let msg = 'CONNECT ' + peer_id\n\n            client.send(msg)\n            if(!peerReconnectInterval) {\n                peerReconnectInterval = setInterval(() => {\n                    if(peer_connection) {\n                        clearPeerReconnectInterval()\n                    }\n\n                    logger.log(`sending msg: ${msg}`)\n                    client.send(msg)\n                }, interval);\n            }\n        }\n    }\n\n\n    const clearRoomReconnectInterval = () => {\n        logger.warn(\"*** clearRoomReconnectInterval ***\");\n        clearInterval(roomReconnectInterval)\n        roomReconnectInterval = null\n    }\n\n    const setRoomReconnectInterval = (interval) => {\n\n        logger.warn(\"*** setRoomReconnectInterval ***\");\n\n        if(isConnected) {\n            setStatus(`Attempting to connect to peer ${peer_id}.`);\n\n            let msg = 'ROOM ' + peer_id\n\n            client.send(msg)\n            if(!roomReconnectInterval) {\n                roomReconnectInterval = setInterval(() => {\n\n                    logger.log(`sending msg: ${msg}`)\n                    client.send(msg)\n                }, interval);\n            }\n        }\n    }\n\n    const clearHelloInterval = () => {\n        logger.warn(\"*** clearHelloInterval ***\");\n        clearInterval(helloInterval)\n        helloInterval = null\n    }\n\n    const setHelloInterval = () => {\n        logger.warn(\"*** setHelloInterval ***\");\n        if(isConnected) {\n            client.send('HELLO ' + our_id);\n            if(!helloInterval) {\n                helloInterval = setInterval(() => {\n                    client.send('HELLO ' + our_id);\n                }, 3000);\n            }\n        }\n    }\n\n    start();\n\n    return {\n        addMessageListener,\n        removeMessageListener,\n        onStateChange,\n        close: () => client.close(),\n        start: () => start(),\n        send: (args) => client.send(args),\n        getClient: () => client,\n        isConnected: () => isConnected,\n        addRemoteTrackListener,\n        addErrorListener,\n        addStatusListener,\n        getError: () => error,\n        getStatus: () => status\n    };\n\n}\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n\tborder: 1px solid black;\n\twidth: 100%;\n\tpadding: .5rem 1rem .5rem 1rem;\n`","import React, { useState, useEffect } from 'react';\nimport * as styled from './viewer_page.style'\nimport StreamContainer from './stream_container/stream_container'\nimport StreamInfo from \"./stream_info/stream_info\";\nimport log from 'loglevel';\nimport reconnectingWebRTCSocket from \"../../../../methods/utils/websocket_utils\"\nimport TestButtons from \"./test_buttons/test_buttons\";\nconst logger = log.getLogger(\"ViewerPage\")\n\nlogger.setLevel(\"silent\")\n\n// some hard coded values for now\n// Set this to use a specific peer id instead of a random one\nvar our_default_id;\nvar our_id;\nvar peer_id = 5555\nvar ws_server = \"10.1.10.6\";\nvar ws_port;\n\nconst getOurId = () => {\n    return Math.floor(Math.random() * (9000 - 10) + 10).toString();\n}\n\n// Fetch the peer id to use\nour_id = our_default_id || getOurId()\n\nws_port = ws_port || '8443';\n\nconst ws_url = 'ws://' + ws_server + ':' + ws_port\n\nvar client;\n\nconst ViewerPage = () => {\n\n\n    const [streamConnected, setStreamConnected] = useState(false)\n    const [myPeerId, setMyPeerId] = useState(null);\n    const [error, setError] = useState(null);\n    const [status, setStatus] = useState(null);\n    const [streams, setStreams] = useState(null)\n    const [isConnected, setIsConnected] = useState(false)\n    const [showStreamInfo, setShowStreamInfo] = useState(false)\n    const [showTestButtons, setShowTestButtons] = useState(false)\n\n    useEffect(() => {\n        startConnection()\n\n        return () => {\n            // Disconnect Stream on unmount\n            closeConnection()\n        }\n    }, []);\n\n    const startConnection = () => {\n        client = reconnectingWebRTCSocket(ws_url, getOurId(), peer_id)\n        client.addRemoteTrackListener(setStreams);\n        client.onStateChange(setIsConnected);\n        client.addErrorListener(setError);\n        client.addStatusListener(setStatus);\n    }\n\n    const closeConnection = () => {\n        client.close()\n        setStreams(null)\n    }\n\n\n    const device = {\n        device_name: \"RM Vision\"\n    }\n\n    const getVideoElement = () => {\n        return document.getElementById(\"stream\");\n    }\n\n    const resetVideo = () => {\n        // Reset the video element and stop showing the last received frame\n        var videoElement = getVideoElement();\n        if(videoElement) {\n            videoElement.pause();\n            videoElement.src = \"\";\n            videoElement.load();\n        }\n\n    }\n\n    return (\n        <styled.PageContainer>\n            <styled.TitleContainer>\n                <div\n                    style={{\n                        position: \"absolute\",\n                        left: \"1rem\"\n                    }}\n                >\n                    <styled.Icon\n                        className='fa fa-retweet'\n                        onClick={() => {\n                            resetVideo()\n                        }}\n                    />\n\n                    <styled.Icon\n                        className='fa fa-info-circle'\n                        onClick={()=>setShowStreamInfo(!showStreamInfo)}\n                    />\n\n                    <styled.Icon\n                        className='fa fa-check-circle'\n                        onClick={()=>setShowTestButtons(!showTestButtons)}\n                    />\n                </div>\n\n                <styled.DeviceName>{!!device ? `${device.device_name}` : 'Connect to Stream'}</styled.DeviceName>\n\n                <styled.LiveText>Live Stream</styled.LiveText>\n            </styled.TitleContainer>\n\n\n\n            {showStreamInfo &&\n                <StreamInfo\n                    status={status}\n                    error={error}\n                    outID={our_id}\n                    peerID={peer_id}\n                    loading={!streamConnected}\n                    streams={streams}\n                />\n            }\n\n            {showTestButtons &&\n                <TestButtons\n                    onStartClick={startConnection}\n                    onCloseClick={closeConnection}\n                />\n            }\n\n\n            <StreamContainer\n                status={status}\n                error={error}\n                myPeerId={myPeerId}\n                loading={!streamConnected}\n                streams={streams}\n            />\n            <styled.ConnectContainer>\n            </styled.ConnectContainer>\n        </styled.PageContainer>\n    )\n}\n\nexport default ViewerPage\n","import React, { useState, useEffect } from 'react';\nimport * as styled from \"./test_buttons.style\"\nimport reconnectingWebRTCSocket from \"../../../../../methods/utils/websocket_utils\";\n\nconst TestButtons = (props) => {\n\n\tconst {\n\t\tonStartClick,\n\t\tonCloseClick\n\t} = props\n\n\treturn(\n\t\t<styled.Container>\n\t\t\t<button\n\t\t\t\tonClick={()=>{\n\t\t\t\t\tonCloseClick()\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tTEST CLOSE SOCKET\n\t\t\t</button>\n\t\t\t<button\n\t\t\t\tonClick={()=>{\n\t\t\t\t\tonStartClick()\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tTEST OPEN SOCKET\n\t\t\t</button>\n\t\t</styled.Container>\n\n\t)\n}\n\nexport default TestButtons","import styled from 'styled-components'\n\nexport const HeaderContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    text-align: center;\n    width: 100%;\n    border-radius: 1rem;\n    align-items: center;\n`\n\nexport const LotsContainer = styled.div`\n    width: 100%;\n    height: 100%;\n    justify-content: center;\n    padding-bottom:1rem;\n\n    background: ${props => props.theme.bg.quaternary};\n\n    overflow: auto;\n\n    // optionally style scroll bar\n    ::-webkit-scrollbar {\n    }\n    ::-webkit-scrollbar-thumb {\n    }\n\n`\n\nexport const ListItemRect = styled.div`\n    height: 5rem;\n    border-radius: 0.5rem;\n    margin-left:1rem;\n    margin-right:2rem;\n    margin-top:0.5rem;\n\n    border: 0.1rem solid white;\n    box-sizing: border-box;\n\n    &:hover {\n      //border-color: #798fd9;\n      //background-color: white;\n\n    }\n`\n\nexport const ListSubtitle = styled.div`\n    text-align: flex-start;\n    width: 100%;\n    height:100%;\n\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz3};\n    font-weight: 500;\n    color: ${props => props.theme.bg.senary};\n\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n\n`\n\nexport const ListContent = styled.div`\n    text-align: flex-start;\n    height:100%;\n\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz3};\n    font-weight: 500;\n    color: ${props => props.theme.bg.octonary};\n\n    padding-left:1rem;\n\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n`\n\nexport const StationName = styled.h1`\n    color: ${props => props.theme.bg.septenary};\n    font-family: ${props => props.theme.font.primary};\n`\n\nexport const Header = styled.div`\n\t  background: ${props => props.theme.bg.quinary};\n  \tborder-bottom: 1px solid black;\n  \twidth: 100%;\n  \tpadding: 1rem;\n`\n\nexport const Subtitle = styled.h1`\n    color: ${props => props.theme.bg.septenary};\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz2};\n    position: flex-end;\n\n`\n\nexport const SubtitleContainer = styled.div`\n    display:flex;\n    justify-content:space-between;\n    flex-direction: row;\n    padding-left: 1rem;\n    padding-top: 1rem;\n    padding-right:1.5rem;\n    padding-bottom:.5rem;\n    position: relative;\n`\n\n\nexport const RowContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    width: 100%;\n    padding-top:.5rem;\n`\n\nexport const ColumnContainer1 = styled.div`\n    display: flex;\n    flex: 4;\n    flex-direction: column;\n    justify-content: flex-start;\n    height: 100%;\n    padding-left: 1rem;\n\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n\n    @media only screen and (max-width: ${props => props.theme.widthBreakpoint.tablet}) {\n      flex:1;\n    }\n`\n\nexport const ColumnContainer2 = styled.div`\n    display: flex;\n    flex:1;\n    flex-direction: column;\n    height: 100%;\n`\n\nexport const ListItemIcon = styled.i`\n    font-size: 1.8rem;\n    color: #ffb62e;\n    padding-top: .9rem;\n    padding-right:1rem;\n\n\n\n    &:hover {\n        cursor: pointer;\n        color:yellow;\n    }\n`\n","import React, { useState, useEffect, useContext, useRef, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useParams, useHistory } from 'react-router-dom'\n\n\nimport ReactList from 'react-list';\nimport CardEditor from \"../../../side_bar/content/cards/card_editor/card_editor\";\n\n// Import styles\nimport * as styled from './lots_page.style'\nimport { ThemeContext } from 'styled-components';\nimport Button from '../../../../components/basic/button/button'\n\nimport {widgetLoaded, hoverStationInfo} from '../../../../redux/actions/widget_actions'\nimport * as sidebarActions from \"../../../../redux/actions/sidebar_actions\"\nimport {showEditor} from '../../../../redux/actions/card_actions'\n\n\n// Import Actions\n\n\n// TODO: Commented out charts for the time being (See comments that start with TEMP)\nconst LotsPage = (props) => {\n\n    const params = useParams()\n    const stationID = params.stationID\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    const onWidgetLoaded = (bool) => dispatch(widgetLoaded(bool))\n    const onShowSideBar = (bool) => dispatch(sidebarActions.setOpen(bool))\n    const onHoverStationInfo = (info) => dispatch(hoverStationInfo(info))\n    const onShowCardEditor = (bool) => dispatch(showEditor(bool))\n\n    const widgetPageLoaded = useSelector(state => { return state.widgetReducer.widgetPageLoaded })\n    const stations = useSelector(state => state.stationsReducer.stations)\n    const cards = useSelector(state=>state.cardsReducer.cards)\n    const showCardEditor = useSelector(state=>state.cardsReducer.showEditor)\n    const [locationName, setLocationName] = useState(\"\")\n    const [selectedCard, setSelectedCard] = useState(null)\n    const [lotsPresent, setLotsPresent] = useState(false)\n\n    const location = stations[stationID]\n\n    // update location properties\n    useEffect(() => {\n        const location = stations[stationID]\n        setLocationName(location.name)\n    }, [stationID, stations])\n\n    useEffect(() => {\n        for (let i = 0; i < Object.values(cards).length; i++) {\n            if (!!Object.values(cards)[i].bins[location._id]) {\n                setLotsPresent(true)\n                break\n            }\n        }\n      },[])\n\n    const goToCardPage = () => {\n        onWidgetLoaded(false)\n        onShowSideBar(true)\n        onHoverStationInfo(null)\n        const currentPath = history.location.pathname\n        history.push('/lots/summary')\n    }\n\n    const openEditor = (cardId, processId, binId) => {\n      onShowCardEditor(true)\n      setSelectedCard({cardId, processId, binId})\n    }\n\n    return (\n\n      <styled.LotsContainer>\n\n        {showCardEditor &&\n        <CardEditor\n            isOpen={showCardEditor}\n            onAfterOpen={null}\n            cardId={selectedCard ? selectedCard.cardId : null}\n            processId={selectedCard ? selectedCard.processId : null}\n            binId={selectedCard ? selectedCard.binId : null}\n            close={()=>{\n                onShowCardEditor(false)\n                setSelectedCard(null)\n            }}\n        />\n        }\n\n        <styled.HeaderContainer>\n            <styled.Header>\n                <styled.StationName>{locationName}</styled.StationName>\n            </styled.Header>\n        </styled.HeaderContainer>\n\n          <styled.SubtitleContainer>\n          {!!lotsPresent ?\n            <styled.Subtitle>Lots at {locationName}:</styled.Subtitle>\n            :\n            <styled.Subtitle>No Lots</styled.Subtitle>\n          }\n            <Button\n                schema={'devices'}\n                onClick = {goToCardPage}\n                style = {{position: 'absolute', right:'1.6rem'}}\n            >\n                Go To Card View\n            </Button>\n          </styled.SubtitleContainer>\n\n       {Object.values(cards).map((card, ind) =>\n         <>\n          {!!card.bins[location._id] &&\n              <styled.ListItemRect>\n                    <styled.RowContainer>\n                      <styled.ColumnContainer1>\n                      <styled.ListSubtitle>Lot Name:</styled.ListSubtitle>\n                      <styled.ListContent>{card.name}</styled.ListContent>\n                    </styled.ColumnContainer1>\n\n                    <styled.ColumnContainer2>\n                      <styled.ListSubtitle>Quantity:</styled.ListSubtitle>\n                      <styled.ListContent>{card.bins[location._id].count}</styled.ListContent>\n                    </styled.ColumnContainer2>\n\n\n                      <styled.ColumnContainer2>\n                        <styled.ListSubtitle>End Date:</styled.ListSubtitle>\n                        {!!card.end_date &&\n                          <styled.ListContent>{card.end_date.month+1 + '/' + card.end_date.day +'/' + card.end_date.year}</styled.ListContent>\n                        }\n                      </styled.ColumnContainer2>\n\n\n                  <styled.ListItemIcon\n                      className={'fas fa-edit'}\n                      onClick = {()=>{\n                        openEditor(card._id, card.process_id, location._id)\n\n                      }}\n                      />\n                  </styled.RowContainer>\n              </styled.ListItemRect>\n        }\n           </>\n        )}\n\n      </styled.LotsContainer>\n    )\n  }\n\nexport default LotsPage\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useHistory, withRouter, Route } from 'react-router-dom'\n\nimport * as styled from './widget_pages.style'\n\nimport WidgetPageHeader from './widget_page_header/widget_page_header'\n\nimport useWindowSize from '../../../hooks/useWindowSize'\n\nimport DashboardsPage from './dashboards_page/dashboards_page'\nimport ObjectsPage from './objects_page/objects_page'\nimport StatisticsPage from './statistics_page/statistics_page'\nimport TasksPage from './tasks_page/tasks_page'\nimport ViewerPage from './viewer_page/viewer_page'\nimport LotsPage from './lots_page/lots_page'\n\nimport log from \"../../../logger\"\nimport {widgetPageLoaded} from '../../../redux/actions/widget_actions'\n\nconst logger = log.getLogger(\"WidgetPages\")\n\nconst WidgetPages = (props) => {\n\n    // Constructor\n    const history = useHistory()\n    const dispatch = useDispatch()\n\n    const size = useWindowSize()\n    const windowWidth = size.width\n    const widthBreakPoint = 1000;\n    const mobileMode = windowWidth < widthBreakPoint;\n\n    const dashboardOpen = useSelector(state => state.dashboardsReducer.dashboardOpen)\n    const taskQueueOpen = useSelector(state => state.taskQueueReducer.taskQueueOpen)\n\n    const { locationID, widgetPage } = props.match.params\n    const showWidgetPage = widgetPage\n\n    // Tells the reducer if widget page has been loaded\n    const onWidgetPageLoaded = (props) => dispatch(widgetPageLoaded(props));\n\n\n    useEffect(() => {\n        // On intitial widget page load, set a delay to tell redux that the widget pages have loaded\n        // This happens because the statistic page on load needs to load charts which can be cumbersome on widget animation.\n        // So the chart loads after the widget animation, but if widget page is already open and then a statistic page is selected,\n        // there should not be a delayed chart opening. See statistics_page/statistics_overview/statistics_overview.js\n        // setTimeout(() => {\n        onWidgetPageLoaded(true)\n        // }, 300);\n\n        // On Unmount tell the reducer the widget pages aren't loaded anymore\n        return () => {\n            onWidgetPageLoaded(false)\n\n        }\n    }, [])\n\n\n    return (\n        <styled.Container taskQueueOpen = {taskQueueOpen} showWidgetPage={showWidgetPage} dashboardOpen={dashboardOpen} mobileMode={mobileMode} id={'widgetPage'}>\n\n            <styled.WidgetPageContainer\n                showWidgetPage={showWidgetPage}\n            >\n                <Route\n                    path=\"/locations/:stationID/dashboards/:dashboardID?/:editing?\"\n                    component={DashboardsPage}\n                />\n                <Route\n                    path=\"/locations/:stationID/objects/:objectID?/:editing?\"\n                    component={ObjectsPage}\n                />\n                <Route\n                    path=\"/locations/:stationID/statistics\"\n                    component={StatisticsPage}\n                />\n                <Route\n                    path=\"/locations/:stationID/lots\"\n                    component={LotsPage}\n                />\n                <Route\n                    path=\"/locations/:stationID/tasks\"\n                    component={TasksPage}\n                />\n                <Route\n                    path=\"/locations/:stationID/view\"\n                    component={ViewerPage}\n                />\n            </styled.WidgetPageContainer>\n        </styled.Container>\n\n\n    )\n\n}\n\nexport default withRouter(WidgetPages)\n","import styled from 'styled-components'\n\nexport const WidgetButtonButton = styled.button`\n    display:flex;\n    align-self:center;\n    flex-direction: column;\n    border: none;\n    border-radius: 1rem;\n    text-align: center;\n    width: 6rem;\n    height: 4rem;\n    outline:none;\n    margin: 0rem .3rem;\n    padding-top:.5rem;\n\n    /* margin-top: 0.5rem; */\n\n    box-shadow: 0 0.1rem 0.2rem 0rem #303030;\n\n    background-color: ${props => props.pageID === props.currentPage ? props.theme.bg.quaternary : props.theme.bg.septenary};\n\n    transition: background-color 0.25s ease, box-shadow 0.1s ease;\n\n    &:hover{\n        background-color: ${props => props.theme.bg.senary};\n    }\n\n    &:focus{\n        outline: 0 !important\n    }\n\n    &:active{\n        box-shadow: none;\n    }\n\n    @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n        width: 6rem;\n        height: 4rem;\n\n    }\n`;\n\nexport const WidgetButtonLabel = styled.label`\n    display: inline-block;\n    width: 12.5rem;\n    height: 6rem;\n    text-align: center;\n`;\n\nexport const WidgetButtonText = styled.h4`\n    font-size: ${props => props.theme.fontSize.sz6};\n    font-family: ${props => props.theme.font.primary};\n\n    text-align: center;\n    align-self:center;\n\n    @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n\n    }\n`;\n\nexport const WidgetStationName = styled.h4`\n    font-size: ${props => props.theme.fontSize.sz4};\n    font-family: ${props => props.theme.font.primary};\n\n    text-align: center;\n    align-self:center;\n\n    @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n      font-size: ${props => props.theme.fontSize.sz6};\n\n    }\n`;\n\nexport const WidgetButtonIcon = styled.i`\n    font-size: 2.2rem;\n    margin-bottom:0.3rem;\n    align-self:center;\n    color: ${props => props.pageID === props.currentPage ? props.theme.fg.primary : props.theme.bg.primary};\n\n    @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n        font-size: 2rem;\n\n\n    }\n`\n\nexport const WidgetButtonBlock = styled.div`\n    align-self:center;\n    width: 12.5rem;\n    height: 4rem;\n    display: inline-block;\n    margin-top: 1.5rem;\n    margin-bottom: 1rem;\n    padding-right: 3rem;\n`;\n\nexport const WidgetButtonContainer = styled.div`\n    width: 25%;\n    display: flex;\n    justify-content: space-between;\n`\n\nexport const ButtonText = styled.p`\n    position: absolute;\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz3};\n`\n","import React, { useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport * as styled from './widget_button.style'\n\n// Import utils\nimport uuid from 'uuid'\n\n// Import Actions\nimport { postTaskQueue } from '../../../redux/actions/task_queue_actions'\nimport { putStation, setSelectedStationChildrenCopy } from '../../../redux/actions/stations_actions'\nimport { removePosition, setSelectedPosition } from '../../../redux/actions/positions_actions'\nimport { widgetLoaded, hoverStationInfo } from '../../../redux/actions/widget_actions'\nimport { postDashboard, dashboardOpen } from '../../../redux/actions/dashboards_actions'\n\nimport { deepCopy } from '../../../methods/utils/utils'\nimport { handlePostTaskQueue } from \"../../../redux/actions/task_queue_actions\";\n\n\n\nconst WidgetButton = (props) => {\n\n    const {\n        type,\n        currentPage,\n        id,\n        coordinateMove,\n        label,\n        toggle,\n    } = props\n\n    const history = useHistory()\n    const params = useParams()\n    const widgetPage = params.widgetPage\n\n    const dispatch = useDispatch()\n    const dispatchHandlePostTaskQueue = (props) => dispatch(handlePostTaskQueue(props))\n    const dispatchWidgetLoaded = (bol) => dispatch(widgetLoaded(bol))\n    const dispatchHoverStationInfo = (info) => dispatch(hoverStationInfo(info))\n    const dispatchDashboardOpen = (props) => dispatch(dashboardOpen(props))\n    const dispatchPostDashboard = (dashboard) => dispatch(postDashboard(dashboard))\n    const dispatchPutStation = (station, ID) => dispatch(putStation(station, ID))\n    const dispatchRemovePosition = (id) => dispatch(removePosition(id))\n    const dispatchSetSelectedPosition = (position) => dispatch(setSelectedPosition(position))\n\n    const selectedStation = useSelector(state => state.stationsReducer.selectedStation)\n    const selectedPosition = useSelector(state => state.positionsReducer.selectedPosition)\n    const showSideBar = useSelector(state => state.sidebarReducer.open)\n    const stations = useSelector(state => state.stationsReducer.stations)\n\n    const dashboardID = params.dashboardID\n\n    const selectedLocation = !!selectedStation ? selectedStation : selectedPosition\n\n    const handleOnClick = () => {\n        switch (props.type) {\n            case 'cart':\n                onCartButtonClick()\n                break;\n\n            case 'cancel':\n                onCancelClick()\n                break;\n\n            case 'dashboards':\n                onDashboardClick()\n                break;\n\n            default:\n                history.push('/locations/' + id + '/' + type)\n                break;\n        }\n    }\n\n    // Handles  if the widget button clicked was a cart\n    const onCartButtonClick = () => {\n        // If the button is for cart, then see if its a coord move or a simple task move\n        // Coord move is for right click send cart to pos\n        if (!!coordinateMove) {\n            dispatchHandlePostTaskQueue({\n                Id: 'custom_task',\n                custom: {\n                    type: 'coordinate_move',\n                    coordinate: {\n                        pos_x: selectedLocation.pos_x,\n                        pos_y: selectedLocation.pos_y,\n                        rotation: selectedLocation.rotation,\n                    },\n                },\n                deviceType: 'MiR_100',\n            })\n            dispatchWidgetLoaded(false)\n            dispatchHoverStationInfo(null)\n            dispatchRemovePosition(selectedPosition._id)\n            dispatchSetSelectedPosition(null)\n        }\n        else {\n            dispatchHandlePostTaskQueue({\n                Id: 'custom_task',\n                custom: {\n                    type: 'position_move',\n                    position: id,\n\n                },\n                deviceType: 'MiR_100',\n            })\n        }\n    }\n\n    // Handles if the widget button clicked was cancel\n    const onCancelClick = () => {\n        dispatchWidgetLoaded(false)\n        dispatchHoverStationInfo(null)\n        dispatchRemovePosition(selectedPosition._id)\n        dispatchSetSelectedPosition(null)\n    }\n\n    // Handles if a dashboard is clicked\n    const onDashboardClick = async () => {\n        let dashboardID\n\n        // If there's no selected station, then see if theres a station in the url, if so, use that, else do nothing\n        if (!selectedLocation) {\n            if (!!params.stationID) {\n                dashboardID = stations[params.stationID].dashboards[0]\n            } else {\n                return null\n            }\n        } else {\n            dashboardID = selectedLocation.dashboards[0]\n        }\n\n        //let dashboardID = selectedLocation ? selectedLocation.dashboards[0] : null\n\n        // If the dashboard is undefined, that means the location must not have a dashboard yet, so add one\n        if (dashboardID === undefined) {\n            console.log('QQQQ No dashboard ADDING!')\n\n            // dashboardInfo\n            let defaultDashboard = {\n                name: selectedLocation.name + ' Dashboard',\n                buttons: [],\n                station: selectedLocation._id\n            }\n\n            //// Now post the dashboard, and on return tie that dashboard to location.dashboards and put the location\n            const postDashboardPromise = dispatchPostDashboard(defaultDashboard)\n\n            postDashboardPromise.then(async postedDashboard => {\n\n                selectedLocation.dashboards = [postedDashboard._id.$oid]\n\n                await dispatchPutStation(selectedLocation, selectedLocation._id)\n\n                history.push('/locations/' + id + '/' + type + '/' + dashboardID)\n\n            })\n        }\n        else {\n            history.push('/locations/' + id + '/' + type + '/' + dashboardID)\n        }\n\n        dispatchDashboardOpen(true)\n    }\n\n\n    return (\n        <styled.WidgetButtonButton\n            onClick={() => {\n                if (showSideBar && !widgetPage) {\n                    const hamburger = document.querySelector('.hamburger')\n                    hamburger.classList.toggle('is-active')\n                }\n\n                handleOnClick()\n\n            }}\n            pageID={type}\n            currentPage={currentPage}\n        >\n            {type === 'view' ?\n                <styled.WidgetButtonIcon className=\"far fa-eye\" pageID={type} currentPage={currentPage} />\n                :\n                type === 'cancel' ?\n                    <>\n                        <styled.WidgetButtonIcon className=\"fas fa-times\" pageID={type} currentPage={currentPage} />\n                        <styled.WidgetButtonText>{\"Cancel\"}</styled.WidgetButtonText>\n                    </>\n                    :\n                    type === 'lots' ?\n                        <>\n                            <styled.WidgetButtonIcon className=\"far fa-clone\" pageID={type} currentPage={currentPage} />\n                            <styled.WidgetButtonText>{label}</styled.WidgetButtonText>\n                        </>\n                        :\n                        <>\n                            <styled.WidgetButtonIcon style={{ fontSize: type === 'cart' && '1.2rem', paddingTop: type === 'cart' && '.8rem' }} className={\"icon-\" + type} pageID={type} currentPage={currentPage} />\n                            <styled.WidgetButtonText>{label}</styled.WidgetButtonText>\n                        </>\n            }\n            {/* <styled.ButtonText>{props.type}</styled.ButtonText> */}\n\n        </styled.WidgetButtonButton>\n    )\n}\n\nexport default WidgetButton\n","import styled from 'styled-components'\n\n\n// export const Container = styled.div`\n//     display: flex;\n//     justify-content: ${props => !!props.widgetPage ? 'center' : ''};\n//     transition: all 0.3s ease;\n// `\n\nexport const WidgetLocationContainer = styled.div`\n    position: absolute;\n\n    top: ${props => !!props.widgetPage ? '0' : props => props.yPosition};\n    left: ${props => !!props.widgetPage ? '0' : props => props.xPosition};\n    right: ${props => !!props.widgetPage && '0'};\n    transform: scale(${props => !!props.widgetPage ? '100%' : props => props.scale});\n\n    width: ${props => !!props.widgetPage && '35rem'};\n\n    margin: ${props => !!props.widgetPage && 'auto'};\n    margin-top: ${props => !!props.widgetPage && '.2rem'};\n\n    transition: ${props => !!props.widgetPage ? 'top 0.25s ease, margin 0.25s ease' : 'none'};\n\n    pointer-events: auto;\n\n    z-index: 10;\n\n    @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n        width: ${props => !!props.widgetPage && '25rem'};\n        margin-top: ${props => !!props.widgetPage && '.205rem'};\n    }\n\n`\n\nexport const WidgetContainer = styled.div`\n    justify-content:center;\n    margin: ${props => !!props.widgetPage ? '.25rem auto' : 'auto'};\n    padding-top:.3rem;\n    padding-bottom:.3rem;\n\n    display: ${props => !!props.widgetPage ? 'flex' : ''};\n\n\n    /* width: ${props => !!props.widgetPage ? '32rem' : '30rem'}; */\n    width: ${props => !!props.widgetPage ? '20rem' : 'fit-content'};\n    max-width: ${props => props.type == 'cart_position' || props.type == 'shelf_position' ? '13rem' : '30rem'};\n\n    height: ${props => !!props.widgetPage ? 'auto' : '6rem'};\n\n    box-shadow: ${props => !!props.widgetPage ? 'none' : '0 0.1rem 0.2rem 0rem #303030'};\n\n    border-radius: 1rem;\n\n    z-index: 1000;\n\n    backdrop-filter: ${props => !!props.widgetPage ? '' : 'blur(10px)'};\n    background-color: ${props => !!props.widgetPage ? 'none' : 'rgba(255, 255, 255, 0.6)'};\n\n    /* transition: transform 0.25s ease, margin-left 0.25s ease, margin-right 0.25s ease, height 0.25s ease; */\n    /* transition: all 0.25s ease; */\n\n    @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n        /* width: ${props => !!props.widgetPage ? '22rem' : '20rem'}; */\n        width: ${props => !!props.widgetPage ? '15rem' : 'fit-content'};\n\n        height: ${props => !!props.widgetPage ? 'auto' : '6rem'};\n\n        /* padding: .5rem .5rem .5rem .5rem; */\n        margin-top: ${props => !!props.widgetPage && '0rem'};\n        /*padding: ${props => !!props.widgetPage ? '' : '1rem'};*/\n\n    }\n\n    &:hover{\n        cursor:pointer;\n    }\n\n    pointer-events: auto;\n\n`\n\nexport const WidgetStationName = styled.h4`\n    font-size: ${props => props.theme.fontSize.sz4};\n    font-family: ${props => props.theme.font.primary};\n    font-weight: 500;\n    flex:10;\n    justify-content: center;\n    text-align: center;\n    padding-left: 2rem;\n\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n\n`\n\nexport const WidgetPositionName = styled.h4`\n    font-size: ${props => props.theme.fontSize.sz4};\n    font-family: ${props => props.theme.font.primary};\n    font-weight: 500;\n    justify-content: center;\n    text-align: center;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n`\n\nexport const WidgetHoverArea = styled.div`\n    margin-top: -12.7rem;\n    width: 3rem;\n    height:1.5rem;\n    /* z-index: -1; */\n    /* background: red; */\n    /* stroke: 1rem solid red; */\n\n    margin: 0rem auto;\n\n    transform: scale(${props => props.hoverScale});\n\n    &:hover{\n        cursor:pointer;\n    }\n\n`\n\nexport const WidgetPageButtonContainer = styled.div`\n    width: 30rem;\n    border-radius: 1rem;\n    /* z-index: 1; */\n    margin-top: .5rem;\n\n    @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n        width: 20rem;\n    }\n\n`\n\nexport const WidgetButtonContainer = styled.div`\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-content:center;\n\n`\n\nexport const WidgetBlurContainer = styled.div`\n    position: absolute;\n    top: 0rem;\n    width: 100%;\n    height: 100%;\n    /* z-index: -1; */\n    backdrop-filter: blur(10px);\n\n    /* opacity: ${props => !!props.showWidgetPage ? '100%' : '0%'};\n\n    transition: all 0.25s ease; */\n`\n\n\nexport const WidgetStatisticsBlock = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 2rem;\n`;\n\nexport const RowContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    padding-right: .7rem;\n    justify-content: center;\n\n`;\n\nexport const EditIcon = styled.i`\n    font-size: 1rem;\n    text-align: right;\n    flex:1;\n    margin-left:0.5rem;\n    &:hover {\n      color: #798fd9;\n    }\n\n`;\n\nexport const WidgetStatisticsContainer = styled.div`\n    display: flex;\n\n    width: 100%;\n    height: 3rem;\n\n    /* padding: 0rem 3rem; */\n    padding: 0rem 1rem;\n    margin-top: .5rem;\n\n    justify-content: space-between;\n\n    @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n        padding: 0rem 1rem;\n\n    }\n`;\n\nexport const WidgetStatisticsGraphic = styled.svg`\n    overflow: visible;\n    text-align: center;\n    width: 2rem;\n    height: 2rem;\n    background-color: blue;\n    /* transform: translateY(-0.3rem); */\n`;\n\nexport const WidgetStatisticsIcon = styled.i`\n    /* font-size: 1.5rem; */\n`\n\nexport const WidgetStatisticsText = styled.p`\n    align-self: auto;\n    margin-left: .5rem;\n    margin-top: auto;\n    margin-bottom: auto;\n`\n\n// export const CloseButton = styled.span`\n//     border: none;\n//     background: none;\n//     color: ${props => props.theme.fg.primary};\n//     font-size: 8rem;\n//     font-weight: 200;\n//     text-align: center;\n//     position: absolute;\n//     z-index: 4;\n//     line-height: 4rem;\n\n//     font-family: ${props => props.theme.font.primary};\n\n//     cursor: pointer;\n//     top: 1rem;\n//     right: 1rem;\n//     &:focus {outline:0;}\n\n//     @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n//         font-size: 3rem;\n//         right: 1rem;\n//         top: .5rem;\n//     }\n\n// `;\n\nexport const CloseButton = styled.i`\n    border: none;\n    background: none;\n    color: ${props => props.theme.fg.red};\n    text-align: center;\n\n    font-size: 4rem;\n    z-index: 4;\n    margin-left: 1rem;\n\n    position: absolute;\n    cursor: pointer;\n    left: .5rem;\n    &:focus {outline:0;}\n\n    @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n        font-size: 3rem;\n    }\n\n    z-index: 10000;\n\n`;\n","import React, { useState, useMemo, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useParams, useHistory } from 'react-router-dom'\n\n// import components\nimport WidgetPages from './widget_pages/widget_pages'\nimport WidgetButton from './widget_button/widget_button'\n\n// import hooks\nimport useWindowSize from '../../hooks/useWindowSize'\n\n// Import Actions\nimport { setSelectedStation, setEditingStation } from '../../redux/actions/stations_actions'\nimport { setSelectedPosition, setSelectedStationChildrenCopy, setEditingPosition } from '../../redux/actions/positions_actions'\nimport { widgetLoaded, hoverStationInfo } from '../../redux/actions/widget_actions'\n\nimport { setOpen } from \"../../redux/actions/sidebar_actions\"\n\nimport { deepCopy } from '../../methods/utils/utils'\n\n\n\n// Import Utils\nimport { DeviceItemTypes } from '../../methods/utils/device_utils'\n\nimport * as styled from './widgets.style'\n\nconst Widgets = (props) => {\n    const size = useWindowSize()\n    const windowWidth = size.width\n    const widthBreakPoint = 1000;\n    const mobileMode = windowWidth < widthBreakPoint;\n\n    let params = useParams()\n    const history = useHistory()\n\n    // Grabs what widget page is in the URL\n    const widgetPage = params.widgetPage\n    const dashboardOpen = useSelector(state => state.dashboardsReducer.dashboardOpen)\n\n    const stations = useSelector(state => state.stationsReducer.stations)\n    const selectedStation = useSelector(state => state.stationsReducer.selectedStation)\n    const editingStation = useSelector(state => state.stationsReducer.editingStation)\n\n    const positions = useSelector(state => state.positionsReducer.positions)\n    const selectedPosition = useSelector(state => state.positionsReducer.selectedPosition)\n    const editingPosition = useSelector(state => state.positionsReducer.editingPosition)\n\n    const devices = useSelector(state => state.devicesReducer.devices)\n    const showSideBar = useSelector(state => state.sidebarReducer.open)\n\n    // Info passed from workstations/device_locations via redux\n    const hoveringInfo = useSelector(state => state.widgetReducer.hoverStationInfo)\n\n    const dispatch = useDispatch()\n    const dispatchHoverStationInfo = (info) => dispatch(hoverStationInfo(info))\n    const dispatchWidgetLoaded = (bool) => dispatch(widgetLoaded(bool))\n    const dispatchSetSelectedStation = (station) => dispatch(setSelectedStation(station))\n    const dispatchSetEditingStation = (bool) => dispatch(setEditingStation(bool))\n    const dispatchSetSelectedPosition = (position) => dispatch(setSelectedPosition(position))\n    const dispatchSetEditingPosition = (bool) => dispatch(setEditingPosition(bool))\n    const dispatchSetSelectedStationChildrenCopy = (locationChildren) => dispatch(setSelectedStationChildrenCopy(locationChildren))\n    const dispatchShowSideBar = (bool) => dispatch(setOpen(bool))\n\n    // Location ID passed down through workstations via redux\n    const stationID = hoveringInfo.id\n\n    const editing = editingStation ? editingStation : editingPosition\n    const selectedLocation = !!selectedStation ? selectedStation : selectedPosition\n\n    // This tells redux that the widget has mounted. Used in map view to handle if widget is still open but shoulnt be\n    // This happens when moving the mouse too fast over a location causing a widget to load, but not fast enough for the onmouselave to execute\n    useEffect(() => {\n\n        // setTimeout(() => dispatchWidgetLoaded(true), 100)\n        dispatchWidgetLoaded(true)\n        return () => {\n            onWidgetClose()\n        }\n    }, [])\n\n\n    /**\n     * Closes the widget\n     * If editing, then dont set the selected location to null\n     * @param {*} edit\n     */\n    const onWidgetClose = (edit) => {\n        \n        dispatchHoverStationInfo(null)\n        dispatchWidgetLoaded(false)\n\n    }\n\n    // If widgetPage exists in URL params, then the widget pages are open\n    const HandleWidgetPageOpen = () => {\n        if (!!widgetPage && (!!editingStation || !!editingPosition)) {\n            dispatchHoverStationInfo(hoveringInfo)\n            dispatchSetSelectedStation(null)\n            dispatchSetSelectedPosition(null)\n        }\n    }\n\n    const onClickLocation = async () => {\n\n\n        history.push('/locations')\n\n        if (!showSideBar) {\n            const hamburger = document.querySelector('.hamburger')\n            hamburger.classList.toggle('is-active')\n        }\n\n        dispatchShowSideBar(true)\n\n        onWidgetClose(true)\n        dispatchHoverStationInfo(null)\n\n        if (!!selectedStation) {\n            dispatchSetEditingStation(true)\n            let copy = {}\n            selectedStation.children.forEach(child => {\n                copy[child] = positions[child]\n            })\n            dispatchSetSelectedStationChildrenCopy(copy)\n            dispatchSetSelectedStation(selectedStation)\n        }\n        else if (!!selectedPosition) {\n            dispatchSetEditingPosition(true)\n            dispatchSetSelectedPosition(selectedPosition)\n\n        }\n\n\n    }\n\n\n    // Renders the buttons under the location. useMemo is passed a blank array because the buttons only need to be rendered once\n    const handleWidgetButtons = useMemo(() => {\n        const location = !!stations[hoveringInfo.id] ? stations[hoveringInfo.id] : positions[hoveringInfo.id]\n\n        // If the schema is a station then show these buttons, else it's a position\n        if (location.schema === 'station') {\n            // If location has a device, then see what type of widget buttons need to be displayed, else just show statistics and dashboards\n            if (!!location.device_id) {\n                const device = devices[location.device_id]\n                let deviceType = DeviceItemTypes['generic']\n\n                if (!!DeviceItemTypes[device.device_model]) deviceType = DeviceItemTypes[device.device_model]\n\n                return deviceType.widgetPages.map((page, ind) => {\n                    switch (page) {\n                        case 'statistics':\n                            return (\n                                <WidgetButton\n                                    key={ind}\n                                    id={stationID}\n                                    type={'statistics'}\n                                    label={'Statistics'}\n                                    currentPage={widgetPage}\n\n                                />\n                            )\n                        case 'dashboards':\n                            return (\n                                <WidgetButton\n                                    key={ind}\n                                    id={stationID}\n                                    type={'dashboards'}\n                                    label={'Dashboards'}\n                                    currentPage={widgetPage}\n\n                                />\n                            )\n                        case 'view':\n                            return (\n                                <WidgetButton\n                                    key={ind}\n                                    id={stationID}\n                                    type={'view'}\n                                    label={'View'}\n                                    currentPage={widgetPage}\n\n                                />\n                            )\n\n                        default:\n                            break;\n                    }\n\n                })\n\n            }\n            else {\n                return (\n                    <>\n                        <WidgetButton\n                            id={stationID}\n                            type={'statistics'}\n                            label={'Statistics'}\n                            currentPage={widgetPage}\n\n                        />\n\n                        <WidgetButton\n                            id={stationID}\n                            type={'dashboards'}\n                            label={'Dashboards'}\n                            currentPage={widgetPage}\n\n                        />\n\n                        <WidgetButton\n                            id={stationID}\n                            type={'lots'}\n                            label={'Lots'}\n                            currentPage={widgetPage}\n\n                        />\n\n                        {/* Commented out for now, these widgets aren't working as of Sept. 1 2020. Once re-implemented make sure to update CSS */}\n                        {/* <WidgetButton\n                    id={stationID}\n                    type={'tasks'}\n                    currentPage={widgetPage}\n                /> */}\n\n                        {/* <WidgetButton\n                            id={stationID}\n                            type={'objects'}\n                            currentPage={widgetPage}\n                        /> */}\n\n                        {/* <WidgetButton\n                    id={stationID}\n                    type={'view'}\n                    currentPage={widgetPage}\n                /> */}\n                    </>\n\n                )\n            }\n        }\n        // If right menu position, have send cart and cancel (times)\n        else if (selectedPosition.schema === 'temporary_position') {\n            return (\n                <>\n                    <WidgetButton\n                        id={stationID}\n                        type={'cart'}\n                        coordinateMove={true}\n                        currentPage={widgetPage}\n                        label={'Send Cart Here'}\n\n                    />\n                    <WidgetButton\n                        id={stationID}\n                        type={'cancel'}\n                        currentPage={widgetPage}\n\n                    />\n                </>\n            )\n        }\n\n        else {\n            return (\n                <WidgetButton\n                    id={stationID}\n                    type={'cart'}\n                    label={'Send Cart Here'}\n                    currentPage={widgetPage}\n\n                />\n            )\n        }\n    }, [widgetPage])\n\n    const statistics = useMemo(() => {\n        // TODO: Write code that grabs the statistics for the current location\n\n        return (\n            <styled.WidgetStatisticsContainer>\n\n                <styled.WidgetStatisticsBlock>\n                    <styled.WidgetStatisticsIcon className=\"far fa-clock\" />\n                    <styled.WidgetStatisticsText>\n                        30s\n                    </styled.WidgetStatisticsText>\n                </styled.WidgetStatisticsBlock>\n\n                <styled.WidgetStatisticsBlock>\n                    <styled.WidgetStatisticsIcon className=\"fas fa-arrow-right\" />\n                    <styled.WidgetStatisticsText>\n                        25 Units\n                    </styled.WidgetStatisticsText>\n                </styled.WidgetStatisticsBlock>\n\n                <styled.WidgetStatisticsBlock>\n                    <styled.WidgetStatisticsIcon className=\"fas fa-percent\" />\n                    <styled.WidgetStatisticsText>\n                        98%\n                    </styled.WidgetStatisticsText>\n                </styled.WidgetStatisticsBlock>\n\n            </styled.WidgetStatisticsContainer>\n        )\n    }, [stations, positions])\n\n    /**\n     * This handles the x and y position of the widget.\n     * It centers the x and y position to the middle of the widget by using the element height and width\n     * This takes care issue with widgets that are different sizes\n     * @param {} coord\n     */\n    // Left outside of function so that otherplaces can access it\n    const element = document.getElementById(hoveringInfo.id)\n\n    const handleWidgetPosition = (coord) => {\n\n        // When first hovering over, the widget has not mounted so the element is null, but once its mounted, you can use the bounding box\n        if (element === null) {\n            if (coord === 'x') {\n                return hoveringInfo.xPosition + 'px'\n            } else {\n\n                return hoveringInfo.yPosition + 'px'\n            }\n        }\n\n        const elementHeight = element.getBoundingClientRect().height\n        const elementWidth = element.getBoundingClientRect().width\n\n\n        let widgetPosition = {}\n\n        // Handles the x, use location x if right click menu so it can also move\n        if (!!selectedPosition && selectedPosition.schema === 'temporary_position') {\n            widgetPosition.x = selectedPosition.x - elementWidth / 2 + 30 + 'px'\n        }\n        else {\n            widgetPosition.x = hoveringInfo.xPosition - elementWidth / 2 + 'px'\n        }\n\n        // Handles the y, use location y if right click menu so it can also move\n        if (!!selectedPosition && selectedPosition.schema === 'temporary_position') {\n            widgetPosition.y = selectedPosition.y + elementHeight / 2 + 20 + 'px'\n        }\n        else {\n            widgetPosition.y = hoveringInfo.yPosition + elementHeight / 2 + 'px'\n        }\n\n        if (coord === 'x') {\n            return widgetPosition.x\n\n        } else {\n            return widgetPosition.y\n        }\n\n    }\n\n    return (\n        <>\n            {!!widgetPage &&\n                <styled.WidgetBlurContainer />\n            }\n            {/* WidgetLocationContainer is an absolute div used for locating the widget over the hovered location */}\n            <styled.WidgetLocationContainer\n                id={hoveringInfo.id}\n                onMouseEnter={() => {\n                    dispatchHoverStationInfo(hoveringInfo)\n                    handleWidgetPosition()\n                }}\n\n                onMouseLeave={() => {\n                    if (!widgetPage && !!selectedLocation && selectedLocation.schema !== 'temporary_position' && !editing) {\n                        onWidgetClose()\n                        dispatchSetSelectedStation(null)\n                        dispatchSetSelectedPosition(null)\n                    }\n                }}\n\n                // xPosition={hoveringInfo.xPosition + 'px'}\n                xPosition={handleWidgetPosition('x')}\n                yPosition={handleWidgetPosition('y')}\n                scale={hoveringInfo.scale}\n                widgetPage={widgetPage}\n\n                // This sets the opacity to 0 if the element has not been mounted yet. Eliminates the 'snapping'\n                style={{ opacity: !widgetPage && element === null ? '0' : '1' }}\n            >\n                {/* If not widget page and not a right click widget then add an invisable hover area */}\n                {!widgetPage && !!selectedLocation && selectedLocation.schema !== 'temporary_position' &&\n                    <styled.WidgetHoverArea\n                        hoverScale={hoveringInfo.realScale}\n                        onMouseEnter={() => {\n                            dispatchHoverStationInfo(hoveringInfo)\n                        }}\n\n                    />\n                }\n                <styled.WidgetContainer widgetPage={widgetPage} type={!!selectedLocation && selectedLocation.type} >\n                    {!widgetPage && !!selectedLocation &&\n                        <>\n                            {selectedLocation.schema == \"temporary_position\" ?\n                                <styled.WidgetStationName>{\"Send Cart To Location\"}</styled.WidgetStationName>\n                                :\n                                <>\n                                    {!!selectedLocation.parent ?\n                                        <styled.WidgetPositionName>{selectedLocation.name}</styled.WidgetPositionName>\n                                        :\n                                        <styled.RowContainer>\n                                            <styled.WidgetStationName>{selectedLocation.name}</styled.WidgetStationName>\n                                            <styled.EditIcon\n                                                className='fas fa-edit'\n                                                styled={{ color: '#ff1818' }}\n                                                onClick={() => onClickLocation()}\n                                            />\n                                        </styled.RowContainer>\n\n                                    }\n                                </>\n                            }\n                        </>\n                    }\n\n\n\n                    <styled.WidgetButtonContainer widgetPage={widgetPage}>\n                        {handleWidgetButtons}\n                    </styled.WidgetButtonContainer>\n\n\n                    {/* Commented out for the time being, statistics have not been implemented as of Sept 1 */}\n                    {/* {!widgetPage &&\n                        statistics\n                    } */}\n\n                    {HandleWidgetPageOpen()}\n                </styled.WidgetContainer>\n\n\n\n            </styled.WidgetLocationContainer>\n\n            {!!widgetPage &&\n                <>\n                    <WidgetPages />\n                </>\n            }\n\n        </>\n\n    )\n}\n\nexport default Widgets\n","import styled from 'styled-components'\n\n\nexport const WidgetForeignObject = styled.foreignObject`\n    transition: ${props => props.width === '100%' ? 'all 0.25s ease' : 'none'};\n    overflow: visible;\n    z-index: 1;\n`\n\nexport const WidgetHoverArea = styled.div`\n    margin-top: -12.7rem;\n    width: 30rem;\n    height: 10rem;\n    z-index: 5000;\n`\n\nexport const WorkstationGroup = styled.g`\n    stroke-width: 0;\n    opacity: 0.8;\n`","import React from 'react'\n\nimport { useDispatch, useSelector } from 'react-redux'\n\n// Import utils\nimport { deepCopy } from './utils'\n\n// Import Actions\nimport { putDevices, postDevices, getDevices, deleteDevices } from '../../redux/actions/devices_actions'\nimport * as locationActions from '../../redux/actions/locations_actions'\nimport * as positionActions from '../../redux/actions/positions_actions'\nimport * as dashboardActions from '../../redux/actions/dashboards_actions'\nimport * as stationActions from '../../redux/actions/stations_actions'\nimport * as taskActions from '../../redux/actions/tasks_actions'\nimport * as deviceActions from '../../redux/actions/devices_actions'\n\n/**\n * All of these coordinates have been calc by adjusting them on map with chrome dev tools\n * @param {*} location\n * @param {*} rd3tClassName\n * @param {*} d3\n */\n\nexport const handleWidgetHoverCoord = (location, rd3tClassName, d3) => {\n\n    let widgetInfo = {}\n    widgetInfo.id = location._id\n\n    widgetInfo.heightWidth = '1'\n\n    // Initial Ratios\n    widgetInfo.yPosition = location.y - 66 * d3.scale\n    widgetInfo.xPosition = location.x - 2\n    widgetInfo.scale = d3.scale\n\n    // Sets real scale to be used with the widget hover area\n    widgetInfo.realScale = d3.scale\n\n    // If type is a device\n    if (location.type === 'device') {\n        // Gets the height of the device\n        const el = document.getElementById(`${rd3tClassName}-device`)\n        let bBox = null\n\n\n        // Try catch for when page refreshses when in a widget. When refreshing in a widget, the elements is unmounted and cant get the bounding because of an unmounted element\n        try {\n            bBox = el.getBoundingClientRect()\n        } catch (error) {\n            return widgetInfo\n        }\n\n        // Stops the widget from getting to0 small and keeping the widget relative to the location size\n        if (d3.scale < .8) {\n            widgetInfo.scale = .8\n            widgetInfo.yPosition = location.y + bBox.height / 2 - 71\n            widgetInfo.xPosition = location.x - 12\n\n\n        }\n\n        // Stops the widget from getting to0 large and keeping the widget relative to the location size\n        else if (d3.scale > 1.3) {\n            widgetInfo.scale = 1.3\n            widgetInfo.yPosition = location.y + bBox.height / 2 - 86\n            widgetInfo.xPosition = location.x + 30\n\n        }\n    }\n\n    // Else its a postion/station\n    else {\n        // Gets the element based on whether its a station or not\n        const el = location.schema === 'station' ? document.getElementById(`${rd3tClassName}-station`) : document.getElementById(`${rd3tClassName}-position`)\n        let bBox = null\n\n        // Try catch for when page refreshses when in a widget. When refreshing in a widget, the elements is unmounted and cant get the bounding because of an unmounted element\n        try {\n            bBox = el.getBoundingClientRect()\n        } catch (error) {\n            return widgetInfo\n        }\n\n        widgetInfo.scale = 1.3\n        widgetInfo.yPosition = location.y + bBox.height / 2 - 75\n        widgetInfo.xPosition = location.schema === 'station' ? location.x + 45 : location.x + 12\n\n        // Stops the widget from getting to small and keeping the widget relative to the location size\n        if (d3.scale < .8) {\n            widgetInfo.scale = .8\n            widgetInfo.yPosition = location.y + bBox.height / 2 - 68\n            widgetInfo.xPosition = location.x - 15\n        }\n\n        // Stops the widget from getting to large and keeping the widget relatice to the location size\n        else if (d3.scale > 1.3) {\n            widgetInfo.scale = 1.3\n            widgetInfo.yPosition = location.y + bBox.height / 2 - 75\n            widgetInfo.xPosition = location.schema === 'station' ? location.x + 45 : location.x + 12\n\n        }\n    }\n\n    return widgetInfo\n\n}\n","import styled from 'styled-components'\n\nexport const WorkstationGroup = styled.g`\n    stroke-width: 0;\n    opacity: 0.8;\n`","import React from 'react'\n\nimport * as styled from './location_svg.style'\n\n// Import Constants\nimport { StationTypes } from '../../../../constants/station_constants'\nimport { PositionTypes } from '../../../../constants/position_constants'\n\nconst LocationSvg = (props) => {\n\n    const {\n        location,\n        rd3tClassName,\n        color,\n        d3,\n        isSelected,\n        hovering,\n        rotating,\n        hoveringInfo,\n        shouldGlow,\n\n        handleMouseEnter,\n        handleMouseLeave,\n        handleMouseDown,\n        handleTranslating,\n        handleRotating,\n\n\n    } = props\n\n    const schema = location.schema\n    const locationTypes = {\n        ...StationTypes,\n        ...PositionTypes\n    }\n\n    return (\n        <styled.WorkstationGroup\n            id={rd3tClassName}\n            className={rd3tClassName}\n            style={{ fill: color, stroke: color }}\n            onMouseEnter={() => {\n                handleMouseEnter()\n            }}\n            onMouseDown={() => {\n                handleMouseDown()\n            }}\n            onMouseLeave={() => {\n                handleMouseLeave()\n            }}\n            transform={`translate(${location.x},${location.y}) rotate(${location.rotation}) scale(${d3.scale / d3.imgResolution})`}\n        >\n            <defs>\n\n                {/* a transparent glow that takes on the colour of the object it's applied to */}\n                <filter id=\"glow\">\n                    <feGaussianBlur stdDeviation=\"1\" result=\"coloredBlur\" />\n                    <feMerge>\n                        <feMergeNode in=\"coloredBlur\" />\n                        <feMergeNode in=\"SourceGraphic\" />\n                    </feMerge>\n                </filter>\n\n                <filter id=\"glow2\" height=\"300%\" width=\"300%\" x=\"-75%\" y=\"-75%\">\n                    <feMorphology operator=\"dilate\" radius=\"1\" in=\"SourceAlpha\" result=\"thicken\" />\n                    <feGaussianBlur in=\"thicken\" stdDeviation=\"2\" result=\"blurred\" />\n                    <feFlood floodColor={color} result=\"glowColor\" />\n                    <feComposite in=\"glowColor\" in2=\"blurred\" operator=\"in\" result=\"softGlow_colored\" />\n                    <feMerge>\n                        <feMergeNode in=\"softGlow_colored\" />\n                        <feMergeNode in=\"SourceGraphic\" />\n                    </feMerge>\n                </filter>\n\n            </defs>\n\n            <g\n                className={`${rd3tClassName}-rot`}\n                onMouseLeave={() => {\n                    handleMouseLeave()\n                }}\n\n            >\n                <circle x=\"-20\" y=\"-20\" r=\"20\" strokeWidth=\"0\" fill=\"transparent\" style={{ cursor: rotating ? \"pointer\" : \"grab\" }}\n                />\n                {isSelected && (hovering || rotating) && hoveringInfo === null &&\n                    <>\n                        <circle x=\"-20\" y=\"-20\" r=\"18\" fill=\"none\" strokeWidth=\"4\" stroke=\"transparent\" style={{ cursor: \"pointer\" }}\n                            onMouseDown={() => handleRotating(true)}\n                            onMouseUp={() => handleRotating(false)}\n\n                        />\n                        <circle x=\"-18\" y=\"-18\" r=\"18\" fill=\"none\" strokeWidth=\"0.8\" style={{ filter: \"url(#glow)\", cursor: \"pointer\" }}\n                        />\n                    </>\n                }\n            </g>\n\n            <g\n                className={`${rd3tClassName}-trans`}\n                style={{ cursor: \"pointer\" }}\n                onMouseEnter={() => {\n                    handleMouseEnter()\n                }}\n                onMouseDown={() => handleTranslating(true)}\n                onMouseUp={() => handleTranslating(false)}\n\n                transform={location.type === 'device' && 'scale(.07) translate(-180,-140)'}\n            >\n\n                <svg id={`${rd3tClassName}-${schema}`} x=\"-10\" y=\"-10\" width=\"20\" height=\"20\" viewBox=\"0 0 400 400\" style={{ filter: shouldGlow ? 'url(#glow2)' : 'none' }}>\n                    {locationTypes[location.type].svgPath}\n                </svg>\n\n\n            </g>\n\n\n        </styled.WorkstationGroup>\n    )\n}\n\nexport default LocationSvg","import React, { useState, useEffect, useMemo } from 'react'\nimport * as d3 from 'd3'\n\n\nconst DragEntityProto = (props) => {\n    const {\n        isSelected,\n        location,\n        handleRotate,\n        handleTranslate,\n        handleDisableDrag,\n        handleEnableDrag,\n        handleTranslateEnd,\n        rd3tClassName,\n        // d3\n    } = props\n\n    const [rotating, setRotating] = useState(false)\n    const [translating, setTranslating] = useState(false)\n\n    useEffect(() => {\n        bindDragListener()\n    })\n\n    let rotateStart = null          // Inital rotation angle\n    let originalRotation = null     // Original rotation of location\n    let deltaRotation = null        // Change in rotation (current angle - start angle)\n\n    let translateStart = null       // Initial coordinates of translate\n    let originalTranslation = []    // Original coordinates of location\n    let deltaTranslation = []       // Change in coordinates (over course of the drag event)\n\n    /** Callback on continuous rotate event */\n    const rotate = (event, element) => {\n\n        // Cant rotate if this location is not selected\n        if (!isSelected) { return }\n        if (!rotating) { setRotating(true) }\n\n        // The angle is calculated between the current cursor location and the center of the location\n        // NOTE: Im not sure why the 160 offset is neccessary. I think it might have to do with the way the menu/status bar\n        // is layered.\n        let angle\n        if (event.sourceEvent.type == \"mousemove\") {    // Computer\n            angle = Math.atan2(event.sourceEvent.clientY - location.y, event.sourceEvent.clientX - location.x) * 180 / Math.PI\n        } else if (event.sourceEvent.type == \"touchmove\") { // Tablet\n            angle = Math.atan2(event.sourceEvent.touches[0].clientY - location.y, event.sourceEvent.touches[0].clientX - location.x) * 180 / Math.PI\n        }\n\n        // Keep track of BOTH the initial rotation of the position, and the start angle of the drag\n        if (rotateStart == null) {\n            originalRotation = location.rotation\n            rotateStart = angle\n        }\n        // The delta is the current angle - the start angle (round to nearest 5th degree or nearest 45 degree)\n        deltaRotation = angle - rotateStart\n        if (Math.abs(deltaRotation % 45) < 5) {\n            deltaRotation = Math.round(deltaRotation / 45) * 45\n        } else {\n            deltaRotation = Math.round(deltaRotation / 10) * 10\n        }\n\n        // Callback passed from props to set the appropriate location atttribute\n        handleRotate(originalRotation + deltaRotation)\n    }\n\n    const rotateEnd = () => {\n        // Effectivly clears the rotate event\n        rotateStart = null\n    }\n\n    const translate = (event, element) => {\n\n        // Cant move location if the location isnt selected\n        if (!isSelected) { return }\n        if (!translating) { setTranslating(true) }\n\n        // Set the translation based on the event\n        let translation = []\n        if (event.sourceEvent.type == \"mousemove\") {    // Computer\n            translation = [event.sourceEvent.clientX, event.sourceEvent.clientY]\n        } else if (event.sourceEvent.type == \"touchmove\") { // Tablet\n            translation = [event.sourceEvent.touches[0].clientX, event.sourceEvent.touches[0].clientY]\n        }\n\n        // Keep track of the initial positon coords and the start coords of the event\n        if (translateStart == null) {\n            translateStart = translation\n            originalTranslation = [location.x, location.y]\n        }\n        // Calculate the change in translation relative to the start coordinates (round to nearest 5th pixel)\n        deltaTranslation[0] = Math.round((translation[0] - translateStart[0]) / 5) * 5\n        deltaTranslation[1] = Math.round((translation[1] - translateStart[1]) / 5) * 5\n\n        // Callback to set the appropriate location attributes\n        handleTranslate({ x: originalTranslation[0] + deltaTranslation[0], y: originalTranslation[1] + deltaTranslation[1] })\n    }\n\n    const translateEnd = () => {\n        translateStart = null\n    }\n\n    /* translateStart = nullconvertRealToD3\n     * Bind the listener that will listen for events that are made directly to this element\n     */\n    const bindDragListener = () => {\n\n        const mainElement = d3.select(`.${rd3tClassName}`)\n        const ringElement = d3.select(`.${rd3tClassName}-rot`)\n        const rectElement = d3.select(`.${rd3tClassName}-trans`)\n\n        // Define drag callbacks for dragging the ring (which rotates the location)\n        ringElement.call(\n            d3.behavior.drag()\n                .on(\"dragstart\", () => {\n                    if (isSelected) {\n                        handleDisableDrag()\n                    }\n                })\n                .on(\"drag\", function (d, i) {\n                    if (isSelected) {\n                        rotate(d3.event, mainElement)\n                    }\n                })\n                .on(\"dragend\", () => {\n                    if (isSelected) {\n                        rotateEnd()\n                        handleEnableDrag()\n                        setRotating(false)\n                    }\n                })\n        )\n\n        // Define drag callbacks for the element itself (which translates location)\n        rectElement.call(\n            d3.behavior.drag()\n                .on(\"dragstart\", () => {\n                    if (isSelected) {\n                        handleDisableDrag()\n                    }\n                })\n                .on(\"drag\", function (d, i) {\n                    if (isSelected) {\n                        translate(d3.event, mainElement)\n                    }\n                })\n                .on(\"dragend\", async () => {\n                    if (isSelected) {\n                        handleTranslateEnd({ x: originalTranslation[0] + deltaTranslation[0], y: originalTranslation[1] + deltaTranslation[1] })\n                        translateEnd()\n                        handleEnableDrag()\n                        setTranslating(false)\n                    }\n                })\n        )\n    }\n\n    return (null)\n}\n\nexport default DragEntityProto","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useParams } from 'react-router-dom'\n\nimport * as styled from './station.style'\n\n// Import actions\nimport { hoverStationInfo } from '../../../../redux/actions/widget_actions'\nimport { setSelectedStation, setStationAttributes } from '../../../../redux/actions/stations_actions'\nimport { setTaskAttributes } from '../../../../redux/actions/tasks_actions'\n\n// Import Utils\nimport { handleWidgetHoverCoord } from '../../../../methods/utils/widget_utils'\nimport { deepCopy } from '../../../../methods/utils/utils'\nimport { convertD3ToReal } from '../../../../methods/utils/map_utils'\nimport { editing } from '../../../../methods/utils/locations_utils'\n\n// Import Constants\nimport { StationTypes } from '../../../../constants/station_constants'\n\n// Import Components\nimport LocationSvg from '../location_svg/location_svg'\nimport DragEntityProto from '../drag_entity_proto'\nimport {getPreviousRoute} from \"../../../../methods/utils/processes_utils\";\nimport {\n    getRouteEnd,\n    getRouteIndexInRoutes, getRouteStart,\n    getUnloadStationId,\n    isNextRouteViable, isPositionAtLoadStation, isPositionInRoutes,\n    isStationInRoutes,\n    isStationLoadStation, isStationUnloadStation\n} from \"../../../../methods/utils/route_utils\";\n\nfunction Station(props) {\n\n\n    const {\n        station,\n        rd3tClassName,\n        d3,\n        handleEnableDrag,\n        handleDisableDrag,\n    } = props\n\n\n    const [hovering, setHovering] = useState(false)\n    const [rotating, setRotating] = useState(false)\n    const [translating, setTranslating] = useState(false)\n\n    const selectedStation = useSelector(state => state.stationsReducer.selectedStation)\n    const editingStation = useSelector(state => state.stationsReducer.editingStation)\n    const selectedPosition = useSelector(state => state.positionsReducer.selectedPosition)\n    const selectedTask = useSelector(state => state.tasksReducer.selectedTask)\n    const selectedProcess = useSelector(state => state.processesReducer.selectedProcess)\n    const hoveringInfo = useSelector(state => state.widgetReducer.hoverStationInfo)\n    const tasks = useSelector(state => state.tasksReducer.tasks)\n    const fixingProcess = useSelector(state => state.processesReducer.fixingProcess)\n\n    const dispatch = useDispatch()\n    const dispatchHoverStationInfo = (info) => dispatch(hoverStationInfo(info))\n    const dispatchSetSelectedStation = (station) => dispatch(setSelectedStation(station))\n    const dispatchSetStationAttributes = (id, attr) => dispatch(setStationAttributes(id, attr))\n    const dispatchSetTaskAttributes = (id, load) => dispatch(setTaskAttributes(id, load))\n\n\n    // ======================================== //\n    //                                          //\n    //        Station Characteristics           //\n    //                                          //\n    // ======================================== //\n\n    const routeStart = getRouteStart(selectedTask)\n    const routeEnd = getRouteEnd(selectedTask)\n\n    // Used to allow translating/rotation\n    let isSelected = false\n    // Set selected if there is a selected postion that is this position and no selected task\n    if (!!selectedStation && selectedStation._id === station._id && !selectedTask && !!editingStation) isSelected = true\n\n    let disabled = false\n    // Disable if the selected station is not this station\n    if (!!selectedStation && selectedStation._id !== station._id) disabled = true\n    // Disable if theres a selected position and the station's children dont contain that position\n    else if (!!selectedPosition && !station.children.includes(selectedPosition._id)) disabled = true\n\n    // This filters out stations when fixing a process\n    // If the process is broken, then you can only start the task at the route before break's unload location\n    else if (!!selectedTask && !!selectedProcess && !!fixingProcess) {\n\n        // setting load\n        if(!routeStart || (routeStart && routeEnd)) {\n\n            // must start at unload station of route before the break\n            const routeBeforeBreak = selectedProcess.routes[selectedProcess.broken - 1]\n            if(!isStationUnloadStation(routeBeforeBreak, station._id)) disabled = true\n        }\n\n        // setting unload\n        else if(!routeEnd) {\n\n            // can't pick same station for load and unload\n            if(isStationLoadStation(selectedTask, station._id)) disabled = true\n\n            // disable stations already in process\n            if(isStationInRoutes(selectedProcess.routes, station._id)) disabled = true\n\n            // always allow picking load station of route after the break, as this would fix the break\n            const routeAfterBreak = selectedProcess.routes[selectedProcess.broken] || {}\n            if(isStationLoadStation(routeAfterBreak, station._id)) disabled = false\n        }\n    }\n\n    // This filters stations when making a process\n    // If the process has routes, and you're adding a new route, you should only be able to add a route starting at the last station\n    // This eliminates process with gaps between stations\n    else if (!!selectedProcess && !!selectedTask  ) {\n        const {\n            temp\n        } = selectedTask || {}\n        const {\n            insertIndex\n        } = temp || {}\n\n        if(selectedProcess.routes.length > 0) {\n            const routeIndex = getRouteIndexInRoutes(selectedProcess.routes.map((currProcess) => currProcess._id), selectedTask?._id)\n\n            // setting load station\n            if(!routeStart || (routeStart && routeEnd)) {\n\n                // adding to beginning\n                if(insertIndex === 0 ) {\n                    // disable is station is already in process\n                    if(isStationInRoutes(selectedProcess.routes, station._id)) disabled = true\n                }\n\n\n                else if(routeIndex === 0) {\n                    if(isStationInRoutes(selectedProcess.routes, station._id)) disabled = true\n                    if(isStationLoadStation(selectedTask, station._id)) disabled = false\n                }\n\n                else {\n                    // must select unload station of previous route\n                    const previousRoute = getPreviousRoute(selectedProcess.routes, selectedTask._id)\n                    if(!isStationUnloadStation(previousRoute, station._id)) disabled = true\n                }\n            }\n\n            else if(!routeEnd) {\n\n                // adding to beginning of process\n                if(insertIndex === 0 ) {\n\n                    // disable stations already in process\n                    if(isStationInRoutes(selectedProcess.routes, station._id)) disabled = true\n\n                    // don't allow selecting same station for load and unload\n                    if(isStationLoadStation(selectedTask, station._id)) disabled = true\n\n                    // always allow selecting load station of first route, as we are adding to the beginning of the process\n                    const firstRoute = selectedProcess.routes[0]\n                    if(isStationLoadStation(firstRoute, station._id)) disabled = false\n                }\n\n                else if(routeIndex === 0) {\n                    // disable stations already in process\n                    if(isStationInRoutes(selectedProcess.routes, station._id)) disabled = true\n\n                    const nextRoute = selectedProcess.routes[1]\n                    if(isStationLoadStation(nextRoute, station._id)) disabled = false\n                }\n\n                else {\n                    // disable stations already in process\n                    if(isStationInRoutes(selectedProcess.routes, station._id)) disabled = true\n\n                    const nextRoute = selectedProcess.routes[routeIndex + 1]\n                    if(isStationLoadStation(nextRoute, station._id)) disabled = false\n                }\n            }\n        }\n\n        // editing first route\n        else {\n            if((selectedTask.load.station && selectedTask.unload.station === null)) {\n                // don't allow selecting same station for load and unload\n                if(isStationLoadStation(selectedTask, station._id)) disabled = true\n            }\n        }\n    }\n\n    const shouldGlow = false\n\n    let highlight = false\n    // Set selected to true if the selected task inculdes the station\n    if (!!selectedTask && (selectedTask.load.station === station._id || selectedTask.unload.station === station._id)) highlight = true\n\n    // Set Color\n    let color = StationTypes[station.type].color\n    if (!isSelected && disabled) color = '#afb5c9' // Grey\n    else if (highlight) color = '#38eb87' // Green\n\n    // ======================================== //\n    //                                          //\n    //            Station Functions             //\n    //                                          //\n    // ======================================== //\n\n    // Used to see if a widget Page is opened\n    let params = useParams()\n    useEffect(() => {\n        window.addEventListener(\"mouseup\", () => { setRotating(false); setTranslating(false) })\n        return () => {\n            window.removeEventListener(\"mouseup\", () => { setRotating(false); setTranslating(false) })\n        }\n\n    }, [])\n\n\n    /**\n    * This runs on page load (thats mean station are mounted) and shows a widget page if it returns true.\n    * If there is a station ID in the params (URL) and it matches this station,\n    * and the URL (params) container a widget page then the widget page should be showing\n    */\n    useEffect(() => {\n        if (params.stationID !== undefined && params.stationID === props.station._id && !!params.widgetPage) {\n            dispatchHoverStationInfo(handleWidgetHover())\n        }\n    }, [])\n\n    /**\n     * Passes the X, Y, scale and ID of station to redux which is then used in widgets\n     */\n    const handleWidgetHover = () => {\n        return handleWidgetHoverCoord(station, rd3tClassName, d3)\n\n    }\n\n    // Handles if URL has widget page open\n    const onWidgetPageOpen = () => {\n        // If widget page is open, hovering is false and the open widget page stations id matches the station ID, set it to true so\n        // that the widget page doesn't disappear when mouse goes out of page\n        if (!!params.widgetPage && !hovering && params.stationID === station._id) {\n            setHovering(true)\n            dispatchHoverStationInfo(handleWidgetHover())\n\n        }\n\n        // If hovering is true but there's no hoverInfo in the reducer (see widgets for when hoverInfo is set to null), set hovering to false\n        else if (!isSelected && hovering && hoveringInfo === null) {\n            setHovering(false)\n        }\n    }\n\n    /**\n     * This handles when a station is selected for a task\n     * Can only add a station to a task if the station is a warehouse or a human\n     * \n     * For a warehouse, the thing to remember is that you push to a warehouse and pull from a warehouse\n     */\n    const onSetStationTask = () => {\n\n        // Make sure there is a selected task and that its a station type you can assign a task too\n        if (selectedTask !== null && (station.type === 'human' || station.type === 'warehouse')) {\n\n            // Commented out for now\n            // // If there's a selected process and the process has routes and the station is not selected, then disable it from being selected\n            // if (!!selectedProcess && selectedProcess.routes.length > 0 && !isSelected) return\n\n            // If the load station has been defined but the unload position hasnt, assign the unload position\n            if (selectedTask.load.position !== null && selectedTask.unload.position === null) {\n                let unload = deepCopy(selectedTask.unload)\n                let type = selectedTask.type\n\n                // If it's a station then set hadnoff to true\n                let handoff = selectedTask.handoff\n                handoff = true\n\n                // Since it's a station, set both the position and station to the station ID\n                unload.position = station._id\n                unload.station = station._id\n\n                // If it's a warehouse and the load station has been selected, then the task type has to be a push\n                // You can only push to a ware house\n                type = station.type === 'warehouse' ? 'push' : type\n\n                // if (station.parent !== null) {\n                //     unload.station = station._id\n                // } else {\n                //     type = 'push'\n                // }\n                dispatchSetTaskAttributes(selectedTask._id, { unload, type, handoff })\n            }\n\n            // Otherwise assign the load position and clear the unload position (to define a new unload)\n            else {\n                let load = deepCopy(selectedTask.load)\n                let unload = deepCopy(selectedTask.unload)\n                let type = selectedTask.type\n\n                // If it's a station then set hadnoff to true\n                let handoff = selectedTask.handoff\n                handoff = true\n\n                // Since it's a station, set both the position and station to the station ID\n                load.position = station._id\n                load.station = station._id\n\n                // If it's a warehouse and the load position has not been selected then the task type is a pull\n                // You can only pull from a ware house\n                type = station.type === 'warehouse' ? 'pull' : type\n\n                // if (station.parent !== null) {\n                //     load.station = station._id\n                // } else {\n                //     type = 'pull'\n                // }\n                unload.position = null\n                unload.station = null\n                dispatchSetTaskAttributes(selectedTask._id, { load, unload, type, handoff })\n            }\n        }\n    }\n\n    const onMouseEnter = () => {\n        // Only allow hovering if there is no selected task\n        if (!hoveringInfo && selectedTask === null && !station.temp) {\n            setHovering(true)\n\n            if (!editing() && !rotating && !translating && !selectedStation && !selectedTask) {\n                dispatchHoverStationInfo(handleWidgetHover())\n                dispatchSetSelectedStation(station)\n            }\n        }\n    }\n\n    const onMouseDown = () => {\n        if (!disabled) onSetStationTask()\n    }\n\n    const onTranslating = (bool) => {\n        setTranslating(bool)\n    }\n\n    const onRotating = (bool) => {\n        setRotating(bool)\n    }\n\n    const onMouseLeave = () => {\n        setHovering(false)\n\n    }\n\n\n    return (\n        <React.Fragment key={`frag-loc-${station._id}`}>\n            <LocationSvg\n                location={station}\n                rd3tClassName={rd3tClassName}\n                color={color}\n                d3={d3}\n                isSelected={isSelected}\n                hovering={hovering}\n                rotating={rotating}\n                hoveringInfo={hoveringInfo}\n                shouldGlow={shouldGlow}\n\n                handleMouseEnter={onMouseEnter}\n                handleMouseLeave={onMouseLeave}\n                handleMouseDown={onMouseDown}\n                handleTranslating={onTranslating}\n                handleRotating={onRotating}\n\n            />\n\n            <DragEntityProto\n                isSelected={isSelected}\n                location={station}\n                rd3tClassName={rd3tClassName}\n                d3={() => d3()}\n\n                handleRotate={(rotation) => { dispatchSetStationAttributes(station._id, { rotation }) }}\n                handleTranslate={({ x, y }) => dispatchSetStationAttributes(station._id, { x, y })}\n                handleTranslateEnd={({ x, y }) => {\n                    const pos = convertD3ToReal([x, y], props.d3)\n                    dispatchSetStationAttributes(station._id, { pos_x: pos[0], pos_y: pos[1] })\n                }}\n\n                handleEnableDrag={() => {\n                    handleEnableDrag()\n\n                }}\n                handleDisableDrag={() => {\n                    handleDisableDrag()\n                }}\n\n\n            />\n            {onWidgetPageOpen()}\n        </React.Fragment>\n    )\n}\n\nexport default Station\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useParams } from 'react-router-dom'\n\n// Import Utils\nimport { deepCopy } from '../../../../methods/utils/utils'\nimport { handleWidgetHoverCoord } from '../../../../methods/utils/widget_utils'\nimport { convertD3ToReal } from '../../../../methods/utils/map_utils'\nimport { editing } from '../../../../methods/utils/locations_utils'\n\n// Import Constants\nimport { PositionTypes } from '../../../../constants/position_constants'\n\n// Import Actions\nimport { setTaskAttributes } from '../../../../redux/actions/tasks_actions'\nimport { setSelectedPosition, setPositionAttributes } from '../../../../redux/actions/positions_actions'\nimport { hoverStationInfo } from '../../../../redux/actions/widget_actions'\n\n// Import Components\nimport LocationSvg from '../location_svg/location_svg'\nimport DragEntityProto from '../drag_entity_proto'\nimport {getPreviousRoute} from \"../../../../methods/utils/processes_utils\";\nimport {\n    getLoadStationId, getRouteEnd, getRouteIndexInRoutes, getRouteStart,\n    isPositionAtLoadStation, isPositionAtUnloadStation,\n    isPositionInRoutes,\n    isStationInRoutes, isStationLoadStation\n} from \"../../../../methods/utils/route_utils\";\n\nfunction Position(props) {\n\n    const {\n        d3,\n        position,\n        rd3tClassName,\n        handleEnableDrag,\n        handleDisableDrag,\n    } = props\n\n    const {\n        _id: positionId\n    } = position\n\n    const [hovering, setHovering] = useState(false)\n    const [rotating, setRotating] = useState(false)\n    const [translating, setTranslating] = useState(false)\n\n    const dispatch = useDispatch()\n    const dispatchSetTaskAttributes = (id, load) => dispatch(setTaskAttributes(id, load))\n    const dispatchHoverStationInfo = (info) => dispatch(hoverStationInfo(info))\n    const dispatchSetSelectedPosition = (position) => dispatch(setSelectedPosition(position))\n    const dispatchSetPositionAttributes = (id, attr) => dispatch(setPositionAttributes(id, attr))\n\n    const selectedTask = useSelector(state => state.tasksReducer.selectedTask)\n    const selectedProcess = useSelector(state => state.processesReducer.selectedProcess)\n    const selectedPosition = useSelector(state => state.positionsReducer.selectedPosition)\n    const selectedStation = useSelector(state => state.stationsReducer.selectedStation)\n    const hoveringID = useSelector(state => state.widgetReducer.hoverLocationID)\n    const hoveringInfo = useSelector(state => state.widgetReducer.hoverStationInfo)\n    const stations = useSelector(state => state.stationsReducer.stations)\n    const tasks = useSelector(state => state.tasksReducer.tasks)\n    const selectedStationChildrenCopy = useSelector(state => state.positionsReducer.selectedStationChildrenCopy)\n    const fixingProcess = useSelector(state => state.processesReducer.fixingProcess)\n\n    // ======================================== //\n    //                                          //\n    //       Position Characteristics           //\n    //                                          //\n    // ======================================== //\n    const routeStart = getRouteStart(selectedTask)\n    const routeEnd = getRouteEnd(selectedTask)\n    // Used to allow translating/rotation\n    let isSelected = false\n    // Set selected if the positon is part of a stations children copy and no selected task\n    if (!!selectedStationChildrenCopy && (positionId in selectedStationChildrenCopy) && !selectedTask) isSelected = true\n    // Set selected if there is a selected postion that is this position and no selected task\n    else if (!!selectedPosition && selectedPosition._id === positionId && !selectedTask) isSelected = true\n    // Set selected if the position is a temp right click\n    else if(position.schema === 'temporary_position') isSelected = true\n\n    // Used to disable the ability to add position as a task\n    let disabled = false\n    // Disable if the selectedPosition is not this position\n    if (!!selectedPosition && selectedPosition._id !== positionId) disabled = true\n    // Disable if the position does not belong to the children copy\n    else if (!!selectedStationChildrenCopy && !(positionId in selectedStationChildrenCopy)) disabled = true\n    // Disbale if the selected stations children does not include this station\n    else if (!!selectedStation && !selectedStation.children.includes(positionId)) disabled = true\n\n    // This filters out positions when fixing a process\n    // If the process is broken, then you can only start the task at the route before break's unload location\n    else if (!!selectedTask && !!selectedProcess && !!fixingProcess) {\n        if (!position.parent) {\n            disabled = true\n        }\n        else {\n            // setting load (or both are set, in which case logic is the same, as click another position would be setting the load\n            if( (!routeStart) || (routeStart && routeEnd)) {\n                // disable all positions except those at unload station of the route before the break\n                const routeBeforeBreak = selectedProcess.routes[selectedProcess.broken - 1]\n                disabled = !isPositionAtUnloadStation(routeBeforeBreak, positionId)\n            }\n\n            // setting unload\n            else if(!routeEnd) {\n\n                // don't allow selecting positions at stations already in process\n                disabled = isPositionInRoutes(selectedProcess.routes, positionId)\n\n                // if position is at station load station after the break, it should be enabled\n                const routeAfterBreak = selectedProcess.routes[selectedProcess.broken]\n                if(isPositionAtLoadStation(routeAfterBreak, positionId)) disabled = false\n            }\n        }\n    }\n    // This filters positions when making a process\n    // If the process has routes, and you're adding a new route, you should only be able to add a route starting at the last station\n    // This eliminates process with gaps between stations\n    else if (!!selectedProcess && !!selectedTask) {\n        if (!position.parent) {\n            disabled = true\n        }\n        else {\n            // extract insertIndex for adding new routes to beginning of a process\n            const {\n                temp\n            } = selectedTask || {}\n            const {\n                insertIndex\n            } = temp || {}\n\n            // not first route\n            if(selectedProcess.routes.length > 0) {\n                const routeIndex = getRouteIndexInRoutes(selectedProcess.routes.map((currProcess) => currProcess._id), selectedTask?._id)\n\n                // setting load (or both have been set)\n                if( !routeStart || (routeStart && routeEnd)) {\n\n                    // adding to beginning of process\n                    if(insertIndex === 0) {\n                        // disable all positions already in the process\n                        disabled = isPositionInRoutes(selectedProcess.routes, positionId)\n                    }\n\n                    else if(routeIndex === 0) {\n                        if(isPositionInRoutes(selectedProcess.routes, positionId)) disabled = true\n                        if(isPositionAtLoadStation(selectedTask, positionId)) disabled = false\n                    }\n\n                    else {\n                        // must start at position at unload station of previous route\n                        const previousRoute = getPreviousRoute(selectedProcess.routes, selectedTask._id)\n                        disabled = !isPositionAtUnloadStation(previousRoute, positionId)\n                    }\n                }\n\n                // setting unload\n                else if(!routeEnd) {\n\n                    // adding new to beginning of process\n                    if(insertIndex === 0) {\n                        // disable positions already used\n                        disabled = isPositionInRoutes(selectedProcess.routes, positionId)\n\n                        // enable positions at first route since inserting at beginning\n                        const firstRoute = selectedProcess.routes[0]\n                        if(isPositionAtLoadStation(firstRoute, positionId)) disabled = false\n\n                        // disable positions at load station of current route, as unload and load shouldn't be at same route\n                        if(isPositionAtLoadStation(selectedTask, positionId)) disabled = true\n                    }\n\n                    else if(routeIndex === 0) {\n                        if(isPositionInRoutes(selectedProcess.routes, positionId)) disabled = true\n\n                        const nextRoute = selectedProcess.routes[1]\n                        if(isPositionAtLoadStation(nextRoute, positionId)) disabled = false\n                    }\n\n                    else {\n                        // disable positions already used\n                        if(isPositionInRoutes(selectedProcess.routes, positionId)) disabled = true\n\n                        // disable positions at load station of current route, as unload and load shouldn't be at same route\n                        if(isPositionAtLoadStation(selectedTask, positionId)) disabled = true\n\n                        const nextRoute = selectedProcess.routes[routeIndex + 1]\n                        if(isPositionAtLoadStation(nextRoute, positionId)) disabled = false\n                    }\n                }\n            }\n\n            // first route\n            else {\n                // setting load\n                if(!routeStart || (routeStart && routeEnd)) {\n                    // all positions are available for load position of first route\n                }\n\n                // setting unload\n                else if(!routeEnd) {\n                    // disable positions at load station of current route, as unload and load shouldn't be at same route\n                    if(isPositionAtLoadStation(selectedTask, positionId)) disabled = true\n                }\n            }\n        }\n    }\n\n    // This filters out positions that aren't apart of a station when making a task\n    // Should not be able to make a task for a random position\n    else if (!!selectedTask && !position.parent) {\n        disabled = true\n    }\n\n    // Tells the position to glow\n    const shouldGlow = selectedTask !== null &&\n        ((selectedTask.load.position == positionId && selectedTask.type == 'push') ||\n            (selectedTask.unload.position == positionId && selectedTask.type == 'pull') ||\n            (selectedTask.load.position == positionId && selectedTask.type == 'both') ||\n            (selectedTask.unload.position == positionId && selectedTask.type == 'both'))\n\n\n    // Used to highlight position if the position is part of the selected task\n    let highlight = false\n    if (!!selectedTask && (selectedTask.load.position === positionId || selectedTask.unload.position === positionId)) highlight = true\n\n\n    // Set Color\n    let color = PositionTypes[position.type].color\n    if (!isSelected && disabled) color = '#afb5c9' // Grey\n    else if (highlight) color = '#38eb87' // Green\n\n    // ======================================== //\n    //                                          //\n    //           Position Functions             //\n    //                                          //\n    // ======================================== //\n\n    useEffect(() => {\n        window.addEventListener(\"mouseup\", () => { setRotating(false); setTranslating(false) })\n        return () => {\n            window.removeEventListener(\"mouseup\", () => { setRotating(false); setTranslating(false) })\n        }\n    }, [])\n\n    // Automatically opens widget pages and sets hovering to true in the position is a temp right click\n    useEffect(() => {\n        if (position !== null && position.schema === 'temporary_position') {\n            setHovering(true)\n            dispatchHoverStationInfo(handleWidgetHover())\n            dispatchSetSelectedPosition(position)\n        }\n    }, [])\n\n\n    /**\n    * Passes the X, Y, scale and ID of position to redux which is then used in widgets\n    */\n    const handleWidgetHover = () => {\n\n        return handleWidgetHoverCoord(position, rd3tClassName, d3)\n\n    }\n\n    const onSetPositionTask = () => {\n\n        // Commented out for now\n        // If there's a selected process and the process has routes and the station is not selected, then disable it from being selected\n        // if (!!selectedProcess && selectedProcess.routes.length > 0 && !isSelected) return\n\n\n        if (selectedTask !== null) {\n            // If the load position has been defined but the unload position hasnt, assign the unload position\n            if (selectedTask.load.position !== null && selectedTask.unload.position === null) {\n                let unload = deepCopy(selectedTask.unload)\n                let type = selectedTask.type\n                unload.position = positionId\n                if (position.parent !== null) {\n                    unload.station = position.parent\n                } else {\n                    type = 'push'\n                }\n                dispatchSetTaskAttributes(selectedTask._id, { unload, type })\n            } else { // Otherwise assign the load position and clear the unload position (to define a new unload)\n                let load = deepCopy(selectedTask.load)\n                let unload = deepCopy(selectedTask.unload)\n                let type = selectedTask.type\n                load.position = positionId\n                if (position.parent !== null) {\n                    load.station = position.parent\n                } else {\n                    type = 'pull'\n                }\n                unload.position = null\n                unload.station = null\n                dispatchSetTaskAttributes(selectedTask._id, { load, unload, type })\n            }\n        }\n    }\n\n    const onMouseEnter = () => {\n        // Only hover if there is no selected task\n        if (!hoveringInfo && selectedTask === null && !position.temp) {\n            setHovering(true)\n            if (!editing() && !rotating && !translating && !selectedPosition && !selectedStation && !selectedTask) {\n                dispatchHoverStationInfo(handleWidgetHover())\n                dispatchSetSelectedPosition(position)\n\n            }\n        }\n\n    }\n\n    const renderParentLine = () => {\n\n        const parent = ((!!selectedStationChildrenCopy && positionId in selectedStationChildrenCopy) && !!selectedStation) ? selectedStation : stations[position.parent]\n        // TODO: Temp fix\n        if (!parent) return \n        return (\n            <line x1={`${position.x}`} y1={`${position.y}`}\n                x2={`${parent.x}`} y2={`${parent.y}`}\n                stroke={color} strokeWidth=\"1.4\" shapeRendering=\"geometricPrecision\" style={{ opacity: '0.3', }}\n            />\n        )\n    }\n\n    const onMouseDown = () => {\n        if (!disabled) onSetPositionTask()\n    }\n\n    const onTranslating = (bool) => {\n        if (!isSelected) {\n            setTranslating(bool)\n        }\n    }\n\n    const onRotating = (bool) => {\n        setRotating(bool)\n        if (!bool) {\n            setHovering(false)\n        }\n    }\n\n    const onMouseLeave = () => {\n        position.schema !== 'temporary_position' && setHovering(false)\n    }\n\n    return (\n        <React.Fragment key={`frag-loc-${positionId}`}>\n            {!!position.parent && renderParentLine()}\n            <LocationSvg\n                location={position}\n                rd3tClassName={rd3tClassName}\n                color={color}\n                d3={d3}\n                isSelected={isSelected}\n                hovering={hovering}\n                rotating={rotating}\n                hoveringInfo={position.schema !== 'temporary_position' ? hoveringInfo : null}\n                shouldGlow={shouldGlow}\n\n                handleMouseEnter={onMouseEnter}\n                handleMouseLeave={onMouseLeave}\n                handleMouseDown={onMouseDown}\n                handleTranslating={onTranslating}\n                handleRotating={onRotating}\n\n            />\n\n            <DragEntityProto\n                isSelected={isSelected}\n                location={position}\n                rd3tClassName={rd3tClassName}\n                d3={() => d3()}\n\n                handleRotate={(rotation) => { dispatchSetPositionAttributes(positionId, { rotation }) }}\n                handleTranslate={({ x, y }) => dispatchSetPositionAttributes(positionId, { x, y })}\n                handleTranslateEnd={({ x, y }) => {\n                    const pos = convertD3ToReal([x, y], props.d3)\n                    dispatchSetPositionAttributes(positionId, { pos_x: pos[0], pos_y: pos[1] })\n                }}\n\n                handleEnableDrag={() => {\n                    handleEnableDrag()\n                }}\n                handleDisableDrag={() => {\n                    handleDisableDrag()\n                }}\n\n\n            />\n        </React.Fragment>\n    )\n}\n\nexport default Position\n","import React, { Component, useState } from 'react'\nimport { ReactDOM, Route } from 'react-dom'\nimport { connect } from 'react-redux';\nimport moduleName from 'react'\nimport { withRouter } from \"react-router-dom\";\n\nimport * as styled from './map_view.style'\n\nimport uuid from 'uuid';\nimport * as d3 from 'd3'\n\n// Import Utils\nimport { convertD3ToReal, convertRealToD3, getRelativeOffset } from '../../methods/utils/map_utils'\nimport { isEquivalent, } from '../../methods/utils/utils.js'\n\n// Import Actions\nimport { getMap } from '../../redux/actions/map_actions'\nimport { updateStations, setStationAttributes, setSelectedStation } from '../../redux/actions/stations_actions'\nimport { updatePositions, postPosition, setPositionAttributes, setSelectedPosition } from '../../redux/actions/positions_actions'\nimport * as deviceActions from '../../redux/actions/devices_actions'\n\nimport { widgetLoaded, hoverStationInfo } from '../../redux/actions/widget_actions'\n\n// Import Components\nimport TaskPaths from '../../components/map/task_paths/task_paths.js'\nimport ProcessPaths from '../../components/map/process_paths/process_paths'\nimport MiR100 from '../../components/map/amrs/mir100/mir100.js'\nimport Zones from '../../components/map/zones/zones'\nimport RightClickMenu from '../../components/map/right_click_menu/right_click_menu'\nimport TaskStatistics from '../../components/map/task_statistics/task_statistics'\nimport Widgets from '../../components/widgets/widgets'\n\nimport Station from '../../components/map/locations/station/station'\nimport Position from '../../components/map/locations/position/position'\n\n// logging\nimport log from \"../../logger\"\nimport { setCurrentMap } from \"../../redux/actions/map_actions\";\nimport { getPreviousRoute } from \"../../methods/utils/processes_utils\";\nimport { isObject } from \"../../methods/utils/object_utils\";\n\nconst logger = log.getLogger(\"MapView\")\n\nexport class MapView extends Component {\n    constructor(props) {\n        super(props)\n\n        this.mobileMode = this.props.mobileMode\n        this.onClick = this.props.onClick\n\n        this.state = {\n            showRightClickMenu: {},\n        }\n\n        this.rd3tSvgClassName = `__SVG`     // Gives uniqe className to map components to reference for d3 events\n        this.rd3tMapClassName = `__MAP`\n        this.rd3tLocClassName = '__LOC'\n        this.rd3tStationClassName = `__STATION`\n        this.rd3tPosClassName = '__POS'\n\n        this.lastEvent = null   // Save the latest event\n\n        this.initialRender = true   // Keeps track of where the D3 SVG has been zoomed or dragged\n        this.draggable = true   // Dragging is disabled when another event occurs (ex: moving a location)\n        this.widgetDraggable = true   // Dragging is disabled when widget page is open (ex: moving a location)\n\n        this.d3 = {\n            translate: [0, 0],\n            scale: 1,\n            naturalScale: 1,\n            boundingClientHeight: 0\n        }\n\n        this.naturalImageDimensions = {\n            width: 100,\n            heigh: 100\n        }\n\n        this.mouseDown = false\n    }\n\n    componentDidMount() {\n        // Refresh the map on initial mount. This will only likely give you back the list of\n        // maps, but componentDidUpdate will catch that and set the current map to the first map\n        // in the returned list (which will be the active map)\n        // this.refreshMap()\n\n        this.checkForMapLoad()\n        window.addEventListener('mousedown', () => this.mouseDown = true, { passive: false })\n        window.addEventListener('mouseup', () => { this.mouseDown = false; this.validateNewEntity() }, { passive: false })\n        window.addEventListener(\"click\", () => {this.setState({showRightClickMenu:{}})});\n\n        // Event listener that will recalculate the map geometry when the screen size changes\n        window.addEventListener('resize', () => {\n            //this.calculateD3Geometry()\n            this.bindZoomListener()\n        }, { passive: false })\n\n    }\n\n    checkForMapLoad = () => {\n        var defaultMap = this.props.maps.find((map) => map._id === this.props.currentMapId)\n\n        if (this.props.currentMapId && this.props.currentMap && this.props.currentMap._id && defaultMap) {\n            if (this.props.currentMapId !== this.props.currentMap._id) {\n                this.props.dispatchSetCurrentMap(defaultMap)\n            }\n\n        } else if (this.props.currentMapId && defaultMap) {\n            this.props.dispatchSetCurrentMap(defaultMap)\n\n        } else if (this.props.currentMap && this.props.currentMap._id) {\n            // do nothing\n        } else {\n\n            // default to first map found\n            this.props.dispatchSetCurrentMap(this.props.maps[0])\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n\n        // If new maps are available, refresh current map\n        // NOTE: will be useless once we have a method to select map\n        // if (prevProps.maps.length != this.props.maps.length) {\n        //     this.refreshMap()\n        // }\n        this.checkForMapLoad() //test\n\n\n        // If the map has been changed, recalculate the geometry and bind the zoom\n        // listener to default to the correct translation\n        if (!isEquivalent(prevProps.currentMap, this.props.currentMap)) {\n            //this.calculateD3Geometry(this.mapContainer)\n            this.bindZoomListener()\n        }\n\n        // If the map has been changed, recalculate the geometry and bind the zoom\n        // listener to default to the correct translation\n        // if (!isEquivalent(prevProps.locations, this.props.locations)) {\n        //     this.calculateD3Geometry()\n        //     this.bindZoomListener()\n        // }\n\n\n        // if a widget page is open, disable window event listeners so events work normally within the widget page\n        const { widgetPage } = this.props.match.params    // contains url params from route.\n        if (widgetPage) {\n            document.removeEventListener(\"dragend\", this.validateNewLocation)\n        } else {\n            // reattach event listeners if necessary\n            document.addEventListener('dragend', this.validateNewLocation, { capture: false, passive: true });\n        }\n\n        // if (this.props.currentMap != null && !isEquivalent(prevProps.locations, this.props.locations)) {\n        //     let locations = this.props.locations\n        //     locations.forEach((location, ind) => {\n        //         locations[ind].x = this.d3.translate[0] + this.d3.scale*(location.pos_x/this.props.currentMap.resolution)\n        //         locations[ind].y = this.d3.translate[1] + this.d3.scale*(this.d3.boundingClientHeight - location.pos_y/this.props.currentMap.resolution)\n        //     })\n        //     this.props.onUpdateLocations(locations)\n        // }\n    }\n\n\n    /* ========== Map Functions ========== */\n\n    /***\n     * Refreshes the map and all map entities\n     */\n    refreshMap = () => {\n        if (!!this.props.maps[0]) {\n            this.props.dispatchGetMap(this.props.maps[0].guid)\n        }\n    }\n\n    openLocation = () => {\n        return <Route path={[\"/locations\"]} />\n    }\n\n\n\n    // ---------- Functionality for adding new location ---------- //\n\n    /**\n     * Handles Draging new locations onto the map\n     *\n     * @param {*} e\n     */\n    dragNewEntity = e => {\n\n        if (!this.mouseDown) return\n\n        // Handle Stations\n        if (!!this.props.selectedStation && this.props.selectedStation.temp === true) {\n            this.props.dispatchSetStationAttributes(this.props.selectedStation._id, {\n                x: e.clientX,\n                y: e.clientY\n            })\n        }\n\n        // Handle Positions\n        else if (!!this.props.selectedPosition && this.props.selectedPosition.temp === true && this.props.selectedPosition.schema !== \"temporary_position\") {\n            this.props.dispatchSetPositionAttributes(this.props.selectedPosition._id, {\n                x: e.clientX,\n                y: e.clientY\n            })\n        }\n\n        // Else it's a stations child position\n        else if (!!this.props.selectedStationChildrenCopy) {\n            const draggingChild = Object.values(this.props.selectedStationChildrenCopy).find(position => position.temp === true)\n            if (!!draggingChild && !this.props.selectedPosition) {\n                this.props.dispatchSetPositionAttributes(draggingChild._id, {\n                    x: e.clientX,\n                    y: e.clientY\n                })\n            }\n\n        }\n\n    }\n\n    /**\n     * This runs on mouse up\n     * Handles adding pos_x and pos_y to new locations\n     * pos_x and pos_y are the real x and y relations of the location to the map\n     */\n    validateNewEntity = () => {\n\n        // Handle Stations\n        if (!!this.props.selectedStation && this.props.selectedStation.temp === true) {\n            const pos = convertD3ToReal([this.props.selectedStation.x, this.props.selectedStation.y], this.d3)\n            this.props.dispatchSetStationAttributes(this.props.selectedStation._id, {\n                pos_x: pos[0],\n                pos_y: pos[1],\n                temp: false\n            })\n        }\n\n        // Handle Posiitions\n        else if (!!this.props.selectedPosition && this.props.selectedPosition.temp === true && this.props.selectedPosition.schema !== \"temporary_position\") {\n            const pos = convertD3ToReal([this.props.selectedPosition.x, this.props.selectedPosition.y], this.d3)\n            this.props.dispatchSetPositionAttributes(this.props.selectedPosition._id, {\n                pos_x: pos[0],\n                pos_y: pos[1],\n                temp: false\n            })\n        }\n\n        // Handle child positions of stations\n        else if (!!this.props.selectedStationChildrenCopy) {\n            let newChildEntity = Object.values(this.props.selectedStationChildrenCopy).find(position => position.temp == true)\n            if (!!newChildEntity) {\n\n                // Update the new entity to the edited child copy\n                // Uses copy instead of the naked state in case you dont want to keep changes\n                newChildEntity = this.props.selectedStationChildrenCopy[newChildEntity._id]\n\n                const pos = convertD3ToReal([newChildEntity.x, newChildEntity.y], this.d3)\n                this.props.dispatchSetPositionAttributes(newChildEntity._id, {\n                    pos_x: pos[0],\n                    pos_y: pos[1],\n                    temp: false\n                })\n            }\n        }\n    }\n\n    /* ========== D3 Functions ========== */\n\n    /***\n     * Binds the d3 listener that listens for zoom events. Conveniently it also listens to\n     * drag events, so this will take care of both\n     */\n    bindZoomListener = () => {\n        const { scaleExtent } = this.props\n        const { resolution } = this.props.currentMap\n        const { translate, scale } = this.d3\n\n        const svg = d3.select(`.${this.rd3tSvgClassName}`)\n        const map = d3.selectAll(`.${this.rd3tMapClassName}`)\n\n        let x, y\n        svg.call(\n            d3.behavior\n                .zoom()\n                .scaleExtent([-100, 100])\n                // .scaleExtent([scaleExtent.min, scaleExtent.max])\n                .on('zoom', () => {\n\n                    // Disables the ability to hover over location on mouse drag when a loction is selected that is not new or a right click\n                    if ((!!this.props.selectedStation || (!!this.props.selectedPosition && this.props.selectedPosition.schema !== 'temporary_position')) && (!this.props.editingStation || !this.props.editingPosition)) {\n                        this.props.dispatchHoverStationInfo(null)\n                    }\n\n                    //// Saving the last event is usefull for saving d3 state when draggable is toggled (when moving locations)\n                    this.lastEvent = d3.event\n                    let { stations, positions, devices } = this.props\n\n\n                    //// Apply the event translation to image\n                    map.attr('transform', `translate(${d3.event.translate}) scale(${d3.event.scale})`)\n                    this.d3 = {\n                        ...this.d3,\n                        translate: d3.event.translate,\n                        scale: d3.event.scale\n                    }\n\n                    //// Apply the event translation to each station\n                    Object.values(stations).forEach(station => {\n\n                        [x, y] = convertRealToD3([station.pos_x, station.pos_y], this.d3)\n                        station = {\n                            ...station,\n                            x: x,\n                            y: y,\n                        }\n                        stations[station._id] = station\n\n                    })\n\n                    // Apply the event translation to selectedStation if there is one\n                    let updatedSelectedStation = null\n                    if (!!this.props.selectedStation) {\n                        [x, y] = convertRealToD3([this.props.selectedStation.pos_x, this.props.selectedStation.pos_y], this.d3)\n                        updatedSelectedStation = this.props.selectedStation\n                        updatedSelectedStation = {\n                            ...updatedSelectedStation,\n                            x: x,\n                            y: y,\n                        }\n\n                    }\n\n                    this.props.dispatchUpdateStations(stations, updatedSelectedStation, this.d3) // Bulk Update\n\n                    //// Apply the event translation to each position\n                    Object.values(positions).forEach(position => {\n\n                        [x, y] = convertRealToD3([position.pos_x, position.pos_y], this.d3)\n                        position = {\n                            ...position,\n                            x: x,\n                            y: y,\n                        }\n\n                        positions[position._id] = position\n\n                    })\n\n                    // Apply the event translation to selectedPosition if there is one\n                    let updatedSelectedPosition = null\n                    if (!!this.props.selectedPosition) {\n                        [x, y] = convertRealToD3([this.props.selectedPosition.pos_x, this.props.selectedPosition.pos_y], this.d3)\n                        updatedSelectedPosition = this.props.selectedPosition\n                        updatedSelectedPosition = {\n                            ...updatedSelectedPosition,\n                            x: x,\n                            y: y,\n                        }\n                    }\n\n                    // Apple the event translation to Children Copy if need be\n                    let updatedChildrenPositions = null\n                    if (!!this.props.selectedStationChildrenCopy) {\n                        updatedChildrenPositions = {}\n                        Object.values(this.props.selectedStationChildrenCopy).forEach(position => {\n                            [x, y] = convertRealToD3([position.pos_x, position.pos_y], this.d3)\n\n                            position = {\n                                ...position,\n                                x: x,\n                                y: y,\n                            }\n                            updatedChildrenPositions[position._id] = position\n\n                        })\n                    }\n\n                    this.props.dispatchUpdatePositions(positions, updatedSelectedPosition, updatedChildrenPositions, this.d3) // Bulk Update\n\n                    //// Apply the event translation to each mobile device\n                    Object.values(devices).filter(device => device.device_model == 'MiR100').map(device => {\n                        [x, y] = convertRealToD3([device.position.pos_x, device.position.pos_y], this.d3)\n\n                        device.position = {\n                            ...device.position,\n                            x: x,\n                            y: y,\n                        }\n                        devices[device._id] = device\n                    })\n                    this.props.dispatchUpdateDevices(devices, this.d3) // Bulk Update\n\n                    // Once zoomed or dragged, stop initializing locations with transforms, instead now let the listener handle that. Otherwise zoom gets jumpy\n                    if (this.initialRender) { this.initialRender = false }\n                })\n                .on('zoomend', () => {\n\n                })\n                // Offset so that first pan and zoom does not jump back to [0,0] coords\n                .scale(scale)\n                .translate(translate),\n        );\n    }\n\n    /**\n     * Overwrite the listener we described above /\\ to be null\n     * (basically dont listen to drag/zoom events)\n     */\n    unbindZoomListener = () => {\n        const { rd3tSvgClassName } = this\n\n        const svg = d3.select(`.${rd3tSvgClassName}`);\n        svg.call(d3.behavior.zoom().on('zoom', null))\n    }\n\n    onDisableDrag = () => {\n        if (this.draggable) {\n            this.draggable = false\n            this.unbindZoomListener()\n        }\n    }\n\n    onEnableDrag = () => {\n        if (!this.draggable) {\n            this.draggable = true\n            this.bindZoomListener()\n        }\n    }\n\n    onWidgetDisableDrag = () => {\n        if (this.widgetDraggable) {\n            this.widgetDraggable = false\n            this.unbindZoomListener()\n        }\n    }\n\n    onWidgetEnableDrag = () => {\n        if (!this.widgetDraggable) {\n            this.widgetDraggable = true\n            this.bindZoomListener()\n        }\n    }\n\n    /**\n     * x: 0,\n     * y: 0property, instead of going\n     * through D3's scaling mechanism, which would have picked up both properties.\n     *\n     * @return {object} {translate: {x: number, y: number}, zoom: number}\n     */\n    calculateD3Geometry = () => {\n        let { locations } = this.props\n        let { resolution } = this.props.currentMap\n\n        let scale\n        if (this.props.zoom > this.props.scaleExtent.max) {\n            scale = this.props.scaleExtent.max;\n        } else if (this.props.zoom < this.props.scaleExtent.min) {\n            scale = this.props.scaleExtent.min;\n        } else {\n            scale = this.props.zoom;\n        }\n\n        let translate\n        if (!!this.mapContainer && !!this.mapImage) {\n\n            const cHeight = this.mapContainer.getBoundingClientRect().height\n            const cWidth = this.mapContainer.getBoundingClientRect().width\n\n            const iHeight = this.mapImage.getBoundingClientRect().height\n            const iWidth = this.mapImage.getBoundingClientRect().width\n\n            const iNatHeight = this.naturalImageDimensions.height\n            const iNatWidth = this.naturalImageDimensions.width\n\n\n\n            // Apply translations to map.\n            // The map is translated by half the container dims, and then back by\n            // half the image dims. This leaves it in the middle of the screen\n            translate = {\n                x: this.props.translate.x + cWidth / 2 - iWidth / 2,\n                y: this.props.translate.y + cHeight / 2 - iHeight / 2,\n            }\n\n            // Save necessary variables\n            this.d3 = {\n                translate: [translate.x, translate.y],\n                scale: scale,\n                mapResolution: resolution,\n                // imgResolution: iNatWidth / iWidth,\n                imgResolution: 1,\n                actualDims: {\n                    height: iHeight,\n                    width: iWidth\n                },\n                naturalDims: {\n                    height: iNatHeight,\n                    width: iNatWidth\n                },\n            }\n\n\n            let x, y\n            let { stations, positions, devices } = this.props\n            //// Apply the event translation to each station\n            Object.values(stations).forEach(station => {\n                [x, y] = convertRealToD3([station.pos_x, station.pos_y], this.d3)\n                station = {\n                    ...station,\n                    x: x,\n                    y: y,\n                }\n                stations[station._id] = station\n            })\n            this.props.dispatchUpdateStations(stations) // Bulk Update\n\n            //// Apply the event translation to each position\n            Object.values(positions).forEach(position => {\n                [x, y] = convertRealToD3([position.pos_x, position.pos_y], this.d3)\n                position = {\n                    ...position,\n                    x: x,\n                    y: y,\n                }\n                // TODO: Delete\n                // Object.assign(position, { x, y })\n                positions[position._id] = position\n            })\n            this.props.dispatchUpdatePositions(positions) // Bulk Update\n\n            //// Apply the event translation to each mobile device\n            Object.values(devices).filter(device => device.device_model == 'MiR100').map(device => {\n                [x, y] = convertRealToD3([device.position.pos_x, device.position.pos_y], this.d3)\n                device.position = {\n                    ...device.position,\n                    x: x,\n                    y: y,\n                }\n                devices[device._id] = device\n            })\n            this.props.dispatchUpdateDevices(devices, this.d3) // Bulk Update\n\n        } else {\n            translate = this.props.translate\n        }\n\n        // Set the initial map translation\n        const map = d3.selectAll(`.${this.rd3tMapClassName}`)\n        map.attr('transform', `translate(${translate.x},${translate.y}) scale(${scale})`)\n\n    }\n\n    // This handles the event when an onContextMenu is triggered in the svg containing the map\n    // It prevents the defaul menu for appearing and sets the state for the custom menu to appear\n    // Passes along x and y for the cusotm menu\n    // Go to right_click_menu to follow how the click logic works\n    handleRightClickMenu = (e) => {\n        e.preventDefault()\n        this.setState({ showRightClickMenu: { x: e.clientX, y: e.clientY } });\n    }\n\n\n    render() {\n        let { stations, positions, devices, selectedStation, selectedPosition, selectedStationChildrenCopy } = this.props\n        if (this.props.currentMap == null) { return (<></>) }\n        const { translate, scale } = this.d3;\n\n        return (\n            <div style={{ width: '100%', height: '100%' }} onMouseMove={this.dragNewEntity} onMouseUp={this.validateNewLocation} >\n                <styled.MapContainer ref={mc => (this.mapContainer = mc)} style={{ pointerEvents: this.widgetDraggable ? 'default' : 'none' }}>\n\n                    {/* Commented out for now */}\n                    {/* <Zones/> */}\n\n                    {/* Right menu */}\n                    {Object.keys(this.state.showRightClickMenu).length > 0 &&\n                        <RightClickMenu coords={this.state.showRightClickMenu} buttonClicked={() => { this.setState({ showRightClickMenu: {} }) }} d3={this.d3} />\n                    }\n\n                    {/* SVG element is the container for the whole view. This allows the view to be moved as one */}\n                    <svg\n                        className={this.rd3tSvgClassName}\n                        width=\"100%\"\n                        height=\"100%\"\n\n                        // onClick only registers on left click so this works as a way to hide the menu\n                        onClick={() => { this.setState({ showRightClickMenu: {} }) }}\n                        onContextMenu={(e) => { this.handleRightClickMenu(e) }}\n\n                        // These 2 mouse events are used to remove the issue when moving the mouse too fast over a location causing a widget to load, but not fast enough for the onmouselave to execute\n                        onMouseEnter={() => {\n                            if (!!this.props.widgetLoaded) {\n                                // If there is a selected location and its not the right click menu location then hide\n                                // should always show widget if its the right click menu\n                                if ((!!this.props.selectedStation || (!!this.props.selectedPosition && this.props.selectedPosition.schema !== 'temporary_position')) && (!this.props.editingStation || !this.props.editingPosition)) {\n                                    this.props.dispatchHoverStationInfo(null)\n                                    this.props.dispatchSetSelectedStation(null)\n                                    this.props.dispatchSetSelectedPosition(null)\n                                }\n                            }\n                        }}\n                        onMouseOver={() => {\n                            if (!!this.props.widgetLoaded) {\n                                // If there is a selected location and its not the right click menu location then hide\n                                // should always show widget if its the right click menu\n                                if ((!!this.props.selectedStation || (!!this.props.selectedPosition && this.props.selectedPosition.schema !== 'temporary_position'))) {\n                                    this.props.dispatchHoverStationInfo(null)\n\n                                    if (!this.props.editingStation || !this.props.editingPosition) {\n                                        this.props.dispatchSetSelectedStation(null)\n                                        this.props.dispatchSetSelectedPosition(null)\n                                    }\n                                }\n                            }\n                        }}\n\n                    > {/* Clears any unfinished drag events (ex: moving location) */}\n                        <styled.MapGroup\n                            className={this.rd3tMapClassName}\n\n                        >\n                            {/* Foreign object allows an image to be put in the SVG container */}\n                            <foreignObject width='200%' height='200%' >\n                                {!!this.props.currentMap &&\n                                    <styled.MapImage ref={mi => (this.mapImage = mi)}\n                                        tall={!!this.mapContainer && // Fixes the map sizing - cutoff issue\n                                            this.mapContainer.getBoundingClientRect().height / this.naturalImageDimensions.height\n                                            >\n                                            this.mapContainer.getBoundingClientRect().width / this.naturalImageDimensions.width}\n\n                                        src={'data:image/png;base64, ' + this.props.currentMap.map}\n                                        onLoad={() => {\n\n                                            this.naturalImageDimensions = {\n                                                height: this.mapImage.naturalHeight,\n                                                width: this.mapImage.naturalWidth\n                                            }\n                                            // Geometry changes once the image finishes loading, so the geometry needs to be reclaculated\n                                            // and the zoom listener needs to be re-bound to the new translations\n                                            this.calculateD3Geometry()\n                                            this.setState({\n                                                resolution: this.props.currentMap.resolution\n                                            }, () => this.bindZoomListener())\n                                        }}\n                                    >\n                                    </styled.MapImage>\n                                }\n                            </foreignObject>\n                        </styled.MapGroup>\n\n                        {!!this.props.selectedTask &&\n                            <TaskPaths d3={this.d3} />\n                        }\n\n                        {!!this.props.selectedProcess &&\n                            <ProcessPaths d3={this.d3} />\n                        }\n\n                        <defs>\n                            {/* a transparent glow that takes on the colour of the object it's applied to */}\n                            <filter id=\"glow\">\n                                <feGaussianBlur stdDeviation=\"1\" result=\"coloredBlur\" />\n                                <feMerge>\n                                    <feMergeNode in=\"coloredBlur\" />\n                                    <feMergeNode in=\"SourceGraphic\" />\n                                </feMerge>\n                            </filter>\n                        </defs>\n\n                        {!!this.state.resolution && !!this.mapImage &&\n                            <>\n                                <>{\n                                    //// Render Locations\n                                    Object.values(stations)\n                                        .filter(station => (station.map_id === this.props.currentMap._id))\n                                        .map((station, ind) =>\n\n                                            <Station\n                                                key={`loc-${ind}`}\n                                                // If there is a selected station, then render the selected station vs station in redux\n                                                // Selected station could contain local edits that are not on the backend (naked redux) yet\n                                                station={(!!selectedStation && station._id === selectedStation._id) ? selectedStation : station}\n                                                // station={station}\n                                                rd3tClassName={`${this.rd3tStationClassName}_${ind}`}\n                                                d3={this.d3}\n                                                handleEnableDrag={this.onEnableDrag}\n                                                handleDisableDrag={this.onDisableDrag}\n                                            />\n                                        )\n                                }</>\n\n                                <>{\n                                    //// Render children positions if appropriate\n                                    Object.values(positions)\n                                        .filter(position => (position.map_id === this.props.currentMap._id))\n                                        .map((position, ind) =>\n                                            <Position\n                                                key={`pos-${ind}`}\n                                                position={\n                                                    (!!selectedPosition && position._id === selectedPosition._id) ?\n                                                        // If there is a selected station, then render the selected station vs station in redux\n                                                        // Selected station could contain local edits that are not on the backend (naked redux) yet\n                                                        selectedPosition\n                                                        :\n                                                        // If the positions parent is currently being edited\n                                                        (!!selectedStationChildrenCopy && position._id in selectedStationChildrenCopy) ?\n                                                            selectedStationChildrenCopy[position._id]\n                                                            :\n                                                            position\n                                                }\n                                                rd3tClassName={`${this.rd3tPosClassName}_${ind}`}\n                                                d3={this.d3}\n                                                handleEnableDrag={this.onEnableDrag}\n                                                handleDisableDrag={this.onDisableDrag}\n                                            />\n\n                                        )\n                                }</>\n\n                                <>{\n                                    //// Render mobile devices\n                                    devices === undefined ?\n                                        <></>\n                                        :\n                                        Object.values(devices).filter(device => device.device_model == 'MiR100').map((device, ind) =>\n                                            <MiR100 key={device._id}\n                                                device={device}\n                                                d3={this.d3}\n                                            />\n                                        )\n                                }</>\n                            </>\n                        }\n                    </svg>\n\n                    {(!!this.props.selectedProcess || !!this.props.selectedTask) &&\n                        <TaskStatistics d3={this.d3} />\n                    }\n\n                    {/* Widgets are here when not in mobile mode. If mobile mode, then they are in App.js.\n                    The reasoning is that the map unmounts when in a widget while in mobile mode (for performance reasons). */}\n                    {this.props.hoveringInfo !== null && !this.mobileMode &&\n                        <Widgets />\n                    }\n\n\n                </styled.MapContainer>\n\n            </div >\n        )\n    }\n}\n\nMapView.defaultProps = {\n    scaleExtent: { min: 0, max: 6 },\n    zoomable: true,\n    zoom: 1,\n    translate: { x: 0, y: 0 },\n\n}\n\nconst mapStateToProps = function (state) {\n    return {\n        maps: state.mapReducer.maps,\n        currentMapId: state.localReducer.localSettings.currentMapId,\n        currentMap: state.mapReducer.currentMap,\n\n        devices: state.devicesReducer.devices,\n        positions: state.positionsReducer.positions,\n        stations: state.stationsReducer.stations,\n        tasks: state.tasksReducer.tasks,\n\n        selectedStation: state.stationsReducer.selectedStation,\n        selectedStationChildrenCopy: state.positionsReducer.selectedStationChildrenCopy,\n        selectedPosition: state.positionsReducer.selectedPosition,\n        editingStation: state.stationsReducer.editingStation,\n        editingPosition: state.positionsReducer.editingPosition,\n\n        selectedTask: state.tasksReducer.selectedTask,\n        selectedProcess: state.processesReducer.selectedProcess,\n        fixingProcess: state.processesReducer.fixingProcess,\n\n        hoveringInfo: state.widgetReducer.hoverStationInfo,\n        widgetLoaded: state.widgetReducer.widgetLoaded,\n\n    };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        dispatchGetMap: (map_id) => dispatch(getMap(map_id)),\n        dispatchSetCurrentMap: (map) => dispatch(setCurrentMap(map)),\n\n        dispatchUpdateStations: (stations, selectedStation, d3) => dispatch(updateStations(stations, selectedStation, d3)),\n        dispatchUpdatePositions: (positions, selectedPosition, childrenPositions, d3) => dispatch(updatePositions(positions, selectedPosition, childrenPositions, d3)),\n        dispatchUpdateDevices: (devices, d3) => dispatch(deviceActions.updateDevices(devices, d3)),\n\n        dispatchPostPosition: (position) => dispatch(postPosition(position)),\n        dispatchSetStationAttributes: (id, attr) => dispatch(setStationAttributes(id, attr)),\n        dispatchSetPositionAttributes: (id, attr) => dispatch(setPositionAttributes(id, attr)),\n        dispatchSetSelectedStation: (station) => dispatch(setSelectedStation(station)),\n        dispatchSetSelectedPosition: (position) => dispatch(setSelectedPosition(position)),\n\n        dispatchHoverStationInfo: (info) => dispatch(hoverStationInfo(info)),\n        dispatchWidgetLoaded: (bool) => dispatch(widgetLoaded(bool)),\n\n\n    };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(MapView))\n","import React, { useState, useMemo, useRef, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useParams, useHistory } from 'react-router-dom'\n\n// Import Components\nimport HILModals from '../../components/hil_modals/hil_modals'\nimport HILSuccess from '../../components/hil_modals/hil_modals_content/hil_success'\n\nconst HILModal = () => {\n\n    const params = useParams()\n    const dispatch = useDispatch()\n\n    // Adds HIL timer to taskQueueReducer so it can be used in other areas such as status_header\n    const onSetHilTimers = (timers) => dispatch({ type: 'HIL_TIMERS', payload: timers })\n    const onSetActiveHilDashboards = (active) => dispatch({ type: 'ACTIVE_HIL_DASHBOARDS', payload: active })\n\n    let status = useSelector(state => { return state.statusReducer.status })\n    const dashboards = useSelector(state => { return state.dashboardsReducer.dashboards })\n    const taskQueue = useSelector(state => state.taskQueueReducer.taskQueue)\n    const taskQueueItemClicked = useSelector(state => state.taskQueueReducer.taskQueueItemClicked)\n    const stations = useSelector(state => state.stationsReducer.stations)\n    const hilTimers = useSelector(state => state.taskQueueReducer.hilTimers)\n    const tasks = useSelector(state => state.tasksReducer.tasks)\n    const hilResponse = useSelector(state => state.taskQueueReducer.hilResponse)\n    const activeHilDashboards = useSelector(state => state.taskQueueReducer.activeHilDashboards)\n    const devices = useSelector(state => state.devicesReducer.devices)\n    let selectedTask = useSelector(state => state.tasksReducer.selectedTask)\n    const localHumanTask = useSelector(state => state.taskQueueReducer.localHumanTask)\n    const [statusTimerIntervals, setStatusTimerIntervals] = useState({})\n\n    const dashboardID = params.dashboardID\n    const stationID = params.stationID\n\n    const deviceDashboard = !!devices ? !!devices[stationID] : false\n    /**\n     * Handles any task that should be displaying a HIL\n     * useMemo for performance reasons, should only rerender if taskQueue changes and dashbaordID params\n     */\n    const handleHilsInTaskQueue = useMemo(() => {\n\n        // Handles if a task queue item was clicked and displays that item\n        if (!!taskQueueItemClicked && taskQueue[taskQueueItemClicked] && !!taskQueue[taskQueueItemClicked].hil_station_id) {\n\n            const item = taskQueue[taskQueueItemClicked]\n            const hilType = tasks[item.task_id].type\n\n            return <HILModals hilMessage={item.hil_message} hilType={hilType} taskQuantity={item.quantity} taskQueueID={taskQueueItemClicked} item={item} />\n        }\n\n        else {\n            if (!!taskQueueItemClicked && !!taskQueue[taskQueueItemClicked]) {\n\n                const item = taskQueue[taskQueueItemClicked]\n                const type = item.device_type\n                const hilType = tasks[item.task_id].type\n\n                // Sets the HIL Message, the reason why it would undefined is that its a human load task\n                // Since a human load task needs to immediatly show, its immediatly put into the task Q vs telling the backend to put it into the task Q\n                // since it doesnt come from the backend, there's no hil message in the task Q Item\n                let hilMessage = item.hil_message\n                if (!hilMessage) {\n                    hilMessage = tasks[item.task_id].load.instructions\n                }\n\n                if (type === 'human') {\n\n                    return <HILModals hilMessage={hilMessage} hilType={hilType} taskQuantity={item.quantity} taskQueueID={taskQueueItemClicked} item={item} />\n                }\n            }\n        }\n\n        // Used to hide the HIL if success was clicked. (See HIL_Modals)\n        if (hilResponse === 'load') {\n            return <HILSuccess />\n        }\n        if (hilResponse === 'unload') return \n\n        return Object.values(taskQueue).map((item) => {\n\n            const id = item._id\n\n            // If the task queue item has a HIL and it's corresponding dashboard id is not in the activeHILDasbaords list then display HIL.\n            // Dashboards can only have 1 HIL at a time, if the task queue has 2 HILS for the same dashboards, then only read the\n            // most recent in the list\n            //\n            // Do not display HIL if the tasks device type is human, if it's a human, and unload button will appear on the dashboard\n            if (!!item.hil_station_id && !!tasks[item.task_id] && item.device_type !== 'human') {\n\n                // Loops through all ascociated dashboards at that location\n                stations[item.hil_station_id].dashboards.forEach((dashboard) => {\n\n                    // if the list of active hil dashboards does not include the dashboard then add\n                    if (!Object.keys(activeHilDashboards).includes(dashboard)) {\n                        // activeHilDashboards.push(dashboard)\n                        onSetActiveHilDashboards({\n                            ...activeHilDashboards,\n                            [dashboard]: id,\n                        })\n                    }\n\n                })\n\n                // If active hils matches the dashboard selected (found in params) then display hil\n                // if (dashboardID === item.hil_station_id && !dashboards[dashboardID].unsubcribedHILS.includes(item.hil.taskID)) {\n                if (Object.keys(activeHilDashboards).includes(dashboardID)) {\n                    const hilType = tasks[item.task_id].type\n\n                    return <HILModals hilMessage={item.hil_message} hilType={hilType} taskQuantity={item.quantity} taskQueueID={id} item={item} key={id} />\n                }\n\n                // If a device dashboard, then show all associated HILs\n                else if (deviceDashboard) {\n                    const hilType = tasks[item.task_id].type\n                    return <HILModals hilMessage={item.hil_message} hilType={hilType} taskQuantity={item.quantity} taskQueueID={id} item={item} />\n                }\n                else {\n                    return null\n                }\n            }\n\n            // Else if the task q item has a dashboardID and the dashboardID matches current dashboard, then show that dashboard\n            // The reason this happens is that it's a human task and the person hit a dashboard button (see dashboard_screen).\n            // The HIL modal needs to immediatly show because the backend will be too slow to respond to show that dashboard after button click\n            else if (!!item.dashboard && item.dashboard === dashboardID && localHumanTask === item._id) {\n\n                let hilMessage = item.hil_message\n                if (!hilMessage) {\n                    hilMessage = tasks[item.task_id].load.instructions\n                }\n                if (item.hil_response !== false) {\n                    return <HILModals hilMessage={hilMessage} hilType={'push'} taskQuantity={item.quantity} taskQueueID={id} item={item} />\n                }\n\n\n            }\n\n        })\n\n    }, [taskQueue, dashboardID, taskQueueItemClicked, hilResponse, localHumanTask])\n\n\n    /**\n     * Handles HIL timers and adds them to Redux\n     *\n     * Logic in this function is a little confusing at first.\n     *\n     * What this does is map through each item in the task Q and give that Item an interval based on the times sent from the back end\n     * But, if this item already has an interval, don't add a new one to it.\n     * If the interval is running, but the Task Q item does not have a station ID, then a HIL should not be displaying so remove the current interval\n     *\n     * After the first maping loop there's an if statement to make sure that the interval's task Q item is still in the task Q, if it's not, then remove the interval\n     */\n    const handleHILTimers = useMemo(() => {\n\n        Object.keys(taskQueue).map((id, ind) => {\n\n            const item = taskQueue[id]\n\n            // If the item in task queue has an ascociated station_id, a hil must be displaying\n            if (!!item.hil_station_id) {\n\n                // If the state of timers running includes the task queue id, that means the timer is still running\n                if (!!statusTimerIntervals[id]) {\n                }\n\n                // If the state doesnt include the task queue id, then the timer hasn't started yet on the front end\n                else if (!statusTimerIntervals[id]) {\n\n                    // Add the timer to the state, so multiple timers are not started\n                    setStatusTimerIntervals({\n                        ...statusTimerIntervals,\n                        [id]: true,\n                    })\n\n                    let startTime = item.hil_start_time\n                    let timer = item.hil_timeout\n\n                    //Get the time since Epoch\n                    const frontEndTime = Date.now() / 1000\n\n                    //Find the difference between the time of the front end vs the backend and set timer\n                    const biasedTime = frontEndTime - startTime\n                    let biasedTimer = timer - biasedTime\n\n                    //Timer interval in seconds\n                    const timerInterval = 1\n\n                    //Set the timer in state\n                    setStatusTimerIntervals({\n                        ...statusTimerIntervals,\n                        [id]: setInterval(() => {\n\n                            // Can change the timer interval\n                            biasedTimer = biasedTimer - timerInterval\n\n                            // Add the timer to redux\n                            onSetHilTimers({\n                                ...hilTimers,\n                                [item._id]: biasedTimer.toFixed(0),\n                            })\n                            //If the timer goes to Zero then stop the timer\n                            if (biasedTimer <= 0) {\n                                onSetHilTimers({\n                                    ...hilTimers,\n                                    [item._id]: 0,\n                                })\n\n                                // Update redux\n                                delete hilTimers[item._id]\n                                onSetHilTimers({\n                                    ...hilTimers,\n                                })\n\n                                //  Delete the timer in the state\n                                if (!!statusTimerIntervals[id]) {\n                                    clearInterval(statusTimerIntervals[id])\n                                    delete statusTimerIntervals[id]\n                                    setStatusTimerIntervals({\n                                        ...statusTimerIntervals,\n                                    })\n                                }\n\n                            }\n\n                        }, timerInterval * 1000)\n                    })\n                }\n\n            }\n\n            // If the task queue item does not have a station id but has a timer running, that means the timer should stop\n            else if (!item.hil_station_id && !!statusTimerIntervals[id]) {\n                if (!!statusTimerIntervals[id]) {\n\n                    // Deletes the dashboard id from active list for the hil that has been responded too\n                    onSetActiveHilDashboards(delete (activeHilDashboards[item.hil_station_id]))\n\n                    // Clear the interval which is stored in state and delete that ID from state\n                    clearInterval(statusTimerIntervals[id])\n                    delete statusTimerIntervals[id]\n                    setStatusTimerIntervals({\n                        ...statusTimerIntervals,\n                    })\n\n                    // Update redux\n                    delete hilTimers[item._id]\n                    onSetHilTimers({\n                        ...hilTimers,\n                    })\n                }\n\n            }\n\n        })\n\n        // If the length of intervals is greater then 0 check to make sure the ascoiated task q item is still in task q\n        if (Object.keys(statusTimerIntervals).length > 0) {\n\n            Object.keys(statusTimerIntervals).map((id, ind) => {\n\n                // If Item is not in task q, end the interval\n                if (!taskQueue[id]) {\n                    clearInterval(statusTimerIntervals[id])\n                    delete statusTimerIntervals[id]\n                    setStatusTimerIntervals({\n                        ...statusTimerIntervals,\n                    })\n                }\n            })\n        }\n\n    }, [taskQueue, hilTimers])\n\n    const handleActiveHilDashboardRemoved = () => {\n\n        let hilRemoved = true\n\n        Object.keys(taskQueue).map((id, ind) => {\n            const item = taskQueue[id]\n\n        })\n\n    }\n\n    return (\n        <>\n            {/* <HILModals status={status.hil}/> */}\n            {handleHilsInTaskQueue}\n            {handleHILTimers}\n        </>\n    )\n}\n\nexport default HILModal\n","import styled from 'styled-components'\n\nexport const Container = styled.div`\n    height: 40%;\n    width: 35%;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%,-60%);\n    border-radius: 10px;\n`\n\nexport const LogoContainer = styled.div`\n    width: 100%;\n    height: auto;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    position: relative;\n    margin-bottom: 5%;\n    margin-top: 5%;\n`\n\nexport const LogoIcon = styled.i`\n    font-size: 10rem;\n    margin-top: -.5rem;\n    margin-right: .1rem;\n    color: ${props => props.theme.fg.secondary};\n`\n\nexport const LogoSubtitle = styled.h2`\n    color: ${props => props.theme.bg.senary};\n    font-family: 'Montserrat';\n    font-size: 2rem;\n    font-weight: 600;\n    margin: 0;\n    margin-bottom: -10rem;\n    padding: 0;\n`;\n\nexport const LogoWelcome = styled.h1`\n    color: ${props => props.theme.bg.senary};\n    font-family: 'Montserrat';\n    font-size: 2rem;\n    font-weight: 600;\n    margin: 0;\n    padding: 0;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    height: auto;\n    display: flex;\n    position: relative;\n    margin-bottom: 2%;\n    margin-top: 5%;\n`;\n\nexport const SignInUpContainer = styled.div`\n    \n`\n\nexport const CheckBoxWrapper = styled.div`\n    position: relative;\n    display: grid;\n    align-items: center;\n    justify-content: center;\n`;\n\nexport const CheckBoxLabel = styled.label`\n    top: 0;\n    left: 0;\n    width: 42px;\n    height: 26px;\n    border-radius: 15px;\n    background: #bebebe;\n    cursor: pointer;\n    &::after {\n        content: \"\";\n        display: block;\n        border-radius: 50%;\n        width: 18px;\n        height: 18px;\n        margin: 3px;\n        background: #ffffff;\n        box-shadow: 1px 3px 3px 1px rgba(0, 0, 0, 0.2);\n        transition: 0.2s;\n    }\n`;\nexport const CheckBox = styled.input`\n    opacity: 0;\n    z-index: 1;\n    border-radius: 15px;\n    width: 42px;\n    height: 26px;\n    &:checked + ${CheckBoxLabel} {\n        background: #FF4B4B;\n        &::after {\n        content: \"\";\n        display: block;\n        border-radius: 50%;\n        width: 18px;\n        height: 18px;\n        margin-left: 21px;\n        transition: 0.2s;\n        }\n    }\n`;","import styled from 'styled-components'\n\nexport const Container = styled.div`\ndisplay:flex;\nflex-direction:column;\ngrid-template-columns: 1fr;\ngrid-gap: 0.1rem;\nalign-content: center;\n`\n\n\nexport const Input = styled.input`\n    width: 40rem;\n    border-radius: 15px;\n    font-size: 1.3rem;\n    font-weight: 400;\n    padding: 1rem;\n    margin: 1rem;\n    align-self: center;\n`\n\nexport const Button = styled.button`\n    cursor: 'pointer';\n    width: 10rem;\n    border-radius: 1rem;\n    display: flex;\n    background-color: #FF4B4B;\n    color: white;\n    border-color: white;\n    align-self: center;\n    justify-content: center;\n`","import React, { useState, useEffect } from 'react'\n\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { CognitoUserPool, AuthenticationDetails, CognitoUser } from 'amazon-cognito-identity-js'\n\nimport { Formik, Form } from 'formik'\n\n// Import Utils\nimport { signInSchema, signUpSchema } from '../../methods/utils/form_schemas'\n\n// Import Components\n// import TextField from '../basic/form/text_field/text_field'\nimport Textbox from '../basic/textbox/textbox'\n\n// Import actions\nimport { postRefreshToken } from '../../redux/actions/authentication_actions'\n\nimport * as styled from './sign_in_up_page.style'\n\n// Import actions\nimport { postLocalSettings } from '../../redux/actions/local_actions'\nimport { getLocalSettings } from '../../redux/actions/local_actions'\n\n\n// Import API DELETE THIS ONCE FINISHED\n// import { getRefreshToken } from '../../api/authentication_api'\n\n/**\n * This page handles both sign in and sign up for RMStudio\n * @param {signIn} props\n */\nconst SignInUpPage = (props) => {\n\n    // signIn prop is passed from authentication container to tell this page to show sign in or sign up components\n    const {\n        signIn\n    } = props\n\n    const dispatch = useDispatch()\n    const dispatchPostLocalSettings = (settings) => dispatch(postLocalSettings(settings))\n    const localReducer = useSelector(state => state.localReducer.localSettings)\n\n    // refresh token\n    // const onRefreshToken = (token, expiration) => dispatch(postRefreshToken(token, expiration))\n    // const refreshToken = useSelector(state => state.authenticationReducer.refreshToken)\n\n    // const onGetLocalSettings = () => dispatch(getLocalSettings())\n\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n\n    // useEffect( () => {\n    //     async function checkLocalSettings() {\n    //         // Get local storage\n    //         const localSettings = await onGetLocalSettings()\n\n    //         // See if authenticated is not null\n    //         if (localSettings.authenticated){\n    //             // If so, assume logged in\n    //             setLoggedIn(true)\n    //         }\n    //         // Else, require login\n    //       }\n\n    //     checkLocalSettings()\n            \n    // }, [])\n\n    const handleSubmit = () => {\n\n        // User pool data for AWS Cognito\n        const poolData = {\n            UserPoolId: 'us-east-2_YFnCIb6qJ',\n            ClientId: '5bkenhii8f4mqv36k0trq6hgc7',\n        }\n\n        const userPool = new CognitoUserPool(poolData)\n\n        console.log(email, password, confirmPassword)\n        // If the request is a sign in then run these functions\n        if (signIn) {\n\n            // This is setting up the header for the sign in request\n            const authenticationData = {\n                Username: email,\n                Password: password,\n            };\n\n            const authenticationDetails = new AuthenticationDetails(authenticationData)\n\n            const userData = {\n                Username: email,\n                Pool: userPool,\n            }\n\n            const cognitoUser = new CognitoUser(userData);\n\n            let serverIP = '18.223.113.55'\n\n            cognitoUser.authenticateUser(authenticationDetails, {\n\n                onSuccess: function (result) {\n                    dispatchPostLocalSettings({\n                        ...localReducer,\n                        authenticated: result.accessToken.payload.username,\n                        non_local_api_ip: serverIP,\n                        non_local_api: true,\n                        refreshToken: result.getRefreshToken().getToken()\n                    })\n\n                    // onRefreshToken(result.getRefreshToken().getToken())\n\n                    console.log('QQQQ Success', typeof(result), result.accessToken.payload, localReducer)\n\n                },\n\n                onFailure: function (err) {\n                    console.log('QQQQ Error', err)\n                },\n\n            });\n        }else{\n            if(password === confirmPassword){\n                userPool.signUp(email, password, [], null, (err, data) => {\n                    if (err){\n                        console.log('QQQQ Error', err)\n                        alert(err.message)\n                    }else {\n                        console.log('QQQQ Success', data)\n\n                    }\n                });\n            }else{\n                alert('Passwords must match!')\n            }\n\n            \n        }\n    }\n\n\n    return (\n        <Formik\n            initialValues={{\n                email: email,\n                password: password,\n                confirmPassword: password,\n            }}\n            initialTouched={{\n                email: true,\n                password: true,\n                confirmPassword: true,\n            }}\n            validateOnChange={true}\n            validateOnBlur={true}\n\n            // Chooses what schema to use based on whether it's a sign in or sign up\n            // TODO: The schemas are not 100% working as of 9/14/2020. Need to figure out regex for passwords\n            validationSchema={signIn ? signInSchema : signUpSchema}\n\n            onSubmit={async (values, { setSubmitting }) => {\n                console.log('QQQQ Submiting', values)\n                setSubmitting(true)\n\n                await handleSubmit(values)\n\n                setSubmitting(false)\n\n            }}\n\n        >\n            {(formikProps) => {\n\n                return (\n                    <Form>\n                        <styled.Container>\n                        <styled.Input\n                            name={\"email\"}\n                            // textStyle={{ fontWeight: 'Bold' }}\n                            placeholder='Enter Email'\n                            type='text'\n                            InputComponent={Textbox}\n                            onChange={e => setEmail(e.target.value)}\n                        />\n\n                        <styled.Input\n                            name={\"password\"}\n                            // textStyle={{ fontWeight: 'Bold' }}\n                            placeholder='Enter Password'\n                            type='password'\n                            InputComponent={Textbox}\n                            onChange={e => setPassword(e.target.value)}\n                        />\n\n                        {/* If sign in hasn't been selected show a confirm password for sign up */}\n                        {!signIn &&\n                            <styled.Input\n                                name={\"confirmPassword\"}\n                                // disabled={dashboard.name === 'Robot Screen'}\n                                // textStyle={{ fontWeight: 'Bold' }}\n                                placeholder='Enter Password'\n                                type='password'\n                                InputComponent={Textbox}\n                                onChange={e => setConfirmPassword(e.target.value)}\n                            />\n\n\n                        }\n\n                        <styled.Button onClick={handleSubmit} type=\"button\">{signIn ? 'Sign In' : 'Sign Up'}</styled.Button>\n\n                        </styled.Container>\n                    </Form>\n                )\n            }}\n\n        </Formik>\n    )\n}\n\nexport default SignInUpPage\n\n// import React, { useState, useEffect } from 'react'\n\n// import { useDispatch, useSelector } from 'react-redux'\n\n// import { CognitoUserPool, AuthenticationDetails, CognitoUser } from 'amazon-cognito-identity-js'\n// // Import styles\n// import * as styled from './sign_in_up_page.style'\n\n// // Import actions\n// import { postLocalSettings } from '../../redux/actions/local_actions'\n// import { getLocalSettings } from '../../redux/actions/local_actions'\n\n// /**\n//  * This page handles both sign in and sign up for RMStudio\n//  * @param {signIn} props\n//  */\n\n// const SignInUpPage = (props) => {\n\n//     const dispatch = useDispatch()\n//     const dispatchPostLocalSettings = (settings) => dispatch(postLocalSettings(settings))\n//     const localReducer = useSelector(state => state.localReducer.localSettings)\n\n//     const onGetLocalSettings = () => dispatch(getLocalSettings())\n\n//     const [loggedIn, setLoggedIn] = useState(false)\n//     const [email, setEmail] = useState('')\n//     const [password, setPassword] = useState('')\n\n\n//     useEffect( () => {\n//         async function checkLocalSettings() {\n//             // Get local storage\n//             const localSettings = await onGetLocalSettings()\n\n//             // See if authenticated is not null\n//             if (localSettings.authenticated){\n//                 // If so, assume logged in\n//                 setLoggedIn(true)\n//             }\n//             // Else, require login\n//           }\n\n//         checkLocalSettings()\n            \n//     }, [])\n\n//     const signIn = () => {\n\n//         // User pool data for AWS Cognito\n//         const poolData = {\n//             UserPoolId: 'us-east-2_YFnCIb6qJ',\n//             ClientId: '5bkenhii8f4mqv36k0trq6hgc7',\n//         }\n\n//         const userPool = new CognitoUserPool(poolData)\n\n//         // This is setting up the header for the sign in request\n//         const authenticationData = {\n//             Username: email,\n//             Password: password,\n//         };\n\n//         const authenticationDetails = new AuthenticationDetails(authenticationData)\n\n//         const userData = {\n//             Username: email,\n//             Pool: userPool,\n//         }\n\n//         const cognitoUser = new CognitoUser(userData);\n\n//         let serverIP = '18.223.113.55'\n\n//         cognitoUser.authenticateUser(authenticationDetails, {\n\n//             onSuccess: function (result) {\n//                 dispatchPostLocalSettings({\n//                     ...localReducer,\n//                     authenticated: result.accessToken.payload.username,\n//                     non_local_api_ip: serverIP,\n//                     non_local_api: true\n//                 })\n\n//                 console.log('QQQQ Success', typeof(result), result.accessToken.payload, localReducer)\n\n//             },\n\n//             onFailure: function (err) {\n//                 console.log('QQQQ Error', err)\n//             },\n\n//         });\n//     }\n\n//     return (\n//             <styled.Container>\n                \n//                 {!loggedIn && <styled.Input\n//                     name={\"email\"}\n//                     placeholder='Email'\n//                     type='email'\n//                     value={email}\n//                     onChange={e => setEmail(e.target.value)}\n//                 />}\n//                 {!loggedIn && \n//                 <styled.Input\n//                     name={\"password\"}\n//                     placeholder='Password'\n//                     type='password'\n//                     value={password}\n//                     onChange={e => setPassword(e.target.value)}\n//                     />\n//                 }\n\n\n//                 {!loggedIn && <styled.Button onClick={signIn}> Login </styled.Button>}\n\n//             </styled.Container>\n//     )\n// }\n\n// export default SignInUpPage\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { CognitoUser, CognitoUserPool, CognitoRefreshToken, CognitoUserSession } from 'amazon-cognito-identity-js'\n\nimport * as styled from './authentication.style'\n\n// Import components\nimport SignInUpPage from '../../components/sign_in_up_page/sign_in_up_page'\n\nimport { postCognitoUserSession } from '../../redux/actions/authentication_actions'\n\n// import 'cross-fetch/polyfill';\nimport * as AmazonCognitoIdentity from 'amazon-cognito-identity-js';\n\nimport * as AWS from 'aws-sdk/global';\n\n// Import actions\nimport { postLocalSettings } from '../../redux/actions/local_actions'\nimport { getLocalSettings } from '../../redux/actions/local_actions'\n\n/**\n * After the APIs have been loaded in the api_container this container is loaded\n * It checks to see if the user has already signed in based on whether or not a refresh token exists in cookies\n * If there is a token, it uses that to get a new JWT and uses that to make sure the session is valid, no reason to sign in if there's a valid session. \n * If the refresh token is expired, you have to sign in again\n * If there is no token, the user either has to sign in or sign up \n * Authenticated props is used for telling APP.js the user is authenticated\n * \n * TODO: Should show loading when there is a refresh token and its being used to get new JWT credntials\n * TODO: Styling updates\n * TODO: Forgot password\n * TODO: Add HTTPS connection to server which allows for the use of a secure cookie. Increases security a lot \n * @param {authenticated} props \n */\nconst Authentication = (props) => {\n\n    const {\n        authenticated\n    } = props\n\n    const dispatch = useDispatch()\n    const onCognitoUserSession = (JWT) => dispatch(postCognitoUserSession(JWT))\n\n    const refreshToken = useSelector(state => state.authenticationReducer.refreshToken)\n    const cognitoUserSession = useSelector(state => state.authenticationReducer.cognitoUserSession)\n\n    const [signIn, setSignIn] = useState(true)\n\n    const dispatchPostLocalSettings = (settings) => dispatch(postLocalSettings(settings))\n    const localReducer = useSelector(state => state.localReducer.localSettings)\n\n    const handleInitialLoad = () => {\n\n        var poolData = {\n            UserPoolId: 'us-east-2_YFnCIb6qJ',\n            ClientId: '5bkenhii8f4mqv36k0trq6hgc7',\n        };\n\n        var userPool = new AmazonCognitoIdentity.CognitoUserPool(poolData);\n        var cognitoUser = userPool.getCurrentUser();\n        \n        if (cognitoUser != null) {\n            cognitoUser.getSession(function(err, session) {\n                if (err) {\n                    alert(err.message || JSON.stringify(err));\n                    return;\n                }\n                console.log('session validity: ' + session.isValid());\n\n                if(session.isValid()){\n                    dispatchPostLocalSettings({\n                        ...localReducer,\n                        authenticated: true,\n                        non_local_api_ip: '18.223.113.55',\n                        non_local_api: true,\n                    })\n                }\n            });\n        }\n\n        // // check to see if refresh token exists and is still good\n        // if(localReducer.refreshToken !== null){\n        //     // Information assembled for the request\n        //     const poolData = {\n                // UserPoolId: 'us-east-2_YFnCIb6qJ',\n                // ClientId: '5bkenhii8f4mqv36k0trq6hgc7',\n        //     }\n\n        //     const userPool = new CognitoUserPool(poolData)\n\n        //     const userData = {\n        //         Username: 'daniel@roboticmaterials.com',\n        //         Pool: userPool,\n        //     }\n\n        //     const cognitoUser = userPool.getCurrentUser()\n\n        //     // Gets new tokens if access token is not valid\n        //     // .refreshSession requies an instance of the CognitioRefreshToken class not just the refresh token sting\n        //     const token = new CognitoRefreshToken({ RefreshToken: localReducer.refreshToken })\n\n        //     let serverIP = '18.223.113.55'\n            \n        //     cognitoUser.refreshSession(token, (err, session) => {\n        //         console.log('QQQQ', err, session)\n\n        //         // If the session has succesfully been refreshed then verify\n        //         if (!!session) {\n        //             console.log('QQQQ Valid session ', session.isValid())\n        //             const verified = onCognitoUserSession(session)\n\n        //             // If verrified, then no need to sign in or sign up\n        //             if (verified) {\n        //                 dispatchPostLocalSettings({\n        //                     ...localReducer,\n        //                     authenticated: userData.Username,\n        //                     non_local_api_ip: serverIP,\n        //                     non_local_api: true\n        //                 })\n        //             }\n        //         }\n        //     })\n        // }\n\n        return (\n            <styled.Container>\n\n                <styled.LogoContainer>\n                    <styled.LogoIcon className='icon-rmLogo' />\n                    <styled.LogoSubtitle> Studio</styled.LogoSubtitle>\n                </styled.LogoContainer>\n\n                <styled.LogoWelcome> Wecome Back </styled.LogoWelcome>\n\n                <styled.CheckBoxWrapper>\n                    <styled.LogoWelcome> {signIn ? 'Sign In' : 'Sign Up'} </styled.LogoWelcome>\n\n                    <styled.CheckBox id=\"checkbox\" type=\"checkbox\" onClick={() => setSignIn(!signIn)}/>\n                    <styled.CheckBoxLabel htmlFor=\"checkbox\" />\n                    \n                </styled.CheckBoxWrapper>\n\n                <styled.SignInUpContainer>\n\n                    <SignInUpPage signIn={signIn} />\n\n                </styled.SignInUpContainer>\n            </styled.Container>\n        )\n    }\n\n    return (\n        handleInitialLoad()\n    )\n\n}\n\nexport default Authentication","import styled from 'styled-components'\nimport * as stylesh from '../../containers/status_header/status_header.style'\nimport {LightenDarkenColor} from \"../../methods/utils/color_utils\";\n\nexport const Container = styled.div`\n    background: ${props => props.theme.bg.quaternary};\n    display: flex;\n    flex: 1;\n    flex-direction: column;\n    max-height: 100%;\n    \n    // padding-top: 4rem;\n`\n\nexport const Icon = styled.i`\n\tpadding: 0;\n\tmargin: 0;\n\tfont-size: 1.5rem;\n\tposition: absolute;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translate(-50%,-50%);\n`\n\n\nexport const Header = styled.div`\n\tbackground: ${props => props.theme.bg.septenary};\n\twidth: 100%;\n\tpadding: 1rem;\n\tborder-bottom: 1px solid black;\n\talign-items: center;\n\tdisplay: flex;\n`\n\nexport const Title = styled.span`\n    position: absolute;\n    left: 50%;\n    transform: translateX(-50%);\n    \n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz1};\n    font-weight: 500;\n    color: ${props => props.theme.schema[props.schema].solid};\n`\n\nexport const ListScrollContainer = styled.ul`\n    padding: 0;\n    margin: 0;\n    overflow-y: scroll;\n    flex: 1;\n    padding: 1rem;\n    \n`\nexport const ListItem = styled.div`\n    display: flex;\n    align-items: center;\n    width: auto;\n    height: 4rem;\n    background: transparent;\n    margin-bottom: 1rem;\n    \n`\n\nexport const ListItemRect = styled.div`\n    height: 100%;\n    width: 100%;\n    align-items: center;\n    display: flex;\n\n    border-radius: 0.5rem;\n    text-align: center;\n\n    cursor: pointer;\n    user-select: none;\n\n    border: 0.1rem solid white;\n    box-sizing: border-box;\n\n    &:hover {\n        background: ${props => props.theme.bg.octonary};\n    }\n\n`\n\nexport const ListItemTitle = styled.div`\n    height: 2rem;\n    line-height: 2rem;\n    box-sizing: border-box;\n    width: 100%;\n    margin-top: -0.1rem;\n    padding-left: 1rem;\n    padding-right: 1rem;\n\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz4};\n    font-weight: 500;\n    color: ${props => props.theme.bg.octonary};\n    \n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n\n    &:hover {\n        background: ${props => props.theme.schema[props.schema].gradient};\n        -webkit-text-fill-color: transparent;\n        -webkit-background-clip: text;\n        display:block;\n    }\n`\n\nexport const PlayButton = styled(stylesh.PlayButton)`\n    position: absolute;\n    right: 0;\n`\n\nexport const PlayButtonIcon = styled(stylesh.PlayButtonIcon)`\n`\n\nexport const StatusContainer = styled.div`\n    position: absolute;\n    left: 50%;\n    transform: translateX(-50%);\n\n    border-radius: 0rem 0rem 1rem 1rem;\n\n    height: 2.5rem;\n    max-width: 35rem;\n    min-width: 10rem;\n    \n    padding: 0rem 2rem;\n    padding-top: .5rem;\n\n\tbackground: ${props => props.theme.bg.septenary};\n    top: 5rem;\n\n    align-content: center;\n    align-items: center;\n    justify-content: center;\n    text-align: center;\n`","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from \"prop-types\";\n\nimport { locationsSortedAlphabetically } from '../../../methods/utils/locations_utils'\n\nimport * as styled from '../list_view.style'\n\n\nconst LocationList = (props) => {\n\n    const {\n        onMouseEnter,\n        onMouseLeave,\n        onLocationClick\n\n    } = props\n\n    LocationList.propTypes = {\n        onMouseEnter: PropTypes.func,\n        onMouseLeave: PropTypes.func,\n        onLocationClick: PropTypes.func,\n        onClick: PropTypes.func,\n        name: PropTypes.string,\n\n    }\n\n    LocationList.defaultProps = {\n        onMouseEnter: () => { },\n        onLocationClick: () => { },\n        onMouseLeave: () => { },\n        onClick: () => { },\n        name: \"\"\n    }\n\n    const locations = useSelector(state => state.stationsReducer.stations)\n    const devices = useSelector(state => state.devicesReducer.devices)\n\n    const locationsArr = locationsSortedAlphabetically(Object.values(locations))\n    const devicesArr = Object.values(devices)\n\n    const dashboardsArr = [...locationsArr, ...devicesArr]\n\n    return (\n        <styled.ListScrollContainer>\n            {dashboardsArr.length > 0 ?\n                dashboardsArr.map((item, index, arr) => {\n                    const {\n                        name,\n                        device_name,\n                    } = item\n\n                    return (\n                        <styled.ListItem\n                            key={`li-${index}`}\n                        // onMouseEnter={() => onMouseEnter(item)}\n                        // onMouseLeave={() => onMouseLeave(item)}\n                        >\n                            <styled.ListItemRect>\n                                <styled.ListItemTitle schema={\"locations\"} onClick={() => onLocationClick(item)}>{!!name ? name : device_name}</styled.ListItemTitle>\n                            </styled.ListItemRect>\n\n                        </styled.ListItem>\n                    );\n                })\n                :\n                <div></div>\n            }\n\n        </styled.ListScrollContainer>\n    )\n}\n\nexport default LocationList\n","// import external dependencies\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Route, useHistory, useParams } from 'react-router-dom'\n\n// components\nimport DashboardsPage from \"../widgets/widget_pages/dashboards_page/dashboards_page\";\nimport Settings from \"../side_bar/content/settings/settings\";\nimport LocationList from './location_list/location_list'\nimport BounceButton from \"../basic/bounce_button/bounce_button\";\n\n// Import hooks\nimport useWindowSize from '../../hooks/useWindowSize'\n\n// Import actions\nimport { postStatus } from '../../redux/actions/status_actions'\n\n// Import Utils\nimport { deepCopy } from '../../methods/utils/utils'\n\n// styles\nimport * as styled from \"./list_view.style\"\n\n// import logger\nimport log from '../../logger.js';\n\nconst logger = log.getLogger(\"ListView\")\n\nconst SCREENS = {\n    LOCATIONS: {\n        title: \"Locations\",\n        schema: \"locations\"\n    },\n    SETTINGS: {\n        title: \"Settings\",\n        schema: \"settings\"\n    },\n    DASHBOARDS: {\n        title: \"Dashboards\",\n        schema: \"locations\"\n    },\n}\n\nconst ListView = (props) => {\n    const {\n\n    } = props\n\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const params = useParams()\n    const { widgetPage } = props.match.params\n\n    const size = useWindowSize()\n    const windowWidth = size.width\n    const widthBreakPoint = 1025\n\n    const positions = useSelector(state => state.positionsReducer.positions)\n    const devices = useSelector(state => state.devicesReducer.devices)\n    const status = useSelector(state => state.statusReducer.status)\n    const taskQueue = useSelector(state => state.taskQueueReducer.taskQueue)\n\n    const onPostStatus = (status) => dispatch(postStatus(status))\n\n    const [showDashboards, setShowDashboards] = useState(false)\n    const [showSettings, setShowSettings] = useState(false)\n\n    const CURRENT_SCREEN = (showDashboards) ? SCREENS.DASHBOARDS :\n        showSettings ? SCREENS.SETTINGS : SCREENS.LOCATIONS\n\n    const title = CURRENT_SCREEN.title\n\n\n    let pause_status = ''\n\n    // If there's no status available then set to blank object.\n    try {\n        pause_status = status.pause_status;\n    } catch (e) {\n        pause_status = status.pause_status;\n    }\n\n    // Handles the icon type being displayed based on the pause_status in status\n    var playButtonClassName = \"fas fa-\";\n    pause_status ? playButtonClassName += 'play' : playButtonClassName += 'pause';\n\n    useEffect(() => {\n        // displays dashboards page if url is on widget page\n        if (widgetPage) {\n            setShowDashboards(true)\n        }\n\n        // hides dashboards page if url is NOT on widget page\n        else {\n            setShowDashboards(false)\n        }\n\n    }, [widgetPage])\n\n    const onLocationClick = (item) => {\n        history.push('/locations/' + item._id + '/' + \"dashboards\")\n        setShowDashboards(true)\n    }\n\n    // Handles the play pause button\n    const handleTogglePlayPause = async () => {\n\n        //Flip the status to the opposite of the current value when the button is pressed\n        var status_clone = deepCopy(status);\n        const pause_status = !status_clone.pause_status;\n\n        //Post the status to the API\n        await onPostStatus({ pause_status: pause_status });\n    }\n\n\n    const handleTaskQueueStatus = () => {\n\n        // return (\n        //     <styled.StatusContainer>\n        //         <p>Distance to Station 3 is 30m</p>\n        //     </styled.StatusContainer>\n        // )\n        return Object.values(taskQueue).map((item, ind) => {\n\n            // If the item has an owner that means that task is being executed\n            if (!!item.owner) {\n\n                // If the station is a device and the task q owner is that device then show the status\n                if (!!devices[params.stationID] && item.owner === devices[params.stationID]._id) {\n\n                    let locationName = ''\n\n                    if(!!item.custom_task){\n                        locationName = positions[item.custom_task.position].name\n                    }\n                    else if(!!item.next_position){\n                        locationName = positions[item.next_position].name\n                    }\n\n                    return (\n                        <styled.StatusContainer>\n                            <p>{`Distance to ${locationName} - ${Math.floor(devices[item.owner].distance_to_next_target)}m`}</p>\n                        </styled.StatusContainer>\n                    )\n\n                }\n            }\n        })\n    }\n\n\n    return (\n        <styled.Container>\n            <styled.Header>\n                {(showDashboards) ?\n                    <BounceButton\n                        color={\"black\"}\n                        onClick={() => {\n                            setShowDashboards(false)\n                            history.push('/locations')\n                        }}\n                        containerStyle={{\n                            width: \"3rem\",\n                            height: \"3rem\",\n                            position: \"relative\"\n                        }}\n                    >\n                        <styled.Icon\n                            className={\"fa fa-times\"}\n                        />\n                    </BounceButton>\n                    :\n                    <BounceButton\n                        color={\"black\"}\n                        onClick={() => {\n                            setShowSettings(!showSettings)\n                        }}\n                        active={showSettings}\n                        containerStyle={{\n                            width: \"3rem\",\n                            height: \"3rem\",\n                            position: \"relative\"\n                        }}\n                    >\n                        <styled.Icon\n                            className={!showSettings ? \"fa fa-cog\" : \"fa fa-times\"}\n                        />\n                    </BounceButton>\n                }\n                <styled.Title schema={CURRENT_SCREEN.schema}>{title}</styled.Title>\n                {handleTaskQueueStatus()}\n\n                <styled.PlayButton\n                    play={pause_status}\n                    windowWidth={windowWidth}\n                    widthBreakPoint={widthBreakPoint}\n                >\n                    <styled.PlayButtonIcon play={pause_status} className={playButtonClassName} onClick={handleTogglePlayPause}></styled.PlayButtonIcon>\n                </styled.PlayButton>\n\n            </styled.Header>\n\n\n            {(!showDashboards && !showSettings) &&\n                <LocationList\n                    onLocationClick={onLocationClick}\n                />\n            }\n\n            {(showDashboards && !showSettings) &&\n                // must be wrapped in route to give dashboards page the match params\n                <Route\n                    path=\"/locations/:stationID/dashboards/:dashboardID?/:editing?\"\n                    component={DashboardsPage}\n                />\n            }\n\n            {showSettings &&\n                <Settings />\n            }\n        </styled.Container>\n    )\n}\n\nexport default ListView;\n","import { normalize } from 'normalizr';\n\n// import types\nimport {\n    GET,\n    POST,\n    DELETE,\n    PUT\n} from '../types/prefixes';\n\nimport {\n    JUNK\n} from '../types/data_types';\n\nimport { api_action } from './index';\nimport * as api from '../../api/cards_api'\n\nimport log from \"../../logger\"\nimport {convertArrayToObject} from \"../../methods/utils/utils\";\n\nimport uuid from 'uuid'\nimport {SUCCESS} from \"../types/suffixes\";\n\nconst logger = log.getLogger(\"Junk\", \"Redux\")\nlogger.setLevel(\"debug\")\n\n// update\n// ******************************\nexport const putJunk = () => async dispatch => {\n\n    const junkData = {\n        _id: uuid.v4(),\n        text: \"alemfsefmseklfmsel\",\n        text1: \"alemfsefmseklfmsel\",\n        text2: \"alemfsefmseklfmsel\",\n        text3: \"alemfsefmseklfmsel\",\n        text4: \"alemfsefmseklfmsel\",\n        text5: \"alemfsefmseklfmsel\",\n        text6: \"alemfsefmseklfmsel\",\n        text7: \"alemfsefmseklfmsel\",\n        text8: \"alemfsefmseklfmsel\",\n    }\n    dispatch({ type: PUT + JUNK, payload: {junkData} });\n\n};","// import external dependencies\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from \"react-router-dom\";\n\n// Import Actions\nimport { getMaps } from '../../redux/actions/map_actions'\nimport { getTaskQueue } from '../../redux/actions/task_queue_actions'\nimport { getLocations } from '../../redux/actions/locations_actions'\nimport { getObjects } from '../../redux/actions/objects_actions'\nimport { getTasks, deleteTask } from '../../redux/actions/tasks_actions'\nimport { getDashboards, deleteDashboard } from '../../redux/actions/dashboards_actions'\nimport { getSounds } from '../../redux/actions/sounds_actions'\nimport { getProcesses, putProcesses } from '../../redux/actions/processes_actions'\n\nimport { getSchedules } from '../../redux/actions/schedule_actions';\nimport { getDevices, putDevices } from '../../redux/actions/devices_actions'\nimport { getStatus } from '../../redux/actions/status_actions'\n\nimport { getSettings } from '../../redux/actions/settings_actions'\nimport { getLocalSettings } from '../../redux/actions/local_actions'\nimport { getLoggers } from '../../redux/actions/local_actions';\nimport { getRefreshToken } from '../../redux/actions/authentication_actions'\n\nimport { deletePosition, putPosition } from '../../redux/actions/positions_actions'\nimport { putStation, deleteStation } from '../../redux/actions/stations_actions'\n\nimport { postLocalSettings } from '../../redux/actions/local_actions'\n\n// Import components\nimport Textbox from '../../components/basic/textbox/textbox'\nimport Button from '../../components/basic/button/button'\nimport Switch from 'react-ios-switch'\nimport SplashScreen from \"../../components/misc/splash_screen/splash_screen\";\n\n// import utils\nimport { getPageNameFromPath } from \"../../methods/utils/router_utils\";\nimport {isEquivalent, deepCopy, uuidv4} from '../../methods/utils/utils'\n\n// import logger\nimport logger from '../../logger.js';\nimport { getMap } from '../../api/map_api';\nimport SideBar from '../side_bar/side_bar';\nimport localReducer from \"../../redux/reducers/local_reducer\";\nimport {postCard} from \"../../redux/actions/card_actions\";\nimport {putJunk} from \"../../redux/actions/test_actions\";\nimport axios from \"axios\";\nimport {apiIPAddress} from \"../../settings/settings\";\n\n\nvar count = 0\n\nfunction getRandomInt(max) {\n    return Math.floor(Math.random() * Math.floor(max));\n}\n\nconst TestsContainer = (props) => {\n\n    const dispatch = useDispatch()\n\n    const foo_map = {\n        allowed_methods: [\n            \"PUT\",\n            \"GET\",\n            \"DELETE\"\n        ],\n        _id: \"blah-blah\",\n        created_by: \"/v2.0.0/users/mirconst-guid-0000-0004-users0000000\",\n        created_by_id: \"mirconst-guid-0000-0004-users0000000\",\n        created_by_name: \"Distributor\",\n        guid: \"51131f98-bfb5-11ea-a742-94c691a739e9\",\n        map: \"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\",\n        metadata: \"\",\n        name: \"Robotic Materials\",\n        one_way_map: \"iVBORw0KGgoAAAANSUhEUgAAAhAAAAKyAQAAAACsr9rBAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAAnRSTlMAAHaTzTgAAAACYktHRAAB3YoTpAAAAAlwSFlzAAAOxAAADsQBlSsOGwAAAAd0SU1FB+QHBhQ5JYjlIqkAAABESURBVHja7cExAQAAAMKg9U9tBn+gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAzwC0lgABJg+sEgAAACV0RVh0ZGF0ZTpjcmVhdGUAMjAyMC0wNy0wNlQyMjo1NzozNyswMjowMOars2YAAAAldEVYdGRhdGU6bW9kaWZ5ADIwMjAtMDctMDZUMjI6NTc6MzcrMDI6MDCX9gvaAAAAAElFTkSuQmCC\",\n        origin_theta: 0,\n        origin_x: 0,\n        origin_y: 0,\n        path_guides: \"/v2.0.0/maps/51131f98-bfb5-11ea-a742-94c691a739e9/path_guides\",\n        paths: \"/v2.0.0/maps/51131f98-bfb5-11ea-a742-94c691a739e9/paths\",\n        positions: \"/v2.0.0/maps/51131f98-bfb5-11ea-a742-94c691a739e9/positions\",\n        resolution: 0.05,\n        session_id: \"d469ada1-7e3c-11e9-9d34-94c691a739e9\",\n        d3: {\n            scale: 1,\n            translate: [0,0],\n            boundingClientHeight: null\n        }\n    }\n\n\n    const postLot = async() => {\n        try {\n            const response = await axios({\n                method: 'POST',\n                url: apiIPAddress() + \"site_maps\",\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                data: foo_map\n            });\n\n            // Success 🎉\n            // log.debug('response',response);\n            const data = response.data;\n            const dataJson = JSON.parse(data)\n            // log.debug('response data json',dataJson);\n\n\n            return dataJson;\n\n\n        } catch (error) {\n\n            console.error('error', error);\n        }\n    }\n\n\n\n    return (\n        <button\n            onClick={postLot}\n        >\n            CREATE MAP\n        </button>\n    )\n}\n\nexport default TestsContainer;\n","import React, { useState } from 'react';\nimport { BrowserRouter, Route, IndexRoute, Link, Switch, useHistory } from 'react-router-dom';\nimport { connect, useSelector, useDispatch } from 'react-redux'\n\nimport { ThemeProvider } from \"styled-components\";\nimport theme from './theme';\nimport './App.css';\n\n// Import Hooks\nimport useWindowSize from './hooks/useWindowSize'\n\n// import logger\nimport logger, { disableAll } from './logger.js';\n\nimport * as styled from './App.style'\n\n// Import API\nimport { deleteLocalSettings } from './api/local_api'\n//import * as localActions from './redux/actions/local_actions'\nimport { stopAPICalls } from './redux/actions/local_actions'\n\n\n// import containers\nimport ApiContainer from './containers/api_container/api_container';\nimport StatusHeader from './containers/status_header/status_header';\nimport PageErrorBoundary from './containers/page_error_boundary/page_error_boundary';\nimport Logger from './containers/logger/logger';\nimport SideBar from './containers/side_bar/side_bar'\nimport MapView from './containers/map_view/map_view'\nimport HILModal from './containers/hil_modal/hil_modal'\nimport Authentication from './containers/authentication/authentication'\nimport Widgets from './components/widgets/widgets'\nimport ListView from \"./components/list_view/list_view\";\nimport TestsContainer from \"./containers/api_container/tests_container\";\nimport HILModals from \"./components/hil_modals/hil_modals\";\nimport ConfirmDeleteModal from './components/basic/modals/confirm_delete_modal/confirm_delete_modal'\n\nconst widthBreakPoint = 1000;\n\n// class App extends Component {\n\nconst App = (props) => {\n\n    const widgetPageLoaded = useSelector(state => { return state.widgetReducer.widgetPageLoaded })\n    const hoveringInfo = useSelector(state => state.widgetReducer.hoverStationInfo)\n    const selectedTask = useSelector(state => state.tasksReducer.selectedTask)\n    const maps = useSelector(state => state.mapReducer.maps)\n    const dashboardOpen = useSelector(state => state.dashboardsReducer.dashboardOpen)\n    const sideBarOpen = useSelector(state => state.sidebarReducer.open)\n    const mapViewEnabled = useSelector(state => state.localReducer.localSettings.mapViewEnabled)\n    const getFailureCount = useSelector(state => state.taskQueueReducer.getFailureCount)\n\n    const dispatch = useDispatch()\n    const dispatchStopAPICalls = (bool) => dispatch(stopAPICalls(bool))\n\n    // Set to true for the time being, authentication is not 100% complete as of 09/14/2020\n    // const [authenticated, setAuthenticated] = useState(false)\n\n    const authenticated = useSelector(state => state.localReducer.localSettings.authenticated)\n\n    const [loaded, setLoaded] = useState(false)\n    const [apiLoaded, setApiLoaded] = useState(false)\n    const [stateTheme, setStateTheme] = useState('main')\n\n    const [showSideBar, setShowSideBar] = useState(false)\n    const [showStopAPIModal, setShowStopAPIModal] = useState(true)\n    const size = useWindowSize()\n    const windowWidth = size.width\n\n    const history = useHistory()\n\n    const mobileMode = windowWidth < widthBreakPoint;\n\n    /**\n     * This handles Map view in mobile mode\n     * Unmounts the map if widget pages is open\n     */\n    const handleMobileMapView = () => {\n\n        if (!widgetPageLoaded) {\n            return (\n                <Route\n                    path={[\"/locations/:stationID?/:widgetPage?\", '/']}>\n                    <MapView mobileMode={mobileMode} />\n                </Route>\n            )\n        }\n\n        else {\n            return null\n        }\n\n    }\n\n\n    // Used to clear local settings just in case the page cant be loaded anymore\n    const handleClearLocalSettings = () => {\n        deleteLocalSettings()\n        return (\n            <>\n            </>\n        )\n    }\n\n    return (\n          <>\n              <Logger />\n\n              {/*<TestsContainer/>*/}\n\n              {/* <ThemeProvider theme={theme[this.state.theme]}> */}\n              <ThemeProvider theme={theme[stateTheme]}>\n\n                  <styled.Container>\n                    <ConfirmDeleteModal\n                          isOpen={getFailureCount<10 || showStopAPIModal===false ? false: true}\n                          title={\"Oops! It looks like the server is diconnected. Would you like to turn off updates from the backend?\"}\n                          button_1_text={\"Yes\"}\n                          handleOnClick1={() => {\n                            dispatchStopAPICalls(true)\n                            setShowStopAPIModal(false)\n                          }}\n                          button_2_text={\"No\"}\n                          handleOnClick2={() => {\n                            setShowStopAPIModal(false)\n                          }}\n                          handleClose={() => {\n                            setShowStopAPIModal(false)\n                          }}\n                      />\n                      <BrowserRouter>\n                          {/* <Route\n                              exact path=\"/clear_local\"\n                          >\n                              {\n                                  handleClearLocalSettings()\n                              }\n                          </Route> */}\n\n\n                          <Route\n                              path={[\"/locations/:stationID?/:widgetPage?\", '/:sidebar?/:data1?/:data2?', '/',]}\n                          >\n                              {authenticated && <ApiContainer styleMode={null} apiMode={null} mode={null} logMode={\"DEV\"} onLoad={() => setLoaded(true)} apiLoaded={() => setApiLoaded(true)} isApiLoaded={apiLoaded} />}\n                          </Route>\n\n                          {/* If all the API's have been loaded, but the user has not been authenticate then show the Authentication Screen */}\n                          {authenticated === null &&\n                              <Authentication authenticated={authenticated}/>\n                          }\n\n\n                          {loaded && authenticated && apiLoaded &&\n                              <styled.ContentContainer>\n\n                                  <styled.HeaderContainer>\n                                      {mapViewEnabled ?\n                                          <Route\n                                              path={[\"/locations/:stationID?/:widgetPage?\", '/']}\n                                              component={StatusHeader}\n                                          />\n                                          :\n                                          <> </>\n                                      }\n                                  </styled.HeaderContainer>\n\n\n\n                                  <styled.BodyContainer>\n                                      {/* Hides Side bar when in a dashboard in mobile mode */}\n                                      {mapViewEnabled ?\n                                          // mobileMode ?\n                                          // dashboardOpen ?\n                                          //     <></>\n                                          //     :\n\n                                          <Route\n                                              path={[\"/:page?/:id?/:subpage?\", '/']}\n                                          >\n                                              <SideBar\n                                                  showSideBar={sideBarOpen}\n                                                  setShowSideBar={setShowSideBar}\n                                              />\n                                          </Route>\n                                          // :\n                                          //     <Route\n                                          //         path={[\"/:page?/:id?/:subpage?\", '/']}\n                                          //     >\n                                          //         <SideBar\n                                          //             showSideBar={sideBarOpen}\n                                          //             setShowSideBar={setShowSideBar}\n                                          //         />\n                                          //     </Route>\n                                          :\n                                          <></>\n                                      }\n\n                                      <Route\n                                          path={[\"/locations/:stationID/dashboards/:dashboardID?\", '/']}\n                                          component={HILModal}\n                                      />\n\n                                      {/* If there are no maps, then dont render mapview (Could cause an issue when there is no MIR map)\n                                          And if the device is mobile, then unmount if widgets are open\n                                      */}\n                                      {maps.length > 0 &&\n                                          <>\n                                              {mapViewEnabled ?\n\n                                                  (mobileMode ?\n                                                      <Route\n                                                          path={[\"/locations/:stationID?/:widgetPage?\", '/']}\n                                                      >\n                                                          {handleMobileMapView()}\n                                                      </Route>\n                                                      :\n                                                      <Route\n                                                          path={[\"/locations/:stationID?/:widgetPage?\", '/']}\n                                                          component={MapView}\n                                                      />)\n\n                                                  :\n\n                                                  <Route\n                                                      path={[\"/locations/:stationID?/:widgetPage?\", '/']}\n                                                      component={ListView}\n                                                  />\n\n\n                                              }\n                                          </>\n                                      }\n\n                                      {/* <Route\n                                          path=\"/locations/:locationID?/:widgetPage?\"\n                                          component={WidgetPages}\n                                      /> */}\n\n                                      {/* Widgets are here in mobile mode. If not in mobile mode, then they are in map_view.\n                                      The reasoning is that the map unmounts when in a widget while in mobile mode (for performance reasons).\n                                      So they need to be here. */}\n                                      {hoveringInfo !== null && mobileMode &&\n                                          <Route\n                                              path={[\"/locations/:stationID?/:widgetPage?\", '/']}\n                                              component={Widgets}\n                                          />\n                                      }\n\n                                  </styled.BodyContainer>\n\n                              </styled.ContentContainer>\n                          }\n\n                      </BrowserRouter>\n                  </styled.Container>\n              </ThemeProvider>\n              </>\n    );\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport $ from \"jquery\";\nimport 'bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './methods/css/montserrat.css';\nimport './methods/css/iwawa.css';\nimport './methods/css/all.css';\nimport * as popper from 'popper.js'\nimport 'xmlrpc'\nimport { Provider } from 'react-redux'\nimport store from './redux/store/index.js'\nimport './methods/css/fontawesome.min.css'\nimport './graphics/icons/style.css'\nimport 'nivo'\n// import { AppContainer } from 'react-hot-loader';\n// require('react-hot-loader/patch')\n\n/* uncomment to disable default logger\nconsole.log = () => {};\nconsole.error = () => {};\nconsole.fatal = () => {};\nconsole.warn = () => {};\n*/\n//\n\nif(module.hot){\n    module.hot.accept()\n}\n\n// if(module.hot){\n//     console.log(\"module hot\")\n//\n//     module.hot.accept('./App', () => {\n//         console.log(\"inside callback\")\n//\n//         const NextApp = require('./App');\n//\n//         ReactDOM.render(\n//             <Provider store={store}>\n//                 <App />\n//             </Provider>,\n//             document.getElementById('root')\n//         );\n//\n//     });\n// }\n// else {\n    const rootElement = document.getElementById('root')\n    ReactDOM.render(\n        // <AppContainer>\n        <Provider store={store}>\n            <App />\n        </Provider>,\n            // </AppContainer>,\n        rootElement\n    )\n// }\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\nserviceWorker.register();\n","import axios from 'axios';\n// import * as log from 'loglevel';\n\nimport logger from '../logger'\n\nimport { apiIPAddress } from '../settings/settings'\nconst operator = 'events'\nconst log = logger.getLogger('Api')\n\nexport async function getEvents() {\n    try {\n        const response = await axios({\n            method: 'get',\n            url: apiIPAddress() + operator, \n            headers: {\n                'X-API-Key': '123456',\n            },\n        });\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n\n}\n\nexport async function deleteEvents(ID) {\n    try {\n        const response = await axios({\n            method: 'DELETE',\n            url: apiIPAddress() + operator + '/' + ID,\n            headers: {\n                'Accept': 'application/json',\n                'X-API-Key': '123456',\n            },\n        });\n\n        // Success 🎉\n        // log.debug('response',response);\n        // const data = response.data;\n        // const dataJson = JSON.parse(data)\n        return response;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}\n\nexport async function postEvents(events) {\n    try {\n        const response = await axios({\n            method: 'POST',\n            url: apiIPAddress() + operator,\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'application/json'\n            },\n            data: events\n        });\n\n        // Success 🎉\n        // log.debug('response',response);\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        // log.debug('response data json',dataJson);\n\n\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}\n\nexport async function putEvents(event, ID) {\n\n    try {\n        const response = await axios({\n            method: 'PUT',\n            url: apiIPAddress() + operator + '/' + ID,\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'text/html'\n            },\n            data: event\n        });\n\n        // Success 🎉\n        // log.debug('response',response);\n        // const data = response.data;\n        // const dataJson = JSON.parse(data)\n        return response;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}\n","import {SORT_MODES} from \"../../constants/common_contants\";\nimport {convertCardDate} from \"./card_utils\";\nimport {deepCopy} from \"./utils\";\n\n\nexport const isArray = (arr) => {\n\treturn ((typeof arr !== 'undefined') && Array.isArray(arr))\n}\n\nexport const removeArrayIndices = (arr, indices) => {\n\tlet arrCopy = [...arr]\n\n\tfor (var i = indices.length - 1; i >= 0; i--)\n\t\tarrCopy.splice(indices[i],1);\n\n\treturn arrCopy\n}\n","import styled, {css} from 'styled-components'\n\nexport const glow = (color) => css`\n\tbox-shadow: 0 0 5px ${color} ;\n\tborder: 1px solid ${color};\n`\n\nexport const errorGlow = css`\n  ${props => glow(props.theme.bad)};\n`;\n\nexport const newGlow = css`\n  ${props => glow(props.theme.warn)};\n`;\n\nexport const goodGlow = css`\n  ${props => glow(props.theme.good)};\n`;","import React from \"react\";\nimport { ThemeProvider } from \"styled-components\";\nimport { hexToRGBA, LightenDarkenColor, RGB_Linear_Blend, RGB_Linear_Shade, RGB_Log_Blend, RGB_Log_Shade } from './methods/utils/color_utils';\nimport objectsReducer from \"./redux/reducers/objects_reducer\";\n\nexport const size = {\n    tiny: '0px',\n    mobileS: '320px',\n    mobileM: '375px',\n    mobileL: '425px',\n    tablet: '768px',\n    laptop: '1024px',\n    laptopL: '1440px',\n    desktop: '2560px'\n}\n\nconst dark = {\n    primary: '#000000',  // Black\n    secondary: '#27272b',\n    tertiary: '#313236',\n    // quaternary: '#4f5063',\n    quaternary: '#5a5a63',\n    quinary: '#6c6e78',\n    senary: '#a6a7ba',\n    septenary: '#e9e9f2',\n    octonary: '#FFFFFF',  // White\n}\n\nconst light = {\n    primary: '#FFFFFF',  // White\n    secondary: '#E6E6E6',\n    tertiary: '#C8C8C8',\n    quaternary: '#A8A8A8',  // light light grey\n    quinary: '#808080',   // light grey\n    senary: '#7e7e7e',    // charcoal\n    septenary: '#545454', //dark dark grey\n    octonary: '#000000',  // Black\n}\n\nexport const theme = {\n    main: {\n        bg: dark,\n        fg: {\n            primary: '#798fd9',\n            secondary: '#FF4B4B', // RM RED\n            tertiary: '',\n            quaternary: '',\n            quinary: '',\n            senary: '',\n            septenary: '',\n            octonary: '',\n            nonary: '',\n            denary: '',\n            red: '#FF4B4B',   // RM RED\n\n        },\n        error: {\n            borderColor: '#FF4B4B',\n        },\n        good: '#52B853',\n        okay: '#ffa200',\n        bad: '#FF4B4B',\n        warn: '#ffe62b',\n        disabled: '#808080',           // light grey\n        radioButton: {\n            active: '#FF4B4B',          // RM RED\n            inactive: '#808080',        // light grey\n            hover: RGB_Linear_Shade(.2, hexToRGBA('#FF4B4B')),    // lighter RM RED\n            textColor: \"#FFFFFF\",        // white\n            fontWeight: 500,\n            borderColor: '#A8A8A8',      // light light grey\n        },\n        hoverHighlightPer: 0.4,\n        basicButton: {\n            backgroundColor: {\n                active: '#FF4B4B',             // RM RED\n                disabled: '#808080',           // light grey\n            },\n            textColor: {\n                active: \"#FFFFFF\",\n            }\n        },\n\n        font: {\n            primary: 'Montserrat'\n        },\n        fontSize: {\n\n            sz6: \"0.65rem\",\n            sz5: \"0.75rem\",\n            sz4: \"0.85rem\",\n            sz3: \"1.2rem\",\n            sz2: \"1.5rem\",\n            sz7: \"2.0rem\",\n            sz1: \"2.5rem\",\n            sz8: \"1.4rem\"\n        },\n        fontWeight: {\n            bold: '700',\n            normal: '100',\n        },\n\n        // minWidth: {\n        //   tiny: `(min-width: ${size.tiny})`,\n        //   mobileS: `(min-width: ${size.mobileS})`,\n        //   mobileM: `(min-width: ${size.mobileM})`,\n        //   mobileL: `(min-width: ${size.mobileL})`,\n        //   tablet: `(min-width: ${size.tablet})`,\n        //   laptop: `(min-width: ${size.laptop})`,\n        //   laptopL: `(min-width: ${size.laptopL})`,\n        //   desktop: `(min-width: ${size.desktop})`,\n        //   desktopL: `(min-width: ${size.desktop})`\n        // },\n        widthBreakpoint: {\n            tiny: `${size.tiny}`,\n            mobileS: `${size.mobileS}`,\n            mobileM: `${size.mobileM}`,\n            mobileL: `${size.mobileL}`,\n            tablet: `${size.tablet}`,\n            laptop: `${size.laptop}`,\n            laptopL: `${size.laptopL}`,\n            desktop: `${size.desktop}`,\n            desktopL: `${size.desktop}`\n        },\n\n        tree: {\n            bg: light,\n            normal: {\n                fg: '#7de7ff',\n                mg: '#bff3ff',\n                bg: '#edf5f7'\n            },\n            goal: {\n                fg: '#e399ff',\n                mg: '#ecbdfc',\n                bg: '#ede4f0',\n            },\n            warning: {\n                fg: '#ffc04b',\n                bg: '#f5eee9',\n            },\n            selected: {\n                fg: '#FF4B4B',\n                bg: '#ffe8e8',\n            },\n            alternate: {\n                fg: '#e0e0e0',\n                bg: '#f5f5f5',\n            },\n            disabled: {\n                fg: '',\n                bg: '',\n            }\n        },\n\n        schema: {\n            locations: {\n                gradient: 'radial-gradient(171.57% 115.09% at 100% 0%, rgba(121, 143, 217, 0.95) 0%, rgba(125, 89, 183, 0.95) 100%)',\n                solid: '#798fd9'\n            },\n            dashboards: {\n                gradient: 'radial-gradient(171.57% 115.09% at 100% 0%, rgba(255, 214, 0, 0.95) 0%, rgba(255, 138, 0, 0.95) 100%)',\n                solid: '#5294ff'\n            },\n            objects: {\n                gradient: 'radial-gradient(171.57% 115.09% at 100% 0%, rgba(255, 214, 0, 0.95) 0%, rgba(255, 138, 0, 0.95) 100%)',\n                solid: '#ffb62e'\n            },\n            processes: {\n                gradient: 'radial-gradient(171.57% 115.09% at 100% 0%, rgba(255, 214, 0, 0.95) 0%, rgba(255, 138, 0, 0.95) 100%)',\n                solid: '#ffb62e'\n            },\n            tasks: {\n                gradient: 'radial-gradient(171.57% 115.09% at 100% 0%, rgba(121, 217, 155, 0.95) 0%, rgba(0, 162, 132, 0.95) 100%)',\n                solid: '#79d99b'\n            },\n            routes: {\n                gradient: 'radial-gradient(171.57% 115.09% at 100% 0%, rgba(121, 217, 155, 0.95) 0%, rgba(0, 162, 132, 0.95) 100%)',\n                solid: '#79d99b',\n                iconName: \"fas fa-route\"\n            },\n            all: {\n                gradient: 'radial-gradient(171.57% 115.09% at 100% 0%, rgba(121, 217, 155, 0.95) 0%, rgba(0, 162, 132, 0.95) 100%)',\n                solid: '#1ae8a0'\n            },\n            lots: {\n                gradient: 'radial-gradient(171.57% 115.09% at 100% 0%, rgba(167, 48, 255) 0%, rgba(148, 80, 199, 0.95) 100%)',\n                solid: '#bc61ff',\n                iconName: \"fas fa-play\"\n            },\n            kick_off: {\n                gradient: 'radial-gradient(171.57% 115.09% at 100% 0%, rgba(197, 155, 255) 0%, rgba(173, 115, 255, 0.95) 100%)',\n                solid: '#c59bff',\n                iconName: \"fas fa-play\"\n            },\n            finish: {\n                gradient: 'radial-gradient(171.57% 115.09% at 100% 0%, rgba(197, 155, 255) 0%, rgba(173, 115, 255, 0.95) 100%)',\n                solid: '#fc5e03',\n                iconName: \"fas fa-flag-checkered\"\n            },\n            error: {\n                gradient: 'radial-gradient(171.57% 115.09% at 100% 0%, rgba(250, 67, 47, 0.95) 0%, rgba(217, 21, 0, 0.95) 100%)',\n                solid: '#ff1900'\n            },\n            ok: {\n                gradient: 'radial-gradient(171.57% 115.09% at 100% 0%, rgba(10, 189, 0, 0.95) 0%, rgba(77, 196, 71, 0.95) 100%)',\n                solid: '#0dff00'\n            },\n            operations: {\n                gradient: 'radial-gradient(171.57% 115.09% at 100% 0%, rgba(121, 217, 155, 0.95) 0%, rgba(0, 162, 132, 0.95) 100%)',\n                solid: '#e81a69',\n                iconName: \"fas fa-sticky-note\"\n            },\n            report: {\n                gradient: 'radial-gradient(171.57% 115.09% at 100% 0%, rgba(121, 217, 155, 0.95) 0%, rgba(0, 162, 132, 0.95) 100%)',\n                solid: '#e81a69',\n                iconName: \"fas fa-sticky-note\"\n            },\n            devices: {\n                gradient: 'radial-gradient(171.57% 115.09% at 100% 0%, rgba(255, 75, 75, 0.95) 0%, rgba(255, 61, 61, 0.95) 100%)',\n                solid: '#e36868'\n            },\n            scheduler: {\n                gradient: 'radial-gradient(171.57% 115.09% at 100% 0%, rgba(30, 156, 215, 0.95) 0%, rgba(0, 91, 151, 0.95) 100%)',\n                solid: '#1e9cd7'\n            },\n            taskQueue: {\n                gradient: 'radial-gradient(171.57% 115.09% at 100% 0%, rgba(197, 155, 255) 0%, rgba(173, 115, 255, 0.95) 100%)',\n                solid: '#c59bff'\n            },\n            settings: {\n                gradient: 'radial-gradient(171.57% 115.09% at 100% 0%, rgba(197, 155, 255) 0%, rgba(173, 115, 255, 0.95) 100%)',\n                solid: '#c59bff'\n            },\n            delete: {\n                gradient: 'radial-gradient(171.57% 115.09% at 100% 0%, rgba(255, 75, 75, 0.95) 0%, rgba(255, 61, 61, 0.95) 100%)',\n                solid: '#e36868'\n            },\n        }\n    },\n    funky: {\n\n    },\n\n\n\n};\n\n\nexport default theme;\n","import {deepCopy} from \"./utils\";\nimport {SORT_MODES} from \"../../constants/common_contants\";\n\nconst EVENT_NAMES = {\n\tCREATE: \"create\",\n\tUPDATE: \"update\"\n}\n\nexport const generateBinId = (index, stationId) => {\n\treturn index + \"+\" + stationId\n}\nexport const parseMessageFromEvent = (eventName, username, data) => {\n\tswitch(eventName) {\n\n\t\tcase EVENT_NAMES.CREATE:\n\t\t\treturn [`Created card`]\n\n\t\tcase EVENT_NAMES.UPDATE:\n\t\t\tlet msgs = []\n\n\t\t\tconst keys = Object.keys(data)\n\t\t\tkeys.forEach((currKey) => {\n\t\t\t\tconst {\n\t\t\t\t\tnew: newVal,\n\t\t\t\t\told: oldVal,\n\t\t\t\t} = data[currKey]\n\n\t\t\t\tif(oldVal) {\n\t\t\t\t\tmsgs.push(`Changed ${currKey} from \"${oldVal}\" to \"${newVal}\"`)\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tmsgs.push(`Set ${currKey} to \"${newVal}\"`)\n\t\t\t\t}\n\n\n\t\t\t})\n\n\t\t\t// if(msgs.length === 0) msgs.push(\"No info found\")\n\n\t\t\treturn msgs\n\n\t\tdefault:\n\t\t\treturn [`${eventName} performed by ${username}`]\n\t}\n}\n\n/*\n* Converts date from a card into a JS date object\n*\n* The card date object contains key, value pairs for year, month, and date\n* These values are extracted, and if the values are valid, used to generate a new Date objects\n*\n* returns a JS Date object if the card date is valid, and null otherwise\n*\n* @param {object} cardDate - object containing year, month and date keys\n* */\nexport const convertCardDate = (cardDate) => {\n\tconst year = cardDate?.year || 0\n\tconst month = cardDate?.month || 0\n\tconst day = cardDate?.day || 0\n\n\treturn (year && (month + 1) && day) ? new Date(year, month + 1, day, 0, 0, 0, 0) : null\n}\n\n/*\n* This function receives an array of cards as an argument and sorts them based on the {sortMode} argument.\n*\n* The original array is modified in place - THIS WILL MODIFY THE ARRAY - pass a copy if the original array shouldn't be modified\n*\n* @param {array} arr - array of cards\n* @param {string} sortMode - string identifier of mode to sort by\n* */\nexport const sortBy = (arr, sortMode) => {\n\n\tswitch(sortMode) {\n\t\tcase SORT_MODES.QUANTITY_ASCENDING: {\n\t\t\tarr.sort((itemA, itemB) => {\n\t\t\t\tconst { count: countA } = itemA\n\n\t\t\t\tconst { count: countB } = itemB\n\n\t\t\t\tif(parseInt(countA) >= parseInt(countB)) return 1\n\t\t\t\treturn -1\n\t\t\t})\n\n\t\t\tbreak\n\t\t}\n\t\tcase SORT_MODES.QUANTITY_DESCENDING: {\n\t\t\tarr.sort((itemA, itemB) => {\n\t\t\t\tconst { count: countA } = itemA\n\n\t\t\t\tconst { count: countB } = itemB\n\n\t\t\t\tif(parseInt(countA) < parseInt(countB)) return 1\n\t\t\t\treturn -1\n\t\t\t})\n\n\t\t\tbreak\n\t\t}\n\n\t\tcase SORT_MODES.NAME_ASCENDING: {\n\t\t\tarr.sort((itemA, itemB) => {\n\t\t\t\tconst { name: nameA } = itemA\n\n\t\t\t\tconst { name: nameB } = itemB\n\n\t\t\t\tif(nameA >= nameB) return 1\n\t\t\t\treturn -1\n\t\t\t})\n\t\t\tbreak\n\t\t}\n\n\t\tcase SORT_MODES.NAME_DESCENDING: {\n\t\t\tarr.sort((itemA, itemB) => {\n\t\t\t\tconst { name: nameA } = itemA\n\n\t\t\t\tconst { name: nameB } = itemB\n\n\t\t\t\tif(nameA < nameB) return 1\n\t\t\t\treturn -1\n\t\t\t})\n\t\t\tbreak\n\t\t}\n\n\t\tcase SORT_MODES.END_DESCENDING: {\n\t\t\tarr.sort((itemA, itemB) => {\n\t\t\t\tconst { end_date: endDateA } = itemA\n\t\t\t\tconst convertedA = convertCardDate(endDateA)\n\n\t\t\t\tconst { end_date: endDateB } = itemB\n\t\t\t\tconst convertedB = convertCardDate(endDateB)\n\n\t\t\t\tif(!convertedA) return 1\n\t\t\t\tif(convertedA > convertedB) return -1\n\t\t\t\treturn 1\n\t\t\t})\n\n\t\t\tbreak\n\t\t}\n\t\tcase SORT_MODES.END_ASCENDING: {\n\t\t\tarr.sort((itemA, itemB) => {\n\t\t\t\tconst { end_date: endDateA } = itemA\n\t\t\t\tconst convertedA = convertCardDate(endDateA)\n\n\t\t\t\tconst { end_date: endDateB } = itemB\n\t\t\t\tconst convertedB = convertCardDate(endDateB)\n\n\t\t\t\tif(!convertedA) return 1\n\t\t\t\tif(convertedA >= convertedB) return 1\n\t\t\t\treturn -1\n\t\t\t})\n\n\t\t\tbreak\n\t\t}\n\t\tcase SORT_MODES.START_DESCENDING: {\n\t\t\tarr.sort((itemA, itemB) => {\n\t\t\t\tconst { start_date: startDateA } = itemA\n\t\t\t\tconst convertedA = convertCardDate(startDateA)\n\n\t\t\t\tconst { start_date: startDateB } = itemB\n\t\t\t\tconst convertedB = convertCardDate(startDateB)\n\n\t\t\t\tif(!convertedA) return 1\n\t\t\t\tif(convertedA > convertedB) return -1\n\t\t\t\treturn 1\n\t\t\t})\n\t\t\tbreak\n\t\t}\n\t\tcase SORT_MODES.START_ASCENDING: {\n\t\t\tarr.sort((itemA, itemB) => {\n\t\t\t\tconst { start_date: startDateA } = itemA\n\t\t\t\tconst convertedA = convertCardDate(startDateA)\n\n\t\t\t\tconst { start_date: startDateB } = itemB\n\t\t\t\tconst convertedB = convertCardDate(startDateB)\n\n\t\t\t\tif(!convertedA) return 1\n\t\t\t\tif(convertedA >= convertedB) return 1\n\t\t\t\treturn -1\n\t\t\t})\n\t\t\tbreak\n\t\t}\n\n\t}\n\n\treturn arr\n}","import styled from 'styled-components'\n\nexport const TitleContainer = styled.h1`\n    font-size: ${props => props.theme.fontSize.sz2};\n    font-family: ${props => props.theme.font.primary};\n    color: ${props => props.theme.bg.septenary};\n    margin-top: .6rem;\n`;\n\nexport const DefaultContainer = styled.div`\n`;\n\nexport const DefaultFieldContentContainer = styled.div`\n    width: 100%;\n    height: auto;\n    position: relative;\n    // background: blue;\n`;\n\nexport const DefaultFieldDropdownContainer = styled.div`\n    flex: 1;\n`;\n\nexport const IconContainerComponent = styled.div`\n    width: auto;\n    height: auto;\n    position: absolute;\n    top: 50%;\n    right: 2rem;\n    transform: translateY(-50%);\n    margin: 0;\n    padding: 0;\n    background; cyan;\n`;\n","import React, {Component, useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport { useField, useFormikContext } from \"formik\";\nimport DropDownSearch from '../../drop_down_search_v2/drop_down_search';\n// import {globStyle} from '../../../../global_style'\nimport { getMessageFromError } from \"../../../../methods/utils/form_utils\";\n\n// import styles\nimport * as styled from './drop_down_search_field.style'\nimport ErrorTooltip from \"../error_tooltip/error_tooltip\";\nimport {isEmpty} from \"ramda\";\n\n\nconst DropDownSearchField = ({\n\t\t\t\t\t\t\t\t fieldLabel,\n\t\t\t\t\t\t\t\t LabelComponent,\n\t\t\t\t\t\t\t\t ItemComponent,\n\t\t\t\t\t\t\t\t ContentComponent,\n\t\t\t\t\t\t\t\t ErrorComponent,\n\t\t\t\t\t\t\t\t onDropdownClose,\n\t\t\t\t\t\t\t\t onChange,\n\t\t\t\t\t\t\t\t FieldContentContainer,\n\t\t\t\t\t\t\t\t FieldDropdownContainer,\n\t\t\t\t\t\t\t\t Container,\n\t\t\t\t\t\t\t\t style,\n\t\t\t\t\t\t\t\t containerSyle,\n\tmapInput,\n\tmapOutput,\n\t\t\t\t\t\t\t\t ...props\n\t\t\t\t\t\t\t }) => {\n\n\tconst { setFieldValue, setFieldTouched } = useFormikContext();\n\tconst [field, meta] = useField(props);\n\tconst hasError = meta.touched && meta.error;\n\n\tconst [value, setValue] = useState(field.value)\n\tconst [touched, setTouched] = useState(field.touched)\n\tconst [updatingValue, setUpdatingValue] = useState(false)\n\n\t/*\n\t* This is kindy funky\n\t* The first time you select a value, both onChange and onDropdownClose get called since the dropdown closes when you select a value\n\t* onChange is called first, and updates the values and performs validation\n\t* THEN onDropdownClose is called, updates field.touched and performs validation\n\t* however, onDropdownClose gets called AFTER onChange but still has the old values\n\t* This means a second validation would be performed with the old values, which can result in a validation error for the old values, even if the new values don't have an error\n\t* by managing it in a hook this way, validation for field.touched can be controlled directly\n\t*\n\t* */\n\tuseEffect(() => {\n\n\t\tif(touched) {\n\t\t\t// update touched\n\t\t\t// only perform validation if value is not being updated, otherwise validate will be called twice unnecessarily\n\t\t\tsetFieldTouched(field.name, touched, !updatingValue)\n\t\t}\n\t\t// set\n\t\tif(updatingValue) setUpdatingValue(false)\n\n\t\treturn () => {\n\t\t\tsetTouched(false)\n\t\t}\n\n\t}, [touched])\n\n\tlet ReactDropdownSelectStyle = {\n\t\tborderColor: hasError && 'red',\n\t\tboxShadow: hasError && `0 0 5px red`,\n\t}\n\n\tconst errorMessage = getMessageFromError(meta.error);\n\n\treturn (\n\t\t<Container\n\t\t\tstyle={containerSyle}\n\t\t>\n\t\t\t{fieldLabel &&\n\t\t\t<LabelComponent>{fieldLabel}</LabelComponent>\n\t\t\t}\n\n\t\t\t<styled.DefaultFieldContentContainer>\n\t\t\t\t{/*<style.DefaultFieldDropdownContainer>*/}\n\t\t\t\t<DropDownSearch\n\t\t\t\t\tonBlur={()=>{}}\n\t\t\t\t\tstyle={{ReactDropdownSelectStyle, ...style}}\n\t\t\t\t\ttheme={props.theme}\n\t\t\t\t\tItemComponent={ItemComponent}\n\t\t\t\t\tContentComponent={ContentComponent}\n\t\t\t\t\tonDropdownClose={()=>{\n\t\t\t\t\t\t// set this field to touched if not already\n\t\t\t\t\t\tconst isTouched = meta.touched;\n\t\t\t\t\t\tif(!isTouched) {\n\t\t\t\t\t\t\tsetTouched(true)\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// call any additional function that was passed as prop\n\t\t\t\t\t\tonDropdownClose && onDropdownClose();\n\t\t\t\t\t}}\n\t\t\t\t\tvalues={field.value ? mapInput(field.value): []}\n\t\t\t\t\t{...field}\n\t\t\t\t\t{...props}\n\t\t\t\t\tonChange={values => {\n\t\t\t\t\t\t// update field value and set updating to true for use in the hook\n\t\t\t\t\t\tsetFieldValue(field.name, mapOutput(values));\n\t\t\t\t\t\tsetUpdatingValue(true)\n\t\t\t\t\t\tonChange && onChange(values)\n\t\t\t\t\t}}\n\t\t\t\t\tonRemoveItem={\n\t\t\t\t\t\t()=> {\n\t\t\t\t\t\t\t// set this field to touched if not already\n\t\t\t\t\t\t\tconst isTouched = meta.touched;\n\t\t\t\t\t\t\tif(!isTouched) {\n\t\t\t\t\t\t\t\tsetTouched(true)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tsetFieldValue(field.name, \"\");\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tonClearAll={()=>setFieldValue(field.name, \"\")}\n\t\t\t\t/>\n\t\t\t\t{/*</style.DefaultFieldDropdownContainer>*/}\n\n\t\t\t\t<ErrorTooltip\n\t\t\t\t\tvisible={hasError}\n\t\t\t\t\ttext={errorMessage}\n\t\t\t\t\tContainerComponent={styled.IconContainerComponent}\n\t\t\t\t/>\n\t\t\t</styled.DefaultFieldContentContainer>\n\t\t\t{/*\n\t\t\t{meta.touched && meta.error ? (\n\t\t\t\t<ErrorComponent className=\"error\">{Object.values(meta.error)}</ErrorComponent>\n\t\t\t) : null}\n\t\t\t*/}\n\n\t\t</Container>\n\t);\n};\n\n// Specifies propTypes\nDropDownSearchField.propTypes = {\n\tLabelComponent: PropTypes.elementType,\n\tFieldDropdownContainer: PropTypes.elementType,\n\tFieldContentContainer: PropTypes.elementType,\n\tstyle: PropTypes.object,\n\tmapInput: PropTypes.func,\n\tmapOutput: PropTypes.func,\n};\n\n// Specifies the default values for props:\nDropDownSearchField.defaultProps = {\n\tLabelComponent: styled.TitleContainer,\n\tFieldDropdownContainer: styled.DefaultFieldDropdownContainer,\n\tFieldContentContainer: styled.DefaultFieldContentContainer,\n\tContainer: styled.DefaultContainer,\n\tonChange: null,\n\tmapInput: (val) => val,\n\tmapOutput: (val) => val,\n\tstyle: {}\n};\n\nexport default DropDownSearchField;\n","import uuid from 'uuid'\nimport {DEVICE_CONSTANTS} from \"../../constants/device_constants\";\nimport  store  from \"../../redux/store/index\";\nimport {defaultTask} from \"../../constants/route_constants\";\nimport {isArray} from \"./array_utils\";\nimport {useSelector} from \"react-redux\";\n\n/**\n * Creates a default route based on store state\n */\nexport const generateDefaultRoute = (obj) => {\n    const storeState = store.getState()\n    const MiRMapEnabled = storeState.localReducer.localSettings.MiRMapEnabled\n    const currentMap = storeState.mapReducer.currentMap\n\n    return {\n        ...defaultTask,\n        device_types: !!MiRMapEnabled ? [DEVICE_CONSTANTS.MIR_100, DEVICE_CONSTANTS.HUMAN] : [DEVICE_CONSTANTS.HUMAN],\n        handoff: true,\n        map_id: currentMap._id,\n        load: {...defaultTask.load},\n        unload: {...defaultTask.unload},\n        obj: obj ? obj : null,\n        _id: uuid.v4(), // NOTE - ID IS GENERATED HERE INSTEAD OF IN defaultTask SO THE ID IS GENERATED EACH TIME THE FUNCTION IS CALLED\n    }\n}\n\nexport const isHumanTask = (task) => {\n    return task && isArray(task.device_types) && task.device_types.includes(DEVICE_CONSTANTS.HUMAN)\n}\n\nexport const buildDefaultRouteName = (nameA, nameB) => {\n    if(!nameA) return \"\"\n    return nameA + \" => \" + nameB\n}\n\n/*\n* Returns true if task ONLY supports human device (and no other types), and false otherwise\n* */\nexport const isOnlyHumanTask = (task) => {\n    var containsHuman = false\n    var containsNonHuman = false\n    if(task && isArray(task.device_types)) {\n        task.device_types.forEach((currType) => {\n            if( currType === DEVICE_CONSTANTS.HUMAN ) containsHuman = true\n            if( currType !== DEVICE_CONSTANTS.HUMAN )  containsNonHuman = true\n        })\n    }\n\n\n    return !containsNonHuman && containsHuman\n}\n\nexport const isMiRandHumanTask = (task) => {\n    return task && isArray(task.device_types) && task.device_types.includes(DEVICE_CONSTANTS.MIR_100) && task.device_types.includes(DEVICE_CONSTANTS.HUMAN)\n}\n\n\nexport const isMiRTask = (task) => {\n    return task && isArray(task.device_types) && task.device_types.includes(DEVICE_CONSTANTS.MIR_100)\n}\n\nexport const getRouteProcesses = (routeId) => {\n    const storeState = store.getState()\n    const processes = storeState.processesReducer.processes\n\n    return Object.values(processes).filter((currProcess, currIndex) => {\n        if(currProcess.routes.includes(routeId)) return true\n    })\n}\n\nexport const isNextRouteViable = (currentRoute, nextRoute) => {\n    const currentUnloadStationId = getUnloadStationId(currentRoute)\n    const nextLoadStationId = getLoadStationId(nextRoute)\n\n    if (currentUnloadStationId === nextLoadStationId) {\n        return true\n    }\n}\n\nexport const getUnloadStationId = (route) => {\n    return route?.unload?.station\n}\n\nexport const getUnloadPositionId = (route) => {\n    return route?.unload?.position\n}\n\nexport const getLoadStationId = (route) => {\n    return route?.load?.station\n}\n\nexport const getLoadPositionId = (route) => {\n    return route?.load?.position\n}\n\nexport const getRouteStart = (route) => {\n    let hasStart = getLoadStationId(route)\n    if(!hasStart) hasStart = getLoadPositionId(route)\n\n    return hasStart\n}\n\nexport const getRouteEnd = (route) => {\n    let hasEnd = getUnloadStationId(route)\n    if(!hasEnd) hasEnd = getUnloadPositionId(route)\n\n    return hasEnd\n}\n\nexport const isStationLoadStation = (route, stationId) => {\n    return stationId === getLoadStationId(route)\n}\n\n\n\nexport const isStationUnloadStation = (route, stationId) => {\n    return stationId === getUnloadStationId(route)\n}\n\nexport const isPositionAtLoadStation = (route, positionId) => {\n    const storeState = store.getState()\n    const stations = storeState.stationsReducer.stations || {}\n\n    // get load station\n    const loadStationId = getLoadStationId(route)\n    const loadStation = stations[loadStationId] || { children: [] }\n\n\n    // if loadStation's children includes positionId, return true\n    if (loadStation.children.includes(positionId)) return true\n\n    // otherwise return false\n    return false\n}\n\nexport const isPositionAtUnloadStation = (route, positionId) => {\n    const storeState = store.getState()\n    const stations = storeState.stationsReducer.stations || {}\n\n    // get load station\n    const unloadStationId = getUnloadStationId(route)\n    const unloadStation = stations[unloadStationId] || { children: [] }\n\n\n    // if loadStation's children includes positionId, return true\n    if (unloadStation.children.includes(positionId)) return true\n\n    // otherwise return false\n    return false\n\n}\n\nexport const isPositionInRoutes = (routes, positionId) => {\n    const storeState = store.getState()\n    const stations = storeState.stationsReducer.stations || {}\n\n    for(const currRoute of routes) {\n\n        const {\n            load,\n            unload\n        } = currRoute || {}\n\n        const {\n            station: loadStationId\n        } = load || {}\n        const loadStation = stations[loadStationId] || { children: [] }\n        if(loadStation.children.includes(positionId)) return true   // found station with position as child, return true\n\n        const {\n            station: unloadStationId\n        } = unload || {}\n        const unloadStation = stations[unloadStationId] || { children: [] }\n        if(unloadStation.children.includes(positionId)) return true // found station with position as child, return true\n    }\n\n    return false // none of the station's contained the position\n}\n\nexport const getLoadStationDashboard = (route) => {\n    const storeState = store.getState()\n    const stations = storeState.stationsReducer.stations || {}\n\n    const loadStationId = getLoadStationId(route)\n\n    const station = stations[loadStationId] || {}\n\n    const dashboards = isArray(station.dashboards) ?  station.dashboards : [null]\n\n    return dashboards[0]\n}\n\nexport const getRouteIndexInRoutes = (processRouteIds, routeId) => {\n    return processRouteIds.indexOf(routeId)\n}\n\nexport const isStationInRoutes = (routes, stationId) => {\n    let containsStation = false\n\n    for(const currRoute of routes) {\n        if(containsStation) return containsStation\n\n            const {\n                load,\n                unload\n            } = currRoute || {}\n\n        const {\n            station: loadStationId\n        } = load || {}\n\n        const {\n            station: unloadStationId\n        } = unload || {}\n\n        if((loadStationId === stationId) || (unloadStationId === stationId)) containsStation = true\n    }\n\n    return containsStation\n}","export const SET_MODE = 'SET_MODE'\nexport const SET_ACTION = 'SET_ACTION'\nexport const SET_WIDTH = 'SET_WIDTH'\nexport const SET_OPEN = 'SET_OPEN'\n","export const WIDGET_PAGE_LOADED = 'WIDGET_PAGE_LOADED'\nexport const WIDGET_XY_COORDINATES = 'WIDGET_XY_COORDINATES'\nexport const WIDGET_LOADED = 'WIDGET_LOADED'\nexport const HOVER_STATION_INFO = 'HOVER_STATION_INFO'\n","import axios from 'axios';\n// import * as log from 'loglevel';\n\nimport logger from '../logger'\n\nimport { apiIPAddress } from '../settings/settings'\nconst operator = 'dashboards'\nconst log = logger.getLogger('Api')\n\nexport async function getDashboards() {\n    try {\n        const response = await axios({\n            method: 'get',\n            url: apiIPAddress() + operator,\n            headers: {\n                'X-API-Key': '123456',\n                'Access-Control-Allow-Origin': '*'\n            }\n        });\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n\n}\n\nexport async function deleteDashboards(ID) {\n    try {\n        const response = await axios({\n            method: 'DELETE',\n            url: apiIPAddress() + operator + '/' + ID,\n            headers: {\n                'Accept': 'application/json',\n                'X-API-Key': '123456',\n                'Access-Control-Allow-Origin': '*'\n            },\n        });\n\n        // Success 🎉\n        // log.debug('response',response);\n        // const data = response.data;\n        // const dataJson = JSON.parse(data)\n        return response;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}\n\nexport async function postDashboards(dashboards) {\n    try {\n        const response = await axios({\n            method: 'POST',\n            url: apiIPAddress() + operator,\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'application/json',\n                'Access-Control-Allow-Origin': '*'\n            },\n            data: dashboards\n        });\n\n        // Success 🎉\n        // log.debug('response',response);\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        // log.debug('response data json',dataJson);\n\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}\n\nexport async function putDashboards(dashboard, ID) {\n\n    try {\n        const response = await axios({\n            method: 'PUT',\n            url: apiIPAddress() + operator + '/' + ID,\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'text/html',\n                'Access-Control-Allow-Origin': '*'\n            },\n            data: dashboard\n        });\n\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}\n","import styled, {css} from \"styled-components\";\nimport { Draggable } from 'react-smooth-dnd';\nimport {rowCss} from \"../card_editor/card_editor.style\";\nimport * as commonCss from \"../../../../../common_css/common_css\";\n\nexport const Container = styled.div`\n \n     height: fit-content;\n  \n\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    overflow: hidden;\n        \n    background: white;\n    border-radius: 0.6rem;\n  \tborder: 3px solid ${props => props.color};\n  \n    outline: none;\n    &:focus {\n        outline: none;\n    }\n\n    letter-spacing: 1.5px;\n    box-shadow: 2px 2px 2px rgba(0, 0, 0, 0.5);\n    \n    outline: none;\n    user-select: none;\n\n    transition: transform 0.2s ease;\n\n    cursor: grab;\n    &:active {\n        box-shadow: 2px 2px 2px rgba(0,0,0,0.5);\n        transform: translateY(-2px);\n        cursor: grabbing;\n    }\n\n  &:hover {\n    box-shadow: 2px 2px 2px rgba(0,0,0,0.5);\n    transform: translateY(-2px);\n    cursor: grabbing;\n  }\n    \n    color: black;\n  \n  ${props => props.selectable && (props.isSelected ? selectedCss : notSelectedCss)};\n  ${props => props.containerStyle};\n`\n\nconst selectedCss = css`\n\t${commonCss.goodGlow};\n\n  &:active {\n    ${commonCss.goodGlow};\n    transform: translateY(-2px);\n    cursor: grabbing;\n  }\n\n  &:hover {\n    ${commonCss.goodGlow};\n    transform: translateY(-2px);\n    cursor: grabbing;\n  }\n`\n\nconst notSelectedCss = css`\n  filter: contrast(70%);\n`\n\nexport const Row = styled.div`\n    display: flex;\n    width: 100%;\n    border-bottom: 1px solid ${props => props.theme.bg.quaternary};\n    justify-content: space-between;\n    padding: .25rem 0 .25rem 0;\n`\n\nexport const ContentContainer = styled.div`\n\tpadding: 0.5rem .25rem 0rem .25rem;\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n`\n\nexport const CardName = styled.span`\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-weight: 600;\n`\n\nexport const Count = styled.span`\n\tfont-size: ${props => props.theme.fontSize.sz4};\n`\n\nexport const LotName = styled.span`\n  font-size: ${props => props.theme.fontSize.sz6};\n  //overflow: hidden;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`\n\nexport const FooterBar = styled.div`\n\theight: fit-content;\n\tbackground: ${props => props.theme.bg.septenary};\n\t// background: ${props => props.color};\n\tdisplay: flex;\n\tjustify-content: space-between;\n\tpadding: 0 1rem 0 1rem;\n  font-size: ${props => props.theme.fontSize.sz4};\n`\n\nexport const HeaderBar = styled.div`\n\theight: fit-content;\n\tbackground: ${props => props.theme.bg.septenary};\n  \t//background: ${props => props.color};\n\tdisplay: flex;\n\tjustify-content: flex-start;\n\tpadding: 0 0rem 0 1rem;\n  font-size: ${props => props.theme.fontSize.sz3};\n`\n\nexport const StyledDraggable = styled(Draggable)`\n\t.smooth-dnd-ghost .vertical .smooth-dnd-draggable-wrapper {\n\t\tbackground: blue;\n\t\tpadding: 2rem;\n\t}\n`\n\nexport const DatesContainer = styled.span`\n\tdisplay: inline-flex;\n\talign-items: center;\n\tjustify-content: center;\n    width: fit-content;\n    \n`\n\nexport const DateItem = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: center;\n\n\t\n\t&:hover {\n\t\tcursor: pointer;\n\t}\n\t\n`\n\nexport const DateArrow = styled.i`\n\tmargin-left: .35rem;\n\tmargin-right: .35rem;\n\tcolor: ${props => props.theme.bg.secondary};\n`\n\nexport const DateText = styled.span`\n\nfont-size: ${props => props.theme.fontSize.sz4};\n\n`\n\nexport const Label = styled.span`\n    font-size: ${props => props.theme.fontSize.sz4};\n    font-weight: 600;\n`","import React, {useState} from \"react\";\nimport {useSelector} from \"react-redux\";\nimport * as styled from \"./card.style\";\nimport { Draggable } from 'react-smooth-dnd';\nimport PropTypes from \"prop-types\";\nimport TextField from \"../../../../basic/form/text_field/text_field\";\n\n\n\nfunction hashCode(str) { // java String#hashCode\n    var hash = 0;\n    for (var i = 0; i < str.length; i++) {\n        hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    return hash;\n}\n\nfunction intToRGB(i){\n    var c = (i & 0x00FFFFFF)\n        .toString(16)\n        .toUpperCase();\n\n    return \"00000\".substring(0, 6 - c.length) + c;\n}\n\n\n\n\nconst Card = (props) => {\n    const {\n        name,\n        index,\n        id,\n        onClick,\n        count,\n        objectName,\n        lotName,\n        lotId = 2,\n        start_date,\n        end_date,\n        containerStyle,\n        selectable,\n        isSelected\n    } = props\n\n    const startDateText = ((start_date?.month + 1) && start_date?.day && start_date?.year) ?  (start_date.month + 1) + \"/\" + start_date.day + \"/\" + start_date.year : \"Start\"\n    const endDateText = ((end_date?.month + 1) && end_date?.day && end_date?.year) ?  (end_date.month + 1) + \"/\" + end_date.day + \"/\" +end_date.year : \"End\"\n\n    const lotColor= \"#\" + intToRGB(hashCode(lotId))\n\n    return(\n        <styled.StyledDraggable key={id} index={index}>\n            <styled.Container\n                selectable={selectable}\n                isSelected={isSelected}\n                onClick={onClick}\n                color={lotColor}\n                containerStyle={containerStyle}\n            >\n                <styled.HeaderBar\n                    color={lotColor}\n                >\n                    <styled.CardName>{name}</styled.CardName>\n                </styled.HeaderBar>\n                <styled.ContentContainer>\n\n                    <styled.Row>\n                        <styled.Label>Dates</styled.Label>\n                    <styled.DatesContainer>\n                        <styled.DateItem>\n                            <styled.DateText>{startDateText}</styled.DateText>\n                        </styled.DateItem>\n\n                        <styled.DateArrow className=\"fas fa-arrow-right\"></styled.DateArrow>\n\n                        <styled.DateItem>\n                            <styled.DateText>{endDateText}</styled.DateText>\n                        </styled.DateItem>\n                    </styled.DatesContainer>\n                    </styled.Row>\n\n                    <styled.Row style={{border: \"none\"}}>\n                        <styled.Label>Quantity</styled.Label>\n                        <styled.Count>{count}</styled.Count>\n                    </styled.Row>\n\n\n\n\n\n\n                </styled.ContentContainer>\n\n\n                {/*<styled.FooterBar*/}\n                {/*    color={lotColor}*/}\n                {/*>*/}\n\n\n                {/*    {objectName &&*/}\n                {/*        <styled.Count style={{marginRight: \"1rem\"}}>{objectName}:</styled.Count>*/}\n                {/*    }*/}\n\n\n                {/*</styled.FooterBar>*/}\n\n            </styled.Container>\n        </styled.StyledDraggable>\n    )\n}\n\n// Specifies propTypes\nCard.propTypes = {\n    isSelected: PropTypes.bool,\n    selectable: PropTypes.bool\n};\n\n// Specifies the default values for props:\nCard.defaultProps = {\n    isSelected: false,\n    selectable: false\n};\n\nexport default Card","import  store  from \"../redux/store/index\";\n\n// import logger\nimport log from \"../logger.js\";\n\nconst logger = log.getLogger(\"Configuration\");\n\n// disable defaut logging\n//console.log = () => {};\n\nexport const mirURL = (url) => {\n    // const mirURL = url\n    const mirURL = \"10.1.10.35\";\n    const prefix = \"http://\";\n    const URL = prefix + mirURL;\n    return URL;\n};\n\nexport const apiIPAddress = () => {\n    const storeState = store.getState();\n    let apiIPAddress = \"\";\n    let hostServerIpAddress = \"\";\n\n    /**\n     * READ ME: Do not change IP address here. Go to the settings tab in the interface, select Non Local API IP Address and type in the api ip address\n     * If non local api is true, then the server is running on an IP address entered\n     */\n\n    if (!!storeState.localReducer && !!storeState.localReducer.localSettings && storeState.localReducer.localSettings.non_local_api) {\n\n        // If there is no api use the local host\n        if (storeState.localReducer.localSettings.non_local_api_ip === undefined) {\n            return apiIPAddress = 'http://' + 'localhost' + ':5000/api/'\n        } else {\n            hostServerIpAddress = storeState.localReducer.localSettings.non_local_api_ip;\n            return apiIPAddress = 'http://' + hostServerIpAddress + ':5000/api/'\n        }\n    } else {\n        return apiIPAddress = 'http://' + window.location.hostname + ':5000/api/'\n    }\n};\n\nstore.subscribe(apiIPAddress);\n","import styled, { css } from 'styled-components'\nimport * as commonCss from \"../../common_css/common_css\";\n\nexport const HilContainer = styled.div`\n    position: absolute;\n    // right: 1rem;\n    // top: .5rem;\n    // left: 1rem;\n    // bottom: 2rem;\n    //margin: .5rem 1rem 2rem 1rem;\n    width: 98%;\n    height: 98%;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%,-50%);\n\n    z-index: 1000;\n    border-radius: 1rem;\n    box-shadow: 0 0.2rem 0.4rem 0rem #303030;\n    display: flex;\n    /* flex-flow: row; */\n    flex-direction: column;\n    background-color: white;\n\n    //overflow-y: scroll;\n     overflow: hidden;\n\n    ::-webkit-scrollbar {\n        display: none;  /* Safari and Chrome */\n    }\n\n`\n\nexport const HilInputContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    margin-bottom: 3rem;\n    margin-top: 1rem;\n`\n\nexport const HilInput = styled.input`\n    margin: 1rem 1rem;\n    border-radius: .5rem;\n    text-align: center;\n    width: 8rem;\n    font-size: 2rem;\n    -webkit-appearance: none !important;\n    &:focus{\n        outline: 0 !important;\n        border-color: #56d5f5;\n    }\n`\nexport const HilInputIconContainer = styled.div`\n    display: flex;\n    flex-direction:row;\n    height: 3.3rem;\n\n    margin-left:0.4rem;\n    margin-right:0.4rem;\n    margin-top:1rem;\n\n    border-radius: 0.5rem;\n    border: 0.2rem solid;\n    border-color: ${props => props.theme.bg.quinary};\n    background-color: ${props => props.theme.bg.quinary};\n\n\n    &:hover {\n        cursor: pointer;\n    }\n\n    &:active{\n        filter: brightness(85%);\n        text-shadow: none;\n    }\n`\nexport const HilInputIconText = styled.h1`\n  font-size: 2.5rem;\n  font-weight: 500;\n  padding-right:.3rem;\n  user-select: none;\n\n  text-shadow: 0.05rem 0.05rem 0.15rem #303030;\n  transition: text-shadow 0.1s ease, filter 0.1s ease;\n\n\n`\nexport const HilInputIcon = styled.i`\n    padding-top: .45rem;\n    margin-left:.5rem;\n    margin-right:.5rem;\n    font-size: 2rem;\n    text-shadow: 0.05rem 0.05rem 0.2rem #303030;\n    transition: text-shadow 0.1s ease, filter 0.1s ease;\n    color: #90eaa8;\n\n`\n\nexport const HilExitModal = styled.i`\n\n    font-size: 5rem;\n    text-shadow: 0.05rem 0.05rem 0.2rem #303030;\n    transition: text-shadow 0.1s ease, filter 0.1s ease;\n    //padding-left:2rem;\n    //padding-top:1rem;\n    margin-right: 1rem;\n\n    &:hover {\n        cursor: pointer;\n    }\n\n    &:active{\n        filter: brightness(85%);\n        text-shadow: none;\n    }\n`\n\nexport const HilBorderContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    position: relative;\n    flex: 1;\n    overflow: auto;\n\n`\n\nexport const HilButtonContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    width: 100%;\n    max-width: 50rem;\n    margin-top: 2rem;\n\n    @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n        padding: 0rem 2rem;\n    }\n\n\n\n`\n\nexport const LotSelectorContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n\n    width: 100%;\n\n    overflow: hidden;\n`\n\nexport const LotsContainer = styled.div`\n    display: flex;\n    position: relative;\n    flex-direction: column;\n    width: 100%;\n    overflow: auto;\n    flex: 1;\n    /* padding: 2rem 1rem 1rem 1rem; */\n    padding: 1rem;\n    align-items: center;\n`\n\nexport const NoLotsContainer = styled.div`\n    display: flex;\n    position: relative;\n    flex-direction: column;\n    width: 100%;\n    flex: 1;\n    align-items: center;\n    justify-content: center;\n`\n\nexport const NoLotsText = styled.span`\n    font-size: ${props => props.theme.fontSize.sz1};\n    font-family: ${props => props.theme.font.primary};\n`\n\n\nexport const SubtitleContainer = styled.div`\n    display: flex;\n    width: 100%;\n    overflow: auto;\n    justify-content: center;\n    padding-bottom:1rem;\n`\n\nexport const FooterContainer = styled.div`\n    background: ${props => props.theme.bg.septenary};\n    border-top: 1px solid ${props => props.theme.bg.tertiary};\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: .5rem;\n    flex-direction: row;\n`\n\n\nexport const HilMessage = styled.h3`\n    display: flex;\n    font-family: ${props => props.theme.font.primary};\n    justify-content: center;\n    align-self: center;\n\n    //padding-top: 1rem;\n    //margin-top: 3rem;\n    padding: 0;\n    margin: 0;\n    font-size: ${props => props.theme.fontSize.sz1};\n    text-align: center;\n`\n\nexport const HilSubtitleMessage = styled.h4`\n    display: flex;\n    font-family: ${props => props.theme.font.primary};\n    justify-content: center;\n    margin-bottom: 1.5rem;\n    //margin-top: 3rem;\n    padding: 0;\n    margin: 0;\n    font-size: 1.6rem;\n    text-align: center;\n`\n\nexport const HilSubText = styled.span`\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz3};\n`\n\nexport const LotDropdownContainer = styled.div`\n  width: 50%;\n  margin-top: 2rem;\n  display: flex;\n  flex-direction: column;\n`\n\nconst iconButtonCss = css`\n    text-shadow: 0.05rem 0.05rem 0.2rem #303030;\n    //transition: text-shadow 0.1s ease, filter 0.1s ease;\n    &:hover {\n        cursor: pointer;\n        filter: brightness(85%);\n    }\n\n    &:active{\n        filter: brightness(85%);\n        text-shadow: none;\n    }\n\n    background: none;\n    outline: none;\n    border: none;\n\n    &:focus {\n        outline: none;\n    }\n`\n\nexport const DeselectLotIcon = styled.button`\n    ${iconButtonCss};\n    font-size: 3rem;\n    position: absolute;\n    top: 0;\n    left: 0;\n    transform: translate(-25%,-25%);\n    color: red;\n`\n\nexport const LotTitle = styled.span`\n  display: inline-flex;\n  font-family: ${props => props.theme.font.primary};\n  justify-content: center;\n  align-self: center;\n  align-items: center;\n  font-size: ${props => props.theme.fontSize.sz1};\n  text-align: center;\n`\n\nexport const HilTimer = styled.p`\n    padding: 0;\n    margin: 0;\n    display: flex;\n    justify-content: center;\n    font-family: ${props => props.theme.font.primary};\n    font-weight: bold;\n    font-size: ${props => props.theme.fontSize.sz2};\n    color: ${props => props.theme.fg.primary};\n`\n\n\nconst HilButtonCss = css`\n  border: none;\n\n    border-radius: 1rem;\n    box-shadow: 0 0.1rem 0.2rem 0rem #303030;\n    height: 100%;\n    min-height: 5rem;\n    max-height: 7rem;\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    transition: background-color 0.25s ease, filter 0.1s ease;\n    background-color: ${props => props.color};\n\n    margin-bottom: 2rem;\n\n    filter: brightness(${props => props.filter});\n\n    &:focus{\n        outline: 0 !important\n    }\n\n    &:active{\n        box-shadow: none;\n        filter: brightness(85%);\n    }\n\n    @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n        height: 9rem;\n    }\n`\nexport const ColumnContainer = styled.div`\n  display: flex;\n    flex-direction: column;\n`\n\nexport const RowContainer = styled.div`\n  display: flex;\n    flex-direction: row;\n`\n\nexport const Header = styled.div`\n    display:flex;\n    flex-direction: row;\n    width: 100%;\n    background: ${props => props.theme.bg.septenary};\n    border-bottom: 1px solid ${props => props.theme.bg.tertiary};\n    align-items: center;\n    justify-content: space-around;\n    align-items: center;\n    padding: .5rem 1rem;\n`\n\nexport const HeaderMainContent = styled.div`\n    display: flex;\n    width: 100%;\n    align-items: center;\n    justify-content: center;\n    align-items: center;\n    margin-bottom: 1rem;\n`\n\n\nexport const HilIcon = styled.i`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    //margin: auto auto;\n    color:  ${props => props.color};\n    fill: green;\n    font-size: 2.5rem;\n    margin-right: 1rem;\n    &:hover {\n        cursor: pointer;\n    }\n\n    &:active{\n        filter: brightness(85%)\n    }\n`\n\nexport const HilButton = styled.button`\n    ${HilButtonCss};\n    align-items: center;\n    justify-content: center;\n\n    //min-height: 5rem;\n    //height: 5rem;\n    //max-height: 5rem;\n    //width: fit-content;\n    display: flex;\n    flex-direction: row;\n    padding: 0rem 3rem;\n    align-items: center;\n    justify-content: center;\n\n\n`\n\nexport const LotButton = styled.button`\n    ${HilButtonCss};\n    align-items: center;\n    justify-content: center;\n    min-height: 5rem;\n    height: 5rem;\n    width: 100%;\n    color: black;\n    ${props => !props.isSelected && \"filter: grayscale(80%)\"};\n    // border: ${props => props.isSelected ? \"1px solid cyan\" : \"none\"};\n\n     background-color: #805858;\n    margin-bottom: 2rem;\n`\n\nexport const FooterButton = styled.button`\n    ${HilButtonCss};\n\n    min-height: 5rem;\n    height: 5rem;\n    max-height: 5rem;\n    width: fit-content;\n\n    margin-left: 0.5rem;\n    margin-right: 0.5rem;\n    margin-bottom: 0rem;\n    display: flex;\n    flex-direction: row;\n    padding: 0rem 3rem;\n    align-items: center;\n    justify-content: center;\n\n`\n\n\n\nexport const LotButtonText = styled.p`\n    color:  black;\n    font-size: 2rem;\n    margin: 0;\n    padding: 0;\n`\nexport const LotTitleDescription = styled.span`\ncolor:  black;\n    font-size: 2rem;\n    margin: 0;\n    padding: 0;\n    margin-right: 1rem;\n`\n\nexport const SelectedLotContainer = styled.div`\n    // background: red;\n    display: flex;\n    //padding: .5rem;\n    align-items: center;\n    //margin-bottom: 1rem;\n    //padding: .25rem 2.5rem;\n    //m\n\n`\n\nexport const SelectedLotName = styled.div`\n    display: flex;\n    align-items: center;\n    background: ${props => props.theme.bg.quinary};\n    padding: .5rem;\n    border-radius: 1rem;\n    padding: .25rem 2.5rem;\n    min-height: 3.5rem;\n\n`\n\nexport const InvisibleItem = styled.div`\n    visibility: hidden;\n    margin-left: auto;\n    height: 1rem;\n    width: 1rem;\n\n`\n\nexport const LotTitleName = styled.span`\n    // color:  white;\n    font-size: 2rem;\n    margin: 0;\n    padding: 0;\n\n`\n\nexport const EditLotIcon = styled.button`\n    ${iconButtonCss};\n    color: white;\n    margin-left: 2rem;\n    font-size: 1.5rem;\n\n\n`\n\nexport const HilButtonText = styled.p`\n    color:  ${props => props.color};\n    font-size: 2rem;\n    margin: 0;\n    padding: 0;\n`\n\nexport const HilButtonQuantityText = styled.p`\n    color:  ${props => props.color};\n    font-size: 2rem;\n    margin-left: 1.5rem;\n    padding-top: .6rem;\n`\n\nexport const CardContainer = styled.div`\n    width: 80%;\n`\n\n\n","import axios from 'axios';\nimport log from \"../logger\"\n\nimport { apiIPAddress } from '../settings/settings'\nconst operator = 'task_queue'\n\nconst logger = log.getLogger(\"TaskQueue\")\n\nexport async function getTaskQueue() {\n    try {\n        const response = await axios({\n            method: 'get',\n            url: apiIPAddress() + operator,\n            headers: {\n                'X-API-Key': '123456',\n                'Access-Control-Allow-Origin': '*'\n            }\n        });\n        // Success 🎉\n        const data = response.data;\n\n        const dataJson = JSON.parse(data)\n\n        return dataJson;\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        throw error\n        log.debug('error', error);\n    }\n\n\n}\n\nexport async function postTaskQueue(taskQueueItem) {\n    try {\n        const response = await axios({\n            method: 'post',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'application/json',\n                'Access-Control-Allow-Origin': '*'\n            },\n            data: taskQueueItem,\n            url: apiIPAddress() + operator,\n        });\n\n        // Success 🎉\n        log.debug('postTaskQueue: response', response);\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        log.debug('dataJson', dataJson)\n        log.debug('getSchedulesdataJson', dataJson)\n        return dataJson;\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            console.error('postTaskQueue: error.response.data', error.response.data);\n            console.error('postTaskQueue: error.response.status', error.response.status);\n            console.error('postTaskQueue: error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            console.error('postTaskQueue: error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            console.error('postTaskQueue: error.message', error.message);\n        }\n        throw error\n        console.error('postTaskQueue: error', error);\n    }\n\n\n}\n\nexport async function deleteTaskQueueAll() {\n    try {\n        const response = await axios({\n            method: 'delete',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'application/json',\n                'Access-Control-Allow-Origin': '*'\n            },\n            url: apiIPAddress() + operator,\n        });\n\n        // Success 🎉\n        // log.debug('deleteTaskQueueAll: response',response);\n        const data = response.data;\n\n        return data;\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            console.error('deleteTaskQueueAll: error.response.data', error.response.data);\n            console.error('deleteTaskQueueAll: error.response.status', error.response.status);\n            console.error('deleteTaskQueueAll: error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            console.error('deleteTaskQueueAll: error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            console.error('deleteTaskQueueAll: error.message', error.message);\n        }\n        throw error\n        console.error('deleteTaskQueueAll: error', error);\n    }\n\n\n}\n\n\nexport async function deleteTaskQueueItem(id) {\n    try {\n        const response = await axios({\n            method: 'delete',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'application/json',\n                'Access-Control-Allow-Origin': '*'\n            },\n            url: apiIPAddress() + operator + '/' + id,\n        });\n\n        // Success 🎉\n        // log.debug('deleteTaskQueueItem: response',response);\n        const data = response.data;\n\n        return data;\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            console.error('deleteTaskQueueItem: error.response.data', error.response.data);\n            console.error('deleteTaskQueueItem: error.response.status', error.response.status);\n            console.error('deleteTaskQueueItem: error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            console.error('deleteTaskQueueItem: error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            console.error('deleteTaskQueueItem: error.message', error.message);\n        }\n        throw error\n    }\n\n\n}\n\nexport async function putTaskQueueItem(item, ID) {\n    try {\n        const response = await axios({\n            method: 'PUT',\n            url: apiIPAddress() + operator + '/' + ID,\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'text/html',\n                'Access-Control-Allow-Origin': '*'\n            },\n            data: item\n        });\n\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}","import axios from 'axios';\n// import * as log from 'loglevel';\n\nimport logger from '../logger'\n\nimport { apiIPAddress } from '../settings/settings'\nconst operator = 'cards'\nconst log = logger.getLogger('Api')\n\nexport async function getCard(cardId) {\n    try {\n        const response = await axios({\n            method: 'get',\n            url: apiIPAddress() + operator + \"/\" + cardId,\n            headers: {\n                'X-API-Key': '123456',\n                'Access-Control-Allow-Origin': '*'\n            }\n        });\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n\n}\n\nexport async function getCards() {\n    try {\n        const response = await axios({\n            method: 'get',\n            url: apiIPAddress() + operator,\n            headers: {\n                'X-API-Key': '123456',\n                'Access-Control-Allow-Origin': '*'\n            }\n        });\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n\n}\n\n\nexport async function getProcessCards(processId) {\n    try {\n        const response = await axios({\n            method: 'get',\n            url: apiIPAddress() + \"processes/\" + processId + \"/cards\",\n            headers: {\n                'X-API-Key': '123456',\n                'Access-Control-Allow-Origin': '*'\n            }\n        });\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n\n}\n\nexport async function deleteCard(ID) {\n    try {\n        const response = await axios({\n            method: 'DELETE',\n            url: apiIPAddress() + operator + '/' + ID,\n            headers: {\n                'Accept': 'application/json',\n                'X-API-Key': '123456',\n            },\n        });\n\n        // Success 🎉\n        // log.debug('response',response);\n        // const data = response.data;\n        // const dataJson = JSON.parse(data)\n        return response;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}\n\nexport async function postCard(card) {\n    try {\n        const response = await axios({\n            method: 'POST',\n            url: apiIPAddress() + operator,\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'application/json',\n                'Access-Control-Allow-Origin': '*'\n            },\n            data: card\n        });\n\n        // Success 🎉\n        // log.debug('response',response);\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        // log.debug('response data json',dataJson);\n\n\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}\n\nexport async function putCard(card, ID) {\n    try {\n        const response = await axios({\n            method: 'PUT',\n            url: apiIPAddress() + operator + '/' + ID,\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'text/html'\n            },\n            data: JSON.stringify(card)\n        });\n\n        // Success 🎉\n        // log.debug('response',response);\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}\n","export const SET_CONDITIONS_API = 'SET_CONDITIONS_API';\nexport const SET_SCHEDULES_API = 'SET_SCHEDULES_API';\nexport const SET_DASHBOARDS_API = 'SET_DASHBOARDS_API';\nexport const SET_SKILLS_API = 'SET_SKILLS_API';\nexport const SET_DASHBOARD_BUTTONS_API = 'SET_DASHBOARD_BUTTONS_API';\nexport const SET_STATUS_API = 'SET_STATUS_API';\nexport const SET_TASK_QUEUE_API = 'SET_TASK_QUEUE_API';\nexport const SET_TASKS_API = 'SET_TASKS_API';\nexport const STOP_API_CALLS = 'STOP_API_CALLS'\n\nexport const GET_ = 'GET_';\nexport const POST_ = 'POST_';\nexport const DELETE_ = 'DELETE_';\nexport const PUT_ = 'PUT_';\n\nexport const _STARTED = '_STARTED';\nexport const _SUCCESS = '_SUCCESS';\nexport const _FAILURE = '_FAILURE';\n","import React, { useState } from \"react\";\nimport { isEquivalent } from \"../../../methods/utils/utils\";\nimport {useField, useFormikContext} from \"formik\";\n\n// Updates fields in parent form\nconst useChange = (fieldName) => {\n\tconst { setFieldValue, setFieldTouched, validateOnChange, validateOnBlur, validateField, validateForm, ...context } = useFormikContext();\n\tconst [field, meta] = useField(fieldName ? fieldName : \"null\");\n\n\tlet value\n\tif(fieldName) {\n\t\tvalue = meta?.value || {}\n\t}\n\telse {\n\t\tvalue = context.values || {}\n\t}\n\n\tconst {\n\t\tchanged: changedSet\n\t} = value || {}\n\n\tconst [changed, setChanged] = useState(false);\n\tconst [initialValue, setInitialValue] = useState(value);\n\n\tReact.useEffect(() => {\n\n\t\t// if values have changed from initial values, set changed to true\n\n\t\tif(!changed) {\n\n\t\t\tconst issEquivalent = isEquivalent(initialValue, value)\n\n\n\t\t\tif(!issEquivalent) {\n\t\t\t\tsetChanged(true);\n\t\t\t\tsetFieldValue(fieldName ? `${fieldName}.changed` : 'changed', true);\n\t\t\t}\n\t\t}\n\n\t\telse {\n\t\t\tif(!changedSet) {\n\t\t\t\tsetChanged(false)\n\t\t\t\tsetInitialValue(value)\n\t\t\t}\n\t\t}\n\n\t\t// if values are changed back to original value, set changed to false\n\t\t// if(changed) {\n\t\t// \tconsole.log(\"beeep\")\n\t\t// \tif(issEquivalent) {\n\t\t// \t\tconsole.log(\"ayooo\")\n\t\t// \t\tsetChanged(false);\n\t\t// \t\tparentForm.setFieldValue(\"changed\", false);\n\t\t// \t}\n\t\t// }\n\n\t}, [value]);\n\n\t// handle mount and dismount\n\tReact.useEffect(() => {\n\t\t/* add any mount logic here\n\n\n\t\t */\n\n\t\t// dismount\n\t\treturn () => {\n\t\t\t// set changed to true\n\t\t\t// parentForm.setFieldValue(\"changed\", true);\n\t\t};\n\t}, []);\n};\n\nexport default useChange","// TASKS types\nexport const TASKS = 'TASKS';\nexport const TASK = 'TASK';\n\nexport const ANALYSIS = 'ANALYSIS';\n\nexport const GET_TASKS = 'GET_TASKS'\nexport const GET_TASKS_STARTED = 'GET_TASKS_STARTED'\nexport const GET_TASKS_SUCCESS = 'GET_TASKS_SUCCESS'\nexport const GET_TASKS_FAILURE = 'GET_TASKS_FAILURE'\n\nexport const GET_TASK = 'GET_TASK'\nexport const GET_TASK_STARTED = 'GET_TASK_STARTED'\nexport const GET_TASK_SUCCESS = 'GET_TASK_SUCCESS'\nexport const GET_TASK_FAILURE = 'GET_TASK_FAILURE'\n\nexport const POST_TASK = 'POST_TASK'\nexport const POST_TASK_STARTED = 'POST_TASK_STARTED'\nexport const POST_TASK_SUCCESS = 'POST_TASK_SUCCESS'\nexport const POST_TASK_FAILURE = 'POST_TASK_FAILURE'\n\nexport const PUT_TASK = 'PUT_TASK'\nexport const PUT_TASK_STARTED = 'PUT_TASK_STARTED'\nexport const PUT_TASK_SUCCESS = 'PUT_TASK_SUCCESS'\nexport const PUT_TASK_FAILURE = 'PUT_TASK_FAILURE'\n\nexport const DELETE_TASK = 'DELETE_TASK'\nexport const DELETE_TASK_STARTED = 'DELETE_TASK_STARTED'\nexport const DELETE_TASK_SUCCESS = 'DELETE_TASK_SUCCESS'\nexport const DELETE_TASK_FAILURE = 'DELETE_TASK_FAILURE'\n\nexport const ADD_TASK = 'ADD_TASK'\nexport const SET_TASKS = 'SET_TASKS'\nexport const UPDATE_TASK = 'UPDATE_TASK'\nexport const UPDATE_TASKS = 'UPDATE_TASKS'\nexport const REMOVE_TASK = 'REMOVE_TASK'\nexport const REMOVE_TASKS = 'REMOVE_TASKS'\nexport const SET_TASK_ATTRIBUTES = 'SET_TASK_ATTRIBUTES'\nexport const VALIDATE_TASK = 'VALIDATE_TASK'\nexport const SELECT_TASK = 'SELECT_TASK'\nexport const SET_SELECTED_TASK = 'SET_SELECTED_TASK'\nexport const DESELECT_TASK = 'DESELECT_TASK'\nexport const EDITING_TASK = 'EDITING_TASK'\n","export const CARD_DRAGGING = 'CARD_DRAGGING'\nexport const COLUMN_HOVERING = 'COLUMN_HOVERING'\nexport const SET_SIZE = \"SET_SIZE\"","import {DEVICE_CONSTANTS} from \"./device_constants\";\nimport uuid from 'uuid'\n\nexport const ROUTE_TYPES = {\n    PUSH: \"push\",\n    PULL: \"pull\"\n}\n\n\n/*\n* NOTE: DO NOT GENERATE ID HERE, OTHERWISE IT WILL ONLY BE GENERATED ONCE ON LOAD AND NEW TASKS WILL ALL HAVE THE SAME ID\n* */\nexport const defaultTask = {\n    name: '',\n    obj: null,\n    type: ROUTE_TYPES.PUSH,\n    quantity: 1,\n    device_types: [],\n    handoff: true,\n    track_quantity: true,\n    map_id: null,\n    new: true,\n    processes: [],\n    load: {\n        position: null,\n        station: null,\n        sound: null,\n        instructions: 'Load',\n        timeout: '09:00'\n    },\n    unload: {\n        position: null,\n        station: null,\n        sound: null,\n        instructions: 'Unload'\n    },\n}","import React, { useState, useMemo, useEffect } from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useParams, useHistory } from 'react-router-dom'\nimport { useTimer } from 'react-timer-hook'\n\nimport * as styled from './hil_modals.style';\nimport useWindowSize from '../../hooks/useWindowSize'\n\n// Import Components\nimport Textbox from '../basic/textbox/textbox'\nimport HILSuccess from './hil_modals_content/hil_success'\nimport DropDownSearch from \"../basic/drop_down_search_v2/drop_down_search\";\nimport DropDownSearchField from \"../basic/form/drop_down_search_field/drop_down_search_field\";\nimport Button from \"../basic/button/button\";\n\n// Import Actions\nimport { postTaskQueue, putTaskQueue, deleteTaskQueueItem } from '../../redux/actions/task_queue_actions'\nimport { postEvents } from '../../redux/actions/events_actions'\nimport { getTasks } from '../../redux/actions/tasks_actions'\n\n// Import API\nimport { putTaskQueueItem } from '../../api/task_queue_api'\n\n// Import Utils\nimport { deepCopy } from '../../methods/utils/utils'\nimport { getCards } from \"../../redux/actions/card_actions\";\nimport { sortBy } from \"../../methods/utils/card_utils\";\nimport { SORT_MODES } from \"../../constants/common_contants\";\nimport Card from \"../side_bar/content/cards/card/card\";\nimport { getRouteProcesses, getLoadStationId } from \"../../methods/utils/route_utils\";\n\n\n/**\n * Handles what type of HIL to display depending on the status\n */\nconst HILModals = (props) => {\n\n    const {\n        hilMessage,\n        hilType,\n        taskQuantity,\n        taskQueueID,\n        item\n    } = props\n\n    const {\n        dashboard: dashboardId\n    } = item || {}\n\n    const dispatch = useDispatch()\n    const dispatchGetCards = () => dispatch(getCards())\n    const dispatchTaskQueueItemClicked = (id) => dispatch({ type: 'TASK_QUEUE_ITEM_CLICKED', payload: id })\n    const disptachHILResponse = (response) => dispatch({ type: 'HIL_RESPONSE', payload: response })\n    const disptachPutTaskQueue = async (item, id) => await dispatch(putTaskQueue(item, id))\n    const dispatchSetActiveHilDashboards = (active) => dispatch({ type: 'ACTIVE_HIL_DASHBOARDS', payload: active })\n    const dispatchLocalHumanTask = (bol) => dispatch({ type: 'LOCAL_HUMAN_TASK', payload: bol })\n\n    const hilTimers = useSelector(state => { return state.taskQueueReducer.hilTimers })\n    const tasks = useSelector(state => { return state.tasksReducer.tasks })\n    const taskQueue = useSelector(state => state.taskQueueReducer.taskQueue)\n    const activeHilDashboards = useSelector(state => state.taskQueueReducer.activeHilDashboards)\n    const taskQueueItemClicked = useSelector(state => state.taskQueueReducer.taskQueueItemClicked)\n    const dashboardOpen = useSelector(state => state.dashboardsReducer.dashboardOpen)\n    const dashboards = useSelector(state => state.dashboardsReducer.dashboards) || {}\n    const objects = useSelector(state => state.objectsReducer.objects)\n    const cards = useSelector(state => state.cardsReducer.cards)\n\n    const [quantity, setQuantity] = useState(taskQuantity)\n    const [selectedTask, setSelectedTask] = useState(null)\n    const [associatedTask, setAssociatedTask] = useState(null)\n    const [trackQuantity, setTrackQuantity] = useState(null)\n    const [selectedLot, setSelectedLot] = useState(null)\n    const [isProcessTask, setIsProcessTask] = useState(true)\n    const [availableLots, setAvailableLots] = useState([])\n    const [selectedDashboard, setSelectedDashboard] = useState(null)\n    const [showLotSelector, setShowLotSelector] = useState(false)\n    const [didDisplayLots, setDidDisplayLots] = useState(false)\n    const [didSelectInitialLot, setDidSelectInitialLot] = useState(false)\n    const [hilLoadUnload, setHilLoadUnload] = useState('')\n    const [dataLoaded, setDataLoaded] = useState(false)\n    const [lotFilterValue, setLotFilterValue] = useState('')\n    const [shouldFocusLotFilter, setShouldFocusLotFilter] = useState('')\n    const [changeQtyMouseHold, setChangeQtyMouseHold] = useState('')\n    const [sortMode, setSortMode] = useState(SORT_MODES.END_ASCENDING)\n    const [lotsAtStation, setLotsAtStation] = useState(false)\n    const [taskHasProcess, setTaskHasProcess] = useState(false)\n    const [noLotsSelected, setNoLotsSelected] = useState(false)\n\n    const size = useWindowSize()\n    const windowWidth = size.width\n\n    const {\n        name: dashboardName,\n        station: stationId, //\"c754a665-f756-4c74-a7c5-e8c014039ba3\"\n    } = selectedDashboard || {}\n\n    const currentTask = tasks[item.task_id]\n\n    const {\n        type,\n        load,\n        unload\n    } = currentTask || {}\n\n    const {\n        station: unloadStationId\n    } = unload || {}\n\n    const {\n        station: loadStationId\n    } = load || {}\n\n    const {\n        name: selectedLotName,\n        _id: selectedLotId,\n        bins\n    } = selectedLot || {}\n\n    const currentBin = bins ? bins[loadStationId] : {}\n    const {\n        count\n    } = currentBin || {}\n\n    // If the qty goes below 0, then set to 0. You can never send negative parts\n    if (quantity < 0) {\n        setQuantity(0)\n    }\n\n    // if number of available lots >= 5, auto focus lot filter text box\n    useEffect(() => {\n        if (availableLots.length >= 5) {\n            setShouldFocusLotFilter(true)\n        }\n    }, [availableLots.length])\n\n    // load card data on load for selecting lot\n    useEffect(() => {\n        // get dashboard info from item\n        const dashboard = dashboards[dashboardId]\n        setSelectedDashboard(dashboard)\n    }, [dashboards])\n\n    // handles initial display of lot selector\n    useEffect(() => {\n\n        const currentTask = tasks[item.task_id]\n        const routeProcesses = getRouteProcesses(currentTask?._id).map((currProcess) => currProcess._id) || []\n\n        //If the task doesn't belong to a process, skip the lot selector screen and go straight to HIL modal\n        if (!!routeProcesses[0]) {\n            setTrackQuantity(currentTask.track_quantity)\n            setTaskHasProcess(true)\n            // Only show lot selector if they're cards loaded, lots have not been dispalyed yet, it's a load hil and there's available lots\n            if (!didDisplayLots && hilLoadUnload && hilLoadUnload !== 'unload') {\n                setShowLotSelector(true)\n                setDidDisplayLots(true)\n            }\n        }\n\n        else {\n            setSelectedLot(null) // clear selected lot\n            setShowLotSelector(false) // hide lot selector\n            setTrackQuantity(true)\n        }\n\n\n    }, [availableLots, didDisplayLots, hilLoadUnload, isProcessTask])\n\n    /*\n    * Get dropdownsearch options for cards\n    *\n    * Filter out cards that don't belong to the same station\n    * Each option only needs to contain the card's id and a label to display, the extaneous information can be left out\n    *\n    * */\n    useEffect(() => {\n\n        const taskProcesses = getRouteProcesses(selectedTask?._id).map((currProcess) => currProcess._id)\n\n        if ((taskProcesses && Array.isArray(taskProcesses) && (taskProcesses.length > 0))) {\n            setIsProcessTask(true)\n\n            let stationCards = Object.values(cards).filter((currCard) => {\n                const {\n                    bins,\n                    process_id: currCardProcessId\n                } = currCard || {}\n\n                if (bins) {\n                    if (bins[loadStationId] && bins[loadStationId].count > 0 && (taskProcesses.includes(currCardProcessId))) return true\n                }\n            })\n\n            if (sortMode) {\n                sortBy(stationCards, sortMode)\n            }\n\n            if (stationCards && Array.isArray(stationCards) && stationCards.length > 0) {\n                if ((stationCards.length === 1) && !selectedLot && !didSelectInitialLot) {\n                    setSelectedLot(stationCards[0])\n                    setDidSelectInitialLot(true)\n                }\n                setAvailableLots(stationCards)\n            }\n        }\n\n        else {\n            // setIsProcessTask(false)\n        }\n\n\n\n\n    }, [cards, selectedTask])\n\n    useEffect(() => {\n        if (count && quantity && (quantity > count)) setQuantity(parseInt(count))\n\n\n    }, [selectedLot])\n\n    // Changes quantity on Mouse hold\n    useEffect(() => {\n        const interval = setInterval(() => {\n\n            switch (changeQtyMouseHold) {\n                case 'decrementTen':\n                    if (count) {\n                        if (quantity > count) {\n                            // quantity should not exceed count, it may have been set higher before a lot was selected\n                            // reduce quantity to lot count\n                            setQuantity(count)\n                        }\n                        else {\n                            // quantity cannot be negative\n                            if (quantity - 10 > 0) setQuantity(quantity => quantity - 10)\n                        }\n                    }\n                    else {\n                        // quantity cannot be negative\n                        if (quantity - 10 > 0) setQuantity(quantity => quantity - 10)\n                    }\n\n                    break;\n\n                case 'decrementOne':\n                    if (count) {\n                        if (quantity > count) {\n                            // quantity should not exceed count, it may have been set higher before a lot was selected\n                            // reduce quantity to lot count\n                            setQuantity(count)\n                        }\n                        else {\n                            // quantity cannot be negative\n                            if (quantity > 0) setQuantity(quantity => quantity - 1)\n                        }\n                    }\n                    else {\n                        // quantity cannot be negative\n                        if (quantity > 0) setQuantity(quantity => quantity - 1)\n                    }\n\n                    break;\n\n                case 'incrementOne':\n                    if (count) {\n                        if (quantity < count) {\n                            setQuantity(quantity => quantity + 1)\n                        }\n\n                        else {\n                            setQuantity(count)\n                        }\n\n                    }\n                    // otherwise quantity can be anything\n                    else {\n                        setQuantity(quantity => quantity + 1)\n                    }\n\n                    break;\n\n                case 'incrementTen':\n                    if (count) {\n                        if (quantity + 10 < count) {\n                            setQuantity(quantity => quantity + 10)\n                        }\n                        else {\n                            setQuantity(parseInt(count))\n                        }\n\n                    }\n                    // otherwise quantity can be anything\n                    else {\n                        setQuantity(quantity => quantity + 10)\n                    }\n            }\n\n        }, 200);\n        return () => clearInterval(interval)\n    }, [changeQtyMouseHold]\n    )\n\n\n\n    // Use Effect for when page loads, handles wether the HIL is a load or unload\n    useEffect(() => {\n        dispatchGetCards()\n\n        const currentTask = tasks[item.task_id]\n        setSelectedTask(currentTask)\n        if (currentTask) {\n            if (!!currentTask.associated_task) setAssociatedTask(tasks[currentTask.associated_task])\n        }\n\n        // If the task's load location of the task q item matches the item's location then its a load hil, else its unload\n        if (currentTask && currentTask?.load?.station === item.hil_station_id || !!item.dashboard) {\n            // load\n            setHilLoadUnload('load')\n            setShowLotSelector(true)\n        } else {\n            // unload\n            setHilLoadUnload('unload')\n        }\n\n\n        setDataLoaded(true)\n        // On unmount, set the task q item to none\n        return () => {\n            dispatchTaskQueueItemClicked('')\n            // dispatchLocalHumanTask(null)\n        }\n\n    }, [])\n\n    useEffect(() => {\n\n        if (!!item.quantity) {\n            setQuantity(item.quantity)\n        } else {\n            if (!!selectedLot) {\n                setQuantity(selectedLot.bins[loadStationId].count)\n            }\n            else { setQuantity(0) }\n        }\n\n    }, [selectedLot], [tasks])\n\n    useEffect(() => {\n        const currentTask = tasks[item.task_id]\n        const routeProcesses = getRouteProcesses(currentTask?._id).map((currProcess) => currProcess._id) || []\n\n\n        //If the route is part of a process and at least 1 lot is present display the\n        //fraction or quantity modal depending on what was chosen during route creation\n        //Else display quantity HIL\n        if (!!routeProcesses[0]) {\n            Object.values(cards).map((card) => {\n\n                if (!!card.bins[getLoadStationId(currentTask)]) {\n                    setLotsAtStation(true)\n\n                }\n            })\n        }\n\n    }, [tasks])\n\n    // Posts HIL Success to API\n    const onHilSuccess = async (fraction) => {\n\n\n        dispatchTaskQueueItemClicked('')\n\n        let newItem = {\n            ...item,\n            hil_response: true,\n            lot_id: selectedLotId\n        }\n\n        // If its a load, then add a quantity to the response\n        if (hilLoadUnload === 'load') {\n            // If track quantity then add quantity, or if noLotSelected then use quantity\n            if (!!selectedTask.track_quantity || !!noLotsSelected) {\n                newItem.quantity = quantity\n            }\n\n            // Else it's a fraction so tell the fraction amount\n            else {\n                newItem.fraction = fraction\n            }\n        }\n\n        // Deletes the dashboard id from active list for the hil that has been responded too\n        dispatchSetActiveHilDashboards(delete (activeHilDashboards[item.hil_station_id]))\n\n        const ID = deepCopy(taskQueueID)\n\n        delete newItem._id\n        delete newItem.dashboard\n\n        // This is used to make the tap of the HIL button respond quickly\n        disptachHILResponse(hilLoadUnload === 'load' ? 'load' : 'unload')\n        setTimeout(() => disptachHILResponse(''), 2000)\n\n        await disptachPutTaskQueue(newItem, ID)\n\n        // onLogHumanEvent()\n    }\n\n    // Posts HIL Postpone to API\n    // HIL Postpone will place the current task after the next task in the queue. (Delays task by 1 task)\n    const onHilPostpone = () => {\n        dispatchTaskQueueItemClicked('')\n    }\n\n\n    const onBlurQuantityInput = () => {\n        if (quantity > count) {\n            setQuantity(count)\n        }\n    }\n\n    // Posts HIL Failure to API\n    const onHilFailure = async () => {\n        let newItem = {\n            ...item,\n            hil_response: false\n        }\n\n        delete newItem._id\n\n        await putTaskQueueItem(newItem, taskQueueID)\n        dispatchTaskQueueItemClicked('')\n    }\n\n    // Posts event to back end for stats and tracking\n    const onLogHumanEvent = () => {\n\n        let event = {\n            object: null,\n            outgoing: false,\n            quantity: 0,\n            station: null,\n            time: null,\n        }\n\n        //Get the time\n        const time = Date.now() / 1000\n        const object = tasks[item.task_id].obj\n        const station = item.hil_station_id\n\n        let eventQuantity = 0\n        if (!!item.quantity) {\n            eventQuantity = item.quantity\n        } else {\n            eventQuantity = quantity\n        }\n\n        let outgoing = null\n        if (hilLoadUnload === 'load') {\n            outgoing = true\n        } else if (hilLoadUnload === 'unload') {\n            outgoing = false\n        } else (\n            outgoing = 'Unknown'\n        )\n\n        event.time = time\n        event.object = object\n        event.station = station\n        event.quantity = eventQuantity\n        event.outgoing = outgoing\n        // dispatchPostEvents(event)\n    }\n\n    const renderSelectedLot = () => {\n\n        return (\n            <>\n                {windowWidth < 700 ?\n                    <>\n                        {taskHasProcess && //If the task isn't part of a process don't render the choose lot stuff on the HIL\n                            <styled.SelectedLotContainer style={{ flexDirection: 'column', paddingBottom: '1rem' }}>\n\n                                {selectedLot ?\n                                    <styled.LotTitleDescription style={{ fontSize: '1.5rem' }}>Selected Lot:</styled.LotTitleDescription>\n                                    :\n                                    <styled.FooterButton\n                                        onClick={() => {\n                                            setShowLotSelector(true)\n                                            setNoLotsSelected(false)\n                                        }}\n                                    >\n\n                                        <styled.LotTitleDescription>Select Lot</styled.LotTitleDescription>\n                                    </styled.FooterButton>\n                                }\n\n                                {(selectedLot) &&\n                                    <styled.SelectedLotName>\n                                        {selectedLotName &&\n                                            <styled.LotTitleName>{selectedLotName}</styled.LotTitleName>\n                                        }\n                                        {!showLotSelector &&\n                                            <styled.EditLotIcon\n                                                className=\"fas fa-edit\"\n                                                onClick={() => {\n                                                    setShowLotSelector(true)\n                                                }}\n                                            />\n                                        }\n                                    </styled.SelectedLotName>\n                                }\n                            </styled.SelectedLotContainer>\n                        }\n                    </>\n                    :\n                    <>\n                        {taskHasProcess && //If the task isn't part of a process don't render the choose lot stuff on the HIL\n                            <styled.SelectedLotContainer>\n\n                                {selectedLot ?\n                                    <styled.LotTitleDescription>Selected Lot:</styled.LotTitleDescription>\n                                    :\n                                    <styled.FooterButton\n                                        onClick={() => {\n                                            setShowLotSelector(true)\n                                            setNoLotsSelected(false)\n                                        }}\n                                    >\n\n                                        <styled.LotTitleDescription>Select Lot</styled.LotTitleDescription>\n                                    </styled.FooterButton>\n                                }\n\n                                {(selectedLot) &&\n                                    <styled.SelectedLotName>\n                                        {selectedLotName &&\n                                            <styled.LotTitleName>{selectedLotName}</styled.LotTitleName>\n                                        }\n                                        {!showLotSelector &&\n                                            <styled.EditLotIcon\n                                                className=\"fas fa-edit\"\n                                                onClick={() => {\n                                                    setShowLotSelector(true)\n                                                }}\n                                            />\n                                        }\n                                    </styled.SelectedLotName>\n                                }\n                            </styled.SelectedLotContainer>\n                        }\n                    </>}\n            </>\n        )\n    }\n\n    const renderUnloadOptions = () => {\n        return (\n            <>\n                <styled.Header>\n\n                    <styled.ColumnContainer>\n                        <styled.HilMessage>{hilMessage}</styled.HilMessage>\n                        {/* Only Showing timers on load at the moment, will probably change in the future */}\n                        {\n                            !!hilTimers[item._id] && hilLoadUnload === 'load' &&\n                            <styled.HilTimer>{hilTimers[item._id]}</styled.HilTimer>\n                        }\n                    </styled.ColumnContainer>\n\n                </styled.Header>\n\n                <styled.LotSelectorContainer>\n                    <styled.LotsContainer>\n\n                        <styled.HilButton color={'#90eaa8'}\n                            onClick={() => {\n                                onHilSuccess()\n                            }}\n                        >\n                            <styled.HilIcon\n                                className='fas fa-check'\n                                color={'#1c933c'}\n                            />\n                            {/* <styled.HilButtonText color={'#1c933c'}>1</styled.HilButtonText> */}\n                        </styled.HilButton>\n\n                    </styled.LotsContainer>\n                </styled.LotSelectorContainer>\n            </>\n        )\n    }\n\n    const renderFractionOptions = () => {\n\n        const fractionOptions = ['1', '3/4', '1/2', '1/4']\n        const fractionDecimals = ['1', '0.75', '0.5', '0.25']\n\n        return (\n            <>\n                <styled.Header>\n\n                    <styled.ColumnContainer>\n                        <styled.HilMessage>{hilMessage}</styled.HilMessage>\n                        {/* Only Showing timers on load at the moment, will probably change in the future */}\n                        {\n                            !!hilTimers[item._id] && hilLoadUnload === 'load' &&\n                            <styled.HilTimer>{hilTimers[item._id]}</styled.HilTimer>\n                        }\n                    </styled.ColumnContainer>\n\n                    {/* <styled.InvisibleItem /> */}\n\n                </styled.Header>\n\n                <styled.LotSelectorContainer>\n\n                    <styled.LotsContainer>\n                        <styled.SubtitleContainer>\n                            <styled.HilSubtitleMessage>Select a fraction:</styled.HilSubtitleMessage>\n                        </styled.SubtitleContainer>\n\n\n                        {fractionOptions.map((value, ind) => {\n                            const decimal = fractionDecimals[ind]\n                            return (\n                                <styled.HilButton\n                                    color={'#90eaa8'}\n                                    filter={Math.cbrt(eval(value))}\n                                    onClick={() => {\n                                        onHilSuccess(eval(value))\n                                    }}\n                                >\n                                    {/* <styled.HilIcon\n                                className='fas fa-check'\n                                color={'#1c933c'}\n                            /> */}\n                                    <styled.RowContainer>\n                                        <styled.HilButtonText style={{ fontSize: '3rem' }} color={'#1c933c'}>{value}</styled.HilButtonText>\n                                        {!!count &&\n                                            <styled.HilButtonQuantityText color={'#1c933c'}>{'(Quantity ' + Math.ceil(count * decimal) + ')'}</styled.HilButtonQuantityText>\n                                        }\n\n                                    </styled.RowContainer>\n                                </styled.HilButton>\n                            )\n                        })}\n\n                    </styled.LotsContainer>\n\n                    {(hilType === 'pull' || hilType === 'push') && hilLoadUnload === 'load' &&\n                        <styled.FooterContainer>\n\n                            {renderSelectedLot()}\n\n                            <styled.FooterButton style={{ marginBottom: '1rem', marginTop: \"1rem\", marginLeft: '1rem' }} color={'#ff9898'} onClick={onHilFailure}>\n                                <styled.HilIcon\n                                    style={{ marginBottom: 0, marginRight: \"1rem\", fontSize: \"2.5rem\" }}\n                                    className='fas fa-times'\n                                    color={'#ff1818'}\n                                />\n                                <styled.HilButtonText style={{ margin: 0, padding: 0 }} color={'#ff1818'}>Cancel</styled.HilButtonText>\n                            </styled.FooterButton>\n                        </styled.FooterContainer>\n                    }\n\n\n                </styled.LotSelectorContainer>\n            </>\n        )\n\n\n    }\n\n    const renderQuantityOptions = () => {\n\n        return (\n            <>\n\n                <styled.Header>\n\n                    <styled.ColumnContainer>\n                        <styled.HilMessage>{hilMessage}</styled.HilMessage>\n\n\n                        {/* Only Showing timers on load at the moment, will probably change in the future */}\n                        {\n                            !!hilTimers[item._id] && hilLoadUnload === 'load' &&\n                            <styled.HilTimer>{hilTimers[item._id]}</styled.HilTimer>\n                        }\n                    </styled.ColumnContainer>\n\n                    {/* <styled.InvisibleItem /> */}\n\n                </styled.Header>\n\n                <styled.LotSelectorContainer>\n\n                    <styled.LotsContainer style={{ justifyContent: hilLoadUnload === 'load' && \"space-between\" }}>\n\n\n\n                        <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            {\n                                (hilType === 'pull' || hilType === 'push') && hilLoadUnload === 'load' &&\n                                <>\n                                    <styled.HilMessage style={{ marginBottom: '1rem' }}>Enter Quantity</styled.HilMessage>\n\n                                    <styled.HilInputContainer>\n\n                                        {windowWidth > 590 &&\n                                            <styled.HilInputIconContainer\n                                                onClick={() => {\n\n                                                    if (count) {\n                                                        if (quantity > count) {\n                                                            // quantity should not exceed count, it may have been set higher before a lot was selected\n                                                            // reduce quantity to lot count\n                                                            setQuantity(count)\n                                                        }\n                                                        else {\n                                                            // quantity cannot be negative\n                                                            if (quantity - 10 >= 0) setQuantity(quantity - 10)\n                                                            else { setQuantity(0) }\n                                                        }\n                                                    }\n                                                    else {\n                                                        // quantity cannot be negative\n                                                        if (quantity - 10 >= 0) setQuantity(quantity - 10)\n                                                        else { setQuantity(0) }\n\n                                                    }\n\n                                                }}\n                                                onMouseDown={() => {\n                                                    setChangeQtyMouseHold('decrementTen')\n                                                }}\n                                                onMouseUp={() => {\n                                                    setChangeQtyMouseHold('')\n                                                }}\n                                            >\n                                                <styled.HilInputIcon\n                                                    className='fas fa-minus-circle'\n                                                    style={{ color: '#ff9898' }}\n                                                />\n                                                <styled.HilInputIconText style={{ color: '#ff9898' }}>10</styled.HilInputIconText>\n                                            </styled.HilInputIconContainer>\n                                        }\n\n                                        <styled.HilInputIconContainer\n                                            onClick={() => {\n\n                                                if (count) {\n                                                    if (quantity > count) {\n                                                        // quantity should not exceed count, it may have been set higher before a lot was selected\n                                                        // reduce quantity to lot count\n                                                        setQuantity(count)\n                                                    }\n                                                    else {\n                                                        // quantity cannot be negative\n                                                        if (quantity > 0) setQuantity(quantity - 1)\n                                                    }\n                                                }\n                                                else {\n                                                    // quantity cannot be negative\n                                                    if (quantity > 0) setQuantity(quantity - 1)\n                                                }\n\n                                            }}\n\n                                            onMouseDown={() => {\n                                                setChangeQtyMouseHold('decrementOne')\n                                            }}\n                                            onMouseUp={() => {\n                                                setChangeQtyMouseHold('')\n                                            }}\n                                        >\n                                            {\n\n                                            }      <styled.HilInputIcon\n                                                className='fas fa-minus-circle'\n                                                style={{ color: '#ff9898' }}\n                                            />\n                                            <styled.HilInputIconText style={{ color: '#ff9898' }}>1</styled.HilInputIconText>\n                                        </styled.HilInputIconContainer>\n\n\n                                        <styled.HilInput\n                                            type=\"number\"\n                                            onChange={(e) => {\n                                                // get value and parse to int to avoid string concat instead of addition / subtraction\n                                                const value = parseInt(e.target.value)\n\n                                                // if there is a lot with a count, the quantity cannot exceed the count\n                                                //  if (count) {\n                                                //    if (value <= count)\n                                                //}\n\n                                                // otherwise the value can be anything\n                                                //else {\n                                                setQuantity(value)\n                                                //}\n                                            }}\n                                            value={quantity}\n                                            style={quantity > count ? { backgroundColor: 'red' } : {}}\n                                            onBlur={onBlurQuantityInput}\n                                        />\n                                        <styled.HilInputIconContainer\n                                            onClick={() => {\n                                                // if there is a lot count, quantity cannot exceed lot count\n                                                if (count) {\n                                                    if (quantity < count) {\n                                                        setQuantity(quantity + 1)\n                                                    }\n\n                                                    // quantity is greater than count (probably was set before lot was selected), reduce to count\n                                                    else {\n                                                        setQuantity(parseInt(count))\n                                                    }\n\n                                                }\n                                                // otherwise quantity can be anything\n                                                else {\n                                                    setQuantity(quantity + 1)\n                                                }\n\n                                            }}\n\n                                            onMouseDown={() => {\n                                                setChangeQtyMouseHold('incrementOne')\n                                            }}\n                                            onMouseUp={() => {\n                                                setChangeQtyMouseHold('')\n                                            }}\n                                        >\n                                            <styled.HilInputIcon\n                                                className='fas fa-plus-circle'\n                                                style={{ color: '#90eaa8' }}\n                                            />\n                                            <styled.HilInputIconText style={{ color: '#90eaa8' }}>1</styled.HilInputIconText>\n                                        </styled.HilInputIconContainer>\n\n                                        {windowWidth > 590 &&\n                                            <styled.HilInputIconContainer\n                                                onClick={() => {\n                                                    // if there is a lot count, quantity cannot exceed lot count\n                                                    if (count) {\n                                                        if (quantity + 10 < count) {\n                                                            setQuantity(quantity + 10)\n                                                        }\n\n                                                        // quantity is greater than count (probably was set before lot was selected), reduce to count\n                                                        else {\n                                                            setQuantity(parseInt(count))\n                                                        }\n\n                                                    }\n                                                    // otherwise quantity can be anything\n                                                    else {\n                                                        setQuantity(quantity + 10)\n                                                    }\n\n                                                }}\n                                                onMouseDown={() => {\n                                                    setChangeQtyMouseHold('incrementTen')\n                                                }}\n                                                onMouseUp={() => {\n                                                    setChangeQtyMouseHold('')\n                                                }}\n                                            >\n                                                <styled.HilInputIcon\n                                                    className='fas fa-plus-circle'\n                                                    style={{ color: '#90eaa8' }}\n                                                />\n                                                <styled.HilInputIconText style={{ color: '#90eaa8' }}>10</styled.HilInputIconText>\n                                            </styled.HilInputIconContainer>\n                                        }\n\n                                    </styled.HilInputContainer>\n                                    {renderSelectedLot()}\n                                </>\n\n                            }\n\n\n                            {count &&\n                                <styled.HilSubText style={{ marginBottom: \"1rem\" }}>Available Lot Items: {count}</styled.HilSubText>\n                            }\n                        </div>\n\n                        <styled.HilButtonContainer>\n\n                            <styled.HilButton\n                                color={'#90eaa8'}\n                                onClick={() => {\n                                    onHilSuccess()\n                                }}\n                            >\n                                <styled.HilIcon\n                                    // onClick={() => {\n                                    //     onHilSuccess()\n                                    // }}\n                                    style={{ margin: 0, marginRight: \"1rem\", fontSize: \"2.5rem\" }}\n                                    className='fas fa-check'\n                                    color={'#1c933c'}\n\n                                />\n                                <styled.HilButtonText\n                                    color={'#1c933c'}\n                                    style={{ margin: 0, padding: 0 }}\n                                >\n                                    Confirm\n                                </styled.HilButtonText>\n                            </styled.HilButton>\n\n                            {((hilType === 'pull' && hilLoadUnload === 'load') || hilType === 'check') &&\n                                <styled.HilButton color={'#f7cd89'} onClick={onHilPostpone}>\n                                    <styled.HilIcon\n                                        style={{}}\n                                        // onClick={onHilPostpone}\n                                        className='icon-postpone'\n                                        color={'#ff7700'}\n                                        styled={{ marginTop: '.5rem' }}\n                                    />\n                                    <styled.HilButtonText\n                                        color={'#ff7700'}\n                                        style={{ margin: 0, padding: 0 }}\n                                    >\n                                        Postpone\n                                </styled.HilButtonText>\n                                </styled.HilButton>\n                            }\n\n                            {(hilType === 'pull' || hilType === 'push') && hilLoadUnload === 'load' &&\n\n                                <styled.HilButton color={'#ff9898'} onClick={onHilFailure}>\n                                    <styled.HilIcon\n                                        // onClick={onHilFailure}\n                                        className='fas fa-times'\n                                        color={'#ff1818'}\n                                    />\n                                    <styled.HilButtonText color={'#ff1818'}>Cancel</styled.HilButtonText>\n                                </styled.HilButton>\n                            }\n\n                        </styled.HilButtonContainer>\n                    </styled.LotsContainer>\n                </styled.LotSelectorContainer>\n            </>\n        )\n    }\n\n\n    const renderLotSelector = () => {\n        return (\n            <>\n                <styled.Header style={{ flexDirection: \"column\" }}>\n                    <styled.HeaderMainContent>\n\n                        <styled.ColumnContainer>\n                            <styled.HilMessage>Select Lot</styled.HilMessage>\n                        </styled.ColumnContainer>\n\n                    </styled.HeaderMainContent>\n\n                    <div style={{ display: \"flex\", maxWidth: \"50rem\", minWidth: \"1rem\", width: \"50%\" }}>\n                        <Textbox\n                            focus={shouldFocusLotFilter}\n                            placeholder='Filter lots...'\n                            onChange={(e) => {\n                                setLotFilterValue(e.target.value)\n                            }}\n                            textboxContainerStyle={{ flex: 1 }}\n                        />\n                    </div>\n                </styled.Header>\n                <styled.LotSelectorContainer>\n\n                    {availableLots.length > 0 ?\n                        <styled.LotsContainer>\n\n                            {availableLots\n                                .filter((currLot) => {\n\n                                    const {\n                                        name: currLotName,\n                                        _id: currLotId,\n                                        bins: currLotBins\n                                    } = currLot || {}\n\n                                    if (\n                                        currLotName\n                                            .toLowerCase()\n                                            .includes(lotFilterValue.toLowerCase())\n                                    ) {\n                                        return true\n                                    }\n                                    else {\n                                        return false\n                                    }\n                                })\n                                .map((currLot, lotIndex) => {\n                                    const {\n                                        _id: lotId,\n                                        name,\n                                        object_id,\n                                        cardId,\n                                        start_date,\n                                        end_date,\n                                        bins = {}\n                                    } = currLot\n\n                                    const count = bins[stationId]?.count\n\n                                    const isSelected = selectedLotId === lotId\n\n                                    // const lotName = lots[lot_id] ? lots[lot_id].name : null\n                                    const objectName = objects[object_id] ? objects[object_id].name : null\n\n                                    return (\n                                        <styled.CardContainer>\n                                            <Card\n                                                name={name}\n                                                start_date={start_date}\n                                                end_date={end_date}\n                                                objectName={objectName}\n                                                count={count}\n                                                id={lotId}\n                                                index={lotIndex}\n                                                isSelected={isSelected}\n                                                selectable={!!selectedLotId}\n                                                onClick={() => {\n                                                    // set selected lot and close lot selector\n                                                    setSelectedLot(currLot)\n                                                    setShowLotSelector(false)\n                                                }}\n                                                containerStyle={{ marginBottom: \"0.5rem\" }}\n                                            />\n                                        </styled.CardContainer>\n                                    )\n                                })\n                            }\n                        </styled.LotsContainer>\n\n                        :\n                        <styled.NoLotsContainer>\n                            <styled.NoLotsText>No lots available</styled.NoLotsText>\n                        </styled.NoLotsContainer>\n                    }\n\n                    <styled.FooterContainer>\n                        <styled.FooterButton\n                            color={'#90eaa8'}\n                            onClick={() => {\n                                setSelectedLot(null) // clear selected lot\n                                setNoLotsSelected(true)\n                                setShowLotSelector(false) // hide lot selector\n                            }}\n                        >\n                            <styled.HilButtonText\n                                style={{ margin: 0, padding: 0 }}\n                                color={'#1c933c'}\n                            >\n                                {\"Continue Without Lot\"}\n                            </styled.HilButtonText>\n                        </styled.FooterButton>\n\n                        <styled.FooterButton\n                            color={'#ff9898'}\n                            onClick={onHilFailure}\n                        >\n                            <styled.HilIcon\n                                className='fas fa-times'\n                                color={'#ff1818'}\n                                style={{ marginRight: '0.8rem' }}\n                            />\n                            <styled.HilButtonText\n                                style={{ margin: 0, padding: 0 }}\n                                color={'#ff1818'}\n                            >\n                                {\"Cancel\"}\n                            </styled.HilButtonText>\n\n\n                        </styled.FooterButton>\n                    </styled.FooterContainer>\n\n\n\n\n                </styled.LotSelectorContainer>\n            </>\n        )\n    }\n\n    /**\n     * Conditioinally renders HIL Modal based on type.\n     *\n     * Type 1: HIL Load Pull\n     * This type requires a quantity input, success, postpone, and cancel\n     * Requires a postpone becauses if someone requests (pulls) a object without\n     * the person loading being ready, they should be able to postopen until they are ready\n     *\n     * Type 2: HIL Load Push\n     * This type requires a quantity input, success and cancel\n     * No postpone because you're pushing objects to the next location.\n     * Meaning that your objects should be ready since you said they were\n     *\n     * Type 3: HIL Unload\n     * This type requires just a success button\n     * No Cancel, postpone or quantity button.\n     * Quantity is already taken care of in the load section, no objects should be lost in transportation.\n     * No postpone becasue your objects are already on the cart and ready to be taken off, plus the cart cant be used while objects are on it\n     * No cancel becasue the cart cant be used with objects on it\n     *\n     * Type 4: HIL Check\n     * This type requires a Yes of postpone button\n     * The purpose of a HIL check is to make sure the operator is ready to deliver parts.\n     * HIL Check will only show on a pull request\n     */\n\n    if (dataLoaded) {\n        return (\n            <styled.HilContainer >\n\n                {/*<styled.HilBorderContainer >*/}\n\n                {\n                    showLotSelector ?\n                        renderLotSelector()\n                        :\n                        !!selectedTask && hilLoadUnload === 'load' ?\n                            trackQuantity !== true && lotsAtStation === true && noLotsSelected !== true ?\n                                renderFractionOptions()\n                                :\n                                renderQuantityOptions()\n\n                            :\n                            renderUnloadOptions()\n                }\n\n\n\n\n                {/*</styled.HilBorderContainer>*/}\n\n            </styled.HilContainer>\n        )\n    }\n    else {\n        return null\n    }\n}\n\nexport default HILModals\n","export const GET = 'GET_';\nexport const POST = 'POST_';\nexport const DELETE = 'DELETE_';\nexport const PUT = 'PUT_';\nexport const SET = 'SET_';\n","import axios from 'axios';\nimport { apiIPAddress } from '../settings/settings'\nimport * as log from 'loglevel';\n\nconst operator = 'tasks'\n\nexport async function getTasks() {\n    try {\n        const response = await axios({\n            method: 'get',\n            url: apiIPAddress() + operator,\n            headers: {\n                'X-API-Key': '123456',\n                'Access-Control-Allow-Origin': '*'\n            }\n        });\n\n        // Success 🎉\n        // log.debug('getTasks :res:',response);\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        // log.debug('getTasks: dataJson: ', dataJson)\n        return dataJson;\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            console.error('error.response.data', error.response.data);\n            console.error('error.response.status', error.response.status);\n            console.error('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            console.error('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            console.error('error.message', error.message);\n        }\n        throw error\n        console.error('error', error);\n    }\n\n\n};\n\nexport async function getTask(id) {\n    // log.debug('getTask: id: ', id)\n    try {\n        const response = await axios({\n            method: 'get',\n            url: apiIPAddress() + operator + '/' + id,\n            headers: {\n                'X-API-Key': '123456',\n                'Access-Control-Allow-Origin': '*'\n            }\n        });\n        // Success 🎉\n        // log.debug('getTask: response: ', response);\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        // log.debug('getTask: dataJson:', dataJson)\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            console.error('getTask: error.response.data', error.response.data);\n            console.error('getTask: error.response.status', error.response.status);\n            console.error('getTask: error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            console.error('getTask: error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            console.error('getTask: error.message', error.message);\n        }\n        throw error\n        console.error('getTask: error', error);\n    }\n\n\n};\n\nexport async function postTask(task) {\n    // log.debug('postTask task:',task, JSON.stringify(task));\n    try {\n        const response = await axios({\n            method: 'post',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'text/html',\n                'Access-Control-Allow-Origin': '*'\n            },  \n            url: apiIPAddress() + operator,\n            data: JSON.stringify(task)\n        });\n\n        // Success 🎉\n        // log.debug('postTask: response: ', response);\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        // log.debug('postTask: dataJson: ', dataJson)\n        return dataJson;\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            console.error('postTask: error.response.data', error.response.data);\n            console.error('postTask: error.response.status', error.response.status);\n            console.error('postTask: error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            console.error('postTask: error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            console.error('postTask: error.message', error.message);\n        }\n        throw error\n        console.error('postTask: error', error);\n    }\n\n\n};\n\nexport async function deleteTask(id) {\n    // log.debug('deleteTask: id:',id)\n\n    try {\n        const response = await axios({\n            method: 'delete',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'application/json',\n                'Access-Control-Allow-Origin': '*'\n            },\n            url: apiIPAddress() + operator + '/' + id\n        });\n\n        // Success 🎉\n        // log.debug('deleteTask: response',response);\n        const data = response.data;\n\n        return response;\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        throw error\n        log.debug('error', error);\n    }\n\n\n};\n\nexport async function putTask(task, id) {\n    try {\n        const response = await axios({\n            method: 'put',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'application/json',\n                'Access-Control-Allow-Origin': '*'\n            },\n            url: apiIPAddress() + operator + '/' + id,\n            data: JSON.stringify(task)\n        });\n\n        // Success 🎉\n        // log.debug('putTask: response: ',response);\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        // log.debug('putTask: dataJson:', dataJson)\n        return dataJson;\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        throw error\n        log.debug('error', error);\n    }\n\n\n}\n","import {\n    GET_TASKS,\n    GET_TASKS_STARTED,\n    GET_TASKS_SUCCESS,\n    GET_TASKS_FAILURE,\n\n    GET_TASK,\n    GET_TASK_STARTED,\n    GET_TASK_SUCCESS,\n    GET_TASK_FAILURE,\n\n    POST_TASK,\n    POST_TASK_STARTED,\n    POST_TASK_SUCCESS,\n    POST_TASK_FAILURE,\n\n    PUT_TASK,\n    PUT_TASK_STARTED,\n    PUT_TASK_SUCCESS,\n    PUT_TASK_FAILURE,\n\n    DELETE_TASK,\n    DELETE_TASK_STARTED,\n    DELETE_TASK_SUCCESS,\n    DELETE_TASK_FAILURE,\n\n    ADD_TASK,\n    SET_TASKS,\n    UPDATE_TASK,\n    UPDATE_TASKS,\n    REMOVE_TASK,\n    SET_TASK_ATTRIBUTES,\n    SELECT_TASK,\n    SET_SELECTED_TASK,\n    DESELECT_TASK,\n    EDITING_TASK,\n    REMOVE_TASKS,\n} from '../types/tasks_types'\n\nimport { deepCopy } from '../../methods/utils/utils';\n\nimport * as api from '../../api/tasks_api'\nimport * as dashboardActions from \"./dashboards_actions\";\nimport {getRouteProcesses} from \"../../methods/utils/route_utils\";\nimport {willRouteDeleteBreakProcess} from \"../../methods/utils/processes_utils\";\nimport {useSelector} from \"react-redux\";\nimport * as processesActions from \"./processes_actions\";\nimport * as dashboardsActions from \"./dashboards_actions\";\n\n// get\n// ******************************\nexport const getTasks = () => {\n    return async (dispatch) => {\n\n        function onStart() {\n            dispatch({ type: GET_TASKS_STARTED });\n        }\n        function onSuccess(response) {\n            dispatch({ type: GET_TASKS_SUCCESS, payload: response });\n            return response;\n        }\n        function onError(error) {\n            dispatch({ type: GET_TASKS_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const tasks = await api.getTasks();\n\n            const normalizedTasks = {}\n            tasks.map((task) => {\n                normalizedTasks[task._id] = task\n            })\n\n            return onSuccess(normalizedTasks);\n        } catch (error) {\n            return onError(error);\n        }\n    };\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// get task details\n// ******************************\n// export const getTask = (task_id) => {\n//   return async dispatch => {\n\n//     function onStart() {\n//       dispatch({ type: GET_TASK_STARTED });\n//     }\n//     function onSuccess(response) {\n//       dispatch({ type: GET_TASK_SUCCESS, payload: response });\n//       return response;\n//     }\n//     function onError(error) {\n//       dispatch({ type: GET_TASK_FAILURE, payload: error });\n//       return error;\n//     }\n\n//     try {\n//       onStart();\n//       const task_details = await api.getTask(task_id);\n//       return onSuccess(task_details);\n//     } catch (error) {\n//       return onError(error);\n//     }\n//   };\n// };\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// post\n// ******************************\nexport const postTask = (task) => {\n    return async dispatch => {\n\n        function onStart() {\n            dispatch({ type: POST_TASK_STARTED });\n        }\n        const onSuccess = async (newTask) => {\n            await dispatch({ type: POST_TASK_SUCCESS, payload: newTask });\n            return newTask;\n        }\n        function onError(error) {\n            dispatch({ type: POST_TASK_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            if(!!task.new){\n                delete task.new\n            }\n            if(task.changed) {\n                delete task.changed\n            }\n            const newTask = await api.postTask(task);\n            return onSuccess(newTask);\n        } catch (error) {\n            return onError(error);\n        }\n    };\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// put\n// ******************************\nexport const putTask = (task, ID) => {\n    return async dispatch => {\n        function onStart() {\n            dispatch({ type: PUT_TASK_STARTED });\n        }\n        function onSuccess(updateTask) {\n            dispatch({ type: PUT_TASK_SUCCESS, payload: updateTask });\n            return updateTask;\n        }\n        function onError(error) {\n            dispatch({ type: PUT_TASK_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            let taskCopy = deepCopy(task)\n            if(!!taskCopy.new){\n                delete taskCopy.new\n            }\n            if(taskCopy.changed) {\n                delete taskCopy.changed\n            }\n            // delete taskCopy._id\n            const updateTask = await api.putTask(taskCopy, ID);\n            return onSuccess(updateTask)\n        } catch (error) {\n            return onError(error)\n        }\n    }\n}\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// delete\n// ******************************\nexport const deleteTask = (ID) => {\n    return async dispatch => {\n        function onStart() {\n            dispatch({ type: DELETE_TASK_STARTED });\n        }\n        function onSuccess(response) {\n            dispatch({ type: DELETE_TASK_SUCCESS, payload: ID });\n            return response;\n        }\n        function onError(error) {\n            dispatch({ type: DELETE_TASK_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const removeTask = await api.deleteTask(ID);\n            return onSuccess(ID)\n        } catch (error) {\n            return onError(error)\n        }\n    }\n}\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// delete\n// ******************************\nexport const deleteRouteClean = (routeId) => {\n    return async (dispatch, getState) => {\n\n        // remove route from all dashboards\n        await dispatch(dashboardsActions.removeRouteFromAllDashboards(routeId))\n\n        // remove route from all processes\n        await dispatch(processesActions.removeRouteFromAllProcesses(routeId))\n\n        // delete route\n        await dispatch(deleteTask(routeId));\n    }\n}\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// PUT clean\n// ******************************\nexport const putRouteClean = (route, routeId) => {\n    return async (dispatch, getState) => {\n\n        // put task\n        await dispatch(putTask(route, routeId));\n\n        // remove buttons associated with route at dashboards at the wrong station\n        await dispatch(dashboardsActions.removeRouteFromWrongDashboards(route))\n\n        // handle adding buttons to dashboards\n        await dispatch(dashboardsActions.addRouteToDashboards(route))\n    }\n}\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// POST clean\n// ******************************\nexport const postRouteClean = (route) => {\n    return async (dispatch, getState) => {\n\n        // post route\n        await dispatch(postTask(route));\n\n        // remove buttons associated with route at dashboards at the wrong station\n        await dispatch(dashboardsActions.removeRouteFromWrongDashboards(route))\n\n        // handle adding buttons to dashboards\n        await dispatch(dashboardsActions.addRouteToDashboards(route))\n    }\n}\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n//\n// ******************************\nexport const saveFormRoute = (formRoute) => {\n    return async (dispatch) => {\n\n        // extract values\n        const {\n            unsaved,        // remove key\n            new: isNew,     // remove key\n            changed,        // remove key\n            needsSubmit,    // remove key\n            obj = {},\n            ...remainingRoute\n        } = formRoute\n\n        // get objectId\n        const {\n            _id: objectId\n        } = obj || {}\n\n        // create payload\n        const payload = {\n            ...remainingRoute,\n            obj: objectId\n        }\n\n        // create new route\n        if(isNew) {\n            dispatch(postRouteClean(payload))\n        }\n\n        // update existing route\n        else {\n            dispatch(putRouteClean(payload, payload._id))\n        }\n    }\n}\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n\nexport const addTask = (task) => {\n    return { type: ADD_TASK, payload: { task } }\n}\n\nexport const setTasks = (tasks) => {\n    return { type: SET_TASKS, payload: tasks}\n}\n\nexport const updateTask = (task) => {\n    return { type: UPDATE_TASK, payload: { task } }\n}\n\nexport const updateTasks = (tasks) => {\n    return { type: UPDATE_TASKS, payload: { tasks } }\n}\n\nexport const removeTask = (id) => {\n    return { type: REMOVE_TASK, payload: { id } }\n}\n\nexport const removeTasks = (ids) => {\n    return { type: REMOVE_TASKS, payload: { ids } }\n}\n\nexport const setTaskAttributes = (id, attr) => {\n    return { type: SET_TASK_ATTRIBUTES, payload: { id, attr } }\n}\n\nexport const selectTask = (id) => {\n    return { type: SELECT_TASK, payload: { id } }\n}\n\nexport const setSelectedTask = (task) => {\n    return { type: SET_SELECTED_TASK, payload: { task }}\n}\n\nexport const deselectTask = () => {\n    return { type: DESELECT_TASK }\n}\n\nexport const editingTask = (bool) => {\n    return { type: EDITING_TASK, payload: bool }\n}\n","import styled from 'styled-components'\nimport { hexToRGBA, LightenDarkenColor, RGB_Linear_Shade } from '../../../methods/utils/color_utils';\n\n\nconst buttonTheme = (props) => {\n    if (props.disabled) { // Disabled\n        return (`\n            background-color: ${props.theme.bg.quinary};\n            color: ${props.theme.bg.senary};\n            border: none;`\n        )\n    } else if (props.secondary) { // Secondary\n        return (`\n            background: ${!!props.schema ? props.theme.schema[props.schema].gradient : props.theme.fg.primary};\n            color: ${props.theme.bg.octonary};\n            border: none;\n             \n            &:hover {\n                background-color: ${LightenDarkenColor(props.theme.bg.septenary, 10)}\n            }\n             `\n        )\n    } else { // Primary\n        return (`\n            border: 0.1rem solid ${props.theme.bg.octonary};\n            box-sizing: content-box;\n\n            ${!props.active && `\n                background-color: transparent;\n                color: ${props.theme.bg.octonary};\n\n                &:hover {\n                    color: ${!!props.schema ? props.theme.schema[props.schema].solid : props.theme.fg.primary};\n                    border-color: ${!!props.schema ? props.theme.schema[props.schema].solid : props.theme.fg.primary};\n                }`\n            }\n\n            ${props.active ? `\n                border-color: red;\n                color: ${props.theme.bg.tertiary};\n                background: ${!!props.schema ? props.theme.schema[props.schema].solid : props.theme.fg.primary};\n                border-color: transparent;\n\n                &:active {\n                    color: ${props.theme.bg.tertiary};\n                }\n                `\n                : `\n                &:active {\n                    color: ${props.theme.bg.tertiary};\n                    background: ${!!props.schema ? props.theme.schema[props.schema].solid : props.theme.fg.primary};\n                    border-color: transparent;\n                }`\n            }`\n        )\n    }\n}\n\nexport const SmallButton = styled.button`\n    display: inline-block;\n    height: 2rem;\n    line-height: 2rem;\n    text-align: center;\n    margin: 0.3rem 0.5rem 0.3rem 0.5rem;\n    user-select: none;\n\n    padding: 0 1rem 0 1rem;\n\n    font-size: ${props => props.theme.fontSize.sz3};\n    font-family: ${props => props.theme.font.primary};\n    font-weight: 500;\n\n    border-radius: 0.35rem;\n    border: none;\n\n    ${props => buttonTheme(props)}\n\n    &:focus {\n        outline: none;\n    }\n`;\n","import React from 'react';\nimport * as styled from './button.style'\n\n\nconst Button = (props) => {\n\n    const {\n      disabled,\n      onClick,\n      schema,\n      style,\n      secondary,\n      children,\n      label,\n    } = props\n\n\n    return (\n        <styled.SmallButton\n            onClick={!disabled ? onClick : () => {return}}\n            disabled={disabled}\n            schema={schema}\n            style={style}\n            secondary={secondary}\n            {...props} >\n\n        {children ?\n            children\n            :\n            label\n        }\n\n        </styled.SmallButton>\n    )\n};\n\nButton.defaultProps = {\n    secondary : false,\n    disabled: false\n};\n\nexport default Button;\n","import { denormalize, schema } from 'normalizr';\nimport { uuidv4 } from '../methods/utils/utils';\n\n// schedule schema\nexport const scheduleSchema = new schema.Entity(\n  // key\n  'schedules',\n  // definition\n  {\n    //condition: conditionSchema\n  },\n  // options\n  {\n    idAttribute: (value, parent, key) => {\n      return value._id.$oid\n    },\n\n    // processStrategy\n    processStrategy: (value, parent, key) => {\n      return {\n        _id: {\n          $oid: value._id.$oid ? value._id.$oid : null\n        },\n        id: value._id.$oid ? value._id.$oid : null,\n        name: value.name ? value.name : '',\n\n        days_on: value.days_on ? value.days_on : {\n          friday: false,\n          monday: false,\n          saturday: false,\n          sunday: false,\n          thursday: false,\n          tuesday: false,\n          wednesday: false\n        },\n\n        interval_on:  value.interval_on ? value.interval_on : false,\n        time_interval: value.time_interval ? value.time_interval : null,\n        map_id: value.map_id ? value.map_id : null,\n\n        schedule_on: value.schedule_on ? value.schedule_on : false,\n        start_time: value.start_time ? value.start_time : null,\n\n        stop_time_on: value.stop_time_on ? value.stop_time_on : false,\n        stop_time: value.stop_time ? value.stop_time : null,\n\n        task_id: value.task_id ? value.task_id : null,\n      };\n    }\n  },\n\n);\n\n// schema for list of schedules\nexport const schedulesSchema = [scheduleSchema]\n","import axios from 'axios';\nimport * as log from 'loglevel';\n\nimport { apiIPAddress } from '../settings/settings'\n\n//import store from '../redux/store'\nconst token = '123456' //store.getState().cognotoUserSession\n\nconst operator = 'stations'\n\nconst logger = log.getLogger('Stations_Api', \"Station\");\n\nexport async function getStations() {\n    try {\n        const response = await axios({\n            method: 'GET',\n            url: apiIPAddress() + operator,\n            headers: {\n                'X-API-Key': '123456',\n                'Access-Control-Allow-Origin': '*'\n            }\n        });\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        throw error\n    }\n\n\n}\n\nexport async function deleteStation(ID) {\n    try {\n        const response = await axios({\n            method: 'DELETE',\n            url: apiIPAddress() + operator + '/' + ID,\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'application/json',\n                'Access-Control-Allow-Origin': '*'\n            },\n        });\n\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n\n        console.log(dataJson)\n\n        return dataJson\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}\n\n\nexport async function postStation(station) {\n    try {\n        const response = await axios({\n            method: 'POST',\n            url: apiIPAddress() + operator,\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'application/json',\n                'Access-Control-Allow-Origin': '*'\n            },\n            data: JSON.stringify(station)\n        });\n\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}\n\nexport async function putStation(station, ID) {\n\n    try {\n        const response = await axios({\n            method: 'PUT',\n            url: apiIPAddress() + operator + '/' + ID,\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'text/html',\n                'Access-Control-Allow-Origin': '*'\n            },\n            data: station\n        });\n\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}\n\nexport async function getStationAnalytics(id, timeSpan) {\n    try {\n        const response = await axios({\n            method: 'PUT',\n            url: apiIPAddress() + operator + '/' + id + '/analysis',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'text/html',\n                'Access-Control-Allow-Origin': '*'\n            },\n            // A timespan is {time_span: 'day', index: 0}\n            data: timeSpan\n        });\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        return dataJson;\n\n\n    } catch (error) {\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        throw error\n    }\n\n\n}","import { normalize, schema } from 'normalizr';\n\nimport {\n    GET_STATIONS_STARTED,\n    GET_STATIONS_SUCCESS,\n    GET_STATIONS_FAILURE,\n\n    POST_STATION_STARTED,\n    POST_STATION_SUCCESS,\n    POST_STATION_FAILURE,\n\n    PUT_STATION_STARTED,\n    PUT_STATION_SUCCESS,\n    PUT_STATION_FAILURE,\n\n    DELETE_STATION_STARTED,\n    DELETE_STATION_SUCCESS,\n    DELETE_STATION_FAILURE,\n\n    ADD_STATION,\n    UPDATE_STATION,\n    UPDATE_STATIONS,\n    REMOVE_STATION,\n    SET_STATION_ATTRIBUTES,\n    SET_SELECTED_STATION,\n    EDITING_STATION,\n} from '../types/stations_types'\n\nimport uuid from 'uuid';\n\n// Import External Actions\nimport { deleteTask } from './tasks_actions'\nimport { deletePosition, putPosition, postPosition } from './positions_actions'\nimport { deleteDashboard, postDashboard } from './dashboards_actions'\n\n// Import utils\nimport { deepCopy } from '../../methods/utils/utils';\n\n// Import Schema\nimport { stationsSchema } from '../../normalizr/schema'\n\n// Import API\nimport * as api from '../../api/stations_api'\n\n// Import Store\nimport store from '../store/index'\n\n// get\n// ******************************\nexport const getStations = () => {\n    return async dispatch => {\n\n        function onStart() {\n            dispatch({ type: GET_STATIONS_STARTED });\n        }\n        function onSuccess(stations) {\n            dispatch({ type: GET_STATIONS_SUCCESS, payload: stations });\n            return stations;\n        }\n        function onError(error) {\n            dispatch({ type: GET_STATIONS_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const stations = await api.getStations();\n\n            const normalizedStations = !!normalize(stations, stationsSchema)?.entities?.stations ? normalize(stations, stationsSchema)?.entities?.stations : {}\n\n            return onSuccess(normalizedStations);\n        } catch (error) {\n            return onError(error);\n        }\n    };\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// post\n// ******************************\nexport const postStation = (station) => {\n    return async dispatch => {\n\n        function onStart() {\n            dispatch({ type: POST_STATION_STARTED });\n        }\n        function onSuccess(station) {\n            dispatch({ type: POST_STATION_SUCCESS, payload: station });\n            return station;\n        }\n        function onError(error) {\n            dispatch({ type: POST_STATION_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            let stationCopy = deepCopy(station)\n            stationCopy = await dispatch(onPostStation(stationCopy))\n            delete stationCopy.temp\n            delete stationCopy.new\n            const newStation = await api.postStation(stationCopy);\n            return onSuccess(newStation);\n        } catch (error) {\n            return onError(error);\n        }\n    };\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// put\n// ******************************\nexport const putStation = (station) => {\n    return async dispatch => {\n        function onStart() {\n            dispatch({ type: PUT_STATION_STARTED });\n        }\n        function onSuccess(station) {\n            dispatch({ type: PUT_STATION_SUCCESS, payload: station });\n            return station;\n        }\n        function onError(error) {\n            dispatch({ type: PUT_STATION_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            let stationCopy = deepCopy(station)\n            await dispatch(onSaveChildren())\n            delete stationCopy.temp\n            const updateStation = await api.putStation(stationCopy, stationCopy._id);\n            return onSuccess(updateStation)\n        } catch (error) {\n            return onError(error)\n        }\n    }\n}\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// put\n// ******************************\nexport const putStationWithoutSavingChildren = (station) => {\n    return async dispatch => {\n        function onStart() {\n            dispatch({ type: PUT_STATION_STARTED });\n        }\n        function onSuccess(station) {\n            dispatch({ type: PUT_STATION_SUCCESS, payload: station });\n            return station;\n        }\n        function onError(error) {\n            dispatch({ type: PUT_STATION_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            let stationCopy = deepCopy(station)\n            delete stationCopy.temp\n            const updateStation = await api.putStation(stationCopy, stationCopy._id);\n            return onSuccess(updateStation)\n        } catch (error) {\n            return onError(error)\n        }\n    }\n}\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// delete\n// ******************************\nexport const deleteStation = (ID) => {\n    return async dispatch => {\n        function onStart() {\n            dispatch({ type: DELETE_STATION_STARTED });\n        }\n        function onSuccess(id) {\n            dispatch({ type: DELETE_STATION_SUCCESS, payload: id });\n            return id;\n        }\n        function onError(error) {\n            dispatch({ type: DELETE_STATION_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const station = await dispatch(onDeleteStation(ID))\n            const removeStation = await api.deleteStation(station._id);\n            return onSuccess(ID)\n        } catch (error) {\n            return onError(error)\n        }\n    }\n}\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n\n// get Station Analytics\n// ******************************\nexport const getStationAnalytics = async (id, timeSpan) => {\n    try {\n        const stationAnalytics = await api.getStationAnalytics(id, timeSpan);\n        return stationAnalytics\n    } catch (error) {\n    }\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nexport const addStation = (station) => {\n    return { type: ADD_STATION, payload: station }\n}\n\nexport const updateStation = (station) => {\n    return { type: UPDATE_STATION, payload: station }\n}\n\nexport const updateStations = (stations, selectedStation, d3) => {\n    return { type: UPDATE_STATIONS, payload: { stations, selectedStation, d3 } }\n}\n\nexport const removeStation = (id) => {\n    // Have to use dispatch here because of onRemoveStationFunction\n    return async dispatch => {\n\n        const updatedId = await dispatch(onRemoveStation(id))\n        dispatch({ type: REMOVE_STATION, payload: updatedId })\n    }\n}\n\nexport const setStationAttributes = (id, attr) => {\n    return { type: SET_STATION_ATTRIBUTES, payload: { id, attr } }\n}\n\nexport const setSelectedStation = (station) => {\n    return { type: SET_SELECTED_STATION, payload: station }\n}\n\nexport const setEditingStation = (bool) => {\n    return { type: EDITING_STATION, payload: bool }\n}\n\n\n/**\n * Removes Station that is not on the backend yet\n * If the station has children, it deletes those as well\n * @param {*} id \n */\nconst onRemoveStation = (id) => {\n    const stationsState = store.getState().stationsReducer\n    let station = !!stationsState.selectedStation ? stationsState.selectedStation : stationsState.stations[id]\n\n    return async dispatch => {\n\n        if (!!station.children) {\n\n            // TODO: Fix this, in positions, it'll put the station to tell it's deleted, but the station is about to be deleted, so no need to put\n            station.children.forEach(async position => {\n\n                // Passes in true to tell that the deleted postion's associated station is being deleted too\n                // This way, it wont update the station \n                await dispatch(deletePosition(position, true))\n            })\n        }\n        return station._id\n    }\n}\n\n\nconst onDeleteStation = (id) => {\n\n    return async dispatch => {\n\n        const stationsState = store.getState().stationsReducer\n        const positionsState = store.getState().positionsReducer\n        const tasksState = store.getState().tasksReducer\n\n        let station = !!stationsState.selectedStation ? stationsState.selectedStation : stationsState.stations[id]\n\n        // If the station has children, delete them\n        if (!!station.children) {\n\n            // TODO: Fix this, in positions, it'll put the station to tell it's deleted, but the station is about to be deleted, so no need to put\n            station.children.forEach(async position => {\n\n                // Passes in true to tell that the deleted postion's associated station is being deleted too\n                // This way, it wont update the station \n                await dispatch(deletePosition(position, true))\n            })\n        }\n\n\n        // If the position is new, just remove it from the local station\n        // Since the position is new, it does not exist in the backend and there can't be any associated tasks\n        if (!!station.new) {\n            dispatch(removeStation(station._id))\n            return null\n        }\n\n        // Else delete in backend and delete any associated tasks\n        else {\n\n            // Delete associated dashboards\n            station.dashboards.forEach(async dashboard => {\n                await dispatch(deleteDashboard(dashboard))\n            })\n\n            // Sees if any tasks are associated with the position and delete them\n            const tasks = tasksState.tasks\n            Object.values(tasks).filter(task => {\n                return task.load.station === station._id || task.unload.station === station._id\n            }).forEach(async relevantTask => {\n                await dispatch(deleteTask(relevantTask._id))\n            })\n\n\n        }\n        return station\n    }\n}\n\nconst onPostStation = (station) => {\n    return async dispatch => {\n        // Add dashboard\n        let defaultDashboard = {\n            name: station.name + ' Dashboard',\n            buttons: [],\n            station: station._id\n        }\n\n        //// Now post the dashboard, and on return tie that dashboard to location.dashboards and put the location\n        const postedDashboard = await dispatch(postDashboard(defaultDashboard))\n        station.dashboards = [postedDashboard._id.$oid]\n\n        // Save Children\n        await dispatch(onSaveChildren())\n\n        return station\n    }\n}\n\nconst onSaveChildren = () => {\n\n    return async dispatch => {\n        const positionsState = store.getState().positionsReducer\n        const selectedStationChildrenCopy = positionsState.selectedStationChildrenCopy\n\n        // If there children Children Position, save them\n        if (!!selectedStationChildrenCopy) {\n            Object.values(selectedStationChildrenCopy).map(async (child, ind) => {\n                // Post\n                if (!!child.new) {\n                    await dispatch(postPosition(child))\n\n                }\n                // Put\n                else {\n                    await dispatch(putPosition(child))\n\n                }\n            })\n        }\n\n        return\n    }\n}","export const SCHEDULES = 'SCHEDULES';\nexport const SCHEDULE = 'SCHEDULE';\nexport const CARD = 'CARD';\nexport const CARDS = 'CARDS';\nexport const SHOW_EDITOR = 'CARDS';\nexport const LOT = 'LOT';\nexport const LOTS = 'LOTS';\nexport const PROCESS_CARDS = 'PROCESS_CARDS';\nexport const CARD_HISTORY = 'CARD_HISTORY';\nexport const DATA_PAGE = 'DATA_PAGE';\nexport const JUNK = 'JUNK';\nexport const REPORT_EVENT = 'REPORT_EVENT';\nexport const REPORT_EVENTS = 'REPORT_EVENTS';\nexport const DASHBOARDS = 'DASHBOARDS';\nexport const DASHBOARD = 'DASHBOARD';\n","import axios from 'axios';\nimport * as log from 'loglevel';\n\nimport { apiIPAddress } from '../settings/settings'\n\nimport store from '../redux/store'\nconst token = '123456'//store.getState().cognotoUserSession\n\nconst operator = 'positions'\n\nconst logger = log.getLogger('Positions_Api', \"Position\");\n\nexport async function getPositions() {\n    try {\n        const response = await axios({\n            method: 'get',\n            url: apiIPAddress() + operator,\n            headers: {\n                'X-API-Key': '123456',\n                'Access-Control-Allow-Origin': '*'\n            }\n        });\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        throw error\n    }\n\n\n}\n\nexport async function deletePosition(ID) {\n    try {\n        const response = await axios({\n            method: 'DELETE',\n            url: apiIPAddress() + operator + '/' + ID,\n            headers: {\n                'Accept': 'application/json',\n                'X-API-Key': '123456',\n                'Access-Control-Allow-Origin': '*'\n            },\n        });\n\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}\n\n\nexport async function postPosition(position) {\n    try {\n        const response = await axios({\n            method: 'POST',\n            url: apiIPAddress() + operator,\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'application/json',\n                'Access-Control-Allow-Origin': '*'\n            },\n            data: JSON.stringify(position)\n        });\n\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}\n\nexport async function putPosition(position, ID) {\n\n    try {\n        const response = await axios({\n            method: 'PUT',\n            url: apiIPAddress() + operator + '/' + ID,\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'text/html',\n                'Access-Control-Allow-Origin': '*'\n            },\n            data: position\n        });\n\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}\n\n","import { normalize, schema } from 'normalizr';\n\nimport {\n    GET_POSITIONS_STARTED,\n    GET_POSITIONS_SUCCESS,\n    GET_POSITIONS_FAILURE,\n\n    POST_POSITION_STARTED,\n    POST_POSITION_SUCCESS,\n    POST_POSITION_FAILURE,\n\n    PUT_POSITION_STARTED,\n    PUT_POSITION_SUCCESS,\n    PUT_POSITION_FAILURE,\n\n    DELETE_POSITION_STARTED,\n    DELETE_POSITION_SUCCESS,\n    DELETE_POSITION_FAILURE,\n\n    ADD_POSITION,\n    UPDATE_POSITION,\n    UPDATE_POSITIONS,\n    REMOVE_POSITION,\n    SET_POSITION_ATTRIBUTES,\n    REVERT_CHILDREN,\n    SET_SELECTED_POSITION,\n    EDITING_POSITION,\n    SET_SELECTED_STATION_CHILDREN_COPY\n} from '../types/positions_types'\n\nimport uuid from 'uuid';\n\nimport * as api from '../../api/positions_api'\n\n// Import Schema\nimport { positionsSchema } from '../../normalizr/schema'\n\n// Import External Actions\nimport { putStation, putStationWithoutSavingChildren, setStationAttributes, setSelectedStation } from './stations_actions'\nimport { deleteTask } from './tasks_actions'\nimport { putDevices } from './devices_actions'\n\n// Import Utils\nimport { deepCopy } from '../../methods/utils/utils';\n\n// Import Store\nimport store from '../store/index'\n\n// get\n// ******************************\nexport const getPositions = () => {\n    return async dispatch => {\n\n        function onStart() {\n            dispatch({ type: GET_POSITIONS_STARTED });\n        }\n        function onSuccess(positions) {\n            dispatch({ type: GET_POSITIONS_SUCCESS, payload: positions });\n            return positions;\n        }\n        function onError(error) {\n            dispatch({ type: GET_POSITIONS_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const positions = await api.getPositions();\n\n            let normalizedPositions = !!normalize(positions, positionsSchema).entities.positions ? normalize(positions, positionsSchema).entities.positions : {}\n\n            // Filter out entry positions\n            Object.values(normalizedPositions).map((pos) => {\n                if (pos.type === 'shelf_entry_position' || pos.type === \"charger_entry_position\") {\n                    delete normalizedPositions[pos._id]\n                }\n            })\n\n            return onSuccess(normalizedPositions);\n        } catch (error) {\n            return onError(error);\n        }\n    };\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// post\n// ******************************\nexport const postPosition = (position) => {\n    return async dispatch => {\n\n        function onStart() {\n            dispatch({ type: POST_POSITION_STARTED });\n        }\n        function onSuccess(position) {\n            dispatch({ type: POST_POSITION_SUCCESS, payload: position });\n            return position;\n        }\n        function onError(error) {\n            dispatch({ type: POST_POSITION_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            if (!('_id' in position)) {\n                position._id = uuid.v4()\n            }\n\n            // Was used for a bug that didnt exist\n            // if (position.rotation > 180) {\n            //     position.rotation = position.rotation - 360\n            // }\n\n            // else if (position.rotation < -180) {\n            //     position.rotation = position.rotation + 360\n            // }\n\n            delete position.temp\n            delete position.new\n            position.change_key = 'new'\n            const postedPosition = await api.postPosition(position);\n            return onSuccess(postedPosition);\n        } catch (error) {\n            return onError(error);\n        }\n    };\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// put\n// ******************************\nexport const putPosition = (position) => {\n    return async dispatch => {\n        function onStart() {\n            dispatch({ type: PUT_POSITION_STARTED });\n        }\n        function onSuccess(position) {\n            dispatch({ type: PUT_POSITION_SUCCESS, payload: position });\n            return position;\n        }\n        function onError(error) {\n            dispatch({ type: PUT_POSITION_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            let positionCopy = deepCopy(position)\n            delete positionCopy.temp\n\n            // Tells the backend that a position has changed\n            if (positionCopy.change_key !== 'deleted') positionCopy.change_key = 'changed'\n            const updatePosition = await api.putPosition(positionCopy, positionCopy._id);\n            return onSuccess(updatePosition)\n        } catch (error) {\n            return onError(error)\n        }\n    }\n}\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// delete\n// ******************************\nexport const deletePosition = (id, stationDelete) => {\n    return async dispatch => {\n        function onStart() {\n            dispatch({ type: DELETE_POSITION_STARTED });\n        }\n        function onSuccess(id) {\n            dispatch({ type: DELETE_POSITION_SUCCESS, payload: id });\n            return id;\n        }\n        function onError(error) {\n            dispatch({ type: DELETE_POSITION_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            let positionCopy = await dispatch(onDeletePosition(id, stationDelete))\n            // If theres a position copy then tell the backend is deleted\n            // There wouldnt be a position copy because the position did not exist on the backend\n            if (!!positionCopy) {\n                delete positionCopy.temp\n                // IMPORTANT!: Putting with change_key as deleted instead of deleting because it was causing back end issues\n                // Tells the backend that a position has been deleted\n                positionCopy.change_key = 'deleted'\n                const updatePosition = await dispatch(putPosition(positionCopy))\n                return onSuccess(positionCopy._id)\n            }\n            else {\n                return\n            }\n\n        } catch (error) {\n            return onError(error)\n        }\n    }\n}\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nexport const addPosition = (position) => {\n    return { type: ADD_POSITION, payload: position }\n}\n\nexport const updatePosition = (position) => {\n    return { type: UPDATE_POSITION, payload: position }\n}\n\nexport const revertChildren = (position) => {\n    return { type: REVERT_CHILDREN, payload: position }\n}\n\nexport const updatePositions = (positions, selectedPosition, childrenPositions, d3) => {\n    return { type: UPDATE_POSITIONS, payload: { positions, selectedPosition, childrenPositions, d3 } }\n}\n\nexport const removePosition = (id) => {\n    return { type: REMOVE_POSITION, payload: id }\n}\n\nexport const setPositionAttributes = (id, attr) => {\n    return { type: SET_POSITION_ATTRIBUTES, payload: { id, attr } }\n}\n\nexport const setSelectedPosition = (position) => {\n    return { type: SET_SELECTED_POSITION, payload: position }\n}\n\nexport const setEditingPosition = (bool) => {\n    return { type: EDITING_POSITION, payload: bool }\n}\n\nexport const setSelectedStationChildrenCopy = (positions) => {\n    return { type: SET_SELECTED_STATION_CHILDREN_COPY, payload: positions }\n}\n\nconst onDeletePosition = (id, stationDelete) => {\n    return async dispatch => {\n        const stationsState = store.getState().stationsReducer\n        const positionsState = store.getState().positionsReducer\n        const tasksState = store.getState().tasksReducer\n        const devicesState = store.getState().devicesReducer\n\n        let position = deepCopy(positionsState.positions[id])\n\n        // If the position has a parent then remove from parent\n        if (!!position.parent && !stationDelete) {\n\n            let selectedStation = deepCopy(stationsState.selectedStation)\n            // If there is an associated parent station\n            if (!!selectedStation) {\n                // Remove the position from the list of children\n                const positionIndex = selectedStation.children.indexOf(position._id)\n                if (!!position.new) {\n                    let children = deepCopy(selectedStation.children)\n                    children.splice(positionIndex, 1)\n                    dispatch(setStationAttributes(selectedStation._id, { children }))\n\n                }\n\n                // TODO: For tommorow, 1/27 it looks like its removing the wrong position from the children array...\n                else {\n                    let children = deepCopy(selectedStation.children)\n                    children.splice(positionIndex, 1)\n                    dispatch(setStationAttributes(selectedStation._id, { children }))\n\n                    // This goes through and finds any nwe children that might be in the chidlren array\n                    // If the child is new, delete it from the array\n                    // A new child will not have been saved yet, and since this is deleting and saving the parent station then the children array will also be saved\n                    let newChildIndex = []\n                    children.forEach(child => {\n                        if (!!positionsState.selectedStationChildrenCopy[child].new) {\n                            let newChildInd = children.indexOf[child]\n                            newChildIndex.push(newChildInd)\n                        }\n                    })\n\n                    // Revers the array because this index is being used for deletes\n                    // If it starts at the begining and deletes that one, then the next index will have changed\n                    newChildIndex.reverse()\n                    newChildIndex.forEach(child => {\n                        children.splice(child, 1)\n                    })\n\n                    await dispatch(putStationWithoutSavingChildren({ ...selectedStation, children: children, }))\n                }\n\n            }\n\n        }\n\n        // Remove from stations copy if need be\n        if (!!positionsState.selectedStationChildrenCopy) {\n            // Update the ChildrenCopy\n            let copyOfCopy = deepCopy(positionsState.selectedStationChildrenCopy)\n            delete copyOfCopy[position._id]\n            dispatch(setSelectedStationChildrenCopy(\n                copyOfCopy\n            ))\n        }\n\n\n        // If the position is new, just remove it from the local station\n        // Since the position is new, it does not exist in the backend and there can't be any associated tasks\n        if (!!position.new) {\n            dispatch(removePosition(position._id))\n            return null\n        }\n\n        // Else delete in backend and delete any associated tasks\n        else {\n            const tasks = tasksState.tasks\n\n            // Sees if any tasks are associated with the position and delete them\n            Object.values(tasks).filter(task => {\n                return task.load.position == position._id || task.unload.position == position._id\n            }).forEach(async relevantTask => {\n                await dispatch(deleteTask(relevantTask._id))\n            })\n\n            const devices = devicesState.devices\n            // See if the position belonged as an idle location for a device\n            Object.values(devices).filter(device => {\n                return !!device.idle_location && device.idle_location === position._id\n            }).forEach(async relevantDevice => {\n                relevantDevice.idle_location = null\n                await dispatch(putDevices(relevantDevice, relevantDevice._id))\n            })\n\n\n        }\n        return position\n    }\n}","import {isBrowser} from \"react-device-detect\";\n\nexport const defaultLocalSettings = {\n\tnon_local_api_ip: '',//'18.220.200.169',\n\tnon_local_api: false, //true,\n\tmapViewEnabled: isBrowser,\n\ttoggleDevOptions:false,\n\tcurrentMapId: null,\n\tauthenticated: null,\n\trefreshToken: null,\n\taccessToken: null\n}\n","import styled, {css} from \"styled-components\";\nimport Modal from \"react-modal\";\nimport {Form} from \"formik\";\n\nexport const rowCss = css`\n\tmargin-bottom: 1rem;\n`\n\nexport const Container = styled(Modal)`\n  outline: none !important;\n  outline-offset: none !important;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  right: auto;\n  bottom: auto;\n\n  position: absolute;\n\n  z-index: 50;\n  \n  min-width: 95%;\n  max-width: 95%;\n  max-height: 95%;\n  // height: 95%;\n  \n  color: ${props => props.theme.bg.octonary};\n  \n  display: flex;\n  flex-direction: column;\n  \n  color: ${props => props.theme.bg.octonary};\n`;\n\nexport const Header = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\tpadding: 0;\n\tmargin: 0;\n\tbackground: ${props => props.theme.bg.quinary};\n  \tborder-bottom: 1px solid black;\n`\n\nexport const NameContainer = styled.div`\n\tbackground: ${props => props.theme.bg.quaternary};\n\twidth: 100%;\n\t//padding: 0rem 1rem;\n  \tmargin-bottom: 1rem;\n`\n\nexport const CloseButton = styled.button`\n\theight: 100%;\n\twidth: 3rem;\n\n`\n\nexport const Title = styled.div`\n\tflex: 2;\n\theight: 100%;\n\tmin-height: 100%;\n\tmargin: 0;\n\tpadding: 0;\n\ttext-align: center;\n\tdisplay: inline-flex;\n\tjustify-content: center;\n\talign-items: center;\n\tdisplay: flex;\n  flex-direction: column;\n\tfont-size: ${props => props.theme.fontSize.sz2};\n\tfont-weight: ${props => props.theme.fontWeight.bold};\n\t\n`\nexport const TitleText = styled.span`\n\n`\n\nexport const FieldTitle = styled.span`\n  font-size: ${props => props.theme.fontSize.sz3};\n  font-weight: ${props => props.theme.fontWeight.bold};\n  align-self: center;\n`\n\nexport const InfoText = styled.span`\n  font-size: ${props => props.theme.fontSize.sz3};\n  // font-weight: ${props => props.theme.fontWeight.bold};\n  color: ${props => props.highlight ? props.theme.schema[props.schema].solid : \"white\"};\n`\n\nexport const SectionContainer = styled.div`\n\tborder-bottom: 1px solid ${props => props.theme.bg.quinary};\n  padding: 0 1rem;\n  //display: flex;\n  \n  //background: green;\n  display: flex;\n  flex-direction: column;\n  \n`\n\nexport const TheBody = styled.div`\n\t//background: blue;\n  padding-top: 1rem;\n  overflow: auto;\n\n`\n\n\nexport const ProcessFieldContainer = styled.div`\n  margin-bottom: 1rem;\n  display: flex;\n  flex-direction: column;\n  //width: auto;\n`\n\n\nexport const ProcessOptionsContainer = styled.div`\n\t//margin-bottom: 1rem;\n  display: flex;\n  overflow-x: auto;\n  overflow-y: hidden;\n  position: relative;\n  \n  \n  box-shadow: ${props => props.hasError && \"0 0 5px red\"}; \n\n  background: ${props => props.theme.bg.quinary}; \n  padding: 1rem;\n  border-radius: 1rem;\n  \n  padding-bottom: 1rem;\n  \n  ::-webkit-scrollbar {\n    height: 10px;\n  }\n\n  /* Track */\n  ::-webkit-scrollbar-track {\n    background: rgba(100,100,100,0.2);\n    opacity: 10%;\n  }\n\n  ::-webkit-scrollbar-track:hover {\n    background: rgba(100,100,100,0.6);\n    border-left: 1px solid rgba(100,100,100,0.6);\n    border-right: 1px solid rgba(100,100,100,0.6);\n  }\n\n  /* Handle */\n  ::-webkit-scrollbar-thumb {\n    background: ${props => props.theme.bg.tertiary};\n    border-radius: .5rem;\n  }\n\n  /* Handle on hover */\n  ::-webkit-scrollbar-thumb:hover {\n    background: #555;\n\n  }\n`\nexport const ProcessName = styled.span`\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`\n\nexport const ProcessOption = styled.div`\n\n\t&:hover {\n\t\tcursor: pointer;\n\t}\n\t\n\ttext-shadow: 0.05rem 0.05rem 0.2rem #303030;\n\t&:hover {\n\t\tcursor: pointer;\n\t\tfilter: brightness(140%);\n\t}\n\t\n\t&:active{\n\t\tfilter: brightness(85%);\n\t\ttext-shadow: none;\n\t}\n  \n  \tbackground: ${props => props.theme.bg.senary};\n\t\n  \tpadding: 1rem;\n\tborder-radius: 1rem;\n  \tmargin-right: 1rem;\n  \n\tmin-width: 10rem;\n\tmax-width: 10rem;\n\twidth: 10rem;\n\t\n\tdisplay: inline-flex;\n\tjustify-content: center;\n\talign-items: center;\n\t\n\t${props => (!props.isSelected && props.containsSelected) && \"filter: grayscale(50%)\"};\n\t${props => props.isSelected && \"filter: brightness(130%)\"};\n\ttransition: all 0.5s ease;\n\t\n\tfont-size: ${props => props.theme.fontSize.sz3};\n\tfont-weight: ${props => props.theme.fontWeight.normal};\n  \n\toverflow: hidden;\n\twhite-space: nowrap;\n\ttext-overflow: ellipsis;\n`\n\nexport const StyledForm = styled(Form)`\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n    width: 100%;\n    max-width: 100%;\n    // max-height: 100%;\n    // overflow-x: hidden;\n    border-radius: .5rem;\n    position: relative;\n    \n    overflow: hidden;\n  background: ${props => props.theme.bg.quaternary};\n    \n   \n    flex: 1;\n    \n    justify-content: space-between;\n  \n  \n`;\n\nexport const ContentContainer = styled.div`\n\tdisplay: flex;\n\tpadding: 1rem;\n\tflex-direction: column;\n\tmax-height: 100%;\n\toverflow: hidden;\n\tflex: 1;\n\tjustify-content: space-between;\n`\n\nexport const BodyContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tpadding: 1rem;\n\tflex: 1;\n\tjustify-content: space-between;\n  min-height: ${props => props.minHeight};\n\t\n\tbackground: ${props => props.theme.bg.quaternary};\n  background: transparent;\n`\n\nexport const WidgetContainer = styled.div`\n\tdisplay: flex;\n\tpadding-left: 1rem;\n\t\n\t${rowCss};\n`\n\nexport const Icon = styled.i`\n\tfont-size: 2rem;\n\tcolor: ${props => props.color};\n\tmargin-right: 1rem;\n\t\n`\n\nexport const ObjectInfoContainer = styled.div`\n\tdisplay: flex;\n\t//width: 100%;\n\t//flex-direction: column;\n\talign-items: center;\n\t//background: red;\n\tmargin-bottom: 1rem;\n`\n\n\nexport const ObjectTitleContainer = styled.div`\n\tdisplay: flex;\n\tmargin-right: 1rem;\n  flex: 1;\n`\n\nexport const CountInput = styled.input`\n\twidth: fit-content;\n`\n\nexport const ObjectLabel = styled.span`\n\tdisplay: inline-flex;\n\tmargin-right: 1rem;\n\tfont-weight: bold;\n  align-items: center;\n`\n\nexport const QuantityErrorContainerComponent = styled.div`\n    width: auto;\n    height: auto;\n    position: absolute;\n    top: 50%;\n    right: 2.5rem;\n    transform: translateY(-50%);\n    margin: 0;\n    padding: 0;\n    ${props => props.iconContainerCss};\n`;\n\nexport const ObjectName = styled.span`\n\tdisplay: flex;\n`\n\nexport const InputContainer = styled.div`\n\tflex: 1;\n`\n\nexport const ButtonContainer = styled.div`\n\tdisplay: flex;\n\t//flex-direction: row;\n\talign-items: center;\n  width: 100%;\n  justify-content: center;\n  align-self: center;\n\tpadding: 1rem;\n\tmargin: 0;\n  \tmargin: 0 .5rem;\n  background: ${props => props.theme.bg.quinary};\n  border-top: 1px solid black;\n`\n\nexport const DatesContainer = styled.span`\n\tdisplay: inline-flex;\n\talign-items: center;\n\tbackground: ${props => props.theme.bg.quinary};\n\tjustify-content: center;\n\tpadding: .75rem;\n\tborder-radius: 1rem;\n  width: fit-content;\n  margin: 0;\n\t\n\t\n\t//${rowCss};\n`\n\nexport const DateItem = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tbackground: ${props => props.theme.bg.senary};\n\tborder-radius: 1rem;\n\t\n\tpadding: .5rem;\n\talign-items: center;\n\tjustify-content: center;\n\t\n\t&:hover {\n\t\tcursor: pointer;\n\t}\n\t\n`\n\nexport const DateArrow = styled.i`\n\tmargin-left: 1rem;\n\tmargin-right: 1rem;\n\tcolor: ${props => props.theme.bg.senary};\n`\n\nexport const DateTitle = styled.span``\n\nexport const DateText = styled.span`\n\n`\n\nexport const TimeText = styled.span`\n\n`\n\nexport const StationContainer = styled.div`\n\t${rowCss};\n`\n\n// history\n\nexport const ContentHeader = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\twidth: 100%;\n  \tmargin-bottom: 1rem;\n\t//padding: 1rem;\n`\n\nexport const ContentTitle = styled.span`\n\tfont-size: ${props => props.theme.fontSize.sz3};\n\tfont-weight: ${props => props.theme.fontWeight.bold};\n`\n\nexport const CalendarContainer = styled.div`\n\toverflow: auto;\n\t\n\t${rowCss};\n`\n\nexport const RowContainer = styled.div`\n\tdisplay: flex;\n\tmargin-bottom: 1rem;\n`\n\nexport const FadeLoaderCSS = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\n\n\nexport const HistoryBodyContainer = styled.div`\n\tdisplay: flex;\n\tpadding: 1rem;\n\tflex-direction: column;\n\toverflow-y: auto;\n\toverflow-x: hidden;\n\tflex: 1;\n\tborder-bottom: 1px solid ${props => props.theme.bg.tertiary};\n\tborder-top: 1px solid ${props => props.theme.bg.tertiary};\n`\n\nexport const HistoryItemContainer = styled.div`\n\tdisplay: flex;\n\tpadding: 1rem;\n\tbackground: rgba(200,0,200,0.2);\n\tmargin-bottom: 1rem;\n\tborder-radius: 1rem;\n\tbackground: ${props => props.theme.bg.quinary};\n\n`\n\nconst textCommon = css`\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n`\n\nconst historyContainerCommon = css`\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tflex-direction: column;\n\t\n`\n\nexport const HistoryDateContainer = styled.div`\n\t${historyContainerCommon};\n\tflex: 1;\n`\n\n\nexport const HistoryDateText = styled.span`\n\t${textCommon};\n`\n\nexport const HistoryUserContainer = styled.div`\n\t${historyContainerCommon};\n\t// display: inline-flex;\n\t\n\t\n`\nexport const HistoryUserText = styled.span`\n\t${textCommon};\n\tbackground: ${props => props.theme.bg.senary};\n\tpadding: .5rem;\n\tborder-radius: .5rem;\n\tcolor: ${props => props.theme.bg.primary};\n\n`\n\nexport const HistoryInfoContainer = styled.div`\n\t${historyContainerCommon};\n\tflex: 2;\n\talign-items: flex-start;\n\tmargin: 0 1rem 0 1rem;\n\t\n`\n\nexport const HistoryInfoText = styled.span`\n\tdisplay: flex;\n\tjustify-content: flex-start;\n\talign-items: flex-start;\n`\n\nexport const TimePickerContainer = styled.div`\n\tflex: 1;\n\tflex-direction: column;\n\tdisplay: flex;\n\toverflow: hidden;\n`\n\n\n\n\nexport const buttonViewCss = css`\n\t// border-right: ${props => !props.isLast && `solid ${props.theme.bg.quaternary} thin`}; // dont show border on last item\n\tcolor: ${props => props.theme.bg.quinary};\n\tpadding: 0;\n\tmargin: 0;\n\tpadding-left: .5rem;\n\tpadding-right: .5rem;\n\tfont-size: ${props => props.theme.fontSize.sz3};\n\tfont-family: ${props => props.theme.font.primary};\n`\n\n\nexport const buttonViewSelectedCss = css`\n\tbackground: transparent;\n\tcolor: ${props => props.theme.schema[\"lots\"].solid};\n`\n\n\nexport const buttonGroupContainerCss = css`\n\tdisplay: flex;\n\tflex-direction: row;\n\talign-self: center;\n\tpadding: 0;\n\tmargin: 0 0 1rem 0;\n  width: fit-content;\n  \n\t\n`\n\n\nexport const buttonCss = css`\n\tmargin: 0;\n\tpadding: 0;\n  \n\t\n\t&:focus{\n\t}\n\t\n\t&:active{\n\t}\n\t\n\t&:hover{\n\t\tcursor: default;\n\t}\n\t\n`\n\n\n\n","import styled from 'styled-components'\nimport { hexToRGBA, LightenDarkenColor } from '../../../methods/utils/color_utils'\n\nexport const TextboxContainer = styled.div`\n    ${props => props.flex &&\n        `\n        display: flex;\n        flex-grow: 1`\n    }\n\n    padding: 0;\n    margin: 0;\n`\n\n\nexport const TextboxLabel = styled.h1`\n    font-size: ${props => props.theme.fontSize.sz2};\n    font-family: ${props => props.theme.font.primary};\n    color: ${props => props.theme.bg.septenary};\n    margin-top: .6rem;\n    margin-right: 0.5rem;\n    line-height: 1rem;\n`;\n\nexport const TextboxInput = styled.input`\n    background-color: ${props => props.theme.bg.quinary};\n    border: none;\n    font-size: ${props => props.theme.fontSize.sz4};\n    font-family: ${props => props.theme.font.primary};\n    font-weight: 500;\n    display: flex;\n    flex-grow: 1;\n    color: ${props => props.theme.bg.octonary};\n\n    box-shadow: 0 0.1rem 0.2rem 0rem rgba(0,0,0,0.1) !important;\n    border-bottom: 2px solid ${props => props.theme.bg.quinary};\n\n    &:focus {\n        background-color: ${props => LightenDarkenColor(props.theme.bg.quinary, 10)};\n        border-bottom: 2px solid ${props => !!props.schema ? props.theme.schema[props.schema].solid : props.theme.fg.primary};\n        color: ${props => props.theme.bg.octonary};\n        outline: none !important;\n    }\n\n    &::placeholder {\n        font-family: ${props => props.theme.font.secondary};\n        color: ${props => props.theme.bg.senary};\n    }\n`;\n\nexport const TextboxArea = styled.textarea`\n    background-color: ${props => props.theme.bg.quinary};\n    border: none;\n    font-size: ${props => props.theme.fontSize.sz4};\n    font-family: ${props => props.theme.font.primary};\n    font-weight: 500;\n    display: flex;\n    flex-grow: 1;\n    color: ${props => props.theme.bg.octonary};\n\n    box-shadow: 0 0.1rem 0.2rem 0rem rgba(0,0,0,0.1) !important;\n    border-bottom: 2px solid ${props => props.theme.bg.quinary};\n\n    &:focus {\n        background-color: ${props => LightenDarkenColor(props.theme.bg.quinary, 10)};\n        border-bottom: 2px solid ${props => !!props.schema ? props.theme.schema[props.schema].solid : props.theme.fg.primary};\n        color: ${props => props.theme.bg.octonary};\n        outline: none !important;\n    }\n\n    &::placeholder {\n        font-family: ${props => props.theme.font.secondary};\n        color: ${props => props.theme.bg.senary};\n    }\n`;\n","import React, { useEffect, useRef } from 'react'\nimport * as styled from './textbox.style'\n\nexport default function Textbox(props) {\n\n    let InputComponent;\n    if (props.lines) {InputComponent = props.inputAreaComponent}\n    else {InputComponent = props.inputComponent}\n\n    const inputRef = useRef(null)\n\n    useEffect(() => {\n        if (props.focus == true) {\n            inputRef.current.focus()\n        }\n    }, [props.focus])\n\n    useEffect(() => {\n        if (props.keepFocus === true) {\n            inputRef.current.focus()\n        }\n    })\n\n    return (\n        <React.Fragment>\n            {(!props.inline && props.label) && <styled.TextboxLabel style={props.labelStyle}>{props.label}</styled.TextboxLabel>}\n            <styled.TextboxContainer className=\"form-group\" style={{...props.textboxContainerStyle}}>\n                {props.inline && <styled.TextboxLabel style={props.labelStyle}>{props.label}</styled.TextboxLabel>}\n                <InputComponent \n                    ref={inputRef}\n                    theme={props.theme}\n                    style={props.style}\n                    className={\"form-control \"+props.className}\n                    placeholder={props.placeholder}\n                    value={props.value}\n                    onChange={props.onChange}\n                    onKeyPress={props.onKeyPress}\n                    rows={props.lines}\n                    type={props.type}\n                    defaultValue={props.defaultValue}\n                    disabled={props.disabled}\n                    schema={props.schema}\n                    onBlur={props.onBlur}\n                    onFocus={props.onFocus}\n                    >\n                </InputComponent>\n                </styled.TextboxContainer>\n        </React.Fragment>\n    )\n    \n}\n\nTextbox.defaultProps = {\n    inputAreaComponent : styled.TextboxArea,\n    inputComponent : styled.TextboxInput,\n    autofocus: false,\n    flex: false,\n    inline: false,\n    labelStyle: null,\n    onBlur: () => {},\n    onFocus: () => {},\n}\n","// This reducer is for api calls to local storage\n\nimport {\n  GET_LOGGERS,\n  GET_LOGGERS_STARTED,\n  GET_LOGGERS_SUCCESS,\n  GET_LOGGERS_FAILURE,\n\n  POST_LOGGERS,\n  POST_LOGGERS_STARTED,\n  POST_LOGGERS_SUCCESS,\n  POST_LOGGERS_FAILURE,\n\n  GET_LOCAL_SETTINGS,\n  GET_LOCAL_SETTINGS_STARTED,\n  GET_LOCAL_SETTINGS_SUCCESS,\n  GET_LOCAL_SETTINGS_FAILURE,\n\n  POST_LOCAL_SETTINGS,\n  POST_LOCAL_SETTINGS_STARTED,\n  POST_LOCAL_SETTINGS_SUCCESS,\n  POST_LOCAL_SETTINGS_FAILURE,\n\n  STOP_API_CALLS,\n\n} from '../types/local_types';\nimport {defaultLocalSettings} from \"../../constants/local_settings_constants\";\n\nconst defaultState = {\n    loggers: {\n        /*\n        All: {\n          enabled: false,\n          level: 0,\n          name: \"All\"\n        },\n        Dashboards: {\n          enabled: false,\n          level: 0,\n          name: \"Dashboards\"\n        },\n        Scheduler: {\n          enabled: false,\n          level: 0,\n          name: \"Scheduler\"\n        },\n        Tasks: {\n          enabled: false,\n          level: 0,\n          name: \"Tasks\"\n        },\n        Objects: {\n          enabled: false,\n          level: 0,\n          name: \"Objects\"\n        },\n        Api: {\n          enabled: false,\n          level: 0,\n          name: \"Api\"\n        },\n        ReduxLogger: {\n          enabled: false,\n          level: 0,\n          name: \"ReduxLogger\"\n        }\n        */\n    },\n\n    localSettings: defaultLocalSettings,\n    devicesEnabled: false,\n\n    disableAll: false,\n    enableAll: false,\n    loaded: false,\n};\n\nconst localReducer = (state = defaultState, action) => {\n    switch(action.type) {\n\n    // ======================================== //\n    //                                          //\n    //              Get SETTINGS                //\n    //                                          //\n    // ======================================== //\n        case GET_LOGGERS:\n            break;\n\n        case GET_LOGGERS_SUCCESS:\n            return  {\n                ...state,\n                ...action.payload,\n                loggers: {\n                  ...state.loggers, ...action.payload.loggers\n                },\n\n                pending: false,\n                loaded: true,\n            }\n\n        case GET_LOGGERS_FAILURE:\n            return  Object.assign({}, state, {\n                error: action.payload,\n                pending: false,\n                loaded: true,\n            });\n\n        case GET_LOGGERS_STARTED:\n            return  Object.assign({}, state, {\n                pending: true\n            });\n\n    // ======================================== //\n    //                                          //\n    //             Post LOGGERS                //\n    //                                          //\n    // ======================================== //\n        case POST_LOGGERS:\n            break;\n\n        case POST_LOGGERS_SUCCESS:\n            return{\n                ...state,\n                 ...action.payload,\n                pending: false\n            }\n\n        case POST_LOGGERS_FAILURE:\n            return  Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case POST_LOGGERS_STARTED:\n            return  Object.assign({}, state, {\n                pending: true\n            });\n\n    // ======================================== //\n    //                                          //\n    //          Get Local Settings              //\n    //                                          //\n    // ======================================== //\n        case GET_LOCAL_SETTINGS:\n            break\n\n        case GET_LOCAL_SETTINGS_SUCCESS:\n            return  {\n                ...state,\n                localSettings: action.payload,\n                pending: false,\n            }\n\n        case GET_LOCAL_SETTINGS_FAILURE:\n            return  Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case GET_LOCAL_SETTINGS_STARTED:\n            return  Object.assign({}, state, {\n                pending: true\n            });\n\n    // ======================================== //\n    //                                          //\n    //           Post Local Settings            //\n    //                                          //\n    // ======================================== //\n        case POST_LOCAL_SETTINGS:\n            break;\n\n        case POST_LOCAL_SETTINGS_SUCCESS:\n            return{\n                ...state,\n                localSettings: {\n                    ...state.localSettings, \n                    ...action.payload\n                },\n                pending: false\n            }\n\n        case POST_LOCAL_SETTINGS_FAILURE:\n            return  Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case POST_LOCAL_SETTINGS_STARTED:\n            return  Object.assign({}, state, {\n                pending: true\n            });\n\n        case STOP_API_CALLS:\n            return {\n                ...state,\n                stopAPICalls: action.payload,\n            }\n\n\n        // ~~~~~~~~~~~~~~~\n    }\n\n    return state\n}\n\nexport default localReducer\n","import { denormalize, schema } from 'normalizr';\nimport { uuidv4 } from '../methods/utils/utils';\n\n// schema for single task queue item schema\nexport const taskQueueItemSchema = new schema.Entity(\n  // key\n  'taskQueue',\n  // definition\n  {\n    //condition: conditionSchema\n  },\n  // options\n  {\n    idAttribute: (value, parent, key) => {\n      return value._id\n    },\n\n    // processStrategy\n    processStrategy: (value, parent, key) => {\n      return value;\n    }\n  },\n\n);\n\n// schema for list of task queue items\nexport const taskQueueSchema = [taskQueueItemSchema]\n","import { normalize, schema } from 'normalizr';\n\nimport {\n    GET_DASHBOARDS,\n    GET_DASHBOARDS_STARTED,\n    GET_DASHBOARDS_SUCCESS,\n    GET_DASHBOARDS_FAILURE,\n\n    POST_DASHBOARD,\n    POST_DASHBOARD_STARTED,\n    POST_DASHBOARD_SUCCESS,\n    POST_DASHBOARD_FAILURE,\n\n    PUT_DASHBOARD,\n    PUT_DASHBOARD_STARTED,\n    PUT_DASHBOARD_SUCCESS,\n    PUT_DASHBOARD_FAILURE,\n\n    DELETE_DASHBOARD,\n    DELETE_DASHBOARD_STARTED,\n    DELETE_DASHBOARD_SUCCESS,\n    DELETE_DASHBOARD_FAILURE,\n\n    DASHBOARD_OPEN,\n} from '../types/dashboards_types'\n\nimport {\n    DASHBOARD,\n    DASHBOARDS\n} from \"../types/data_types\"\n\nimport {\n    SET\n} from \"../types/prefixes\"\n\nimport {\n    KICK_OFF_ENABLED,\n    FINISH_ENABLED\n} from \"../types/suffixes\"\n\nimport uuid from 'uuid'\n\nimport * as api from '../../api/dashboards_api'\nimport { dashboardsSchema } from '../../normalizr/schema';\nimport {getLoadStationId, getRouteProcesses, getUnloadStationId} from \"../../methods/utils/route_utils\";\nimport {willRouteDeleteBreakProcess} from \"../../methods/utils/processes_utils\";\nimport {putProcesses, setSelectedProcess} from \"./processes_actions\";\nimport {deleteTask} from \"./tasks_actions\";\nimport {deepCopy} from \"../../methods/utils/utils\";\nimport {useSelector} from \"react-redux\";\nimport * as stationActions from \"./stations_actions\";\nimport {getDefaultStation} from \"../../methods/utils/station_utils\";\nimport {removeArrayIndices} from \"../../methods/utils/array_utils\";\nimport {ROUTE_TYPES} from \"../../constants/route_constants\";\n\n\nexport const getDashboards = () => {\n    return async dispatch => {\n        function onStart() {\n            dispatch({ type: GET_DASHBOARDS_STARTED });\n        }\n        function onSuccess(response) {\n            dispatch({ type: GET_DASHBOARDS_SUCCESS, payload: response });\n            return response;\n        }\n        function onError(error) {\n            dispatch({ type: GET_DASHBOARDS_FAILURE, payload: error });\n            console.log(error)\n\n            return error;\n        }\n\n        try {\n            onStart();\n            const dashboards = await api.getDashboards();\n\n            const normalizedDashboards = {}\n            dashboards.map((dashboard) => {\n                normalizedDashboards[dashboard._id.$oid] = dashboard\n            })\n\n            return onSuccess(normalizedDashboards)\n            // return onSuccess(dashboards)\n        } catch (error) {\n            return onError(error)\n        }\n    }\n}\nexport const postDashboard = (dashboard) => {\n    return async dispatch => {\n        function onStart() {\n            dispatch({ type: POST_DASHBOARD_STARTED });\n        }\n        function onSuccess(response) {\n            dispatch({ type: POST_DASHBOARD_SUCCESS, payload: response });\n            return response;\n        }\n        function onError(error) {\n            dispatch({ type: POST_DASHBOARD_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            delete dashboard._id\n            const newDashboard = await api.postDashboards(dashboard);\n            return onSuccess(newDashboard)\n        } catch (error) {\n            return onError(error)\n        }\n    }\n}\nexport const putDashboard = (dashboard, ID) => {\n    return async dispatch => {\n        function onStart() {\n            dispatch({ type: PUT_DASHBOARD_STARTED });\n        }\n        function onSuccess(updatedDashboard) {\n            dispatch({ type: PUT_DASHBOARD_SUCCESS, payload: updatedDashboard });\n            return updatedDashboard;\n        }\n        function onError(error) {\n            dispatch({ type: PUT_DASHBOARD_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            delete dashboard._id\n            const updateDashboard = await api.putDashboards(dashboard, ID);\n            return onSuccess(updateDashboard)\n        } catch (error) {\n            return onError(error)\n        }\n    }\n}\nexport const deleteDashboard = (ID) => {\n    return async dispatch => {\n        function onStart() {\n            dispatch({ type: DELETE_DASHBOARD_STARTED });\n        }\n        function onSuccess(response) {\n            dispatch({ type: DELETE_DASHBOARD_SUCCESS, payload: ID });\n            return response;\n        }\n        function onError(error) {\n            dispatch({ type: DELETE_DASHBOARD_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const removeDashboards = await api.deleteDashboards(ID);\n            return onSuccess(ID)\n        } catch (error) {\n            return onError(error)\n        }\n    }\n}\n\n// deletes all buttons with routeId from all dashboards\n// ******************************\nexport const removeRouteFromAllDashboards = (routeId) => {\n    return async (dispatch, getState) => {\n\n        // current state\n        const state = getState()\n\n        const dashboards = state.dashboardsReducer.dashboards || {}\n        const routes = state.tasksReducer.tasks || {}\n        const selectedTask = routes[routeId] || {}\n\n        // Delete all dashboard buttons associated with that task\n        Object.values(dashboards)\n            .filter(dashboard =>\n                dashboard.station === selectedTask?.load?.station || dashboard.station === selectedTask?.unload?.station\n            ).forEach(currDashboard => {\n                var currButtons = [...currDashboard.buttons]\n\n                currButtons = currButtons.filter(button => button.task_id !== routeId)\n\n                // update dashboard\n                dispatch(putDashboard({\n                    ...currDashboard,\n                    buttons: currButtons\n                }, currDashboard._id.$oid))\n            }\n        )\n\n    }\n}\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// automatically adds a button for a route to its load station's dashboard\n// ******************************\nexport const addRouteToDashboards = (route) => {\n    return async (dispatch, getState) => {\n\n        // current state\n        const state = getState()\n        const dashboards = state.dashboardsReducer.dashboards || {}\n        const stations = state.stationsReducer.stations || {}\n\n        const {\n            _id: routeId,\n            type: routeType,\n            name: routeName\n        } = route\n\n        // get station for route button (load if push, unload if pull)\n        let stationId\n        if(routeType === ROUTE_TYPES.PULL) {\n            stationId = getUnloadStationId(route)\n        }\n        else {\n            stationId = getLoadStationId(route)\n        }\n\n        const station = stations[stationId] || getDefaultStation()\n        const dashboard = dashboards[station.dashboards[0]]\n\n        const newDashboardButton = {\n            color: '#bcbcbc',\n            id: uuid.v4(),\n            name: routeName,\n            task_id: routeId\n        }\n\n        if (dashboard === undefined) {\n            const defaultDashboard = {\n                name: station.name + ' Dashboard',\n                buttons: [newDashboardButton],\n                station: station._id\n            }\n            const postDashboardPromise = dispatch(postDashboard(defaultDashboard))\n            postDashboardPromise.then(async postedDashboard => {\n                alert('Added dashboard to location. There already should be a dashboard tied to this location, so this is an temp fix')\n                await dispatch(stationActions.putStation({\n                    ...station,\n                    dashboards: [postedDashboard._id.$oid]\n                }, station._id))\n\n            })\n        }\n\n        else {\n            // see if button for task already exists\n            const buttonIndex = dashboard.buttons.findIndex((currButton) => {\n                return currButton.task_id === route._id\n            })\n\n            // only add button if it isn't already in the dashboard\n            if(buttonIndex === -1) {\n                dispatch(putDashboard({\n                    ...dashboard,\n                    buttons: [...dashboard.buttons, newDashboardButton]\n                }, dashboard._id.$oid))\n            }\n\n        }\n    }\n}\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// automatically removes a button that was added to a dashboard but no longer belongs to it\n// ******************************\nexport const removeRouteFromWrongDashboards = (route) => {\n    return async (dispatch, getState) => {\n\n        // current state\n        const state = getState()\n        const dashboards = Object.values(state.dashboardsReducer.dashboards) || []\n\n        const {\n            _id: routeId,\n            type: routeType\n        } = route\n\n        // get station id for route (load for push, unload for pull)\n        let stationId\n        if(routeType === ROUTE_TYPES.PULL) {\n            // if pull type, button should be at unload station\n            stationId = getUnloadStationId(route)\n        }\n\n        else {\n            // if push type, button should be at load station\n            stationId = getLoadStationId(route)\n        }\n\n        dashboards.forEach((currDashboard) => {\n            const {\n                buttons: currDashboardButtons = [],\n                _id: currDashboardIdObj = {},\n                station: currStationId\n            } = currDashboard\n\n            const {\n                $oid: currDashboardId\n            } = currDashboardIdObj\n\n            // curr dashboard isn't the route's load station\n            if(currStationId !== stationId) {\n\n                // loop through each button and check if the button needs to be removed\n                const filteredButtons = currDashboardButtons.filter((currButton, currButtonIndex) => {\n                    const {\n                        task_id: currRouteId\n                    } = currButton\n\n                    return(currRouteId !== routeId) // if dashboard isn't at the right station for the route, filter out buttons for this route\n                })\n\n                // if length of buttons arr changed, a button was removed, so update\n                // otherwise nothing was removed, so need for update\n                if(filteredButtons.length !== currDashboardButtons.length) {\n                    // update the dashboard\n                    dispatch(putDashboard({\n                        ...currDashboard,\n                        buttons: filteredButtons\n                    }, currDashboardId))\n                }\n\n            }\n        })\n    }\n}\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nexport const dashboardOpen = (bol) => {\n    return { type: DASHBOARD_OPEN, payload: bol }\n}\n\nexport const setDashboardKickOffProcesses = (dashboardId, kickOffEnabled) => {\n    return { type: SET + DASHBOARD + KICK_OFF_ENABLED, payload: {dashboardId, kickOffEnabled} }\n}\n\nexport const setDashboardFinishProcesses = (dashboardId, finishEnabled) => {\n    return { type: SET + DASHBOARD + FINISH_ENABLED, payload: {dashboardId, finishEnabled} }\n}\n","export const getDefaultStation = () => {\n\treturn {\n\t\tdashboards: []\n\t}\n\n}\n\n","export const STARTED = '_STARTED';\nexport const SUCCESS = '_SUCCESS';\nexport const FAILURE = '_FAILURE';\nexport const SELECTED = '_SELECTED';\nexport const KICK_OFF_ENABLED = '_KICK_OFF_ENABLED';\nexport const FINISH_ENABLED = '_FINISH_ENABLED';","export const GET_OBJECTS = 'GET_OBJECTS'\nexport const GET_OBJECTS_STARTED = 'GET_OBJECTS_STARTED'\nexport const GET_OBJECTS_SUCCESS = 'GET_OBJECTS_SUCCESS'\nexport const GET_OBJECTS_FAILURE = 'GET_OBJECTS_FAILURE'\n\nexport const GET_OBJECT = 'GET_OBJECT'\nexport const GET_OBJECT_STARTED = 'GET_OBJECT_STARTED'\nexport const GET_OBJECT_SUCCESS = 'GET_OBJECT_SUCCESS'\nexport const GET_OBJECT_FAILURE = 'GET_OBJECT_FAILURE'\n\nexport const POST_OBJECT = 'POST_OBJECT'\nexport const POST_OBJECT_STARTED = 'POST_OBJECT_STARTED'\nexport const POST_OBJECT_SUCCESS = 'POST_OBJECT_SUCCESS'\nexport const POST_OBJECT_FAILURE = 'POST_OBJECT_FAILURE'\n\nexport const PUT_OBJECT = 'PUT_OBJECT'\nexport const PUT_OBJECT_STARTED = 'PUT_OBJECT_STARTED'\nexport const PUT_OBJECT_SUCCESS = 'PUT_OBJECT_SUCCESS'\nexport const PUT_OBJECT_FAILURE = 'PUT_OBJECT_FAILURE'\n\nexport const DELETE_OBJECT = 'DELETE_OBJECT'\nexport const DELETE_OBJECT_STARTED = 'DELETE_OBJECT_STARTED'\nexport const DELETE_OBJECT_SUCCESS = 'DELETE_OBJECT_SUCCESS'\nexport const DELETE_OBJECT_FAILURE = 'DELETE_OBJECT_FAILURE'\n\nexport const ADD_OBJECT = 'ADD_OBJECT'\nexport const UPDATE_OBJECT = 'UPDATE_OBJECT'\nexport const UPDATE_OBJECTS = 'UPDATE_OBJECTS'\nexport const REMOVE_OBJECT = 'REMOVE_OBJECT'\nexport const SET_OBJECT_ATTRIBUTES = 'SET_OBJECT_ATTRIBUTES'\nexport const VALIDATE_OBJECT = 'VALIDATE_OBJECT'\nexport const SELECT_OBJECT = 'SELECT_OBJECT'\nexport const SET_SELECTED_OBJECT = 'SET_SELECTED_OBJECT'\nexport const DESELECT_OBJECT = 'DESELECT_OBJECT'","export const GET_STATIONS_STARTED = 'GET_STATIONS_STARTED'\nexport const GET_STATIONS_SUCCESS = 'GET_STATIONS_SUCCESS'\nexport const GET_STATIONS_FAILURE = 'GET_STATIONS_FAILURE'\n\nexport const POST_STATION_STARTED = 'POST_STATION_STARTED'\nexport const POST_STATION_SUCCESS = 'POST_STATION_SUCCESS'\nexport const POST_STATION_FAILURE = 'POST_STATION_FAILURE'\n\nexport const PUT_STATION_STARTED = 'PUT_STATION_STARTED'\nexport const PUT_STATION_SUCCESS = 'PUT_STATION_SUCCESS'\nexport const PUT_STATION_FAILURE = 'PUT_STATION_FAILURE'\n\nexport const DELETE_STATION_STARTED = 'DELETE_STATION_STARTED'\nexport const DELETE_STATION_SUCCESS = 'DELETE_STATION_SUCCESS'\nexport const DELETE_STATION_FAILURE = 'DELETE_STATION_FAILURE'\n\nexport const ADD_STATION = 'ADD_STATION'\nexport const UPDATE_STATION = 'UPDATE_STATION'\nexport const UPDATE_STATIONS = 'UPDATE_STATIONS'\nexport const REMOVE_STATION = 'REMOVE_STATION'\nexport const EDITING_STATION = 'EDITING_STATION'\nexport const SET_STATION_ATTRIBUTES = 'SET_STATION_ATTRIBUTES'\nexport const SET_SELECTED_STATION = 'SET_SELECTED_STATION'","export const GET_POSITIONS_STARTED = 'GET_POSITIONS_STARTED'\nexport const GET_POSITIONS_SUCCESS = 'GET_POSITIONS_SUCCESS'\nexport const GET_POSITIONS_FAILURE = 'GET_POSITIONS_FAILURE'\n\nexport const GET_POSITION_STARTED = 'GET_POSITION_STARTED'\nexport const GET_POSITION_SUCCESS = 'GET_POSITION_SUCCESS'\nexport const GET_POSITION_FAILURE = 'GET_POSITION_FAILURE'\n\nexport const POST_POSITION_STARTED = 'POST_POSITION_STARTED'\nexport const POST_POSITION_SUCCESS = 'POST_POSITION_SUCCESS'\nexport const POST_POSITION_FAILURE = 'POST_POSITION_FAILURE'\n\nexport const PUT_POSITION_STARTED = 'PUT_POSITION_STARTED'\nexport const PUT_POSITION_SUCCESS = 'PUT_POSITION_SUCCESS'\nexport const PUT_POSITION_FAILURE = 'PUT_POSITION_FAILURE'\n\nexport const DELETE_POSITION_STARTED = 'DELETE_POSITION_STARTED'\nexport const DELETE_POSITION_SUCCESS = 'DELETE_POSITION_SUCCESS'\nexport const DELETE_POSITION_FAILURE = 'DELETE_POSITION_FAILURE'\n\nexport const ADD_POSITION = 'ADD_POSITION'\nexport const UPDATE_POSITION = 'UPDATE_POSITION'\nexport const UPDATE_POSITIONS = 'UPDATE_POSITIONS'\nexport const REMOVE_POSITION = 'REMOVE_POSITION'\nexport const SET_POSITION_ATTRIBUTES = 'SET_POSITION_ATTRIBUTES'\nexport const REVERT_CHILDREN = 'REVERT_CHILDREN'\nexport const SET_SELECTED_POSITION = 'SET_SELECTED_POSITION'\nexport const EDITING_POSITION ='EDITING_POSITION'\nexport const SET_SELECTED_STATION_CHILDREN_COPY = 'SET_SELECTED_STATION_CHILDREN_COPY'\n","import {\n    GET_OBJECTS,\n    GET_OBJECTS_STARTED,\n    GET_OBJECTS_SUCCESS,\n    GET_OBJECTS_FAILURE,\n\n    GET_OBJECT,\n    GET_OBJECT_STARTED,\n    GET_OBJECT_SUCCESS,\n    GET_OBJECT_FAILURE,\n\n    POST_OBJECT,\n    POST_OBJECT_STARTED,\n    POST_OBJECT_SUCCESS,\n    POST_OBJECT_FAILURE,\n\n    PUT_OBJECT,\n    PUT_OBJECT_STARTED,\n    PUT_OBJECT_SUCCESS,\n    PUT_OBJECT_FAILURE,\n\n    DELETE_OBJECT,\n    DELETE_OBJECT_STARTED,\n    DELETE_OBJECT_SUCCESS,\n    DELETE_OBJECT_FAILURE,\n\n    ADD_OBJECT,\n    UPDATE_OBJECT,\n    UPDATE_OBJECTS,\n    REMOVE_OBJECT,\n    SET_OBJECT_ATTRIBUTES,\n    VALIDATE_OBJECT,\n    SELECT_OBJECT,\n    SET_SELECTED_OBJECT,\n    DESELECT_OBJECT,\n} from '../types/objects_types'\n\nimport { deepCopy } from '../../methods/utils/utils';\n\n\nconst defaultState = {\n    objects: {},\n    selectedObject: null,\n\n    error: {},\n    pending: false\n};\n\nexport default function objectsReducer(state = defaultState, action) {\n    let index = ''\n    let objectID = ''\n    let objectsCopy = {}\n\n    switch (action.type) {\n\n        // ======================================== //\n        //                                          //\n        //              Get Objects               //\n        //                                          //\n        // ======================================== //\n        case GET_OBJECTS:\n            break;\n\n        case GET_OBJECTS_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        case GET_OBJECTS_SUCCESS:\n            objectsCopy = deepCopy(action.payload)\n            return {\n                ...state,\n                objects: action.payload,\n                pending: false\n            }\n\n        case GET_OBJECTS_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        // ======================================== //\n        //                                          //\n        //             Post Objects               //\n        //                                          //\n        // ======================================== //\n\n        case POST_OBJECT:\n            break;\n\n        case POST_OBJECT_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        case POST_OBJECT_SUCCESS:\n            objectsCopy = deepCopy(state.objects)\n            objectsCopy[action.payload._id] = action.payload\n            return {\n                ...state,\n                objects: objectsCopy,\n                pending: false,\n\n            }\n\n        case POST_OBJECT_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        // ======================================== //\n        //                                          //\n        //             Put Objects                //\n        //                                          //\n        // ======================================== //\n\n        case PUT_OBJECT:\n            break;\n\n        case PUT_OBJECT_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        case PUT_OBJECT_SUCCESS:\n            objectsCopy = deepCopy(state.objects)\n            objectsCopy[action.payload._id] = action.payload\n\n            return {\n                ...state,\n                objects: objectsCopy\n            }\n\n        case PUT_OBJECT_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case DELETE_OBJECT:\n            break;\n\n        case DELETE_OBJECT_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        case DELETE_OBJECT_SUCCESS:\n            objectsCopy = deepCopy(state.objects)\n            delete objectsCopy[action.payload]\n\n            return {\n                ...state,\n                objects: objectsCopy\n            }\n\n        case DELETE_OBJECT_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n\n\n        // ======================================== //\n        //                                          //\n        //             Objects Utils              //\n        //                                          //\n        // ======================================== //\n\n        case ADD_OBJECT:\n            objectsCopy = deepCopy(state.objects)\n            objectsCopy[action.payload.object._id] = action.payload.object\n            return {\n                ...state,\n                objects: objectsCopy,\n                selectedObject: objectsCopy[action.payload.object._id],\n            }\n\n        case UPDATE_OBJECT:\n            objectsCopy = deepCopy(state.objects)\n            objectsCopy[action.payload.object._id] = action.payload.object\n\n            if (state.selectedObject !== null) {\n                return {\n                    ...state,\n                    objects: objectsCopy,\n                    selectedObject: objectsCopy[state.selectedObject._id]\n                }\n            } else {\n                return {\n                    ...state,\n                    objects: objectsCopy\n                }\n            }\n\n        case UPDATE_OBJECTS:\n            objectsCopy = deepCopy(action.payload.objects)\n\n            if (state.selectedObject !== null) {\n                return {\n                    ...state,\n                    objects: deepCopy(action.payload.objects),\n                    selectedObject: deepCopy(action.payload.objects[state.selectedObject._id])\n                }\n            } else {\n                return {\n                    ...state,\n                    objects: deepCopy(action.payload.objects)\n                }\n            }\n\n        case REMOVE_OBJECT:\n            objectsCopy = deepCopy(state.objects)\n            delete objectsCopy[action.payload.id]\n\n            return {\n                ...state,\n                objects: objectsCopy,\n            }\n\n\n        case SET_OBJECT_ATTRIBUTES:\n\n            objectsCopy = deepCopy(state.objects)\n            objectsCopy = {\n                ...objectsCopy,\n                [state.selectedObject._id]: {\n                    ...state.selectedObject,\n                    ...action.payload,\n                }\n            }\n\n            // Object.assign(objectsCopy[action.payload.id], action.payload.attr)\n            return {\n                ...state,\n                objects: objectsCopy,\n                selectedObject: deepCopy(objectsCopy[state.selectedObject._id])\n            }\n\n\n        case SELECT_OBJECT:\n            objectsCopy = deepCopy(state.objects)\n            return {\n                ...state,\n                selectedObject: objectsCopy[action.payload.id]\n            }\n\n        case DESELECT_OBJECT:\n            return {\n                ...state,\n                selectedObject: null,\n            }\n\n        default:\n            return state;\n    }\n}\n","import {\n  SET_CONDITIONS_API,\n  SET_SCHEDULES_API,\n  SET_DASHBOARDS_API,\n  SET_SKILLS_API,\n  SET_DASHBOARD_BUTTONS_API,\n  SET_STATUS_API,\n  SET_TASK_QUEUE_API,\n  SET_TASKS_API,\n} from '../types/api_types';\n\nimport {\n  SET\n} from \"../types/prefixes\"\n\nimport {\n  DATA_PAGE\n} from \"../types/data_types\"\n\nconst defaultState = {\n  conditionsApi: null,\n  schedulesApi: null,\n  dashboardsApi: null,\n  skillsApi: null,\n  dashboardButtonsApi: null,\n  statusApi: null,\n  taskQueueApi: null,\n  tasksApi: null,\n  page: null,\n};\n\nexport default function apiReducer(state = defaultState, action) {\n\n  switch (action.type) {\n\n    case SET + DATA_PAGE:\n      return {\n        ...state,\n        page: action.payload,\n      }\n\n    case SET_CONDITIONS_API:\n      return  Object.assign({}, state, {\n        conditionsApi: action.payload,\n      });\n\n    case SET_SCHEDULES_API:\n      return  Object.assign({}, state, {\n        schedulesApi: action.payload,\n      });\n\n    case SET_STATUS_API:\n      return  Object.assign({}, state, {\n        statusApi: action.payload,\n      });\n\n    case SET_TASK_QUEUE_API:\n      return  Object.assign({}, state, {\n        taskQueueApi: action.payload,\n      });\n\n    case SET_TASKS_API:\n      return  Object.assign({}, state, {\n        tasksApi: action.payload,\n      });\n\n    default:\n      return state\n  }\n\n}\n","import {\n    TASKS,\n    TASK,\n    ANALYSIS,\n} from '../types/tasks_types';\n\nimport {\n    GET_,\n\n    _STARTED,\n    _SUCCESS,\n    _FAILURE,\n} from '../types/api_types';\n\n\nconst defaultState = {\n    tasksAnalysis: {},\n    taskAnalysis: {}\n};\n\n\nexport default function taskAnalysisReducer(state = defaultState, action) {\n\n\n    switch (action.type) {\n\n        // GET\n        // ***************\n\n        // multi\n        case GET_ + TASKS + ANALYSIS + _SUCCESS:\n            return {\n                ...state,\n                tasksAnalysis: action.payload,\n                pending: false\n            }\n\n        case GET_ + TASKS + ANALYSIS + _FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case GET_ + TASKS + ANALYSIS + _STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        // single\n        case GET_ + TASK + ANALYSIS + _SUCCESS:\n            return {\n                ...state,\n                taskAnalysis: action.payload,\n                pending: false\n            };\n\n        case GET_ + TASK + ANALYSIS + _FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case GET_ + TASK + ANALYSIS + _STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n        // ~~~~~~~~~~~~~~~\n\n        default:\n            return state\n    }\n}\n","export const GET_TASK_QUEUE = 'GET_TASK_QUEUE'\nexport const GET_TASK_QUEUE_STARTED = 'GET_TASK_QUEUE_STARTED'\nexport const GET_TASK_QUEUE_SUCCESS = 'GET_TASK_QUEUE_SUCCESS'\nexport const GET_TASK_QUEUE_FAILURE = 'GET_TASK_QUEUE_FAILURE'\n\nexport const GET_TASK_QUEUE_ITEM = 'GET_TASK_QUEUE_ITEM'\nexport const GET_TASK_QUEUE_ITEM_STARTED = 'GET_TASK_QUEUE_ITEM_STARTED'\nexport const GET_TASK_QUEUE_ITEM_SUCCESS = 'GET_TASK_QUEUE_ITEM_SUCCESS'\nexport const GET_TASK_QUEUE_ITEM_FAILURE = 'GET_TASK_QUEUE_ITEM_FAILURE'\n\nexport const POST_TASK_QUEUE = 'POST_TASK_QUEUE'\nexport const POST_TASK_QUEUE_STARTED = 'POST_TASK_QUEUE_STARTED'\nexport const POST_TASK_QUEUE_SUCCESS = 'POST_TASK_QUEUE_SUCCESS'\nexport const POST_TASK_QUEUE_FAILURE = 'POST_TASK_QUEUE_FAILURE'\n\nexport const PUT_TASK_QUEUE = 'PUT_TASK_QUEUE'\nexport const PUT_TASK_QUEUE_STARTED = 'PUT_TASK_QUEUE_STARTED'\nexport const PUT_TASK_QUEUE_SUCCESS = 'PUT_TASK_QUEUE_SUCCESS'\nexport const PUT_TASK_QUEUE_FAILURE = 'PUT_TASK_QUEUE_FAILURE'\n\nexport const DELETE_TASK_QUEUE = 'DELETE_TASK_QUEUE'\nexport const DELETE_TASK_QUEUE_STARTED = 'DELETE_TASK_QUEUE_STARTED'\nexport const DELETE_TASK_QUEUE_SUCCESS = 'DELETE_TASK_QUEUE_SUCCESS'\nexport const DELETE_TASK_QUEUE_FAILURE = 'DELETE_TASK_QUEUE_FAILURE'\n\nexport const TASK_QUEUE = 'TASK_QUEUE'\nexport const TASK_QUEUE_ALL = 'TASK_QUEUE_ALL'\nexport const TASK_QUEUE_ITEM = 'TASK_QUEUE_ITEM'\nexport const TASK_QUEUE_OPEN = 'TASK_QUEUE_OPEN'\nexport const HANDLE_POST_TASK_QUEUE = 'HANDLE_POST_TASK_QUEUE'\nexport const INCREMENT_GET_DATA_FAILURE_COUNT = 'INCREMENT_GET_DATA_FAILURE_COUNT'\n","import React, { useState, useMemo, useEffect } from 'react';\n\n// Import Styles\nimport * as styled from '../hil_modals.style'\n\nconst HILSuccess = (props) => {\n\n    return(\n        <styled.HilContainer style={{justifyContent: 'center', }}>\n            <styled.HilIcon color='green' style={{fontSize:'6rem'}} className='fas fa-check'/>\n            <styled.HilMessage>Task has been added to the Queue</styled.HilMessage>\n        </styled.HilContainer>\n    )\n}\n\nexport default HILSuccess","import {\n  GET_SCHEDULES,\n  GET_SCHEDULES_STARTED,\n  GET_SCHEDULES_SUCCESS,\n  GET_SCHEDULES_FAILURE,\n\n  POST_SCHEDULE,\n  POST_SCHEDULE_STARTED,\n  POST_SCHEDULE_SUCCESS,\n  POST_SCHEDULE_FAILURE,\n\n  DELETE_SCHEDULE,\n  DELETE_SCHEDULES,\n\n  ADD_SCHEDULES,\n  DELETE_SCHEDULE_STARTED,\n  DELETE_SCHEDULE_SUCCESS,\n  DELETE_SCHEDULE_FAILURE,\n\n  PUT_SCHEDULE,\n  PUT_SCHEDULE_STARTED,\n  PUT_SCHEDULE_SUCCESS,\n  PUT_SCHEDULE_FAILURE,\n\n  UPDATE_SCHEDULE,\n  ADD_SCHEDULES_UNSAVED,\n} from '../types/schedule_types';\n\nimport { clone_object } from '../../methods/utils/utils';\n\nconst defaultState = {\n\n  schedules: {},\n  error: {},\n  pending: false\n};\n\nexport default function schedulesReducer(state = defaultState, action) {\n  var schedules = {}\n\n  switch (action.type) {\n\n    // get\n    // ***************\n    case GET_SCHEDULES_SUCCESS:\n      return  Object.assign({}, state, {\n        schedules: {...state.schedules, ...action.payload.schedulesObj},\n        pending: false\n      });\n\n    case GET_SCHEDULES_FAILURE:\n      return  Object.assign({}, state, {\n        error: action.payload,\n        pending: false\n      });\n\n    case GET_SCHEDULES_STARTED:\n      return  Object.assign({}, state, {\n        pending: true\n      });\n    // ~~~~~~~~~~~~~~~\n\n    // create\n    // ***************\n    case POST_SCHEDULE_SUCCESS:\n      schedules = clone_object(state.schedules);\n      console.log('CREATE_SCHEDULE_SUCCESS schedules before delete ', schedules)\n      console.log('CREATE_SCHEDULE_SUCCESS action.payload ', action.payload)\n      delete schedules[action.payload.oldScheduleId];\n      console.log('CREATE_SCHEDULE_SUCCESS schedules after delete', schedules)\n      //schedules[action.payload.createdSchedule._id.$oid] = action.payload.createdSchedule;\n      console.log('CREATE_SCHEDULE_SUCCESS schedules after add', schedules)\n\n      return  Object.assign({}, state, {\n        schedules: {...schedules, ...action.payload.createdSchedules},\n        pending: false\n      });\n\n\n    case POST_SCHEDULE_FAILURE:\n      return  Object.assign({}, state, {\n        error: action.payload,\n        pending: false\n      });\n\n    case POST_SCHEDULE_STARTED:\n      return  Object.assign({}, state, {\n        pending: true\n      });\n    // ~~~~~~~~~~~~~~~\n\n    // delete\n    // ***************\n    case DELETE_SCHEDULE_SUCCESS:\n      schedules = clone_object(state.schedules);\n      delete schedules[action.payload.scheduleId];\n\n      return  Object.assign({}, state, {\n        schedules: {...schedules},\n        pending: false\n      });\n\n\n    case DELETE_SCHEDULE_FAILURE:\n      return  Object.assign({}, state, {\n        error: action.payload,\n        pending: false\n      });\n\n    case DELETE_SCHEDULE_STARTED:\n      return  Object.assign({}, state, {\n        pending: true\n      });\n    // ~~~~~~~~~~~~~~~\n\n    // update\n    // ***************\n    case PUT_SCHEDULE_SUCCESS:\n      //schedules = clone_object(state.schedules);\n      //schedules[action.payload.scheduleId] = action.payload.schedules;\n\n      return  Object.assign({}, state, {\n        schedules: {...state.schedules, ...action.payload.schedules},\n        pending: false\n      });\n\n\n    case PUT_SCHEDULE_FAILURE:\n      return  Object.assign({}, state, {\n        error: action.payload,\n        pending: false\n      });\n\n    case PUT_SCHEDULE_STARTED:\n      return  Object.assign({}, state, {\n        pending: true\n      });\n    // ~~~~~~~~~~~~~~~\n\n    case ADD_SCHEDULES:\n      return  Object.assign({}, state, {\n        schedules: {...state.schedules, ...action.schedules}\n      });\n\n    case DELETE_SCHEDULES:\n        schedules = clone_object(state.schedules)\n        action.scheduleIds.forEach((scheduleId, index, scheduleIds)=> {\n          delete schedules[scheduleId];\n        })\n\n        return  Object.assign({}, state, {\n\n          schedules: {...schedules}\n        });\n\n    case UPDATE_SCHEDULE:\n        schedules = clone_object(state.schedules);\n        delete schedules[action.scheduleId];\n        schedules[action.schedule.id] = action.schedule\n\n        return  Object.assign({}, state, {\n          schedules: {...schedules}\n        });\n\n    default:\n      return state\n  }\n}\n","import {\n    GET_SKILLS,\n    GET_SKILLS_STARTED,\n    GET_SKILLS_SUCCESS,\n    GET_SKILLS_FAILURE,\n\n    POST_SKILLS,\n    POST_SKILLS_STARTED,\n    POST_SKILLS_SUCCESS,\n    POST_SKILLS_FAILURE,\n\n    PUT_SKILLS,\n    PUT_SKILLS_STARTED,\n    PUT_SKILLS_SUCCESS,\n    PUT_SKILLS_FAILURE,\n\n    DELETE_SKILLS,\n    DELETE_SKILLS_STARTED,\n    DELETE_SKILLS_SUCCESS,\n    DELETE_SKILLS_FAILURE\n} from '../types/skills_types'\n\nimport { deepCopy } from '../../methods/utils/utils.js'\n\n\nconst defaultState = {\n  skills: [],\n  error: {},\n  pending: false,\n  currentSkill : {},\n  skillUpdated : false,\n  allFieldsFilled: false,\n};\n\nlet index;\n\nexport default function skillsReducer(state = defaultState, action) {\n    let skillsClone = {}\n\n    switch (action.type) {\n\n        case 'SKILL_SELECTED':\n            return {\n                ...state,\n                currentSkill: action.payload\n            }\n\n        case 'ALL_FIELDS_FILLED':\n            return{\n                ...state,\n                allFieldsFilled: action.payload\n            }\n\n        case 'SKILL_UPDATED':\n            return{\n                ...state,\n                skillUpdated: action.payload\n            }\n\n        case GET_SKILLS:\n            break;\n\n        case GET_SKILLS_STARTED:\n            return  Object.assign({}, state, {\n                pending: true\n            });\n\n        case GET_SKILLS_SUCCESS:\n            return  Object.assign({}, state, {\n                skills: [...action.payload],\n                pending: false\n            });\n\n        case GET_SKILLS_FAILURE:\n            return  Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case POST_SKILLS:\n            break;\n\n        case POST_SKILLS_STARTED:\n            return  Object.assign({}, state, {\n                pending: true\n            });\n\n        case POST_SKILLS_SUCCESS:\n            skillsClone = deepCopy(state.skills);\n            return  Object.assign({}, state, {\n                skills: [...skillsClone, action.payload],\n                pending: false\n            });\n\n        case POST_SKILLS_FAILURE:\n            return  Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case PUT_SKILLS:\n            break;\n\n        case PUT_SKILLS_STARTED:\n            return  Object.assign({}, state, {\n                pending: true\n            });\n\n        case PUT_SKILLS_SUCCESS:\n            skillsClone = deepCopy(state.skills);\n            index = skillsClone.findIndex(s => {\n                return s._id.$oid === action.payload._id.$oid;\n            });\n            skillsClone.splice(index, 1, action.payload);\n            return  Object.assign({}, state, {\n                skills: skillsClone,\n                pending: false\n            });\n\n        case PUT_SKILLS_FAILURE:\n            return  Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case DELETE_SKILLS:\n            break;\n\n        case DELETE_SKILLS_STARTED:\n            return  Object.assign({}, state, {\n                pending: true\n            });\n\n        case DELETE_SKILLS_SUCCESS:\n            skillsClone = deepCopy(state.skills);\n            index = skillsClone.findIndex(s => {\n                return s._id.$oid === action.payload.skillId;\n            })\n            skillsClone.splice(index, 1);\n            return  Object.assign({}, state, {\n                skills: skillsClone,\n                pending: false\n            });\n\n        case DELETE_SKILLS_FAILURE:\n            return  Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        default:\n            return state;\n\n    }\n}\n","import {\n    GET_STATIONS_STARTED,\n    GET_STATIONS_SUCCESS,\n    GET_STATIONS_FAILURE,\n\n    POST_STATION_STARTED,\n    POST_STATION_SUCCESS,\n    POST_STATION_FAILURE,\n\n    PUT_STATION_STARTED,\n    PUT_STATION_SUCCESS,\n    PUT_STATION_FAILURE,\n\n    DELETE_STATION_STARTED,\n    DELETE_STATION_SUCCESS,\n    DELETE_STATION_FAILURE,\n\n    ADD_STATION,\n    SET_SELECTED_STATION,\n    UPDATE_STATION,\n    SET_STATION_ATTRIBUTES,\n    UPDATE_STATIONS,\n    REMOVE_STATION,\n    EDITING_STATION\n\n} from '../types/stations_types'\n\n// Import Utils\nimport { deepCopy, isEquivalent } from '../../methods/utils/utils';\nimport { compareExistingVsIncomingLocations } from '../../methods/utils/locations_utils'\n\nconst defaultState = {\n    stations: {},\n\n    selectedStation: null,\n\n    editingStation: false,\n\n    d3: {},\n\n    error: {},\n    pending: false,\n}\n\nexport default function stationsReducer(state = defaultState, action) {\n    let stationsCopy\n    /**\n     * Updates the state of stations to include the incoming payload station.\n     * If the payload is the current selected Station, then update that as well\n     * @param {object} station\n     */\n    const onUpdateStation = (station) => {\n        return {\n            ...state,\n            stations: {\n                ...state.stations,\n                [station._id]: station\n            },\n            // If the post station is the selectedStation, then update selected station\n            selectedStation: state.selectedStation !== null && state.selectedStation._id === station._id && station,\n            pending: false,\n        }\n    }\n\n    switch (action.type) {\n\n        // ======================================== //\n        //                                          //\n        //                UTILS                     //\n        //                                          //\n        // ======================================== //\n\n        // Adds station to front-end without adding it to the backend\n        case ADD_STATION:\n            return onUpdateStation(action.payload)\n\n        // Sets Stations Attributes\n        case SET_STATION_ATTRIBUTES:\n            // If there is a selected station and the payload is that station, then edit the selected station and dont edit the station in state\n            if (!!state.selectedStation && action.payload.id === state.selectedStation._id) {\n                return {\n                    ...state,\n                    selectedStation: {\n                        ...state.selectedStation,\n                        ...action.payload.attr\n                    }\n                }\n            }\n\n            else {\n                let updatedStation = state.stations[action.payload.id]\n                Object.assign(updatedStation, action.payload.attr)\n                return onUpdateStation(updatedStation)\n            }\n\n        // Sets a selected Station\n        case SET_SELECTED_STATION:\n            return {\n                ...state,\n                selectedStation: action.payload\n            }\n\n        // Updates a station locally on the front-end\n        case UPDATE_STATION:\n            return onUpdateStation(action.payload)\n\n        // Upates stations locally on the front-end\n        case UPDATE_STATIONS:\n            return {\n                ...state,\n                stations: action.payload.stations,\n                selectedStation: !!action.payload.selectedStation ? action.payload.selectedStation : state.selectedStation,\n                d3: !!action.payload.d3 ? action.payload.d3 : state.d3\n            }\n\n        case EDITING_STATION:\n            return {\n                ...state,\n                editingStation: action.payload\n            }\n\n        case REMOVE_STATION:\n            stationsCopy = deepCopy(state.stations)\n            delete stationsCopy[action.payload]\n            return {\n                ...state,\n                stations: stationsCopy\n            }\n\n        // ========== GET ========== //\n        case GET_STATIONS_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        case GET_STATIONS_SUCCESS:\n            const parsedStations = compareExistingVsIncomingLocations(deepCopy(action.payload), deepCopy(state.stations), state.d3)\n\n            return {\n                ...state,\n                stations: parsedStations,\n                pending: false\n            }\n\n        case GET_STATIONS_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        // ========== POST ========== //\n        case POST_STATION_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        case POST_STATION_SUCCESS:\n            return onUpdateStation(action.payload)\n\n        case POST_STATION_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        // ========== PUT ========== //\n        case PUT_STATION_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        case PUT_STATION_SUCCESS:\n            return onUpdateStation(action.payload)\n\n        case PUT_STATION_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        // ========== DELETE ========== //\n        case DELETE_STATION_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        case DELETE_STATION_SUCCESS:\n            stationsCopy = deepCopy(state.stations)\n            delete stationsCopy[action.payload]\n            return {\n                ...state,\n                stations: stationsCopy,\n                selectedStation: null,\n                pending: false,\n                hello: true,\n            }\n\n        case DELETE_STATION_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        default:\n            return state\n    }\n\n}\n","import {\n    GET_POSITIONS_STARTED,\n    GET_POSITIONS_SUCCESS,\n    GET_POSITIONS_FAILURE,\n\n    POST_POSITION_STARTED,\n    POST_POSITION_SUCCESS,\n    POST_POSITION_FAILURE,\n\n    PUT_POSITION_STARTED,\n    PUT_POSITION_SUCCESS,\n    PUT_POSITION_FAILURE,\n\n    DELETE_POSITION_STARTED,\n    DELETE_POSITION_SUCCESS,\n    DELETE_POSITION_FAILURE,\n\n    ADD_POSITION,\n    SET_SELECTED_POSITION,\n    UPDATE_POSITION,\n    SET_POSITION_ATTRIBUTES,\n    UPDATE_POSITIONS,\n    REMOVE_POSITION,\n    EDITING_POSITION,\n    SET_SELECTED_STATION_CHILDREN_COPY\n\n} from '../types/positions_types'\n\n// Import Utils\nimport { deepCopy, isEquivalent } from '../../methods/utils/utils';\nimport { compareExistingVsIncomingLocations } from '../../methods/utils/locations_utils'\n\nconst defaultState = {\n    positions: {},\n\n    selectedPosition: null,\n\n    editingPosition: false,\n    selectedStationChildrenCopy: null,\n\n    d3: {},\n\n    error: {},\n    pending: false,\n}\n\nconst positionsReducer = (state = defaultState, action) => {\n    let positionsCopy\n\n    /**\n     * Updates the state of positions to include the incoming payload position.\n     * If the payload is the current selected Position, then update that as well\n     * @param {object} position \n     */\n    const onUpdatePosition = (position) => {\n        return {\n            ...state,\n            positions: {\n                ...state.positions,\n                [position._id]: position\n            },\n            // If the post position is the selectedPosition, then update selected position\n            selectedPosition: state.selectedPosition !== null && state.selectedPosition._id === position._id && position,\n            pending: false,\n        }\n    }\n\n    switch (action.type) {\n\n        // ========== UTILS ========== //\n\n        // Adds position to front-end without adding it to the backend\n        case ADD_POSITION:\n            return onUpdatePosition(action.payload)\n\n        // Sets Positions Attributes\n        case SET_POSITION_ATTRIBUTES:\n            // If editing a child position then update the position in the childrencopy\n            if (!!state.selectedStationChildrenCopy && action.payload.id in state.selectedStationChildrenCopy) {\n                return {\n                    ...state,\n                    selectedStationChildrenCopy: {\n                        ...state.selectedStationChildrenCopy,\n                        [action.payload.id]: {\n                            ...state.selectedStationChildrenCopy[action.payload.id],\n                            ...action.payload.attr,\n                        }\n                    },\n                }\n            }\n\n            // If there is a selected station and the payload is that station, then edit the selected station and dont edit the station in state\n            else if (!!state.selectedPosition && action.payload.id === state.selectedPosition._id) {\n                return {\n                    ...state,\n                    selectedPosition: {\n                        ...state.selectedPosition,\n                        ...action.payload.attr\n                    }\n                }\n            }\n\n            else {\n                let updatedPosition = state.positions[action.payload.id]\n                Object.assign(updatedPosition, action.payload.attr)\n                return onUpdatePosition(updatedPosition)\n            }\n\n        // Sets a selected Position\n        case SET_SELECTED_POSITION:\n            return {\n                ...state,\n                selectedPosition: action.payload\n            }\n\n        // Updates a position locally on the front-end\n        case UPDATE_POSITION:\n            return onUpdatePosition(action.payload)\n\n        // Upates positions locally on the front-end\n        case UPDATE_POSITIONS:\n            // TODO Comment\n            return {\n                ...state,\n                positions: action.payload.positions,\n                selectedPosition: !!action.payload.selectedPosition ? action.payload.selectedPosition : state.selectedPosition,\n                selectedStationChildrenCopy: !!action.payload.childrenPositions ? action.payload.childrenPositions : state.selectedStationChildrenCopy,\n                d3: !!action.payload.d3 ? action.payload.d3 : state.d3\n            }\n\n        case EDITING_POSITION:\n            return {\n                ...state,\n                editingPosition: action.payload\n            }\n\n        case SET_SELECTED_STATION_CHILDREN_COPY:\n            return {\n                ...state,\n                selectedStationChildrenCopy: action.payload\n            }\n\n        case REMOVE_POSITION:\n            positionsCopy = deepCopy(state.positions)\n            delete positionsCopy[action.payload]\n            // positionsCopy.delete(action.payload)\n            return {\n                ...state,\n                positions: positionsCopy\n            }\n\n        // ========== GET ========== //\n        case GET_POSITIONS_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        case GET_POSITIONS_SUCCESS:\n\n            const parsedPositions = compareExistingVsIncomingLocations(deepCopy(action.payload), deepCopy(state.positions), state.d3)\n\n            return {\n                ...state,\n                positions: parsedPositions,\n                pending: false\n            }\n\n        case GET_POSITIONS_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        // ========== POST ========== //\n        case POST_POSITION_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        case POST_POSITION_SUCCESS:\n            return onUpdatePosition(action.payload)\n\n        case POST_POSITION_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        // ========== PUT ========== //\n        case PUT_POSITION_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        case PUT_POSITION_SUCCESS:\n            if (action.payload.change_key === 'deleted') {\n                return state\n            }\n            return onUpdatePosition(action.payload)\n\n        case PUT_POSITION_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        // ========== DELETE ========== //\n        case DELETE_POSITION_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        case DELETE_POSITION_SUCCESS:\n            positionsCopy = deepCopy(state.positions)\n            delete positionsCopy[action.payload]\n            return {\n                ...state,\n                positions: positionsCopy,\n                selectedPosition: null,\n                pending: false,\n            }\n\n        case DELETE_POSITION_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        default:\n            return state\n    }\n\n}\n\nexport default positionsReducer","import {\n    GET_DASHBOARDS,\n    GET_DASHBOARDS_STARTED,\n    GET_DASHBOARDS_SUCCESS,\n    GET_DASHBOARDS_FAILURE,\n\n    GET_DASHBOARD,\n    GET_DASHBOARD_STARTED,\n    GET_DASHBOARD_SUCCESS,\n    GET_DASHBOARD_FAILURE,\n\n    POST_DASHBOARD,\n    POST_DASHBOARD_STARTED,\n    POST_DASHBOARD_SUCCESS,\n    POST_DASHBOARD_FAILURE,\n\n    PUT_DASHBOARD,\n    PUT_DASHBOARD_STARTED,\n    PUT_DASHBOARD_SUCCESS,\n    PUT_DASHBOARD_FAILURE,\n\n    DELETE_DASHBOARD,\n    DELETE_DASHBOARD_STARTED,\n    DELETE_DASHBOARD_SUCCESS,\n    DELETE_DASHBOARD_FAILURE,\n\n    ADD_DASHBOARD,\n    UPDATE_DASHBOARD,\n    UPDATE_DASHBOARDS,\n    REMOVE_DASHBOARD,\n    SET_DASHBOARD_ATTRIBUTES,\n    VALIDATE_DASHBOARD,\n    SELECT_DASHBOARD,\n    SET_SELECTED_DASHBOARD,\n    DESELECT_DASHBOARD,\n    HOVER_DASHBOARD_ID,\n\n    DASHBOARD_OPEN,\n} from '../types/dashboards_types'\n\nimport { deepCopy } from '../../methods/utils/utils';\nimport {SET} from \"../types/prefixes\";\nimport {DASHBOARD} from \"../types/data_types\";\nimport {FINISH_ENABLED, KICK_OFF_ENABLED} from \"../types/suffixes\";\n\n\nconst defaultState = {\n\n    dashboards: null,\n    kickOffEnabledDashboards: {}, // key = dashboard id - value = list of processes where the processes first station is the same as the dashboard's station\n    finishEnabledDashboards: {}, // key = dashboard id - value = list of processes where the processes first station is the same as the dashboard's station\n\n    error: {},\n    pending: false,\n\n    dashboardOpen: false,\n};\n\nexport default function dashboardsReducer(state = defaultState, action) {\n    let dashboardsCopy = {}\n\n    switch (action.type) {\n\n        case SET + DASHBOARD + KICK_OFF_ENABLED: {\n            const {\n                dashboardId,\n                kickOffEnabled\n            } = action.payload\n\n            return {\n                ...state,\n                kickOffEnabledDashboards: {...state.kickOffEnabledDashboards, [dashboardId]: kickOffEnabled},\n            }\n        }\n\n\n        case SET + DASHBOARD + FINISH_ENABLED: {\n            const {\n                dashboardId,\n                finishEnabled\n            } = action.payload\n\n            return {\n                ...state,\n                finishEnabledDashboards: {...state.finishEnabledDashboards, [dashboardId]: finishEnabled},\n            }\n        }\n\n\n\n        case DASHBOARD_OPEN:\n            return {\n                ...state,\n                dashboardOpen: action.payload\n            }\n\n        // ======================================== //\n        //                                          //\n        //              Get Dashboards              //\n        //                                          //\n        // ======================================== //\n        case GET_DASHBOARDS:\n            break;\n\n        case GET_DASHBOARDS_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        case GET_DASHBOARDS_SUCCESS:\n            dashboardsCopy = deepCopy(action.payload)\n            return {\n                ...state,\n                dashboards: action.payload,\n                pending: false\n            }\n\n        case GET_DASHBOARDS_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        // ======================================== //\n        //                                          //\n        //             Post Dashboards               //\n        //                                          //\n        // ======================================== //\n\n        case POST_DASHBOARD:\n            break;\n\n        case POST_DASHBOARD_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        case POST_DASHBOARD_SUCCESS:\n            return {\n                ...state,\n                dashboards: {...state.dashboards, [action.payload._id.$oid]: action.payload},\n                pending: false,\n\n            }\n\n        case POST_DASHBOARD_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        // ======================================== //\n        //                                          //\n        //             Put Dashboards                //\n        //                                          //\n        // ======================================== //\n\n        case PUT_DASHBOARD:\n            break;\n\n        case PUT_DASHBOARD_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        case PUT_DASHBOARD_SUCCESS:\n\n            return {\n                ...state,\n                dashboards: {...state.dashboards, [action.payload._id.$oid]: action.payload},\n            }\n\n        case PUT_DASHBOARD_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case DELETE_DASHBOARD:\n            break;\n\n        case DELETE_DASHBOARD_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        case DELETE_DASHBOARD_SUCCESS:\n            dashboardsCopy = deepCopy(state.dashboards)\n\n            delete dashboardsCopy[action.payload]\n\n            return {\n                ...state,\n                dashboards: dashboardsCopy\n            }\n\n        case DELETE_DASHBOARD_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n\n        default:\n            return state;\n    }\n}\n","import {\n  CLEAR_ERROR\n} from '../types/error_types';\nimport { clone_object } from '../../methods/utils/utils';\n\nconst defaultState = {\n\n};\n\nexport default function errorReducer(state = defaultState, action) {\n\n  const { type, payload } = action;\n  const matches = /(.*)_(STARTED|FAILURE)/.exec(type);\n\n  if(type == CLEAR_ERROR) {\n    console.log('clearing error')\n    var stateClone = clone_object(state);\n    //delete stateClone[]\n    return {\n      ...state,\n      // Store errorMessage\n      // e.g. stores errorMessage when receiving GET_TODOS_FAILURE\n      //      else clear errorMessage when receiving GET_TODOS_REQUEST\n      [payload]: '',\n    };\n  }\n\n  // not a *_REQUEST / *_FAILURE actions, so we ignore them\n  if (!matches) return state;\n\n  const [, requestName, requestState] = matches;\n  //console.log('errorReducer matches', matches)\n  //console.log('errorReducer requestName', requestName)\n  //console.log('errorReducer requestState', requestState)\n\n\n  return {\n    ...state,\n    // Store errorMessage\n    // e.g. stores errorMessage when receiving GET_TODOS_FAILURE\n    //      else clear errorMessage when receiving GET_TODOS_REQUEST\n    [requestName]: requestState === 'FAILURE' ? payload : '',\n  };\n};\n","import {\n    GET_STATUS,\n    GET_STATUS_STARTED,\n    GET_STATUS_SUCCESS,\n    GET_STATUS_FAILURE,\n\n    POST_STATUS,\n    POST_STATUS_STARTED,\n    POST_STATUS_SUCCESS,\n    POST_STATUS_FAILURE,\n} from '../types/status_types';\n\nimport { clone_object } from '../../methods/utils/utils';\n\nconst defaultState = {\n    status: {},\n    pending: false,\n    hilTimer: String.fromCharCode(160),\n\n};\n\nexport default function statusReducer(state = defaultState, action) {\n\n    switch (action.type) {\n\n        // get\n        // ***************\n        case GET_STATUS_SUCCESS:\n            return Object.assign({}, state, {\n                status: action.payload,\n                pending: false\n            });\n\n        case GET_STATUS_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case GET_STATUS_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n        // ~~~~~~~~~~~~~~~\n\n        // post\n        // ***************\n        case POST_STATUS_SUCCESS:\n            return Object.assign({}, state, {\n                pending: false,\n                status: { ...state.status, ...action.payload },\n            });\n\n        case POST_STATUS_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case POST_STATUS_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n        // ~~~~~~~~~~~~~~~\n\n        default:\n            return state\n    }\n}\n","import {\n    GET_TASK_QUEUE,\n    TASK_QUEUE,\n    TASK_QUEUE_ALL,\n    TASK_QUEUE_ITEM,\n    GET_TASK_QUEUE_STARTED,\n    GET_TASK_QUEUE_SUCCESS,\n    GET_TASK_QUEUE_FAILURE,\n\n    GET_TASK_QUEUE_ITEM,\n    GET_TASK_QUEUE_ITEM_STARTED,\n    GET_TASK_QUEUE_ITEM_SUCCESS,\n    GET_TASK_QUEUE_ITEM_FAILURE,\n\n    POST_TASK_QUEUE,\n    POST_TASK_QUEUE_STARTED,\n    POST_TASK_QUEUE_SUCCESS,\n    POST_TASK_QUEUE_FAILURE,\n\n    PUT_TASK_QUEUE,\n    PUT_TASK_QUEUE_STARTED,\n    PUT_TASK_QUEUE_SUCCESS,\n    PUT_TASK_QUEUE_FAILURE,\n\n    DELETE_TASK_QUEUE,\n    DELETE_TASK_QUEUE_STARTED,\n    DELETE_TASK_QUEUE_SUCCESS,\n    DELETE_TASK_QUEUE_FAILURE,\n\n    TASK_QUEUE_OPEN,\n    INCREMENT_GET_DATA_FAILURE_COUNT\n} from '../types/task_queue_types';\n\nimport {\n    GET_,\n    POST_,\n    DELETE_,\n    PUT_,\n\n    _STARTED,\n    _SUCCESS,\n    _FAILURE,\n} from '../types/api_types';\n\nimport { clone_object, deepCopy } from '../../methods/utils/utils';\n\nconst defaultState = {\n    taskQueue: {},\n    pending: false,\n    error: '',\n    taskQueueItemClicked: '',\n    hilTimers: {},\n    hilResponse: '',\n    activeHilDashboards: {},\n    localHumanTask: null,\n    taskQueueOpen: false,\n    getFailureCount: 1\n};\n\nexport default function taskQueueReducer(state = defaultState, action) {\n    let taskQueue = {}\n\n    switch (action.type) {\n\n        /**\n         * HILs?\n         */\n        case 'TASK_QUEUE_ITEM_CLICKED':\n            return {\n                ...state,\n                taskQueueItemClicked: action.payload\n            }\n\n        case 'HIL_TIMERS':\n            return {\n                ...state,\n                hilTimers: action.payload,\n            }\n\n        // Used for immediate HIL response input\n        case 'HIL_RESPONSE':\n            return {\n                ...state,\n                hilResponse: action.payload,\n            }\n\n        // Used for when a human task is clicked, should only show dashboard on the clicked tablet\n        case 'LOCAL_HUMAN_TASK':\n            return {\n                ...state,\n                localHumanTask: action.payload,\n            }\n\n        // Used to set first in, first out dashboard HILs\n        // Not 100% tested, but in theory should work\n        case 'ACTIVE_HIL_DASHBOARDS':\n            return {\n                ...state,\n                activeHilDashboards: action.payload,\n            }\n\n\n        // get\n        // ***************\n        case GET_TASK_QUEUE_SUCCESS:\n            if (action.payload === undefined) {\n                action.payload = {}\n            }\n            return Object.assign({}, state, {\n                taskQueue: action.payload,\n                pending: false\n            });\n\n        case GET_TASK_QUEUE_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case GET_TASK_QUEUE_STARTED:\n\n            return {\n                ...state,\n                pending: true,\n            }\n        // ~~~~~~~~~~~~~~~\n\n        // post\n        // ***************\n        case POST_TASK_QUEUE_SUCCESS:\n            return {\n                ...state,\n                taskQueue: {\n                    ...state.taskQueue,\n                    [action.payload.createdTaskQueueItem._id]: action.payload.createdTaskQueueItem\n                },\n                error: '',\n                pending: false,\n            }\n\n        case POST_TASK_QUEUE_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case POST_TASK_QUEUE_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n        // ~~~~~~~~~~~~~~~\n\n        // put\n        // ***************\n        case PUT_TASK_QUEUE_SUCCESS:\n\n            const updatedTaskQ = deepCopy({\n                ...action.payload.item,\n                _id: { $oid: action.payload.ID }\n\n            })\n\n            let forceUpdate = {}\n\n            forceUpdate = Object.assign(forceUpdate, updatedTaskQ)\n\n            return {\n                ...state,\n                taskQueue: {\n                    ...state.taskQueue,\n                    [action.payload.ID]: forceUpdate,\n                },\n                error: '',\n                pending: false,\n            }\n\n        case PUT_TASK_QUEUE_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case PUT_TASK_QUEUE_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n        // ~~~~~~~~~~~~~~~\n\n        // delete\n        // ***************\n        case DELETE_ + TASK_QUEUE_ALL + _SUCCESS:\n            return Object.assign({}, state, {\n                taskQueue: {},\n                pending: false\n            });\n\n        case DELETE_ + TASK_QUEUE_ALL + _FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case DELETE_ + TASK_QUEUE_ALL + _STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n        // ~~~~~~~~~~~~~~~\n\n        // delete\n        // ***************\n        case DELETE_ + TASK_QUEUE_ITEM + _SUCCESS:\n            taskQueue = clone_object(state.taskQueue);\n            delete taskQueue[action.payload.id];\n\n            return Object.assign({}, state, {\n                taskQueue: { ...taskQueue },\n                pending: false\n            });\n\n        case DELETE_ + TASK_QUEUE_ITEM + _FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case DELETE_ + TASK_QUEUE_ITEM + _STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        case TASK_QUEUE_OPEN:\n            return {\n                ...state,\n                taskQueueOpen: action.payload,\n            }\n\n        case INCREMENT_GET_DATA_FAILURE_COUNT:\n            return {\n                ...state,\n                getFailureCount: state.getFailureCount + 1,\n            }\n        // ~~~~~~~~~~~~~~~\n\n        default:\n            return state\n    }\n}\n","import { ADD_TASKS, ADD_SCHEDULES, DELETE_SCHEDULES } from '../types/tasks_types';\n\nimport {\n  ON_BLUR,\n  ON_FOCUS\n} from '../types/keyboard_types';\n\nimport { clone_object } from '../../methods/utils/utils';\n\nconst defaultState = {\n\n  target: null,\n  focused: false,\n  showKeyboard: false\n};\n\nexport default function keyboardReducer(state = defaultState, action) {\n  var schedules = {}\n\n  switch (action.type) {\n\n    case ON_FOCUS:\n      return  Object.assign({}, state, {\n        target: action.target,\n        focused: true,\n        showKeyboard: true\n      });\n\n      case ON_BLUR:\n        return  Object.assign({}, state, {\n          target: null,\n          focused: false,\n          showKeyboard: false\n        });\n\n\n\n    default:\n      return state\n  }\n}\n","import {\n    GET_TASKS,\n    GET_TASKS_STARTED,\n    GET_TASKS_SUCCESS,\n    GET_TASKS_FAILURE,\n\n    GET_TASK,\n    GET_TASK_STARTED,\n    GET_TASK_SUCCESS,\n    GET_TASK_FAILURE,\n\n    POST_TASK,\n    POST_TASK_STARTED,\n    POST_TASK_SUCCESS,\n    POST_TASK_FAILURE,\n\n    PUT_TASK,\n    PUT_TASK_STARTED,\n    PUT_TASK_SUCCESS,\n    PUT_TASK_FAILURE,\n\n    DELETE_TASK,\n    DELETE_TASK_STARTED,\n    DELETE_TASK_SUCCESS,\n    DELETE_TASK_FAILURE,\n\n    ADD_TASK,\n    SET_TASKS,\n    UPDATE_TASK,\n    UPDATE_TASKS,\n    REMOVE_TASK,\n    SET_TASK_ATTRIBUTES,\n    VALIDATE_TASK,\n    SELECT_TASK,\n    SET_SELECTED_TASK,\n    DESELECT_TASK,\n    EDITING_TASK, REMOVE_TASKS,\n\n} from '../types/tasks_types'\n\nimport { deepCopy } from '../../methods/utils/utils';\nimport {isObject} from \"../../methods/utils/object_utils\";\n\n\nconst defaultState = {\n    tasks: {},\n    selectedTask: null,\n\n    error: {},\n    pending: false\n};\n\nexport default function tasksReducer(state = defaultState, action) {\n    let index = ''\n    let taskID = ''\n    let tasksCopy = {};\n\n    switch (action.type) {\n\n        // ======================================== //\n        //                                          //\n        //              Get Tasks               //\n        //                                          //\n        // ======================================== //\n        case GET_TASKS:\n            break;\n\n        case GET_TASKS_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        case GET_TASKS_SUCCESS:\n            tasksCopy = deepCopy(action.payload)\n            return {\n                ...state,\n                tasks: action.payload,\n                pending: false\n            }\n\n        case GET_TASKS_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        // ======================================== //\n        //                                          //\n        //             Post Tasks               //\n        //                                          //\n        // ======================================== //\n\n        case POST_TASK:\n            break;\n\n        case POST_TASK_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        case POST_TASK_SUCCESS:\n            const ID = deepCopy(action.payload._id)\n            return {\n                ...state,\n                tasks: {\n                    ...state.tasks,\n                    [ID]: action.payload,\n                },\n                pending: false,\n\n            }\n\n        case POST_TASK_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        // ======================================== //\n        //                                          //\n        //             Put Tasks                //\n        //                                          //\n        // ======================================== //\n\n        case PUT_TASK:\n            break;\n\n        case PUT_TASK_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        case PUT_TASK_SUCCESS:\n            return {\n                ...state,\n                tasks: {\n                    ...state.tasks,\n                    [action.payload._id]: action.payload,\n                }\n            }\n\n        case PUT_TASK_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case DELETE_TASK:\n            break;\n\n        case DELETE_TASK_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        case DELETE_TASK_SUCCESS:\n            tasksCopy = deepCopy(state.tasks)\n            delete tasksCopy[action.payload]\n\n            return {\n                ...state,\n                tasks: tasksCopy\n            }\n\n        case DELETE_TASK_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n\n\n        // ======================================== //\n        //                                          //\n        //             Tasks Utils              //\n        //                                          //\n        // ======================================== //\n\n        case ADD_TASK:\n            tasksCopy = deepCopy(state.tasks)\n            tasksCopy[action.payload.task._id] = action.payload.task\n            return {\n                ...state,\n                tasks: tasksCopy\n            }\n\n        case SET_TASKS:\n            return {\n                ...state,\n                tasks: {\n                    ...state.tasks,\n                    ...action.payload\n                }\n            }\n\n        case UPDATE_TASK:\n            tasksCopy = deepCopy(state.tasks)\n            tasksCopy[action.payload.task._id] = action.payload.task\n\n            if (state.selectedTask !== null) {\n                return {\n                    ...state,\n                    tasks: tasksCopy,\n                    selectedTask: tasksCopy[state.selectedTask._id]\n                }\n            } else {\n                return {\n                    ...state,\n                    tasks: tasksCopy\n                }\n            }\n\n        case UPDATE_TASKS:\n            tasksCopy = deepCopy(action.payload.tasks)\n\n            if (state.selectedTask !== null) {\n                return {\n                    ...state,\n                    tasks: deepCopy(action.payload.tasks),\n                    selectedTask: deepCopy(action.payload.tasks[state.selectedTask._id])\n                }\n            } else {\n                return {\n                    ...state,\n                    tasks: deepCopy(action.payload.tasks)\n                }\n            }\n\n        case REMOVE_TASK: {\n            const {\n                [action.payload.id]: taskToRemove,  // extract task to remove\n                ...remainingTasks                   // all other tasks are left here\n            } = state.tasks\n\n            return {\n                ...state,\n                tasks: {...remainingTasks},         // keep all tasks but the one to remove\n            }\n        }\n\n        case REMOVE_TASKS: {\n\n\n            let temp = {...state.tasks}\n\n            action.payload.ids.forEach((currId) => {\n                const {\n                    [currId]: removed,\n                    ...remainingTasks\n                } = temp\n\n                temp = remainingTasks\n            })\n\n            return {\n                ...state,\n                tasks: {...temp},         // keep all tasks but the one to remove\n            }\n        }\n\n\n        case SET_TASK_ATTRIBUTES: {\n                var newState\n\n                if (isObject(state.selectedTask) && state.selectedTask._id === action.payload.id) {\n                    newState = {\n                        ...state,\n                        tasks: state.tasks[action.payload.id] ?\n                            {\n                                ...state.tasks,\n                                [action.payload.id]: {...state.tasks[action.payload.id], ...action.payload.attr},\n                            }\n                        :\n                            {\n                                ...state.tasks\n                            },\n                        selectedTask: {\n                            ...state.selectedTask,\n                            ...action.payload.attr\n                        }\n                    }\n                } else {\n                    newState = {\n                        ...state,\n                        tasks: state.tasks[action.payload.id] ? {\n                                ...state.tasks,\n                                [action.payload.id]: {...state.tasks[action.payload.id], ...action.payload.attr},\n                            }\n                        :\n                            {\n                                ...state.tasks\n                            }\n                    }\n                }\n\n                return newState\n\n            }\n\n\n        case SELECT_TASK:\n            return {\n                ...state,\n                selectedTask: state.tasks[action.payload.id]\n            }\n\n        case SET_SELECTED_TASK:\n            return {\n                ...state,\n                selectedTask: action.payload.task\n            }\n\n        case DESELECT_TASK:\n            return {\n                ...state,\n                selectedTask: null,\n            }\n\n            case EDITING_TASK:\n                return {\n                    ...state,\n                    editingTask: action.payload,\n                }\n        default:\n            return state;\n    }\n}\n","let GET_SOUNDS = 'GET_SOUNDS';\nlet GET_SOUNDS_STARTED = 'GET_SOUNDS_STARTED';\nlet GET_SOUNDS_SUCCESS = 'GET_SOUNDS_SUCCESS';\nlet GET_SOUNDS_FAILURE = 'GET_SOUNDS_FAILURE';\n\nconst defaultState = {\n    sounds: {},\n    error: {},\n    pending: false\n};\n\nexport default function soundsReducer(state = defaultState, action) {\n\n    switch (action.type) {\n        case GET_SOUNDS:\n            break;\n\n        case GET_SOUNDS_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        case GET_SOUNDS_SUCCESS:\n            return {\n                ...state,\n                sounds: action.payload,\n                pending: false\n            }\n\n        case GET_SOUNDS_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n\n        default:\n            return state;\n            break;\n\n    }\n}\n","import {\n    GET_SETTINGS,\n    GET_SETTINGS_STARTED,\n    GET_SETTINGS_SUCCESS,\n    GET_SETTINGS_FAILURE,\n\n    POST_SETTINGS,\n    POST_SETTINGS_STARTED,\n    POST_SETTINGS_SUCCESS,\n    POST_SETTINGS_FAILURE,\n    DEVICE_ENABLED,\n\n  } from '../types/setting_types'\n\nconst defaultState = {\n    settings: {\n        loggers: {\n            Dashboards: false,\n            Scheduler: false,\n            Tasks: false,\n            Objects: false,\n            ModelViewer: false,\n            Api: false,\n            ReduxLogger: false,\n            All: false,\n        }\n    },\n\n    error: {},\n    pending: false,\n    enableLogger: '',\n    muteReducer: false,\n    deviceEnabled: false,\n    apiSim: false,\n}\n\n// import { deepCoppy } from '../../methods/utils/utils'\n\nexport const mirUrl = (state = defaultState) => {\n    return state.settings\n}\n\nconst settingsReducer = (state = defaultState, action) => {\n    switch(action.type) {\n\n        case 'apiSim':\n            return {\n                ...state,\n                apiSim: action.payload\n            }\n\n        case DEVICE_ENABLED:\n            return {\n                ...state,\n                deviceEnabled: action.payload,\n            };\n\n    // ======================================== //\n    //                                          //\n    //              Get SETTINGS                //\n    //                                          //\n    // ======================================== //\n        case GET_SETTINGS:\n            break;\n\n        case GET_SETTINGS_SUCCESS:\n            return  {\n                ...state,\n                settings: {\n                  ...state.settings,\n                  ...action.payload,\n                  loggers: {...state.settings.loggers, ...action.payload.loggers},\n                },\n                pending: false,\n            }\n\n        case GET_SETTINGS_FAILURE:\n            return  Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case GET_SETTINGS_STARTED:\n            return  Object.assign({}, state, {\n                pending: true\n            });\n\n    // ======================================== //\n    //                                          //\n    //             Post SETTINGS                //\n    //                                          //\n    // ======================================== //\n        case POST_SETTINGS:\n            break;\n\n        case POST_SETTINGS_SUCCESS:\n            return{\n                ...state,\n                settings: {...state.settings, ...action.payload},\n                pending: false,\n\n            }\n\n        case POST_SETTINGS_FAILURE:\n        return Object.assign({}, state, {\n            error: action.payload,\n            pending: false\n        });\n\n        case POST_SETTINGS_STARTED:\n        return  Object.assign({}, state, {\n            pending: true\n        });\n        // ~~~~~~~~~~~~~~~\n    }\n    return state\n}\n\nexport default settingsReducer\n","import {\n\n  GET_MODELS,\n  GET_MODELS_STARTED,\n  GET_MODELS_SUCCESS,\n  GET_MODELS_FAILURE,\n\n} from '../types/models_types';\n\nconst defaultState = {\n  models: [],\n  error: {},\n  pending: false\n};\n\nexport default function modelsReducer(state = defaultState, action) {\n\n    switch (action.type) {\n        case GET_MODELS:\n            break;\n\n        case GET_MODELS_STARTED:\n            return  Object.assign({}, state, {\n                pending: true\n            });\n\n        case GET_MODELS_SUCCESS:\n            return  Object.assign({}, state, {\n                models: [...action.payload],\n                pending: false\n            });\n\n        case GET_MODELS_FAILURE:\n            return  Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        default:\n            return state;\n            break;\n\n    }\n}\n","export const GET_SKILL_TEMPLATES = 'GET_SKILL_TEMPLATES'\nexport const GET_SKILL_TEMPLATES_STARTED = 'GET_SKILL_TEMPLATES_STARTED'\nexport const GET_SKILL_TEMPLATES_SUCCESS = 'GET_SKILL_TEMPLATES_SUCCESS'\nexport const GET_SKILL_TEMPLATES_FAILURE = 'GET_SKILL_TEMPLATES_FAILURE'","import {\n    GET_SKILL_TEMPLATES,\n    GET_SKILL_TEMPLATES_STARTED,\n    GET_SKILL_TEMPLATES_SUCCESS,\n    GET_SKILL_TEMPLATES_FAILURE,\n} from '../types/skill_templates_types'\n\nimport { deepCopy } from '../../methods/utils/utils.js'\n\n\nconst defaultState = {\n    skillTemplates: [],\n    error: {},\n    pending: false,\n    returnedSkillTemplates : [],\n  };\n  \n  let index;\n  \n  export default function skillTemplatesReducer(state = defaultState, action) {\n      // let skillsClone = state.skills.map(skill => deepCopy(skill));\n        switch (action.type) {\n  \n          case 'SKILL_TEMPLATES_RETURNED':\n              return {\n                  ...state,\n                  returnedSkillTemplates: action.payload\n              }\n  \n          case GET_SKILL_TEMPLATES:\n              break;\n  \n          case GET_SKILL_TEMPLATES_STARTED:\n              return  Object.assign({}, state, {\n                  pending: true\n              });\n  \n          case GET_SKILL_TEMPLATES_SUCCESS:\n              return  {\n                ...state,\n                skillTemplates: action.payload\n              };\n  \n          case GET_SKILL_TEMPLATES_FAILURE:\n              return  Object.assign({}, state, {\n                  error: action.payload,\n                  pending: false\n              });\n  \n          default:\n              return state;\n              break;\n  \n      }\n  }\n  ","export const GET_POSES = 'GET_POSES';\nexport const GET_POSES_STARTED = 'GET_POSES_STARTED';\nexport const GET_POSES_SUCCESS = 'GET_POSES_SUCCESS';\nexport const GET_POSES_FAILURE = 'GET_POSES_FAILURE';\n\nexport const GET_POSE = 'GET_POSE';\nexport const GET_POSE_STARTED = 'GET_POSE_STARTED';\nexport const GET_POSE_SUCCESS = 'GET_POSE_SUCCESS';\nexport const GET_POSE_FAILURE = 'GET_POSE_FAILURE';\n","import {\n  GET_POSES,\n  GET_POSES_STARTED,\n  GET_POSES_SUCCESS,\n  GET_POSES_FAILURE,\n\n  GET_POSE,\n  GET_POSE_STARTED,\n  GET_POSE_SUCCESS,\n  GET_POSE_FAILURE,\n\n} from '../types/poses_types';\n\nimport log from '../../logger.js';\n\nconst logger = log.getLogger(\"Poses\", \"Poses\");\n\nconst defaultState = {\n    poses: {},\n    error: {},\n    pending: false\n};\n\nexport default function posesReducer(state = defaultState, action) {\n    switch(action.type) {\n\n        case GET_POSES_SUCCESS:\n            return  Object.assign({}, state, {\n              poses: {...action.payload},\n              pending: false\n            });\n\n        case GET_POSES_FAILURE:\n            return  Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case GET_POSES_STARTED:\n            return  Object.assign({}, state, {\n                pending: true\n            });\n\n        default:\n            return state\n\n    }\n}\n","export function getActionName(actionType) {\n if (typeof actionType !== 'string') {\n   return null;\n }\n\n return actionType\n   .split(\"_\")\n   .slice(0, -1)\n   .join(\"_\");\n}\n","import {\n    STARTED,\n    SUCCESS,\n    FAILURE\n} from '../types/suffixes';\n\n\nimport { getActionName } from \"../../methods/utils/redux_utils\";\n\nconst requestStatusReducer = (state = {}, action) => {\n\n    const { type } = action;\n    const actionName = getActionName(type);\n\n    if (!actionName) {\n        return {\n             ...state,\n        }\n    }\n\n    if (type.endsWith(STARTED)) {\n        return {\n             ...state,\n             [actionName]: {\n                 pending: true\n             }\n        };\n    }\n\n    if (type.endsWith(SUCCESS) || type.endsWith(FAILURE)) {\n        return {\n             ...state,\n             [actionName]: {\n                 pending: false\n             }\n        };\n    }\n\n    return {\n        ...state\n    };\n};\n\nexport default requestStatusReducer;\n","import {\n    GET_MAPS,\n    GET_MAPS_STARTED,\n    GET_MAPS_SUCCESS,\n    GET_MAPS_FAILURE,\n\n    GET_MAP,\n    GET_MAP_STARTED,\n    GET_MAP_SUCCESS,\n    GET_MAP_FAILURE,\n\n    SET_MAP_ATTRIBUTES,\n    SET_CURRENT_MAP,\n} from '../types/map_types'\n\nimport { object } from 'yup';\nimport { deepCopy } from '../../methods/utils/utils'\n\n\nconst defaultState = {\n    maps: [],\n    currentMap: {},\n\n    error: {},\n    pending: false,\n    reduxZoom: 2\n};\n\nexport default function mapReducer(state=defaultState, action) {\n    let currentMapCopy = {}\n\n    switch (action.type) {\n\n        // ======================================== //\n        //                                          //\n        //              Get All Maps                //\n        //                                          //\n        // ======================================== //\n\n        case GET_MAPS:\n            break;\n\n        case GET_MAPS_STARTED:\n            return  Object.assign({}, state, {\n                pending: true\n            });\n\n        case GET_MAPS_SUCCESS:\n            return  {\n                ...state,\n                maps: action.payload,\n                pending: false\n            }\n\n        case GET_MAPS_FAILURE:\n            return  Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        // ======================================== //\n        //                                          //\n        //            Get Map Details               //\n        //                                          //\n        // ======================================== //\n\n        case GET_MAP:\n            break;\n\n        case GET_MAP_STARTED:\n            return  Object.assign({}, state, {\n                pending: true\n            });\n\n        case GET_MAP_SUCCESS:\n            currentMapCopy = deepCopy(action.payload)\n            currentMapCopy.d3 = {\n                scale: 1,\n                translate: [0,0],\n                boundingClientHeight: null\n            }\n\n            return{\n                ...state,\n                currentMap: currentMapCopy,\n                pending: false\n            }\n\n        case GET_MAP_FAILURE:\n            return  Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        // ======================================== //\n        //                                          //\n        //            Map Utility Funcs             //\n        //                                          //\n        // ======================================== //\n\n        case SET_MAP_ATTRIBUTES:\n            currentMapCopy = deepCopy(state.currentMap)\n            Object.assign(currentMapCopy, {...action.payload.attr})\n\n            return {\n                ...state,\n                currentMap: currentMapCopy\n            }\n\n        case SET_CURRENT_MAP:\n            return {\n                ...state,\n                currentMap: action.payload\n            }\n\n        default:\n            return state;\n            break;\n    }\n}\n","import {\n    SET_MODE,\n    SET_ACTION,\n    SET_WIDTH,\n    SET_OPEN,\n} from '../types/sidebar_types'\n\n\nconst defaultState = {\n    mode: 'locations',\n    action: null,\n    width: 450,\n    open: false,\n};\n\nexport default function sidebarReducer(state = defaultState, action) {\n\n    switch (action.type) {\n\n        case SET_MODE:\n            return {\n                ...state,\n                mode: action.payload.mode\n            }\n\n        case SET_ACTION:\n            return {\n                ...state,\n                action: action.payload.action\n            }\n\n        case SET_WIDTH:\n            return {\n                ...state,\n                width: action.payload\n            }\n\n        case SET_OPEN:\n            return {\n                ...state,\n                open: action.payload\n            }\n\n\n\n        default:\n            return state;\n    }\n}\n","import {\n  WIDGET_PAGE_LOADED,\n  WIDGET_XY_COORDINATES,\n  WIDGET_LOADED,\n  HOVER_STATION_INFO,\n\n} from '../types/widget_types'\n\n\n  const defaultState = {\n    widgetPageLoaded: false,\n    widgetXYCoordinates: {x: '', y: ''},\n    widgetLoaded: false,\n    hoverStationInfo: null,\n\n};\n\nconst widgetReducer = (state = defaultState, action) => {\n\n\n    switch (action.type) {\n        case WIDGET_PAGE_LOADED:\n            return {\n                ...state,\n                widgetPageLoaded: action.payload\n            }\n\n        case WIDGET_XY_COORDINATES:\n            return {\n                ...state,\n                widgetXYCoordinates: action.payload\n            }\n\n          case WIDGET_LOADED:\n              return {\n                  ...state,\n                  widgetLoaded: action.payload,\n              }\n\n          case HOVER_STATION_INFO:\n              return {\n                  ...state,\n                  hoverStationInfo: action.payload.info,\n              }\n\n        default:\n            return state\n    }\n}\n\nexport default widgetReducer\n","import {\n    GET_DEVICES,\n    GET_DEVICES_STARTED,\n    GET_DEVICES_SUCCESS,\n    GET_DEVICES_FAILURE,\n\n    POST_DEVICES,\n    POST_DEVICES_STARTED,\n    POST_DEVICES_SUCCESS,\n    POST_DEVICES_FAILURE,\n\n    PUT_DEVICES,\n    PUT_DEVICES_STARTED,\n    PUT_DEVICES_SUCCESS,\n    PUT_DEVICES_FAILURE,\n\n    DELETE_DEVICES,\n    DELETE_DEVICES_STARTED,\n    DELETE_DEVICES_SUCCESS,\n    DELETE_DEVICES_FAILURE,\n} from '../types/devices_types'\n\nimport { deepCopy, isEquivalent } from '../../methods/utils/utils';\nimport { convertRealToD3 } from '../../methods/utils/map_utils'\n\nconst defaultState = {\n    devices: {},\n    d3: null,\n    selectedDevice: null,\n}\n\nconst devicesReducer = (state = defaultState, action) => {\n    let devicesClone = {}\n    let currentDevice = ''\n    let updatedDeviceIndex = ''\n    let index = ''\n\n    // ======================================== //\n    //                                          //\n    //         DEVICE UTILITY FUNCTIONS         //\n    //                                          //\n    // ======================================== //\n    const setDevices = (devices) => {\n\n        if(Object.keys(devices).length === 0) return\n\n        // What this does is update the devices X and Y positions based on the values in the backend.\n        // When the RMStudio initially loads, the devices X and Y is calculated in the map_view container, but those values aren't put to the backend.\n        // When a get call is made, the state.devices is overwritten with the backend data (data without X and Y coords). This removes the device from the map view, which we dont want.\n        // This function takes care of that and adds new X and Y coordinates on every get call. state.d3 is added in mapview\n        if (!isEquivalent(devices, state.devices)) {\n            devicesClone = deepCopy(devices)\n            // devicesClone = devices\n\n            Object.keys(devicesClone).map((key, ind) => {\n                const updatedDevice = devices[key]\n                if (updatedDevice.position !== undefined) {\n\n                    // On page load, the d3 state will be null. This is here so that devices wont be undifened on page load\n                    if (state.d3 === null) {\n                        devicesClone[key] = {\n                            ...devicesClone[key],\n                            position: {\n                                ...devicesClone[key].position,\n                                x: updatedDevice.position.pos_x,\n                                y: updatedDevice.position.pos_y,\n                            }\n                        }\n                    }\n\n                    else {\n                        let [x, y] = convertRealToD3([updatedDevice.position.pos_x, updatedDevice.position.pos_y], state.d3)\n                        devicesClone[key] = {\n                            ...devicesClone[key],\n                            position: {\n                                ...devicesClone[key].position,\n                                x: x,\n                                y: y,\n                            }\n                        }\n                    }\n                }\n                return devicesClone\n            })\n        } else {\n            return state\n        }\n        return {\n            ...state,\n            devices: { ...devicesClone },\n            pending: false,\n        }\n    }\n\n\n    switch (action.type) {\n\n        // ======================================== //\n        //                                          //\n        //              Get Devices                 //\n        //                                          //\n        // ======================================== //\n        case GET_DEVICES:\n            break;\n\n        case GET_DEVICES_SUCCESS:\n\n            // Fix for when action.payload is undefined\n            let devices = !!action.payload ? action.payload : {}\n            return setDevices(devices)\n\n        case GET_DEVICES_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case GET_DEVICES_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        // ======================================== //\n        //                                          //\n        //             Post Devices                 //\n        //                                          //\n        // ======================================== //\n        case POST_DEVICES:\n            break;\n\n        case POST_DEVICES_SUCCESS:\n            devicesClone = deepCopy(state.devices)\n            devicesClone[action.payload._id.$oid] = action.payload\n\n            return {\n                ...state,\n                devices: devicesClone,\n                pending: false,\n            }\n\n\n        case POST_DEVICES_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case POST_DEVICES_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n        // ~~~~~~~~~~~~~~~\n\n        // ======================================== //\n        //                                          //\n        //              Put Devices                 //\n        //                                          //\n        // ======================================== //\n        case PUT_DEVICES:\n            break;\n\n        case PUT_DEVICES_SUCCESS:\n            // Find the corresponding device and replace it with the new one\n            currentDevice = action.payload\n\n            devicesClone = deepCopy(state.devices)\n\n            devicesClone[currentDevice._id] = currentDevice\n\n            return setDevices(devicesClone)\n\n        case PUT_DEVICES_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case PUT_DEVICES_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n        // ~~~~~~~~~~~~~~~\n\n        // ======================================== //\n        //                                          //\n        //           Delete Devices                 //\n        //                                          //\n        // ======================================== //\n        case DELETE_DEVICES:\n            break;\n\n        case DELETE_DEVICES_SUCCESS:\n\n            devicesClone = deepCopy(state.devices)\n\n            delete devicesClone[action.payload]\n            return {\n                ...state,\n                devices: devicesClone\n            }\n\n        case DELETE_DEVICES_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case DELETE_DEVICES_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n\n        // ~~~~~~~~~~~~~~~\n\n        // ======================================== //\n        //                                          //\n        //             Utilities                    //\n        //                                          //\n        // ======================================== //\n        case 'UPDATE_DEVICES':\n            return {\n                ...state,\n                devices: deepCopy(action.payload.devices),\n                // devices: action.payload.devices,\n                d3: action.payload.d3,\n            }\n\n        case 'SET_SELECTED_DEVICE':\n            return {\n                ...state,\n                selectedDevice: action.payload\n\n            }\n\n        default:\n            return state\n\n\n\n\n    }\n}\n\nexport default devicesReducer\n","import {\n    GET_NOTIFICATIONS,\n    GET_NOTIFICATIONS_STARTED,\n    GET_NOTIFICATIONS_SUCCESS,\n    GET_NOTIFICATIONS_FAILURE,\n\n    GET_NOTIFICATION,\n    GET_NOTIFICATION_STARTED,\n    GET_NOTIFICATION_SUCCESS,\n    GET_NOTIFICATION_FAILURE,\n\n    POST_NOTIFICATION,\n    POST_NOTIFICATION_STARTED,\n    POST_NOTIFICATION_SUCCESS,\n    POST_NOTIFICATION_FAILURE,\n\n    PUT_NOTIFICATION,\n    PUT_NOTIFICATION_STARTED,\n    PUT_NOTIFICATION_SUCCESS,\n    PUT_NOTIFICATION_FAILURE,\n\n    DELETE_NOTIFICATION,\n    DELETE_NOTIFICATION_STARTED,\n    DELETE_NOTIFICATION_SUCCESS,\n    DELETE_NOTIFICATION_FAILURE,\n\n    ADD_NOTIFICATION,\n    UPDATE_NOTIFICATION,\n    UPDATE_NOTIFICATIONS,\n    TOGGLE_NOTIFICATION_TASK_QUEUE,\n    REMOVE_NOTIFICATION,\n    SET_NOTIFICATION_ATTRIBUTES,\n    VALIDATE_NOTIFICATION,\n    SELECT_NOTIFICATION,\n    SET_SELECTED_NOTIFICATION,\n    DESELECT_NOTIFICATION,\n} from '../types/notifications_types'\n\n\nconst defaultState = {\n    hiddenNotifications: {},\n    notifications: [\n        {\n            type: \"station_alert\",\n            label: \"Workstation 3\",\n            message: \"Takt time is 10s slower than normal\",\n            priority: \"warning\",\n            dateTime: new Date(2020, 7, 25, 11, 34)\n        },\n        {\n            type: \"device_alert\",\n            label: \"MiR 3\",\n            message: \"Battery low\",\n            priority: \"critical\",\n            dateTime: new Date(2020, 7, 24, 15, 12)\n        },\n        {\n            type: \"station_alert\",\n            label: \"Shipping\",\n            message: \"Station has denyed task request 'Finished Cartridges to Shipping'\",\n            priority: \"alert\",\n            dateTime: new Date(2020, 7, 22, 15, 54)\n        },\n        {\n            type: \"station_alert\",\n            label: \"Workstation 4\",\n            message: \"Takt time is 8s faster than normal\",\n            priority: \"alert\",\n            dateTime: new Date(2020, 7, 10, 16, 32)\n        }\n\n    ],\n\n    toggleNotificationTaskQueue: 'taskQueue'\n}\n\nconst notificationsReducer = (state = defaultState, action) => {\n    switch (action.type) {\n        case 'HIDDEN_NOTIFICATIONS':\n\n            // Need to assign to new object because React doesn't see the object change as a state change. \n            // This makes react think a state change is happening so the component rerenders\n            const newPayload = { ...action.payload }\n\n            return {\n                ...state,\n                hiddenNotifications: newPayload,\n            }\n\n        case TOGGLE_NOTIFICATION_TASK_QUEUE:\n            return {\n                ...state,\n                toggleNotificationTaskQueue: action.payload,\n            }\n\n        default:\n            return state\n    }\n}\n\nexport default notificationsReducer","import {\n    GET_EVENTS,\n    GET_EVENTS_STARTED,\n    GET_EVENTS_SUCCESS,\n    GET_EVENTS_FAILURE,\n\n    POST_EVENTS,\n    POST_EVENTS_STARTED,\n    POST_EVENTS_SUCCESS,\n    POST_EVENTS_FAILURE,\n\n    PUT_EVENTS,\n    PUT_EVENTS_STARTED,\n    PUT_EVENTS_SUCCESS,\n    PUT_EVENTS_FAILURE,\n\n    DELETE_EVENTS,\n    DELETE_EVENTS_STARTED,\n    DELETE_EVENTS_SUCCESS,\n    DELETE_EVENTS_FAILURE,\n} from '../types/events_types'\n\nimport { clone_object, deepCopy } from '../../methods/utils/utils';\n\nconst defaultState = {\n    events: {},\n}\n\nconst eventsReducer = (state = defaultState, action) => {\n    let eventsClone = {}\n    let currentEvent = ''\n    let updatedEventIndex = ''\n    let index = ''\n\n\n    switch (action.type) {\n\n        // ======================================== //\n        //                                          //\n        //              Get Events                 //\n        //                                          //\n        // ======================================== //\n        case GET_EVENTS:\n            break;\n\n        case GET_EVENTS_SUCCESS:\n\n\n            return {\n    \n                ...state,\n                events: { ...action.payload },\n                pending: false,\n            }\n\n\n        case GET_EVENTS_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case GET_EVENTS_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        // ======================================== //\n        //                                          //\n        //             Post Events                 //\n        //                                          //\n        // ======================================== //\n        case POST_EVENTS:\n            break;\n\n        case POST_EVENTS_SUCCESS:\n\n            eventsClone = deepCopy(state.events)\n\n            eventsClone[action.payload._id.$oid] = action.payload\n\n            return {\n                ...state,\n                events: eventsClone,\n                pending: false\n            }\n\n\n        case POST_EVENTS_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case POST_EVENTS_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n        // ~~~~~~~~~~~~~~~\n\n        // ======================================== //\n        //                                          //\n        //              Put Events              //\n        //                                          //\n        // ======================================== //\n        case PUT_EVENTS:\n            break;\n\n        case PUT_EVENTS_SUCCESS:\n            // Find the corresponding event and replace it with the new one\n            currentEvent = JSON.parse(action.payload)\n\n            eventsClone = deepCopy(state.events)\n\n            eventsClone[currentEvent._id.$oid] = currentEvent\n\n            return {\n                ...state,\n                events: { ...eventsClone }\n            }\n\n        case PUT_EVENTS_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case PUT_EVENTS_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n        // ~~~~~~~~~~~~~~~\n\n        // ======================================== //\n        //                                          //\n        //           Delete Events                 //\n        //                                          //\n        // ======================================== //\n        case DELETE_EVENTS:\n            break;\n\n        case DELETE_EVENTS_SUCCESS:\n\n            eventsClone = deepCopy(state.events)\n\n            delete eventsClone[action.payload]\n\n            return {\n                ...state,\n                events: eventsClone\n            }\n\n        case DELETE_EVENTS_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case DELETE_EVENTS_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n        // ~~~~~~~~~~~~~~~\n\n        // ======================================== //\n        //                                          //\n        //             Utilities                    //\n        //                                          //\n        // ======================================== //\n        case 'UPDATE_EVENTS':\n            return {\n                ...state,\n                events: deepCopy(action.payload.events)\n            }\n\n        default:\n            return state\n\n\n    }\n}\n\nexport default eventsReducer","import {\n    GET_REFRESH_TOKEN,\n    GET_REFRESH_TOKEN_STARTED,\n    GET_REFRESH_TOKEN_SUCCESS,\n    GET_REFRESH_TOKEN_FAILURE,\n\n\n    POST_REFRESH_TOKEN,\n    POST_REFRESH_TOKEN_STARTED,\n    POST_REFRESH_TOKEN_SUCCESS,\n    POST_REFRESH_TOKEN_FAILURE,\n\n} from '../types/authentication_types'\n\nconst defaultState = {\n\n    refreshToken: '',\n    cognitoUserSession: null,\n\n    error: {},\n    pending: false,\n\n    // Authenticated?\n    authenticated: false\n\n};\n\nexport default function authenticationReducer(state = defaultState, action) {\n\n    switch (action.type) {\n\n        case 'AUTHENTICATE_USER':\n            return{\n                ...state,\n                cognitoUserSession: action.payload,\n                authenticated: true\n            }\n\n        case 'POST_COGNITO_USER_SESSION':\n            return{\n                ...state,\n                cognitoUserSession: action.payload,\n                authenticated: true\n            }\n\n        // ======================================== //\n        //                                          //\n        //              Get Refresh Token           //\n        //                                          //\n        // ======================================== //\n        case GET_REFRESH_TOKEN:\n            break;\n\n        case GET_REFRESH_TOKEN_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        case GET_REFRESH_TOKEN_SUCCESS:\n            return {\n                ...state,\n                refreshToken: action.payload,\n                pending: false\n            }\n\n        case GET_REFRESH_TOKEN_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        // ======================================== //\n        //                                          //\n        //             Post Refresh Token           //\n        //                                          //\n        // ======================================== //\n\n        case POST_REFRESH_TOKEN:\n            break;\n\n        case POST_REFRESH_TOKEN_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        case POST_REFRESH_TOKEN_SUCCESS:\n\n            return {\n                ...state,\n                refreshToken: action.payload,\n                pending: false,\n\n            }\n\n        case POST_REFRESH_TOKEN_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n\n        default:\n            return state;\n\n    }\n}","import {\n    GET_PROCESSES,\n    GET_PROCESSES_STARTED,\n    GET_PROCESSES_SUCCESS,\n    GET_PROCESSES_FAILURE,\n\n    POST_PROCESSES,\n    POST_PROCESSES_STARTED,\n    POST_PROCESSES_SUCCESS,\n    POST_PROCESSES_FAILURE,\n\n    PUT_PROCESSES,\n    PUT_PROCESSES_STARTED,\n    PUT_PROCESSES_SUCCESS,\n    PUT_PROCESSES_FAILURE,\n\n    DELETE_PROCESSES,\n    DELETE_PROCESSES_STARTED,\n    DELETE_PROCESSES_SUCCESS,\n    DELETE_PROCESSES_FAILURE,\n    EDITING_PROCESS,\n} from '../types/processes_types'\n\nimport { deepCopy } from '../../methods/utils/utils';\n\nconst defaultState = {\n    // processes: {'qqq':{\n    //     id: 'qqq',\n    //     name: 'Fakey McFake Fake',\n    //     routes: [\n    //         \"5fa06a9dfacd1af9a74c1925\",\n    //         \"5fa06aa4facd1af9a74c1926\",\n    //         \"5fa06ac3facd1af9a74c1927\",\n    //     ],\n    // },},\n    processes: {},\n    selectedProcess: null,\n    fixingProcess: false,\n}\n\nconst processesReducer = (state = defaultState, action) => {\n    let processesClone = {}\n    let currentProcesse = ''\n    let updatedProcesseIndex = ''\n    let index = ''\n\n    switch (action.type) {\n\n        // ======================================== //\n        //                                          //\n        //              Get Processes               //\n        //                                          //\n        // ======================================== //\n        case GET_PROCESSES:\n            break;\n\n        case GET_PROCESSES_SUCCESS:\n            return {\n                ...state,\n                processes: action.payload,\n                pending: false,\n            }\n\n        case GET_PROCESSES_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case GET_PROCESSES_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        // ======================================== //\n        //                                          //\n        //             Post Processes                 //\n        //                                          //\n        // ======================================== //\n        case POST_PROCESSES:\n            break;\n\n        case POST_PROCESSES_SUCCESS:\n            processesClone = deepCopy(state.processes)\n            processesClone[action.payload._id] = action.payload\n\n            return {\n                ...state,\n                processes: processesClone,\n                pending: false\n            }\n\n\n        case POST_PROCESSES_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case POST_PROCESSES_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n        // ~~~~~~~~~~~~~~~\n\n        // ======================================== //\n        //                                          //\n        //              Put Processes                 //\n        //                                          //\n        // ======================================== //\n        case PUT_PROCESSES:\n            break;\n\n        case PUT_PROCESSES_SUCCESS:\n            return {\n                ...state,\n                processes: {\n                    ...state.processes,\n                    [action.payload._id]: action.payload\n                },\n                pending: false\n            }\n\n        case PUT_PROCESSES_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case PUT_PROCESSES_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n        // ~~~~~~~~~~~~~~~\n\n        // ======================================== //\n        //                                          //\n        //           Delete Processes                 //\n        //                                          //\n        // ======================================== //\n        case DELETE_PROCESSES:\n            break;\n\n        case DELETE_PROCESSES_SUCCESS:\n\n            processesClone = deepCopy(state.processes)\n\n            delete processesClone[action.payload]\n            return {\n                ...state,\n                processes: processesClone\n            }\n\n        case DELETE_PROCESSES_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case DELETE_PROCESSES_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n        // ~~~~~~~~~~~~~~~\n\n        // ======================================== //\n        //                                          //\n        //             Utilities                    //\n        //                                          //\n        // ======================================== //\n        case 'UPDATE_PROCESSES':\n            return {\n                ...state,\n                processes: deepCopy(action.payload.processes),\n                // processes: action.payload.processes,\n                d3: action.payload.d3,\n            }\n\n        case 'SET_SELECTED_PROCESS':\n            return {\n                ...state,\n                selectedProcess: action.payload\n\n            }\n\n        case EDITING_PROCESS:\n            return {\n                ...state,\n                editingProcess: action.payload,\n            }\n\n        case 'SET_FIXING_PROCESS':\n            return {\n                ...state,\n                fixingProcess: action.payload\n            }\n\n        default:\n            return state\n\n\n    }\n}\n\nexport default processesReducer\n","// import types\nimport {\n  GET,\n  POST,\n  DELETE,\n  PUT\n} from '../types/prefixes';\n\nimport {\n  REPORT_EVENTS,\n  REPORT_EVENT\n} from '../types/data_types';\n\nimport {\n  STARTED,\n  SUCCESS,\n  FAILURE\n} from '../types/suffixes';\n\nimport { clone_object } from '../../methods/utils/utils';\n\nconst defaultState = {\n  reportEvents: {},\n  id: {},\n  dashboard_id: {},\n  station_id: {},\n  report_button_id: {},\n  error: {},\n  pending: false\n};\n\nexport default function reportEventsReducer(state = defaultState, action) {\n\n  switch (action.type) {\n\n    // get\n    // ***************\n    case GET + REPORT_EVENTS + SUCCESS:\n      return  Object.assign({}, state, {\n        reportEvents: {...state.reportEvents, ...action.payload.reportEventsObj},\n        pending: false\n      });\n\n    case GET + REPORT_EVENTS + FAILURE:\n      return  Object.assign({}, state, {\n        error: action.payload,\n        pending: false\n      });\n\n    case GET + REPORT_EVENTS + STARTED:\n      return  Object.assign({}, state, {\n        pending: true\n      });\n    // ~~~~~~~~~~~~~~~\n\n    // create\n    // ***************\n    case POST + REPORT_EVENT + SUCCESS:\n      const created = action.payload.createdReportEvent\n\n      return  Object.assign({}, state, {\n        reportEvents: {\n          ...state.reportEvents,\n          _id: {\n            ...state.reportEvents._id,\n            [created.report_button_id]: created\n          }\n        },\n        pending: false\n      });\n\n\n    case POST + REPORT_EVENT + FAILURE:\n      return  Object.assign({}, state, {\n        error: action.payload,\n        pending: false\n      });\n\n    case POST + REPORT_EVENT + STARTED:\n      return  Object.assign({}, state, {\n        pending: true\n      });\n    // ~~~~~~~~~~~~~~~\n\n    // delete\n    // ***************\n    case DELETE + REPORT_EVENT + SUCCESS:\n\n      const {\n        [action.payload.id]: old,\n          ...rest\n      } = state.reportEvents._id\n\n      return  Object.assign({}, state, {\n        reportEvents: {\n          ...state.reportEvents,\n          _id: {...rest,}\n        },\n        pending: false\n      });\n\n\n    case  DELETE + REPORT_EVENT + FAILURE:\n      return  Object.assign({}, state, {\n        error: action.payload,\n        pending: false\n      });\n\n    case  DELETE + REPORT_EVENT + STARTED:\n      return  Object.assign({}, state, {\n        pending: true\n      });\n    // ~~~~~~~~~~~~~~~\n\n    // update\n    // ***************\n    case  PUT + REPORT_EVENT + SUCCESS:\n\n      return  Object.assign({}, state, {\n        reportEvents: {\n          ...state.reportEvents,\n          _id: {\n            ...state.reportEvents._id,\n            [action.payload.updatedReportEvent.report_button_id]: action.payload.updatedReportEvent\n          }\n        },\n        pending: false\n      });\n\n\n    case PUT + REPORT_EVENT + FAILURE:\n      return  Object.assign({}, state, {\n        error: action.payload,\n        pending: false\n      });\n\n    case PUT + REPORT_EVENT + STARTED:\n      return  Object.assign({}, state, {\n        pending: true\n      });\n    // ~~~~~~~~~~~~~~~\n\n    default:\n      return state\n  }\n}\n","import {\n  GET,\n  POST,\n  DELETE,\n  PUT\n} from '../types/prefixes';\n\nimport {\n  STARTED,\n  SUCCESS,\n  FAILURE\n} from '../types/suffixes'\n\nimport {\n  CARD,\n  CARDS,\n  CARD_HISTORY,\n  PROCESS_CARDS,\n  SHOW_EDITOR\n} from '../types/data_types'\n\nimport {uuidv4} from \"../../methods/utils/utils\";\n\n\nconst defaultState = {\n\n  cards: {},\n  processCards: {},\n  cardHistories: {},\n  error: {},\n  pending: false,\n  showEditor:false\n\n};\n\nexport default function cardsReducer(state = defaultState, action) {\n  let processCards = {}\n\n  switch (action.type) {\n    case GET + CARD + SUCCESS:\n      return {\n        ...state,\n        cards: {...state.cards, [action.payload.card._id]: action.payload.card},\n        pending: false,\n      }\n\n    case GET + CARDS + SUCCESS:\n\n      Object.values(action.payload.cards).forEach((card,index) => {\n        if(processCards[card.process_id]) {\n          processCards[card.process_id][card._id] = card\n        } else {\n          processCards[card.process_id] = {\n            [card._id]: card\n          }\n        }\n\n      })\n      return {\n        ...state,\n        cards: {...state.cards, ...action.payload.cards},\n        processCards: processCards,\n        pending: false,\n      }\n\n    case GET + PROCESS_CARDS + SUCCESS:\n      return {\n        ...state,\n        processCards: {...state.processCards, [action.payload.processId]: {\n          ...state.processCards[action.payload.processId], ...action.payload.cards\n          }},\n        pending: false,\n      }\n\n    case PUT + CARD + SUCCESS:\n      return {\n        ...state,\n        cards: {...state.cards, [action.payload.card._id]: action.payload.card},\n        processCards: {...state.processCards, [action.payload.processId]: {\n            ...state.processCards[action.payload.processId], [action.payload.card._id]: action.payload.card\n          }},\n        pending: false,\n      }\n\n    case POST + CARD + SUCCESS:\n      return {\n        ...state,\n        cards: {...state.cards, [action.payload.card._id]: action.payload.card},\n        processCards: {...state.processCards, [action.payload.processId]: {\n            ...state.processCards[action.payload.processId], [action.payload.card._id]: action.payload.card\n          }},\n        pending: false,\n      }\n\n    case DELETE + CARD + SUCCESS:\n      const { [action.payload.cardId]: value, ...rest } = state.cards; // extracts payload card from rest\n      const {\n\n        [action.payload.processId]: {[action.payload.cardId]: removedCard, ...remaining} ,\n        ...unchangedProcessGroups\n\n      } = state.processCards; // extracts payload card from rest\n\n      return {\n        ...state,\n        cards: {...rest},\n        processCards: {...unchangedProcessGroups, [action.payload.processId]: remaining},\n        pending: false,\n      }\n\n    case GET + CARD_HISTORY + SUCCESS:\n      return {\n        ...state,\n        cardHistories: {...state.cardHistories, [action.payload.cardHistory.card_id]: action.payload.cardHistory},\n        pending: false,\n      }\n\n    case POST + CARD_HISTORY + SUCCESS:\n      return {\n        ...state,\n        cardHistories: {...state.cardHistories, [action.payload.cardHistory.card_id]: action.payload.cardHistory},\n        pending: false,\n      }\n\n    case PUT + CARD_HISTORY + SUCCESS:\n      return {\n        ...state,\n        cardHistories: {...state.cardHistories, [action.payload.cardHistory.card_id]: action.payload.cardHistory},\n        pending: false,\n      }\n\n      case SHOW_EDITOR:\n          return {\n              ...state,\n              showEditor: action.payload,\n          }\n\n    default:\n      return state\n  }\n}\n","import {\n  GET,\n  POST,\n  DELETE,\n  PUT\n} from '../types/prefixes';\n\nimport {\n  STARTED,\n  SUCCESS,\n  FAILURE\n} from '../types/suffixes'\n\nimport {\n  LOT,\n  LOTS,\n} from '../types/data_types'\n\n\n\nconst defaultState = {\n  lots: {},\n};\n\nexport default function lotsReducer(state = defaultState, action) {\n\n  switch (action.type) {\n    case GET + LOT + SUCCESS:\n      return {\n        ...state,\n        lots: {...state.lots, [action.payload.lot._id]: action.payload.lot},\n      }\n\n    case GET + LOTS + SUCCESS:\n      return {\n        ...state,\n        lots: {...state.lots, ...action.payload.lots},\n      }\n\n    case PUT + LOT + SUCCESS:\n      return {\n        ...state,\n        lots: {...state.lots, [action.payload.lot._id]: action.payload.lot},\n      }\n\n    case POST + LOT + SUCCESS:\n      return {\n        ...state,\n        lots: {...state.lots, [action.payload.lot._id]: action.payload.lot},\n      }\n\n    case DELETE + LOT + SUCCESS:\n      const { [action.payload.lotId]: value, ...rest } = state.lots; // extracts payload lot from rest\n\n      return {\n        ...state,\n        lots: {...rest},\n      }\n\n    default:\n      return state\n  }\n}\n","import { SET } from \"../types/prefixes\"\nimport {CARD_DRAGGING, COLUMN_HOVERING, SET_SIZE} from \"../types/ui_types\"\n\n\nconst defaultState = {\n\tisCardDragging: false,\n\tisHoveringOverColumn: false,\n\tsizes: {},\n\tdraggedLotInfo: {}\n}\n\nconst cardPageReducer = (state = defaultState, action) => {\n\n\n\tswitch (action.type) {\n\t\tcase SET + CARD_DRAGGING:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdraggedLotInfo: action.payload\n\t\t\t}\n\n\t\tcase SET_SIZE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tsizes: {...state.sizes, [action.payload.processId]: action.payload.size},\n\t\t\t}\n\n\t\tcase SET + COLUMN_HOVERING:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisHoveringOverColumn: action.payload\n\t\t\t}\n\n\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport default cardPageReducer","import { combineReducers } from 'redux'\nimport schedulesReducer from './schedules_reducer_v2';\nimport skillsReducer from './skills_reducer';\nimport stationsReducer from './stations_reducer';\nimport positionsReducer from './positions_reducer'\nimport objectsReducer from './objects_reducer';\nimport apiReducer from './api_reducer';\nimport dashboardsReducer from './dashboards_reducer'\nimport errorReducer from './error_reducer';\nimport statusReducer from './status_reducer';\nimport taskQueueReducer from './task_queue_reducer';\nimport keyboardReducer from './keyboard_reducer';\nimport tasksReducer from './tasks_reducer';\nimport soundsReducer from './sounds_reducer';\nimport settingsReducer from './settings_reducer';\nimport localReducer from './local_reducer';\nimport modelsReducer from './models_reducer'\nimport skillTemplatesReducer from './skill_templates_reducer'\nimport posesReducer from './poses_reducer';\nimport requestStatusReducer from './request_status_reducer';\nimport taskAnalysisReducer from './task_analysis_reducer'\nimport mapReducer from './map_reducer'\nimport sidebarReducer from './sidebar_reducer'\nimport widgetReducer from './widget_reducer'\nimport devicesReducer from './devices_reducer'\nimport notificationsReducer from './notifications_reducer'\nimport eventsReducer from './events_reducer'\nimport authenticationReducer from './authentication_reducer'\nimport processesReducer from './processes_reducer'\nimport reportEventsReducer from './report_events_reducer'\nimport cardsReducer from './cards_reducer'\nimport lotsReducer from './lots_reducer'\nimport testReducer from './test_reducer'\nimport cardPageReducer from \"./card_page_reducer\"\n// TEST\n\nexport default combineReducers({\n    cardPageReducer,\n    apiReducer,\n    reportEventsReducer,\n    cardsReducer,\n    lotsReducer,\n    schedulesReducer,\n    skillsReducer,\n    positionsReducer,\n    stationsReducer,\n    objectsReducer,\n    dashboardsReducer,\n    errorReducer,\n    statusReducer,\n    taskQueueReducer,\n    keyboardReducer,\n    soundsReducer,\n    tasksReducer,\n    settingsReducer,\n    localReducer,\n    modelsReducer,\n    skillTemplatesReducer,\n    posesReducer,\n    requestStatusReducer,\n    taskAnalysisReducer,\n    mapReducer,\n    sidebarReducer,\n    widgetReducer,\n    devicesReducer,\n    notificationsReducer,\n    eventsReducer,\n    authenticationReducer,\n    processesReducer,\n})\n","// schedules types\n\n// get multiple\n// ***************\nexport const GET_SCHEDULES = 'GET_SCHEDULES'\nexport const GET_SCHEDULES_STARTED = 'GET_SCHEDULES_STARTED'\nexport const GET_SCHEDULES_SUCCESS = 'GET_SCHEDULES_SUCCESS'\nexport const GET_SCHEDULES_FAILURE = 'GET_SCHEDULES_FAILURE'\n// ~~~~~~~~~~~~~~~\n\n// get single\n// ***************\nexport const GET_SCHEDULE = 'GET_SCHEDULE'\nexport const GET_SCHEDULE_STARTED = 'GET_SCHEDULE_STARTED'\nexport const GET_SCHEDULE_SUCCESS = 'GET_SCHEDULE_SUCCESS'\nexport const GET_SCHEDULE_FAILURE = 'GET_SCHEDULE_FAILURE'\n// ~~~~~~~~~~~~~~~\n\n// post\n// ***************\nexport const POST_SCHEDULE = 'POST_SCHEDULE'\nexport const POST_SCHEDULE_STARTED = 'POST_SCHEDULE_STARTED'\nexport const POST_SCHEDULE_SUCCESS = 'POST_SCHEDULE_SUCCESS'\nexport const POST_SCHEDULE_FAILURE = 'POST_SCHEDULE_FAILURE'\n// ~~~~~~~~~~~~~~~\n\n// delete\n// ***************\nexport const DELETE_SCHEDULE = 'DELETE_SCHEDULE'\nexport const DELETE_SCHEDULE_STARTED = 'DELETE_SCHEDULE_STARTED'\nexport const DELETE_SCHEDULE_SUCCESS = 'DELETE_SCHEDULE_SUCCESS'\nexport const DELETE_SCHEDULE_FAILURE = 'DELETE_SCHEDULE_FAILURE'\n// ~~~~~~~~~~~~~~~\n\n// PUT\n// ***************\nexport const PUT_SCHEDULE = 'PUT_SCHEDULE'\nexport const PUT_SCHEDULE_STARTED = 'PUT_SCHEDULE_STARTED'\nexport const PUT_SCHEDULE_SUCCESS = 'PUT_SCHEDULE_SUCCESS'\nexport const PUT_SCHEDULE_FAILURE = 'PUT_SCHEDULE_FAILURE'\n// ~~~~~~~~~~~~~~~\n\n// ADD\n// ***************\nexport const ADD_SCHEDULES = 'ADD_SCHEDULES'\nexport const ADD_SCHEDULES_STARTED = 'ADD_SCHEDULES_STARTED'\nexport const ADD_SCHEDULES_SUCCESS = 'ADD_SCHEDULES_SUCCESS'\nexport const ADD_SCHEDULES_FAILURE = 'ADD_SCHEDULES_FAILURE'\n// ~~~~~~~~~~~~~~~\n\n// UPDATE\n// ***************\nexport const UPDATE_SCHEDULE = 'UPDATE_SCHEDULE'\nexport const UPDATE_SCHEDULE_STARTED = 'UPDATE_SCHEDULE_STARTED'\nexport const UPDATE_SCHEDULE_SUCCESS = 'UPDATE_SCHEDULE_SUCCESS'\nexport const UPDATE_SCHEDULE_FAILURE = 'UPDATE_SCHEDULE_FAILURE'\n// ~~~~~~~~~~~~~~~\n\n// add unsaved schedules\n// ***************\nexport const ADD_SCHEDULES_UNSAVED = 'ADD_SCHEDULES_UNSAVED';\n// ~~~~~~~~~~~~~~~\n\nexport const DELETE_SCHEDULES = 'DELETE_SCHEDULES'\n","export const GET_SKILLS = 'GET_SKILLS'\nexport const GET_SKILLS_STARTED = 'GET_SKILLS_STARTED'\nexport const GET_SKILLS_SUCCESS = 'GET_SKILLS_SUCCESS'\nexport const GET_SKILLS_FAILURE = 'GET_SKILLS_FAILURE'\n\nexport const POST_SKILLS = 'POST_SKILLS'\nexport const POST_SKILLS_STARTED = 'POST_SKILLS_STARTED'\nexport const POST_SKILLS_SUCCESS = 'POST_SKILLS_SUCCESS'\nexport const POST_SKILLS_FAILURE = 'POST_SKILLS_FAILURE'\n\nexport const PUT_SKILLS = 'PUT_SKILLS'\nexport const PUT_SKILLS_STARTED = 'PUT_SKILLS_STARTED'\nexport const PUT_SKILLS_SUCCESS = 'PUT_SKILLS_SUCCESS'\nexport const PUT_SKILLS_FAILURE = 'PUT_SKILLS_FAILURE'\n\nexport const DELETE_SKILLS = 'DELETE_SKILLS'\nexport const DELETE_SKILLS_STARTED = 'DELETE_SKILLS_STARTED'\nexport const DELETE_SKILLS_SUCCESS = 'DELETE_SKILLS_SUCCESS'\nexport const DELETE_SKILLS_FAILURE = 'DELETE_SKILLS_FAILURE'\n","export const CLEAR_ERROR = 'CLEAR_ERROR';\n","// keyboard types\n\n\n// ***************\nexport const ON_BLUR = 'ON_BLUR';\nexport const ON_FOCUS = 'ON_FOCUS';\n// ~~~~~~~~~~~~~~~\n","export const GET_MODELS = 'GET_MODELS';\nexport const GET_MODELS_STARTED = 'GET_MODELS_STARTED';\nexport const GET_MODELS_SUCCESS = 'GET_MODELS_SUCCESS';\nexport const GET_MODELS_FAILURE = 'GET_MODELS_FAILURE';\n","import React from 'react';\nimport {createStore, applyMiddleware, compose} from 'redux';\nimport { createDevTools } from 'redux-devtools';\nimport { createLogger } from 'redux-logger'\nimport reducers from '../reducers/index';\nimport thunk from 'redux-thunk';\nimport LogMonitor from 'redux-devtools-log-monitor';\n\nimport log_module from '../../logger.js';\n\nconst reduxLogger = log_module.getLogger('ReduxLogger');\n\nvar logger = createLogger({logger: reduxLogger, level: \"info\"});\n\nconst muteReducer = () => {\n  if(reducers.settingsReducer.muteReducer){\n    return applyMiddleware(thunk)\n  } else {\n    return applyMiddleware(logger, thunk)\n  }\n}\n\nconst composeEnhancers =\n  typeof window === 'object' &&\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n      // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n      // actionCreators,\n      trace: true,\n      traceLimit: 25,\n    }) : compose;\n\nconst enhancer = composeEnhancers(\n  applyMiddleware(logger, thunk),\n  // other store enhancers if any\n);\n\nconst store = createStore(reducers, enhancer);\n\nif (module.hot) {\n  module.hot.accept('../reducers/index.js', () => {\n    // const nextReducer = combineReducers(require('../reducers'))\n    // store.replaceReducer(nextReducer)\n    store.replaceReducer(require('../reducers/index.js').default)\n  })\n}\n\nexport default store\n","import axios from 'axios';\n// import * as log from 'loglevel';\n\nimport logger from '../logger'\n\nimport { apiIPAddress } from '../settings/settings'\nconst operator = 'processes'\nconst log = logger.getLogger('Api')\n\nexport async function getProcesses() {\n    try {\n        const response = await axios({\n            method: 'get',\n            url: apiIPAddress() + operator,\n            headers: {\n                'X-API-Key': '123456',\n                'Access-Control-Allow-Origin': '*'\n            }\n        });\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n\n}\n\nexport async function deleteProcesses(ID) {\n    try {\n        const response = await axios({\n            method: 'DELETE',\n            url: apiIPAddress() + operator + '/' + ID,\n            headers: {\n                'Accept': 'application/json',\n                'X-API-Key': '123456',\n                'Access-Control-Allow-Origin': '*'\n            },\n        });\n\n        // Success 🎉\n        // log.debug('response',response);\n        // const data = response.data;\n        // const dataJson = JSON.parse(data)\n        return response;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}\n\nexport async function postProcesses(process) {\n    try {\n        const response = await axios({\n            method: 'POST',\n            url: apiIPAddress() + operator,\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n                'X-API-Key': '123456',\n                'Access-Control-Allow-Origin': '*'\n            },\n            data: process\n        });\n\n        // Success 🎉\n        // log.debug('response',response);\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        // log.debug('response data json',dataJson);\n\n\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}\n\nexport async function putProcesses(process, ID) {\n    try {\n        const response = await axios({\n            method: 'PUT',\n            url: apiIPAddress() + operator + '/' + ID,\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'application/json',\n                'Access-Control-Allow-Origin': '*'\n            },\n            data: process\n        });\n\n        // Success 🎉\n        // log.debug('response',response);\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}\n","import { normalize, schema } from 'normalizr';\n\nimport {\n    GET_PROCESSES,\n    GET_PROCESSES_STARTED,\n    GET_PROCESSES_SUCCESS,\n    GET_PROCESSES_FAILURE,\n\n    POST_PROCESSES,\n    POST_PROCESSES_STARTED,\n    POST_PROCESSES_SUCCESS,\n    POST_PROCESSES_FAILURE,\n\n    PUT_PROCESSES,\n    PUT_PROCESSES_STARTED,\n    PUT_PROCESSES_SUCCESS,\n    PUT_PROCESSES_FAILURE,\n\n    DELETE_PROCESSES,\n    DELETE_PROCESSES_STARTED,\n    DELETE_PROCESSES_SUCCESS,\n    DELETE_PROCESSES_FAILURE,\n    EDITING_PROCESS,\n} from '../types/processes_types'\n\nimport * as api from '../../api/processes_api'\nimport { processesSchema } from '../../normalizr/schema';\nimport { deepCopy } from '../../methods/utils/utils'\nimport {putDashboard} from \"./dashboards_actions\";\nimport {getRouteProcesses} from \"../../methods/utils/route_utils\";\nimport {willRouteDeleteBreakProcess} from \"../../methods/utils/processes_utils\";\n\n\nexport const getProcesses = () => {\n    return async dispatch => {\n        function onStart() {\n            dispatch({ type: GET_PROCESSES_STARTED });\n        }\n        function onSuccess(response) {\n            dispatch({ type: GET_PROCESSES_SUCCESS, payload: response });\n            return response;\n        }\n        function onError(error) {\n            dispatch({ type: GET_PROCESSES_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const processes = await api.getProcesses();\n            // Uncomment when you want to make processes an object\n            const normalizedProcesses = normalize(processes, processesSchema);\n            if (normalizedProcesses.entities.processes === undefined) {\n                return onSuccess(normalizedProcesses.entities)\n            }\n            else {\n                return onSuccess(normalizedProcesses.entities.processes)\n            }\n        } catch (error) {\n            return onError(error)\n        }\n    }\n}\nexport const postProcesses = (process) => {\n    return async dispatch => {\n        function onStart() {\n            dispatch({ type: POST_PROCESSES_STARTED });\n        }\n        function onSuccess(response) {\n            dispatch({ type: POST_PROCESSES_SUCCESS, payload: response });\n            return response;\n        }\n        function onError(error) {\n            dispatch({ type: POST_PROCESSES_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            delete process.new\n            delete process.changed\n\n            const newProcesses = await api.postProcesses(process);\n            return onSuccess(newProcesses)\n        } catch (error) {\n            return onError(error)\n        }\n    }\n}\nexport const putProcesses = (process) => {\n    return async dispatch => {\n        function onStart() {\n            dispatch({ type: PUT_PROCESSES_STARTED });\n        }\n        function onSuccess(response) {\n            dispatch({ type: PUT_PROCESSES_SUCCESS, payload: response });\n            return response;\n        }\n        function onError(error) {\n            dispatch({ type: PUT_PROCESSES_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const ID = deepCopy(process._id)\n\n            if(process.new) {\n                delete process.new\n            }\n            if(process.changed) {\n                delete process.changed\n            }\n            // delete process._id\n            const updateProcesses = await api.putProcesses(process, ID);\n            return onSuccess(updateProcesses)\n        } catch (error) {\n            return onError(error)\n        }\n    }\n}\nexport const deleteProcesses = (ID) => {\n    return async dispatch => {\n        function onStart() {\n            dispatch({ type: DELETE_PROCESSES_STARTED });\n        }\n        function onSuccess(response) {\n            dispatch({ type: DELETE_PROCESSES_SUCCESS, payload: ID });\n            return response;\n        }\n        function onError(error) {\n            dispatch({ type: DELETE_PROCESSES_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const removeProcesses = await api.deleteProcesses(ID);\n            return onSuccess(ID)\n        } catch (error) {\n            return onError(error)\n        }\n    }\n}\n\n// deletes all buttons with routeId from all dashboards\n// ******************************\nexport const removeRouteFromAllProcesses = (routeId) => {\n    return async (dispatch, getState) => {\n\n        // current state\n        const state = getState()\n        const routes = state.tasksReducer.tasks || {}\n\n        // get all processes that contain routeId\n        const routeProcesses = getRouteProcesses(routeId)\n\n        console.log(\"removeRouteFromAllProcesses routeProcesses\",routeProcesses)\n\n        // loop through each of these processes, check if removing the route will break the process, then remove the route\n        for (const currProcess of routeProcesses) {\n\n            const processRoutes = currProcess.routes.map((currRoute) => routes[currRoute])\n\n            // will removing route break the process?\n            const willBreak = willRouteDeleteBreakProcess(processRoutes, routeId)\n            console.log(\"willBreak\",willBreak)\n\n            // dispatch update\n            await dispatch(putProcesses({\n                ...currProcess,\n                broken: willBreak,\n                routes: currProcess.routes.filter((currRoute) => currRoute !== routeId)\n            }))\n        }\n\n    }\n}\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nexport const updateProcesses = (processes, d3) => {\n    return { type: 'UPDATE_PROCESSES', payload: { processes, d3 } }\n}\n\nexport const setSelectedProcess = (process) => {\n    return { type: 'SET_SELECTED_PROCESS', payload: process }\n}\n\nexport const editingProcess = (bool) => {\n    return { type: EDITING_PROCESS, payload: bool }\n}\n\n/**\n * This is to tell the map that you are fixing a process vs adding a new route to the process\n * It will force you to select a location that is tied with the location before the process breaks\n * @param {bool} bool \n */\nexport const setFixingProcess = (bool) => {\n    return { type: 'SET_FIXING_PROCESS', payload: bool }\n}\n","import React from 'react'\n\nconst defaultWidgetPages = ['dashboards']\n\nexport const DeviceTypes = {\n\n    generic: {\n        icon: 'icon-rmLogo',\n        primaryColor: '#FF4B4B',\n        startGradientColor: '#FF4B4B',\n        stopGradientColor: '#ff2424',\n        svgPath: 'M195.33,232.27c1.06,1.43.51,2.6-1.24,2.6H172a7.18,7.18,0,0,1-5.09-2.6l-58.8-79.35h35.12a29.27,29.27,0,1,0,0-58.53H96.36V234.87H73V71h70.24a52.68,52.68,0,0,1,10,104.4ZM263.64,71.13,214.18,120.6l-14-14a1.35,1.35,0,0,0-.83-.29l-.21,0a1.29,1.29,0,0,0-1.09,1.28,1.1,1.1,0,0,0,0,.26s0,.09,0,.13a57.16,57.16,0,0,1,.65,28.85l0,.13a1.1,1.1,0,0,0,0,.26,1.33,1.33,0,0,0,.29.83,1.45,1.45,0,0,0,.18.17l.6.6,8.15,8.16h0l6.27,6.27,16.32-16.31,33.15-33.15V235h23.41V71.13Z',\n        widgetPages: defaultWidgetPages,\n    },\n\n    trident: {\n        icon: 'icon-trident',\n        primaryColor: '#d7841e',\n        startGradientColor: '#d7a31e',\n        stopGradientColor: '#d7841e',\n        svgPath: \"M171.27,213.07c-2.27-1-3-2.87-2.94-5.29.06-12.66,0-25.33,0-38v-2.61c-6,2.49-11.87,4.64-17.47,7.29a98.76,98.76,0,0,0-10.57,6.33c-1.52,1-3,1.62-4.73.73s-2.06-2.35-2.18-4.09c-1.64-23.93-5.32-47.51-12.67-70.41-4.15-13-9.45-25.4-17.78-36.34A56.17,56.17,0,0,0,90.15,58.17a15.14,15.14,0,0,1-2-1.55,3.57,3.57,0,0,1-.94-4,3.4,3.4,0,0,1,3.59-2.53,91.1,91.1,0,0,1,11.31,1.47,67.94,67.94,0,0,1,37.43,22.22c1.29,1.48,2.14,3,1.3,4.92s-2.53,2.45-4.49,2.37a10.46,10.46,0,0,0-1.11.06c7.69,22,14.86,44.08,17.35,67.37l15.7-5.31V73.57a43.06,43.06,0,0,0-4.71,2.35c-2.11,1.37-3.8,1.61-5.32.39s-1.91-2.94-.87-5.24q9.39-20.74,18.8-41.49a4,4,0,0,1,3.76-2.65,4,4,0,0,1,3.9,2.72Q193.19,50.32,202.57,71c1.08,2.39.75,4.12-.89,5.39s-3.17.91-5.32-.49a43.24,43.24,0,0,0-4.67-2.32V143.2l15.69,5.3c2.5-23.14,9.63-45.25,17.41-67.43-.78,0-1.37,0-1.95,0a3.8,3.8,0,0,1-3.72-2.42,3.89,3.89,0,0,1,.79-4.22A68.45,68.45,0,0,1,240,58.15a69.71,69.71,0,0,1,27.48-8.07c2.46-.2,4.39.37,5.61,2.64V54.9a27.37,27.37,0,0,1-3.28,3.27,59.26,59.26,0,0,0-12.89,12.7c-8.23,10.85-13.49,23.18-17.61,36-7.36,22.88-11,46.46-12.7,70.39-.12,1.79-.45,3.38-2.2,4.26s-3.32.15-4.89-.84c-3.41-2.18-6.82-4.39-10.4-6.28a89.42,89.42,0,0,0-17.47-6.79v2.17c0,12.66,0,25.32,0,38,0,2.42-.66,4.24-2.93,5.29Z\",\n        widgetPages: [...defaultWidgetPages, 'statistics'],\n    },\n    arm: {\n        icon: 'icon-arm',\n        primaryColor: '#1e9cd7',\n        startGradientColor: '#1e9cd7',\n        stopGradientColor: '#005b97',\n        svgPath: 'M173.7,172.2a22.64,22.64,0,1,1-22.64,22.64A22.64,22.64,0,0,1,173.7,172.2Zm.08-4L125.61,65.38A22.53,22.53,0,0,1,103.37,75.8l48.17,102.84a22.53,22.53,0,0,1,22.24-10.42ZM82,49.35a22.64,22.64,0,1,0,22.64-22.63A22.64,22.64,0,0,0,82,49.35ZM240.43,25,127.3,34.91a22.5,22.5,0,0,1,2.14,24.46l113.13-9.9A22.55,22.55,0,0,1,240.43,25Zm1.43,10.68a13.21,13.21,0,1,0,13.21-13.21A13.22,13.22,0,0,0,241.86,35.69ZM250,81.74a57.78,57.78,0,0,0,4.17,13.78,3.78,3.78,0,0,0,.17.35l8.11-1.42-2.61-14.76,6.92-1.22,2.61,14.75,8.1-1.42c0-.14,0-.27,0-.4A57.9,57.9,0,0,0,276.7,77a57.32,57.32,0,0,0-4.18-13.78l-2.61-14.83-23.34,4.12,2.62,14.83A57.43,57.43,0,0,0,250,81.74Zm11.36-.88,5.47,31,2.45,7.46,2.17-.39-.25-7.84-5.46-31Z',\n        widgetPages: [...defaultWidgetPages, 'statistics'],\n    },\n    cart: {\n        icon: 'icon-cart',\n        deviceFontSize: '2.5rem',\n        primaryColor: '#03ffa3',\n        startGradientColor: '#03ffa3',\n        stopGradientColor: '#00b673',\n        svgPath:\n            <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 400 400\">\n                <path d=\"M285,90a35,35,0,0,1-35-35,39.83,39.83,0,0,1,2.05-11.22A2.67,2.67,0,0,0,249.37,40H150.63A2.67,2.67,0,0,0,148,43.78,39.83,39.83,0,0,1,150,55a35,35,0,0,1-35,35,39.83,39.83,0,0,1-11.22-2A2.67,2.67,0,0,0,100,90.63V309.37a2.67,2.67,0,0,0,3.78,2.68A39.83,39.83,0,0,1,115,310a35,35,0,0,1,35,35A39.83,39.83,0,0,1,148,356.22a2.67,2.67,0,0,0,2.68,3.78h98.74a2.67,2.67,0,0,0,2.68-3.78A39.83,39.83,0,0,1,250,345a35,35,0,0,1,35-35,39.83,39.83,0,0,1,11.22,2.05,2.67,2.67,0,0,0,3.78-2.68V90.63A2.67,2.67,0,0,0,296.22,88,39.83,39.83,0,0,1,285,90ZM159.38,167a12.9,12.9,0,0,1,2.61-6.38l36.69-45.94a16.33,16.33,0,0,1,4.83-4.13c1.27-.55,5,2.41,6.42,4.13l36.69,45.94a12.9,12.9,0,0,1,2.61,6.38c.07,1.78-5,3.24-7.24,3.24H166.62C164.42,170.19,159.32,168.73,159.38,167ZM250,248.06a13,13,0,0,1-6.61,1.94H168a13,13,0,0,1-6.61-1.94c-1.44-1.07.6-6,2-7.69l36.69-45.93a16.64,16.64,0,0,1,4.82-4.14c1.28-.55,5.05,2.42,6.43,4.14L248,240.37C249.39,242.09,251.43,247,250,248.06Z\" />\n                <circle cx=\"115\" cy=\"55\" r=\"30\" />\n                <circle cx=\"285\" cy=\"55\" r=\"30\" />\n                <circle cx=\"115\" cy=\"345\" r=\"30\" />\n                <circle cx=\"285\" cy=\"345\" r=\"30\" />\n            </svg>,\n\n        widgetPages: defaultWidgetPages,\n    },\n    rmVision: {\n        icon: 'icon-rmVision',\n        primaryColor: '#eb008a',\n        startGradientColor: '#eb008a',\n        stopGradientColor: '#9e005d',\n        svgPath: \"M306.33,121.46a54.29,54.29,0,0,1-3.68,6.06c-17.81,22.3-38.44,41.43-63.28,55.73-16.35,9.41-33.78,15.74-52.75,17a105.48,105.48,0,0,1-44.93-7.08c-21.83-8.29-40.59-21.41-57.72-37a239.89,239.89,0,0,1-27.6-29.84c-3.59-4.6-3.61-8.11,0-12.69,17.93-22.74,38.79-42.24,64-56.77,19.78-11.41,40.89-18.3,64.05-17.27a112.79,112.79,0,0,1,45.15,12c29.9,14.68,53.82,36.52,74.31,62.41a31.48,31.48,0,0,1,2.47,4.5ZM72.5,119.81c.93,1.1,1.56,2,2.29,2.71,7.68,7.88,15,16.13,23.16,23.53C113.61,160.33,131,172,151.3,178.87a86,86,0,0,0,37.38,4.47c16.4-1.8,31.28-7.88,45.3-16.28,18.21-10.92,33.79-25,47.92-40.72,1.85-2.06,3.61-4.2,5.59-6.51-4.85-5.25-9.4-10.44-14.24-15.35C257,88,239,73.8,217.53,64.5A95,95,0,0,0,184,56.26c-17.93-.84-34.42,4.16-50.12,12.28-17.55,9.07-32.74,21.32-46.56,35.31C82.25,109,77.49,114.41,72.5,119.81Z M229.92,120.19c-.2,27.69-22.78,50-50.26,49.71a49.92,49.92,0,1,1,50.26-49.71Zm-16.65-.12A33.29,33.29,0,1,0,180,153.29,33.33,33.33,0,0,0,213.27,120.07Z M176.11,135.28h-4.3V141c0,1.28-.18,1.46-1.44,1.46h-5.2c0,.84,0,1.63,0,2.41,0,.13.21.28.35.38A2.37,2.37,0,1,1,162,148a2.33,2.33,0,0,1,1-2.71.76.76,0,0,0,.37-.77c0-.85,0-1.71,0-2.56s.26-1.24,1.27-1.25H170v-5.44h-4.24c-.71,0-1-.33-1-1,0-1.19,0-2.38,0-3.56V130h-5.4c0,.22,0,.43,0,.65v4.75c0,.91-.29,1.19-1.2,1.2h-1.63a2.2,2.2,0,0,0-2.14.79,2.23,2.23,0,0,1-3.37-.11,2.36,2.36,0,0,1,.32-3.43,2.29,2.29,0,0,1,3.35.49,1,1,0,0,0,1.08.52c.59,0,1.38.14,1.72-.17s.11-1.1.12-1.68c0-1.23,0-2.45,0-3.68,0-.85.28-1.12,1.14-1.12h6v-4.26a4.22,4.22,0,0,0-.49,0h-8.74a.76.76,0,0,0-.76.39,2.29,2.29,0,0,1-2.65,1,2.37,2.37,0,0,1,0-4.54,2.4,2.4,0,0,1,2.73,1,.76.76,0,0,0,.49.35c3.12,0,6.25,0,9.37,0,0,0,0,0,.09-.06v-4.19h-.51c-2.92,0-5.83,0-8.75,0a.75.75,0,0,0-.74.4,2.3,2.3,0,0,1-2.67,1,2.36,2.36,0,0,1,0-4.51,2.3,2.3,0,0,1,2.68.94.86.86,0,0,0,.85.45h9.16V111.8H164c-1.75,0-3.5,0-5.25,0-.94,0-1.2-.25-1.2-1.18,0-1.6,0-3.21,0-4.81,0-.52-.15-.72-.67-.66a3.66,3.66,0,0,1-.81,0,1.55,1.55,0,0,0-1.61.7,2.28,2.28,0,0,1-3.42.1,2.36,2.36,0,0,1,.09-3.41,2.31,2.31,0,0,1,3.42.29,1.25,1.25,0,0,0,1.23.59c.79,0,1.58,0,2.37,0s1.13.3,1.13,1.14c0,1.58,0,3.16,0,4.75V110h5.44v-3.35c0-1.91,0-1.91,1.91-1.91h3.19a.54.54,0,0,0,.16,0V99.31h-5.39c-.93,0-1.2-.27-1.21-1.18s0-1.8,0-2.69a1,1,0,0,0-.37-.67A2.46,2.46,0,0,1,162,92a2.4,2.4,0,0,1,2.28-1.64,2.36,2.36,0,0,1,2.25,1.67,2.41,2.41,0,0,1-1,2.72.81.81,0,0,0-.36.5c0,.72,0,1.45,0,2.24.27,0,.49,0,.71,0h4.68c1,0,1.25.24,1.26,1.26v5.9h4.27c0-.21,0-.41,0-.61,0-2.86,0-5.71,0-8.56a.86.86,0,0,0-.45-.85,2.28,2.28,0,0,1-1-2.62,2.36,2.36,0,0,1,4.53,0,2.41,2.41,0,0,1-1,2.69.93.93,0,0,0-.4.59q0,4.56,0,9.12c0,.08,0,.16,0,.27h4.24v-1.08c0-2.7,0-5.41,0-8.12a.8.8,0,0,0-.41-.8,2.3,2.3,0,0,1-1-2.67A2.39,2.39,0,0,1,183,90.38a2.36,2.36,0,0,1,2.29,1.7,2.43,2.43,0,0,1-1,2.68.94.94,0,0,0-.39.6c0,3,0,6.09,0,9.13a1.31,1.31,0,0,0,0,.22h4.23c0-.21,0-.43,0-.64V98.75c0-.93.26-1.19,1.2-1.19,1.56,0,3.12,0,4.68,0h.76c0-.83,0-1.6,0-2.36,0-.18-.27-.37-.46-.51a2.37,2.37,0,0,1,1.22-4.31,2.36,2.36,0,0,1,2.32,1.47,2.32,2.32,0,0,1-.89,2.86.8.8,0,0,0-.42.8c0,.87,0,1.75,0,2.62s-.29,1.17-1.16,1.17H190c0,.22-.05.36-.05.5v4.94c1,0,2,0,2.91,0,2.51,0,2.43-.1,2.4,2.43,0,.93,0,1.86,0,2.83h5.4c0-.23,0-.45,0-.67v-4.68c0-1,.27-1.25,1.27-1.25.8,0,1.59,0,2.38,0a1,1,0,0,0,1-.49A2.3,2.3,0,0,1,208,102a2.38,2.38,0,0,1,0,4.51,2.33,2.33,0,0,1-2.72-1,.76.76,0,0,0-.75-.41c-.66,0-1.33,0-2,0,0,.28,0,.5,0,.72v4.69c0,1-.25,1.23-1.22,1.23-1.75,0-3.5,0-5.25,0h-.69v4.28l.56,0h8.63a.8.8,0,0,0,.8-.41,2.29,2.29,0,0,1,2.66-1,2.37,2.37,0,0,1,0,4.54,2.41,2.41,0,0,1-2.69-1c-.12-.17-.35-.39-.54-.39-3.12,0-6.24,0-9.41,0v4.23c.16,0,.33,0,.51,0h8.69a.81.81,0,0,0,.79-.43,2.32,2.32,0,0,1,2.68-.95,2.37,2.37,0,0,1,0,4.52,2.28,2.28,0,0,1-2.63-.92,1,1,0,0,0-1-.49c-2.79,0-5.58,0-8.37,0h-.71v4.31H201c1.35,0,1.49.15,1.49,1.53v5.12c.84,0,1.6,0,2.37,0,.18,0,.36-.29.5-.48a2.37,2.37,0,0,1,4.31,1.24,2.39,2.39,0,0,1-1.48,2.32,2.3,2.3,0,0,1-2.81-.85.92.92,0,0,0-.91-.47c-.88,0-1.75,0-2.63,0s-1.09-.31-1.1-1.11c0-1.58,0-3.17,0-4.75V130h-5.44v3.93c0,1.08-.24,1.32-1.32,1.32h-4v5.41l.7,0h4.74c.89,0,1.17.28,1.18,1.15s0,1.8,0,2.69a1,1,0,0,0,.36.68,2.47,2.47,0,0,1,1,2.74,2.41,2.41,0,0,1-2.26,1.66,2.36,2.36,0,0,1-2.26-1.65,2.31,2.31,0,0,1,1-2.71.75.75,0,0,0,.39-.76c0-.66,0-1.32,0-2.06h-5.25c-1.19,0-1.4-.2-1.4-1.37v-5.78h-4.3v.58q0,4.29,0,8.56a.86.86,0,0,0,.44.86,2.3,2.3,0,0,1,1,2.67,2.37,2.37,0,0,1-4.52,0,2.41,2.41,0,0,1,.94-2.7c.19-.14.42-.39.42-.59,0-3.08,0-6.16,0-9.24a.68.68,0,0,0,0-.15h-4.19c0,.19,0,.37,0,.55,0,2.87,0,5.75,0,8.62a.87.87,0,0,0,.45.85,2.3,2.3,0,0,1,.95,2.63,2.37,2.37,0,0,1-4.52.05,2.27,2.27,0,0,1,.88-2.64,1,1,0,0,0,.51-1C176.1,141.34,176.11,138.34,176.11,135.28Zm17.34-1.81V106.55H166.53v26.92Zm-29.3-40h.27c.16-.23.41-.44.46-.69a.5.5,0,0,0-.59-.61.84.84,0,0,0-.57.57C163.7,93,164,93.22,164.15,93.46Zm13.72-.76c-.44-.26-.7-.55-.94-.53s-.49.37-.53.6a.49.49,0,0,0,.62.57C177.27,93.29,177.47,93,177.87,92.7Zm5.13-.82c-.28.4-.6.66-.56.85a1,1,0,0,0,.6.61.5.5,0,0,0,.57-.63C183.55,92.46,183.29,92.26,183,91.88Zm12.54,1.58h.27c.17-.22.5-.47.47-.66s-.36-.45-.57-.67c-.2.19-.55.37-.57.58S195.39,93.21,195.54,93.46ZM152.62,105h.27c.16-.23.48-.49.44-.67a.92.92,0,0,0-.6-.6c-.16,0-.54.35-.56.56S152.45,104.76,152.62,105Zm55.33-.53v-.3c-.24-.16-.49-.46-.72-.45a.81.81,0,0,0-.57.56.79.79,0,0,0,.53.58C207.43,104.88,207.7,104.61,208,104.47Zm-55.26,13.41c.32-.41.6-.6.65-.85a.49.49,0,0,0-.56-.63.84.84,0,0,0-.6.52C152.15,117.16,152.43,117.43,152.69,117.88Zm55.43-.87c-.38-.29-.57-.56-.82-.62a.5.5,0,0,0-.64.56.94.94,0,0,0,.6.61C207.45,117.6,207.71,117.29,208.12,117Zm-54.66,6.18v-.29c-.24-.17-.49-.47-.73-.46a.78.78,0,0,0-.56.56c0,.2.31.56.52.59S153.2,123.34,153.46,123.19Zm53.66.54h.27c.16-.23.48-.5.43-.68s-.38-.43-.6-.64c-.19.2-.54.4-.55.61S207,123.49,207.12,123.73Zm-53.67,12.16v-.28c-.21-.17-.41-.43-.65-.49a.5.5,0,0,0-.65.55.89.89,0,0,0,.53.61C152.93,136.3,153.2,136,153.45,135.89Zm53.67.53h.26c.16-.23.42-.44.46-.69a.49.49,0,0,0-.6-.59c-.24.05-.57.36-.57.56S207,136.17,207.12,136.42ZM165,147.4l0-.28c-.24-.16-.48-.46-.71-.45s-.6.39-.57.55a1,1,0,0,0,.59.61C164.49,147.87,164.76,147.55,165,147.4Zm12.14-.87h-.27c-.16.23-.41.43-.46.68a.51.51,0,0,0,.58.62.89.89,0,0,0,.59-.57C177.58,147,177.28,146.78,177.12,146.53Zm6.76.71c-.39-.28-.64-.61-.83-.57s-.44.37-.65.58c.22.21.41.53.66.58S183.5,147.53,183.88,147.24Zm12.53.13v-.26c-.24-.16-.5-.45-.73-.44s-.5.35-.55.58a.49.49,0,0,0,.6.59C196,147.8,196.18,147.54,196.41,147.37Z M179.94,130.75H170.5c-1,0-1.25-.26-1.25-1.26v-19c0-1,.26-1.25,1.26-1.25h19c1,0,1.26.26,1.26,1.26v19c0,1-.27,1.26-1.26,1.26ZM171,129H189V111H171Z M187.75,118c0,.77,0,1.54,0,2.31s-.32,1-.85,1-.9-.35-.9-1c0-1.53,0-3.07,0-4.6,0-.64.32-1,.85-1s.89.36.9,1S187.75,117.18,187.75,118Z\",\n        widgetPages: [...defaultWidgetPages, 'view'],\n    },\n\n    shelf: {\n        primaryColor: '#fb7c4e',\n        svgPath:\n            <>\n                <rect x=\"358.42\" width=\"28\" height=\"71\" rx=\"10\" />\n                <rect x=\"0.42\" width=\"28\" height=\"71\" rx=\"10\" />\n                <rect y=\"216.99\" width=\"28\" height=\"71\" rx=\"10\" />\n                <rect x=\"358.42\" y=\"217\" width=\"28\" height=\"71\" rx=\"10\" />\n                <path d=\"M371.72,85.5h-5.89a20.71,20.71,0,0,1-20.71-20.7V36.7A10.7,10.7,0,0,0,334.42,26H52.84a10.7,10.7,0,0,0-10.7,10.7V64.8A20.71,20.71,0,0,1,21.43,85.5H15.12A10.7,10.7,0,0,0,4.42,96.2v95.58a10.7,10.7,0,0,0,10.7,10.71H21a20.71,20.71,0,0,1,20.71,20.7V251.3A10.7,10.7,0,0,0,52.42,262H334a10.7,10.7,0,0,0,10.7-10.7V223.2a20.71,20.71,0,0,1,20.71-20.7h6.31a10.7,10.7,0,0,0,10.7-10.7V96.2A10.7,10.7,0,0,0,371.72,85.5ZM166,177.5H100a10,10,0,0,1-8.19-15.74l33-47a10,10,0,0,1,16.37,0l33,47A10,10,0,0,1,166,177.5Zm120.82,0h-66a10,10,0,0,1-8.18-15.74l33-47a10,10,0,0,1,16.37,0l33,47A10,10,0,0,1,286.83,177.5Z\" />\n            </>\n\n\n    }\n\n}\nexport const DEVICE_CONSTANTS = {\n    HUMAN: \"human\",\n    MIR_100: 'MiR_100'\n}","export const GET_DEVICES = 'GET_DEVICES'\nexport const GET_DEVICES_STARTED = 'GET_DEVICES_STARTED'\nexport const GET_DEVICES_SUCCESS = 'GET_DEVICES_SUCCESS'\nexport const GET_DEVICES_FAILURE = 'GET_DEVICES_FAILURE'\n\nexport const POST_DEVICES = 'POST_DEVICES'\nexport const POST_DEVICES_STARTED = 'POST_DEVICES_STARTED'\nexport const POST_DEVICES_SUCCESS = 'POST_DEVICES_SUCCESS'\nexport const POST_DEVICES_FAILURE = 'POST_DEVICES_FAILURE'\n\nexport const PUT_DEVICES = 'PUT_DEVICES'\nexport const PUT_DEVICES_STARTED = 'PUT_DEVICES_STARTED'\nexport const PUT_DEVICES_SUCCESS = 'PUT_DEVICES_SUCCESS'\nexport const PUT_DEVICES_FAILURE = 'PUT_DEVICES_FAILURE'\n\nexport const DELETE_DEVICES = 'DELETE_DEVICES'\nexport const DELETE_DEVICES_STARTED = 'DELETE_DEVICES_STARTED'\nexport const DELETE_DEVICES_SUCCESS = 'DELETE_DEVICES_SUCCESS'\nexport const DELETE_DEVICES_FAILURE = 'DELETE_DEVICES_FAILURE'\n","/**\n *  Goes through all the tasks and finds any tasks that belong to that location.\n *  It then sees if that task belongs to that location either as load or unload task.\n *  Then adds the key: taskID and value: object ID to be used for the object builder\n * */ \nexport const handleParseTaskBasedOnLoadUnload = (tasks, stationID) => {\n\n    let parsedTasks = { load: {}, unload: {} }\n\n    Object.values(tasks).forEach(task => {\n\n        // If station is load\n        if (task.load.station == stationID) {\n            parsedTasks.load = {\n                ...parsedTasks.load,\n                [task._id]: task.obj\n            }\n\n            // If station is unload\n        } else if (task.unload.station == stationID) {\n            parsedTasks.unload = {\n                ...parsedTasks.unload,\n                [task._id]: task.obj\n            }\n        }\n    })\n    return parsedTasks\n}\n\nexport const isEmpty = (obj) => {\n    for(var prop in obj) {\n        if(obj.hasOwnProperty(prop)) {\n            return false;\n        }\n    }\n\n    return JSON.stringify(obj) === JSON.stringify({});\n}\n\nexport const isObject = (item) => {\n    return ((typeof item === 'object') && (item !== null))\n}","export const GET_LOGGERS = 'GET_LOGGERS'\nexport const GET_LOGGERS_STARTED = 'GET_LOGGERS_STARTED'\nexport const GET_LOGGERS_SUCCESS = 'GET_LOGGERS_SUCCESS'\nexport const GET_LOGGERS_FAILURE = 'GET_LOGGERS_FAILURE'\n\nexport const POST_LOGGERS = 'POST_LOGGERS'\nexport const POST_LOGGERS_STARTED = 'POST_LOGGERS_STARTED'\nexport const POST_LOGGERS_SUCCESS = 'POST_LOGGERS_SUCCESS'\nexport const POST_LOGGERS_FAILURE = 'POST_LOGGERS_FAILURE'\n\nexport const PUT_LOGGERS = 'PUT_LOGGERS'\nexport const PUT_LOGGERS_STARTED = 'PUT_LOGGERS_STARTED'\nexport const PUT_LOGGERS_SUCCESS = 'PUT_LOGGERS_SUCCESS'\nexport const PUT_LOGGERS_FAILURE = 'PUT_LOGGERS_FAILURE'\n\nexport const DELETE_LOGGERS = 'DELETE_LOGGERS'\nexport const DELETE_LOGGERS_STARTED = 'DELETE_LOGGERS_STARTED'\nexport const DELETE_LOGGERS_SUCCESS = 'DELETE_LOGGERS_SUCCESS'\nexport const DELETE_LOGGERS_FAILURE = 'DELETE_LOGGERS_FAILURE'\n\nexport const GET_LOCAL_SETTINGS = 'GET_LOCAL_SETTINGS'\nexport const GET_LOCAL_SETTINGS_STARTED = 'GET_LOCAL_SETTINGS_STARTED'\nexport const GET_LOCAL_SETTINGS_SUCCESS = 'GET_LOCAL_SETTINGS_SUCCESS'\nexport const GET_LOCAL_SETTINGS_FAILURE = 'GET_LOCAL_SETTINGS_FAILURE'\n\nexport const POST_LOCAL_SETTINGS = 'POST_LOCAL_SETTINGS'\nexport const POST_LOCAL_SETTINGS_STARTED = 'POST_LOCAL_SETTINGS_STARTED'\nexport const POST_LOCAL_SETTINGS_SUCCESS = 'POST_LOCAL_SETTINGS_SUCCESS'\nexport const POST_LOCAL_SETTINGS_FAILURE = 'POST_LOCAL_SETTINGS_FAILURE'\n\nexport const STOP_API_CALLS = 'STOP_API_CALLS'\n","export const GET_DASHBOARDS = 'GET_DASHBOARDS'\nexport const GET_DASHBOARDS_STARTED = 'GET_DASHBOARDS_STARTED'\nexport const GET_DASHBOARDS_SUCCESS = 'GET_DASHBOARDS_SUCCESS'\nexport const GET_DASHBOARDS_FAILURE = 'GET_DASHBOARDS_FAILURE'\n\nexport const POST_DASHBOARD = 'POST_DASHBOARD'\nexport const POST_DASHBOARD_STARTED = 'POST_DASHBOARD_STARTED'\nexport const POST_DASHBOARD_SUCCESS = 'POST_DASHBOARD_SUCCESS'\nexport const POST_DASHBOARD_FAILURE = 'POST_DASHBOARD_FAILURE'\n\nexport const PUT_DASHBOARD = 'PUT_DASHBOARD'\nexport const PUT_DASHBOARD_STARTED = 'PUT_DASHBOARD_STARTED'\nexport const PUT_DASHBOARD_SUCCESS = 'PUT_DASHBOARD_SUCCESS'\nexport const PUT_DASHBOARD_FAILURE = 'PUT_DASHBOARD_FAILURE'\n\nexport const DELETE_DASHBOARD = 'DELETE_DASHBOARD'\nexport const DELETE_DASHBOARD_STARTED = 'DELETE_DASHBOARD_STARTED'\nexport const DELETE_DASHBOARD_SUCCESS = 'DELETE_DASHBOARD_SUCCESS'\nexport const DELETE_DASHBOARD_FAILURE = 'DELETE_DASHBOARD_FAILURE'\n\nexport const DASHBOARD_OPEN = 'DASHBOARD_OPEN'","export const GET_PROCESSES = 'GET_PROCESSES'\nexport const GET_PROCESSES_STARTED = 'GET_PROCESSES_STARTED'\nexport const GET_PROCESSES_SUCCESS = 'GET_PROCESSES_SUCCESS'\nexport const GET_PROCESSES_FAILURE = 'GET_PROCESSES_FAILURE'\n\nexport const POST_PROCESSES = 'POST_PROCESSES'\nexport const POST_PROCESSES_STARTED = 'POST_PROCESSES_STARTED'\nexport const POST_PROCESSES_SUCCESS = 'POST_PROCESSES_SUCCESS'\nexport const POST_PROCESSES_FAILURE = 'POST_PROCESSES_FAILURE'\n\nexport const PUT_PROCESSES = 'PUT_PROCESSES'\nexport const PUT_PROCESSES_STARTED = 'PUT_PROCESSES_STARTED'\nexport const PUT_PROCESSES_SUCCESS = 'PUT_PROCESSES_SUCCESS'\nexport const PUT_PROCESSES_FAILURE = 'PUT_PROCESSES_FAILURE'\n\nexport const DELETE_PROCESSES = 'DELETE_PROCESSES'\nexport const DELETE_PROCESSES_STARTED = 'DELETE_PROCESSES_STARTED'\nexport const DELETE_PROCESSES_SUCCESS = 'DELETE_PROCESSES_SUCCESS'\nexport const DELETE_PROCESSES_FAILURE = 'DELETE_PROCESSES_FAILURE'\nexport const EDITING_PROCESS = 'EDITING_PROCESS'\n","import { TEMP_NEW_SCHEDULE_ID, DEFAULT_TASK_ID } from '../../constants/scheduler_constants';\n\nexport function timeout(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport function mapArrayToObjById(arr) {\n    var obj = {};\n\n    for (let i = 0; i < arr.length; i++) {\n        obj[arr[i].id] = arr[i];\n    }\n\n    return obj;\n}\n\nexport const convertArrayToObject = (array, key) => {\n    const initialValue = {};\n    return array.reduce((obj, item) => {\n        return {\n            ...obj,\n            [item[key]]: item,\n        };\n    }, initialValue);\n};\n\nexport function clone_object(obj) {\n    if (null == obj || \"object\" != typeof obj) return obj;\n    var copy = obj.constructor();\n    for (var attr in obj) {\n        if (obj.hasOwnProperty(attr)) copy[attr] = obj[attr];\n    }\n    return copy;\n}\n\nexport function deepCopy(obj) {\n    return JSON.parse(JSON.stringify(obj));\n}\n\nexport function timeString24HrToDate(timeString) {\n    if (timeString) {\n        var date = Date.parse(\"2019-01-01T\" + timeString);\n        var newDate = new Date();\n        newDate.setTime(date)\n        return newDate\n    } else {\n        return null;\n    }\n\n}\n\nexport function arraysEqual(_arr1, _arr2) {\n\n    if (!Array.isArray(_arr1) || !Array.isArray(_arr2) || _arr1.length !== _arr2.length)\n        return false;\n\n    var arr1 = _arr1.concat().sort();\n    var arr2 = _arr2.concat().sort();\n\n    for (var i = 0; i < arr1.length; i++) {\n\n        if (arr1[i] !== arr2[i])\n            return false;\n\n    }\n\n    return true;\n\n}\n\n// checks if x is a subset of y\nexport function objectIsSubet(x, y) {\n    console.log('inside objectIsSubet')\n    if (x === y) return true;\n    // if both x and y are null or undefined and exactly the same\n\n    // failure point 1\n    // if they are not strictly equal, they both need to be Objects\n    if (!(x instanceof Object) || !(y instanceof Object)) {\n        console.log('objectIsSubet: failed at 1')\n        return false;\n    }\n\n    // failure point 2\n    // they must have the exact same prototype chain, the closest we can do is\n    // test there constructor.\n    if (x.constructor !== y.constructor) {\n        console.log('objectIsSubet: failed at 2')\n        return false;\n    }\n\n\n    for (var p in x) {\n        console.log('var p in x', x)\n        if (!x.hasOwnProperty(p)) continue;\n        // other properties were tested using x.constructor === y.constructor\n\n        // failure point 3\n        // allows to compare x[ p ] and y[ p ] when set to undefined\n        if (!y.hasOwnProperty(p)) {\n            console.log('objectIsSubet: failed at 3')\n            return false;\n        }\n\n\n        if (x[p] === y[p]) continue;\n        // if they have the same strict value or identity then they are equal\n\n        // failure point 4\n        if (typeof (x[p]) !== \"object\") {\n            console.log('objectIsSubet: failure point 4:', p)\n            console.log('objectIsSubet: failure point 4:', x[p])\n            console.log('objectIsSubet: failure point 4:', typeof (x[p]))\n            console.log('objectIsSubet: failed at 4')\n            return false;\n        }\n        // Numbers, Strings, Functions, Booleans must be strictly equal\n\n        // failure point 5\n        if (!objectIsSubet(x[p], y[p])) {\n            console.log('objectIsSubet: failed at 5')\n            return false;\n        }\n        // Objects and Arrays must be tested recursively\n    }\n\n    //for ( p in y ) {\n    //if ( y.hasOwnProperty( p ) && ! x.hasOwnProperty( p ) ) return false;\n    // allows x[ p ] to be set to undefined\n    //}\n    return true;\n}\n\n\n\nexport function uuidv4() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n        return v.toString(16);\n    });\n}\n\nexport function LightenDarkenColor(col, amt) {\n    var usePound = false;\n    if (col[0] == \"#\") {\n        col = col.slice(1);\n        usePound = true;\n    }\n\n    var num = parseInt(col, 16);\n\n    var r = (num >> 16) + amt;\n\n    if (r > 255) r = 255;\n    else if (r < 0) r = 0;\n\n    var b = ((num >> 8) & 0x00FF) + amt;\n\n    if (b > 255) b = 255;\n    else if (b < 0) b = 0;\n\n    var g = (num & 0x0000FF) + amt;\n\n    if (g > 255) g = 255;\n    else if (g < 0) g = 0;\n\n    return (usePound ? \"#\" : \"\") + (g | (b << 8) | (r << 16)).toString(16);\n}\n\nexport function isEquivalent(a, b) {\n    // Create arrays of property names\n    if (typeof a !== 'object' || typeof b !== 'object' || a === null || b === null) {\n        return a === b;\n    }\n\n    var aProps = Object.getOwnPropertyNames(a);\n    var bProps = Object.getOwnPropertyNames(b);\n\n    // If number of properties is different,\n    // objects are not equivalent\n    if (aProps.length != bProps.length) {\n        return false;\n    }\n\n    for (var i = 0; i < aProps.length; i++) {\n        var propName = aProps[i];\n\n        // If values of same property are not equal,\n        // objects are not equivalent\n        if (!isEquivalent(a[propName], b[propName])) {\n            return false;\n        }\n    }\n\n    // If we made it this far, objects\n    // are considered equivalent\n    return true;\n}\n\nexport function randomHash() {\n    var hash = '';\n    var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for (var i = 0; i < 16; i++) {\n        hash += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return hash;\n}\n\nexport const upperCaseFirstLetterInString = (str) => {\n    return str\n        .toLowerCase()\n        .split(' ')\n        .map(function (word) {\n            return word[0].toUpperCase() + word.substr(1);\n        })\n        .join(' ');\n}\n\n// Returns name of day ('Mon', 'Tues', etc...)\nexport const getDateName = (date) => {\n    return date.toLocaleDateString(undefined, { weekday: 'short' });\n}\n\n// Returns date from string, this assumes the date is the first word in the string\nexport const getDateFromString = (str) => {\n    const dateStr = deepCopy(str).replace(/ .*/, '').split('-');\n    return new Date(dateStr[0], dateStr[1] - 1, dateStr[2]);\n}","import React, {useState, useEffect, useRef} from 'react';\nimport { createPortal } from \"react-dom\";\nimport DropDownSearch, {DefaultReactDropdownSelect} from \"../components/basic/drop_down_search_v2/drop_down_search\";\n\nconst Portal = (props) => {\n\n\tconst {\n\t\tchildren,\n\t\tmountElement\n\t} = props\n\n\tconst mount = document.getElementById(mountElement);\n\tconst el = document.createElement(\"div\");\n\n\tuseEffect(() => {\n\t\tmount && mount.appendChild(el);\n\n\t\treturn () => mount && mount.removeChild(el);\n\t}, [el, mount]);\n\n\treturn createPortal(children, el)\n};\n\n\nPortal.defaultProps = {\n\tmountElement: \"root\",\n};\nexport default Portal;","import styled from \"styled-components\";\n\nexport const WarningIcon = styled.i`\n    color: ${props => props.color};\n    z-index: 10;\n    pointer-events:all;\n\n    // position: absolute;\n    // top: 50%;\n    // right: 1rem;\n    // transform: translateY(-50%);\n    // margin-left: 1rem;\n    opacity: ${props => props.visible ? 1 : 0};\n\n    z-index: 2;\n`;\n\nexport const StyledInput = styled.input`\n    width: 0;\n    height: 0;\n    position: absolute;\n    z-index: 0;\n    opacity:0;\n    cursor: default;\n\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n`;\n\nexport const IconContainer = styled.div`\n    //position: absolute;\n    width: auto;\n    height: auto;\n\n    position: absolute;\n    margin-bottom:1rem;\n    top: 50%;\n    right: 1rem;\n    transform: translateY(-50%);\n    margin-left: 1rem;\n`;\n","// import external dependencies\nimport React, { useState, useEffect, useRef } from 'react';\nimport ReactTooltip from \"react-tooltip\";\n\nimport Portal from \"../../../../higher_order_components/portal\";\n\nimport { uuidv4 } from '../../../../methods/utils/utils'\n\n// import styles\nimport * as styled from './error_tooltip.style';\nimport DropDownSearchField from \"../drop_down_search_field/drop_down_search_field\";\n\nconst ErrorTooltip = (props) => {\n\n    const {\n        ContainerComponent,\n        text,\n        visible,\n        onClick,\n        className,\n        color\n    } = props\n\n    // target input for initial display of tooltip\n    const inputRef = useRef(null);\n\n    // required for initial display of tooltip\n    const [autoFocus, setAutoFocus] = useState(false);\n\n    // unique id for tooltip\n    const [id, setId] = useState(uuidv4());\n\n    // input is initially focused to show tooltip, then blurred after timeout to hide it\n    useEffect(\n        () => {\n            if (autoFocus) {\n                let timer1 = setTimeout(() => setAutoFocus(false), 3000)\n\n                // this will clear Timeout when component unmount like in willComponentUnmount\n                return () => {\n                    clearTimeout(timer1)\n                }\n            }\n\n        },\n        [] //useEffect will run only one time\n        //if you pass a value to array, like this [data] than clearTimeout will run every time this value changes (useEffect re-run)\n    )\n\n\n    // useEffect(() => {\n    //     if (autoFocus) {\n    //         inputRef.current.focus();\n    //     } else {\n    //         inputRef.current.blur();\n    //     }\n    // }, [autoFocus]);\n\n    return (\n\n        <ContainerComponent>\n            {/*initial display on load*/}\n            {autoFocus && visible &&\n                //wrap in portal to avoid clipping issues\n                <Portal>\n                    <ReactTooltip style={{ zIndex: 20 }} delayShow={250} event={'focus'} eventOff={'blur'} id={id}>\n                        <span>{text}</span>\n                    </ReactTooltip>\n                </Portal>\n\n            }\n\n            {/* only show on hover after initial display */}\n            {!autoFocus && visible &&\n                //wrap in portal to avoid clipping issues\n                <Portal>\n                    <ReactTooltip eventOff={'mouseout'} id={id}>\n                        <span>{text}</span>\n                    </ReactTooltip>\n                </Portal>\n            }\n\n            {autoFocus &&\n                <styled.StyledInput\n                    visible={visible}\n                    ref={inputRef}\n                    readOnly={true}\n                    // hidden={true}\n                    // autoFocus={autoFocus}\n                    event={'focus'}\n                    data-tip\n                    data-for={id}\n                />\n            }\n\n            <styled.WarningIcon\n                visible={visible}\n                color={color}\n                className={className}\n                data-tip\n                data-for={id}\n                onClick={onClick}\n            />\n        </ContainerComponent>\n\n    );\n\n}\n\n// Specifies the default values for props:\nErrorTooltip.defaultProps = {\n    ContainerComponent: styled.IconContainer,\n    className: \"fas fa-exclamation-triangle\",\n    color: '#FF4B4B',\n};\n\nexport default React.memo(ErrorTooltip);","export const daysOfTheWeek = {\n  0: 'monday',\n  1: 'tuesday',\n  2: 'wednesday',\n  3: 'thursday',\n  4: 'friday',\n  5: 'saturday',\n  6: 'sunday'\n}\n\nexport const TEMP_NEW_SCHEDULE_ID = \"TEMP_NEW_SCHEDULE_ID\"\nexport const DEFAULT_TASK_ID = \"DEFAULT_TASK_ID\"\n\nexport const FORM_MODES = {\n  CREATE: \"CREATE\",\n  UPDATE: \"UPDATE\"\n}\n","export const GET_EVENTS = 'GET_EVENTS'\nexport const GET_EVENTS_STARTED = 'GET_EVENTS_STARTED'\nexport const GET_EVENTS_SUCCESS = 'GET_EVENTS_SUCCESS'\nexport const GET_EVENTS_FAILURE = 'GET_EVENTS_FAILURE'\n\nexport const POST_EVENTS = 'POST_EVENTS'\nexport const POST_EVENTS_STARTED = 'POST_EVENTS_STARTED'\nexport const POST_EVENTS_SUCCESS = 'POST_EVENTS_SUCCESS'\nexport const POST_EVENTS_FAILURE = 'POST_EVENTS_FAILURE'\n\nexport const PUT_EVENTS = 'PUT_EVENTS'\nexport const PUT_EVENTS_STARTED = 'PUT_EVENTS_STARTED'\nexport const PUT_EVENTS_SUCCESS = 'PUT_EVENTS_SUCCESS'\nexport const PUT_EVENTS_FAILURE = 'PUT_EVENTS_FAILURE'\n\nexport const DELETE_EVENTS = 'DELETE_EVENTS'\nexport const DELETE_EVENTS_STARTED = 'DELETE_EVENTS_STARTED'\nexport const DELETE_EVENTS_SUCCESS = 'DELETE_EVENTS_SUCCESS'\nexport const DELETE_EVENTS_FAILURE = 'DELETE_EVENTS_FAILURE'\n","import { normalize, schema } from 'normalizr';\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n    TASK_QUEUE,\n    TASK_QUEUE_ALL,\n    TASK_QUEUE_ITEM,\n    GET_TASK_QUEUE,\n    GET_TASK_QUEUE_STARTED,\n    GET_TASK_QUEUE_SUCCESS,\n    GET_TASK_QUEUE_FAILURE,\n\n    GET_TASK_QUEUE_ITEM,\n    GET_TASK_QUEUE_ITEM_STARTED,\n    GET_TASK_QUEUE_ITEM_SUCCESS,\n    GET_TASK_QUEUE_ITEM_FAILURE,\n\n    POST_TASK_QUEUE,\n    POST_TASK_QUEUE_STARTED,\n    POST_TASK_QUEUE_SUCCESS,\n    POST_TASK_QUEUE_FAILURE,\n\n    DELETE_TASK_QUEUE,\n    DELETE_TASK_QUEUE_STARTED,\n    DELETE_TASK_QUEUE_SUCCESS,\n    DELETE_TASK_QUEUE_FAILURE,\n\n    HANDLE_POST_TASK_QUEUE,\n    TASK_QUEUE_OPEN,\n    INCREMENT_GET_DATA_FAILURE_COUNT\n} from '../types/task_queue_types';\n\nimport {\n    GET_,\n    POST_,\n    DELETE_,\n    PUT_,\n\n    _STARTED,\n    _SUCCESS,\n    _FAILURE,\n} from '../types/api_types';\n\nimport { taskQueueSchema } from '../../normalizr/task_queue_schema';\nimport uuid from 'uuid';\nimport * as api from '../../api/task_queue_api'\n\n\n// get\n// ******************************\nexport const getTaskQueue = () => {\n    return async dispatch => {\n\n        function onStart() {\n            dispatch({ type: GET_ + TASK_QUEUE + _STARTED });\n        }\n        function onSuccess(taskQueue) {\n            dispatch({ type: GET_ + TASK_QUEUE + _SUCCESS, payload: taskQueue });\n            return taskQueue;\n        }\n        function onError(error) {\n            dispatch({ type: GET_ + TASK_QUEUE + _FAILURE, payload: error });\n            dispatch({ type: INCREMENT_GET_DATA_FAILURE_COUNT, payload: null })\n            return error;\n        }\n\n        try {\n            onStart();\n\n            const taskQueue = await api.getTaskQueue();\n            const normalizedData = normalize(taskQueue, taskQueueSchema);\n\n            return onSuccess(normalizedData.entities.taskQueue);\n        } catch (error) {\n            return onError(error);\n        }\n    };\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// create\n// ******************************\nexport const postTaskQueue = (queueItem) => {\n    return async dispatch => {\n\n        function onStart() {\n            dispatch({ type: POST_ + TASK_QUEUE + _STARTED, payload: queueItem });\n        }\n        function onSuccess(createdTaskQueueItem, oldTaskQueueItemId) {\n            const payload = { createdTaskQueueItem, oldTaskQueueItemId };\n            dispatch({ type: POST_ + TASK_QUEUE + _SUCCESS, payload });\n            return (\n                createdTaskQueueItem\n            );\n        }\n        function onError(error) {\n            dispatch({ type: POST_ + TASK_QUEUE + _FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const createdTaskQueueItem = await api.postTaskQueue(queueItem);\n            return onSuccess(createdTaskQueueItem, queueItem.id);\n        } catch (error) {\n            return onError(error);\n        }\n    };\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// update\n// ******************************\nexport const putTaskQueue = (item, ID) => {\n    return async dispatch => {\n\n        function onStart() {\n            dispatch({ type: PUT_ + TASK_QUEUE + _STARTED, payload: {item, ID} });\n        }\n        function onSuccess(item, ID) {\n            const payload = { item, ID };\n            dispatch({ type: PUT_ + TASK_QUEUE + _SUCCESS, payload });\n            return payload\n\n        }\n        function onError(error) {\n            dispatch({ type: PUT_ + TASK_QUEUE + _FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const taskQueueItem = await api.putTaskQueueItem(item, ID);\n            return onSuccess(item, ID);\n        } catch (error) {\n            return onError(error);\n        }\n    };\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// delete all\n// ******************************\nexport const deleteTaskQueueAll = () => {\n    return async dispatch => {\n\n        function onStart() {\n            dispatch({ type: DELETE_ + TASK_QUEUE_ALL + _STARTED });\n        }\n        function onSuccess(response) {\n            dispatch({ type: DELETE_ + TASK_QUEUE_ALL + _SUCCESS });\n            return response;\n        }\n        function onError(error) {\n            dispatch({ type: DELETE_ + TASK_QUEUE_ALL + _FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const response = await api.deleteTaskQueueAll();\n            return onSuccess(response);\n        } catch (error) {\n            return onError(error);\n        }\n    };\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// delete all\n// ******************************\nexport const deleteTaskQueueItem = (id) => {\n    return async dispatch => {\n\n        function onStart() {\n            dispatch({ type: DELETE_ + TASK_QUEUE_ITEM + _STARTED });\n        }\n        function onSuccess(response, id) {\n            const payload = { id }\n            dispatch({ type: DELETE_ + TASK_QUEUE_ITEM + _SUCCESS, payload });\n            return response;\n        }\n        function onError(error) {\n            dispatch({ type: DELETE_ + TASK_QUEUE_ITEM + _FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const response = await api.deleteTaskQueueItem(id);\n            return onSuccess(response, id);\n        } catch (error) {\n            return onError(error);\n        }\n    };\n};\n\n/**\n @param {*} props\n */\n\nexport const handlePostTaskQueue = (props) => {\n\n    const {\n        dashboardID,\n        tasks,\n        taskQueue,\n        Id,\n        name,\n        custom,\n        fromSideBar,\n        deviceType\n    } = props\n\n    return async dispatch => {\n        // If a custom task then add custom task key to task q\n        if (Id === 'custom_task') {\n\n            await dispatch(postTaskQueue(\n                {\n                    _id: uuid.v4(),\n                    \"task_id\": Id,\n                    'custom_task': custom,\n                    \"device_type\": deviceType\n                }\n            ))\n        }\n\n        else {\n\n            let inQueue = false\n\n            if (!!taskQueue) {\n                Object.values(taskQueue).map((item) => {\n                    // If its in the Q and not a handoff, then alert the user saying its already there\n                    if (item.task_id === Id && !tasks[item.task_id].handoff) inQueue = true\n                })\n            }\n\n            // add alert to notify task has been added\n            if (!inQueue) {\n                // If the task is a human task, its handled a little differently compared to a normal task\n                // Set hil_response to null because the backend does not dictate the load hil message\n                // Since the task is put into the q but automatically assigned to the person that clicks the button\n                if (deviceType === 'human') {\n\n                    const postTask = {\n                        _id: uuid.v4(),\n                        \"device_type\": deviceType,\n                        \"task_id\": Id,\n                        dashboard: dashboardID,\n                        hil_response: null,\n                    }\n                    await dispatch({ type: 'LOCAL_HUMAN_TASK', payload: postTask._id })\n                    const postToQueue = dispatch(postTaskQueue(postTask))\n\n                    if (fromSideBar) {\n                        postToQueue.then(item => {\n                            const id = item?._id\n                            dispatch({ type: 'TASK_QUEUE_ITEM_CLICKED', payload: id })\n                        })\n                    }\n                }\n\n                else {\n                    await dispatch(postTaskQueue(\n                        {\n                            _id: uuid.v4(),\n                            \"device_type\": deviceType,\n                            \"task_id\": Id,\n                        })\n                    )\n                }\n            }\n        }\n    };\n};\n\n\nexport const taskQueueOpen = (bool) => {\n    return { type: TASK_QUEUE_OPEN, payload: bool }\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n","import {\n    STARTED,\n    SUCCESS,\n    FAILURE\n} from '../types/suffixes';\n\nexport const api_action = async (actionName, callback, dispatch, args) => {\n\n\n    function onStart() {\n      dispatch({ type: actionName + STARTED, payload: args });\n    }\n\n    function onSuccess(payload) {\n      dispatch({ type: actionName + SUCCESS, payload });\n      return payload;\n    }\n\n    function onError(error) {\n      dispatch({ type: actionName + FAILURE, payload: error });\n      return error;\n    }\n\n    try {\n\n      onStart();\n      const payload = await callback();\n      return onSuccess(payload);\n\n    } catch (error) {\n      return onError(error);\n    }\n\n};\n"],"sourceRoot":""}