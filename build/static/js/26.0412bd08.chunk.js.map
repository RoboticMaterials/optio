{"version":3,"sources":["../node_modules/invariant/browser.js","components/side_bar/content/content_list/content_list.js","components/side_bar/content/tasks/tasks_content.style.js","components/side_bar/content/tasks/task_field/route_field.js","components/basic/form/list_item_field/list_item_field.style.js","components/basic/form/list_item_field/list_item_field.js","components/side_bar/content/processes/process_field/process_field.style.js","components/side_bar/content/processes/process_field/process_field.js","components/side_bar/content/processes/process_form/process_form.js","components/side_bar/content/processes/processes_content.js","constants/position_constants.js","components/widgets/widget_pages/dashboards_page/dashboard_buttons/dashboard_button/dashboard_button.js","components/widgets/widget_pages/dashboards_page/dashboard_buttons/dashboard_buttons.style.js","constants/station_constants.js","components/basic/back_button/back_button.style.js","components/basic/back_button/back_button.js","hooks/useOnClickOutside.js","components/widgets/widget_pages/dashboards_page/dashboard_buttons/dashboard_button/dashboard_button.style.js","components/side_bar/content/content_list/content_list.style.js","components/side_bar/content/content_header/contnet_header.style.js","components/basic/plus_button/plus_button.style.js","components/basic/plus_button/plus_button.js","components/side_bar/content/content_header/content_header.js","components/side_bar/content/content_list/content_list_item/content_list_item.js","hooks/usePrevious.js","components/basic/bounce_button/bounce_button.style.js","components/basic/bounce_button/bounce_button.js"],"names":["module","exports","condition","format","a","b","c","d","e","f","error","undefined","Error","args","argIndex","replace","name","framesToPop","ContentList","props","executeTask","hideHeader","handleCardView","elements","schema","onClick","onMouseEnter","onMouseLeave","useState","sortKey","setSortKey","sortedElements","useMemo","deepCopy","sort","created_at","edited_at","handleIconClick","inQ","element","content","onClickAdd","onPlus","onSelect","Toggle","id","className","style","userSelect","border","Menu","zIndex","Item","eventKey","map","ind","broken","_id","onIconClick","onEditClick","inQueue","ContentContainer","styled","div","Title","i","theme","bg","primary","h1","font","septenary","TaskContainer","secondary","RowContainer","dark","tertiary","textColor","solid","fontSize","sz3","octonary","ErrorText","sz2","h2","span","tasks","h3","sz4","quinary","bad","DualSelectionButton","button","selected","quaternary","TaskField","values","formikErrors","errors","setFieldValue","validateForm","setFieldTouched","setTouched","formikProps","touched","routeCopy","onSave","processRoutes","routes","confirmExitModal","setConfirmExitModal","enableSave","setEnableSave","useSelector","state","tasksReducer","selectedRoute","selectedTask","stations","stationsReducer","initialNameSet","setInitialNameSet","dispatch","useDispatch","dispatchSetSelectedTask","task","setSelectedTask","onEditing","editingTask","dispatchSetEditingValues","process","setEditingValues","editingIdx","findIndex","route","editingRoute","fieldName","prevLoadStationId","usePrevious","load","prevUnloadStationId","unload","submitDisabled","Object","keys","length","useEffect","prevLoadName","prevUnloadName","prevName","buildDefaultRouteName","loadName","unloadName","newName","JSON","stringify","updateDivergingRoutes","type","forEach","idx","console","log","onRouteBack","isNew","updatedRoutes","push","onSaveRoute","isDivergingRoute","isDiverging","find","divergeType","isOpen","title","button_1_text","button_2_text","handleClose","handleOnClick1","handleOnClick2","mode","onClickBack","margin","placeholder","value","InputComponent","Textbox","inputStyle","background","fontWeight","textboxContainerStyle","containerStyle","marginBottom","alignSelf","justifyContent","borderRadius","Array","isArray","disabled","removedRouteInd","numRoutes","newUpdatedRoutes","onRemoveRoute","defaultProps","DefaultContainer","DefaultErrorTooltipContainerComponent","ListItem","cardShadow","css","commonCss","edited","ListItemTitle","disabledCss","ListItemIcon","ListItemIconContainer","ListItemField","Container","ErrorTooltipContainerComponent","onTitleClick","playDisabled","showPlay","rest","useFormikContext","validateOnChange","validateOnBlur","validateField","useField","field","meta","fieldValue","new","changed","unsaved","hasError","getMessageFromError","width","color","stylec","ColumnContainer","senary","HelpText","text","processes","ProcessField","onDelete","onBack","isSubmitting","setFieldError","getFieldMeta","useContext","ThemeContext","useChange","errorCount","currError","isEmpty","dispatchSetSelectedHoveringTask","setSelectedHoveringTask","dispatchSetProcessAttributes","attr","setProcessAttributes","selectedProcess","processesReducer","pageInfoChanged","sidebarReducer","pageDataChanged","startNodes","findProcessStartNodes","startDivergeType","confirmDeleteModal","setConfirmDeleteModal","setRouteCopy","formikSelectedTask","processRoutesCopy","selectedTaskCopy","onClickSave","focus","defaultValue","marginTop","borderBottom","paddingBottom","currRoute","currIndex","renderRoutes","ProcessForm","toggleEditingProcess","formRef","useRef","current","initialValues","dispatchPostProcess","postProcesses","dispatchPutProcess","putProcesses","dispatchDeleteLotTemplate","ID","deleteLotTemplate","dispatchPostRoute","postTask","dispatchPutRoute","putTask","dispatchSetSelectedProcess","setSelectedProcess","dispatchDeleteProcessClean","deleteProcessClean","dispatchDeleteRouteClean","routeId","deleteRouteClean","dispatchPageDataChanged","bool","currentMapId","localReducer","localSettings","lotTemplates","lotTemplatesReducer","processCopy","remainingInitialValues","remainingValues","handleDeleteRemovedRoutes","processId","deleteTask","handleSave","close","savingRoute","mappedRoutes","currDate","Date","map_id","getTime","flattened_stations","flattenProcessStations","postedProcess","lotTemplate","BASIC_LOT_TEMPLATE","postLotTemplate","handleBack","handleDelete","withRoutes","handleDeleteWithRoutes","handleDeleteWithoutRoutes","isObject","filter","uuid","v4","showStatistics","showQueue","showFinish","validationSchema","getProcessSchema","innerRef","validateOnMount","onSubmit","formikHelpers","setSubmitting","resetForm","buttonType","submitForm","ProcessesContent","history","useHistory","dispatchEditing","editingProcess","editing","isBrokenProcess","currentPath","location","pathname","onCardView","newProcess","positionColor","PositionTypes","shelf_position","svgPath","fill","x","y","height","rx","transform","strokeMiterlimit","strokeWidth","cx","cy","r","attributes","parent","charger_position","cart_position","temporary_cart_position","newPositionTemplate","temp","pos_x","pos_y","rotation","DashboardButton","getLogger","children","deviceType","taskID","clickable","hoverable","titleStyle","containerCss","iconColor","iconClassName","svgColor","invert","borderGlow","viewBox","preserveAspectRatio","position","left","borderGlowCss","ContainerCss","LightenDarkenColor","boxShadow","pointerEvents","conditionTextCss","stationColor","main","locations","StationTypes","warehouse","version","xmlns","dashboards","human","BackSymbol","active","hovered","fg","BackButton","setHovered","setActive","onMouseDown","onMouseUp","disable","useOnClickOutside","ref","handler","listener","event","contains","target","document","addEventListener","passive","removeEventListener","ConditionText","IconContainer","SchemaIcon","List","ul","ListItemRect","LocationTypeGraphic","svg","ErrorContainer","SortToggle","SortContainer","Header","EditTitle","ClearIcon","DeleteForeverIcon","PlusSymbol","PlusButton","ContentHeader","onClickClear","saveEnabled","backEnabled","handleTitle","upperCaseFirstLetterInString","display","float","ContentListItem","showEdit","paddingTop","LocationTypes","stroke","renderLocationTypeIcon","visible","ContainerComponent","val","activeStyle","RGB_Linear_Shade","hexToRGBA","backgroundColor","hoverStyle","red","BounceButton","Component","onClickOutside"],"mappings":"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","file":"static/js/26.0412bd08.chunk.js","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n","import React, { useState, useMemo } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\n\n// Import Styles\nimport * as styled from \"./content_list.style\";\n\n// Import Components\nimport ContentHeader from \"../content_header/content_header\";\nimport ContentListItem from \"./content_list_item/content_list_item\";\nimport Portal from \"../../../../higher_order_components/portal\";\n\n// Import Utils\nimport { deepCopy } from \"../../../../methods/utils/utils\";\n\nimport { isOnlyHumanTask } from \"../../../../methods/utils/route_utils\";\n\nexport default function ContentList(props) {\n    const {\n        executeTask,\n        hideHeader,\n        handleCardView,\n        elements,\n        schema,\n\n        onClick,\n        onMouseEnter,\n        onMouseLeave,\n    } = props;\n\n    const [sortKey, setSortKey] = useState('alphabetic')\n\n    const sortedElements = useMemo(() => {\n        let sortedElements = deepCopy(elements)\n        switch (sortKey) {\n            case 'alphabetic':\n                sortedElements.sort((a, b) => a.name > b.name ? 1 : a.name < b.name ? -1 : 0)\n                return sortedElements\n            case 'created old-new':\n                sortedElements.sort((a, b) => a.created_at > b.created_at ? 1 : a.created_at < b.created_at ? -1 : 0)\n                return sortedElements\n            case 'created new-old':\n                sortedElements.sort((a, b) => a.created_at < b.created_at ? 1 : a.created_at > b.created_at ? -1 : 0)\n                return sortedElements\n            case 'edited old-new':\n                sortedElements.sort((a, b) => a.edited_at > b.edited_at ? 1 : a.edited_at < b.edited_at ? -1 : 0)\n                return sortedElements\n            case 'edited new-old':\n                sortedElements.sort((a, b) => a.edited_at < b.edited_at ? 1 : a.edited_at > b.edited_at ? -1 : 0)\n                return sortedElements\n            default:\n                return elements;\n        }\n    }, [elements, sortKey])\n\n    // console.log(sortedElements.map(e => ({name: e.name, ed: e.edited_at, cr: e.created_at})))\n\n    // const processes = useSelector(state => state.processesReducer.processes)\n    // const routes = useSelector(state => state.tasksReducer.tasks)\n    // console.log(Object.values(processes)[0].routes.map(routeId => routes[routeId]))\n\n    const handleIconClick = useMemo(() => {\n        switch (schema) {\n            case \"locations\":\n                return () => {};\n            case \"tasks\":\n                return (inQ) => !inQ && executeTask();\n            case \"processes\":\n                return (element) => handleCardView(element);\n        }\n    }, [schema]);\n\n    const SortToggle = React.forwardRef(({ children, onClick }, ref) => (\n        <styled.SortToggle\n            href=\"\"\n            ref={ref}\n            onClick={(e) => {\n                e.preventDefault();\n                onClick(e);\n            }}\n        >\n            {children}\n        </styled.SortToggle>\n    ));\n\n\n    return (\n        <styled.Container>\n            {!hideHeader && (\n                <ContentHeader\n                    content={props.schema}\n                    onClickAdd={props.onPlus}\n                />\n            )}\n\n            <styled.SortContainer>\n                <Dropdown onSelect={e => setSortKey(e)}>\n                    <Dropdown.Toggle\n                        id=\"sort-dropdown\"\n                        className=\"sort-dropdown-toggle\"\n                        style={{userSelect: 'none !important', border: 'none !important'}}\n                    >\n                        Sort\n                    </Dropdown.Toggle>\n\n                    <Portal>\n                        <Dropdown.Menu style={{zIndex: 10000}} >\n                            <Dropdown.Item eventKey=\"alphabetic\">Alphabetical</Dropdown.Item>\n                            <Dropdown.Item eventKey=\"created new-old\">Created Date (Newest -> Oldest)</Dropdown.Item>\n                            <Dropdown.Item eventKey=\"created old-new\">Created Date (Oldest -> Newest)</Dropdown.Item>\n                            <Dropdown.Item eventKey=\"edited new-old\">Last Edited Date (Newest -> Oldest)</Dropdown.Item>\n                            <Dropdown.Item eventKey=\"edited old-new\">Last Edited Date (Oldest -> Newest)</Dropdown.Item>\n                        </Dropdown.Menu>\n                    </Portal>\n                </Dropdown>\n            </styled.SortContainer>\n\n            <styled.List>\n                {sortedElements.map((element, ind) => {\n                    const error =\n                        props.schema === \"processes\" && element.broken\n                            ? true\n                            : false;\n\n                    return (\n                        <ContentListItem\n                            key={`content-list-${element._id}`}\n                            id={`content-list-${element._id}`}\n                            onIconClick={handleIconClick}\n                            onEditClick={onClick}\n                            ind={ind}\n                            error={error}\n                            element={element}\n                            schema={schema}\n                            inQueue={false}\n                            onMouseEnter={onMouseEnter}\n                            onMouseLeave={onMouseLeave}\n                        />\n                    );\n                })}\n            </styled.List>\n        </styled.Container>\n    );\n}\n","import styled from 'styled-components'\nimport { LightenDarkenColor } from '../../../../methods/utils/color_utils'\n\nexport const ContentContainer = styled.div`\n    flex-grow: 1;\n    padding: 1rem 1rem 0rem 1rem;\n    display: flex;\n    flex-direction: column;\n\n`\nexport const ObjectContainerBackground = styled.div`\n    width: 100%\n    padding: 1rem;\n    padding-top: 1.5rem;\n\n    display: flex;\n    flex-direction: column;\n    background-color: #26ab76\n\n`\nexport const ListItemIcon = styled.i`\n    font-size: 1.3rem;\n    color: ${props => props.theme.bg.primary};\n\n    &:hover {\n        cursor: pointer;\n    }\n\n`\nexport const Title = styled.h1`\n    font-family: ${props => props.theme.font.primary};\n    font-size: 1.1rem;\n    font-weight: 500;\n    color: ${props => props.theme.bg.septenary};\n    user-select: none;\n`\n\n\nexport const TaskContainer = styled.div`\n    background-color: ${props => props.theme.bg.secondary};\n    border-radius: 0.4rem;\n    overflow: auto;\n    // box-shadow: 0px 0px 6px 1px rgba(0,0,0,0.1);\n    scrollbar-width: thin;\n    height: 100%;\n`\n\nexport const Card = styled.div`\n    background: ${props => props.dark ? props.theme.bg.tertiary : props.theme.bg.secondary};\n    // box-shadow: 0px 0px 6px 1px rgba(0,0,0,0.1);\n    padding: 0.5rem;\n    border-radius: 0.4rem;\n\n    margin-bottom: 0.5rem;\n    margin-top: 0.5rem\n`\n\nexport const ItemContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    width: 100%;\n    height: 100%;\n    align-items: center;\n\n    padding: 0.8rem;\n\n\n`\n\nexport const Icon = styled.i`\n    font-size: 1.4rem;\n    color: ${props => props.theme.textColor};\n\n    &:hover {\n        cursor: pointer;\n    }\n`\nexport const ListItem = styled.div`\n    display: flex;\n    align-items: center;\n    width: auto;\n    height: 2.5rem;\n    text-overflow: ellipsis;\n    justify-content: space-between;\n    background: ${props => props.theme.schema['tasks'].solid};\n\n    margin-bottom: 0.5rem;\n    border-radius: 0.5rem;\n    border: 0.1rem solid;\n\n    border-color: ${props => props.error ? props.theme.error : 'transparent'};\n\n\n`\nexport const ListItemTitle = styled.h1`\n\n    font-family: ${props => props.theme.font.primary};\n    /* font-size: ${props => props.theme.fontSize.sz3}; */\n    font-size: 1rem;\n    font-weight: 500;\n    color: ${props => props.theme.bg.octonary};\n    user-select: none;\n    width: 10rem;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    margin-left: 0.5rem;\n    margin-bottom: 0rem;\n\n`\nexport const RowContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: center;\n`\n\nexport const Header = styled.h1`\n    font-size: ${props => props.theme.fontSize.sz2};\n    font-family: ${props => props.theme.font.primary};\n    color: ${props => props.theme.textColor};\n    margin-top: 1rem;\n`\n\nexport const Label = styled.h2`\n    font-size: 0.9rem;\n    font-family: ${props => props.theme.font.primary};\n    color: ${props => props.theme.textColor};\n    margin-right: 1rem;\n    line-height: 2rem;\n`\n\nexport const LabelHighlight = styled.span`\n    font-size: 1.2rem;\n    font-family: ${props => props.theme.font.primary};\n    color: ${props => props.theme.schema.tasks.solid};\n    line-height: 2rem;\n    font-weight: bold;\n\n`\n\nexport const HelpText = styled.h3`\n    font-size: ${props => props.theme.fontSize.sz4};\n    font-family: ${props => props.theme.font.primary};\n    color: ${props => props.theme.bg.quinary};\n    text-align: center;\n`\nexport const ObjectEditorText = styled.h3`\n    font-size: ${props => props.theme.fontSize.sz4};\n    font-family: ${props => props.theme.font.primary};\n    color: ${props => props.theme.textColor};\n    text-align: center;\n\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n\n    font-size: 1.2rem;\n    padding-top: 0.4rem;\n\n`\n\nexport const DirectionText = styled.h3`\n    font-size: 1rem;\n    font-family: ${props => props.theme.font.primary};\n    color: ${props => props.theme.bg.septenary};\n    text-align: center;\n`\n\nexport const ErrorText = styled.h3`\n    font-size: ${props => props.theme.fontSize.sz4};\n    font-family: ${props => props.theme.font.primary};\n    color: ${props => props.theme.bad};\n    text-align: center;\n`\n\nexport const DualSelectionButton = styled.button`\n    font-size: 1rem;\n    width: 50%;\n    border: none;\n    font-family: ${props => props.theme.font.primary};\n\n    color: ${props => props.selected ? props.theme.bg.octonary : props.theme.bg.quinary};\n\n    background-color: ${props => props.selected ? props.theme.schema.tasks.solid : props.theme.bg.tertiary};\n\n    transition: background-color 0.25s ease, box-shadow 0.1s ease;\n\n    &:focus{\n        outline: 0 !important\n    }\n\n    &:active{\n        box-shadow: none;\n    }\n\n    &:hover{\n        //background-color: ${props => props.theme.bg.quaternary};\n    }\n`\n","import React, { useState, useEffect, useMemo } from 'react'\nimport * as styled from '../tasks_content.style'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useLocation, useParams } from 'react-router-dom'\nimport { ThemeContext } from 'styled-components'\n\nimport Portal from '../../../../../higher_order_components/portal'\n/*\n*\n* Should track quantity / fraction option only display if there is an obj? in master it always displays\n*\n* When creating new process\n*   when adding route, should click add create the route in mongo, or should this wait until the process is made as well\n*       If we don't wait till the process is saved, if you leave the page / refresh / cancel, the route will already be made without the process. I think wait - Justin\n*\n* */\n\n\n// Import Basic Components\nimport ContentHeader from '../../content_header/content_header'\nimport Textbox from '../../../../basic/textbox/textbox.js'\nimport Button from '../../../../basic/button/button'\n\n// Import Components\nimport ConfirmDeleteModal from '../../../../basic/modals/confirm_delete_modal/confirm_delete_modal'\n\n// Import utils\n\n// Import actions\nimport { setEditingValues } from '../../../../../redux/actions/processes_actions'\nimport { editingTask, setSelectedTask } from '../../../../../redux/actions/tasks_actions'\nimport {\n    buildDefaultRouteName,\n} from \"../../../../../methods/utils/route_utils\";\nimport TextField from \"../../../../basic/form/text_field/text_field\";\n\nimport usePrevious from \"../../../../../hooks/usePrevious\";\n\nconst TaskField = (props) => {\n\n    const {\n        values,\n        errors: formikErrors,\n        setFieldValue,\n        setFieldTouched,\n        validateForm,\n        formikProps,\n        touched,\n        setTouched,\n        onSave,\n        routeCopy\n    } = props\n\n    const { routes: processRoutes } = values;\n    const [confirmExitModal, setConfirmExitModal] = useState(false)\n    const [enableSave, setEnableSave] = useState(false)\n    const { tasks: routes, selectedTask: selectedRoute } = useSelector(state => state.tasksReducer)\n    const { stations } = useSelector(state => state.stationsReducer)\n\n    const [initialNameSet, setInitialNameSet] = useState(false)\n\n    const dispatch = useDispatch()\n    const dispatchSetSelectedTask = (task) => dispatch(setSelectedTask(task))\n    const onEditing = async (props) => await dispatch(editingTask(props))\n    const dispatchSetEditingValues = (process) => dispatch(setEditingValues(process))\n\n    const editingIdx = processRoutes.findIndex(route => route._id === selectedRoute._id)\n    const editingRoute = processRoutes[editingIdx]\n    const fieldName = `routes[${editingIdx}]`\n\n    const prevLoadStationId = usePrevious(editingRoute?.load)\n    const prevUnloadStationId = usePrevious(editingRoute?.unload)\n\n    const errors = (typeof formikErrors?.routes === 'object') && formikErrors.routes\n    const errorCount = Object.keys(errors).length // get number of field errors\n    const submitDisabled = ((errorCount > 0) || (!enableSave))// || (!changed)) //&& (submitCount > 0) // disable if there are errors or no touched field, and form has been submitted at least once\n\n    useEffect(() => {\n        // The changes to load an unload only happen on the map so we need to reflect\n        // the changes in formik when they occur\n        if (editingRoute.load !== selectedRoute.load) {\n            setFieldValue(`${fieldName}.load`, selectedRoute.load)\n        }\n        if (editingRoute.unload !== selectedRoute.unload) {\n            setFieldValue(`${fieldName}.unload`, selectedRoute.unload)\n        }\n\n        // Update the name if the load/unload has changed ONLY if the name is a default name\n        const prevLoadName = stations[prevLoadStationId]?.name || \"\"\n        const prevUnloadName = stations[prevUnloadStationId]?.name || \"\"\n        const prevName = buildDefaultRouteName(prevLoadName, prevUnloadName)\n\n        const loadName = stations[editingRoute.load]?.name || \"\"\n        const unloadName = stations[editingRoute.unload]?.name || \"\"\n        const newName = buildDefaultRouteName(loadName, unloadName)\n        const partName = buildDefaultRouteName(loadName, unloadName)\n\n\n        if ((editingRoute.name === prevName) || (!editingRoute.name && !initialNameSet)) {\n            setFieldValue(`${fieldName}.name`, newName, false)\n            setInitialNameSet(true)\n        }\n\n\n        validateForm()\n\n    }, [editingRoute])\n    useEffect(() => {\n        setTouched({})\n    }, [])\n\n    useEffect(() => {\n      let route = {}\n      for(const ind in values.routes){\n        if(values.routes[ind]._id === selectedRoute._id){\n          route = values.routes[ind]\n        }\n      }\n      if (JSON.stringify(routeCopy) !== JSON.stringify(route)) {\n          setEnableSave(true)\n      }\n      else {\n          setEnableSave(false)\n      }\n    }, [values])\n\n    useEffect(() => {\n\n      for(const ind in values.routes){\n        if(values.routes[ind]._id === selectedRoute?._id){\n          if(selectedRoute.unload!== values.routes[ind].unload || selectedRoute.load!==values.routes[ind].load){\n            setFieldValue(`routes[${ind}].unload`, selectedRoute.unload);\n            setFieldValue(`routes[${ind}].load`, selectedRoute.load);\n          }\n        }\n      }\n\n      validateForm()\n\n    }, [selectedRoute])\n\n\n    /***\n     * Updates all sibling routes with the diverging type that has been selected\n     */\n    const updateDivergingRoutes = (type) => {\n        processRoutes.forEach((route, idx) => {\n            if (route.load === selectedRoute.load) {\n                console.log(values.routes[idx].name, 'updated to', type)\n                setFieldValue(`routes[${idx}].divergeType`, type);\n            }\n        })\n    }\n\n    const onRemoveRoute = (id) => {\n      let updatedRoutes = []\n      let removedRouteInd = 0\n      for(const ind in values.routes){\n        if(values.routes[ind]._id !== id){\n          updatedRoutes.push(values.routes[ind])\n        }\n        else removedRouteInd = ind\n      }\n\n      //If you're removing a route that is split with another, revert the other\n      //route to not split. However, if 2 or more sibling routes exist dont revert as they\n      //are still split\n      if(values.routes[removedRouteInd].divergeType === 'split'){\n        let numRoutes = 0\n        let newUpdatedRoutes = updatedRoutes\n        for(const idx in newUpdatedRoutes){\n            if(newUpdatedRoutes[idx].load === values.routes[removedRouteInd].load){\n              delete newUpdatedRoutes[idx].divergeType\n              numRoutes++\n            }\n          }\n          if(numRoutes===1) updatedRoutes = newUpdatedRoutes\n        }\n\n\n      dispatchSetSelectedTask(null)\n      onEditing(false)\n      setFieldValue(`routes`, updatedRoutes);\n      dispatchSetEditingValues({...values, routes: updatedRoutes})\n    }\n\n    const onRouteBack = async (id, isNew) => {\n        const updatedRoutes = []\n        for(const ind in values.routes){\n          if(values.routes[ind]._id === id){\n            if(!!routeCopy && !isNew){\n              updatedRoutes.push(routeCopy)\n            }\n          }\n          else updatedRoutes.push(values.routes[ind])\n        }\n        onEditing(false)\n        dispatchSetSelectedTask(null)\n        setFieldValue(`routes`, updatedRoutes)\n        dispatchSetEditingValues({...values, routes: updatedRoutes})\n    }\n\n    const onSaveRoute =() => {\n        onEditing(false)\n        dispatchSetSelectedTask(null)\n        dispatchSetEditingValues(values)\n\n    }\n\n    /**\n     * checks if there are other routes with the same load location. This meeds the load\n     * station is a diverging node and the user needs to decide whether its a split or choice.\n     */\n    const isDivergingRoute = useMemo(() => {\n        const isDiverging = Object.values(processRoutes).find(route => route._id !== selectedRoute._id && route.load === selectedRoute.load) !== undefined\n        if (isDiverging && editingRoute.divergeType === undefined) {\n            updateDivergingRoutes('choice');\n        }\n        return isDiverging;\n    }, [processRoutes, editingRoute])\n\n    useEffect(() => {\n        if (!isDivergingRoute && !submitDisabled && !!editingRoute.unload) {\n            onSaveRoute()\n        }\n    }, [isDivergingRoute, submitDisabled])\n\n    return (\n        <>\n            <styled.TaskContainer schema={\"tasks\"}>\n                <styled.ContentContainer>\n\n                    <ConfirmDeleteModal\n                        isOpen={!!confirmExitModal}\n                        title={\"Are you sure you want to go back? Any progress will not be saved\"}\n                        button_1_text={\"Yes\"}\n                        button_2_text={\"No\"}\n                        handleClose={() => setConfirmExitModal(null)}\n                        handleOnClick1={() => {\n                          onRouteBack(selectedRoute._id, selectedRoute.isNew)\n                       }}\n                        handleOnClick2={() => {\n                            setConfirmExitModal(null)\n                        }}\n                    />\n                    <ContentHeader\n                        content={'tasks'}\n                        mode={'create'}\n                        onClickBack={() => {\n                            onRouteBack(selectedRoute._id, selectedRoute.isNew)\n                        }}\n                    />\n                    <div style={{ margin: '0.5rem 0.5rem 2rem 0' }}>\n                        <styled.Title>Route Name</styled.Title>\n                        <TextField\n                            placeholder='Name of route'\n                            value={editingRoute.name}\n                            schema={'routes'}\n                            name={`${fieldName}.name`}\n                            InputComponent={Textbox}\n                            inputStyle={{ background: 'white' }}\n                            style={{ fontSize: '1.2rem', fontWeight: '100' }}\n                            textboxContainerStyle={{ border: \"none\" }}\n                            containerStyle={{marginBottom: '1rem'}}\n                        />\n\n                        {/* <styled.Title>Part Name</styled.Title>\n                        <TextField\n                            placeholder='Name of transported part'\n                            value={editingRoute.part}\n                            schema={'routes'}\n                            name={`${fieldName}.part`}\n                            InputComponent={Textbox}\n                            inputStyle={{ background: 'white' }}\n                            style={{ fontSize: '1.2rem', fontWeight: '100' }}\n                            textboxContainerStyle={{ border: \"none\" }}\n                            containerStyle={{marginBottom: '1rem'}}\n                        /> */}\n\n\n                        {isDivergingRoute &&\n                            <>\n                                <styled.Title style={{ alignSelf: 'center' }}>Diverging Type</styled.Title>\n                                <styled.RowContainer style={{ justifyContent: 'center', marginBottom: '1rem'}}>\n\n                                    <styled.DualSelectionButton\n                                        style={{ borderRadius: '.5rem 0rem 0rem .5rem' }}\n                                        \n                                        onClick={() => {\n                                            updateDivergingRoutes('choice')\n                                        }}\n                                        selected={editingRoute.divergeType === 'choice'}\n\n                                    >\n                                        Choice\n                                    </styled.DualSelectionButton>\n\n                                    <styled.DualSelectionButton\n                                        style={{ borderRadius: '0rem .5rem .5rem 0rem' }}\n                                        onClick={() => {\n                                            updateDivergingRoutes('split')\n                                        }}\n                                        selected={editingRoute.divergeType === 'split'}\n                                    >\n                                        Split\n                                    </styled.DualSelectionButton>                                    \n\n                                </styled.RowContainer>\n                            </>\n                        }\n\n                    {/* <styled.Title>In-Out Ratio</styled.Title>\n                    <NumberField\n                        minValue={1}\n                        maxValue={100}\n                        name={`${fieldName}.inOutRatio`}\n\n                        containerStyle={{width: '100%', marginTop: '0.5rem', display: 'flex', justifyContent: 'center'}}\n                        buttonStyle={{fontSize: '2.5rem'}}\n                        inputStyle={{height: '2.5rem', width: '5rem', fontSize: '1.4rem'}}\n                    /> */}\n                    </div>\n\n                    <styled.ErrorText>{Array.isArray(errors) && typeof errors[errors.length-1] === 'string' && errors[errors.length-1]}</styled.ErrorText>\n\n\n                    <>\n                        <Button\n                            type = {'button'}\n                            schema={'tasks'}\n                            disabled={submitDisabled}\n                            onClick={() => {\n                                onSaveRoute()\n                            }}\n                        >{selectedRoute.isNew ? 'Add Route' : 'Save Route'}</Button>\n\n\n                        {/* Remove Task From Process Button */}\n                        <Button\n                            schema={'error'}\n                            disabled={false}\n                            secondary\n                            onClick={() => {\n                                onRemoveRoute(selectedRoute._id)\n                            }}\n                        >\n                            Remove Route\n                        </Button>\n\n\n                    </>\n\n                </styled.ContentContainer>\n            </styled.TaskContainer>\n        </>\n    )\n}\n\n// Specifies propTypes\nTaskField.propTypes = {\n\n};\n\n// Specifies the default values for props:\nTaskField.defaultProps = {\n\n};\n\nexport default TaskField\n","import styled, { css } from 'styled-components'\nimport { RGB_Linear_Shade, hexToRGBA } from '../../../../methods/utils/color_utils'\nimport * as commonCss from \"../../../../common_css/common_css\";\n\n\n// ========== Content ========== //\nexport const DefaultContainer = styled.div`\n\tposition: relative;\n`;\n\n\nexport const DefaultErrorTooltipContainerComponent = styled.div`\n  margin: 0 1rem;\n`\n\n\nexport const ListItem = styled.div`\n    display: flex;\n    align-items: center;\n    width: auto;\n    height: 3rem;\n    text-overflow: ellipsis;\n    justify-content: space-between;\n    background: ${props => props.theme.bg.primary};\n    padding: 0rem 1rem;\n\n    flex-grow: 1;\n    width: 100%;\n\n    border-radius: 0.5rem;\n    border: 0.15rem solid;\n    border-color:  ${props => props.theme.schema['routes'].solid};\n    box-shadow: ${props => props.theme.cardShadow};\n\n    ${props => css`\n      ${props.isNew && commonCss.newGlow};\n      ${props.edited && commonCss.newGlow};\n      ${props.error && commonCss.errorGlow};\n    `}  \n\n`\n\nexport const ListItemRect = styled.div`\n    height: 100%;\n    width: 100%;\n\n    border-radius: 0.5rem;\n    text-align: center;\n    padding-right:0.5rem;\n    cursor: pointer;\n    user-select: none;\n\n    box-sizing: border-box;\n    \n\n    &:hover {\n        background: ${props => props.theme.bg.octonary};\n    }\n\n`\nexport const ListItemTitle = styled.h1`\n\n    font-family: ${props => props.theme.font.primary};\n    /* font-size: ${props => props.theme.fontSize.sz3}; */\n    font-size: 1rem;\n    font-weight: 500;\n    color: ${props => props.theme.bg.octonary};\n\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    margin-right:0.5rem;\n    margin-bottom: 0rem;\n    flex-grow: 1;\n`\n\nconst disabledCss = css`\n  color: ${props => props.theme.disabled};\n  \n  &:hover {\n    cursor: default;\n    color: ${props => props.theme.disabled};\n  }\n`\n\nexport const ListItemIcon = styled.i`\n\n    font-size: 1.3rem;\n    color: lightgreen;\n    \n\n\n\n    &:hover {\n        cursor: pointer;\n        color:green;\n    }\n  \n    ${props => props.disabled && disabledCss};\n`\n\n\n\nexport const ListItemIconContainer = styled.div`\n    position: relative;\n    display: flex;\n    //width: 10%;\n`","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { useField, useFormikContext } from \"formik\";\n\nimport ErrorTooltip from '../error_tooltip/error_tooltip';\nimport * as styled from './list_item_field.style'\nimport {getMessageFromError} from \"../../../../methods/utils/form_utils\";\nimport theme from '../../../../theme'\n\nconst ListItemField = (props) => {\n\tconst {\n\t\tContainer,\n\t\tcontainerStyle,\n\t\tErrorTooltipContainerComponent,\n\t\tonMouseEnter,\n\t\tonMouseLeave,\n\t\tonIconClick,\n\t\tonEditClick,\n\t\tonTitleClick,\n\t\tplayDisabled,\n\t\tshowPlay,\n\t\t...rest\n\t} = props\n\n\tconst { setFieldValue, setFieldTouched, validateOnChange, validateOnBlur, validateField, validateForm, ...context } = useFormikContext();\n\tconst [field, meta] = useField(rest);\n\tconst {\n\t\tvalue: fieldValue,\n\t\tname: fieldName\n\t} = field\n\n\tconst {\n\t\tname,\n\t\tnew: isNew,\n\t\tchanged,\n\t\tunsaved\n\t} = fieldValue\n\n\tconst {\n\t\ttouched,\n\t\terror\n\t} = meta\n\n\tconst hasError = error\n\tconst errorMessage = getMessageFromError(error)\n\n\tconst edited = changed\n\n\tconst disabled = hasError || isNew || edited || unsaved || playDisabled\n\n\n\treturn (\n\t\t<Container\n\t\t\tstyle={containerStyle}\n\t\t>\n\t\t<styled.ListItem\n\t\t\tedited={edited}\n\t\t\t// error={hasError}\n\t\t\tisNew={isNew || unsaved}\n\t\t\tonMouseEnter={onMouseEnter}\n\t\t\tonMouseLeave={onMouseLeave}\n\t\t>\n\t\t\t{showPlay &&\n\t\t\t\t<styled.ListItemIconContainer style={{ width: '15%' }}>\n\t\t\t\t\t<styled.ListItemIcon\n\t\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\t\tclassName='fas fa-play'\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tif(!disabled) onIconClick()\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</styled.ListItemIconContainer>\n\t\t\t}\n\n\t\t\t{/* <styled.ListItemTitle schema={props.schema} onClick={() => props.onClick(element)}>{element.name}</styled.ListItemTitle> */}\n\t\t\t<styled.ListItemTitle\n\t\t\t\tschema={'processes'}\n\t\t\t\tonClick={onTitleClick}\n\t\t\t>\n\t\t\t\t{name}\n\t\t\t</styled.ListItemTitle>\n\n\t\t\t<styled.ListItemIconContainer>\n\n\t\t\t\t{/* {hasError ?\n\t\t\t\t\t<ErrorTooltip\n\t\t\t\t\t\tvisible={hasError}\n\t\t\t\t\t\ttext={errorMessage}\n\t\t\t\t\t\t// className={\"fas fa-exclamation-circle\"}\n\t\t\t\t\t\tcolor={theme.main.error}\n\t\t\t\t\t\tContainerComponent={ErrorTooltipContainerComponent}\n\t\t\t\t\t/>\n\t\t\t\t:\n\t\t\t\t\t(isNew || unsaved) ?\n\t\t\t\t\t<ErrorTooltip\n\t\t\t\t\t\ttype={'warning'}\n\t\t\t\t\t\tvisible={(isNew || unsaved)}\n\t\t\t\t\t\ttext={\"This route is not saved. Leaving the editor will remove the route.\"}\n\t\t\t\t\t\tclassName={\"fas fa-exclamation-circle\"}\n\t\t\t\t\t\tcolor={theme.main.warn}\n\t\t\t\t\t\tContainerComponent={ErrorTooltipContainerComponent}\n\t\t\t\t\t/>\n\t\t\t\t\t:\n\t\t\t\t\t\tedited &&\n\t\t\t\t\t\t<ErrorTooltip\n\t\t\t\t\t\t\ttype={'warning'}\n\t\t\t\t\t\t\tvisible={edited}\n\t\t\t\t\t\t\ttext={\"This route contains unsaved changes. Leaving the editor without saving will undo your changes.\"}\n\t\t\t\t\t\t\tclassName={\"fas fa-exclamation-circle\"}\n\t\t\t\t\t\t\tcolor={theme.main.warn}\n\t\t\t\t\t\t\tContainerComponent={ErrorTooltipContainerComponent}\n\t\t\t\t\t\t/>\n\t\t\t\t} */}\n\n\t\t\t\t<styled.ListItemIcon\n\t\t\t\t\tclassName='fas fa-edit'\n\t\t\t\t\tonClick={onEditClick}\n\t\t\t\t\tstyle={{ color: '#c6ccd3' }}\n\t\t\t\t/>\n\t\t\t</styled.ListItemIconContainer>\n\t\t</styled.ListItem>\n\t\t</Container>\n\t);\n};\n\n/* *\n*\n* Returns style for input component\n* Accepts hasError prop, which can be used to change styling based on presence of errors\n*\n* */\nconst defaultInputStyleFunc = (hasError) => {\n\treturn {\n\t}\n}\n\n// Specifies propTypes\nListItemField.propTypes = {\n};\n\n// Specifies the default values for props:\nListItemField.defaultProps = {\n\tContainer: styled.DefaultContainer,\n\tErrorTooltipContainerComponent: styled.DefaultErrorTooltipContainerComponent,\n\tonMouseEnter: () => {},\n\tonMouseLeave: () => {},\n\tonIconClick: () => {},\n\tonEditClick: () => {},\n};\n\nexport default ListItemField;\n","import styled from 'styled-components'\nimport {Form} from \"formik\";\n\nimport * as stylec from '../../content_list/content_list.style'\n\nexport const ListItemTitle = styled(stylec.ListItemTitle)`\n`\n\nexport const ListItemIcon = styled(stylec.ListItemIcon)`\n`\n\nexport const ListItemRect = styled(stylec.ListItemRect)`\n`\n\nexport const ListItem = styled(stylec.ListItem)`\n`\n\nexport const Container = styled(stylec.Container)`\n\toverflowY: hidden;\n`\n\nexport const ListItemIconContainer = styled(stylec.ListItemIconContainer)`\n\n`\n\nexport const ColumnContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\twidth: 100%;\n`\n\nexport const ContentContainer = styled.div`\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n    flex-grow: 1;\n    padding-top: 1.5rem;\n\t\tjustify-content: space-between;\n\n`\n\nexport const Title = styled.h1`\n    font-family: ${props => props.theme.font.primary};\n    font-size: 1.2rem;\n    font-weight: 500;\n    color: ${props => props.theme.bg.senary};\n    user-select: none;\n`\n\nexport const HelpText = styled.h3`\n    font-size: ${props => props.theme.fontSize.sz4};\n    font-family: ${props => props.theme.font.primary};\n    color: ${props => props.theme.bg.quinary};\n    text-align: center;\n`\n\nexport const ErrorText = styled.h3`\n    font-size: ${props => props.theme.fontSize.sz4};\n    font-family: ${props => props.theme.font.primary};\n    color: ${props => props.theme.bad};\n    text-align: center;\n`\n\nexport const InfoText = styled.span`\n  font-family: ${props => props.theme.font.primary};\n  font-size: ${props => props.theme.fontSize.sz3};\n  color: ${props => props.theme.bg.octonary};\n`\n\nexport const SectionContainer = styled.div`\n\tmargin-bottom: 1rem;\n\tmargin-top: 0.5rem;\n\twidth: 100%;\n\n  position: relative;\n\tdisplay: flex;\n  flex-direction: column;\n  flex-grow: 1;\n\n  align-content: flex-end;\n  align-items: stretch;\n  justify-content: center;\n\n\toverflow-y: auto;\n\toverflow-x: hidden;\n\n  // box-shadow: ${props => props.theme.cardShadow};\n  background: ${props => props.theme.bg.secondary};\n  border-radius: 0.4rem;\n`\nexport const AddRoutesContainer = styled.div`\n\tmargin-bottom: 1rem;\n\tmargin-top: 0.5rem;\n\twidth: 100%;\n\n\tdisplay: flex;\n  flex-direction: column;\n\n`\n\nexport const TaskContainer = styled.div`\n    background-color: ${props => props.theme.bg.secondary};\n    border-radius: 0.4rem;\n    overflow: auto;\n    // box-shadow: 0px 0px 6px 1px rgba(0,0,0,0.1);\n    scrollbar-color: light;\n    scrollbar-width: thin;\n`\n\nexport const SVGText = styled.text`\n  font-family: ${props => props.theme.font.primary};\n  font-size: 1rem;\n  width: 4rem;\n  font-weight: 500;\n  transform-origin: center;\n`\n\nexport const BackIcon = styled.i`\n    font-size: 1.3rem;\n    color: ${props => props.theme.bg.primary};\n\n    &:hover {\n        cursor: pointer;\n    }\n\n`\n\nexport const DualSelectionButton = styled.button`\n    font-size: 1rem;\n    width: 100%;\n    border: none;\n    font-family: ${props => props.theme.font.primary};\n\n    color: ${props => props.selected ? props.theme.bg.octonary : props.theme.bg.quinary};\n\n    background-color: ${props => props.selected ? props.theme.schema.processes.solid : props.theme.bg.tertiary};\n\n    transition: background-color 0.25s ease, box-shadow 0.1s ease;\n\n    &:focus{\n        outline: 0 !important\n    }\n\n    &:active{\n        box-shadow: none;\n    }\n\n    &:hover{\n        //background-color: ${props => props.theme.bg.quaternary};\n    }\n`\nexport const RowContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: center;\n`\n","import React, { useState, useEffect, useRef, useMemo, useContext } from 'react'\n\n// external functions\nimport uuid from 'uuid'\nimport { useSelector, useDispatch } from 'react-redux'\n\n// internal components\nimport Textbox from '../../../../basic/textbox/textbox.js'\nimport Button from '../../../../basic/button/button'\nimport TaskField from '../../tasks/task_field/route_field'\nimport ContentHeader from '../../content_header/content_header'\nimport ConfirmDeleteModal from '../../../../basic/modals/confirm_delete_modal/confirm_delete_modal'\nimport TextField from \"../../../../basic/form/text_field/text_field\";\nimport ListItemField from \"../../../../basic/form/list_item_field/list_item_field\";\n\n// Import actions\nimport {\n    deleteTask,\n    setSelectedTask,\n    setSelectedHoveringTask,\n    setTaskAttributes,\n} from '../../../../../redux/actions/tasks_actions'\nimport { setProcessAttributes } from '../../../../../redux/actions/processes_actions'\n\n// Import Utils\nimport { findProcessStartNodes } from \"../../../../../methods/utils/processes_utils\";\nimport { isEmpty } from \"../../../../../methods/utils/object_utils\";\nimport useChange from \"../../../../basic/form/useChange\";\n\n// styles\nimport * as styled from './process_field.style'\nimport {ThemeContext} from \"styled-components\";\nexport const ProcessField = (props) => {\n    const {\n        formikProps,\n        onDelete,\n        onSave,\n        onBack,\n    } = props\n\n    // extract formik props\n    const {\n        errors,\n        values,\n        touched,\n        isSubmitting,\n        setFieldValue,\n        setFieldError,\n        setFieldTouched,\n        getFieldMeta,\n        validateForm\n    } = formikProps\n\n    const themeContext = useContext(ThemeContext)\n\n    useChange() // adds changed key to values - true if the field has changed\n    let errorCount = 0\n    Object.values(errors).forEach((currError) => {\n        if (!isEmpty(currError)) errorCount++\n    }) // get number of field errors\n    const touchedCount = Object.values(touched).length // number of touched fields\n    const submitDisabled = ((errorCount > 0)|| isSubmitting || !values.changed) //&& (submitCount > 0) // disable if there are errors or no touched field, and form has been submitted at least once\n    const dispatch = useDispatch()\n    const dispatchSetSelectedTask = async (task) => await dispatch(setSelectedTask(task))\n    const dispatchSetTaskAttributes = async (id, attr) => await dispatch(setTaskAttributes(id, attr));\n    const dispatchSetSelectedHoveringTask = (task) => dispatch(setSelectedHoveringTask(task))\n\n    const dispatchDeleteRoute = async (routeId) => await dispatch(deleteTask(routeId))\n\n    const dispatchSetProcessAttributes = async (id, attr) => await dispatch(setProcessAttributes(id, attr))\n\n    const { tasks, selectedTask } = useSelector(state => state.tasksReducer)\n    const stations = useSelector(state => state.stationsReducer.stations)\n    const routes = useSelector(state => state.tasksReducer.tasks)\n    const selectedProcess = useSelector(state => state.processesReducer.selectedProcess)\n    const pageInfoChanged = useSelector(state => state.sidebarReducer.pageDataChanged)\n\n    const startNodes = useMemo(() => findProcessStartNodes(values.routes, stations), [values.routes])\n    useEffect(() => {\n        if (startNodes.length > 1 && !values.startDivergeType) {\n            setFieldValue('startDivergeType', 'split')\n        }\n    }, [startNodes])\n\n\n    // State definitions\n    const [confirmDeleteModal, setConfirmDeleteModal] = useState(false);\n    const [confirmExitModal, setConfirmExitModal] = useState(false);\n    const [routeCopy, setRouteCopy] = useState(null);\n    // Handles a new route being drawn on the map\n    useEffect(() => {\n        if (selectedTask == null) {return}\n        const formikSelectedTask = values.routes.find(route => route._id === selectedTask._id);\n        if (!!selectedTask.unload && formikSelectedTask === undefined) {\n            let processRoutesCopy = values.routes;\n\n            const selectedTaskCopy = selectedTask\n\n            processRoutesCopy.push(selectedTaskCopy);\n            setFieldValue('routes', processRoutesCopy)\n            dispatchSetProcessAttributes(selectedTask._id, {...selectedTaskCopy})\n        }\n    }, [selectedTask])\n\n\n    // Maps through the list of existing routes\n    const renderRoutes = (routes) => {\n        return routes.map((currRoute, currIndex) => {\n\n            const {\n                _id: currRouteId = \"\",\n            } = currRoute || {}\n\n            const fieldName = `routes[${currIndex}]`\n\n            return (\n                <ListItemField\n                    containerStyle={{ margin: '0.5rem' }}\n                    name={fieldName}\n                    onMouseEnter={() => {\n                        dispatchSetSelectedHoveringTask(currRoute)\n                    }}\n                    onMouseLeave={() => {\n                        dispatchSetSelectedHoveringTask(null)\n                    }}\n                    onEditClick={() => {\n                        setRouteCopy(currRoute)\n                        dispatchSetSelectedTask(currRoute)\n                        dispatchSetSelectedHoveringTask(null)\n                    }}\n                    key={`li-${currIndex}`}\n                />\n            )\n        })\n    }\n\n\n    return (\n        <>\n\n            <ConfirmDeleteModal\n                isOpen={!!confirmExitModal}\n                title={\"Are you sure you want to go back? Any progress will not be saved\"}\n                button_1_text={\"Yes\"}\n                button_2_text={\"No\"}\n                handleClose={() => setConfirmExitModal(null)}\n                handleOnClick1={() => {\n                    onBack()\n                }}\n                handleOnClick2={() => {\n                    setConfirmExitModal(null)\n                }}\n            />\n\n            <ConfirmDeleteModal\n                isOpen={!!confirmDeleteModal}\n                title={\"WARNING! All lots currently in this process will be permanently deleted. Are you sure you want to delete this process?\"}\n                button_1_text={\"Yes\"}\n                button_2_text={\"No\"}\n                handleClose={() => setConfirmDeleteModal(null)}\n                handleOnClick1={() => {\n                    onDelete(true)\n                    setConfirmDeleteModal(null)\n                }}\n                handleOnClick2={() => {\n                    setConfirmDeleteModal(null)\n                }}\n            />\n\n            <styled.Container>\n\n                <div style={{ marginBottom: '1rem' }}>\n\n                    <ContentHeader\n                        content={'processes'}\n                        mode={'create'}\n                        disabled={!!selectedTask || submitDisabled}\n                        onClickSave={() => {\n                            onSave(values, true)\n                        }}\n\n                        onClickBack={() => {\n                            pageInfoChanged ? setConfirmExitModal(true) : onBack()\n                        }}\n\n                    />\n                </div>\n\n                <div >\n                    <styled.Title schema={'default'}>Process Name</styled.Title>\n                    <TextField\n                        focus={!values.name}\n                        placeholder='Process Name'\n                        defaultValue={values.name}\n                        schema={'processes'}\n                        name={`name`}\n                        InputComponent={Textbox}\n                        style={{ fontSize: '1.2rem', fontWeight: '100' }}\n                        textboxContainerStyle={{ border: \"none\" }}\n                    />\n                </div>\n                {!selectedTask && startNodes.length>1 &&\n                    <div style={{marginTop: '2.5rem'}}>\n                        <styled.Title style={{ alignSelf: 'center' }}>Kickoff Diverging Type</styled.Title>\n                        <styled.RowContainer style={{ justifyContent: 'space-between', borderBottom: \"solid #b8b9bf 0.1rem\", paddingBottom: \"0.5rem\", marginBottom: \".7rem\" }}>\n\n                            <styled.DualSelectionButton\n                                style={{ borderRadius: '.5rem 0rem 0rem .5rem' }}\n                                onClick={() => {\n                                    setFieldValue(\"startDivergeType\", 'split')\n                                }}\n                                selected={values.startDivergeType === 'split'}\n                            >\n                                Split\n                            </styled.DualSelectionButton>\n\n                            <styled.DualSelectionButton\n                                style={{ borderRadius: '0rem .5rem .5rem 0rem' }}\n                                onClick={() => {\n                                    setFieldValue(\"startDivergeType\", 'choice')\n                                }}\n                                selected={values.startDivergeType === 'choice'}\n\n                            >\n                                Choice\n                            </styled.DualSelectionButton>\n\n                        </styled.RowContainer>\n                    </div>\n                }\n\n                <styled.Title schema={'processes'} style={{ marginTop: \"2rem\", marginBottom: \"1rem\" }}>Routes</styled.Title>\n                {selectedTask === null &&\n                    <>\n                        <styled.HelpText>Click a station on the map to start a route</styled.HelpText>\n                        {typeof errors.routes === 'string' &&\n                            <styled.ErrorText>{errors.routes}</styled.ErrorText>\n                        }\n                    </>\n                }\n\n                {!!selectedTask && values.routes.find(route => route._id === selectedTask._id) !== undefined ?\n                    <TaskField\n                        {...formikProps}\n                        routeCopy = {routeCopy}\n                    />\n                    :\n                    <>\n                      {renderRoutes(values.routes)}\n                      <styled.ContentContainer>\n\n                          {/* Save/Delete Buttons */}\n                          <styled.ColumnContainer>\n                              <Button\n                                  schema={'processes'}\n                                  disabled={!!selectedTask ||!!submitDisabled}\n                                  onClick={() => {\n                                      onSave(values, true)\n                                  }}\n                              >\n                                  Save Process\n                              </Button>\n\n                              <Button\n                                  schema={'error'}\n                                  disabled={!!selectedProcess && !!selectedProcess._id && !!selectedProcess.new}\n                                  secondary\n                                  onClick={() => {\n                                      setConfirmDeleteModal(true)\n                                  }}\n                              >\n                                  Delete Process\n                              </Button>\n                          </styled.ColumnContainer>\n                      </styled.ContentContainer>\n                    </>\n                }\n\n            </styled.Container>\n        </>\n\n    )\n}\n\nexport default ProcessField\n","import React, {useEffect, useRef, useState} from 'react'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {Formik} from \"formik\";\nimport {getProcessSchema} from \"../../../../../methods/utils/form_schemas\";\nimport {ProcessField} from \"../process_field/process_field\";\nimport uuid from 'uuid'\nimport {\n\tdeleteRouteClean,\n\tdeleteTask,\n\tpostTask,\n\tputTask,\n\tsaveFormRoute,\n\tsetSelectedTask\n} from \"../../../../../redux/actions/tasks_actions\";\nimport {\n\tdeleteProcess, deleteProcessClean,\n\tpostProcesses,\n\tputProcesses,\n\tsetSelectedProcess,\n\tsetProcessAttributes,\n\tsetEditingValues\n} from \"../../../../../redux/actions/processes_actions\";\nimport * as taskActions from \"../../../../../redux/actions/tasks_actions\";\nimport {isObject} from \"../../../../../methods/utils/object_utils\";\nimport {isArray} from \"../../../../../methods/utils/array_utils\";\nimport { pageDataChanged } from \"../../../../../redux/actions/sidebar_actions\"\nimport { flattenProcessStations } from '../../../../../methods/utils/processes_utils';\nimport { BASIC_LOT_TEMPLATE } from '../../../../../constants/lot_contants';\nimport { deleteLotTemplate, postLotTemplate } from '../../../../../redux/actions/lot_template_actions';\n\nconst ProcessForm = (props) => {\n\n\tconst {\n\t\ttoggleEditingProcess,\n\t} = props\n\n\tconst formRef = useRef(null)\t// gets access to form state\n\n\tconst {\n\t\t\tcurrent\n\t} = formRef || {}\n\n\tconst {\n\t\t\tvalues = {},\n\t\t\tinitialValues = {}\n\t} = current || {}\n\n\tconst dispatch = useDispatch()\n\tconst dispatchSetSelectedTask = (task) => dispatch(setSelectedTask(task))\n\tconst dispatchPostProcess = async (process) => await dispatch(postProcesses(process))\n\n\tconst dispatchPutProcess = async (process) => await dispatch(putProcesses(process))\n\tconst dispatchDeleteLotTemplate = async (ID) => await dispatch(deleteLotTemplate(ID))\n\tconst dispatchPostRoute = async (route) => await dispatch(postTask(route))\n    const dispatchPutRoute = async (route) => await dispatch(putTask(route, route._id))\n\n\tconst dispatchSetSelectedProcess = (process) => dispatch(setSelectedProcess(process))\n\tconst dispatchSetProcessAttributes = async (id, attr) => await dispatch(setProcessAttributes(id, attr))\n\tconst dispatchPostLotTemplate = (lotTemplate) => dispatch(postLotTemplate(lotTemplate))\n\tconst dispatchDeleteProcessClean = async (ID) => await dispatch(deleteProcessClean(ID))\n\tconst dispatchDeleteRouteClean = (routeId) => dispatch(deleteRouteClean(routeId))\n\tconst dispatchSaveFormRoute = async (formRoute) => await dispatch(saveFormRoute(formRoute))\n\tconst dispatchPageDataChanged = (bool) => dispatch(pageDataChanged(bool))\n\tconst dispatchSetEditingValues = (process) => dispatch(setEditingValues(process))\n\tconst dispatchDeleteTask = (id) => dispatch(deleteTask(id))\n\n\tconst tasks = useSelector(state => state.tasksReducer.tasks)\n\tconst selectedProcess = useSelector(state => state.processesReducer.selectedProcess)\n\tconst currentMapId = useSelector(state => state.localReducer.localSettings.currentMapId)\n\tconst stations = useSelector(state => state.stationsReducer.stations);\n\tconst lotTemplates = useSelector(state => state.lotTemplatesReducer.lotTemplates)\n\tconst [processCopy, setProcessCopy] = useState(selectedProcess)\t// Initial process, used when changes are not to be saved (onBack)\n\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t\tdispatchSetSelectedTask(null)\n\t\t\tdispatchSetSelectedProcess(null)\n\t\t\tdispatchSetEditingValues(null)\n\t\t}\n\t}, []);\n\n\tuseEffect(() => {\n\t\tvar {\n\t\t\t...remainingInitialValues\n\t\t} = initialValues\n\n\t\tvar {\n\t\t\tchanged,\n\t\t\t...remainingValues\n\t\t} = values\n\n\t\tif(JSON.stringify(remainingInitialValues)!==JSON.stringify(remainingValues)){\n\t\t\tdispatchPageDataChanged(true)\n\t\t}\n\n\t\treturn () => {\n\t\t\tdispatchPageDataChanged(false)\n\t\t}\n\n\t}, [values])\n\n\tconst handleDeleteRemovedRoutes = (processRoutes) => {\n\n\t\tObject.values(tasks).forEach((task) => {\n\t\t\tconst found = !!processRoutes.find((route) => route === task._id)\n\t\t\tif(!found && task.processId===selectedProcess._id) dispatchDeleteTask(task._id)\n\t\t})\n\t}\n\n\tconst handleSave = async (values, close) => {\n\t\t// extract some values\n\t\tconst {\n\t\t\tchanged,\n\t\t\t...remainingValues\n\t\t} = values\n\n\t\t// // perform any updates for routes\n\t\t// for (const currRoute of remainingValues.routes) {\n\t\t// \tawait dispatchSaveFormRoute(currRoute)\n\t\t// \tcleanRoute(currRoute)\n\t\t// }\n\n\t\tfor (var savingRoute of remainingValues.routes) {\n\t\t\tif (savingRoute.isNew) {\n\t\t\t\tdispatchPostRoute(savingRoute);\n\t\t\t} else {\n\t\t\t\tdispatchPutRoute(savingRoute);\n\t\t\t}\n\t\t}\n\n\t\tdispatchSetSelectedTask(null) // clear selected task\n\t\tconst mappedRoutes = remainingValues.routes.map((currRoute) => currRoute._id)\n\n\t\tconst currDate = new Date();\n\n\t\t// if new, POST\n\t\tif (remainingValues.new) {\n\t\t\tdelete remainingValues.new\n\t\t\tconst postedProcess = await dispatchPostProcess({\n\t\t\t\t...remainingValues,\n\t\t\t\troutes: mappedRoutes,\n\t\t\t\tmap_id: currentMapId,\n\t\t\t\tcreated_at: currDate.getTime(),\n\t\t\t\tedited_at: currDate.getTime(),\n\t\t\t\tflattened_stations: flattenProcessStations(remainingValues.routes, stations)\n\t\t\t})\n\n\t\t\tdispatchPostLotTemplate({...BASIC_LOT_TEMPLATE, processId: postedProcess._id})\n\t\t}\n\n\t\t// Else put\n\t\telse {\n\t\t\tawait dispatchPutProcess({\n\t\t\t\t...remainingValues,\n\t\t\t\troutes: mappedRoutes,\n\t\t\t\tmap_id: currentMapId,\n\t\t\t\tedited_at: currDate.getTime(),\n\t\t\t\tflattened_stations: flattenProcessStations(remainingValues.routes, stations)\n\t\t\t})\n\t\t}\n\n\t\t// close editor\n\t\tif(close) {\n\t\t\tdispatchSetSelectedProcess(null)\n\t\t\ttoggleEditingProcess(false)\n\t\t}\n\t\thandleDeleteRemovedRoutes(mappedRoutes)\n\t}\n\n\t// remove keys from route that shouldn't be saved\n\tconst cleanRoute = (route) => {\n\t\tdelete route.new\n\t\tdelete route.changed\n\t\tdelete route.needsSubmit\n\t\tdelete route.unsaved\n\t}\n\n\tconst handleBack = async () => {\n\t\t// clear selectedTask, selectedProcess, and set toggleEditing to false\n\t\tawait dispatchSetSelectedTask(null)\n\t\tawait dispatchSetProcessAttributes(selectedProcess._id, processCopy)\n\t\tdispatchSetSelectedProcess(null)\n\t\ttoggleEditingProcess(false)\n\t}\n\n\n\n\tconst handleDelete = (withRoutes) => {\n\t\tif(withRoutes) {\n\t\t\thandleDeleteWithRoutes()\n\t\t}\n\n\t\telse {\n\t\t\thandleDeleteWithoutRoutes()\n\t\t}\n\t}\n\tconst handleDeleteWithRoutes = async () => {\n\n\t\t// If there's routes in this process, delete the routes\n\t\tif (selectedProcess.routes.length > 0) {\n\t\t\tselectedProcess.routes.forEach(route => {\n\t\t\t\tif(isObject(route)) {\n\t\t\t\t\tdispatchDeleteRouteClean(route._id)\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdispatchDeleteRouteClean(route)\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tObject.values(lotTemplates)\n\t\t\t.filter(lotTemplate => lotTemplate.processId === selectedProcess._id)\n\t\t\t.forEach(lotTemplate => dispatchDeleteLotTemplate(lotTemplate._id))\n\n\t\tawait dispatchDeleteProcessClean(selectedProcess._id)\n\n\t\tdispatchSetSelectedTask(null)\n\t\tdispatchSetSelectedProcess(null)\n\t\ttoggleEditingProcess(false)\n\t}\n\n\tconst handleDeleteWithoutRoutes = async () => {\n\n\t\tawait dispatchDeleteProcessClean(selectedProcess._id)\n\n\t\tdispatchSetSelectedTask(null)\n\t\tdispatchSetSelectedProcess(null)\n\t\ttoggleEditingProcess(false)\n\t}\n\n\tconst handleInitialRoutes = () => {\n\t\t// If process already has routes\n\t\tif(selectedProcess && selectedProcess.routes && Array.isArray(selectedProcess.routes)) {\n\t\t\treturn selectedProcess.routes.map(routeId => tasks[routeId]);\n\t\t}\n\n\t\t// otherwise initialize to empty array\n\t\treturn [];\n\n\t}\n\n\n\treturn (\n\t\t<Formik\n\t\t\tinitialValues={{\n\t\t\t\tname: selectedProcess ? selectedProcess.name : \"\",\n\t\t\t\troutes: handleInitialRoutes(),\n\t\t\t\t_id: selectedProcess ? selectedProcess._id : uuid.v4(),\n\t\t\t\tbroken: selectedProcess ? selectedProcess.broken : false,\n\t\t\t\tnew: selectedProcess.new,\n\t\t\t\tmap_id: currentMapId,\n\t\t\t\tstartDivergeType: selectedProcess.new ? null: selectedProcess.startDivergeType,\n\t\t\t\tshowStatistics: selectedProcess.new ? true: selectedProcess.showStatistics,\n\t\t\t\tshowQueue: selectedProcess.new || selectedProcess.showQueue === undefined ? true: selectedProcess.showQueue,\n\t\t\t\tshowFinish: selectedProcess.new || selectedProcess.showFinish === undefined ? true: selectedProcess.showFinish,\n\t\t\t}}\n\n\t\t\t// validation control\n\t\t\tvalidationSchema={getProcessSchema(stations)}\n\t\t\tinnerRef = {formRef}\n\t\t\tvalidateOnChange={true}\n\t\t\tvalidateOnMount={false} // leave false, if set to true it will generate a form error when new data is fetched\n\t\t\tvalidateOnBlur={true}\n\n\t\t\t// enableReinitialize={true} // leave false, otherwise values will be reset when new data is fetched for editing an existing item\n\t\t\tonSubmit={async (values, formikHelpers) => {\n\n\t\t\t\tconst {\n\t\t\t\t\tsetSubmitting,\n\t\t\t\t\tsetTouched,\n\t\t\t\t\tresetForm\n\t\t\t\t} = formikHelpers\n\n\t\t\t\t// set submitting to true, handle submit, then set submitting to false\n\t\t\t\t// the submitting property is useful for eg. displaying a loading indicator\n\t\t\t\tconst {\n\t\t\t\t\tbuttonType\n\t\t\t\t} = values\n\n\t\t\t\tsetSubmitting(true)\n\t\t\t\t// await handleSubmit(values, formMode)\n\t\t\t\tsetTouched({}) // after submitting, set touched to empty to reflect that there are currently no new changes to save\n\t\t\t\tsetSubmitting(false)\n\n\t\t\t}}\n\t\t>\n\t\t\t{formikProps => {\n\t\t\t\tconst {\n\t\t\t\t\tsetSubmitting,\n\t\t\t\t\tsubmitForm,\n\t\t\t\t\tsetTouched,\n\t\t\t\t\tresetForm,\n\t\t\t\t\tsetFieldValue,\n\t\t\t\t\ttouched,\n\t\t\t\t\tvalues,\n\t\t\t\t\tinitialValues,\n\t\t\t\t} = formikProps\n\n\t\t\t\treturn(\n\t\t\t\t\t<ProcessField\n\t\t\t\t\t\tonSave={async (values, close) => {\n\t\t\t\t\t\t\tsetSubmitting(true)\n\t\t\t\t\t\t\tawait handleSave(values, close)\n\t\t\t\t\t\t\tsetTouched({}) // after submitting, set touched to empty to reflect that there are currently no new changes to save\n\t\t\t\t\t\t\tsetSubmitting(false)\n\n\t\t\t\t\t\t\t// reset changed to false\n\t\t\t\t\t\t\tsetFieldValue(\"changed\", false)\n\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonBack={handleBack}\n\t\t\t\t\t\tonDelete={handleDelete}\n\t\t\t\t\t\tformikProps={formikProps}\n\t\t\t\t\t\ttoggleEditingProcess={toggleEditingProcess}\n\t\t\t\t\t/>\n\t\t\t\t)\n\t\t\t}}\n\t\t</Formik>\n\t)\n}\n\nexport default ProcessForm\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory } from \"react-router-dom\";\n\nimport ContentList from '../content_list/content_list'\n\n// Import actions\nimport { setSelectedProcess, editingProcess, putProcesses } from '../../../../redux/actions/processes_actions'\n\n// Import Utils\nimport { isBrokenProcess } from '../../../../methods/utils/processes_utils'\n\nimport uuid from 'uuid'\nimport ProcessForm from \"./process_form/process_form\";\n\nconst ProcessesContent = () => {\n\n    const history = useHistory()\n\n    const dispatch = useDispatch()\n    const dispatchSetSelectedProcess = (process) => dispatch(setSelectedProcess(process))\n    const dispatchEditing = (props) => dispatch(editingProcess(props))\n    const dispatchPutProcess = (process) => dispatch(putProcesses(process))\n\n    let tasks = useSelector(state => state.tasksReducer.tasks)\n    let selectedTask = useSelector(state => state.tasksReducer.selectedTask)\n    const selectedProcess = useSelector(state => state.processesReducer.selectedProcess)\n    const processes = useSelector(state => state.processesReducer.processes)\n    const editing = useSelector(state => state.processesReducer.editingProcess)\n    const currentMapId = useSelector(state => state.localReducer.localSettings.currentMapId)\n    // State definitions\n    const [shift, setShift] = useState(false) // Is shift key pressed ?\n    const [isTransportTask, setIsTransportTask] = useState(true)\n\n\n    useEffect(() => {\n\n        return () => {\n            dispatchSetSelectedProcess(null)\n        }\n    }, [])\n    \n    useEffect(() => {\n        // Maps through all process and sees if they're broken\n        Object.values(processes).map((process) => {\n            const processRoutes = process.routes.map((currRoute) => tasks[currRoute]) || {}\n\n            // If it was previously broken, but not anymore, then correct that ish\n            if (!!process.broken && !isBrokenProcess(processRoutes, tasks)) {\n                process.broken = null\n                dispatchPutProcess(process)\n            }\n\n            // Else if the process is broken, so fix that ish\n            else if (!!isBrokenProcess(processRoutes, tasks) && process.broken === null) {\n                process.broken = isBrokenProcess(processRoutes, tasks)\n                dispatchPutProcess(process)\n            }\n        })\n        return () => {\n        }\n    }, [processes])\n\n\n    const onCardView = (element) => {\n        const currentPath = history.location.pathname\n        history.push(currentPath + '/' + element._id + \"/lots\")\n    }\n\n    if (editing && selectedProcess !== null) { // Editing Mode\n        return (\n            <ProcessForm\n                toggleEditingProcess={props => dispatchEditing(props)}\n            />\n        )\n    } else {    // List Mode\n        return (\n            <ContentList\n                title={'Processes'}\n                schema={'processes'}\n                // elements={Object.values(tasks)}\n                elements={\n                    Object.values(processes)\n                }\n                onMouseEnter={(process) => dispatchSetSelectedProcess(process)}\n                onMouseLeave={() => dispatchSetSelectedProcess(null)}\n                handleCardView={(element) => onCardView(element)}\n                onClick={(process) => {\n                    // If task button is clicked, start editing it\n                    dispatchSetSelectedProcess(process)\n                    dispatchEditing(true)\n                }}\n                onPlus={() => {\n                    const newProcess = {\n                        name: '',\n                        _id: uuid.v4(),\n                        new: true,\n                        routes: [],\n                        broken: null,\n                    }\n                    // TODO: May have to do this with processes\n                    // dispatch(taskActions.addTask(newTask))\n                    dispatchSetSelectedProcess(newProcess)\n                    dispatchEditing(true)\n                }}\n            />\n        )\n    }\n}\n\nexport default ProcessesContent\n","import React from 'react'\nimport uuid from 'uuid'\n\nconst positionColor = '#2adba6';\n\nexport const PositionTypes = {\n\n    /**\n     * Heads up, currently there are 2 different svg rectangles being used\n     * One thats width is 200 and height is 320\n     * One thats width is 378 and height 236\n     *\n     * Need to unify this and make all of them standard\n     * Probably use the 200 by 320 since you don't need to add a 'y' offset to the svg\n     *\n     *  */\n\n    shelf_position: {\n        svgPath:\n            <svg>\n                <rect fill='transparent' x=\"100\" y=\"40\" width=\"200\" height=\"320\" rx=\"30\" transform=\"translate(400 0) rotate(90)\" strokeMiterlimit=\"10\" strokeWidth=\"20\" />\n                <g y=\"65\" transform=\"scale(0.87) translate(35, 100)\">\n                    <path d=\"M263.53,56.31l33,47a10,10,0,0,1-8.18,15.74h-66a10,10,0,0,1-8.19-15.74l33-47A10,10,0,0,1,263.53,56.31Z\" />\n                    <path d=\"M142.71,56.31l33,47a10,10,0,0,1-8.19,15.74h-66a10,10,0,0,1-8.18-15.74l33-47A10,10,0,0,1,142.71,56.31Z\" />\n                \n                    <circle cx=\"255.44\" cy=\"146.56\" r=\"12.5\" />\n                    <circle cx=\"255.44\" cy=\"181.56\" r=\"7.5\" />\n                    <circle cx=\"134.44\" cy=\"146.56\" r=\"12.5\" />\n                    <circle cx=\"134.44\" cy=\"181.56\" r=\"7.5\" />\n                </g>\n            </svg>,\n        attributes:\n        {\n            schema: 'position',\n            type: 'shelf_position',\n            parent: null,\n            new: true,\n        },\n        color: positionColor,\n\n    },\n\n    charger_position: {\n        svgPath:\n            <svg>\n                <path d=\"M344.75,131.18l-47,33A10,10,0,0,1,282,156V90a10,10,0,0,1,15.75-8.18l47,33A10,10,0,0,1,344.75,131.18Z\" />\n                <rect fill='none' strokeMiterlimit='10' strokeWidth='20px' x=\"5\" y=\"5\" width=\"378\" height=\"236\" rx=\"30\" />\n                <path d=\"M251,171.13c-2.45,3.47-4.09,3.9-8.1,2.12l-73.27-32.63c-.72-.32-1.45-.61-2.47-1v3.15q0,12.9,0,25.81c0,4.89-3,6.91-7.46,5L31.14,118.34c-2.83-1.22-4.08-3.12-3.65-5.47s2.19-3.61,5.09-3.91q29.51-3,59-6c9-.91,17.93-1.86,26.91-2.63,1.81-.15,2.1-.82,2.06-2.38-.09-3.65,0-7.29,0-10.94,0-4.26,1.43-5.77,5.64-6.1q32.61-2.53,65.23-5.1c17.69-1.36,35.38-2.65,53.06-4.08,2.93-.23,5.1.52,6.54,3.12Z\" />\n                <rect fill='transparent' strokeMiterlimit='10' strokeWidth='20px' x=\"10\" y=\"10\" width=\"378\" height=\"236\" rx=\"30\" />\n            </svg>,\n        color: '#fbd34e',\n\n    },\n\n    cart_position: {\n        svgPath:\n            <>\n                <rect fill='transparent' x=\"100\" y=\"40\" width=\"200\" height=\"320\" rx=\"30\" transform=\"translate(400 0) rotate(90)\" strokeMiterlimit=\"10\" strokeWidth=\"20\" />\n                <path d=\"M315.5,200.87l-64,36.95A1,1,0,0,1,250,237v-73.9a1,1,0,0,1,1.5-.87l64,36.95A1,1,0,0,1,315.5,200.87Z\" strokeMiterlimit=\"10\" strokeWidth=\"10\" />\n                <circle cx=\"200\" cy=\"200\" r=\"15\" />\n                <circle cx=\"150\" cy=\"200\" r=\"10\" />\n                <circle cx=\"102.5\" cy=\"200\" r=\"7.5\" />\n            </>,\n        attributes:\n        {\n            schema: 'position',\n            type: 'cart_position',\n            parent: null,\n            new: true,\n        },\n        color: positionColor,\n    },\n\n    temporary_cart_position: {\n        svgPath:\n            <>\n                <rect fill='transparent' x=\"100\" y=\"40\" width=\"200\" height=\"320\" rx=\"30\" transform=\"translate(400 0) rotate(90)\" strokeMiterlimit=\"10\" strokeWidth=\"20\" />\n                <path d=\"M315.5,200.87l-64,36.95A1,1,0,0,1,250,237v-73.9a1,1,0,0,1,1.5-.87l64,36.95A1,1,0,0,1,315.5,200.87Z\" strokeMiterlimit=\"10\" strokeWidth=\"10\" />\n                <circle cx=\"200\" cy=\"200\" r=\"15\" />\n                <circle cx=\"150\" cy=\"200\" r=\"10\" />\n                <circle cx=\"102.5\" cy=\"200\" r=\"7.5\" />\n            </>,\n        attributes:\n        {\n            schema: 'temporary_position',\n            type: 'cart_position',\n            parent: null,\n            new: true,\n        },\n        color: '#6283f0',\n    },\n\n    // human_position: {\n    //     svgPath:\n    //         // <svg y=\"70\">\n    //         //     <rect fill='transparent' strokeMiterlimit='10' strokeWidth='20px' x=\"10\" y=\"10\" width=\"378\" height=\"236\" rx=\"30\" />\n    //         //     <path d=\"M194,123a49.63,49.63,0,1,0-49.62-49.63A49.62,49.62,0,0,0,194,123Zm34.74,12.41h-6.48a67.51,67.51,0,0,1-56.52,0h-6.48a52.12,52.12,0,0,0-52.1,52.1v16.13a18.61,18.61,0,0,0,18.61,18.61H262.23a18.61,18.61,0,0,0,18.61-18.61V187.51A52.12,52.12,0,0,0,228.74,135.41Z\" />\n    //         // </svg>,\n    //         <svg y=\"50\" x='50'>\n    //             <rect width=\"300\" height=\"300\" rx=\"30\" />\n    //             <path fill='#3B3C43' d=\"M150,150A56.07,56.07,0,1,0,93.94,93.94,56.05,56.05,0,0,0,150,150Zm39.24,14h-7.31a76.32,76.32,0,0,1-63.86,0h-7.31a58.88,58.88,0,0,0-58.87,58.86V241.1a21,21,0,0,0,21,21H227.09a21,21,0,0,0,21-21V222.88A58.88,58.88,0,0,0,189.24,164Z\" />\n    //         </svg>,\n    //     attributes:\n    //     {\n    //         schema: 'station',\n    //         type: 'human',\n    //         parent: null,\n    //         new: true,\n    //     },\n    //     color: '#5eec33',\n    // },\n\n}\n\nexport const newPositionTemplate = (name, type, parent, map_id) => {\n\n    return {\n        name: name,\n        schema: 'position',\n        type: type,\n        temp: true,\n        new: true,\n        pos_x: 0,\n        pos_y: 0,\n        rotation: 0,\n        x: 0,\n        y: 0,\n        parent: parent,\n        _id: uuid.v4(),\n        map_id: map_id,\n    }\n}\n","import React, { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\n// import components\nimport ErrorTooltip from \"../../../../../basic/form/error_tooltip/error_tooltip\";\n\n// Import Styles\nimport * as style from './dashboard_button.style';\nimport * as dashboard_buttons_style from '../dashboard_buttons.style';\nimport { ThemeContext } from \"styled-components\";\n\n// import logging\nimport log from '../../../../../../logger'\nimport { DEVICE_CONSTANTS } from \"../../../../../../constants/device_constants\";\n\nconst logger = log.getLogger(\"Dashboards\", \"EditDashboard\");\n\nconst DashboardButton = (props => {\n\n    const {\n        color,\n        title,\n        children,\n        onClick,\n        deviceType,\n        taskID,\n        disabled,\n        width,\n        height,\n        clickable,\n        hoverable,\n        titleStyle,\n        containerStyle,\n        containerCss,\n        error,\n        type = \"\",\n        iconColor,\n        iconClassName,\n        svgColor,\n        invert,  \n    } = props\n\n    const theme = useContext(ThemeContext);\n\n    return (\n        <style.Container\n            invert={invert}\n            type={\"button\"}\n            disabled={disabled}\n            width={width}\n            height={height}\n            background={color}\n            onClick={clickable ? () => onClick(taskID, deviceType) : null}\n            borderGlow={taskID === 'hil_success'}\n            clickable={clickable}\n            hoverable={hoverable}\n            style={containerStyle}\n            css={containerCss}\n        >\n            {/* <div style={{display: \"flex\", alignItems: \"center\", border: '1px solid red'}}> */}\n            <style.ConditionText style={titleStyle}>{title}</style.ConditionText>\n\n\n\n            {(iconColor && iconClassName) &&\n                <>\n                    <svg viewBox=\"0 0 300 67\" fill={!!svgColor ? svgColor : theme.bg.primary} height='100%' width=\"12rem\" preserveAspectRatio=\"none\">\n                        <path d=\"M300,8v51c0,4.4-3.6,8-8,8H8.8L63.5,0H292C296.4,0,300,3.6,300,8z\" />\n                    </svg>\n                    <style.IconContainer>\n                        <style.SchemaIcon style = {{position: 'absolute', left: '6rem'}} className={iconClassName} color={color ? color : iconColor}/>\n                    </style.IconContainer>\n                </>\n            }\n\n            {/* {children && children}\n                <ErrorTooltip\n                    visible={error}\n                    text={error}\n                    ContainerComponent={dashboard_buttons_style.ErrorContainerComponent}\n                /> */}\n            {/* </div> */}\n\n\n\n\n        </style.Container>\n    )\n\n})\n\n// Specifies propTypes\nDashboardButton.propTypes = {\n    clickable: PropTypes.bool,\n    hoverable: PropTypes.bool,\n    title: PropTypes.string,\n    taskID: PropTypes.string,\n    onClick: PropTypes.func,\n    disabled: PropTypes.bool,\n    invert: PropTypes.bool,\n};\n\n// Specifies the default values for props:\nDashboardButton.defaultProps = {\n    clickable: true,\n    hoverable: true,\n    title: \"\",\n    taskID: \"\",\n    onClick: () => { },\n    disabled: false,\n    invert: false,\n\n};\n\nexport default (DashboardButton)\n","import styled, {css} from \"styled-components\";\nimport {LightenDarkenColor} from \"../../../../../methods/utils/color_utils\";\n\nexport const borderGlowCss = css`\n    --border-width: .1rem;\n    background: none;\n\n    @keyframes moveGradient {\n        50% {\n          background-position: 100% 50%;\n        }\n      }\n\n    border-radius: var(--border-width);\n\n    &::after {\n    position: absolute;\n    content: \"\";\n    top: calc(-1 * var(--border-width));\n    left: calc(-1 * var(--border-width));\n    z-index: -1;\n    width: calc(100% + var(--border-width) * 2);\n    height: calc(100% + var(--border-width) * 2);\n    background: linear-gradient(\n        60deg,\n        /* hsl(224, 85%, 66%), */\n        /* hsl(269, 85%, 66%), */\n        /* hsl(314, 85%, 66%), */\n        /* hsl(359, 85%, 66%), */\n        hsl(44, 85%, 66%),\n        hsl(89, 85%, 66%),\n        hsl(134, 85%, 66%),\n        hsl(179, 85%, 66%)\n    );\n    background-size: 300% 300%;\n    background-position: 0 50%;\n    border-radius: calc(2 * var(--border-width));\n    animation: moveGradient 4s alternate infinite;\n}\n`\n\nexport const ContainerCss = css`\n  position: relative;\n  user-select: none;\n\n  // flex layout\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  overflow: hidden;\n\n  background: ${props => !props.invert && `linear-gradient(180deg, \n                            ${LightenDarkenColor(props.background, 20)} 0%, \n                            ${props.background} 60%, \n                            ${LightenDarkenColor(props.background, -15)} 100%)`};\n  border-radius: 0.6rem;\n\n  // margins\n  margin: 0 0 0.1rem 0;\n\n  // padding\n  padding: 0.5rem 1rem 0.5rem 1rem;\n\n  outline: none;\n  &:focus {\n    outline: none;\n  }\n\n  letter-spacing: 1.5px;\n  border: ${props => props.invert ? `1px solid ${props.background}` : 'none'};\n  box-shadow: ${props => props.clickable ? 'none' : `2px 2px 2px rgba(0, 0, 0, 0.5)`};\n  transition: all 0.1s ease 0s;\n  cursor: pointer;\n  outline: none;\n    \n  &:hover {\n    filter: brightness(110%);\n    ${props => props.hoverable && !props.clickable &&\n            {\n              boxShadow: \"3px 3px 3px rgba(0, 0, 0, 0.5)\",\n              transform: \"translateY(-1px)\",\n            }\n    }\n  }\n\n  ${props => props.clickable && !props.disabled && !props.invert && \n          `&:active {\n      background: ${`linear-gradient(180deg, \n          ${LightenDarkenColor(props.background, -20)} 0%, \n          ${props.background} 50%, \n          ${LightenDarkenColor(props.background, 20)} 100%)`\n          }\n    }`\n  }\n\n          ${props => props.disabled &&\n                  {\n                    color: props.theme.bg.quaternary,\n                    background: `linear-gradient(180deg, rgba(255,255,255,0.4) 0%, rgba(255,255,255,0.4) 100%), ${LightenDarkenColor(props.background, -60)}`,\n                    pointerEvents: \"none\",\n                  }\n          }\n\n            // --border-width: 3px;\n          ${props => props.borderGlow &&\n                  borderGlowCss\n          }\n\n          ${props => props.css};\n`\n\nexport const ErrorContainerComponent = styled.div`\n    width: auto;\n    height: auto;\n    position: absolute;\n    top: 50%;\n    right: 1rem;\n    transform: translateY(-50%);\n    margin: 0;\n    padding: 0;\n`;\n\nexport const conditionTextCss = css`\n    font: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz3};\n    max-width: 100%;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    color: ${props => props.theme.bg.octonary}\n`","import React from 'react'\n\nimport theme from '../theme';\n\nexport const stationColor = theme.main.schema.locations.solid\n\nexport const StationTypes = {\n\n    /**\n     * Heads up, currently there are 2 different svg rectangles being used\n     * One thats width is 200 and height is 320\n     * One thats width is 378 and height 236\n     *\n     * Need to unify this and make all of them standard\n     * Probably use the 200 by 320 since you don't need to add a 'y' offset to the svg\n     *\n     *  */\n\n    warehouse: {\n        svgPath:\n        <svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\"\n                viewBox=\"0 0 400 400\">\n            <path style={{fill:'transparent',strokeWidth:15,strokeMiterlimit:10}} d=\"M334.6,357.6h-260c-16.5,0-30-13.5-30-30v-260c0-16.5,13.5-30,30-30h260c16.5,0,30,13.5,30,30v260\n                C364.6,344.1,351.1,357.6,334.6,357.6z\"/>\n            <g>\n                <path d=\"M224,127c5.1-2.2,9.2-3.9,9.2-3.9s4.1,1.8,9.1,4.1l24.9,11.1c5,2.2,13.3,2.5,18.5,0.6l24.6-9.2\n                    c5.1-1.9,5.2-5.1,0-7l-96.5-36.2c-5.1-1.9-13.6-1.9-18.7,0l-96.5,36.2c-5.1,1.9-5.1,5.1,0,7l96.5,36.2c5.1,1.9,13.6,1.9,18.7,0\n                    l24.4-9.2c5.1-1.9,5.2-5.2,0.1-7.3l-24.6-10.2c-5.1-2.1-9.2-3.8-9.2-3.8c0,0,4.1-1.8,9.2-3.9L224,127z\"/>\n            </g>\n            <g>\n                <path d=\"M98.5,144c-5.1-1.9-9.4,1-9.4,6.5v109.7c0,5.5,4.2,11.6,9.4,13.5l89.3,33.5c5.1,1.9,9.4-1,9.4-6.5V191\n                    c0-5.5-4.2-11.6-9.4-13.5L98.5,144z M146.8,263c0,4.2-4.2,6.1-9.4,4.2l-10.1-3.8c-5.1-1.9-9.4-7-9.4-11.2s4.2-6.1,9.4-4.2\n                    l10.1,3.8C142.5,253.7,146.8,258.7,146.8,263z\"/>\n            </g>\n            <g>\n                <path d=\"M285.8,153.2c-5.1,1.9-9.4,8-9.4,13.5v16.1c0,5.5-4.2,11.6-9.4,13.5l-10.1,3.8c-5.1,1.9-9.4-1-9.4-6.5\n                    v-16.1c0-5.5-4.2-8.4-9.4-6.5l-17.3,6.5c-5.1,1.9-9.4,8-9.4,13.5v109.7c0,5.5,4.2,8.4,9.4,6.5l89.3-33.5c5.1-1.9,9.4-8,9.4-13.5\n                    V150.5c0-5.5-4.2-8.4-9.4-6.5L285.8,153.2z\"/>\n            </g>\n        </svg>,\n\n        attributes:\n        {\n            schema: 'station',\n            type: 'warehouse',\n            children: [],\n            dashboards: [],\n            new: true,\n        },\n        color: stationColor\n    },\n\n    human: {\n        svgPath:\n        <svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\"\n                viewBox=\"0 0 400 400\">\n            <path style={{fill:'transparent',strokeWidth:15,strokeMiterlimit:10}} d=\"M334.6,357.6h-260c-16.5,0-30-13.5-30-30v-260c0-16.5,13.5-30,30-30h260c16.5,0,30,13.5,30,30v260\n            C364.6,344.1,351.1,357.6,334.6,357.6z\"/>\n            <path d=\"M205.9,200.2c32.7,0,59.3-26.3,59.3-58.7s-26.5-58.7-59.3-58.7s-59.3,26.3-59.3,58.7S173.1,200.2,205.9,200.2z\n                M247.4,214.9h-7.7c-10.3,4.7-21.7,7.3-33.8,7.3c-12,0-23.4-2.7-33.8-7.3h-7.7c-34.4,0-62.3,27.6-62.3,61.7v19.1\n                c0,12.2,10,22,22.2,22h163c12.3,0,22.2-9.9,22.2-22v-19.1C309.6,242.5,281.7,214.9,247.4,214.9z\"/>\n        </svg>,\n        attributes:\n        {\n            schema: 'station',\n            type: 'human',\n            children: [],\n            dashboards: [],\n            new: true,\n        },\n        color: stationColor,\n    },\n\n}\n","import styled from 'styled-components'\n\nexport const BackSymbol = styled.i`\n\n    font-size: 1.2rem;\n    font-weight: 800;\n\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n\n    color: ${props => {\n      if (props.active) {\n        return props.theme.bg.secondary\n      } else if (props.hovered) {\n        return !!props.schema ? props.theme.schema[props.schema].solid : props.theme.fg.primary\n      } else {\n        return !!props.schema ? props.theme.schema[props.schema].solid : props.theme.fg.primary\n      }\n    }}\n`;\n\nexport const BackButton = styled.button`\n    width: 2rem;\n    min-width: 2rem;\n    height: 2rem;\n    min-height: 2rem;\n    \n    margin: 0.3rem 0.5rem 0.3rem 0.5rem;\n    padding: 0;\n    border-radius: 0.35rem;\n    background-color: transparent;\n\n    position: relative;\n\n    border: 0.1rem solid ${props => props.theme.bg.octonary};\n    box-sizing: content-box;\n\n    :focus {\n      outline: 0;\n    }\n\n    border: 0.1rem solid ${props => props.hovered ? (!!props.schema ? props.theme.schema[props.schema].solid : props.theme.fg.primary) : props.theme.bg.octonary};\n    &:active {\n      background: ${props => !!props.schema ? props.theme.schema[props.schema].solid : props.theme.fg.primary};\n    }\n\n    ${props => {\n      if (props.active) {\n        return `\n          border: 0.1rem solid transparent;\n          background: ${!!props.schema ? props.theme.schema[props.schema].solid : props.theme.fg.primary};\n        `\n      } else if (props.hovered) {\n        return `\n          border: 0.1rem solid ${!!props.schema ? props.theme.schema[props.schema].solid : props.theme.fg.primary};\n          background: transparent;\n        `\n      } else {\n        return `\n          border: 0.1rem solid ${!!props.schema ? props.theme.schema[props.schema].solid : props.theme.fg.primary};\n          background: transparent;\n        `\n      }\n    }}\n`;\n","import React, { useState } from 'react';\nimport * as style from './back_button.style'\nimport {globStyle} from '../../../global_style'\n\nconst BackButton = (props) => {\n\n    const [hovered, setHovered] = useState(false)\n    const [active, setActive] = useState(false)\n\n\n    return (\n        <style.BackButton\n            hovered={props.hovered}\n            active={props.active}\n            onClick={props.onClick}\n            schema={props.schema}\n            style={{...props.containerStyle}}\n            type = {props.type}\n\n            onMouseEnter={() => setHovered(true)}\n            onMouseLeave={() => setHovered(false)}\n            onMouseDown={() => setActive(true)}\n            onMouseUp={() => setActive(false)}\n        >\n            <style.BackSymbol\n                hovered={props.hovered}\n                active={props.active}\n                style={{...props.style}}\n\n                disable={props.disabled}\n                schema={props.schema}\n                className=\"fa fa-chevron-left\"\n            />\n\n        </style.BackButton>\n    )\n}\n\nBackButton.defaultProps = {\n    type: \"button\"\n};\n\nexport default BackButton;\n","import { useEffect } from \"react\";\n\n// custom hook that listens for clicks outside of the ref component,\n// and calls the provided handler when outside click is detected\nfunction useOnClickOutside(ref, handler) {\n    useEffect(\n        () => {\n            const listener = event => {\n                // Do nothing if clicking ref's element or descendent elements\n                if (!ref.current || ref.current.contains(event.target)) {\n                    return;\n                }\n\n                handler(event)\n            }\n\n            document.addEventListener('mousedown', listener, {passive:true})\n            document.addEventListener('touchstart', listener, {passive:true})\n\n            return () => {\n                document.removeEventListener('mousedown', listener, {passive:true})\n                document.removeEventListener('touchstart', listener, {passive:true})\n            }\n        },\n        // Add ref and handler to effect dependencies\n        // It's worth noting that because passed in handler is a new ...\n        // ... function on every render that will cause this effect ...\n        // ... callback/cleanup to run every render. It's not a big deal ...\n        // ... but to optimize you can wrap handler in useCallback before ...\n        // ... passing it into this hook.\n        [ref, handler]\n    )\n}\n\nexport default useOnClickOutside\n\n// EXAMPLE\n\n// // Usage\n// function App() {\n//     // Create a ref that we add to the element for which we want to detect outside clicks\n//     const ref = useRef();\n//     // State for our modal\n//     const [isModalOpen, setModalOpen] = useState(false);\n//     // Call hook passing in the ref and a function to call on outside click\n//     useOnClickOutside(ref, () => setModalOpen(false));\n\n//     return (\n//       <div>\n//         {isModalOpen ? (\n//           <div ref={ref}>\n//             👋 Hey, I'm a modal. Click anywhere outside of me to close.\n//           </div>\n//         ) : (\n//           <button onClick={() => setModalOpen(true)}>Open Modal</button>\n//         )}\n//       </div>\n//     );\n//   }\n","import styled, { css } from 'styled-components'\nimport { LightenDarkenColor } from '../../../../../../methods/utils/color_utils'\n\nimport { borderGlowCss, ContainerCss, conditionTextCss } from \"../dashboard_buttons.style\"\n\n\nexport const Container = styled.button`\n    ${ContainerCss};\n\n    // flex layout\n    flex-direction: row;\n\n    box-shadow: 0 9px 2px -4px ${props => LightenDarkenColor(props.theme.bg.secondary, -50)};\n    height: 4rem;\n    // line-height: 4rem;\n    margin-bottom: 1rem;\n    min-width: 80%;\n    padding: 0;\n    padding-left: 0.5rem;\n\n    &:active{\n        box-shadow: none;\n        filter: brightness(85%);\n    }\n`\n\nexport const ConditionText = styled.span`\n    ${conditionTextCss};\n\n    flex-grow: 1;\n`\n\nexport const IconContainer = styled.div`\n    position: absolute;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    width: 10.75rem;\n`\n\nexport const SchemaIcon = styled.i`\n    color: ${props => props.color};\n    padding: 0;\n    font-size: 2rem;\n    margin: 0;\n    height: fit-content;\n    width: fit-content;\n    // background: blue;\n\n`\n","import styled from 'styled-components'\nimport { RGB_Linear_Shade, hexToRGBA } from '../../../../methods/utils/color_utils'\nimport * as commonCss from \"../../../../common_css/common_css\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\n\n\n// ========== Content ========== //\nexport const Container = styled.div`\n    flex-grow: 1;\n    padding: 1rem;\n    padding-top: 1.5rem;\n    display: flex;\n    flex-direction: column;\n    overflow-x: hidden;\n    margin-right: .5rem;\n\n\n`\n\nexport const Header = styled.div`\n    display: flex;\n    flex-direction: row;\n\n`\n\nexport const Title = styled.h1`\n    font-family: ${props => props.theme.font.primary};\n    font-size: 2rem;\n    font-weight: 500;\n    color: ${props => props.theme.schema[props.schema].solid};\n    flex-grow: 1;\n    user-select: none;\n`\n\n// ========== List ========== //\n\nexport const List = styled.ul`\n    flex-grow: 1;\n    padding: 0;\n`\n\nexport const ListItem = styled.div`\n    display: flex;\n    align-items: center;\n    width: auto;\n    height: 3rem;\n    text-overflow: ellipsis;\n    justify-content: space-between;\n    background: transparent;\n    padding: 0rem 1rem;\n\n    border-radius: 0.5rem;\n    border: 0.1rem solid;\n    border-color: ${props => props.error ? 'red' : 'white'};\n\n    box-shadow: 0 1px 3px 0 rgba(0,0,0,0.2);\n    // cursor: pointer;\n\n  ${props => props.isNew &&  commonCss.newGlow};\n\n    margin-bottom: 0.6rem;\n\n\n`\n\nexport const ListItemRect = styled.div`\n    height: 100%;\n    width: 100%;\n\n    border-radius: 0.5rem;\n    text-align: center;\n    padding-right:0.5rem;\n    cursor: pointer;\n    user-select: none;\n\n    border: 0.1rem solid white;\n    box-sizing: border-box;\n\n    &:hover {\n        background: ${props => props.theme.bg.octonary};\n    }\n\n`\nexport const LocationTypeGraphic = styled.svg`\n    height: 2rem;\n`\nexport const ListItemTitle = styled.h1`\n\n    font-family: ${props => props.theme.font.primary};\n    /* font-size: ${props => props.theme.fontSize.sz3}; */\n    font-size: 1rem;\n    font-weight: 500;\n    color: ${props => props.theme.bg.octonary};\n    user-select: none;\n\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    margin-right:0.5rem;\n    margin-bottom: 0rem;\n    width: 75%;\n\n    flex-grow: 1;\n    margin-left: 1rem;\n`\n\nexport const ListItemIcon = styled.i`\n\n    font-size: 1.3rem;\n    color: lightgreen;\n\n    &:hover {\n        cursor: pointer;\n        color:green;\n    }\n`\n\nexport const ListItemIconContainer = styled.div`\n    position: relative;\n    display: flex;\n\n    flex-grow: 0;\n`\n\nexport const ErrorContainer = styled.div`\n\tposition: relative;\n`\n\nexport const SortToggle = styled.span`\n    font-size: 1rem;\n    color: ${props => props.theme.bg.quinary};\n    cursor: pointer;\n`\nexport const SortContainer = styled.div`\n    width: 100%;\n    display: flex;\n    justify-content: flex-end;\n`","import styled from 'styled-components'\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\n\nexport const Header = styled.div`\n    display: flex;\n    flex-direction: row;\n    width: 100%;\n    justify-content: space-between;\n    margin-bottom: 1rem;\n\n    font-family: ${props => props.theme.font.primary};\n    /* font-size: ${props => props.theme.fontSize.sz3}; */\n    font-size: 1.2rem;\n    font-weight: 500;\n    color: ${props => props.theme.bg.octonary};\n\n    align-items: center;\n`\n\nexport const Title = styled.h1`\n    font-family: ${props => props.theme.font.primary};\n    font-size: 2rem;\n    font-weight: 500;\n    color: ${props => props.theme.schema[props.schema].solid};\n    user-select: none;\n`\n\nexport const EditTitle = styled.h1`\n    font-family: ${props => props.theme.font.primary};\n    font-size: 1.4rem;\n    font-weight: 500;\n    color: ${props => props.theme.schema[props.schema].solid};\n    user-select: none;\n\n    text-align: left;\n    flex-grow: 1;\n\n    padding-right: 4rem;\n    padding-left: 1rem;\n`\n\nexport const ClearIcon = styled(DeleteForeverIcon)`\n\n`\n","import styled from 'styled-components'\nimport {globStyle} from '../../../global_style'\n\nexport const PlusSymbol = styled.i`\n    display: flex;\n    flex-direction: row;\n    flex-basis: 5rem;\n    flex-shrink: 0;\n\n    color: ${props => props.disabled ? props.theme.bg.senary : props.theme.bg.octonary};\n    height: 2rem;\n    width: 2rem;\n    margin: none;\n    padding: none;\n    font-size: 2rem;\n    font-weight: 400;\n    text-align: center;\n    vertical-align: middle;\n    line-height: 2rem;\n\n    transform: translate(-0.52rem, -0.16rem);\n`;\n\nexport const PlusButton = styled.button`\n    width: 2rem;\n    height: 2rem;\n    margin: 0.25rem;\n    margin-top: 0.2rem;\n    background-color: transparent;\n    border: none;\n    text-align: center;\n    box-sizing: border-box;\n\n    :focus {\n      outline: 0;\n    }\n\n`;\n","import React from 'react';\nimport * as style from './plus_button.style'\n\nconst PlusButton = (props) => (\n    <style.PlusButton onClick={props.onClick}>\n        <style.PlusSymbol\n            style={{...props.style}}\n            className={\"far fa-plus-square\"}\n            disabled={props.disabled}\n            schema={props.schema}\n        >\n        </style.PlusSymbol>\n    </style.PlusButton>\n);\n\nexport default PlusButton;\n","import React from 'react'\n\n// Import styles\nimport * as styled from './contnet_header.style'\nimport theme from '../../../../theme'\n\n// Import Utils\nimport { upperCaseFirstLetterInString } from '../../../../methods/utils/utils'\n\n// Import Components\nimport PlusButton from '../../../basic/plus_button/plus_button'\nimport Button from '../../../basic/button/button'\nimport BackButton from '../../../basic/back_button/back_button'\nimport BounceButton from '../../../basic/bounce_button/bounce_button'\n\nconst ContentHeader = (props) => {\n\n    const {\n        content,\n        onClickAdd,\n        onClickSave,\n        onClickBack,\n        onClickClear,\n        mode,\n        disabled,\n        saveEnabled,\n        backEnabled,\n    } = props\n\n    // Handles the title\n    const handleTitle = () => {\n\n        if (content === 'scheduler') {\n            return 'Schedules'\n        }\n\n        else if (content === 'taskQueue') {\n            return 'Task Queue'\n        }\n\n        else if (content === 'tasks') {\n            return 'Routes'\n        }\n\n        else {\n            return upperCaseFirstLetterInString(content)\n        }\n    }\n\n    // If the side bar is show a list of itemts, then have the title and add button\n    if (mode === 'list') {\n        return (\n            <styled.Header>\n                <styled.Title schema={content}>{handleTitle()}</styled.Title>\n\n                {content === 'taskQueue' ?\n                    <BounceButton\n                        color={\"red\"}\n                        onClick={onClickClear}\n                        disabled={disabled}\n                    >\n                        <styled.ClearIcon\n                            fontSize={\"medium\"}\n                        />\n                    </BounceButton>\n                    :\n                    <PlusButton\n                        style={{color: theme.main.schema[content].solid}}\n                        onClick={onClickAdd}\n                    />\n                }\n\n            </styled.Header>\n        )\n    }\n\n    // If the side bar is in create mode then have a back button and a save button\n    else if (mode === 'create') {\n        return (\n            <styled.Header>\n\n                <BackButton schema={content} type = {\"button\"} style={{ display: 'inline-block'}}\n                    onClick={onClickBack}\n                />\n                <styled.EditTitle style = {{marginTop: \".5rem\"}}  schema={content}>{handleTitle()}</styled.EditTitle>\n            </styled.Header>\n\n        )\n    }\n\n    // If the side bar is in add mode then have a back button and a add button\n    else if (mode === 'add') {\n        return (\n            <styled.Header>\n\n                <BackButton schema={content} style={{ display: 'inline-block' }}\n                    onClick={onClickBack}\n                />\n            </styled.Header>\n\n        )\n    }\n\n    // If the side bar is in title mode then have a back button and if save is enabled then add a save button\n    else if (mode === 'title') {\n        return (\n            <styled.Header>\n            {content===\"settings\" || content===\"devices\"?\n              <styled.Title schema={content}>{handleTitle()}</styled.Title>\n              :\n              <styled.EditTitle schema={content}>{handleTitle()}</styled.EditTitle>\n            }\n\n\n                {saveEnabled &&\n\n                    <Button schema={content} style={{ display: 'inline-block', float: 'right' }}\n                        onClick={onClickSave} disabled={disabled}\n                    >\n                        Save\n                    </Button>\n                }\n\n                {backEnabled &&\n                    <BackButton schema={content} style={{ display: 'inline-block' }}\n                        onClick={onClickBack}\n                    />\n                }\n            </styled.Header>\n\n\n        )\n    }\n\n}\n\nContentHeader.defaultProps = {\n    mode: 'list'\n}\n\nexport default ContentHeader\n","import React, { useContext } from 'react';\n\nimport { ThemeContext } from 'styled-components';\nimport * as styled from '../content_list.style'\n\nimport ErrorTooltip from '../../../../basic/form/error_tooltip/error_tooltip'\n\n// Import Constants\nimport { StationTypes } from '../../../../../constants/station_constants'\nimport { PositionTypes } from '../../../../../constants/position_constants'\n\nconst ContentListItem = (props) => {\n\n    const {\n        ind,\n        error,\n        element,\n        schema,\n        inQueue,\n\n        showEdit,\n        style,\n\n        onClick,\n        onIconClick,\n        onEditClick,\n        onMouseEnter,\n        onMouseLeave,\n    } = props;\n\n    const theme = useContext(ThemeContext);\n\n    const renderLocationTypeIcon = (element) => {\n        \n\n        const LocationTypes ={\n            ...StationTypes,\n            ...PositionTypes,\n        }\n\n        switch (element.type) {\n\n            case 'charger_position':\n                return (\n                    <styled.LocationTypeGraphic fill={LocationTypes['shelf_position'].color} stroke={LocationTypes['shelf_position'].color} id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 400 400\">\n                        {LocationTypes['charger_position'].svgPath}\n                    </styled.LocationTypeGraphic>\n                )\n\n            case 'shelf_position':\n                return (\n                    <styled.LocationTypeGraphic fill={LocationTypes['shelf_position'].color} stroke={LocationTypes['shelf_position'].color} id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 400 400\">\n                        {LocationTypes['shelf_position'].svgPath}\n                    </styled.LocationTypeGraphic>\n                )\n\n            case 'warehouse':\n                return (\n                    <styled.LocationTypeGraphic fill={LocationTypes['warehouse'].color} stroke={LocationTypes['warehouse'].color} id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 400 400\">\n                        {LocationTypes['warehouse'].svgPath}\n                    </styled.LocationTypeGraphic>\n                )\n\n            case 'human':\n                return (\n                    <styled.LocationTypeGraphic fill={LocationTypes['human'].color} stroke={LocationTypes['human'].color} id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 400 400\">\n                        {LocationTypes['human'].svgPath}\n                    </styled.LocationTypeGraphic>\n                )\n\n            case 'cart_position':\n                return (\n                    <styled.LocationTypeGraphic fill={LocationTypes['cart_position'].color} stroke={LocationTypes['cart_position'].color} id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 400 400\">\n                        {LocationTypes['cart_position'].svgPath}\n                    </styled.LocationTypeGraphic>\n                )\n\n            case 'user':\n                return \n        }\n    }\n\n    return (\n        <>\n            <styled.ListItem\n                key={`li-${ind}`}\n                error={error}\n                onMouseEnter={() => onMouseEnter(element)}\n                onMouseLeave={() => onMouseLeave(element)}\n                onClick={onClick}\n                style={style}\n            >\n                <styled.ListItemIconContainer style = {{paddingTop: element.type === \"charger_position\" ? '0.6rem': '0rem'}}>\n\n                    {props.schema === 'locations' &&\n                        <>\n                            {renderLocationTypeIcon(element)}\n                        </>\n                    }\n\n                    {element.type === 'user' && \n                        <styled.ListItemIcon\n                            style = {{color: 'orange' }}\n                            className='fas fa-user'\n                        />\n                    }\n\n\n                    {props.schema === 'tasks' &&\n\n                        <styled.ListItemIcon\n                            style = {{color: inQueue === true ? 'grey' : 'lightGreen' }}\n                            className='fas fa-play'\n                            onClick={() => onIconClick(inQueue)}\n                        />\n                    }\n\n                    {props.schema === 'processes' ? error ?\n                        <div\n                            onClick={() => onClick(element)}\n                        >\n                            <ErrorTooltip\n                                visible={true}\n                                text={'Process is broken, click to fix'}\n                                ContainerComponent={styled.ErrorContainer}\n                            />\n                        </div>\n                        :\n                        <styled.ListItemIcon\n                            className='fas fa-clone'\n                            style={{ color: '#ffb62e' }}\n                            onClick={() => onIconClick(element)}\n                        />\n                        :\n                        <>\n                        </>\n                    }\n\n                </styled.ListItemIconContainer>\n\n\n                <styled.ListItemTitle schema={schema}>{element.name}</styled.ListItemTitle>\n\n\n\n                <styled.ListItemIconContainer>\n\n                    {showEdit &&\n                        <styled.ListItemIcon\n                            className='fas fa-edit'\n                            onClick={() => onEditClick(element)}\n                            style={{ color: theme.bg.quaternary }}\n                        />\n                    }\n\n\n                </styled.ListItemIconContainer>\n\n            </styled.ListItem>\n        </>\n    )\n}\n\nContentListItem.defaultProps = {\n    ind: 0,\n    error: null,\n    element: null,\n    schema: null,\n    inQueue: false,\n\n    showEdit: true,\n    style: {},\n\n    onClick: () => {},\n    onIconClick: () => {},\n    onMouseEnter: () => {},\n    onMouseLeave: () => {},\n}\n\nexport default ContentListItem;","import { useRef, useEffect } from 'react'\n\n/**\n * This will take a value and store its current state\n * This can be used to see if the stored state has changed\n * For example: Does the new state differ from the previous state\n * @param {var} val \n */\nconst usePrevious = (val) => {\n    const ref = useRef()\n    useEffect(() => {\n        ref.current = val;\n    })\n    return ref.current\n}\n\nexport default usePrevious","import styled, {css} from 'styled-components'\nimport {hexToRGBA, RGB_Linear_Shade, LightenDarkenColor} from \"../../../methods/utils/color_utils\";\n\nconst activeStyle = css`\n\tbox-shadow: none;\n\ttransform: translateY(0px);\n\tcolor:  ${props => RGB_Linear_Shade(-0.1, hexToRGBA(props.color))};\n\tbackground-color:  ${props => RGB_Linear_Shade(-0.1, hexToRGBA(props.backgroundColor))};\n`\n\nconst hoverStyle = css`\n\tbox-shadow: 0px 5px 2px -2px rgba(0, 0, 0, 0.3);\n\ttransform: translateY(-1px);\n\tcolor:  ${props => RGB_Linear_Shade(0.01, hexToRGBA(props.color))};\n\tbackground-color:  ${props => RGB_Linear_Shade(0.01, hexToRGBA(props.backgroundColor))};\n`\n\nexport const Container = styled.button`\n  width: ${props => props.width};\n  height: ${props => props.height};\n  color: ${props => props.theme.fg.red};\n  \n  // flex layout\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\t\n  // margins\n  margin: 0;\n  \n  outline: none;\n  &:focus {\n\toutline: none;\n  }\n  \n\tborder: thin solid ${props => props.theme.bg.tertiary};\n\tborder-radius: .5rem;\n\t// box-shadow: 1px 1px 5px rgba(0, 0, 0, 0.5);\n\ttransition: all 0.2s ease 0s;\n\tcursor: pointer;\n\toutline: none;\n\t\n  \n  \n  &:hover {\n\t${props => props.hoverable && hoverStyle}\n  }\n  \n  &:active {\n\t${props => props.clickable && activeStyle}\n  }\n  \n//   ${props=> props.active && activeStyle}\n  \n  &:focus {\n    outline: none;\n  }\n  \n  ${props => props.disabled &&\n\t{\n\t\t// backgroundImage: `linear-gradient(to bottom right, grey, white)`,\n\t\tpointerEvents: \"none\",\n\t}\n\t\n\t\n}\n  \n\tbackground-color: ${props => LightenDarkenColor(props.theme.bg.tertiary,20)};\n\tpadding: .5rem;\n`\n","import React, {useEffect, useRef, useState} from 'react'\nimport PropTypes from 'prop-types'\n\n// Import Styles\nimport * as style from './bounce_button.style'\nimport DashboardButton from \"../../widgets/widget_pages/dashboards_page/dashboard_buttons/dashboard_button/dashboard_button\"\nimport useOnClickOutside from \"../../../hooks/useOnClickOutside\";\n\nconst BounceButton = (props => {\n\n    const {\n        color,\n        children,\n        onClick,\n        disabled,\n        width,\n        height,\n        clickable,\n        hoverable,\n        containerStyle,\n        Component,\n        backgroundColor,\n        active,\n        onClickOutside\n    } = props\n\n    const ref = useRef() // ref for useOnClickOutside\n    useOnClickOutside(ref, onClickOutside) // calls onClickOutside when click outside of element\n\n    return(\n        <style.Container\n            disabled={disabled}\n            width={width}\n            height={height}\n            onClick={onClick}\n            clickable={clickable}\n            hoverable={hoverable}\n            color={color}\n            backgroundColor={backgroundColor}\n            style={containerStyle}\n            active={active}\n            ref={ref}\n        >\n            { children}\n        </style.Container>\n    )\n\n})\n\n\n// Specifies propTypes\nBounceButton.propTypes = {\n    clickable: PropTypes.bool,\n    hoverable: PropTypes.bool,\n    active: PropTypes.bool,\n    onClick: PropTypes.func,\n    onClickOutside: PropTypes.func,\n    disabled: PropTypes.bool\n}\n\n// Specifies the default values for props:\nBounceButton.defaultProps = {\n    clickable: true,\n    hoverable: true,\n    onClick: () => {},\n    onClickOutside: () => {},\n    disabled: false,\n    width: \"auto\",\n    height: \"auto\",\n    backgroundColor: \"#FFFFFF\",\n    active: false,\n\n}\n\nexport default BounceButton\n"],"sourceRoot":""}