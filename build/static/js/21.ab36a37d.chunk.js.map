{"version":3,"sources":["components/widgets/widget_pages/statistics_page/chart_types/bar_chart.js","components/basic/sort_dropdown/sort_dropdown.style.js","components/basic/sort_dropdown/sort_dropdown.js","components/basic/day_selector/day_selector.style.js","components/basic/day_selector/day_selector.js","components/basic/timespan_selector/time_span_selector.style.js","components/basic/timespan_selector/time_span_selector.js","components/widgets/widget_pages/statistics_page/statistics_page.style.js","components/widgets/widget_pages/statistics_page/statistics_overview/charts/report_chart.js","components/widgets/widget_pages/statistics_page/statistics_overview/charts/throughput_chart/line_throughput_chart/line_throughput_chart.js","components/widgets/widget_pages/statistics_page/statistics_overview/charts/throughput_chart/throughput_chart.js","components/side_bar/content/cards/columns/station_column/station_column.style.js","components/side_bar/content/statistics/station_columns/station_columns.style.js","components/side_bar/content/statistics/station_columns/station_column/station_column.style.js","components/side_bar/content/statistics/station_columns/station_column/station_column.js","components/side_bar/content/statistics/station_columns/station_columns.js","components/basic/form/error_tooltip/error_tooltip.style.js","components/basic/form/error_tooltip/error_tooltip.js","components/basic/drop_down_search_v2/components/ClickOutside.js","components/basic/drop_down_search_v2/components/Label.js","components/basic/drop_down_search_v2/util.js","components/basic/drop_down_search_v2/constants.js","components/basic/drop_down_search_v2/components/Option.js","components/basic/drop_down_search_v2/components/Input.js","components/basic/drop_down_search_v2/components/Content.js","components/basic/drop_down_search_v2/components/NoData.js","components/basic/drop_down_search_v2/components/Item.js","components/basic/drop_down_search_v2/components/Dropdown.js","components/basic/drop_down_search_v2/components/Loading.js","components/basic/drop_down_search_v2/components/Clear.js","components/basic/drop_down_search_v2/components/Separator.js","components/basic/drop_down_search_v2/components/DropdownHandle.js","components/basic/drop_down_search_v2/drop_down_search.js","methods/utils/form_utils.js","higher_order_components/portal.js","methods/utils/form_schemas.js","methods/utils/regex_utils.js","components/basic/form/text_field/text_field.style.js","components/basic/form/text_field/text_field.js","components/basic/form/useChange.js","components/basic/form/drop_down_search_field/drop_down_search_field.style.js","components/basic/form/drop_down_search_field/drop_down_search_field.js","methods/utils/time_utils.js","components/basic/rotate_button/rotate_button.style.js","components/basic/rotate_button/rotate_button.js","components/basic/form/time_picker_field/time_picker/time_picker.js","components/basic/form/time_picker_field/time_picker/index.js","components/basic/form/time_picker_field/time_picker_field.style.js","components/basic/form/time_picker_field/time_picker_field.js","components/basic/form/switch_field/switch_field.style.js","components/basic/form/switch_field/switch_field.js","components/side_bar/content/settings/shift_settings/shift_settings.style.js","components/side_bar/content/settings/shift_settings/shift_settings.js","components/widgets/widget_pages/statistics_page/statistics_overview/charts/charts.style.js","api/report_events_api.js","redux/actions/report_event_actions.js","components/widgets/widget_pages/statistics_page/statistics_overview/statistics_overview.style.js","components/widgets/widget_pages/statistics_page/statistics_overview/data_selector/data_selector.style.js","components/widgets/widget_pages/statistics_page/statistics_overview/statistics_overview.js"],"names":["BarChart","props","data","colors","selector","axisBottom","mainTheme","timeSpan","axisLeft","layout","horizontal","enableGridX","enableGridY","rest","themeContext","useContext","ThemeContext","theme","background","fontFamily","fontSize","textColor","bg","senary","whiteSpace","overflow","textOverflow","axis","domain","line","stroke","quinary","strokeWidth","ticks","text","legend","grid","tertiary","legends","fill","labels","markers","lineColor","lineStrokeWidth","dots","crosshair","strokeOpacity","strokeDasharray","annotations","outlineWidth","outlineColor","link","outline","symbol","keys","indexBy","animate","borderColor","from","margin","top","left","right","bottom","labelTextColor","primary","axisTop","axisRight","tickSize","legendOffset","tickRotation","legendPosition","zIndex","tickValues","gridYValues","defaultProps","Container","styled","div","Label","p","font","sz3","SortDropDown","labelField","valueField","options","values","onChange","mapInput","mapOutput","label","placeholder","labelStyle","dropDownSearchStyle","schema","containerCss","dropdownCss","valueCss","portal","maxDropdownWidth","orderEnabled","onChangeOrderDirection","rotateButtonContainerCss","rotateButtonIconCss","style","iconName1","iconCss","onStateOne","onStateTwo","val","RowContainer","DateSelectorIcon","i","septenary","DateSelectorTitle","h1","sz2","LoadingIcon","DaySelector","date","dateIndex","loading","className","onClick","TimespanButton","button","selected","locations","quaternary","color","TimeSpanSelector","setTimeSpan","timespanDisabled","disabled","StatisticsContainer","secondary","Header","widthBreakpoint","tablet","cardShadow","StationName","StatisticsSectionsContainer","h5","ReportChart","reportButtons","reportData","isThroughputLoading","isWidget","reportButtonsArr","Object","reportButtonNames","Array","isArray","map","currButton","filteredData","useRef","filteredDataColors","useEffect","current","reports","currReport","lable","currReportEntries","updatedReport","forEach","currButtonId","minHeight","length","marginBottom","marginTop","bar","id","statistics","solid","colorBy","TIME_SPANS","displayName","day","month","name","LineThroughputChart","isData","settings","useSelector","state","settingsReducer","useState","breaksEnabled","showForm","setShowForm","shiftDetails","Actual","Expected","lineDataConverter","useMemo","startIndex","convertedData","dataCopy","deepCopy","startEpoch","convert24htoEpoch","startOfShift","x","unshift","y","undefined","endEpoch","endOfShift","stack","point","push","expectedOutput","slopeValues","startOfBreaks","breaks","br","ind","enabled","start","startOfBreak","end","endOfBreak","output","nextOutput","splice","filter","item","ind2","includes","inExpected","expOutput","nextExpOutput","m","b","yValue","Date","parseFloat","octonary","renderResponsiveLine","flexGrow","xScale","type","xFormat","value","convertDateto12h","yFormat","Math","round","yScale","min","max","stacked","reverse","format","orient","tickPadding","tickOffset","enable","anchor","direction","justify","translateX","translateY","itemsSpacing","itemDirection","itemWidth","itemHeight","itemOpacity","symbolSize","symbolShape","symbolBorderColor","effects","on","itemBackground","ThroughputChart","barData","lineData","loadLineChartData","loadBarChartData","disableTimeSpan","sortLevel","setParentSortLevel","cards","cardsReducer","tasks","tasksReducer","productGroups","lotTemplatesReducer","lotTemplates","showBar","setShowBar","setIsData","chartKeys","setChartKeys","formattedBarData","setFormattedBarData","formattedLineData","setFormattedLineData","formatBarData","formatLineData","newData","throughPut","tempChartKeys","tempFilteredData","deletedChartKeys","currItem","sortedIds","updatedItem","entries","currEntry","currIndex","currKey","currVal","currObjectName","onChartKeys","onDeletedKeys","key","deletedObjKeyIndex","indexOf","currProductGroup","isObject","currProductGroupName","currProductGroupNameCapitalized","capitalizeFirstLetter","lot","route","borderRadius","minWidth","date_title","StationContainerCss","span","css","isCollapsed","StationHeader","HeaderRow","QuantityText","LabelContainer","StationTitle","sz4","HeaderSection","dragEnter","HeaderSectionTitle","divider","hr","ChartsContainer","commonCss","ProcessName","h3","lots","NameContainer","CollapseIcon","StationColumnContainer","StationCollapsedContainer","StationColumnHeader","rotated","StationDiv","StationColumn","setDateTitle","stationId","showReport","dataLoading","stations","stationsReducer","dashboards","dashboardsReducer","dispatch","useDispatch","setLineData","setBarData","setLoading","collapsed","setCollapsed","setReportButtons","setReportData","currentStation","dashboardId","dashboard","currReportButtons","report_buttons","convertArrayToObject","onGetAllData","dataInterval","setInterval","clearInterval","getReportEvents","onGetReportData","timespan","index","onGetThroughputData","body","a","getReportAnalytics","reportAnalyticsResponse","Error","sort_index","getStationAnalytics","then","response","convertedThroughput","dataPoint","convertedTime","reportDate","StationColumns","processId","processes","processesReducer","renderStationColumn","flattened_stations","stationNode","partialVisibility","isVisible","stationID","title","width","WarningIcon","visible","StyledInput","input","IconContainer","ErrorTooltip","ContainerComponent","containerStyle","tooltip","inputRef","autoFocus","setAutoFocus","uuidv4","timer1","setTimeout","clearTimeout","delayShow","event","eventOff","effect","ref","readOnly","main","error","React","memo","ClickOutside","container","createRef","handleClick","target","onClickOutside","contains","document","addEventListener","this","capture","passive","removeEventListener","children","ClickOutsideComponent","Component","DefaultClickOutsideComponent","LabelComponent","DefaultLabelComponent","LightenDarkenColor","sz5","valueExistInSelected","find","getByPath","debounce","fn","timerId","delay","args","isEqual","JSON","stringify","object","path","split","reduce","acc","getProp","defaultValue","normalizedPath","shift","LIB_NAME","Option","methods","OptionComponent","DefaultOptionComponent","optionRenderer","role","removeItem","closeOnSelect","handlePlaceHolder","addPlaceholder","searchable","noValues","hasValues","Input","onBlur","stopPropagation","dropdown","focus","blur","handleKeyPress","create","search","cursor","createNew","prevProps","InputComponent","inputRenderer","tabIndex","onFocus","size","getInputSize","dropDown","onKeyPress","setSearch","filled","DefaultInputComponent","Content","ContentComponent","multi","contentRenderer","OptionsContainer","showSelectedBox","Value","DefaultContentComponent","NoData","NoDataComponent","noDataRenderer","noDataLabel","DefaultNoDataComponent","Item","itemIndex","scrollIntoView","behavior","block","inline","ItemComponent","ButtonComponent","ContentContainer","TextComponent","onMouseEnter","onMouseLeave","itemRenderer","keepSelectedInList","isSelected","addItem","disabledLabel","showButton","onDetailsClick","e","window","cancelBubble","DefaultItemComponent","hexToRGBA","fg","red","DefaultContentContainer","DefaultButtonComponent","DefaultTextComponent","dropdownPosition","DropdownBoundingClientRect","getSelectRef","getBoundingClientRect","dropdownHeight","parseInt","dropdownGap","innerHeight","Dropdown","dropdownRef","DropDownComponent","maxWidth","selectBounds","dropdownRenderer","Fragment","AddNew","createNewLabel","replace","searchResults","DefaultDropDownComponent","height","hex","alpha","RR","slice","GG","BB","LoadingComponent","Loading","loadingRenderer","ClearComponent","Clear","clearRenderer","clearAll","SeparatorComponent","Separator","separatorRenderer","DropdownHandleComponent","dropdownOpen","DropdownHandle","dropdownHandleRenderer","onKeyDown","viewBox","d","DropDownSearch","onDropdownClose","setState","onScroll","closeOnScroll","updateSelectBounds","select","getSelectBounds","action","srcElement","offsetParent","classList","keepOpen","clearOnBlur","clearOnSelect","close","preventDefault","newValues","onRemoveItem","toggleSelectAll","selectAll","onClearAll","valuesList","onSelectAll","option","areAllSelected","safeString","string","sortBy","sort","searchFn","regexp","RegExp","test","searchBy","activeCursorItem","handleKeyDown","bind","handleKeyDownFn","escape","enter","arrowUp","arrowDown","tab","shiftKey","shiftTab","currentItem","prevState","renderDropdown","ReactDOM","createPortal","dropdownRoot","newValue","onCreateNew","dropdownSize","offsetWidth","offsetHeight","offsetLeft","offsetTop","createElement","appendChild","onDropdownOpen","fillable","fixedHeight","removeChild","debounceDelay","ReactDropdownSelect","paddingBottom","reactDropdownSelectCss","additionalProps","required","opacity","position","pattern","toString","clearable","separator","dropdownHandle","DefaultReactDropdownSelect","DefaultContainer","getMessageFromError","err","getSubmitDisabled","errors","touched","errorCount","isSubmitting","submitCount","Portal","mountElement","mount","getElementById","el","require","lazy","mapValues","number","Yup","startPath","endPath","message","startDate","createError","convertCardDate","endDate","shape","task","of","matches","status","days_on","start_time","time_interval","stop_time","reportEventSchema","description","instruction","sound","timeout","nullable","location","_id","hil","quantity","buttons","fieldPath","pathToArr","mapper","get","compareItem","arr","parent","context","reg2","match","megaIndex","last","pop","parsedIndex","isUnique","flat","isString","isEqualCI","trim","dataType","FIELD_DATA_TYPES","DATE_RANGE","DATE","INTEGER","STRING","list","set","totalList","currList","currListIndex","concat","Set","idx","rowIdx","sublist","pathToOthers","others","arrPath","parentValues","currParentValue","propertyName","currentIndex","some","getSignUpSchema","accessCode","email","oneOf","password","confirmPassword","signInSchema","emailSchema","passwordResetSchema","verification","checkPassword","quantityOneSchema","binsSchema","obj","count","CARD_SCHEMA_MODES","EDIT_LOT","MOVE_LOT","uniqueNameSchema","uniqueByPath","editLotSchema","fields","lotFieldRequired","bins","LotFormSchema","fieldName","notIn","LOT_TEMPLATES_RESERVED_FIELD_NAMES","dopeUnique","templateMapperSchema","selectedFieldNames","getCardSchema","items","mode","availableBinItems","maxCount","moveCount","moveLocation","routeSchema","positionSchema","stationSchema","station","instructions","load","unload","doesExpressionConverge","exp","routes","nodeId","getProcessSchema","findProcessStartNodes","findProcessEndNodes","startDivergeType","normalizedRoutes","routeIds","r","endNodes","endNode","mergeExp","handleMergeExpression","startNodes","startNode","loopRoutes","DFSContainsCycle","loopRoute","backTraverseUntilSplit","node","visited","incomingRoutes","getNodeIncoming","inRoute","divergeType","outgoingRoutes","getNodeOutgoing","outgoingRoute","nextNode","nextStack","locationSchema","selectedLocation","stationNames","locationName","notOneOf","input2Path","input1","input2","beg1","end1","beg2","end2","throughputSchema","switch1","lessThan","startOfBreak1","when","is","greaterThan","endOfBreak1","startOfBreak2","endOfBreak2","startOfBreak3","endOfBreak3","schedules","time","charge_level","chargeEnabled","lessThanInt","DefaultFieldContainer","DefaultInputContainer","hasError","bad","IconContainerComponent","iconContainerCss","TextField","ErrorComponent","InputContainer","fieldLabel","inputStyleFunc","errorTooltipContainerStyle","inputContainerStyle","showErrorStyle","FieldContainer","inputProps","useFormikContext","setFieldValue","setFieldTouched","validateOnChange","validateOnBlur","validateField","validateForm","useField","field","meta","warning","warnings","hasWarning","errorMessage","warningMessage","htmlFor","autofocus","inputStyle","boxShadow","border","warn","useChange","changedSet","changed","setChanged","initialValue","setInitialValue","getIsEquivalent","TitleContainer","DefaultFieldContentContainer","DefaultFieldDropdownContainer","DropDownSearchField","FieldContentContainer","FieldDropdownContainer","containerSyle","setTouched","updatingValue","setUpdatingValue","ReactDropdownSelectStyle","convert12hto24h","time12h","numericTime","modifier","hours","minutes","time24h","parse","settingState","store","getState","timezone","toLocaleString","timeZone","convertDateToLocaleTimeZone","convert24hto12h","getHours","getMinutes","convertHHMMSSStringToSeconds","timeStr","hour","minute","second","convertSecondsToHHMMSS","seconds","toISOString","substr","Icon","rotationTime","rotate","STATES","RotateButton","currentState","setCurrentState","setRotate","DeliTimePicker","popupClassName","StyledTimePicker","TimePicker","DefaultErrorContainerComponent","TimePickerField","TimePickerCss","ErrorContainerComponent","defaultOpenValue","fieldValue","SwitchField","transform","checked","onColor","default","BreakContainer","BreakLabel","ColumnContainer","buttonCss","ShiftSettings","enableOutput","dispatchPageDataChanged","bool","pageDataChanged","settingsInReducer","pageInfoChanged","sidebarReducer","setBreaksEnabled","console","log","enabledBreaks","onSubmitShift","switch2","switch3","shiftSettings","break1","break2","break3","postSettings","dispatchPostSettings","renderBreaks","flex","paddingRight","bk","adjustedInd","breakEnabled","breakName","switchName","breakStart","breakEnd","justifyContent","splitVal","moment","display","flexWrap","textAlign","backgroundColor","showHour","showMinute","showSecond","use12Hours","autocomplete","allowEmpty","marginLeft","initialValues","validationSchema","validateOnMount","onSubmit","setSubmitting","resetForm","formikProps","submitForm","setValidationSchema","padding","flexDirection","borderBottom","Textbox","PlotHeader","SinglePlotContainer","laptopL","PlotContainer","NoDataText","fontWeight","bold","PlotTitle","h2","ChartTypeButton","FormIcon","operator","axios","method","url","apiIPAddress","headers","getHeaders","dataJson","handleError","postReportEvent","reportEvent","getLogger","callback","api","reportEvents","reportEventsObj","station_id","current1","report_button_id","actionName","GET","REPORT_EVENTS","api_action","payload","createdReportEvent","POST","REPORT_EVENT","stationAnalytics","OverviewContainer","PlotsContainer","h4","live","week","year","all","StatisticsOverview","useParams","setDelayChartRender","widgetPageLoaded","widgetReducer","reportEventsReducer","setDateIndex","setTimespanDisabled","parentSortLevel","getAllData","getReportData","onTimeSpan","newTimeSpan","newDateIndex","newSortLevel","dataPromise","renderDateSelector","newIndex","pc","alignItems"],"mappings":"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","file":"static/js/21.ab36a37d.chunk.js","sourcesContent":["import React, { useContext, useEffect } from 'react';\n\n// Import component\nimport { ResponsiveBar } from '@nivo/bar'\nimport { linearGradientDef } from '@nivo/core'\n\n// Import utils\nimport { ThemeContext } from \"styled-components\";\n\nconst BarChart = (props) => {\n\n    const {\n        data,\n        colors,\n        selector,\n        mainTheme,\n        timeSpan,\n        axisBottom,\n        axisLeft,\n        horizontal,\n        layout,\n        enableGridX,\n        enableGridY,\n        ...rest\n    } = props\n\n    const themeContext = useContext(ThemeContext);\n\n    const theme = {\n        background: 'transparent',\n        fontFamily: 'sans-serif',\n        fontSize: 14,\n        textColor: themeContext.bg.senary,\n        whiteSpace: \"nowrap\",\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        axis: {\n            domain: {\n                line: {\n                    stroke: themeContext.bg.quinary,\n                    strokeWidth: 2\n                }\n            },\n            ticks: {\n                line: {\n                    stroke: themeContext.bg.senary,\n                    strokeWidth: 1\n                },\n                text: {\n\n                }\n            },\n            legend: {\n                text: {\n                    fontSize: 14,\n                }\n            }\n        },\n        grid: {\n            line: {\n                stroke: themeContext.bg.tertiary,\n                strokeWidth: 1\n            }\n        },\n        legends: {\n            text: {\n                fill: '#333333'\n            }\n        },\n        labels: {\n            text: {}\n        },\n        markers: {\n            lineColor: '#000000',\n            lineStrokeWidth: 1,\n            text: {}\n        },\n        dots: {\n            text: {}\n        },\n        // tooltip: {\n        //     container: {\n        //         background: 'white',\n        //         color: 'inherit',\n        //         fontSize: 'inherit',\n        //         borderRadius: '2px',\n        //         boxShadow: '0 1px 2px rgba(0, 0, 0, 0.25)',\n        //         padding: '5px 9px'\n        //     },\n        //     basic: {\n        //         whiteSpace: 'pre',\n        //         display: 'flex',\n        //         alignItems: 'center'\n        //     },\n        //     table: {},\n        //     tableCell: {\n        //         padding: '3px 5px'\n        //     }\n        // },\n        crosshair: {\n            line: {\n                stroke: '#000000',\n                strokeWidth: 1,\n                strokeOpacity: 0.75,\n                strokeDasharray: '6 6'\n            }\n        },\n        annotations: {\n            text: {\n                fontSize: 13,\n                outlineWidth: 2,\n                outlineColor: '#ffffff'\n            },\n            link: {\n                stroke: '#000000',\n                strokeWidth: 1,\n                outlineWidth: 2,\n                outlineColor: '#ffffff'\n            },\n            outline: {\n                fill: 'none',\n                stroke: '#000000',\n                strokeWidth: 2,\n                outlineWidth: 2,\n                outlineColor: '#ffffff'\n            },\n            symbol: {\n                fill: '#000000',\n                outlineWidth: 2,\n                outlineColor: '#ffffff'\n            }\n        }\n    }\n\n\n    // if (data === null || data === undefined) { return null }\n    return (\n        <ResponsiveBar\n            data={selector ? data[selector] : data}\n            keys={['y']}\n            // borderColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\n            indexBy='x'\n            // indexScale={{ type: 'band', round: true }}\n            animate={false}\n            // colors={{ scheme: 'nivo' }}\n            colors={colors}\n            borderColor={{ from: 'color' }}\n            // borderColor='#d177ed'\n            // xScale={{ type: 'time', format: '%Y-%m-%d %H:%M:%S', useUTC: false, precision: 'second', }}\n            // xFormat={'time:' + format}\n            // xFormat=\"time:%Y-%m-%d\"\n            // yScale={{ type: 'linear', min: 'auto', max: 'auto', stacked: false, reverse: false }}\n            margin={{ top: 20, left: 80, right: 80, bottom: 75 }}\n            // padding={{ top: 5, left: 5, right: 5, bottom: 5 }}\n            layout={layout}\n            labelTextColor={themeContext.bg.primary}\n\n            axisTop={null}\n            axisRight={null}\n            axisBottom={{\n                tickSize: 5,\n                // tickPadding: layout === \"horizontal\" ? 10 : -40,\n                // translateY: -25\n                legendOffset: 60,\n                tickRotation: 45,\n                legend: '',\n                fontSize: \"8rem\",\n                legendPosition: 'middle',\n                // legendOffset: 50,\n                ...axisBottom\n            }}\n            axisLeft={{\n                tickSize: 5,\n                zIndex: 200,\n                tickValues: 5,\n                // anchor: \"right\",\n                // tickPadding: layout === \"horizontal\" ? 40 : 4,\n                tickRotation: 0,\n                legend: 'Units',\n                legendPosition: 'middle',\n                legendOffset: -50,\n                ...axisLeft\n            }}\n\n            // defs={[\n            //     // using helpers\n            //     // will inherit colors from current element\n            //     linearGradientDef('gradientA', [\n            //         { offset: 0, color: 'inherit' },\n            //         { offset: 100, color: 'inherit', opacity: 0 },\n            //     ]),\n            //     linearGradientDef('gradientB', [\n            //         { offset: 0, color: '#000' },\n            //         { offset: 100, color: 'inherit' },\n            //     ]),\n            // ]}\n\n            // fill={[\n            //     // match using object query\n            //     { match: y => y < 10, id: 'gradientA' },\n            //     // match using function\n            //     { match: y => y >=, id: 'gradientB' }\n            // ]}\n\n            theme={theme}\n            enableGridY={enableGridY}\n            enableGridX={enableGridX}\n            gridYValues={5}\n            {...rest}\n\n        // legends={[{\n        //     fontSize: '1rem'\n        // }]}\n\n        />\n    )\n}\n\n// Specifies propTypes\nBarChart.propTypes = {\n};\n\n// Specifies the default values for props:\nBarChart.defaultProps = {\n    layout: \"vertical\",\n    enableGridX: false,\n    enableGridY: false,\n    colors: [\n        \"#0094d9\",\n        \"#6d8fe8\",\n        \"#b085e5\",\n        \"#e876cf\",\n        \"#ff6caa\",\n        \"#ff717b\",\n        \"#ff8849\",\n        \"#ffa600\",\n    ]\n};\n\nexport default BarChart","import styled, { css } from \"styled-components\";\n\nexport const Container = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n`\n\nexport const Label = styled.p`\n    margin: 0;\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz3};\n    user-select: none;\n    margin-right: .5rem;\n    white-space: nowrap;\n`","import React, { useState, } from 'react';\nimport PropTypes from 'prop-types';\n\n// Import styles\nimport * as styled from './sort_dropdown.style'\n\n// Import components\nimport DropDownSearch from '../drop_down_search_v2/drop_down_search'\nimport RotateButton from '../rotate_button/rotate_button'\n\nconst SortDropDown = (props) => {\n\n    const {\n        labelField,\n        valueField,\n        options,\n        values,\n        onChange,\n        mapInput,\n        mapOutput,\n\n        label,\n        placeholder,\n\n        labelStyle,\n        dropDownSearchStyle,\n        schema,\n        containerCss,\n        dropdownCss,\n        valueCss,\n        portal,\n        maxDropdownWidth,\n\n        orderEnabled,\n        onChangeOrderDirection,\n        rotateButtonContainerCss,\n        rotateButtonIconCss,\n\n\n        ...rest\n    } = props || {}\n\n\n    return (\n        <styled.Container>\n            <styled.Label style={{ ...labelStyle }}>{label}</styled.Label>\n            <DropDownSearch\n                maxDropdownWidth={maxDropdownWidth}\n                portal={portal}\n                placeholder={placeholder}\n                containerCss={containerCss}\n                dropdownCss={dropdownCss}\n                valueCss={valueCss}\n                options={options}\n                onChange={(values) => {\n                    onChange(mapOutput(values[0]))\n                }}\n                values={mapInput(values)}\n                labelField={labelField}\n                valueField={valueField}\n                schema={schema}\n                style={{ ...dropDownSearchStyle }}\n            />\n            {orderEnabled &&\n                <RotateButton\n                    schema={schema}\n                    iconName1={\"fas fa-arrow-up\"}\n                    containerCss={rotateButtonContainerCss}\n                    iconCss={rotateButtonIconCss}\n\n                    onStateOne={() => {\n                        onChangeOrderDirection('ascending')\n                    }}\n                    onStateTwo={() => {\n                        onChangeOrderDirection('descending')\n                    }}\n                />\n            }\n\n        </styled.Container >\n    )\n\n}\n\n// Specifies propTypes\nSortDropDown.propTypes = {\n    style: PropTypes.object,\n    mapInput: PropTypes.func,\n    mapOutput: PropTypes.func,\n    orderEnabled: PropTypes.bool,\n};\n\n// Specifies the default values for props:\nSortDropDown.defaultProps = {\n    label: 'Sort By:',\n    orderEnabled: false,\n    onChange: null,\n    mapInput: (val) => val,\n    mapOutput: (val) => val,\n    style: {}\n};\n\n\nexport default SortDropDown","import styled from 'styled-components'\n\nexport const RowContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n\n    // width: 100%;\n    min-width: 25rem;\n    max-width: 45rem;\n`\n\nexport const DateSelectorIcon = styled.i`\n    font-size: 1.5rem;\n    margin-right: 1rem;\n    margin-left: 1rem;\n    color: ${props => props.theme.bg.septenary};\n\n    &:hover{\n        cursor:pointer;\n    }\n`\n\nexport const DateSelectorTitle = styled.h1`\n    font-size: ${props => props.theme.fontSize.sz2};\n    font-family: ${props => props.theme.font.primary};\n    color: ${props => props.theme.bg.septenary};\n\n    margin: 0rem .5rem;\n\n`\nexport const LoadingIcon = styled.i`\n    font-size: 1.5rem;\n`","import React from 'react';\n\n// Import Styles\nimport * as styled from './day_selector.style'\n\nconst DaySelector = (props) => {\n\n    const {\n        date,\n        dateIndex,\n        loading,\n        mapInput,\n        mapOutput,\n        onChange,\n    } = props\n\n    return (\n        <styled.RowContainer>\n            <styled.DateSelectorIcon\n                className='fas fa-chevron-left'\n                onClick={() => {\n                    const index = dateIndex + 1\n                    onChange(mapOutput(index))\n                }}\n            />\n            {loading ?\n                <styled.LoadingIcon className=\"fas fa-circle-notch fa-spin\" />\n                :\n                <styled.DateSelectorTitle>{mapInput(date)}</styled.DateSelectorTitle>\n\n            }\n\n            {/* If the current dateIndex is 0, then have a blank icon that does nothing. Can't go to the future now can we dummy */}\n            {dateIndex !== 0 ?\n                <styled.DateSelectorIcon\n                    className='fas fa-chevron-right'\n                    onClick={() => {\n                        const index = dateIndex - 1\n                        onChange(mapOutput(index))\n                    }}\n                />\n                :\n                <styled.DateSelectorIcon />\n\n            }\n        </styled.RowContainer>\n    )\n}\n\nDaySelector.propTypes = {\n}\n\nDaySelector.defaultProps = {\n    date: '',\n    loading: false,\n    mapInput: (val) => val,\n    mapOutput: (val) => val,\n}\n\nexport default DaySelector","import styled from 'styled-components'\n\nexport const Container = styled.div`\n    /* position: absolute; */\n    /* left: 12rem; */\n    /* bottom: 3rem; */\n    /* right: 12rem; */\n    /* border-bottom: 0.02rem solid white; */\n    z-index: 1;\n    margin-bottom: 1rem;\n    display: flex;\n    justify-content:center;\n\n\n`;\n\nexport const TimespanButton = styled.button`\n    background: none;\n    border: none;\n    position: relative;\n\n    display: inline-block;\n    width: 5rem;\n    height: 2rem;\n    // margin: 0rem .25rem;\n    \n    color: ${props => props.selected ? props.theme.schema.locations : props.theme.bg.quaternary};\n    line-height: 2rem;\n    text-align: center;\n    font-size: 1rem;\n    font-weight: ${props => props.selected ? 600 : 400};\n    font-family: ${props => props.theme.font.primary};\n\n    border-bottom: ${props => props.selected ? '0.14rem' : '0.02rem'} solid ${props => props.selected ? props.color : props.theme.quaternary};\n    box-sizing: border-box;\n\n    transition: color 0.25s;\n\n    cursor: pointer;\n    z-index: 2;\n    &:focus {outline:0;}\n    &:hover {\n        color: ${props => props.color};\n    }\n`;","import React from 'react';\n\nimport * as styled from './time_span_selector.style'\n\nconst TimeSpanSelector = (props) => {\n\n    const {\n        timeSpan,\n        setTimeSpan,\n        timespanDisabled,\n    } = props\n\n    return (\n        <styled.Container>\n            {/* <styled.TimespanButton selected={timeSpan == 'live'} onClick={() => setTimeSpan('live')}>Live</styled.TimespanButton> */}\n            <styled.TimespanButton disabled={timespanDisabled} selected={(timeSpan === 'day' || timeSpan === 'line')} onClick={() => setTimeSpan('day')}>Day</styled.TimespanButton>\n            <styled.TimespanButton disabled={timespanDisabled} selected={timeSpan === 'week'} onClick={() => setTimeSpan('week')}>Week</styled.TimespanButton>\n            <styled.TimespanButton disabled={timespanDisabled} selected={timeSpan === 'month'} onClick={() => setTimeSpan('month')}>6 Weeks</styled.TimespanButton>\n            <styled.TimespanButton disabled={timespanDisabled} selected={timeSpan === 'year'} onClick={() => setTimeSpan('year')}>Year</styled.TimespanButton>\n            {/* <styled.TimespanButton schema={schema} selected={timeSpan == 'all'} onClick={() => setTimeSpan('all')}>ALL</styled.TimespanButton> */}\n        </styled.Container>\n    )\n}\n\nexport default TimeSpanSelector","import styled from 'styled-components'\n\nexport const StatisticsContainer = styled.div`\n    height: 100%;\n    width: 100%;\n\n    background: ${props => props.theme.bg.secondary};\n`\n\nexport const StatisticsSectionsButtonContainer = styled.div`\n    display: flex;\n    /* position: absolute; */\n    text-align: center;\n    justify-content: center;\n    left: 0;\n    right: 0;\n    top: .5rem;\n    margin-left: auto;\n    margin-right: auto;\n    margin-top: 0.5rem;\n    width: 15rem;\n    /* background-color: red; */\n`\n\nexport const StatisticsSectionsButton = styled.button`\n    font-size: 1.5rem;\n    width: 10rem;\n    border: none;\n    font-family: ${props => props.theme.font.primary};\n\n    box-shadow: ${props => props.selected ? 'none' : '0 0.1rem 0.2rem 0rem #303030'};\n\n    z-index: ${props => props.selected ? '0' : '1'};\n    background-color: ${props => !props.selected ? props => props.theme.bg.septenary : props => props.theme.bg.senary};\n\n    transition: background-color 0.25s ease, box-shadow 0.1s ease;\n\n    &:focus{\n        outline: 0 !important\n    }\n\n    &:active{\n        box-shadow: none;\n    }\n\n    &:hover{\n        background-color: ${props => props.theme.bg.quaternary};\n    }\n`\n\nexport const StatisticsDownloadButton = styled.button`\n    display: auto;\n    position: absolute;\n    right: 1rem;\n    top: 1rem;\n    border: none;\n    border-radius: .5rem;\n    width: 10rem;\n    height: 3rem;\n    font-family: ${props => props.theme.font.primary};\n\n    box-shadow: 0 0.1rem 0.2rem 0rem #303030;\n\n    transition: background-color 0.25s ease, box-shadow 0.1s ease;\n\n\n    &:focus{\n        outline: 0 !important\n    }\n\n    &:active{\n        box-shadow: none;\n    }\n\n    &:hover{\n        background-color: ${props => props.theme.bg.tertiary};\n    }\n\n    @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n        display: none;\n    }\n`\nexport const Header = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    position: relative;\n\tbackground: ${props => props.theme.bg.primary};\n    box-shadow: ${props => props.theme.cardShadow};\n  \twidth: 100%;\n      \n  \tpadding: 1rem;\n    z-index: 100;\n`\n\nexport const StationName = styled.h1`\n    text-align: center;\n    color: ${props => props.theme.bg.septenary};\n    font-family: ${props => props.theme.font.primary};\n`\n\nexport const StatisticsSectionsContainer = styled.div`\n    display: flex;\n    height: 100%;\n    width: 100%;\n    justify-content: center;\n    align-items: center;\n    flex-direction:column;\n`\n\nexport const HeaderSection = styled.div`\n    display: flex;\n    flex-direction:row;\n    align-items: center;\n    justify-content: center;\n    position: absolute;\n    right: 1rem;\n\n`\n\nexport const HeaderSectionTitle = styled.h5`\n    text-align: center;\n    color: ${props => props.theme.bg.septenary};\n    font-family: ${props => props.theme.font.primary};\n`","import React, { useContext, useRef, useEffect } from 'react';\n\n// Import Styles\nimport * as styled from './charts.style'\n\nimport { ThemeContext } from 'styled-components';\n\n\n// Import Charts\nimport BarChart from '../../chart_types/bar_chart'\nimport { TIME_SPANS } from \"../statistics_overview\";\n\nconst ReportChart = (props) => {\n\n    const themeContext = useContext(ThemeContext);\n\n    const {\n        reportButtons,\n        reportData,\n        isThroughputLoading,\n        timeSpan,\n        isWidget,\n    } = props\n\n    // get array of report buttons for current station\n    const reportButtonsArr = Object.values(reportButtons)\n\n    // get just the names of the buttons as an array\n    const reportButtonNames = (reportButtonsArr && Array.isArray(reportButtonsArr)) ? reportButtonsArr.map((currButton) => currButton.label) : []\n\n    // data comes from back end with the key of the button as the key and the value as the count, but we want the name of the button\n    // therefore, must map through each item and replace the button's id with its name\n    const filteredData = useRef([]);\n    const filteredDataColors = useRef({});\n\n    useEffect(() => {\n        filteredData.current = (reportData && reportData.reports && Array.isArray(reportData.reports)) ?\n            reportData.reports.map((currReport) => {\n\n                const {\n                    lable, // extract label\n                    ...currReportEntries // this contains the button keys followed by their count as the value\n                } = currReport\n\n                // create object for storing new key value paies (buttonName: count)\n                var updatedReport = {\n                    lable\n                }\n\n                const currReportButtonIds = Object.keys(currReportEntries)\n\n                currReportButtonIds.forEach((currButtonId) => {\n\n                    // if there is a button with the corresponding id\n                    if (reportButtons[currButtonId]) {\n                        // Map colors of filtered data\n                        filteredDataColors.current[reportButtons[currButtonId].label] = reportButtons[currButtonId].color\n                        // get the label from the actual button, and get the count from the entry, then add it to the updated report\n                        updatedReport[reportButtons[currButtonId].label] = currReportEntries[currButtonId] ? currReportEntries[currButtonId] : 0\n                    }\n                })\n\n                return updatedReport\n            })\n            :\n            []\n    }, [reportData])\n\n    // set min height based on number of entries so chart won't squeeze rows too close together\n    const minHeight = (filteredData.current && Array.isArray(filteredData.current)) ? filteredData.current.length : 0\n\n    return (\n        <styled.SinglePlotContainer\n            minHeight={minHeight}\n            // Margin bottom is used to be able to scroll to the bottom and see the report graph\n            style={{ marginBottom: '7rem' }}\n        >\n            {isWidget &&\n                <styled.PlotHeader>\n                    <styled.PlotTitle>Reports</styled.PlotTitle>\n                </styled.PlotHeader>\n            }\n\n\n            {isThroughputLoading ?\n                <styled.PlotContainer>\n                    <styled.LoadingIcon className=\"fas fa-circle-notch fa-spin\" style={{ fontSize: '3rem', marginTop: '5rem' }} />\n                </styled.PlotContainer>\n                :\n                <styled.PlotContainer\n                    minHeight={minHeight}\n                >\n                    <BarChart\n                        data={filteredData.current}\n                        colors={bar => !!filteredDataColors ? filteredDataColors.current[bar.id] : themeContext.theme.schema.statistics.solid}\n                        keys={reportButtonNames}\n                        indexBy={'lable'}\n                        colorBy={\"id\"}\n                        mainTheme={themeContext}\n                        timeSpan={timeSpan}\n                        layout={\"vertical\"}\n                        enableGridY={true}\n                        axisBottom={{\n                            legend: TIME_SPANS[timeSpan]?.displayName || TIME_SPANS.day.displayName,\n                            tickRotation: timeSpan === TIME_SPANS.month.name ? 0 : -90,\n                        }}\n                        axisLeft={{\n                            legend: 'Count'\n                        }}\n                    />\n\n                    {!reportData &&\n                        <styled.NoDataText>No Data</styled.NoDataText>\n                    }\n                </styled.PlotContainer>\n            }\n\n        </styled.SinglePlotContainer>\n    )\n}\n\nexport default ReportChart","import React, { useState, useMemo } from 'react';\nimport { useSelector } from 'react-redux'\n\n// Import Styles\nimport * as styled from '../../charts.style'\n\n// Import components\nimport ShiftSettings from '../../../../../../../side_bar/content/settings/shift_settings/shift_settings'\n\n// Import Charts\nimport { ResponsiveLine } from '@nivo/line'\n\n// Import utils\nimport { convert24htoEpoch, convertDateto12h, isDateToday } from '../../../../../../../../methods/utils/time_utils'\nimport { deepCopy } from '../../../../../../../../methods/utils/utils';\n\nconst LineThroughputChart = (props) => {\n\n    const {\n        data,\n        themeContext,\n        isData,\n        date,\n        loading,\n        isWidget,\n    } = props\n\n    const settings = useSelector(state => state.settingsReducer.settings)\n\n    const [breaksEnabled, setBreaksEnabled] = useState({})\n    const [showForm, setShowForm] = useState(false)\n    const shiftDetails = settings.shiftDetails;\n\n    // Used for colors in line chart below\n    const colors = { Actual: themeContext.schema.statistics.solid, Expected: 'rgba(84, 170, 255, 0.4)' }\n\n    /**\n    * This converts the incoming data for a line graph\n    * IT does a few things\n    * 1) Converts incoming data to have the start and end of the shift\n    * 2) If theres an expected output, it adds thatline\n    * 3) if they're breaks, It adds those as well (pretty complex so see comments below)\n    *\n    * Uses usememo for performance reasons\n    */\n    const lineDataConverter = useMemo(() => {\n        // The array of converted incoming data\n        let convertedData = []\n\n        let dataCopy = deepCopy(data)\n        // Convert to epoch\n        const startEpoch = convert24htoEpoch(shiftDetails.startOfShift, date)\n        let startIndex\n\n        // Find Start of Shift in the data based on selected input\n        for (let i = 0; i < dataCopy.length; i++) {\n            const dataDate = dataCopy[i].x\n            // Go through the data until the time is equal to or after the start of shift input\n            if (dataDate >= startEpoch) {\n                startIndex = i\n                break\n            }\n        }\n\n        if (dataCopy[0]?.x > startEpoch) {\n            dataCopy.unshift({x: startEpoch, y: 0})\n        }\n        \n\n        // If startIndex is undefined, then the start of the shift is after any data points\n        if(startIndex === undefined){\n            startIndex = dataCopy.length\n        }\n        \n        // Convert end of shift to epoch\n        const endEpoch = convert24htoEpoch(shiftDetails.endOfShift, date)\n        let endIndex = dataCopy.length\n        // // Find end of Shift in the data based on selected input\n        // for (let i = 0; i < dataCopy.length; i++) {\n        //     const dataDate = dataCopy[i].x\n        //     // Go through the data until the time is  after the end of shift input and take the vlaue before that one\n        //     if (dataDate > endEpoch) {\n        //         endIndex = i\n        //         break\n        //     }\n        // }\n\n        // dataCopy = dataCopy.slice(startIndex, endIndex)\n        // Modify y values to be stacked (IE add the next value to the total previous sum)\n        let stack = 0\n        for (const point of dataCopy) {\n            convertedData.push({ x: point.x, y: stack + point.y })\n            stack += point.y\n        }\n\n\n        // Delete all points after the end of the shift if there are any\n        // let pointsAfterShiftEnd = []\n        // for (let point of convertedData) {\n        //     if (point.x > endEpoch) {\n        //         const ind = convertedData.indexOf(data => data.x === point.x)\n        //         pointsAfterShiftEnd.push(ind)\n        //     }\n        // }\n        // pointsAfterShiftEnd.forEach((point) => {\n        //     convertedData.splice(point, 1)\n        // })\n\n        // Add 0 for the start of the shift\n        // convertedData.unshift({ x: startEpoch, y: 0 })\n\n        // Add the last value in converted data to the end of the shift\n        // Only do this though if 2 things\n        // 1) its not today\n        // 2) it is today but the end of the shift is after the current time\n        // This allows for the line chart to be a bit more readable when your shift hasnt finished yet\n        // if (!isDateToday(date) || (!!isDateToday(date) && Date.now() > endEpoch)) {\n        //     convertedData.push({ x: endEpoch, y: convertedData[convertedData.length - 1].y })\n        // }\n\n        // This is the array of data that is passed to the line chart\n        let expectedOutput = []\n\n        // These are the steps it takes to account for breaks\n        // 1s) Create an array of minutes between the start and end of the shift\n        // 2s) Subtract time that belongs to breaks\n        // 3s) Find expected output sum for each point found in step 2\n        // 4s) Find Y value for each existing point (start of shift, breaks, end of shift) in expected output line in the array generated in step 3\n\n        // 1s) Create an array of minutes between the start and end of the shift\n        // Iterates I by 1 minute in epoch times (1000 (converts to seconds) * 60 (converts to minutes))\n\n        // This array is used to find indexes in the expected output where a slope should be applied to\n        // IE, where the expected output is not stagnant (part of a break)\n        let slopeValues = []\n        for (let i = startEpoch; i <= endEpoch; i = i + 60000) {\n            slopeValues.push(i)\n        }\n\n        // Add Expected output\n        if (!!shiftDetails.expectedOutput) {\n\n            // Add the beginning and end of each shift\n            expectedOutput.push({ x: startEpoch, y: 0 })\n            expectedOutput.push({ x: endEpoch, y: shiftDetails.expectedOutput })\n\n            /**\n             * This handles breaks\n             * 1b) Finds where the start and end of the break belong inside of the expected output array and adds\n             * 2b) Subtracts the breaks corresponding minutes from the slopeValues\n             * 3b) Adds the start of the break to the start of breaks array to be used to find the y value of the end of the break\n             */\n            let startOfBreaks = []\n            const breaks = Object.values(shiftDetails.breaks)\n            breaks.forEach((br, ind) => {\n                if (!br.enabled) return\n                const start = convert24htoEpoch(br.startOfBreak, date)\n                const end = convert24htoEpoch(br.endOfBreak, date)\n\n                // 1b) Find where the x value fits\n                for (let i = 0; i < expectedOutput.length; i++) {\n                    const output = expectedOutput[i]\n                    const nextOutput = expectedOutput[i + 1]\n\n                    // If the output x is less or equal to the start and the next output is greater or equal to the start, then this is where the break belongs in the expectedOutput\n                    if (output.x <= start && nextOutput.x >= start) {\n                        expectedOutput.splice(i + 1, 0, { x: start, y: 0 })\n                        expectedOutput.splice(i + 2, 0, { x: end, y: 0 })\n                        break\n                    }\n                }\n\n                // 2s/2b) Subtract time that belongs to breaks (start at the next minut after the break starts)\n                for (let i = start + 60000; i <= end; i = i + 60000) {\n                    slopeValues = slopeValues.filter(item => item !== i)\n                }\n\n                // 3b) Add the start of the break\n                startOfBreaks.push(start)\n\n            })\n\n            // 3s/4s)\n            // Add slope y points to matching points in expected output\n            slopeValues.forEach((val, ind) => {\n                expectedOutput.forEach((output, ind2) => {\n                    if (output.x !== val) {\n                        return\n                    }\n                    else {\n                        expectedOutput[ind2].y = (ind / (slopeValues.length - 1)) * shiftDetails.expectedOutput\n                    }\n                })\n            })\n\n            // 4s)\n            // Add stagnent y points for each break\n            expectedOutput.forEach((output, ind) => {\n\n                // Add the start of the break y value to the end of the break\n                // Ideally this is the next output after the start of the break\n                if (startOfBreaks.includes(output.x)) {\n                    expectedOutput[ind + 1].y = expectedOutput[ind].y\n                }\n            })\n\n        }\n\n\n\n        // These next 2 maps add the corresspoding points from each line to the other line\n        // This allows for direct comparison between where you should be vs where you are\n\n        // Update expected to have the same x values as converted\n        convertedData.forEach((output, ind) => {\n            let inExpected = false\n\n            // Go through expected and see if the value is in it\n            for (let i = 0; i < expectedOutput.length; i++) {\n                const expOutput = expectedOutput[i]\n                // If the x's are the same, then its in it\n                if (output.x === expOutput.x) {\n                    inExpected = true\n                    break\n                }\n            }\n\n            // If not in expected, add it\n            if (!inExpected) {\n                // Find where it belongs\n                for (let i = 0; i < expectedOutput.length; i++) {\n                    const expOutput = expectedOutput[i]\n                    const nextExpOutput = expectedOutput[i + 1]\n\n                    if (nextExpOutput === undefined) {\n                        continue\n                    }\n\n                    // If the output is greater then the expoutput and less then the next exp output, it belongs hur\n                    else if (expOutput.x <= output.x && (nextExpOutput === undefined || nextExpOutput.x >= output.x)) {\n\n                        // Find the value of y at the output x point using y = mx + b\n                        // Point 1 on the slope is the expOutput and point 2 is the nextExpOutput\n                        const m = (nextExpOutput.y - expOutput.y) / (nextExpOutput.x - expOutput.x)\n                        const b = expOutput.y - m * expOutput.x\n                        const yValue = m * output.x + b\n                        expectedOutput.splice(i + 1, 0, { x: output.x, y: yValue })\n                        break\n                    }\n                }\n            }\n        })\n\n        if (expectedOutput.length > 0) {\n\n            // Do the same to converted\n            expectedOutput.map((output, ind) => {\n                let inExpected = false\n\n                // Go through expected and see if the value is in it\n                for (let i = 0; i < convertedData.length; i++) {\n                    const expOutput = convertedData[i]\n                    // If the x's are the same, then its in it\n                    if (output.x === expOutput.x) {\n                        inExpected = true\n                        break\n                    }\n                }\n\n                // If not in expected, add it\n                if (!inExpected) {\n                    // Find where it belongs\n                    for (let i = 0; i < convertedData.length; i++) {\n                        const expOutput = convertedData[i]\n                        const nextExpOutput = convertedData[i + 1]\n\n                        if(!nextExpOutput){\n                            break\n                        }\n\n                        // If the output is greater then the expoutput and less then the next exp output, it belongs hur\n                        if (expOutput.x <= output.x && nextExpOutput.x >= output.x) {\n\n                            // Find the value of y at the output x point using y = mx + b\n                            // Point 1 on the slope is the expOutput and point 2 is the nextExpOutput\n                            const m = (nextExpOutput.y - expOutput.y) / (nextExpOutput.x - expOutput.x)\n                            const b = expOutput.y - m * expOutput.x\n                            const yValue = m * output.x + b\n                            convertedData.splice(i + 1, 0, { x: output.x, y: yValue })\n                            break\n                        }\n                    }\n                }\n            })\n        }\n\n\n        // Now convert all x values to times from Epoch\n        // Nivo cant handle epoch for some reason\n        convertedData.forEach((data, i) => {\n            convertedData[i] = { x: new Date(data.x), y: data.y }\n        })\n\n        expectedOutput.forEach((data, i) => {\n            expectedOutput[i] = { x: new Date(data.x), y: parseFloat(data.y) }\n        })\n\n        const lineData = [{\n            \"id\": 'Actual',\n            \"color\": themeContext.bg.octonary,\n            \"data\": convertedData\n\n        },\n        {\n            \"id\": 'Expected',\n            \"color\": themeContext.bg.octonary,\n            \"data\": expectedOutput\n\n        },\n        ]\n        return lineData\n    }, [shiftDetails, data])\n\n    // console.log(lineDataConverter)\n\n\n    const renderResponsiveLine = useMemo(() => {\n\n        return (\n            <styled.PlotContainer style={{ flexGrow: '7' }} minHeight={27}>\n                <ResponsiveLine\n                    data={lineDataConverter}\n                    // data={!!convertedData ? convertedData : []}\n                    colors={line => colors[line.id]}\n\n                    xScale={{ type: \"time\" }}\n                    xFormat={(value) => convertDateto12h(value)}\n                    yFormat={value => Math.round(value)}\n                    yScale={{ type: 'linear', min: 'auto', max: 'auto', stacked: false, reverse: false }}\n\n                    axisTop={null}\n                    axisRight={null}\n                    axisBottom={{ format: (value) => convertDateto12h(value) }}\n\n                    axisLeft={{\n                        orient: 'left',\n                        tickSize: 5,\n                        tickPadding: 5,\n                        tickOffset: 10,\n                        tickValues: 4\n                    }}\n                    axisLeft={{\n                        enable: true,\n                    }}\n\n                    animate={false}\n                    useMesh={true}\n\n                    enablePoints={true}\n                    // pointLabel={(value) => `${convertDateto12h(value.x)}:${value.y}`}\n                    pointSize={5}\n                    pointBorderWidth={1}\n                    pointBorderColor={{ from: 'white' }}\n                    pointLabelYOffset={-12}\n\n                    margin={{ top: 22, left: 70, right: 70, bottom: 32 }}\n                    enableGridY={isData ? true : false}\n\n                    // curve=\"monotoneX\"\n                    // mainTheme={themeContext}\n                    legends={[\n                        {\n                            anchor: 'top-left',\n                            direction: 'column',\n                            justify: false,\n                            translateX: 10,\n                            translateY: 0,\n                            itemsSpacing: 0,\n                            itemDirection: 'left-to-right',\n                            itemWidth: 80,\n                            itemHeight: 20,\n                            itemOpacity: 0.75,\n                            symbolSize: 12,\n                            symbolShape: 'circle',\n                            symbolBorderColor: 'rgba(0, 0, 0, .5)',\n                            effects: [\n                                {\n                                    on: 'hover',\n                                    style: {\n                                        itemBackground: 'rgba(0, 0, 0, .03)',\n                                        itemOpacity: 1\n                                    }\n                                }\n                            ]\n                        }]}\n                    theme={{\n\n                        textColor: themeContext.bg.octonary,\n                        axis: {\n                            ticks: {\n                                line: {\n                                    stroke: \"fff\",\n                                },\n                                // text: {\n                                //     fill: \"fff\",\n                                //     textColor: '#ffffff',\n                                //     // fontFamily: 'Montserrat',\n                                //     fontSize: \"0.8rem\"\n                                // },\n                            }\n                        },\n                        grid: {\n                            line: {\n                                stroke: 'rgba(0, 0, 0, 0.1)',\n                                strokeWidth: 1,\n                            }\n                        },\n                        crosshair: {\n                            line: {\n                                stroke: \"#fff\",\n                                strokeDasharray: \"0\"\n                            }\n                        }\n                    }}\n\n                />\n\n\n            </styled.PlotContainer>\n        )\n    }, [lineDataConverter])\n\n    return (\n        <styled.RowContainer>\n            {breaksEnabled !== null &&\n                <>\n                    {renderResponsiveLine}\n\n                    {isWidget &&\n                        <>\n                            { showForm &&\n                                <div style={{ flexGrow: '3' }}>\n                                    <ShiftSettings themeContext={themeContext} />\n                                </div>\n                            }\n                            <styled.FormIcon onClick={() => setShowForm(!showForm)} className=\"fas fa-cog\" />\n                        </>\n                    }\n\n                </>\n            }\n\n        </styled.RowContainer >\n    )\n\n\n}\n\n\nexport default LineThroughputChart\n","import React, { useState, useEffect, useContext, useRef, useMemo } from \"react\";\n\n// Import Styles\nimport * as styled from \"../charts.style\";\nimport { ThemeContext } from \"styled-components\";\n\n// Import Basic Components\nimport SortDropdown from \"../../../../../../basic/sort_dropdown/sort_dropdown\";\n\n// Import components\nimport LineThroughputChart from \"./line_throughput_chart/line_throughput_chart\";\n\n// Import Actions\nimport { getStationAnalytics } from \"../../../../../../../redux/actions/stations_actions\";\n\n// Import Charts\nimport BarChart from \"../../../chart_types/bar_chart\";\nimport { useSelector } from \"react-redux\";\nimport { isObject } from \"../../../../../../../methods/utils/object_utils\";\nimport { capitalizeFirstLetter } from \"../../../../../../../methods/utils/string_utils\";\nimport { TIME_SPANS } from \"../../statistics_overview\";\n\nconst minHeight = 0;\n\nconst ThroughputChart = (props) => {\n    const themeContext = useContext(ThemeContext);\n\n    const {\n        barData,\n        lineData,\n\n        loading,\n        timeSpan,\n        loadLineChartData,\n        loadBarChartData,\n        disableTimeSpan,\n        isWidget,\n        sortLevel,\n        setParentSortLevel,\n    } = props;\n\n    // redux state\n    const cards = useSelector((state) => state.cardsReducer.cards);\n    const tasks = useSelector((state) => state.tasksReducer.tasks);\n    const productGroups =\n        useSelector((state) => {\n            return state.lotTemplatesReducer.lotTemplates;\n        }) || {};\n\n    const [showBar, setShowBar] = useState(true);\n    const [isData, setIsData] = useState(false);\n    const [chartKeys, setChartKeys] = useState(false);\n\n    const [formattedBarData, setFormattedBarData] = useState([])\n    const [formattedLineData, setFormattedLineData] = useState([])\n\n    const dropDownOptions = [\n        { label: \"Product Group\", value: \"product_group_id\" },\n        { label: \"Lot\", value: \"lot_id\" },\n        { label: \"Route\", value: \"route_id\" },\n    ];\n\n    useEffect(() => {\n        if (showBar || isWidget) {\n            disableTimeSpan(false);\n        } else {\n            disableTimeSpan(true);\n        }\n    }, [showBar]);\n\n    // UseEffect for when to show a line chart or a bar chart\n    useEffect(() => {\n        if (timeSpan === \"line\") {\n            setShowBar(false);\n        } else {\n            setShowBar(true);\n        }\n    }, [timeSpan]);\n    \n    useEffect(() => {\n        if (showBar) formatBarData(barData);\n    }, [barData, sortLevel.value])\n\n    useEffect(() => {\n        formatLineData(lineData)\n    }, [lineData])\n\n    const formatLineData = (newData) => {\n        setFormattedLineData(newData?.throughPut);\n        setFormattedBarData([]);\n    }\n\n    const formatBarData = (newData) => {\n        let tempChartKeys = []; // keys for chart = object names\n        // let tempChartColors = {}\n        let tempFilteredData = [];\n        let deletedChartKeys = [];\n\n\n        newData?.throughPut?.forEach((currItem) => {\n            const { lable, ...sortedIds } = currItem || {};\n\n            let updatedItem = { lable }; // used for changing keys from object ids to object names, keep label the same\n\n            Object.entries(sortedIds)\n                .filter((currEntry) => {\n                    const [currKey, currVal] = currEntry;\n\n                    // remove entry if value is 0 to prevent showing a bunch of 0's on the axis\n                    return currVal > 0;\n                })\n                .forEach((currEntry, currIndex) => {\n                    const [currKey, currVal] = currEntry;\n\n                    // for null key, set default name and use value. This is for objectless routes\n                    if (currKey === null || currKey === \"null\") {\n                        // default name\n                        const currObjectName = `No ${sortLevel.label}`;\n\n                        // if name isn't in chart keys, add it, or else it won't show up on the chart\n                        if (!tempChartKeys.includes(currObjectName)) {\n                            tempChartKeys.push(currObjectName);\n                        }\n                        // add key,value pair to data item\n                        updatedItem[currObjectName] = currVal;\n                    }\n\n                    // route does have object id\n                    else {\n                        const onChartKeys = (name) => {\n                            // if name isn't in chart keys, add it, or else it won't show up on the chart\n                            if (!tempChartKeys.includes(name)) {\n                                tempChartKeys.push(name);\n                            }\n\n                            // add key,value pair to data item\n                            updatedItem[name] = currVal;\n                        };\n\n                        const onDeletedKeys = (key) => {\n                            // if this id isn't already in deletedObjs array, add it\n                            if (!deletedChartKeys.includes(key)) {\n                                deletedChartKeys.push(key);\n                            }\n\n                            // get index of id in deletedObjs arr\n                            const deletedObjKeyIndex =\n                                deletedChartKeys.indexOf(key);\n\n                            // create name using index\n                            const currObjectName = `Deleted ${\n                                sortLevel.label\n                            } ${deletedObjKeyIndex + 1}`;\n\n                            onChartKeys(currObjectName);\n                        };\n                        switch (sortLevel.value) {\n                            case \"product_group_id\":\n                                const currProductGroup =\n                                    productGroups[currKey];\n\n                                // object with id was found\n                                if (isObject(currProductGroup)) {\n                                    // get object name\n                                    const {\n                                        name: currProductGroupName = `Unnamed`,\n                                    } = currProductGroup || {};\n\n                                    // format\n                                    const currProductGroupNameCapitalized =\n                                        capitalizeFirstLetter(\n                                            currProductGroupName\n                                        );\n\n                                    onChartKeys(\n                                        currProductGroupNameCapitalized\n                                    );\n                                } else if (\n                                    currKey === \"BASIC_LOT_TEMPLATE\"\n                                ) {\n                                    onChartKeys(\"Basic\");\n                                }\n\n                                // object with id was NOT found\n                                else {\n                                    onDeletedKeys(currKey);\n                                }\n                                break;\n\n                            case \"lot_id\":\n                                const lot = cards[currKey];\n                                if (!!lot) {\n                                    onChartKeys(lot.name);\n                                } else {\n                                    onDeletedKeys(currKey);\n                                }\n                                break;\n\n                            case \"route_id\":\n                                const route = tasks[currKey];\n                                if (!!route) {\n                                    onChartKeys(route.name);\n                                } else {\n                                    onDeletedKeys(currKey);\n                                }\n                                break;\n\n                            default:\n                                break;\n                        }\n                    }\n                });\n\n            tempFilteredData.push(updatedItem);\n        });\n\n        setChartKeys(tempChartKeys);\n        setIsData(\n            tempFilteredData &&\n                Array.isArray(tempFilteredData) &&\n                tempFilteredData.length > 0\n        );\n        setFormattedBarData(tempFilteredData);\n        setFormattedLineData([]);\n    }\n\n    return (\n        <styled.SinglePlotContainer minHeight={minHeight}>\n            {isWidget && (\n                // If its a widget then have some elements here that control the data\n                // These elements all have callbacks to their parent component, which is statistics overveiw\n                <styled.PlotHeader>\n                    <styled.PlotTitle>Output</styled.PlotTitle>\n                    {/* <styled.ChartButton onClick={() => setShowBar(!showBar)} >Compare Expected output</styled.ChartButton> */}\n\n                    {(timeSpan === \"day\" || timeSpan === \"line\") && (\n                        <styled.RowContainer style={{ marginBottom: \".5rem\" }}>\n                            <styled.ChartTypeButton\n                                style={{\n                                    borderRadius: \".5rem 0rem 0rem .5rem\",\n                                }}\n                                onClick={() => {\n                                    loadBarChartData();\n                                }}\n                                selected={showBar}\n                            >\n                                Bar\n                            </styled.ChartTypeButton>\n                            <styled.ChartTypeButton\n                                style={{\n                                    borderRadius: \"0rem .5rem .5rem 0rem\",\n                                }}\n                                onClick={() => {\n                                    loadLineChartData();\n                                }}\n                                selected={!showBar}\n                            >\n                                Line\n                            </styled.ChartTypeButton>\n                        </styled.RowContainer>\n                    )}\n                    {timeSpan !== \"line\" && (\n                        <SortDropdown\n                            options={dropDownOptions}\n                            labelField={\"label\"}\n                            valueField={\"label\"}\n                            dropDownSearchStyle={{ minWidth: \"10rem\" }}\n                            onChange={(val) => {\n                                setParentSortLevel(val);\n                            }}\n                            values={[sortLevel]}\n                        />\n                    )}\n                </styled.PlotHeader>\n            )}\n\n            {loading ? (\n                <styled.PlotContainer>\n                    <styled.LoadingIcon\n                        className=\"fas fa-circle-notch fa-spin\"\n                        style={{ fontSize: \"3rem\" }}\n                    />\n                </styled.PlotContainer>\n            ) : (\n                <styled.PlotContainer minHeight={!!showBar ? minHeight : 27}>\n                    {!showBar ? (\n                        <LineThroughputChart\n                            themeContext={themeContext}\n                            data={formattedLineData ? formattedLineData : []}\n                            isData={isData}\n                            date={lineData?.date_title}\n                            isWidget={isWidget}\n                        />\n                    ) : (\n                        <BarChart\n                            data={formattedBarData ? formattedBarData : []}\n                            enableGridY={isData ? true : false}\n                            mainTheme={themeContext}\n                            timeSpan={timeSpan}\n                            axisBottom={{\n                                legend:\n                                    TIME_SPANS[timeSpan]?.displayName ||\n                                    TIME_SPANS.day.displayName,\n                                tickRotation: 45,\n                            }}\n                            axisLeft={{\n                                enable: true,\n                            }}\n                            keys={chartKeys}\n                            indexBy={\"lable\"}\n                            colorBy={\"id\"}\n                        />\n                    )}\n\n                    {!formattedBarData && !formattedLineData && <styled.NoDataText>No Data</styled.NoDataText>}\n                </styled.PlotContainer>\n            )}\n        </styled.SinglePlotContainer>\n    );\n};\n\n// Specifies the default values for props:\nThroughputChart.defaultProps = {\n    sortLevel: { label: \"Product Group\", value: \"product_group_id\" },\n    disableTimeSpan: () => {}\n};\n\nexport default ThroughputChart;\n","import styled, { css } from \"styled-components\";\nimport { Container } from \"react-smooth-dnd\";\n\n// export const RouteContainer = styled.div`\n//     display: flex;\n//     flex: 1;\n//     flex-direction: column;\n//     background: yellow;\n// `\n\nconst minHeight = \"10rem\"\nexport const RotatedRouteName = styled.span`\n// background: red;\n\ttransform: rotate(-90deg);\n\t// transform: translateY(50%);\n`\n\n\nexport const StationContainerCss = css`\n\tdisplay: flex;\n    flex-direction: column;\n    min-height: ${minHeight};\n\n    width: ${props => props.isCollapsed ? \"2rem\" : \"15rem\"};\n    max-width: ${props => props.isCollapsed ? \"2rem\" : \"15rem\"};\n    min-width: ${props => props.isCollapsed ? \"2rem\" : \"15rem\"};\n    margin-right: 1rem;\n\n    border-radius: 1rem;\n    overflow: hidden;\n\n    color: ${props => props.theme.bg.octonary};\n`\n\nexport const StationContainer = styled.div`\n    ${StationContainerCss};\n`\n\nexport const StationHeader = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    justify-content: center;\n    align-items: center;\n    background: ${props => props.theme.bg.secondary};\n    padding: .5rem 1rem;\n`\n\nexport const HeaderRow = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    align-self: stretch;\n`\n\nexport const QuantityText = styled.span`\n    font-size: 1rem;\n    color: ${props => props.theme.textColor};\n`\n\nexport const HeaderContent = styled.div`\n    display: flex;\n    flex-direction: row;\n    width: 100%;\n    justify-content: space-between;\n    align-items: center;\n`\n\n\nexport const TitleContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n`\n\n\n\nexport const RouteContainer = styled.div`\n\tdisplay: flex;\n\tborder-bottom: 1px solid black;\n\twidth: 100%;\n`\n\nexport const LabelContainer = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\twhite-space: nowrap;\n\toverflow: hidden;\n\t// justify-content: space-between;\n`\n\nexport const StationLabel = styled.span`\n    text-align: center;\n    font-size: ${props => props.theme.fontSize.sz4};\n    border-bottom: 1px solid black;\n    width: 100%;\n    padding: .25rem;\n    background: ${props => props.theme.bg.senary};\n`\n\nexport const StationTitle = styled.span`\n    text-align: center;\n    font-size: ${props => props.theme.fontSize.sz3};\n    overflow: hidden;\n    text-overflow: ellipsis;\n    display: -webkit-box;\n    -webkit-line-clamp: 2; /* number of lines to show */\n    -webkit-box-orient: vertical;\n    color: ${props => props.theme.textColor};\n`\n\n\n\nexport const StationButton = styled.button`\n\n`\n\nexport const BodyContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\t// flex: 1;\n\tmin-height: ${minHeight};\n\toverflow: hidden;\n\tbackground: ${props => props.theme.bg.quaternary};\n\topacity: ${props => props.dragEnter ? 0.75 : 1};\n\tborder-bottom-right-radius: 1rem;\n\tborder-bottom-left-radius: 1rem;\n\tjustify-content: center;\n`\n\nexport const HeaderSection = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    width:100%;\n    justify-content: space-between;\n    overflow: hidden;\n    align-content: center;\n    margin: 0.2rem 0;\n    /* position: absolute; */\n    /* right: 1rem; */\n\n`\n\nexport const HeaderSectionTitle = styled.h5`\n    text-align: center;\n    color: ${props => props.theme.bg.septenary};\n    font-family: ${props => props.theme.font.primary};\n`\n\nexport const RowContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n`\n\nexport const divider = styled.hr`\n    border-top: .05rem solid;\n    border-color: ${props => props.theme.bg.quaternary};\n    border-radius: .25rem;\n    width: 100%;\n    margin: 0;\n`\n","import styled, { css } from \"styled-components\";\nimport * as commonCss from '../../../../../common_css/common_css'\n\nexport const ChartsContainer = styled.div`\n    ${commonCss.rowContainer}\n    flex-wrap: wrap;\n    flex: 9;\n`\n\nexport const RowContainer = styled.div`\n    ${commonCss.rowContainer}\n    background-color: ${props => props.theme.bg.primary};\n    border-radius: 0.5rem;\n    margin: 1.5rem;\n    box-shadow: ${props => props.theme.cardShadow};\n    position: relative;\n    /* align-items: center; */\n    /* overflow-y: scroll; */\n`\n\nexport const ProcessName = styled.h3`\n    padding: 0;\n    margin-top: .5rem;\n    margin-left: 2.25rem;\n    font-size: ${props => props.theme.fontSize.sz3};\n    color: ${props => props.theme.schema.lots.solid};\n    /* text-align: center; */\n    /* width: 20rem; */\n    /* max-width: 8rem; */\n    overflow: hidden;\n    text-overflow: clip;\n`\n\nexport const NameContainer = styled.div`\n    display: flex;\n    flex: 1;\n    align-items: center;\n    /* max-width: 8rem; */\n\n`\n\nexport const CollapseIcon = styled.i`\n    position: absolute;\n    align-content: center;\n    left: 1rem;\n    top: .5rem;\n    /* top: 50%; */\n    /* transform: translateY(-50%); */\n`\n","import styled, { css } from \"styled-components\";\nimport * as commonCss from '../../../../../../common_css/common_css'\nimport * as styles from '../../../cards/columns/station_column/station_column.style'\n\nexport const StationColumnContainer = styled.div`\n    height: fit-content;\n    width: fit-content;\n    margin: 1rem;\n    border-radius: .5rem;\n    background-color: ${props => props.theme.bg.primary};\n    max-width: 100rem;\n`\n\nexport const StationCollapsedContainer = styled.div`\n    width: 3rem;\n    height: 20rem;\n    background-color: ${props => props.theme.bg.primary};\n    box-shadow: ${props => props.theme.cardShadow};\n    position: relative;\n    margin: 1rem;\n    border-radius: .5rem;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`\n\nexport const RowContainer = styled.div`\n    ${commonCss.rowContainer}\n`\n\nexport const StationColumnHeader = styled.div`\n    width: 100%;\n    justify-content: center;\n    height: 2rem;\n    display: flex;\n    flex-direction: row;\n    position: relative;\n`\n\nexport const StationTitle = styled.p`\n    font-size: ${props => props.theme.fontSize.sz3};\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    color: ${props => props.theme.textColor};\n    margin: 0;\n    transform: ${props => !!props.rotated && 'rotate(90deg)'};\n`\n\nexport const StationDiv = styled.div`\n    width: 100%;\n    padding: 1rem;\n    height: 80%;\n    align-content: center;\n    overflow: hidden;\n`\n\nexport const CollapseIcon = styled.i`\n    position: absolute;\n    align-content: center;\n    left: 1rem;\n    top: .5rem;\n    /* top: 50%; */\n    /* transform: translateY(-50%); */\n`\n","import React, { useEffect, useState, useRef, useContext, memo } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\n\n// Import Components\nimport ThroughputChart from '../../../../../widgets/widget_pages/statistics_page/statistics_overview/charts/throughput_chart/throughput_chart'\nimport ReportChart from '../../../../../widgets/widget_pages/statistics_page/statistics_overview/charts/report_chart'\n\n// Import Styles\nimport * as styled from './station_column.style'\n\n// Import Actions\nimport { getStationAnalytics } from '../../../../../../redux/actions/stations_actions'\nimport { getReportAnalytics, getReportEvents } from \"../../../../../../redux/actions/report_event_actions\";\n\n// Import utils\nimport { convertArrayToObject } from '../../../../../../methods/utils/utils'\n\n\nconst StationColumn = (props) => {\n\n    const {\n        timeSpan,\n        dateIndex,\n        setDateTitle,\n        stationId = '',\n        showReport,\n        dataLoading,\n        sortLevel,\n    } = props\n\n    const stations = useSelector(state => state.stationsReducer.stations)\n    const dashboards = useSelector(state => state.dashboardsReducer.dashboards)\n\n    const dispatch = useDispatch()\n    const dispatchGetReportEvents = () => dispatch(getReportEvents());\n\n    const [lineData, setLineData] = useState({})\n    const [barData, setBarData] = useState({})\n\n    const [loading, setLoading] = useState(false)\n    const [collapsed, setCollapsed] = useState(false)\n    const [reportButtons, setReportButtons] = useState([])\n    const [reportData, setReportData] = useState(null)\n\n    const currentStation = stations[stationId] || {}\n\n    // get report buttons\n    useEffect(() => {\n\n        const dashboardId = currentStation.dashboards && Array.isArray(currentStation.dashboards) && currentStation.dashboards[0]\n        const dashboard = dashboards[dashboardId] ? dashboards[dashboardId] : {}\n        const currReportButtons = dashboard.report_buttons ? dashboard.report_buttons : []\n        setReportButtons(convertArrayToObject(currReportButtons, \"_id\"))\n\n    }, [currentStation, stations, dashboards])\n\n    // On page load, load in the data for today\n    useEffect(() => {\n        onGetAllData()\n        const dataInterval = setInterval(() => onGetAllData(), 30000)\n\n        return () => {\n            clearInterval(dataInterval)\n        }\n    }, [showReport, timeSpan, dateIndex, sortLevel])\n\n    const onGetAllData = () => {\n        if (!!showReport) {\n            dispatchGetReportEvents() // load report events\n\n            const body = { timespan: timeSpan, index: dateIndex }\n\n            onGetReportData(body)\n        } else {\n            onGetThroughputData()\n        }\n    }\n\n    const onGetReportData = async (body) => {\n        setLoading(true)\n        dataLoading(true)\n        const reportAnalyticsResponse = await getReportAnalytics(stationId, body)\n\n        if (reportAnalyticsResponse && !(reportAnalyticsResponse instanceof Error)) {\n            setReportData(reportAnalyticsResponse)\n            setDateTitle(reportAnalyticsResponse.date_title)\n        }\n        setLoading(false)\n        dataLoading(false)\n\n    }\n\n    const onGetThroughputData = () => {\n        dataLoading(true)\n        setLoading(true)\n        const body = { timespan: timeSpan, index: dateIndex, sort_index: sortLevel.value }\n        const dataPromise = getStationAnalytics(stationId, body)\n        \n        return dataPromise.then(response => {\n            if (response === undefined) return setLoading(false)\n            // Convert Throughput\n\n            if (timeSpan === 'line') {\n                let convertedThroughput = response.throughPut.map(dataPoint => {\n                    let convertedTime = dataPoint.x * 1000\n                    convertedTime = Math.round(convertedTime)\n                    return { x: convertedTime, y: dataPoint.y }\n                })\n                setLineData({\n                    ...response,\n                    throughPut: convertedThroughput\n                })\n            } else {\n                setBarData(response)\n            }\n\n            setDateTitle(response.date_title)\n            dataLoading(false)\n            setLoading(false)\n\n            return response;\n        })\n\n    }\n\n    return (\n        <>\n        {collapsed ?\n            <styled.StationCollapsedContainer>\n                <styled.CollapseIcon\n                    className=\"fa fa-chevron-right\"\n                    aria-hidden=\"true\"\n                    onClick={() => setCollapsed(false)}\n                />\n                <styled.StationDiv>\n                  <styled.StationTitle rotated={true}>\n                      {currentStation.name}\n                  </styled.StationTitle>\n                </styled.StationDiv>\n            </styled.StationCollapsedContainer >\n            :\n            <styled.StationColumnContainer >\n                <styled.StationColumnHeader>\n                    <styled.CollapseIcon\n                        className=\"fa fa-chevron-down\"\n                        aria-hidden=\"true\"\n                        onClick={() => setCollapsed(true)} />\n                    <styled.StationTitle>{currentStation.name}  {!showReport && ' - Output'}</styled.StationTitle>\n                </styled.StationColumnHeader >\n\n                {showReport ?\n                    <ReportChart\n                        reportButtons={reportButtons}\n                        reportDate={reportData}\n                        isThroughputLoading={loading}\n                        timeSpan={timeSpan}\n                        reportData={reportData}\n                    />\n                    :\n                    <ThroughputChart\n                        isWidget={false}\n                        timeSpan={timeSpan}\n                        sortLevel={sortLevel}\n\n                        lineData={lineData}\n                        barData={barData}\n\n                        loading={loading}\n                    />\n                }\n\n            </styled.StationColumnContainer >\n        }\n        </>\n\n    )\n}\n\nexport default StationColumn\n","import React, { useEffect, useMemo, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport VisibilitySensor from \"react-visibility-sensor\";\n\n// Import Styles\nimport * as styled from \"./station_columns.style\";\n\n// Import Component\nimport StationColumn from \"./station_column/station_column\";\n\n// Import Utils\nimport { getProcessStations } from \"../../../../../methods/utils/processes_utils\";\n\nconst StationColumns = (props) => {\n    const {\n        processId,\n        setDateTitle,\n        dateIndex,\n        timeSpan,\n        showReport,\n        dataLoading,\n        sortLevel,\n    } = props || {};\n\n    const processes = useSelector((state) => state.processesReducer.processes);\n    const routes = useSelector((state) => state.tasksReducer.tasks);\n    const stations = useSelector((state) => state.stationsReducer.stations);\n\n    const [collapsed, setCollapsed] = useState(false);\n\n    const renderStationColumn = useMemo(() => {\n        return processes[processId].flattened_stations.map((stationNode) => (\n            <VisibilitySensor partialVisibility={true}>\n                {({ isVisible }) => (\n                    <>\n                        {!!isVisible ? (\n                            <StationColumn\n                                key={stationNode.stationID}\n                                dateIndex={dateIndex}\n                                timeSpan={timeSpan}\n                                stationId={stationNode.stationID}\n                                showReport={showReport}\n                                setDateTitle={(title) => setDateTitle(title)}\n                                dataLoading={(loading) => dataLoading(loading)}\n                                sortLevel={sortLevel}\n                            />\n                        ) : (\n                            <div\n                                style={{\n                                    minHeight: \"20rem\",\n                                    width: \"80%\",\n                                    margin: \"2rem\",\n                                    color: \"grey\",\n                                }}\n                            >\n                                ...Loading\n                            </div>\n                        )}\n                    </>\n                )}\n            </VisibilitySensor>\n        ));\n    }, [dateIndex, timeSpan, showReport, sortLevel]);\n\n    return collapsed ? (\n        <styled.RowContainer>\n            <styled.NameContainer>\n                <styled.ProcessName>\n                    {processes[processId].name}\n                </styled.ProcessName>\n                <styled.CollapseIcon\n                    className=\"fa fa-chevron-right\"\n                    aria-hidden=\"true\"\n                    onClick={() => setCollapsed(false)}\n                />\n            </styled.NameContainer>\n        </styled.RowContainer>\n    ) : (\n        <styled.RowContainer>\n            <styled.NameContainer>\n                <styled.ProcessName>\n                    {processes[processId].name}\n                </styled.ProcessName>\n                <styled.CollapseIcon\n                    className=\"fa fa-chevron-down\"\n                    aria-hidden=\"true\"\n                    onClick={() => setCollapsed(true)}\n                />\n            </styled.NameContainer>\n\n            <styled.ChartsContainer>\n                {renderStationColumn}\n            </styled.ChartsContainer>\n        </styled.RowContainer>\n    );\n};\n\nexport default StationColumns;\n","import styled from \"styled-components\";\n\nexport const WarningIcon = styled.i`\n    color: ${props => props.color};\n    z-index: 10;\n    pointer-events:all;\n\n    // position: absolute;\n    // top: 50%;\n    // right: 1rem;\n    // transform: translateY(-50%);\n    // margin-left: 1rem;\n    opacity: ${props => props.visible ? 1 : 0};\n\n    position: relative;\n\n    z-index: 2;\n`;\n\nexport const StyledInput = styled.input`\n    width: 0;\n    height: 0;\n    position: absolute;\n    z-index: 0;\n    opacity:0;\n    cursor: default;\n\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n`;\n\nexport const IconContainer = styled.div`\n    //position: absolute;\n    width: auto;\n    height: auto;\n\n    position: absolute;\n    margin-bottom:1rem;\n    top: 50%;\n    right: 1rem;\n    transform: translateY(-50%);\n    margin-left: 1rem;\n`;\n","// import external dependencies\nimport React, { useState, useEffect, useRef } from 'react';\nimport ReactTooltip from \"react-tooltip\";\n\nimport Portal from \"../../../../higher_order_components/portal\";\n\nimport { uuidv4 } from '../../../../methods/utils/utils'\n\n// import styles\nimport * as styled from './error_tooltip.style';\nimport DropDownSearchField from \"../drop_down_search_field/drop_down_search_field\";\nimport theme from '../../../../theme'\n\nconst ErrorTooltip = (props) => {\n\n    const {\n        ContainerComponent,\n        text,\n        visible,\n        onClick,\n        className,\n        color,\n        containerStyle,\n        tooltip,\n        type\n    } = props\n\n    // target input for initial display of tooltip\n    const inputRef = useRef(null);\n\n    // required for initial display of tooltip\n    const [autoFocus, setAutoFocus] = useState(false);\n\n    // unique id for tooltip\n    const [id, setId] = useState(uuidv4());\n\n    // input is initially focused to show tooltip, then blurred after timeout to hide it\n    useEffect(\n        () => {\n            if (autoFocus) {\n                let timer1 = setTimeout(() => setAutoFocus(false), 3000)\n\n                // this will clear Timeout when component unmount like in willComponentUnmount\n                return () => {\n                    clearTimeout(timer1)\n                }\n            }\n\n        },\n        [] //useEffect will run only one time\n        //if you pass a value to array, like this [data] than clearTimeout will run every time this value changes (useEffect re-run)\n    )\n\n    // useEffect(() => {console.log('rebuild'); ReactTooltip.rebuild()}, [tooltip])\n\n\n    // useEffect(() => {\n    //     if (autoFocus) {\n    //         inputRef.current.focus();\n    //     } else {\n    //         inputRef.current.blur();\n    //     }\n    // }, [autoFocus]);\n\n    return (\n\n        <ContainerComponent\n            style={containerStyle}\n        >\n            {/*initial display on load*/}\n            {autoFocus && visible &&\n                //wrap in portal to avoid clipping issues\n                <Portal>\n                    <ReactTooltip style={{ zIndex: 20 }} delayShow={250} event={'focus'} eventOff={'blur'} id={id} effect='solid' type={type}>\n                        <span>{text}</span>\n                    </ReactTooltip>\n                </Portal>\n\n            }\n\n            {/* only show on hover after initial display */}\n            {!autoFocus && visible && tooltip &&\n                // NOTE: portal does not allow dynamic content\n                <div>\n                    <ReactTooltip eventOff={'mouseout'} id={id} effect='solid' type={type}>\n                        {text &&\n                            <span>{text}</span>\n                        }\n                        {tooltip && tooltip}\n                    </ReactTooltip>\n                </div>\n            }\n\n            {!autoFocus && visible && !tooltip &&\n                //wrap in portal to avoid clipping issues\n                <Portal>\n                    <ReactTooltip eventOff={'mouseout'} id={id} effect='solid' type={type}>\n                        {text &&\n                            <span>{text}</span>\n                        }\n                    </ReactTooltip>\n                </Portal> \n            }\n\n            {autoFocus &&\n                <styled.StyledInput\n                    visible={visible}\n                    ref={inputRef}\n                    readOnly={true}\n                    // hidden={true}\n                    // autoFocus={autoFocus}\n                    event={'focus'}\n                    data-tip\n                    data-for={id}\n                />\n            }\n\n            <styled.WarningIcon\n                visible={visible}\n                color={color}\n                className={className}\n                data-tip\n                data-for={id}\n                onClick={onClick}\n            />\n        </ContainerComponent>\n\n    );\n\n}\n\n// Specifies the default values for props:\nErrorTooltip.defaultProps = {\n    ContainerComponent: styled.IconContainer,\n    className: \"fas fa-exclamation-triangle\",\n    color: theme.main.error,\n    type: 'error'\n};\n\nexport default React.memo(ErrorTooltip);","import React from 'react';\nimport styled from '@emotion/styled';\nimport PropTypes from 'prop-types';\n\nclass ClickOutside extends React.Component {\n  container = React.createRef();\n\n  componentDidMount() {\n    document.addEventListener('click', this.handleClick,{capture:true, passive:true});\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('click', this.handleClick, true);\n  }\n\n  handleClick = (event) => {\n    const container = this.container.current;\n    const { target } = event;\n    const { onClickOutside } = this.props;\n\n    if ((container && container === target) || (container && !container.contains(target))) {\n      onClickOutside(event);\n    }\n  };\n\n  render() {\n    const { className, children, ClickOutsideComponent } = this.props;\n\n    return (\n      <ClickOutsideComponent className={className} ref={this.container}>\n        {children}\n      </ClickOutsideComponent>\n    );\n  }\n}\n\nconst DefaultClickOutsideComponent = styled.div`\n\n`;\n\nClickOutside.propTypes = {\n  onClickOutside: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string\n};\n\nClickOutside.defaultProps = {\n  ClickOutsideComponent: DefaultClickOutsideComponent\n};\n\n\nexport default ClickOutside;\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport styled from 'styled-components'\n\nimport { LightenDarkenColor } from '../../../../methods/utils/color_utils'\n\nfunction Label(props) {\n    return (\n        <props.LabelComponent>\n            {props.label}\n        </props.LabelComponent>\n    )\n}\n\nconst DefaultLabelComponent = styled.div`\n    width: 100%;\n    text-align: center;\n    font-weight: 200;\n\n    background: ${props => LightenDarkenColor(props.theme.bg.secondary, -10)};\n    color: ${props => props.theme.bg.quinary};\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz5};\n`\n\nLabel.propTypes = {\n    LabelComponent: PropTypes.elementType,\n    label: PropTypes.string,\n}\n\nLabel.defaultProps = {\n    LabelComponent: DefaultLabelComponent,\n    label: '',\n}\n\nexport default Label\n\n","export const valueExistInSelected = (value, values, props) =>\n  !!values.find((val) => getByPath(val, props['valueField']) === value);\n\nexport const hexToRGBA = (hex, alpha) => {\n  const RR = parseInt(hex.slice(1, 3), 16);\n  const GG = parseInt(hex.slice(3, 5), 16);\n  const BB = parseInt(hex.slice(5, 7), 16);\n\n  return `rgba(${RR}, ${GG}, ${BB}${alpha && `, ${alpha}`})`;\n};\n\nexport const debounce = (fn, delay = 0) => {\n  let timerId;\n\n  return (...args) => {\n    if (timerId) {\n      clearTimeout(timerId);\n    }\n    timerId = setTimeout(() => {\n      fn(...args);\n      timerId = null;\n    }, delay);\n  };\n};\n\nexport const isEqual = (a, b) => JSON.stringify(a) === JSON.stringify(b);\n\nexport const getByPath = (object, path) => {\n  // console.log('getByPath: {object, path}', {object, path})\n\n  let new_path = path.split('.')\n  // console.log('getByPath: new_path', {new_path})\n\n  if (!path) {\n    return;\n  }\n\n  return path.split('.').reduce((acc, value) => acc[value], object)\n};\n\nexport const getProp = (object, path, defaultValue) => {\n  if (!path) {\n    return object;\n  }\n\n  const normalizedPath = Array.isArray(path) ? path : path.split('.').filter((item) => item.length);\n\n  if (!normalizedPath.length) {\n    return object === undefined ? defaultValue : object;\n  }\n\n  return getProp(object[normalizedPath.shift()], normalizedPath, defaultValue);\n};\n","export const LIB_NAME = 'react-dropdown-select';\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport {getByPath} from '../util';\nimport { LIB_NAME } from '../constants';\n\nconst Option = ({ item, props, state, methods }) => {\n\n    const OptionComponent = props.OptionComponent ? props.OptionComponent : DefaultOptionComponent\n    return(\n        item && props.optionRenderer ? (\n          props.optionRenderer({ item, props, state, methods })\n        ) : (\n          <OptionComponent\n            role=\"listitem\"\n            disabled={props.disabled}\n            direction={props.direction}\n            className={`${LIB_NAME}-option`}\n            color={props.color}>\n            <span className={`${LIB_NAME}-option-label`}>{getByPath(item, props.labelField)}</span>\n            <span\n              className={`${LIB_NAME}-option-remove`}\n              onClick={(event) => methods.removeItem(event, item, props.closeOnSelect)}>\n              &times;\n            </span>\n          </OptionComponent>\n        )\n    );\n\n}\n\nexport const DefaultOptionComponent = styled.span`\n\n  padding: 0 5px;\n  border-radius: 2px;\n  line-height: 21px;\n  margin: 3px 0 3px 5px;\n  background: ${({ color }) => color};\n  color: #fff;\n  display: inline-flex;\n  flex-direction: ${({ direction }) => direction === 'rtl' ? 'row-reverse' : 'row'};\n  width: auto;\n  white-space: nowrap ;\n  \n  \n  .${LIB_NAME}-option-label {\n    width: auto;\n  }\n\n\n  .${LIB_NAME}-option-remove {\n    cursor: pointer;\n    width: 22px;\n    height: 22px;\n    display: inline-block;\n    text-align: center;\n    margin: 0 -5px 0 0px;\n    border-radius: 0 3px 3px 0;\n\n    :hover {\n      color: tomato;\n    }\n  }\n\n  :hover,\n  :hover > span {\n    opacity: 0.9;\n  }\n\n`;\n\n\n// Specifies the default values for props:\nOption.defaultProps = {\n    OptionComponent: DefaultOptionComponent,\n};\n\nexport default Option;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { valueExistInSelected } from '../util';\nimport * as PropTypes from 'prop-types';\nimport { LIB_NAME } from '../constants';\n\nconst handlePlaceHolder = (props, state) => {\n  const { addPlaceholder, searchable, placeholder } = props;\n  const noValues = state.values && state.values.length === 0;\n  const hasValues = state.values && state.values.length > 0;\n\n  if (hasValues && addPlaceholder && searchable) {\n    return addPlaceholder;\n  }\n\n  if (noValues) {\n    return placeholder;\n  }\n\n  if (hasValues && !searchable) {\n    return '';\n  }\n\n  return '';\n};\n\nclass Input extends Component {\n  input = React.createRef();\n\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.state.dropdown || (prevProps.state.dropdown !== this.props.state.dropdown && this.props.state.dropdown) ||\n      this.props.props.autoFocus\n    ) {\n      this.input.current.focus();\n    }\n\n    if (prevProps.state.dropdown !== this.props.state.dropdown && !this.props.state.dropdown) {\n       this.input.current.blur();\n    }\n  }\n\n  onBlur = (event) => {\n    event.stopPropagation();\n    if (!this.props.state.dropdown) {\n      return this.input.current.blur();\n    }\n\n    return this.input.current.focus();\n  };\n\n  handleKeyPress = (event) => {\n    const { props, state, methods } = this.props;\n\n    return (\n      props.create &&\n      event.key === 'Enter' &&\n      !valueExistInSelected(state.search, state.values, this.props) &&\n      state.search &&\n      state.cursor === null &&\n      methods.createNew(state.search)\n    );\n  };\n\n  render() {\n    const { props, state, methods, InputComponent } = this.props;\n\n    if (props.inputRenderer) {\n      return props.inputRenderer({ props, state, methods, inputRef: this.input });\n    }\n\n    return (\n      <InputComponent\n        ref={this.input}\n        tabIndex=\"-1\"\n        onFocus={(event) => event.stopPropagation()}\n        className={`${LIB_NAME}-input`}\n        size={methods.getInputSize()}\n        value={state.search}\n        readOnly={!props.searchable}\n        onClick={() => methods.dropDown('open')}\n        onKeyPress={this.handleKeyPress}\n        onChange={methods.setSearch}\n        onBlur={this.onBlur}\n        placeholder={handlePlaceHolder(props, state)}\n        disabled={props.disabled}\n        filled={props.filled}\n      />\n    );\n  }\n}\n\nexport const DefaultInputComponent = styled.input`\n    cursor: pointer;\n    line-height: inherit;\n\n    // width: ${props => props.filled ? `calc(${props.size}ch + 5px)` : `100%`};\n    width: ${props => `calc(${props.size}ch + 5px)`};\n\n    border: none;\n    margin-left: 5px;\n    background: transparent;\n    font-size: smaller;\n    ${({ readOnly }) => readOnly && 'cursor: pointer;'}\n    :focus {\n      outline: none;\n    }\n\n    vertical-align: middle;\n    line-height: 2rem;\n    height: 2rem;\n    \n    &::placeholder {\n      color: ${props => props.theme.bg.senary};\n    }\n    `;\n\nInput.propTypes = {\n    props: PropTypes.object,\n    state: PropTypes.object,\n    methods: PropTypes.object\n};\n\nInput.defaultProps = {\n    InputComponent: DefaultInputComponent\n};\n\nexport default Input;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport Option from './Option';\nimport Input from './Input';\nimport { LIB_NAME } from '../constants';\nimport { getByPath } from '../util';\n\nconst Content = ({ props, state, methods, ContentComponent, InputComponent }) => {\n  return (\n    <ContentComponent\n      className={`${LIB_NAME}-content ${\n        props.multi ? `${LIB_NAME}-type-multi` : `${LIB_NAME}-type-single`\n      }`}\n      onClick={(event) => {\n        event.stopPropagation();\n        methods.dropDown('open');\n      }}>\n      {props.contentRenderer ? (\n        props.contentRenderer({ props, state, methods })\n      ) : (\n        \n        <OptionsContainer multi={props.multi}>\n          {(props.multi || props.showSelectedBox)\n            ? state.values &&\n              state.values.map((item) => (\n                <Option\n                  key={`${getByPath(item, props.valueField)}${getByPath(item, props.labelField)}`}\n                  item={item}\n                  state={state}\n                  props={props}\n                  methods={methods}\n                />\n              ))\n            : state.values &&\n              state.values.length > 0 && <Value valueCss={props.valueCss}>{getByPath(state.values[0], props.labelField)}</Value>\n            }\n          <Input  InputComponent={InputComponent} props={{...props, filled:state.values.length}} methods={methods} state={state} />\n        </OptionsContainer>\n      )}\n    </ContentComponent>\n  );\n    return (\n        <ContentComponent\n            className={`${LIB_NAME}-content ${props.multi ? `${LIB_NAME}-type-multi` : `${LIB_NAME}-type-single`\n                }`}\n            onClick={(event) => {\n                event.stopPropagation();\n                methods.dropDown('open');\n            }}>\n            {props.contentRenderer ? (\n                props.contentRenderer({ props, state, methods })\n            ) : (\n\n                    <React.Fragment>\n                        {(props.multi || props.showSelectedBox)\n                            ? state.values &&\n                            state.values.map((item, ind) => (\n                                <Option\n                                    // Fix for keys that have the same name\n                                    // key={`${getByPath(item, props.valueField)}${getByPath(item, props.labelField)}`}\n                                    key={ind}\n                                    item={item}\n                                    state={state}\n                                    props={props}\n                                    methods={methods}\n                                />\n                            ))\n                            : state.values &&\n                            state.values.length > 0 && <Value>{getByPath(state.values[0], props.labelField)}</Value>\n                        }\n                        <Input InputComponent={InputComponent} props={{ ...props, filled: state.values.length }} methods={methods} state={state} />\n                    </React.Fragment>\n                )}\n        </ContentComponent>\n    );\n};\n\nexport const Value = styled.div`\n  margin-left: 0.3rem;\n  margin-right: 0.2rem;\n  line-height: 1.8rem;\n  font-size: ${props => props.theme.fontSize.sz3};\n  width: 100%;\n    \n${props => props.valueCss && props.valueCss};\n`\n\nexport const OptionsContainer = styled.div`\n    width: auto;\n    height: 100%;\n    margin-right: 1rem;\n    display: inline-flex;\n    align-items: center;\n    overflow-y: hidden;\n    overflow-x: ${props => props.multi ? \"auto\" : \"hidden\"};\n    \n    word-break: ${props => !props.multi && \"break-all\"};\n    white-space: ${props => !props.multi && \"nowrap\"};\n    text-overflow: ${props => !props.multi && \"ellipsis\"};\n\n    ::-webkit-scrollbar {\n        display: none;\n    }\n    \n`\n\nexport const DefaultContentComponent = styled.div`\n  position: relative;\n  \n  display: flex;\n  flex-grow: 1;\n  // flex-wrap: nowrap;\n\n  overflow: hidden;\n  \n  .${LIB_NAME}-type-multi {\n    overflow-x: auto;\n  }\n  \n  word-break: break-all;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`;\n\n// Specifies the default values for props:\nContent.defaultProps = {\n    ContentComponent: DefaultContentComponent,\n};\n\nexport default Content;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { LIB_NAME } from '../constants';\n\nimport {globStyle} from '../../../../global_style'\n\nconst NoData = ({ props, state, methods, NoDataComponent }) =>\n  props.noDataRenderer ? (\n    props.noDataRenderer({ props, state, methods })\n  ) : (\n    <NoDataComponent id={'bob5'} className={`${LIB_NAME}-no-data`} color={props.color}>\n      {props.noDataLabel}\n    </NoDataComponent>\n  );\n\nconst DefaultNoDataComponent = styled.div`\n  padding: 10px;\n  text-align: center;\n  font-size: 1rem;\n  color: #FF4B4B;\n  background-color: #f5f5fa;\n\n`;\n\nNoData.defaultProps = {\n  NoDataComponent: DefaultNoDataComponent\n};\n\nexport default NoData;\n","import React, { Component } from 'react';\nimport styled from 'styled-components'\nimport { getByPath } from '../util';\nimport * as PropTypes from 'prop-types';\nimport { LIB_NAME } from '../constants';\n\nimport { LightenDarkenColor, hexToRGBA } from '../../../../methods/utils/color_utils'\n\nclass Item extends Component {\n  item = React.createRef();\n\n  componentDidUpdate() {\n    if (this.props.state.cursor === this.props.itemIndex) {\n      this.item.current &&\n        this.item.current.scrollIntoView({ behavior: 'smooth', block: 'nearest', inline: 'start' });\n    }\n  }\n\n  render() {\n    // console.log('Item render this.props',this.props)\n    const { props, state, methods, item, itemIndex, ItemComponent, ContentContainer, ButtonComponent, TextComponent, onMouseEnter, onMouseLeave } = this.props;\n\n    if (props.itemRenderer) {\n      return props.itemRenderer({ item, itemIndex, props, state, methods });\n    }\n\n    if (!props.keepSelectedInList && methods.isSelected(item)) {\n      return null;\n    }\n\n    // console.log('item ItemComponent', ItemComponent)\n    //const { ItemComponent } = this.props;\n\n    return (\n      <ItemComponent\n        role=\"option\"\n        ref={this.item}\n        aria-selected={methods.isSelected(item)}\n        aria-disabled={item.disabled}\n        disabled={item.disabled}\n        aria-label={getByPath(item, props.labelField)}\n        key={`${getByPath(item, props.valueField)}${getByPath(item, props.labelField)}`}\n        tabIndex=\"-1\"\n        className={`${LIB_NAME}-item ${\n          methods.isSelected(item) ? `${LIB_NAME}-item-selected` : ''\n        } ${state.cursor === itemIndex ? `${LIB_NAME}-item-active` : ''} ${\n          item.disabled ? `${LIB_NAME}-item-disabled` : ''\n        }`}\n        onKeyPress={item.disabled ? undefined : () => methods.addItem(item)}\n        onClick={item.disabled ? undefined : () => methods.addItem(item)}\n        color={props.color}\n        schema={props.schema}\n        onMouseEnter = {() => {\n          if(!!props.onMouseEnter){\n          props.onMouseEnter(item)\n        }\n        }}\n        onMouseLeave = {() => {\n          if(!!props.onMouseLeave){\n          props.onMouseLeave(item)\n        }\n        }}        >\n\n            <TextComponent\n            >\n              {getByPath(item, props.labelField)} {item.disabled && <ins>{props.disabledLabel}</ins>}\n            </TextComponent>\n\n            {props.showButton && !!props.onDetailsClick &&\n              <ButtonComponent className='fas fa-ellipsis-h'\n                  onClick={(e) => {\n                    if (!e) var e = window.event;\n                    e.cancelBubble = true;\n                    if (e.stopPropagation) e.stopPropagation();\n                    props.onDetailsClick(item.id);\n                  }}>\n              </ButtonComponent>\n            }\n\n      </ItemComponent>\n    );\n  }\n}\n\nItem.propTypes = {\n  props: PropTypes.any,\n  state: PropTypes.any,\n  methods: PropTypes.any,\n  item: PropTypes.any,\n  itemIndex: PropTypes.any,\n  showButton: PropTypes.bool,\n};\n\nexport const DefaultItemComponent = styled.span`\n\n  padding: .5rem 1rem .5rem calc(1rem - 5px);\n  cursor: pointer;\n  white-space: nowrap;\n  display: flex;\n  overflow-x: visible;\n  justify-content: space-between;\n  font-family: ${props => props.theme.font.primary};\n  font-size: ${props => props.theme.fontSize.sz3};\n\n  border-left: 5px solid transparent;\n\n  // &.${LIB_NAME}-item-active {\n  //   ${({ disabled, color }) => !disabled && color && `background: green;`}\n  // }\n\n  :hover,\n  :focus {\n    background: ${props => !!props.schema ? hexToRGBA(props.theme.schema[props.schema].solid, 0.1) : hexToRGBA(props.theme.fg.red, 0.1)};\n    outline: none;\n  }\n\n\n  &.${LIB_NAME}-item-selected {\n    ${props => props.disabled ? `\n      background: ${!!props.schema ? hexToRGBA(props.theme.schema[props.schema].solid, 0.2) : hexToRGBA(props.theme.fg.red, 0.2)};\n    `\n    : `\n      background: ${!!props.schema ? hexToRGBA(props.theme.schema[props.schema].solid, 0.2) : hexToRGBA(props.theme.fg.red, 0.2)};\n      border-color: ${!!props.schema ? props.theme.schema[props.schema].solid : props.theme.fg.red};\n    `}\n  }\n\n  ${({ disabled }) => disabled && `\n    color: #aaa; \n    &:hover {\n      background: #eee;\n    }\n    \n  `}\n\n  ${({ disabled }) =>\n    disabled\n      ? `\n    // background: ${props => props.theme.bg.quinary};\n    // color: ${props => props.theme.bg.primary};\n\n    // ins {\n    //   text-decoration: none;\n    //   border:1px solid #ccc;\n    //   border-radius: 2px;\n    //   padding: 0px 3px;\n    //   font-size: x-small;\n    //   text-transform: uppercase;\n    // }\n    `\n      : ''}\n\n`;\n\nconst DefaultContentContainer = styled.div`\n  display: flex;\n  flex: 1;\n  justify-content: space-between;\n  padding: 0;\n  white-space: nowrap;\n`;\n\nconst DefaultButtonComponent = styled.i`\n    display: flex;\n    color: grey;\n    font-size: 1rem;\n    &:hover {\n        cursor: pointer;\n    }\n    line-height: 2rem;\n    text-align: center;\n`\n\nconst DefaultTextComponent = styled.span`\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`;\n\n// Specifies the default values for props:\nItem.defaultProps = {\n    ItemComponent: DefaultItemComponent,\n    ContentContainer: DefaultContentContainer,\n    ButtonComponent: DefaultButtonComponent,\n    TextComponent: DefaultTextComponent,\n    onMouseEnter: () => {},\n    onMouseLeave: () => {}\n};\n\nexport default Item;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { LIB_NAME } from '../constants';\nimport NoData from '../components/NoData';\nimport Item from '../components/Item';\nimport Label from '../components/Label';\n\nimport { valueExistInSelected, hexToRGBA } from '../util';\n\nconst dropdownPosition = (props, methods) => {\n    const DropdownBoundingClientRect = methods.getSelectRef().getBoundingClientRect();\n    const dropdownHeight =\n        DropdownBoundingClientRect.bottom + parseInt(props.dropdownHeight, 10) + parseInt(props.dropdownGap, 10);\n\n    if (props.dropdownPosition !== 'auto') {\n        return props.dropdownPosition;\n    }\n\n    if (dropdownHeight > window.innerHeight && dropdownHeight > DropdownBoundingClientRect.top) {\n        return 'top';\n    }\n\n    return 'bottom';\n};\n\nconst Dropdown = ({ ItemComponent, props, dropdownRef, DropDownComponent, state, methods, onMouseEnter, onMouseLeave, onClick, TextComponent }) => {\n    // console.log('Dropdown props', props)\n    // console.log('Dropdown ItemComponent', ItemComponent)\n    return (\n        <DropDownComponent\n            css={props.dropdownCss}\n            ref={dropdownRef}\n            maxWidth={props.maxDropdownWidth}\n            tabIndex=\"-1\"\n            aria-expanded=\"true\"\n            role=\"list\"\n            dropdownPosition={dropdownPosition(props, methods)}\n            selectBounds={state.selectBounds}\n            portal={props.portal}\n            dropdownGap={props.dropdownGap}\n            dropdownHeight={props.dropdownHeight}\n            className={`${LIB_NAME}-dropdown ${LIB_NAME}-dropdown-position-${dropdownPosition(\n                props,\n                methods\n            )}`}>\n            {props.dropdownRenderer ? (\n                props.dropdownRenderer({ props, state, methods })\n            ) : (\n                    <React.Fragment>\n                        {props.create && state.search && !valueExistInSelected(state.search, state.values, props) && (\n                            <AddNew\n                                className={`${LIB_NAME}-dropdown-add-new`}\n                                color={props.color}\n                                onClick={() => methods.createNew(state.search)}\n                                >\n                                {props.createNewLabel.replace('{search}', `\"${state.search}\"`)}\n                            </AddNew>\n                        )}\n                        <Label LabelComponent={props.LabelComponent} label={props.label}></Label>\n                        {methods.searchResults().length === 0 ? (\n                            <NoData\n                                className={`${LIB_NAME}-no-data`}\n                                state={state}\n                                props={props}\n                                methods={methods}\n                                NoDataComponent={props.NoDataComponent}\n                            />\n                        ) : (\n                                methods\n                                    .searchResults()\n                                    .map((item, itemIndex) => (\n                                        <Item\n                                            ItemComponent={ItemComponent}\n                                            TextComponent={TextComponent}\n                                            //   Fix for dropdown search error for elements with matching keys\n                                            //   key={item[props.valueField]}\n                                            key={itemIndex}\n                                            item={item}\n                                            itemIndex={itemIndex}\n                                            state={state}\n                                            props={props}\n                                            methods={methods}\n                                            onMouseEnter = {(item) => onMouseEnter(item)}\n                                            onMouseLeave = {(item) => onMouseLeave(item)}\n                                        />\n                                    ))\n                            )}\n                    </React.Fragment>\n                )}\n        </DropDownComponent>\n    );\n}\n\nexport const DefaultDropDownComponent = styled.div`\n  position: absolute;\n  ${({ selectBounds, dropdownGap, dropdownPosition }) =>\n        dropdownPosition === 'top'\n            ? `bottom: ${selectBounds.height + 2 + dropdownGap}px`\n            : `top: ${selectBounds.height + 2 + dropdownGap}px`};\n\n  ${({ selectBounds, dropdownGap, portal }) =>\n        portal\n            ? `\n      position: fixed;\n      top: ${selectBounds.bottom + dropdownGap}px;\n      left: ${selectBounds.left - 1}px;`\n            : 'left: -1px;'};\n  width: 100%;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n  background: ${props => props.theme.bg.secondary};\n  border-radius: 2px;\n  box-shadow: 0px 0px 10px 3px rgba(0,0,0,0.1);\n//   max-height: ${({ dropdownHeight }) => dropdownHeight};\n//   height: auto;\n  overflow-x: visible;\n  overflow-y: scroll;\n  z-index: 100;\n\n    ${props => props.css && props.css};\n\n  border-radius: 0.2rem;\n\n  :focus {\n    outline: none;\n  }\n\n  /* Let's get this party started */\n  ::-webkit-scrollbar {\n      width: 6px;\n  }\n  /* Track */\n  ::-webkit-scrollbar-track {\n      -webkit-background: rgba(0,0,0,0.1);\n      -webkit-border-radius: 10px;\n      border-radius: 10px;\n  }\n  /* Handle */\n  ::-webkit-scrollbar-thumb {\n      -webkit-border-radius: 10px;\n      border-radius: 10px;\n      -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.5);\n      background: rgba(255,255,255,0.4);\n  }\n  ::-webkit-scrollbar-thumb:window-inactive {\n    background: rgba(255,255,255,0.2);\n  }\n\n    // max-width: ${props => props.maxWidth && props.maxWidth};\n\n\n    // max-height: 100%;\n    min-width: fit-content;\n    block-size: fit-content;\n}\n`;\n\nconst AddNew = styled.div`\n  color: ${({ color }) => color};\n  padding: 5px 10px;\n  background: white;\n  color: blue;\n\n  :hover {\n    background: ${({ color }) => color && hexToRGBA(color, 0.1)};\n    outline: none;\n    cursor: pointer;\n  }\n`;\n\nDropdown.defaultProps = {\n    DropDownComponent: DefaultDropDownComponent\n};\n\nexport default Dropdown;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { LIB_NAME } from '../constants';\n\nconst Loading = ({ props }) =>\n  props.loadingRenderer ? (\n    props.loadingRenderer({ props })\n  ) : (\n    <LoadingComponent className={`${LIB_NAME}-loading`} color={props.color} />\n  );\n\nconst LoadingComponent = styled.div`\n  @keyframes dual-ring-spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(180deg);\n    }\n  }\n\n  padding: 0 5px;\n  display: block;\n  width: auto;\n  height: auto;\n\n  :after {\n    content: ' ';\n    display: block;\n    width: 16px;\n    height: 16px;\n    border-radius: 50%;\n    border-width: 1px;\n    border-style: solid;\n    border-color: ${({ color }) => color} transparent;\n    animation: dual-ring-spin 0.7s ease-in-out infinite;\n    margin: 0 0 0 -10px;\n  }\n`;\n\nexport default Loading;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { LIB_NAME } from '../constants';\n\nconst Clear = ({ props, state, methods }) =>\n  props.clearRenderer ? (\n    props.clearRenderer({ props, state, methods })\n  ) : (\n    <ClearComponent\n      className={`${LIB_NAME}-clear`}\n      tabIndex=\"-1\"\n      onClick={() => methods.clearAll()}\n      onKeyPress={() => methods.clearAll()}>\n      &times;\n    </ClearComponent>\n  );\n\nconst ClearComponent = styled.div`\n  line-height: 25px;\n  margin: 0 10px;\n  cursor: pointer;\n\n  :focus {\n    outline: none;\n  }\n\n  :hover {\n    color: tomato;\n  }\n`;\n\nexport default Clear;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { LIB_NAME } from '../constants';\n\nconst Separator = ({ props, state, methods }) =>\n  props.separatorRenderer ? (\n    props.separatorRenderer({ props, state, methods })\n  ) : (\n    <SeparatorComponent className={`${LIB_NAME}-separator`} />\n  );\n\nconst SeparatorComponent = styled.div`\n  border-left: 1px solid #ccc;\n  width: 1px;\n  height: 25px;\n  display: block;\n`;\n\nexport default Separator;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { LIB_NAME } from '../constants';\n\nconst DropdownHandle = ({ props, state, methods }) =>\n  props.dropdownHandleRenderer ? (\n    props.dropdownHandleRenderer({ props, state, methods })\n  ) : (\n    <DropdownHandleComponent\n      tabIndex=\"-1\"\n      onClick={(event) => methods.dropDown(state.dropdown ? 'close': 'open', event)}\n      dropdownOpen={state.dropdown}\n      onKeyPress={(event) => methods.dropDown('toggle', event)}\n      onKeyDown={(event) => methods.dropDown('toggle', event)}\n      className={`${LIB_NAME}-dropdown-handle`}\n      color={props.color}>\n      <svg fill=\"currentColor\" viewBox=\"0 0 40 40\"><path d=\"M31 26.4q0 .3-.2.5l-1.1 1.2q-.3.2-.6.2t-.5-.2l-8.7-8.8-8.8 8.8q-.2.2-.5.2t-.5-.2l-1.2-1.2q-.2-.2-.2-.5t.2-.5l10.4-10.4q.3-.2.6-.2t.5.2l10.4 10.4q.2.2.2.5z\"/></svg>\n    </DropdownHandleComponent>\n  );\n\nconst DropdownHandleComponent = styled.div`\n  text-align: center;\n\n  ${({ dropdownOpen }) =>\n    dropdownOpen\n      ? `\n      pointer-events: all;\n      transform: rotate(0deg);\n      margin: 0px 0 -3px 5px;\n      `\n      : `\n      pointer-events: none;\n      margin: 0 0 0 5px;\n      transform: rotate(180deg);\n      `};\n  cursor: pointer;\n\n  text-align: center;\n  vertical-align: middle;\n  line-height: 2rem;\n  height: 2rem;\n  position: absolute;\n  right: .25rem;\n\n  svg {\n    width: 16px;\n    height: 16px;\n  }\n\n  :hover {\n    path {\n      stroke: ${({ color }) => color};\n    }\n  }\n\n  :focus {\n    outline: none;\n\n    path {\n      stroke: ${({ color }) => color};\n    }\n  }\n\n`;\n\nexport default DropdownHandle;\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components'\nimport ClickOutside from './components/ClickOutside';\n\nimport { globStyle } from '../../../global_style'\nimport { LightenDarkenColor } from '../../../methods/utils/color_utils'\n\n\nimport Label from './components/Label';\nimport Content from './components/Content';\nimport Dropdown from './components/Dropdown';\nimport Loading from './components/Loading';\nimport Clear from './components/Clear';\nimport Separator from './components/Separator';\nimport DropdownHandle from './components/DropdownHandle';\n\nimport { debounce, hexToRGBA, isEqual, getByPath, getProp, valueExistInSelected } from './util';\nimport { LIB_NAME } from './constants';\n\nimport theme from '../../../theme.js'\nimport Portal from '../../../higher_order_components/portal';\n\nexport class DropDownSearch extends Component {\n  static propTypes = {\n    onChange: PropTypes.func.isRequired,\n    onDropdownClose: PropTypes.func,\n    onDropdownOpen: PropTypes.func,\n    onClearAll: PropTypes.func,\n    onSelectAll: PropTypes.func,\n    values: PropTypes.array,\n    options: PropTypes.array.isRequired,\n    keepOpen: PropTypes.bool,\n    showSelectedBox: PropTypes.bool,\n    fixedHeight: PropTypes.bool,\n    dropdownGap: PropTypes.number,\n    multi: PropTypes.bool,\n    placeholder: PropTypes.string,\n    addPlaceholder: PropTypes.string,\n    disabled: PropTypes.bool,\n    className: PropTypes.string,\n    loading: PropTypes.bool,\n    clearable: PropTypes.bool,\n    searchable: PropTypes.bool,\n    separator: PropTypes.bool,\n    dropdownHandle: PropTypes.bool,\n    searchBy: PropTypes.string,\n    sortBy: PropTypes.string,\n    closeOnScroll: PropTypes.bool,\n    openOnTop: PropTypes.bool,\n    style: PropTypes.object,\n    contentRenderer: PropTypes.func,\n    dropdownRenderer: PropTypes.func,\n    itemRenderer: PropTypes.func,\n    noDataRenderer: PropTypes.func,\n    optionRenderer: PropTypes.func,\n    inputRenderer: PropTypes.func,\n    loadingRenderer: PropTypes.func,\n    clearRenderer: PropTypes.func,\n    separatorRenderer: PropTypes.func,\n    dropdownHandleRenderer: PropTypes.func,\n    direction: PropTypes.string,\n    required: PropTypes.bool,\n    pattern: PropTypes.string,\n    // The pattern attribute specifies a regular expression that the <input> element's value is checked against on form submission\n    // set to null to bypass\n    name: PropTypes.string,\n    className: PropTypes.string,\n    schema: PropTypes.string,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dropdown: false,\n      values: props.values,\n      search: '',\n      selectBounds: {},\n      cursor: null,\n      dropdownSize: {\n        offsetWidth: 0,\n        offsetHeight: 0,\n        offsetLeft: 0,\n        offsetTop: 0,\n      }\n    };\n\n    this.methods = {\n      removeItem: this.removeItem,\n      dropDown: this.dropDown,\n      addItem: this.addItem,\n      setSearch: this.setSearch,\n      getInputSize: this.getInputSize,\n      toggleSelectAll: this.toggleSelectAll,\n      clearAll: this.clearAll,\n      selectAll: this.selectAll,\n      searchResults: this.searchResults,\n      getSelectRef: this.getSelectRef,\n      isSelected: this.isSelected,\n      getSelectBounds: this.getSelectBounds,\n      areAllSelected: this.areAllSelected,\n      handleKeyDown: this.handleKeyDown,\n      activeCursorItem: this.activeCursorItem,\n      createNew: this.createNew,\n      sortBy: this.sortBy,\n      safeString: this.safeString\n    };\n\n    this.select = React.createRef();\n    this.dropdownRef = React.createRef()\n    this.dropdownRoot = typeof document !== 'undefined' && document.createElement('div');\n  }\n\n  componentDidMount() {\n    this.props.portal && this.props.portal.appendChild(this.dropdownRoot);\n    window.addEventListener('resize', debounce(this.updateSelectBounds), {passive:true});\n    window.addEventListener('scroll', debounce(this.onScroll), {passive:true});\n\n    this.dropDown('close');\n\n    if (this.select) {\n      this.updateSelectBounds();\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      !isEqual(prevProps.values, this.props.values) &&\n      isEqual(prevProps.values, prevState.values)\n    ) {\n      this.setState({ values: this.props.values }, () => {\n        this.props.onChange(this.props.values);\n      });\n    }\n\n    if (prevState.values !== this.state.values) {\n      if (this.state.values.length) { this.props.onChange(this.state.values) };\n      this.updateSelectBounds();\n    }\n\n    if (prevState.search !== this.state.search) {\n      this.updateSelectBounds();\n    }\n\n    if (prevState.values !== this.state.values && this.props.closeOnSelect) {\n      this.dropDown('close');\n    }\n\n    if (prevProps.multi !== this.props.multi) {\n      this.updateSelectBounds();\n    }\n\n    if (prevState.dropdown && prevState.dropdown !== this.state.dropdown) {\n      this.onDropdownClose();\n    }\n\n    if (!prevState.dropdown && prevState.dropdown !== this.state.dropdown) {\n      this.props.onDropdownOpen();\n    }\n\n    if (prevState.values !== this.state.values && !this.props.fillable && this.state.values.length) {\n      this.clearAll();\n    }\n\n    // if dropdown ref has current value\n    if(this.dropdownRef.current && !this.props.fixedHeight) {\n      // get height\n      let offsetHeight = this.dropdownRef.current.offsetHeight;\n\n      // check if state offsetHeight does not match current offsetHeight\n      if(offsetHeight !== this.state.dropdownSize.offsetHeight) {\n        let offsetWidth  = this.dropdownRef.current.offsetWidth;\n        let offsetTop  = this.dropdownRef.current.offsetTop;\n        let offsetLeft  = this.dropdownRef.current.offsetLeft;\n\n        // update state\n        this.setState({\n          dropdownSize: {\n            offsetWidth,\n            offsetHeight,\n            offsetLeft,\n            offsetTop,\n          },\n        });\n      }\n    }\n    // if dropdownRef doesn't have current value, and offsetHeight isn't already 0, set it to zero\n    else if(this.state.dropdownSize.offsetHeight !== 0 ) {\n      // update state\n      this.setState({\n        dropdownSize: {\n          offsetWidth: 0,\n          offsetHeight: 0,\n          offsetLeft: 0,\n          offsetTop: 0,\n        },\n      });\n    }\n  }\n\n\n\n  componentWillUnmount() {\n    this.props.portal && this.props.portal.removeChild(this.dropdownRoot);\n    window.removeEventListener(\n      'resize',\n      debounce(this.updateSelectBounds, this.props.debounceDelay), {passive:true}\n    );\n    window.removeEventListener('scroll', debounce(this.onScroll, this.props.debounceDelay), {passive:true});\n  }\n\n  onDropdownClose = () => {\n    this.setState({ cursor: null });\n    this.props.onDropdownClose();\n  };\n\n  onScroll = () => {\n    if (this.props.closeOnScroll) {\n      this.dropDown('close');\n    }\n\n    this.updateSelectBounds();\n  };\n\n  updateSelectBounds = () =>\n    this.select.current &&\n    this.setState({\n      selectBounds: this.select.current.getBoundingClientRect()\n    });\n\n  getSelectBounds = () => this.state.selectBounds;\n\n  dropDown = (action = 'toggle', event) => {\n    const target = (event && event.target) || (event && event.srcElement);\n\n    if (\n      this.props.portal &&\n      !this.props.closeOnScroll &&\n      !this.props.closeOnSelect &&\n      event &&\n      target &&\n      target.offsetParent &&\n      target.offsetParent.classList.contains('react-dropdown-select-dropdown')\n    ) {\n      return;\n    }\n\n    if (this.props.keepOpen) {\n      return this.setState({ dropdown: true });\n    }\n\n    if (action === 'close' && this.state.dropdown) {\n      this.select.current.blur();\n\n      return this.setState({\n        dropdown: false,\n        search: this.props.clearOnBlur ? '' : this.state.search\n      });\n    }\n\n    if (action === 'open' && !this.state.dropdown) {\n      return this.setState({ dropdown: true });\n    }\n\n    if (action === 'toggle') {\n      this.select.current.focus();\n      return this.setState({ dropdown: !this.state.dropdown });\n    }\n\n    return false;\n  };\n\n  getSelectRef = () => this.select.current;\n\n  addItem = (item) => {\n    if (this.props.multi) {\n      if (\n        valueExistInSelected(getByPath(item, this.props.valueField), this.state.values, this.props)\n      ) {\n        return this.removeItem(null, item, false);\n      }\n\n      this.setState({\n        values: [...this.state.values, item]\n      });\n    } else {\n      this.setState({\n        values: [item],\n        dropdown: false\n      });\n    }\n\n    this.props.clearOnSelect && this.setState({ search: '' });\n\n    return true;\n  };\n\n  removeItem = (event, item, close = false) => {\n    if (event && close) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.dropDown('close');\n    }\n\n    let newValues = this.state.values.filter(\n        (values) =>\n            getByPath(values, this.props.valueField) !== getByPath(item, this.props.valueField)\n    )\n\n    this.setState({\n      values: newValues\n    });\n\n    this.props.onRemoveItem && this.props.onRemoveItem(newValues)\n  };\n\n  setSearch = (event) => {\n    this.setState({\n      cursor: null\n    });\n\n    this.setState({\n      search: event.target.value\n    });\n  };\n\n  getInputSize = () => {\n    if (this.state.values && this.state.values.length) {\n      return 0;\n    } else {\n      return this.props.placeholder.length;\n    }\n  };\n\n  toggleSelectAll = () => {\n    return this.setState({\n      values: this.state.values.length === 0 ? this.selectAll() : this.clearAll()\n    });\n  };\n\n  clearAll = () => {\n    this.props.onClearAll();\n    this.setState({\n      values: []\n    });\n  };\n\n  selectAll = (valuesList = []) => {\n    this.props.onSelectAll();\n    const values = valuesList.length > 0\n      ? valuesList\n      : this.props.options.filter((option) => !option.disabled);\n\n    this.setState({ values });\n  };\n\n  isSelected = (option) =>\n    !!this.state.values.find(\n      (value) =>\n        getByPath(value, this.props.valueField) === getByPath(option, this.props.valueField)\n    );\n\n  areAllSelected = () =>\n    this.state.values.length === this.props.options.filter((option) => !option.disabled).length;\n\n  safeString = (string) => string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n\n  sortBy = () => {\n    const { sortBy, options } = this.props;\n\n    if (!sortBy) {\n      return options;\n    }\n\n    options.sort((a, b) => {\n      if (getProp(a, sortBy) < getProp(b, sortBy)) {\n        return -1;\n      } else if (getProp(a, sortBy) > getProp(b, sortBy)) {\n        return 1;\n      } else {\n        return 0;\n      }\n    });\n\n    return options;\n  };\n\n  searchFn = ({ state, methods }) => {\n    const regexp = new RegExp(methods.safeString(state.search), 'i');\n\n    return methods\n      .sortBy()\n      .filter((item) =>\n        regexp.test(getByPath(item, this.props.searchBy) || getByPath(item, this.props.valueField))\n      );\n  };\n\n  searchResults = () => {\n    const args = { state: this.state, props: this.props, methods: this.methods };\n\n    return this.props.searchFn(args) || this.searchFn(args);\n  };\n\n  activeCursorItem = (activeCursorItem) =>\n    this.setState({\n      activeCursorItem\n    });\n\n  handleKeyDown = (event) => {\n    const args = {\n      event,\n      state: this.state,\n      props: this.props,\n      methods: this.methods,\n      setState: this.setState.bind(this)\n    };\n\n    return this.props.handleKeyDownFn(args) || this.handleKeyDownFn(args);\n  };\n\n  handleKeyDownFn = ({ event, state, props, methods, setState }) => {\n    const { cursor } = state;\n    const escape = event.key === 'Escape';\n    const enter = event.key === 'Enter';\n    const arrowUp = event.key === 'ArrowUp';\n    const arrowDown = event.key === 'ArrowDown';\n    const tab = event.key === 'Tab' && !event.shiftKey;\n    const shiftTab = event.shiftKey && event.key === 'Tab';\n\n    if ((arrowDown || tab) && cursor === null) {\n      return setState({\n        cursor: 0\n      });\n    }\n\n    if (arrowUp || arrowDown || shiftTab || tab) {\n      event.preventDefault();\n    }\n\n    if (escape) {\n      this.dropDown('close');\n    }\n\n    if (enter) {\n      const currentItem = methods.searchResults()[cursor];\n      if (currentItem && !currentItem.disabled) {\n        if (props.create && valueExistInSelected(state.search, state.values, props)) {\n          return null;\n        }\n\n        methods.addItem(currentItem);\n      }\n    }\n\n    if ((arrowDown || tab) && methods.searchResults().length === cursor) {\n      return setState({\n        cursor: 0\n      });\n    }\n\n    if (arrowDown || tab) {\n      setState((prevState) => ({\n        cursor: prevState.cursor + 1\n      }));\n    }\n\n    if ((arrowUp || shiftTab) && cursor > 0) {\n      setState((prevState) => ({\n        cursor: prevState.cursor - 1\n      }));\n    }\n\n    if ((arrowUp || shiftTab) && cursor === 0) {\n      setState({\n        cursor: methods.searchResults().length\n      });\n    }\n  };\n\n  renderDropdown = (ItemComponent) =>\n    this.props.portal ? (\n      ReactDOM.createPortal(\n        <Dropdown dropdownRef={this.dropdownRef} ItemComponent={ItemComponent} DropDownComponent={this.props.DropDownComponent}\n        props={this.props} state={this.state} methods={this.methods} onMouseEnter = {(item) => this.props.onMouseEnter(item)} onMouseLeave = {(item) => this.props.onMouseLeave(item)}\n         />,\n        this.dropdownRoot\n      )\n    ) : (\n        <Dropdown dropdownRef={this.dropdownRef} ItemComponent={ItemComponent} TextComponent={this.props.TextComponent} DropDownComponent={this.props.DropDownComponent}\n         props={this.props} state={this.state} methods={this.methods} onMouseEnter = {(item) => this.props.onMouseEnter}\n         onMouseLeave = {(item) => this.props.onMouseLeave} />\n      );\n\n  createNew = (item) => {\n    const newValue = {\n      [this.props.labelField]: item,\n      [this.props.valueField]: item\n    };\n\n    this.addItem(newValue);\n    this.props.onCreateNew(newValue);\n    this.setState({ search: '' });\n  };\n\n  render() {\n\n    const { ItemComponent, ReactDropdownSelect, Container } = this.props;\n\n    return (\n      <Container css={this.props.containerCss} className={this.props.className} style={!this.props.fixedHeight ? {...this.props.containerStyle, paddingBottom: this.state.dropdownSize.offsetHeight} : this.props.containerStyle}>\n        <ClickOutside ClickOutsideComponent={this.props.ClickOutsideComponent} onClickOutside={(event) => this.dropDown('close', event)}>\n          <ReactDropdownSelect\n            css={this.props.reactDropdownSelectCss}\n            onKeyDown={this.handleKeyDown}\n            onClick={(event) => this.dropDown('open', event)}\n            // onFocus={(event) => this.dropDown('open', event)}\n            tabIndex={this.props.disabled ? '-1' : '0'}\n            direction={this.props.direction}\n            style={this.props.style}\n            ref={this.select}\n            disabled={this.props.disabled}\n            className={`${LIB_NAME} ${this.props.className}`}\n            color={this.props.color}\n            {...this.props.additionalProps}\n            schema={this.props.schema}>\n\n            <Content InputComponent={this.props.InputComponent} ContentComponent={this.props.ContentComponent} props={this.props} state={this.state} methods={this.methods} />\n\n            {(this.props.name || this.props.required) && (\n              <input\n                tabIndex={-1}\n                onChange={this.methods.setSearch}\n                style={{ opacity: 0, width: 0, position: 'absolute' }}\n                name={this.props.name}\n                required={this.props.required}\n                pattern={this.props.pattern}\n                value={this.state.values.map(value => value[this.props.labelField]).toString() || []}\n                disabled={this.props.disabled}\n              />\n            )}\n\n            {this.props.loading && <Loading props={this.props} />}\n\n            {this.props.clearable && (\n              <Clear props={this.props} state={this.state} methods={this.methods} />\n            )}\n\n            {this.props.separator && (\n              <Separator props={this.props} state={this.state} methods={this.methods} />\n            )}\n\n            {this.props.dropdownHandle && (\n              <DropdownHandle\n                onClick={() => this.select.current.focus()}\n                props={this.props}\n                state={this.state}\n                methods={this.methods}\n              />\n            )}\n\n              {this.state.dropdown && !this.props.disabled && this.renderDropdown(ItemComponent)}\n          </ReactDropdownSelect>\n        </ClickOutside>\n      </Container>\n    );\n  }\n}\n\nexport const DefaultReactDropdownSelect = styled.div`\n\n    background-color: ${props => props.theme.bg.secondary};\n    box-shadow: 0 0.1rem 0.2rem 0rem rgba(0,0,0,0.1) !important;\n    color: ${props => props.theme.bg.octonary};\n\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz3};\n\n    position: relative;\n    display: flex;\n\n    vertical-align: middle;\n    line-height: 1.6rem;\n    height: 1.6rem;\n    width: 100%;\n    padding: 2px 5px;\n    direction: ${({ direction }) => direction};\n    cursor: pointer;\n    min-height: 36px;\n    ${({ disabled }) =>\n    disabled ? 'cursor: not-allowed;pointer-events: none;opacity: 0.3;' : 'pointer-events: all;'}\n\n    border-bottom: 2px solid transparent;\n    border-radius: 0.2rem;\n\n    :focus, :focus-within {\n        color: ${props => props.theme.bg.octonary};\n        background-color: ${props => props.theme.bg.secondary};\n        box-shadow: none;\n        border-bottom: 2px solid ${props => !!props.schema ? props.theme.schema[props.schema].solid : props.theme.bg.octonary};\n    }\n\n  ${props => props.css && props.css};\n\n\n`;\n\nconst DefaultContainer = styled.div`\n  ${props => props.css && props.css};\n`;\n\nDropDownSearch.defaultProps = {\n  addPlaceholder: '',\n  placeholder: 'Select...',\n  values: [],\n  options: [],\n  multi: false,\n  showSelectedBox: false,\n  disabled: false,\n  searchBy: 'label',\n  sortBy: null,\n  clearable: false,\n  searchable: true,\n  fixedHeight: true,\n  dropdownHandle: true,\n  separator: false,\n  keepOpen: undefined,\n  noDataLabel: 'No data',\n  createNewLabel: 'add {search}',\n  disabledLabel: 'disabled',\n  dropdownGap: 2,\n  closeOnScroll: false,\n  debounceDelay: 0,\n  labelField: 'label',\n  valueField: 'value',\n  color: '#0074D9',\n  keepSelectedInList: true,\n  closeOnSelect: false,\n  clearOnBlur: true,\n  clearOnSelect: true,\n  dropdownPosition: 'bottom',\n  dropdownHeight: '300px',\n  autoFocus: false,\n  portal: null,\n  create: false,\n  direction: 'ltr',\n  name: null,\n  required: false,\n  pattern: '',\n  onChange: () => undefined,\n  onDropdownOpen: () => undefined,\n  onDropdownClose: () => undefined,\n  onClearAll: () => undefined,\n  onSelectAll: () => undefined,\n  onCreateNew: () => undefined,\n  searchFn: () => undefined,\n  handleKeyDownFn: () => undefined,\n  additionalProps: null,\n  showButton: true,\n  ReactDropdownSelect: DefaultReactDropdownSelect,\n  Container: DefaultContainer,\n  fillable: true,\n  schema: null,\n  onMouseEnter: () => {},\n  onMouseLeave: () => {},\n};\n\n\n\nexport default DropDownSearch;\n","export const getMessageFromError = (err) => {\n    if(err) {\n\n        // err is array\n        if( Array.isArray(err) ) {\n            const firstErr = err[0] // get first item from arr and call recursively\n            return getMessageFromError(firstErr)\n\n        }\n\n        // err is object\n        if(typeof(err) === \"object\") {\n            const firstErr = Object.values(err) // convert to arr and call recursively\n            return getMessageFromError(firstErr)\n        }\n\n        // err is string - return\n        if(typeof(err) === \"string\") {\n            return err;\n        }\n    }\n\n    // default message\n    return null\n}\n\nexport const getSubmitDisabled = ({errors, touched, isSubmitting, submitCount}) => {\n    const errorCount = Object.keys(errors).length > 0 // get number of field errors\n    const touchedCount = Object.values(touched).length // number of touched fields\n    return ((errorCount > 0)  )\n}","import React, {useState, useEffect, useRef} from 'react';\nimport { createPortal } from \"react-dom\";\nimport DropDownSearch, {DefaultReactDropdownSelect} from \"../components/basic/drop_down_search_v2/drop_down_search\";\n\nconst Portal = (props) => {\n\n\tconst {\n\t\tchildren,\n\t\tmountElement\n\t} = props\n\n\tconst mount = document.getElementById(mountElement);\n\tconst el = useRef(document.createElement(\"div\")).current;\n\n\tuseEffect(() => {\n\t\tmount && mount.appendChild(el);\n\n\t\treturn () => mount && mount.removeChild(el);\n\t}, [el, mount]);\n\n\treturn createPortal(children, el)\n};\n\n\nPortal.defaultProps = {\n\tmountElement: \"root\",\n};\nexport default Portal;","import * as Yup from 'yup';\n\nimport { notBrokenRegex, notTaskDeletedRegex } from \"./regex_utils\";\nimport { isObject } from \"./object_utils\";\nimport { get } from \"lodash\"\nimport { isArray } from \"./array_utils\";\nimport { LOT_TEMPLATES_RESERVED_FIELD_NAMES } from \"../../constants/form_constants\";\nimport { convertCardDate } from \"./card_utils\";\nimport { isEqualCI, isString } from \"./string_utils\";\nimport { FIELD_DATA_TYPES } from \"../../constants/lot_contants\";\n\nimport { findProcessStartNodes, findProcessEndNodes, getNodeOutgoing, handleMergeExpression, getNodeIncoming } from './processes_utils';\nimport { deepCopy, uuidv4 } from './utils'\n\nconst { object, lazy, string, number } = require('yup')\nconst mapValues = require('lodash/mapValues')\n\nYup.addMethod(Yup.object, 'startEndDate', function (startPath, endPath, message) {\n    return this.test('startEndDate', message, function (value) {\n\n        if (!value) return true\n\n        const {\n            path,\n            createError\n        } = this\n\n        const startDate = convertCardDate(value[startPath])\n        const endDate = convertCardDate(value[endPath])\n\n        if (startDate && endDate) {\n            if (endDate < startDate) {\n                return this.createError({\n                    path: `${path}`,\n                    message,\n                });\n            }\n        }\n        return true;\n    });\n});\n\nexport const scheduleSchema = Yup.object().shape({\n    name: Yup.string()\n        .min(1, '1 character minimum.')\n        .max(50, '50 character maximum.')\n        .required('Please enter a name.'),\n    task: Yup.array().of(\n        Yup.object().shape({\n            name: Yup.string()\n                // .min(1, '1 character minimum')\n                // .max(2, '50 character maximum')\n                .matches(notTaskDeletedRegex, \"Task is deleted.\")\n                .required('Please select a task.'),\n            status: Yup.string().matches(notBrokenRegex, \"Task is broken.\"),\n        })\n    ).required('Required'),\n    days_on: Yup.array()\n        .min(1, 'Please select at least one day.')\n        .required('Required'),\n    start_time: Yup.string()\n        .required('Required'),\n    time_interval: Yup.string(), // not required\n    stop_time: Yup.string() // not required\n});\n\nexport const reportEventSchema = Yup.object().shape({\n    label: Yup.string()\n        .min(1, '1 character minimum.')\n        .max(50, '50 character maximum.')\n        .required('Please enter a label.'),\n    description: Yup.string()\n});\n\nexport const objectSchema = Yup.object().shape({\n    name: Yup.string()\n        .min(1, '1 character minimum.')\n        .max(50, '50 character maximum.')\n        .required('Please enter a name.'),\n    description: Yup.string()\n        .max(1000, '1000 character maximum.'),\n    // width: Yup.number()\n    //     .positive(\"Please enter a positive number.\")\n    //     .moreThan(0, \"Must be greater than 0.\")\n    //     .required(\"Please enter the object's width.\"),\n    // height: Yup.number()\n    //     .positive(\"Please enter a positive number.\")\n    //     .moreThan(0, \"Must be greater than 0.\")\n    //     .required(\"Please enter the object's height.\"),\n    // length: Yup.number()\n    //     .positive(\"Please enter a positive number.\")\n    //     .moreThan(0, \"Must be greater than 0.\")\n    //     .required(\"Please enter the object's length.\"),\n    // modelName: Yup.string()\n    //     .required(\"Please select a model.\"),\n});\n\n// Yup.addMethod(Yup.array, 'startEndDate', function (startPath, endPath, message) {\n//     return this.test('startEndDate', message, function (value) {\n//\n//         if(!value) return true\n//\n//         const {\n//             path,\n//             createError\n//         } = this\n//\n//         const startDate = convertCardDate(value[startPath])\n//         const endDate = convertCardDate(value[endPath])\n//\n//         if(startDate && endDate) {\n//             if(endDate < startDate) {\n//                 return this.createError({\n//                     path: `${path}`,\n//                     message,\n//                 });\n//             }\n//         }\n//         return true;\n//     });\n// });\n\n\nexport const hilSchema = Yup.object().shape({\n    instruction: Yup.string()\n        .max(20, '20 character maximum.')\n        .required('Please enter instructions.'),\n    position: Yup.array().of(\n        Yup.object().shape({\n            name: Yup.string()\n                .required('Position is missing name.'),\n        })\n    )\n        .required('Please select a position.'),\n    dashboard: Yup.array().of(\n        Yup.object().shape({\n            name: Yup.string()\n                .required('Dashboard is missing name.'),\n        })\n    )\n        .required('Please select a dashboard.'),\n    sound: Yup.array().of(\n        Yup.object().shape({\n            name: Yup.string()\n                .required('Sound is missing name.'),\n        })\n    )\n        .required('Please select a sound.'),\n    timeout: Yup.string()\n        .nullable()\n        .required('Please select timeout.'),\n});\n\nexport const moveSchema = Yup.object().shape({\n    location: Yup.array().of(\n        Yup.object().shape({\n            name: Yup.string()\n                .required('Location is missing name.'),\n            _id: Yup.string()\n                .required('Location is missing ID.'),\n        })\n    ).required('Please select a location.'),\n});\n\n\n\nexport const nameSchema = Yup.object().shape({\n    name: Yup.string()\n        .min(1, '1 character minimum.')\n        .max(50, '50 character maximum.')\n        .required('Please enter a name.'),\n});\n\nexport const hilGoalSchema = Yup.object().shape({\n    hil: Yup.array().of(\n        Yup.object().shape({\n            name: Yup.string()\n                .required('HIL is missing name.'),\n        })\n    ).required('Please select a HIL.')\n});\n\nexport const objectAtLocationGoalSchema = Yup.object().shape({\n    quantity: Yup.array().of(\n        Yup.object().shape({\n            name: Yup.string()\n                .required('Quantity is missing name.'),\n        })\n    ).required('Please select a quantity.'),\n    object: Yup.array().of(\n        Yup.object().shape({\n            name: Yup.string()\n                .required('Object is missing name.'),\n        })\n    ).min(1, \"Please select an object.\").nullable(),\n    position: Yup.array().of(\n        Yup.object().shape({\n            name: Yup.string()\n                .required('Position is missing name.'),\n        })\n    ).required('Please select a position.'),\n});\n\nexport const dashboardSchema = Yup.object().shape({\n    name: Yup.string()\n        .min(1, '1 character minimum.')\n        .max(50, '50 character maximum.'),\n    buttons: Yup.array().of(\n        Yup.object().shape({\n            name: Yup.string(),\n            // task: Yup.array().of(\n            //     Yup.object().shape({\n            //         Description: Yup.string()\n            //             .matches(notBrokenRegex, \"Task is broken.\")\n            //             .required('Task is missing description.'),\n            //         task_id: Yup.string()\n            //             .required('Task is missing ID.'),\n            //     })\n            // ).required('Please select a task.'),\n            // banana: Yup.string()\n            //     .required('Please enter a name.'),\n            color: Yup.string()\n                .required('Please select a color.'),\n\n        })\n    ),\n\n});\n\n// returns error if any item in nested array is duplicate\nYup.addMethod(Yup.object, \"dopeUnique\", function (message, fieldPath, pathToArr) {\n    let mapper\n    if (fieldPath) mapper = x => get(x, fieldPath)\n\n    return this.test(\"dopeUnique\", message, function (item) {\n        const { path, createError, parent, options } = this\n        const {\n            context\n        } = options || {}\n        const {\n            [pathToArr]: arr\n        } = context || {}\n\n        let rx = /\\[(-?\\d+)\\]/g\n        const reg2 = /[\\[\\]']+/g\n\n        var index = path.match(rx);\n        let megaIndex = 0\n        const last = index.pop()\n\n        index.forEach((currItem) => {\n            const parsedIndex = parseInt(currItem.replace(reg2, ''))\n            for (let i = 0; i < parsedIndex; i++) {\n                megaIndex = megaIndex + arr[i].length\n            }\n        })\n        megaIndex = megaIndex + parseInt(last.replace(reg2, ''))\n\n        let compareItem\n        if (mapper) compareItem = mapper(item)\n\n\n        let isUnique = true\n\n        let currIndex = 0\n\n        for (const currItem of arr.flat()) {\n            if (parseInt(currIndex) !== parseInt(megaIndex)) {\n                if (mapper) {\n                    if (isString(compareItem) && isString(mapper(currItem)) && isEqualCI(compareItem.trim(), mapper(currItem).trim())) {\n                        isUnique = false\n                        return createError({ path: `${path}.${fieldPath}`, message })\n                    }\n                }\n                else {\n                    if (isString(item) && isString(currItem) && isEqualCI(item.trim(), currItem.trim())) {\n                        isUnique = false\n                        return createError({ path: `${path}.${fieldPath}`, message })\n                    }\n                }\n            }\n            currIndex = currIndex + 1\n        }\n\n        if (isUnique) {\n            return true;\n        }\n    });\n});\n\n// returns error if any item in nested array is duplicate\nYup.addMethod(Yup.object, \"lotFieldRequired\", function (message) {\n    return this.test(\"lotFieldRequired\", message, function (item) {\n        const { path, createError, parent, options } = this\n\n        const {\n            required,\n            value,\n            dataType\n        } = item || {}\n\n        if (required) {\n            switch (dataType) {\n                case FIELD_DATA_TYPES.DATE_RANGE: {\n                    if (!value || !isArray(value) || !(value[0] instanceof Date) || !(value[1] instanceof Date)) {\n                        return createError({ path: `${path}.value`, message })\n                    }\n                    break\n                }\n                case FIELD_DATA_TYPES.DATE: {\n                    if (!(value instanceof Date)) return createError({ path: `${path}.value`, message })\n                    break\n                }\n                case FIELD_DATA_TYPES.INTEGER: {\n                    if (!value) return createError({ path: `${path}.value`, message })\n                    break\n                }\n                case FIELD_DATA_TYPES.STRING: {\n                    if (!value) return createError({ path: `${path}.value`, message })\n                    break\n                }\n                default: {\n                    if (!value) return createError({ path: `${path}.value`, message })\n                    break\n                }\n            }\n        }\n\n        return true\n    });\n});\n\n// returns error if any item in nested array is duplicate\nYup.addMethod(Yup.array, \"nestedUnique\", function (message, path) {\n    const mapper = x => get(x, path);\n    return this.test(\"nestedUnique\", message, function (list) {\n        let set\n        let totalList = []\n        list.forEach((currList, currListIndex) => {\n            totalList = totalList.concat(currList)\n        })\n\n        set = [...new Set(totalList.map(mapper))];\n        const isUnique = totalList.length === set.length;\n        if (isUnique) {\n            return true;\n        }\n\n        let idx = 0\n        let rowIdx = 0\n        let i = 0\n        let err\n\n        for (const sublist of list) {\n            idx = 0\n\n            for (const item of sublist) {\n                if (!err && isEqualCI(mapper(item).trim(), set[i].trim())) {\n                    err = this.createError({ path: `fields[${rowIdx}][${idx}].${path}`, message })\n                }\n\n                idx = idx + 1\n                i = i + 1\n            }\n            rowIdx = rowIdx + 1\n        }\n\n        return err\n    });\n});\n\n// returns error if value is in arr\nYup.addMethod(Yup.string, \"notIn\", function (message, arr, pathToOthers) {\n    return this.test(\"notIn\", message, function (value) {\n        const { path, createError, parent, options } = this\n        const {\n            context\n        } = options || {}\n        const {\n            [pathToOthers]: others = []\n        } = context || {}\n\n        for (const item of arr.concat(Object.values(others))) {\n            if (isString(value) && isString(item) && isEqualCI(item.trim(), value.trim())) return createError({ path, message })\n        }\n        return true\n    });\n});\n\n// returns error if value is in arr\nYup.addMethod(Yup.string, \"uniqueByPath\", function (message, arrPath) {\n    return this.test(\"uniqueByPath\", message, function (value) {\n        const { path, createError, parent } = this;\n\n        if (value) {\n            const parentValues = parent[arrPath]\n\n            if (isArray(parentValues)) {\n                for (const currParentValue of parentValues) {\n\n                    const {\n                        name,\n                        id\n                    } = currParentValue\n\n                    if (name === value && parent._id !== id) return createError({ path, message })\n                }\n            }\n        }\n\n        return true\n    });\n});\n\n// Checks for unique values of an array of objects\nYup.addMethod(Yup.object, 'uniqueProperty', function (propertyName, message) {\n    return this.test('unique', message, function (value) {\n      if (!value || !value[propertyName]) {\n        return true;\n      }\n  \n      const { path } = this;\n      const options = [...this.parent];\n      const currentIndex = options.indexOf(value);\n  \n      const subOptions = options.slice(0, currentIndex);\n  \n      if (subOptions.some((option) => option[propertyName] === value[propertyName])) {\n        throw this.createError({\n          path: `${path}.${propertyName}`,\n          message,\n        });\n      }\n  \n      return true;\n    });\n  });\n\nexport const getSignUpSchema = (accessCode) => Yup.object().shape({\n    email: Yup.string()\n        .email()\n        .required('Please enter an email'),\n\n    accessCode: Yup.string()\n        .required('Please enter a access code')\n        .oneOf([accessCode], 'Must be a valid access code'),\n        // .matches(/\\b(c20513dd-a031-495e-bd38-a342128b24b9|690f5884-aef6-4f65-b098-9c9304baac48)\\b/, 'Must be a valid access code'),\n\n    password: Yup.string()\n        .required('Please enter a password')\n        .matches(\n            /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[A-Za-z\\d@$\\-!%*#?&]{8,}$/,\n            \"Must Contain at least 8 characters, one uppercase, one lowercase, and one number\"\n        ),\n\n    confirmPassword: Yup.string()\n        .oneOf([Yup.ref('password'), null], 'Passwords must match')\n        .required('Confirm password field cannot be left empty')\n})\n\nexport const signInSchema = Yup.object().shape({\n    email: Yup.string()\n        .email()\n        .required('Please enter an email'),\n    password: Yup.string()\n        .required('Please enter a password'),\n\n})\n\nexport const emailSchema = Yup.object().shape({\n    email: Yup.string()\n        .email()\n        .required('Please enter an email')\n})\n\nexport const passwordResetSchema = Yup.object().shape({\n    email: Yup.string()\n        .email()\n        .required('Please enter an email'),\n    verification: Yup.string()\n        .required('Please enter you verification code'),\n    password: Yup.string()\n        .required('Please enter a password')\n        .matches(\n            /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[A-Za-z\\d@$\\-!%*#?&]{8,}$/,\n            \"Must Contain 8 characters, one uppercase, one lowercase, one number and one special character\"\n        ),\n    checkPassword: Yup.string()\n        .oneOf([Yup.ref('password'), null], 'Passwords must match')\n        .required('Password confirm is required')\n})\n\nexport const quantityOneSchema = Yup.object().shape({\n    quantity: Yup.number()\n        .min(1, \"Must be at least 1.\")\n        .required('This field is required.'),\n})\n\n\nconst binsSchema = lazy(obj => object(\n    mapValues(obj, (value, key) => {\n        return Yup.object().shape({\n            count: Yup.number()\n                .min(1, \"Must be at least 1.\")\n                .required('This field is required.'),\n        })\n    })\n));\n\nexport const CARD_SCHEMA_MODES = {\n    EDIT_LOT: \"EDIT_LOT\",\n    MOVE_LOT: \"MOVE_LOT\"\n}\n\nexport const uniqueNameSchema = Yup.object().shape({\n    name: Yup.string()\n        .uniqueByPath(\"A lot with this name already exists.\", \"cardNames\"),\n})\n\nexport const editLotSchema = Yup.object().shape({\n    name: Yup.string()\n        // .min(1, '1 character minimum.')\n        .max(50, '50 character maximum.'),\n    fields: Yup.array().of(\n        Yup.array().of(\n            Yup.object().shape({\n                // value: Yup.\n            }).lotFieldRequired(\"This field is required.\")\n        )\n    ),\n    description: Yup.string()\n        .min(1, '1 character minimum.')\n        .max(250, '250 character maximum.'),\n    bins: binsSchema,\n    processId: Yup.string()\n        .min(1, '1 character minimum.')\n        .max(100, '50 character maximum.')\n        .required('Please select a process.')\n        .nullable(),\n    // dates: Yup.object().nullable().startEndDate(\"start\", \"end\", \"End date must be after start date.\")\n})\n\nexport const getMoveLotSchema = (maxCount) => Yup.object().shape({\n    moveCount: Yup.number()\n        .min(1, 'Must be positive value.')\n        .max(maxCount, `Only ${maxCount} items are available.`)\n        .required('Please enter a quantity.'),\n    moveLocation: Yup.array().of(\n        Yup.object().shape({\n            name: Yup.string()\n                .required('Please select a destination.'),\n        })\n    )\n        .min(1, 'Please select a destination.')\n        .required('Please select a destination.')\n        .nullable(),\n})\n\nexport const LotFormSchema = Yup.object().shape({\n    fields: Yup.array().of(\n        Yup.array().of(\n            Yup.object().shape({\n                _id: Yup.string()\n                    .required('Field missing ID.'),\n                fieldName: Yup.string()\n                    .min(1, '1 character minimum.')\n                    .max(50, '50 character maximum.')\n                    .notIn(\"This field name is already being used.\", [], \"displayNames\")\n                    .notIn(\"This field name is reserved.\", Object.values(LOT_TEMPLATES_RESERVED_FIELD_NAMES))\n                    .required('Please enter a name for this field.'),\n                style: Yup.object()\n            }).dopeUnique(\"Field names must be unique\", \"fieldName\", \"fields\")\n        )\n    ),\n    name: Yup.string()\n        .min(1, '1 character minimum.')\n        .max(50, '50 character maximum.')\n        .required('Please enter a name.'),\n})\n\nexport const templateMapperSchema = Yup.object().shape({\n    selectedFieldNames: Yup.array().of(\n        Yup.object().shape({\n            fieldName: Yup.string()\n                .min(1, '1 character minimum.')\n                .max(255, '50 character maximum.')\n                .required('Please enter field name.'),\n        }).dopeUnique(\"Field names must be unique\", \"fieldName\", \"selectedFieldNames\")\n    )\n})\n\nexport const selectLotQuantitySchema = Yup.object().shape({\n    items: Yup.array().of(\n        Yup.object().shape({\n            quantity: Yup.number()\n                .min(1, 'Must be at least 1.')\n                .required('Required.')\n        })\n    )\n})\n\n\nexport const getCardSchema = (mode, availableBinItems) => {\n    switch (mode) {\n        case CARD_SCHEMA_MODES.EDIT_LOT:\n            return editLotSchema\n        case CARD_SCHEMA_MODES.MOVE_LOT:\n            return getMoveLotSchema(availableBinItems)\n        default:\n            return editLotSchema\n\n    }\n\n}\n\nconst routeStationSchema = lazy(obj => {\n\n    let positionSchema\n    let stationSchema\n    if (isObject(obj)) {\n        if (!obj.position && !obj.station) {\n            positionSchema = Yup.string().nullable()\n            stationSchema = Yup.string().nullable().required('Please select a location.')\n        }\n        else if (obj.station && !obj.position) {\n            positionSchema = Yup.string().nullable()\n            stationSchema = Yup.string().nullable().required('Please select a location.')\n        }\n        else if (obj.position && !obj.station) {\n            positionSchema = Yup.string().nullable().required('Please select a location.')\n            stationSchema = Yup.string().nullable()\n        }\n        else {\n            positionSchema = Yup.string().nullable().required('Please select a location.')\n            stationSchema = Yup.string().nullable().required('Please select a location.')\n        }\n    } else {\n        positionSchema = Yup.string().nullable().required('Please select a location.')\n        stationSchema = Yup.string().nullable().required('Please select a location.')\n    }\n\n\n\n    return Yup.object().shape({\n        instructions: Yup.string().nullable(),\n        position: positionSchema,\n        station: stationSchema,\n        timeout: Yup.string().nullable(),\n    })\n});\n\nexport const routeSchema = Yup.object().shape({\n    name: Yup.string()\n        .min(1, '1 character minimum.')\n        .max(75, '75 character maximum.')\n        .required('Please enter a name.'),\n    load: Yup.string().required('Select a load location'),\n    unload: Yup.string().required('Select an unload location')\n})//.uniqueProperty('part', 'Route part names must be unique')\n\n\nexport const hilModalSchema = Yup.object().shape({\n    quantity: Yup.number()\n        .min(1, 'Minimum value of 1 required.')\n})\n\nexport const routesSchema = Yup.array().of(\n    routeSchema\n)\n\n// export const processSchema = Yup.object().shape({\n//     name: Yup.string()\n//         .min(1, '1 character minimum.')\n//         .max(50, '50 character maximum.')\n//         .required('Please enter a name.'),\n//     routes: routesSchema,\n\n// })\n\n// const DFSIsCyclic = (routes, node, visited) => {\n//     const outgoingRoutes = getNodeOutgoing(node, routes);\n\n//     for (var outgoingRoute of outgoingRoutes){\n//         const nextNode = outgoingRoute.unload;\n//         if (visited[nextNode] === 'EXPLORING') {\n//             return true\n//         } else if (visited[nextNode] === false) {\n//             visited[nextNode] = 'EXPLORING'\n//             let isCyclic = DFSIsCyclic(routes, nextNode, deepCopy(visited));\n//             if (isCyclic) return true\n//         }\n//     }\n\n//     visited[node] = true;\n//     return false;\n\n// }\n\nconst findAndExpressions = (exp) => {\n    let andExpressions = [];\n\n    const recursiveFindAnd = (exp) => {\n        // Recursive function to find all AND expressions (split) in the merge expression\n       if (exp[0] === 'AND') {\n           andExpressions.push(exp)\n       };\n       for (var i=1; i<exp.length; i++) {\n           if (Array.isArray(exp[i])) {\n               if (recursiveFindAnd(exp[i])) {\n                   return true;\n               }\n           }\n       }\n       return false;\n    }\n\n    recursiveFindAnd(exp);\n}\n\nconst doesExpressionConverge = (exp, routes, nodeId) => {\n\n    if (Array.isArray(exp)) {\n        if (exp[0] === 'AND') {\n            for (var i=1; i<exp.length; i++) {\n                if (!doesExpressionConverge(exp[i], routes, nodeId)) {\n                    return false\n                }\n            }\n            return true\n        } else {\n            for (var i=1; i<exp.length; i++) {\n                if (doesExpressionConverge(exp[i], routes, nodeId)) {\n                    return true\n                }\n            }\n            return false;\n        }\n        \n    } else {\n        return routes[exp].unload === nodeId\n    }\n\n}\n\n\nexport const getProcessSchema = (stations) => Yup.object().shape({\n    name: Yup.string()\n        .min(1, '1 character minimum.')\n        .max(50, '50 character maximum.')\n        .required('Please enter a name.'),\n    routes: Yup.array().of(\n        routeSchema.test(\n            'doesConnectWarehouses',\n            'Routes cannot go between two warehouses',\n            (route) => !(stations[route.load]?.type === 'warehouse' && stations[route.unload]?.type === 'warehouse')\n        )\n    ).test(\n        'doesHaveStartNode',\n        'All processes must have at least one \"Kick Off\" station (The beginning of this process is ambiguous).',\n        (routes) => {\n            const startNodes = findProcessStartNodes(routes);\n            if (startNodes.length === 0) return false;\n            else return true\n        }\n    ).test(\n        'doesHaveEndNode',\n        'All processes must have at least one \"Finish\" station. This process has no end.',\n        (routes) => {\n            const endNodes = findProcessEndNodes(routes);\n            if (endNodes.length === 0) return false;\n            else return true\n        }\n    ).test(\n        'doRoutesConverge',\n        'All split branches of the process must converge at a single station',\n        function (routes) {\n\n            const { startDivergeType } = this.parent\n\n            let normalizedRoutes = {}\n            routes.forEach(route => normalizedRoutes[route._id] = route)\n            let routeIds = routes.map(r=>r._id)\n\n            // const allNodes = routes.reduce((nodes, route) => {\n            //     if (!nodes.includes(route.load)) nodes.push(route.load)\n            //     if (!nodes.includes(route.unload)) nodes.push(route.unload)\n            //     return nodes\n            // }, [])\n            // allNodes.forEach(node => {\n            //     const mergeExp = handleMergeExpression(node, {startDivergeType, routes: routeIds}, normalizedRoutes, stations)\n            // })\n\n            // You can have multiple end nodes, as long as none of them are on a 'split' branch\n            const endNodes = findProcessEndNodes(routes);\n            for (var endNode of endNodes) {\n                const mergeExp = handleMergeExpression(endNode, {startDivergeType, routes: routeIds}, normalizedRoutes, stations, false)\n                if (mergeExp === null || !doesExpressionConverge(mergeExp, normalizedRoutes, endNode)) {\n                    return false;\n                }\n            }\n            return true\n        }\n    ).test(\n        'isProcessValidCyclic',\n        'This process contains a loop that loops back to a station that is not on the same branch. Looping routes must not loop back to stations that are before a splitting route.',\n        function (routes) {\n            // const { startDivergeType } = this.parent\n\n            const startNodes = findProcessStartNodes(routes);\n\n            for (var startNode of startNodes) {\n                let stack = [startNode];\n                let loopRoutes = DFSContainsCycle(routes, stack, [])\n                for (var loopRoute of loopRoutes) {\n                    const validConnectionStations = backTraverseUntilSplit(loopRoute.load, routes, [])\n                    if (!validConnectionStations.includes(loopRoute.unload)) {\n                        return false\n                    }\n                }\n            }\n\n            return true\n        }\n    )\n\n})\n\nconst backTraverseUntilSplit = (node, routes, visited) => {\n\n    visited.push(node);\n    const incomingRoutes = getNodeIncoming(node, routes, true)\n    for (var inRoute of incomingRoutes) {\n        if (inRoute.divergeType !== 'split') {\n            visited = backTraverseUntilSplit(inRoute.load, routes, visited);\n        }\n    }\n\n    return visited;\n\n}\n\nconst DFSContainsCycle = (routes, stack, loopRoutes) => {\n\n    let node = stack[stack.length-1];\n    let outgoingRoutes = getNodeOutgoing(node, routes);\n\n    for (var outgoingRoute of outgoingRoutes) {\n        let nextNode = outgoingRoute.unload;\n        if (stack.includes(nextNode)) {\n            loopRoutes.push(outgoingRoute)\n            continue\n        }\n        let nextStack = deepCopy(stack);\n        nextStack.push(nextNode);\n        loopRoutes = DFSContainsCycle(routes, nextStack, deepCopy(loopRoutes))\n    }\n\n    return loopRoutes\n\n}\n\nexport const locationSchema = (stations, selectedLocation) => {\n\n    let stationNames = []\n    Object.values(stations).forEach(station => {\n        if (!!selectedLocation && station._id === selectedLocation._id) {\n\n        }\n        else {\n            stationNames.push(station.name)\n        }\n    })\n\n    return (\n        Yup.object().shape({\n            locationName: Yup.string()\n                .required('Please enter a name')\n                .notOneOf(stationNames, 'Name already in use')\n        })\n    )\n}\n\n\n// Sees if input1 is greater than input2. If so then through error\nYup.addMethod(Yup.string, 'greaterThan', function (input2Path, message) {\n    return this.test('greaterThan', message, function (input1) {\n        const { parent, path, createError } = this\n\n        const input2 = parent[input2Path]\n\n        // Take the Hour and minute\n        const [beg1, end1] = input1.split(':')\n        const [beg2, end2] = input2.split(':')\n\n        const input1Int = parseInt(`${beg1}${end1}`)\n        const input2Int = parseInt(`${beg2}${end2}`)\n\n        if (input1Int < input2Int) return true\n        else {\n            return this.createError({\n                path: this.path,\n                message: message,\n            })\n        }\n\n    })\n})\n\n// Sees if input1 is less than input2. If so then through error\nYup.addMethod(Yup.string, 'lessThan', function (input2Path, message) {\n    return this.test('lessThan', message, function (input1) {\n        const { parent, path, createError } = this\n        const input2 = parent[input2Path]\n\n        // Take the Hour and minute\n        const [beg1, end1] = input1.split(':')\n        const [beg2, end2] = input2.split(':')\n\n        const input1Int = parseInt(`${beg1}${end1}`)\n        const input2Int = parseInt(`${beg2}${end2}`)\n\n        if (input1Int > input2Int) return true\n        else {\n            return this.createError({\n                path: this.path,\n                message: message,\n            })\n        }\n\n    })\n})\n\n// Sees if input1 is less than input2. If so then through error\nYup.addMethod(Yup.number, 'lessThanInt', function (input2Path, message) {\n    return this.test('lessThanInt', message, function (input1) {\n        const { parent, path, createError } = this\n        const input2 = parent[input2Path]\n\n        if (!input2 || !input1) return true\n        if (input1 < input2) return true\n        else {\n            return this.createError({\n                path: this.path,\n                message: message,\n            })\n        }\n\n    })\n})\n\nexport const throughputSchema = Yup.object().shape({\n    expectedOutput: Yup.number()\n        .nullable(),\n    switch1: Yup.bool(),\n    startOfShift: Yup.string()\n        .required('Required'),\n    endOfShift: Yup.string()\n        .required('Required')\n        .lessThan(\"startOfShift\", 'The end of the shift cannot be before the start of the shift'),\n    startOfBreak1: Yup.string()\n        // Only validate when true\n        .when('switch1', {\n            is: true,\n            then: Yup.string()\n                .required('Required')\n                // Make sure it starts after the start of shift and before the end of the shift\n                .lessThan(\"startOfShift\", 'The first break cannot be before the start of the shift')\n                .greaterThan(\"endOfShift\", 'The end of the last break must be before the end of the shift')\n                // Make sure it starts before the end of the break\n                .greaterThan(\"endOfBreak1\", 'The start of the break must be before the end of the break'),\n        }),\n\n    endOfBreak1: Yup.string()\n        // Only validate when true\n        .when('switch1', {\n            is: true,\n            then: Yup.string()\n                .required('Required')\n                // Make sure it starts after the start of shift and before the end of the shift\n                .lessThan(\"startOfShift\", 'The first break cannot be before the start of the shift')\n                .greaterThan(\"endOfShift\", 'The end of the last break must be before the end of the shift')\n                .lessThan(\"startOfBreak1\", 'The end of break cannot be before the start of the break')\n                .when('switch2', {\n                    is: true,\n                    then: Yup.string()\n                        .greaterThan(\"startOfBreak2\", 'The end of the break must be before the start of the next break break'),\n                })\n        }),\n\n\n    startOfBreak2: Yup.string()\n        // Only validate when true\n        .when('switch2', {\n            is: true,\n            then: Yup.string()\n                .required('Required')\n                // Make sure it starts after the start of shift and before the end of the shift\n                .lessThan(\"startOfShift\", 'The first break cannot be before the start of the shift')\n                .greaterThan(\"endOfShift\", 'The end of the last break must be before the end of the shift')\n                .greaterThan(\"endOfBreak2\", 'The start of the break must be before the end of the break')\n                .when('switch1', {\n                    is: true,\n                    then: Yup.string()\n                        .lessThan(\"endOfBreak1\", 'The start of break cannot be before the end of the previous break'),\n                }),\n        }),\n\n    endOfBreak2: Yup.string()\n        // Only validate when true\n        .when('switch2', {\n            is: true,\n            then: Yup.string()\n                .required('Required')\n                // Make sure it starts after the start of shift and before the end of the shift\n                .lessThan(\"startOfShift\", 'The first break cannot be before the start of the shift')\n                .greaterThan(\"endOfShift\", 'The end of the last break must be before the end of the shift')\n                .lessThan(\"startOfBreak2\", 'The end of break cannot be before the start of the break')\n\n                .when('switch3', {\n                    is: true,\n                    then: Yup.string()\n                        .greaterThan(\"startOfBreak3\", 'The end of the break must be before the start of the next break break'),\n                }),\n        }),\n\n    startOfBreak3: Yup.string()\n        // Only validate when true\n        .when('switch3', {\n            is: true,\n            then: Yup.string()\n                .required('Required')\n                // Make sure it starts after the start of shift and before the end of the shift\n                .lessThan(\"startOfShift\", 'The first break cannot be before the start of the shift')\n                .greaterThan(\"endOfShift\", 'The end of the last break must be before the end of the shift')\n                .greaterThan(\"endOfBreak3\", 'The start of the break must be before the end of the break')\n                .when('switch2', {\n                    is: true,\n                    then: Yup.string()\n                        .lessThan(\"endOfBreak2\", 'The start of break cannot be before the end of the previous break'),\n                }),\n        }),\n\n    endOfBreak3: Yup.string()\n        // Only validate when true\n        .when('switch3', {\n            is: true,\n            then: Yup.string()\n                .required('Required')\n                // Make sure it starts after the start of shift and before the end of the shift\n                .lessThan(\"startOfShift\", 'The first break cannot be before the start of the shift')\n                .greaterThan(\"endOfShift\", 'The end of the last break must be before the end of the shift')\n                .lessThan(\"startOfBreak3\", 'The end of break cannot be before the start of the break')\n        }),\n\n})\n\n\nexport const deviceSchema = Yup.object().shape({\n\n    schedules: Yup.array()\n        .of(\n            Yup.object().shape({\n                name: Yup.string().required('Required').nullable(),\n                position: Yup.string().required('Required').nullable(),\n                time: Yup.string().required('Required').nullable()\n            })\n        ),\n\n    charge_level: Yup.object().shape({\n        chargeEnabled: Yup.bool(),\n        min: Yup.number()\n            .lessThanInt(\"max\", 'Min Percent must be less then Max percent')\n            // Only validate when true\n            .when('chargeEnabled', {\n                is: true,\n                then: Yup.number()\n                    .required('Required')\n                    .nullable(),\n            }),\n        max: Yup.number()\n            // Only validate when true\n            .when('chargeEnabled', {\n                is: true,\n                then: Yup.number()\n                    .required('Required')\n                    .nullable(),\n            }),\n\n    }),\n})\n","\n// regex for time string\nexport const timeStringRegex = /^(?:(?:([01]?\\d|2[0-3]):)?([0-5]?\\d):)?([0-5]?\\d)$/\n\n// regex for OID's\nexport const oidRegex = /^([0-2])((\\.0)|(\\.[1-9][0-9]*))*$/\n\n// valid if input does NOT match \"broken\" or \"BROKEN\"\nexport const notBrokenRegex = /^(?!.*(broken|.*BROKEN))/;\n\n// valid if input does NOT match \"TASK DELETED\"\nexport const notTaskDeletedRegex = /^(?!.*(TASK DELETED))/;\n\nexport const hoursRegex = /^(2[0-4]|1[0-9]|0[0-9]|[0-9])$/\nexport const minutesRegex = /^(5[0-9]|4[0-9]|3[0-9]|2[0-9]|1[0-9]|[0-9])$/\nexport const secondsRegex = /^(5[0-9]|4[0-9]|3[0-9]|2[0-9]|1[0-9]|[0-9])$/","import styled from 'styled-components';\nimport TimePicker from 'rc-time-picker';\nimport {css} from 'styled-components'\n\nexport const DefaultLabelComponent = styled.label`\n`;\n\nexport const DefaultFieldContainer = styled.div`\n`;\n\nexport const DefaultContentContainer = styled.div`\n    flex-direction: row;\n    align-items: center;\n    width: 100%;\n    position: relative;\n    display: flex;\n    \n`;\n\nexport const DefaultInputContainer = styled.div`\n    // width: 90%;\n    flex: 1;\n    align-items: center;\n    margin: 0;\n    padding: 0;\n    position: relative;\n   \n`;\n\nexport const DefaultInputComponent = styled.input`\n    //  background: ${props =>  props.hasError && props.theme.bad};\n`;\n\nexport const IconContainerComponent = styled.div`\n    width: auto;\n    height: auto;\n    position: absolute;\n    top: 50%;\n    right: 1rem;\n    transform: translateY(-50%);\n    margin: 0;\n    padding: 0;\n    // background: magenta;\n    \n    ${props => props.iconContainerCss};\n    \n`;\n\n","import React, { useContext, useEffect } from \"react\";\nimport PropTypes from 'prop-types';\nimport { useField, useFormikContext } from \"formik\";\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport ErrorTooltip from '../error_tooltip/error_tooltip';\nimport useChange from '../../../basic/form/useChange'\nimport * as styled from './text_field.style'\nimport { getMessageFromError } from \"../../../../methods/utils/form_utils\";\n\nimport { pageDataChanged } from '../../../../redux/actions/sidebar_actions'\nimport { ThemeContext } from \"styled-components\";\n\n\nconst TextField = ({\n    InputComponent,\n    ErrorComponent,\n    LabelComponent,\n    InputContainer,\n    fieldLabel,\n    onBlur,\n    onFocus,\n    onChange,\n    inputStyleFunc,\n    IconContainerComponent,\n    ContentContainer,\n    inputContainerStyle,\n    errorTooltipContainerStyle,\n    showErrorStyle,\n    containerStyle,\n    FieldContainer,\n    mapInput,\n    autoFocus,\n    mapOutput,\n    inputProps,\n\n    style,\n    ...props }) => {\n\n    const { setFieldValue, setFieldTouched, validateOnChange, validateOnBlur, validateField, status, validateForm, ...context } = useFormikContext();\n    const [field, meta] = useField(props);\n    const { touched, error } = meta\n    const {\n        name: fieldName\n    } = field\n\n    const {\n        warnings\n    } = status || {}\n\n    const {\n        [fieldName]: warning\n    } = warnings || {}\n\n    const themeContext = useContext(ThemeContext)\n\n    const hasError = touched && error\n    const hasWarning = touched && warning\n\n    const errorMessage = getMessageFromError(error)\n    const warningMessage = getMessageFromError(warning)\n\n    return (\n        <>\n            {fieldLabel &&\n                <LabelComponent hasError={hasError} htmlFor={props.id || props.name}>{fieldLabel}</LabelComponent>\n            }\n            <ContentContainer style={containerStyle}>\n                <InputContainer>\n                    <InputComponent\n                        className='form-control'\n                        autofocus={true}\n                        {...field}\n                        {...inputProps}\n                        {...props}\n\n                        style={{ ...style}}\n                        inputStyle={{\n                            ...props.inputStyle,\n                            boxShadow:  (hasError && showErrorStyle) && `0 0 5px red`,\n                            border: (hasError && showErrorStyle) && \"1px solid red\",\n                        }}\n                        value={mapInput(field.value)}\n                        onChange={(event) => {\n                            // update touched if necessary\n                            if (!touched) {\n                                setFieldTouched(fieldName, true)\n                            }\n\n                            setFieldValue(fieldName, mapOutput(event.target.value)) // update field value\n\n                            onChange(event) // call additional onChange prop if necessary\n                        }}\n                        // set field touched and call onBlur prop\n                        onBlur={(event) => {\n                            // update touched if necessary\n                            if (!touched) {\n                                setFieldTouched(fieldName, true)\n                            }\n\n                            // validateOnBlur && validateField(field.name) // validate if necessary\n                            // validateField(field.name) // validate if necessary\n\n                            onBlur(event) // call onBlur prop if passed\n                        }}\n                        tooltip={\n                            <ErrorTooltip\n                                visible={hasError || hasWarning}\n                                text={hasError ? errorMessage : hasWarning ? warningMessage : null}\n                                color={hasWarning && !hasError ? themeContext.warn : themeContext.bad}\n                                ContainerComponent={IconContainerComponent}\n                                containerStyle={errorTooltipContainerStyle}\n                            />\n                        }\n                    />\n\n                </InputContainer>\n\n            </ContentContainer>\n\n\n\n        </>\n    );\n};\n\n/* *\n*\n* Returns style for input component\n* Accepts hasError prop, which can be used to change styling based on presence of errors\n*\n* */\nconst defaultInputStyleFunc = (hasError, showErrorStyle) => {\n    return {\n        boxShadow:  hasError && `0 0 1px red !important`,\n        border: hasError && \"1px solid red\",\n\n    }\n}\n\n// Specifies propTypes\nTextField.propTypes = {\n    LabelComponent: PropTypes.elementType,\n    InputComponent: PropTypes.elementType,\n    InputContainer: PropTypes.elementType,\n    onBlur: PropTypes.func,\n    onFocus: PropTypes.func,\n    onChange: PropTypes.func,\n    inputStyleFunc: PropTypes.func,\n    fieldLabel: PropTypes.string,\n    IconContainerComponent: PropTypes.elementType,\n    ContentComponent: PropTypes.elementType,\n    style: PropTypes.object,\n    showErrorStyle: PropTypes.bool,\n};\n\n// Specifies the default values for props:\nTextField.defaultProps = {\n    LabelComponent: styled.DefaultLabelComponent,\n    InputComponent: styled.DefaultInputComponent,\n    InputContainer: styled.DefaultInputContainer,\n    onBlur: () => { },\n    onFocus: () => { },\n    onChange: () => { },\n    fieldLabel: \"\",\n    inputStyleFunc: defaultInputStyleFunc,\n    IconContainerComponent: styled.IconContainerComponent,\n    ContentContainer: styled.DefaultContentContainer,\n    FieldContainer: styled.DefaultFieldContainer,\n    style: {},\n    validateOnBlur: false,\n    showErrorStyle: false,\n    mapInput: (val) => val,\n    mapOutput: (val) => val,\n};\n\nexport default TextField;\n","import React, { useState } from \"react\";\nimport { getIsEquivalent } from \"../../../methods/utils/utils\";\nimport {useField, useFormikContext} from \"formik\";\n\n// Updates fields in parent form\nconst useChange = (fieldName) => {\n\tconst { setFieldValue, setFieldTouched, validateOnChange, validateOnBlur, validateField, validateForm, ...context } = useFormikContext();\n\tconst [field, meta] = useField(fieldName ? fieldName : \"null\");\n\n\tlet value\n\tif(fieldName) {\n\t\tvalue = meta?.value || {}\n\t}\n\telse {\n\t\tvalue = context.values || {}\n\t}\n\n\tconst {\n\t\tchanged: changedSet\n\t} = value || {}\n\n\tconst [changed, setChanged] = useState(false);\n\tconst [initialValue, setInitialValue] = useState(value);\n\n\tReact.useEffect(() => {\n\n\t\t// if values have changed from initial values, set changed to true\n\n\t\tif(!changed) {\n\n\t\t\tconst issEquivalent = getIsEquivalent(initialValue, value)\n\n\n\t\t\tif(!issEquivalent) {\n\t\t\t\tsetChanged(true);\n\t\t\t\tsetFieldValue(fieldName ? `${fieldName}.changed` : 'changed', true);\n\t\t\t}\n\t\t}\n\n\t\telse {\n\t\t\tif(!changedSet) {\n\t\t\t\tsetChanged(false)\n\t\t\t\tsetInitialValue(value)\n\t\t\t}\n\t\t}\n\n\t\t// if values are changed back to original value, set changed to false\n\t\t// if(changed) {\n\t\t// \tconsole.log(\"beeep\")\n\t\t// \tif(issEquivalent) {\n\t\t// \t\tconsole.log(\"ayooo\")\n\t\t// \t\tsetChanged(false);\n\t\t// \t\tparentForm.setFieldValue(\"changed\", false);\n\t\t// \t}\n\t\t// }\n\n\t}, [value]);\n\n\t// handle mount and dismount\n\tReact.useEffect(() => {\n\t\t/* add any mount logic here\n\n\n\t\t */\n\n\t\t// dismount\n\t\treturn () => {\n\t\t\t// set changed to true\n\t\t\t// parentForm.setFieldValue(\"changed\", true);\n\t\t};\n\t}, []);\n};\n\nexport default useChange\n","import styled from 'styled-components'\n\nexport const TitleContainer = styled.h1`\n    font-size: ${props => props.theme.fontSize.sz2};\n    font-family: ${props => props.theme.font.primary};\n    color: ${props => props.theme.bg.septenary};\n    margin-top: .6rem;\n`;\n\nexport const DefaultContainer = styled.div`\n`;\n\nexport const DefaultFieldContentContainer = styled.div`\n    width: 100%;\n    height: auto;\n    position: relative;\n    // background: blue;\n`;\n\nexport const DefaultFieldDropdownContainer = styled.div`\n    flex: 1;\n`;\n\nexport const IconContainerComponent = styled.div`\n    width: auto;\n    height: auto;\n    position: absolute;\n    top: 50%;\n    right: 2rem;\n    transform: translateY(-50%);\n    margin: 0;\n    padding: 0;\n    background; cyan;\n`;\n","import React, { Component, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useField, useFormikContext } from \"formik\";\nimport DropDownSearch from '../../drop_down_search_v2/drop_down_search';\n// import {globStyle} from '../../../../global_style'\nimport { getMessageFromError } from \"../../../../methods/utils/form_utils\";\n\n// import styles\nimport * as styled from './drop_down_search_field.style'\nimport ErrorTooltip from \"../error_tooltip/error_tooltip\";\nimport { isEmpty } from \"ramda\";\n\n\nconst DropDownSearchField = ({\n    fieldLabel,\n    LabelComponent,\n    ItemComponent,\n    ContentComponent,\n    ErrorComponent,\n    onDropdownClose,\n    onChange,\n    FieldContentContainer,\n    FieldDropdownContainer,\n    Container,\n    style,\n    containerSyle,\n    mapInput,\n    mapOutput,\n    ...props\n}) => {\n\n    const { setFieldValue, setFieldTouched } = useFormikContext();\n    const [field, meta] = useField(props);\n    const hasError = meta.touched && meta.error;\n\n    const [value, setValue] = useState(field.value)\n    const [touched, setTouched] = useState(field.touched)\n    const [updatingValue, setUpdatingValue] = useState(false)\n\n    /*\n    * This is kindy funky\n    * The first time you select a value, both onChange and onDropdownClose get called since the dropdown closes when you select a value\n    * onChange is called first, and updates the values and performs validation\n    * THEN onDropdownClose is called, updates field.touched and performs validation\n    * however, onDropdownClose gets called AFTER onChange but still has the old values\n    * This means a second validation would be performed with the old values, which can result in a validation error for the old values, even if the new values don't have an error\n    * by managing it in a hook this way, validation for field.touched can be controlled directly\n    *\n    * */\n    useEffect(() => {\n\n        if (touched) {\n            // update touched\n            // only perform validation if value is not being updated, otherwise validate will be called twice unnecessarily\n            setFieldTouched(field.name, touched, !updatingValue)\n        }\n        // set\n        if (updatingValue) setUpdatingValue(false)\n\n        return () => {\n            setTouched(false)\n        }\n\n    }, [touched])\n\n    let ReactDropdownSelectStyle = {\n        borderColor: hasError && 'red',\n        boxShadow: hasError && `0 0 5px red`,\n    }\n\n    const errorMessage = getMessageFromError(meta.error);\n\n    return (\n        <Container\n            style={containerSyle}\n        >\n            {fieldLabel &&\n                <LabelComponent>{fieldLabel}</LabelComponent>\n            }\n\n            <styled.DefaultFieldContentContainer>\n                {/*<style.DefaultFieldDropdownContainer>*/}\n                <DropDownSearch\n                    onBlur={() => { }}\n                    style={{ ReactDropdownSelectStyle, ...style }}\n                    theme={props.theme}\n                    ItemComponent={ItemComponent}\n                    ContentComponent={ContentComponent}\n                    onDropdownClose={() => {\n                        // set this field to touched if not already\n                        const isTouched = meta.touched;\n                        if (!isTouched) {\n                            setTouched(true)\n                        }\n                        // call any additional function that was passed as prop\n                        onDropdownClose && onDropdownClose();\n                    }}\n                    values={field.value ? mapInput(field.value) : []}\n                    {...field}\n                    {...props}\n                    onChange={values => {\n                        // update field value and set updating to true for use in the hook\n                        setFieldValue(field.name, mapOutput(values));\n                        setUpdatingValue(true)\n                        onChange && onChange(values)\n                    }}\n                    onRemoveItem={\n                        () => {\n                            // set this field to touched if not already\n                            const isTouched = meta.touched;\n                            if (!isTouched) {\n                                setTouched(true)\n                            }\n                            setFieldValue(field.name, \"\");\n\n                        }\n                    }\n\n                    onClearAll={() => setFieldValue(field.name, \"\")}\n                />\n                {/*</style.DefaultFieldDropdownContainer>*/}\n\n                <ErrorTooltip\n                    visible={hasError}\n                    text={errorMessage}\n                    ContainerComponent={styled.IconContainerComponent}\n                />\n            </styled.DefaultFieldContentContainer>\n            {/*\n\t\t\t{meta.touched && meta.error ? (\n\t\t\t\t<ErrorComponent className=\"error\">{Object.values(meta.error)}</ErrorComponent>\n\t\t\t) : null}\n\t\t\t*/}\n\n        </Container>\n    );\n};\n\n// Specifies propTypes\nDropDownSearchField.propTypes = {\n    LabelComponent: PropTypes.elementType,\n    FieldDropdownContainer: PropTypes.elementType,\n    FieldContentContainer: PropTypes.elementType,\n    style: PropTypes.object,\n    mapInput: PropTypes.func,\n    mapOutput: PropTypes.func,\n};\n\n// Specifies the default values for props:\nDropDownSearchField.defaultProps = {\n    LabelComponent: styled.TitleContainer,\n    FieldDropdownContainer: styled.DefaultFieldDropdownContainer,\n    FieldContentContainer: styled.DefaultFieldContentContainer,\n    Container: styled.DefaultContainer,\n    onChange: null,\n    mapInput: (val) => val,\n    mapOutput: (val) => val,\n    style: {}\n};\n\nexport default DropDownSearchField;\n","// Import Store\nimport store from '../../redux/store/index'\nimport moment from 'moment';\n\nexport const getMinutesFromMoment = (m) => {\n    return m.minutes() + m.hours() * 60;\n}\n\n/**\n * Takes in time12h which is a string: 1:30 pm\n * Converts that string into a 24h string: 13:30\n * @param {*} time12h \n */\nexport const convert12hto24h = (time12h) => {\n    const [numericTime, modifier] = time12h.split(' ');\n\n    let [hours, minutes] = numericTime.split(':');\n\n    if (hours === '12' && (modifier === 'AM' || modifier === 'am')) {\n        hours = '00';\n    } else if (hours === '12' && (modifier === 'PM' || modifier === 'pm')) {\n        hours = '12';\n    }\n\n    if ((modifier === 'PM' || modifier === 'pm') && hours !== '12') {\n        hours = parseInt(hours, 10) + 12;\n    }\n    return `${hours}:${minutes}`\n}\n\n/**\n * Takes in a string time24h: 13:30\n * Converts that string into a 12h string: 1:30 pm\n * @param {*} time24h \n */\nexport const convert24hto12h = (time24h) => {\n    let modifier = 'am'\n\n    let [hours, minutes] = time24h.split(':');\n\n    hours = parseInt(hours)\n\n    if (hours >= 12) {\n        if (hours > 12) {\n            hours = hours - 12\n        }\n        modifier = 'pm'\n    }\n\n    if (minutes.length === 1) {\n        minutes = `0${minutes}`\n    }\n\n    return `${hours}:${minutes} ${modifier}`\n\n}\n\n/**\n * Takes in a string: 1 pm\n * Converts that string to 24 hours: 13:000\n * @param {*} string \n */\nexport const convertTimeStringto24h = (string) => {\n    let [hour, modifier] = string.split(' ');\n    hour = parseInt(hour)\n\n    // If pm and not 12pm then add 12\n    if (modifier === 'pm' && hour !== 12) {\n        hour = hour + 12\n    }\n\n    // If hour is 12pmm, then set to 0\n    if (hour === 12 && modifier === 'pm') {\n        hour = 0\n    }\n\n    // Convert back to string\n    // Add 0 to front if need be\n    if (hour < 10) {\n        hour = hour.toString()\n        hour = `0${hour}`\n    }\n    else {\n        hour = hour.toString()\n    }\n\n    return `${hour}:00`\n\n}\n\nexport const convertEpochTo12h = (epoch) => {\n\n    let convertedTime = new Date(epoch * 1000)\n    let hour = convertedTime.getHours()\n    let minute = convertedTime.getMinutes()\n\n    hour = parseInt(hour)\n    minute = parseInt(minute)\n\n    if (hour < 10) {\n        hour = hour.toString()\n        hour = `0${hour}`\n    }\n    else {\n        hour = hour.toString()\n    }\n\n    if (minute < 10) {\n        minute = minute.toString()\n        minute = `0${minute}`\n    }\n    else {\n        minute = minute.toString()\n    }\n\n    return `${hour}:${minute}`\n}\n\n/**\n * Converts 24h string to int\n * '13:00' is converted to 1300\n * @param {*} time24h \n */\nexport const convert24htoInt = (time24h) => {\n    const [hour, minute] = time24h.split(':')\n    return parseInt(`${hour}${minute}`)\n}\n\n/**\n * Converts into to 24h\n * 1300 is converted to '13:00'\n * @param {*} int \n */\nexport const convertIntto24h = (int) => {\n    let hour\n    let minute\n\n    // If the string length is 3, then the hour must start with a 0\n    if (int.toString().length === 3) {\n        hour = `0${int.toString()[0]}`\n        minute = `${int.toString()[1]}${int.toString()[2]}`\n    }\n    else {\n        hour = `${int.toString()[0]}${int.toString()[1]}`\n        minute = `${int.toString()[2]}${int.toString()[3]}`\n    }\n    return `${hour}:${minute}`\n}\n\n/**\n * Converts strings into time\n * time24h string format: 13:00\n * date string format: May 13, 1993\n * @param {*} time24h \n * @param {*} date \n */\nexport const convert24htoEpoch = (time24h, date) => {\n    const epochTime = Date.parse(`${date} ${time24h}`)\n\n    return epochTime\n}\n\nexport const convertDateToLocaleTimeZone = (date, timezone) => {\n    return new Date(date.toLocaleString(\"en-US\", { timeZone: timezone }))\n}\n\nexport const convertDateto12h = (date) => {\n    const settingState = store.getState().settingsReducer\n\n    if (!!settingState?.settings?.timezone?.label) {\n        date = convertDateToLocaleTimeZone(date, settingState?.settings?.timezone?.label)\n    }\n\n    return convert24hto12h(`${date.getHours()}:${date.getMinutes()}`)\n\n}\n\n\nexport const isDateToday = (date) => {\n    const today = new Date()\n    const incomingDate = new Date(date)\n    // call setHours to take the time out of the comparison\n    if (incomingDate.setHours(0, 0, 0, 0) === today.setHours(0, 0, 0, 0)) {\n        return true\n    }\n    else {\n        return false\n    }\n}\n\n// Takes shift details and returns total work time in seconds\nexport const convertShiftDetailsToWorkingTime = (shiftDetails) => {\n    let totalBreakTime = 0\n\n    Object.values(shiftDetails.breaks)\n        .sort((a, b) => a.startOfBreak - b.startOfBreak)\n        .forEach(br => {\n            if (br.enabled) {\n\n                const start = moment.duration(br.startOfBreak).asSeconds()\n                const end = moment.duration(br.endOfBreak).asSeconds()\n\n                const breakLength = end - start\n                totalBreakTime += breakLength\n\n            }\n        })\n\n\n    const startOfShift = moment.duration(shiftDetails.startOfShift).asSeconds()\n    const endOfShift = moment.duration(shiftDetails.endOfShift).asSeconds()\n\n    const workingTime = endOfShift - startOfShift - totalBreakTime\n    return workingTime\n\n}\n\n// Converts time string to \nexport const convertHHMMSSStringToSeconds = (timeStr) => {\n    let [hour, minute, second] = timeStr.split(':')\n\n    hour = parseInt(hour)\n    minute = parseInt(minute)\n    second = parseInt(second)\n\n    const totalSeconds = hour * 60 * 60 + minute * 60 + second\n    return totalSeconds\n}\n\n// Convert Seconds to HHMMSS\nexport const convertSecondsToHHMMSS = (seconds) => {\n    const date = new Date(seconds * 1000).toISOString().substr(11, 8)\n    return date\n}","import styled, {css} from 'styled-components'\n\nexport const Container = styled.button`\n  transition: all 0.2s ease;\n  \n  align-self: stretch;\n  padding: 0 1rem;\n  background: ${props => props.theme.bg.secondary};\n  width: 3.5rem;\n  border: none;\n  border-left: 1px solid ${props => props.theme.bg.quaternary};\n  //border-bottom: 1px solid ${props => props.theme.bg.quinary};\n  outline: none !important;\n  \n  color: ${props => props.theme.textColor};\n\n  &:active {\n    border-bottom: 1px solid ${props => props.theme.schema[props.schema].solid};\n    color: ${props => props.theme.schema[props.schema].solid};\n  }\n  \n  ${props => props.css && props.css};\n`\n\nexport const Icon = styled.i`\n  transition: all 0.2s ease;\n  transition: ${props => `transform ${props.rotationTime}ms ease`};\n  ${props => props.rotate && `transform: rotate(180deg)`};\n  \n  ${props => props.css && props.css};\n`","import React, {useState, useEffect} from 'react'\nimport PropTypes from 'prop-types'\n\n// styles\nimport * as styled from \"./rotate_button.style\"\n\n// component constant\nconst STATES = {\n\tSTATE_ONE: \"STATE_ONE\",\n\tSTATE_TWO: \"STATE_TWO\"\n}\n\nconst RotateButton = props => {\n\tconst {\n\t\ticonName1,\n\t\tstate,\n\t\trotationTime,\n\t\tonStateOne,\n\t\tonStateTwo,\n\t\tcontainerCss,\n\t\ticonCss,\n\t\tschema\n\t} = props\n\n\tconst [currentState, setCurrentState] = useState(state == 1 ? STATES.STATE_ONE : STATES.STATE_TWO)\t// rotation state\n\tconst [rotate, setRotate] = useState(false)\n\tconst [call, setCall] = useState(false)\n\n\t/*\n\t* sets rotate when currentState changes and calls appropriate callback funcs\n\t* */\n\tuseEffect(() => {\n\t\tif(currentState === STATES.STATE_ONE) {\n\t\t\tsetRotate(false)\n\t\t\tonStateOne()\n\n\t\t}\n\t\telse {\n\t\t\tsetRotate(true)\n\t\t\tonStateTwo()\n\t\t}\n\t}, [currentState])\n\n\treturn (\n\t\t<styled.Container\n\t\t\tcss={containerCss}\n\t\t\tschema={schema}\n\t\t\tonClick={() => {\n\t\t\t\tsetCurrentState(currentState === STATES.STATE_ONE ? STATES.STATE_TWO : STATES.STATE_ONE)\n\t\t\t}}\n\t\t>\n\t\t\t<styled.Icon\n\t\t\t\tschema={schema}\n\t\t\t\tcss={iconCss}\n\t\t\t\trotate={rotate}\n\t\t\t\trotationTime={rotationTime}\n\t\t\t\tclassName={iconName1}\n\t\t\t>\n\t\t\t</styled.Icon>\n\t\t</styled.Container>\n\t)\n}\n\nRotateButton.propTypes = {\n\ticonName1: PropTypes.string,\n\trotationTime: PropTypes.number,\n\tonStateOne: PropTypes.func,\n\tonStateTwo: PropTypes.func,\n}\n\nRotateButton.defaultProps = {\n\ticonName1: \"\",\n\trotationTime: 500,\n\tonStateOne: () => {},\n\tonStateTwo: () => {},\n\tschema: \"default\"\n}\n\nexport default RotateButton\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport TimePicker from \"rc-time-picker\";\nimport \"rc-time-picker/assets/index.css\";\n\nconst DeliTimePicker = ({ className, ...rest }) => (\n  <TimePicker\n    {...rest}\n    className={className}\n    popupClassName={className}\n  />\n);\n\nDeliTimePicker.propTypes = {\n  className: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.instanceOf(moment)\n};\n\nexport default DeliTimePicker;\n","import styled from \"styled-components\";\nimport TimePicker from \"./time_picker\";\nimport { hexToRGBA } from '../../../../../methods/utils/color_utils'\n\nconst StyledTimePicker = styled(TimePicker)`\n\n  & .rc-time-picker-panel-select-option-selected {\n    background-color: ${props => props.schema ? hexToRGBA(props.theme.schema[props.schema].solid, 0.5) : hexToRGBA(props.theme.fg.red, 0.5)};\n    font-weight: normal;\n  }\n\n  & .rc-time-picker-clear,\n  & .rc-time-picker-clear-icon:after {\n    font-size: ${props => props.theme.fontSize.sz4};\n  }\n\n  & .rc-time-picker-panel-select {\n    font-family: ${props => props.theme.font.primary};\n    font-size: 16px;\n    cursor: pointer;\n\n    li:hover {\n        background-color: ${props => props.schema ? hexToRGBA(props.theme.schema[props.schema].solid, 0.1) : hexToRGBA(props.theme.fg.red, 0.1)};\n    }\n  }\n\n  & .rc-time-picker-panel-input {\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz4};\n    cursor: pointer;\n  }\n\n  & .rc-time-picker-input {\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz4};\n    cursor: pointer;\n    \n    background: ${props => props.theme.bg.secondary};\n\n    ::-webkit-scrollbar {\n      width: 0;\n      height: 0;\n    }\n\n    transition: none;\n  }\n\n`;\n\nexport default StyledTimePicker;\n","import styled from 'styled-components';\nimport TimePicker from './time_picker_field';\nimport {css} from 'styled-components'\n\n\nexport const DefaultContainer = styled.div`\n\tposition: relative;\n`;\n\nexport const DefaultErrorContainerComponent = styled.div`\n    width: auto;\n    height: auto;\n    position: absolute;\n    top: 50%;\n    right: 0.5rem;\n    transform: translateY(-50%);\n    margin: 0;\n    padding: 0;\n    z-index: 500;\n`;\n","// import external modules\nimport React from \"react\";\nimport { useField, useFormikContext } from \"formik\";\nimport TimePicker from './time_picker';\nimport moment from 'moment';\nimport 'rc-time-picker/assets/index.css';\n\n// import components\nimport ErrorTooltip from \"../error_tooltip/error_tooltip\";\n\n// import styles\nimport * as styled from './time_picker_field.style'\nimport PropTypes from \"prop-types\";\nimport {getMessageFromError} from \"../../../../methods/utils/form_utils\";\n\nconst TimePickerField = (props) => {\n\n\tconst {\n\t\tTimePickerCss,\n\t\tContainer,\n\t\tErrorContainerComponent,\n\t\tcontainerStyle,\n\t\tstyle,\n\t\tonChange,\n\t\tdefaultOpenValue,\n\t\tdefaultValue,\n\t\tmapOutput,\n\t\tmapInput,\n\t\t...rest\n\t} = props\n\n\tconst { setFieldValue, setFieldTouched } = useFormikContext();\n\tconst [field, meta] = useField(props);\n\n\tconst {\n\t\tvalue: fieldValue,\n\t\tname: fieldName\n\t} = field\n\n\tconst {\n\t\ttouched,\n\t\terror\n\t} = meta\n\n\tconst hasError = touched && error;\n\tconst errorMessage = getMessageFromError(error);\n\n\treturn (\n\t\t\t<Container\n\t\t\t\tstyle={containerStyle}\n\t\t\t>\n\t\t\t\t<TimePicker\n\t\t\t\t\t{...style}\n\t\t\t\t\t{...field}\n\t\t\t\t\t{...rest}\n\t\t\t\t\tcss={TimePickerCss}\n\t\t\t\t\thasError={hasError}\n\t\t\t\t\t// showSecond={false}\n                    // defaultValue={moment().format()}\n\t\t\t\t\tvalue={!!fieldValue ? mapInput(fieldValue) : mapInput(defaultValue)}\n\t\t\t\t\tonChange={(val) => {\n\n\t\t\t\t\t\tif(!touched) setFieldTouched(fieldName, true)\n\t\t\t\t\t\tsetFieldValue(fieldName, mapOutput(val))\n\n\t\t\t\t\t\tonChange && onChange(val)\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<ErrorTooltip\n\t\t\t\t\tvisible={hasError}\n\t\t\t\t\ttext={errorMessage}\n\t\t\t\t\tContainerComponent={ErrorContainerComponent}\n\t\t\t\t/>\n\t\t\t</Container>\n\t)\n}\n\n// Specifies propTypes\nTimePickerField.propTypes = {\n\tContainer: PropTypes.elementType,\n\tErrorContainerComponent: PropTypes.elementType,\n\tcontainerStyle: PropTypes.object,\n\tstyle: PropTypes.object,\n\tonChange: PropTypes.func,\n\tmapOutput: PropTypes.func,\n\tmapInput: PropTypes.func,\n};\n\n// Specifies the default values for props:\nTimePickerField.defaultProps = {\n\tContainer: styled.DefaultContainer,\n\tErrorContainerComponent: styled.DefaultErrorContainerComponent,\n\tcontainerStyle: {},\n\tstyle: {},\n\tonChange: () => {},\n\tmapOutput: val => val,\n\tmapInput: val => val,\n};\n\nexport default TimePickerField;\n","import styled from \"styled-components\";\n\nexport const DefaultContainer = styled.div`\n\tposition: relative;\n`;\n\nexport const DefaultErrorContainerComponent = styled.div`\n    width: auto;\n    height: auto;\n    position: absolute;\n    top: 50%;\n    right: 2rem;\n    transform: translateY(-50%);\n    margin: 0;\n    padding: 0;\n    z-index: 500;\n`;","import React, { useContext } from \"react\";\nimport { useField, useFormikContext } from \"formik\";\nimport Switch from 'react-ios-switch';\nimport ErrorTooltip from \"../error_tooltip/error_tooltip\";\nimport PropTypes from \"prop-types\";\nimport * as styled from \"./switch_field.style\";\nimport {getMessageFromError} from \"../../../../methods/utils/form_utils\";\nimport { ThemeContext } from \"styled-components\";\n\nconst SwitchField = (props) => {\n\n    const {\n        Container,\n        containerStyle,\n        ErrorContainerComponent,\n        style,\n        onChange,\n        mapOutput,\n        mapInput,\n        schema,\n        ...rest\n    } = props\n\n    const { setFieldValue, setFieldTouched } = useFormikContext();\n    const [field, meta] = useField(props);\n\n    const themeContext = useContext(ThemeContext);\n\n    const {\n        value: fieldValue,\n        name: fieldName\n    } = field\n\n    const {\n        touched,\n        error\n    } = meta\n\n    const hasError = touched && error;\n    const errorMessage = getMessageFromError(error);\n\n    return (\n        <Container\n            style={{...containerStyle, transform: 'scale(0.9)'}}\n        >\n            <Switch\n                checked={mapInput(fieldValue)}\n                onColor={!!schema && !!themeContext.schema[schema] ? themeContext.schema[schema].solid : themeContext.schema.default.solid}\n                {...rest}\n                onChange={val => {\n                    if(!touched) setFieldTouched(fieldName, true);\n                    setFieldValue(fieldName, mapOutput(val))\n\n                    onChange && onChange(val)\n                }}\n                style={{...style}}\n            />\n            {/*<ErrorTooltip*/}\n            {/*    visible={hasError}*/}\n            {/*    text={errorMessage}*/}\n            {/*    ContainerComponent={ErrorContainerComponent}*/}\n            {/*/>*/}\n\n        </Container>\n    );\n};\n\n// Specifies propTypes\nSwitchField.propTypes = {\n    Container: PropTypes.elementType,\n    ErrorContainerComponent: PropTypes.elementType,\n    containerStyle: PropTypes.object,\n    style: PropTypes.object,\n    onChange: PropTypes.func,\n    mapInput: PropTypes.func,\n    mapOutput: PropTypes.func,\n};\n\n// Specifies the default values for props:\nSwitchField.defaultProps = {\n    Container: styled.DefaultContainer,\n    ErrorContainerComponent: styled.DefaultErrorContainerComponent,\n    containerStyle: {},\n    style: {},\n    onChange: () => {},\n    mapInput: (val) => val,\n    mapOutput: (val) => val\n};\n\nexport default SwitchField;\n","import styled from 'styled-components'\nimport * as buttonCss from '../../../../../common_css/button_css'\nimport * as commonCss from '../../../../../common_css/common_css'\nimport { LightenDarkenColor } from '../../../../../methods/utils/color_utils'\n\nexport const BreakContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    height: fit-content;\n    background-color: ${props => props.theme.bg.secondary};\n    border-radius: .5rem;\n`\n\nexport const BreakLabel = styled.label`\n  font-size: ${props => props.theme.fontSize.sz4};\n  font-family: ${props => props.theme.font.primary};\n  color: ${props => props.theme.bg.senary};\n`\n\nexport const ChartButton = styled.button`\n    ${buttonCss.button};\n    background-color:${props => props.theme.schema.statistics.solid};\n    color: ${props => props.theme.bg.primary};\n    margin-top: .5rem;\n    margin-bottom: 0.1rem;\n    font-size: 1.25rem;\n    padding: .25rem;\n\n    &:hover {\n      background-color:${props => LightenDarkenColor(props.theme.schema.statistics.solid, -5)};\n    }\n`\n\nexport const ColumnContainer = styled.div`\n    ${commonCss.columnContainer};\n`\n\nexport const RowContainer = styled.div`\n    ${commonCss.rowContainer};\n    justify-content: space-around;\n    position: relative;\n    padding-left: .5rem\n`\n\nexport const Label = styled.label`\n  font-size: 1rem;\n  font-family: ${props => props.theme.font.primary};\n  color: ${props => props.theme.bg.octonary};\n`\n","import React, { useState, useEffect, useMemo} from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport moment from 'moment';\nimport { Formik, Form } from 'formik'\n\n// Import Components\nimport TextField from '../../../../basic/form/text_field/text_field.js'\nimport Textbox from '../../../../basic/textbox/textbox'\nimport TimePickerField from '../../../../basic/form/time_picker_field/time_picker_field'\nimport Switch from '../../../../basic/form/switch_field/switch_field'\nimport Button from '../../../../basic/button/button'\n\n// Import Styles\nimport * as styled from './shift_settings.style'\n\n// Import utils\nimport { throughputSchema } from '../../../../../methods/utils/form_schemas'\nimport { convert12hto24h } from '../../../../../methods/utils/time_utils'\n\n// Import actions\nimport { postSettings } from '../../../../../redux/actions/settings_actions'\nimport { pageDataChanged } from '../../../../../redux/actions/sidebar_actions'\n\nconst ShiftSettings = (props) => {\n\n    const {\n        themeContext,\n        enableOutput,\n    } = props\n\n\n    const dispatch = useDispatch()\n    const dispatchPostSettings = (settings) => dispatch(postSettings(settings))\n    const dispatchPageDataChanged = (bool) => dispatch(pageDataChanged(bool))\n\n    const settingsInReducer = useSelector(state => state.settingsReducer.settings)\n\n    const pageInfoChanged = useSelector(state => state.sidebarReducer.pageDataChanged)\n    const [settings,setSettings] = useState(settingsInReducer)\n    const [breaksEnabled, setBreaksEnabled] = useState({})\n    const shiftDetails = settings.shiftDetails;\n\n    // Settings local state here because enabled breaks needs to access breaks outside of formik\n    // See the Switch below for more details\n    useEffect(() => {\n      console.log('QQQQ here')\n\n        // If there's shift details\n        if (!!settings.shiftDetails) {\n            let enabledBreaks = {}\n            Object.keys(settings.shiftDetails.breaks).forEach((br, ind) => {\n                const enabled = settings.shiftDetails.breaks[br].enabled\n                const breakString = `break${ind}`\n                enabledBreaks[ind] = enabled\n            })\n            setBreaksEnabled(enabledBreaks)\n        }\n        else {\n            setBreaksEnabled(null)\n        }\n        return () => {\n        }\n    }, [settings])\n\n    // Submits the shift details to the backend via settings\n    const onSubmitShift = (values) => {\n\n        let {\n            startOfShift,\n            endOfShift,\n            expectedOutput,\n            startOfBreak1,\n            endOfBreak1,\n            switch1,\n            startOfBreak2,\n            endOfBreak2,\n            switch2,\n            startOfBreak3,\n            endOfBreak3,\n            switch3,\n        } = values\n\n        const shiftSettings = {\n            startOfShift: startOfShift,\n            endOfShift: endOfShift,\n            expectedOutput: expectedOutput,\n            breaks: {\n                break1: {\n                    enabled: switch1,\n                    startOfBreak: startOfBreak1,\n                    endOfBreak: endOfBreak1,\n                },\n                break2: {\n                    ...shiftDetails.breaks.break2,\n                    enabled: switch2,\n                    startOfBreak: startOfBreak2,\n                    endOfBreak: endOfBreak2,\n                },\n                break3: {\n                    enabled: switch3,\n                    startOfBreak: startOfBreak3,\n                    endOfBreak: endOfBreak3,\n                },\n            },\n        }\n\n        dispatchPostSettings({\n            ...settings,\n            shiftDetails: shiftSettings,\n        })\n\n\n    }\n\n    const renderBreaks = useMemo(() => {\n\n        const numberOfBreaks = [0, 1, 2]\n\n        return (\n            <>\n                    <styled.RowContainer style = {{width: '100%'}}>\n                      <styled.ColumnContainer style={{ margin: '.25rem', flex: '3'}}>\n                          <styled.BreakLabel>\n                              Break #\n                      </styled.BreakLabel>\n                      </styled.ColumnContainer>\n                        <styled.ColumnContainer style={{ margin: '.25rem', paddingRight: '2rem'}}>\n                            <styled.BreakLabel>\n                                Start Time\n                        </styled.BreakLabel>\n                        </styled.ColumnContainer>\n                        <styled.ColumnContainer style={{ margin: '.25rem', paddingRight: '1.5rem'}}>\n                            <styled.BreakLabel>\n                                End Time\n                        </styled.BreakLabel>\n                        </styled.ColumnContainer>\n                    </styled.RowContainer>\n                {\n                    numberOfBreaks.map((bk, ind) => {\n                        const adjustedInd = ind + 1\n\n                        // This uses useState\n                        // The reasoning behind this, is to be able to enable/disable switches without going through formik submit\n                        // This also allows to enable a break, but not effect the graph until submitted\n                        const breakEnabled = breaksEnabled[ind]\n\n                        const breakName = `${adjustedInd}`\n                        const switchName = `switch${adjustedInd}`\n                        const breakStart = `startOfBreak${adjustedInd}`\n                        const breakEnd = `endOfBreak${adjustedInd}`\n                        return (\n                            <styled.RowContainer style={{width:'100%', minWidth: '20rem' }}>\n\n                                <styled.RowContainer style={{ justifyContent: 'space-between', width: '100%', marginTop: '.25rem'}}>\n                                    <styled.Label>{breakName}</styled.Label>\n                                    <Switch\n                                        name={switchName}\n                                        schema={'statistics'}\n                                        checked={breaksEnabled[ind]}\n                                        onChange={() => {\n                                            setBreaksEnabled({\n                                                ...breaksEnabled,\n                                                [ind]: !breakEnabled\n                                            })\n                                        }}\n                                    />\n                                </styled.RowContainer>\n                                <styled.RowContainer>\n                                    <styled.ColumnContainer style={{ margin: '.25rem' }}>\n                                        {/* <styled.BreakLabel>\n                                        Start of Break\n                                </styled.BreakLabel> */}\n                                        <TimePickerField\n                                            disabled={!breakEnabled}\n                                            schema={'statistics'}\n                                            mapInput={\n                                                (value) => {\n                                                    if (value) {\n                                                        const splitVal = value.split(':')\n                                                        return moment().set({ 'hour': splitVal[0], 'minute': splitVal[1] })\n                                                    }\n                                                }\n                                            }\n                                            mapOutput={(value) => {\n                                                return convert12hto24h(value.format('hh:mm a'))\n                                            }}\n                                            name={breakStart}\n                                            style={{ flex: '0 0 7rem', display: 'flex', flexWrap: 'wrap', textAlign: 'center', backgroundColor: '#6c6e78' }}\n                                            containerStyle={{ width: '6.5rem' }}\n                                            showHour={true}\n                                            showMinute={true}\n                                            showSecond={false}\n                                            className=\"xxx\"\n                                            use12Hours\n                                            format={'hh:mm a'}\n                                            autocomplete={\"off\"}\n                                            allowEmpty={false}\n                                            defaultOpenValue={moment().set({ 'hour': 1, 'minute': 0 })}\n                                            defaultValue={moment().set({ 'hour': 1, 'minute': 0 })}\n                                        />\n                                    </styled.ColumnContainer>\n                                    <styled.ColumnContainer style={{ margin: '.25rem' }}>\n                                        {/* <styled.BreakLabel>\n                                        End of Break\n                                    </styled.BreakLabel> */}\n                                        <TimePickerField\n                                            disabled={!breakEnabled}\n                                            schema={'statistics'}\n                                            mapInput={\n                                                (value) => {\n                                                    if (value) {\n                                                        const splitVal = value.split(':')\n                                                        return moment().set({ 'hour': splitVal[0], 'minute': splitVal[1] })\n                                                    }\n                                                }\n                                            }\n                                            mapOutput={(value) => {\n                                                return convert12hto24h(value.format('hh:mm a'))\n                                            }}\n                                            name={breakEnd}\n                                            style={{ flex: '0 0 7rem', display: 'flex', flexWrap: 'wrap', textAlign: 'center', backgroundColor: '#6c6e78' }}\n                                            containerStyle={{ width: '6rem', marginLeft: '1rem' }}\n                                            showHour={true}\n                                            showMinute={true}\n                                            showSecond={false}\n                                            className=\"xxx\"\n                                            use12Hours\n                                            format={'hh:mm a'}\n                                            autocomplete={\"off\"}\n                                            allowEmpty={false}\n                                            defaultOpenValue={moment().set({ 'hour': 1, 'minute': 0 })}\n                                            defaultValue={moment().set({ 'hour': 1, 'minute': 0 })}\n                                        />\n                                    </styled.ColumnContainer>\n                                </styled.RowContainer>\n                            </styled.RowContainer>\n                        )\n                    })\n                }\n            </>\n        )\n\n    }, [shiftDetails, breaksEnabled])\n\n    return (\n        <Formik\n            initialValues={{\n                startOfShift: shiftDetails.startOfShift,\n                endOfShift: shiftDetails.endOfShift,\n                startOfBreak1: shiftDetails.breaks.break1.startOfBreak,\n                endOfBreak1: shiftDetails.breaks.break1.endOfBreak,\n                switch1: shiftDetails.breaks.break1.enabled,\n                startOfBreak2: shiftDetails.breaks.break2.startOfBreak,\n                endOfBreak2: shiftDetails.breaks.break2.endOfBreak,\n                switch2: shiftDetails.breaks.break2.enabled,\n                startOfBreak3: shiftDetails.breaks.break3.startOfBreak,\n                endOfBreak3: shiftDetails.breaks.break3.endOfBreak,\n                switch3: shiftDetails.breaks.break3.enabled,\n                expectedOutput: shiftDetails.expectedOutput,\n            }}\n\n            // validation control\n            validationSchema={throughputSchema}\n            validateOnChange={true}\n            validateOnMount={false}\n            validateOnBlur={true}\n\n            onSubmit={async (values, { setSubmitting, setTouched, validateForm, resetForm }) => {\n\n                setSubmitting(true)\n                onSubmitShift(values)\n                setSubmitting(false)\n                setTouched({})\n                dispatchPageDataChanged(false)\n            }}\n        >\n            {formikProps => {\n\n                const {\n                    submitForm,\n                    setValidationSchema,\n                    values,\n                    errors,\n                    touched,\n                    initialValues,\n                    setSubmitting,\n                    validateForm\n                } = formikProps\n\n                if (Object.keys(touched).length > 0) {\n                    dispatchPageDataChanged(true)\n                }\n\n                return (\n                    <Form\n                        style={{\n                            backgroundColor: themeContext.bg.primary,\n                            boxShadow: themeContext.cardShadow,\n                            padding: '.5rem',\n                            borderRadius: '.5rem',\n                            display: 'flex',\n                            flexDirection: 'column',\n                        }}\n                    >\n                        <styled.ColumnContainer>\n                            <styled.RowContainer style={{ justifyContent: 'space-between', marginBottom: '0.5rem' }}>\n                                <styled.Label>\n                                    Start of Shift\n                            </styled.Label>\n                                <TimePickerField\n                                    schema={'statistics'}\n                                    mapInput={\n                                        (value) => {\n                                            if (value) {\n                                                const splitVal = value.split(':')\n                                                return moment().set({ 'hour': splitVal[0], 'minute': splitVal[1] })\n                                            }\n                                        }\n                                    }\n                                    mapOutput={(value) => {\n                                        return convert12hto24h(value.format('hh:mm a'))\n                                    }}\n                                    name={'startOfShift'}\n                                    style={{ flex: '0 0 7rem', display: 'flex', flexWrap: 'wrap', textAlign: 'center', backgroundColor: '#6c6e78' }}\n                                    containerStyle={{ width: '7rem' }}\n                                    showHour={true}\n                                    formikProps\n                                    showSecond={false}\n                                    className=\"xxx\"\n                                    use12Hours\n                                    format={'hh:mm a'}\n                                    autocomplete={\"off\"}\n                                    allowEmpty={false}\n                                    defaultOpenValue={moment().set({ 'hour': 1, 'minute': 0 })}\n                                    defaultValue={moment().set({ 'hour': 1, 'minute': 0 })}\n                                />\n                            </styled.RowContainer>\n                            <styled.RowContainer style={{ justifyContent: 'space-between', borderBottom: '1px solid #b8b9bf', marginBottom: '0.5rem', paddingBottom: '0.5rem'}}>\n                                <styled.Label>\n                                    End of Shift\n                            </styled.Label>\n                                <TimePickerField\n                                    schema={'statistics'}\n                                    mapInput={\n                                        (value) => {\n                                            if (value) {\n                                                const splitVal = value.split(':')\n                                                return moment().set({ 'hour': splitVal[0], 'minute': splitVal[1] })\n                                            }\n                                        }\n                                    }\n                                    mapOutput={(value) => {\n                                        return convert12hto24h(value.format('hh:mm a'))\n                                    }}\n                                    name={'endOfShift'}\n                                    containerStyle={{ width: '7rem' }}\n                                    style={{ flex: '0 0 7rem', display: 'flex', flexWrap: 'wrap', textAlign: 'center', backgroundColor: '#6c6e78' }}\n                                    showHour={true}\n                                    showSecond={false}\n                                    className=\"xxx\"\n                                    use12Hours\n                                    format={'hh:mm a'}\n                                    autocomplete={\"off\"}\n                                    allowEmpty={false}\n                                    defaultOpenValue={moment().set({ 'hour': 1, 'minute': 0 })}\n                                    defaultValue={moment().set({ 'hour': 1, 'minute': 0 })}\n                                />\n                            </styled.RowContainer>\n\n                            <styled.RowContainer style={{ justifyContent: 'space-between', }}>\n                                <styled.Label>\n                                    Breaks\n                            </styled.Label>\n                            </styled.RowContainer>\n                            {!!enableOutput &&\n                                <styled.RowContainer style={{ justifyContent: 'space-between' }}>\n                                    <styled.Label>\n                                        Expected Output\n                                </styled.Label>\n                                    <TextField\n                                        name={\"expectedOutput\"}\n                                        placeholder='Qty'\n                                        InputComponent={Textbox}\n                                        ContentContainer={styled.RowContainer}\n                                        style={{\n                                            'fontSize': '1rem',\n                                            'fontWeight': '600',\n                                            'marginBottom': '.5rem',\n                                            'marginTop': '0',\n                                            'width': '6rem',\n                                        }}\n                                    />\n                                </styled.RowContainer>\n                            }\n\n                        </styled.ColumnContainer>\n                        <styled.BreakContainer>\n                            {renderBreaks}\n                        </styled.BreakContainer>\n                        {/* <styled.RowContainer>\n\n        </styled.RowContainer> */}\n                        <Button schema={'settings'} disabled = {!pageInfoChanged} type={'submit'} style = {{margin: '.5rem 0rem 0rem 0rem'}}>{!!enableOutput ? 'Calculate and Save' : 'Save Shift Details'}</Button>\n\n                    </Form>\n                )\n            }}\n        </Formik>\n    )\n}\n\nShiftSettings.defaultProps = {\n    enableOutput: true\n};\n\nexport default ShiftSettings\n","import styled from 'styled-components'\nimport * as buttonCss from '../../../../../../common_css/button_css'\nimport * as commonCss from '../../../../../../common_css/common_css'\nimport * as styles from '../../statistics_page.style'\nimport { LightenDarkenColor } from '../../../../../../methods/utils/color_utils'\n\nexport const PlotHeader = styled.div`\n    ${commonCss.columnContainer};\n    align-items: center;\n\t//height: 30rem;\n\t//min-height: 30rem;\n`\n\nexport const SinglePlotContainer = styled.div`\n\tposition: relative;\n\tdisplay: flex;\n\tflex-direction: column;\n\tbackground: ${props => props.theme.bg.primary};\n  box-shadow: ${props => props.theme.cardShadow};\n\tborder-radius: 1rem;\n\tmin-width: 60rem;\n\t\n\n    width: 100%;\n    // max-width: 60%;\n    margin-bottom: 1rem;\n    // min-height: ${props => (props.minHeight && props.minHeight > 25) ? props.minHeight.toString() + \"rem\" : \"30rem\"};\n    height: fit-content;\n    min-height: fit-content;\n  \n  \t// /* // row layout\n\t// @media (min-width: ${props => props.theme.widthBreakpoint.laptopL}){\n\t// \t//flex: 1;\n\t// \twidth: 100%;\n\t// \tmargin: 0 5rem;\n\t// \theight: fit-content;\n\t// \tmin-height: fit-content;\n\t// }\n    //\n  \t// // column layout\n\t// @media (max-width: ${props => props.theme.widthBreakpoint.laptopL}){\n\t// \twidth: 100%;\n\t// \tmargin-bottom: 1rem;\n\t// \t// min-height: ${props => (props.minHeight && props.minHeight > 25) ? props.minHeight.toString() + \"rem\" : \"30rem\"};\n\t// \theight: fit-content;\n\t// \tmin-height: fit-content;\n\t// } */\n\n`\n\nexport const PlotContainer = styled.div`\n\tposition: relative;\n\t\n\tmax-height: ${props => (props.minHeight && props.minHeight > 25) ? props.minHeight.toString() + \"rem\" : \"35rem\"};\n\tmin-height: ${props => (props.minHeight && props.minHeight > 25) ? props.minHeight.toString() + \"rem\" : \"25rem\"};\n\theight: ${props => (props.minHeight && props.minHeight > 25) ? props.minHeight.toString() + \"rem\" : \"25rem\"};\n\t/* height: 100%; */\n  \n  \t//height: 100rem;\n  \t//min-height: 100rem;\n  \t//max-height: 100rem;\n  \n\tmin-width: 30rem;\n  \n\t/* overflow: hidden; */\n`\n\nexport const LoadingIcon = styled.i`\n    font-size: 1.5rem;\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translateX(-50%) translateY(-50%);\n`\n\nexport const NoDataText = styled.span`\n\tposition: absolute;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translate(-50%, -50%);\n\tfont-size: ${props => props.theme.fontSize.sz2};\n\tfont-family: ${props => props.theme.font.primary};\n\tfont-weight: ${props => props.theme.fontWeight.bold};\n\tcolor: ${props => props.theme.bg.septenary};\n`\n\nexport const PlotTitle = styled.h2`\n  font-size: ${props => props.theme.fontSize.sz2};\n  font-family: ${props => props.theme.font.primary};\n  color: ${props => props.theme.bg.septenary};\n\n  margin: 0rem .5rem 1rem .5rem;\n`\n\nexport const ChartButton = styled.button`\n    ${buttonCss.button};\n    background-color:${props => props.theme.schema.statistics.solid};\n    color: ${props => props.theme.bg.primary};\n    margin-top: .5rem;\n    margin-bottom: 0.1rem;\n    font-size: 1.25rem;\n\n    &:hover {\n      background-color:${props => LightenDarkenColor(props.theme.schema.statistics.solid, -5)};\n    }\n`\n\nexport const RowContainer = styled.div`\n    ${commonCss.rowContainer};\n    justify-content: space-around;\n    position: relative;\n`\n\nexport const ColumnContainer = styled.div`\n    ${commonCss.columnContainer};\n`\n\nexport const Label = styled.label`\n  font-size: ${props => props.theme.fontSize.sz3};\n  font-family: ${props => props.theme.font.primary};\n  color: ${props => props.theme.bg.octonary};\n`\n\nexport const DatePickerLabel = styled.label`\n  font-size: ${props => props.theme.fontSize.sz3};\n  font-family: ${props => props.theme.font.primary};\n  /* color: ${props => props.theme.bg.septenary}; */\n  color: white;\n\n  // flex-grow: 1;\n  // flex-basis: 12rem;\n\n  line-height: 2.5rem;\n  width: 7rem;\n  margin-right: 1rem;\n`;\n\nexport const TimePickerErrorComponent = styled.span`\n  color: ${props => props.theme.bad};\n  font-size: ${props => props.theme.fontSize.sz4};\n  font-weight: 600;\n  margin-top: .25rem;\n`;\n\nexport const BreakContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    height: fit-content;\n    background-color: ${props => props.theme.bg.secondary};\n    border-radius: .5rem;\n`\n\nexport const ChartTypeButton = styled.button`\n    font-size: 1.25rem;\n    width: 5rem;\n\n    font-size: 1rem;\n    width: 8rem;\n    border: none;\n    font-family: ${props => props.theme.font.primary};\n\n    color: ${props => props.selected ? props.theme.bg.primary : props.theme.bg.quinary};\n\n    background-color: ${props => props.selected ? props.theme.schema.statistics.solid : props.theme.bg.tertiary};\n\n    transition: background-color 0.25s ease, box-shadow 0.1s ease;\n\n    &:focus{\n        outline: 0 !important\n    }\n\n    &:active{\n        box-shadow: none;\n    }\n\n    &:hover{\n        //background-color: ${props => props.theme.bg.quaternary};\n    }\n`\n\nexport const BreakLabel = styled.label`\n  font-size: ${props => props.theme.fontSize.sz4};\n  font-family: ${props => props.theme.font.primary};\n  color: ${props => props.theme.bg.senary};\n`\n\nexport const FormIcon = styled.i`\n    position: absolute;\n    right: .5rem;\n    top: -1.5rem;\n    font-size: 1.25rem;\n    cursor: pointer;\n`\n","import axios from 'axios';\n\nimport { apiIPAddress } from '../settings/settings'\nimport { getHeaders, handleError } from './helpers';\nconst operator = 'report_events'\n\nexport async function getReportEvents() {\n    try {\n        const response = await axios({\n            method: 'get',\n            url: apiIPAddress() + operator, \n            headers: getHeaders()\n        });\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        return dataJson;\n\n\n    } catch (error) {\n        handleError(error);\n    }\n\n}\n\nexport async function deleteReportEvent(ID) {\n    try {\n        const response = await axios({\n            method: 'DELETE',\n            url: apiIPAddress() + operator + '/' + ID,\n            headers: getHeaders()\n        });\n\n        // Success 🎉\n        return response;\n\n\n    } catch (error) {\n        handleError(error);\n    }\n}\n\nexport async function postReportEvent(reportEvent) {\n    try {\n        const response = await axios({\n            method: 'POST',\n            url: apiIPAddress() + operator,\n            headers: getHeaders(),\n            data: reportEvent\n        });\n\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        return dataJson;\n\n\n    } catch (error) {\n        handleError(error);\n    }\n}\n\nexport async function putReportEvent(reportEvent, ID) {\n    try {\n        const response = await axios({\n            method: 'PUT',\n            url: apiIPAddress() + operator + '/' + ID,\n            headers: getHeaders(),\n            data: reportEvent\n        });\n\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        return dataJson;\n\n\n    } catch (error) {\n        handleError(error);\n    }\n}\n\nexport async function getReportAnalytics(stationId, timeSpan) {\n    try {\n        const response = await axios({\n            method: 'PUT',\n            url: apiIPAddress() + operator + '/' + stationId + '/stats',\n            headers: getHeaders(),\n            // A timespan is {time_span: 'day', index: 0}\n            data: timeSpan\n        });\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        return dataJson;\n\n\n    } catch (error) {\n        handleError(error);\n    }\n\n\n}\n","import { normalize } from 'normalizr';\n\n// import types\nimport {\n    GET,\n    POST,\n    DELETE,\n    PUT\n} from '../types/prefixes';\n\nimport {\n    REPORT_EVENTS,\n    REPORT_EVENT\n} from '../types/data_types';\n\nimport { api_action } from './index';\nimport * as api from '../../api/report_events_api'\n\n// import schema\n// import { scheduleSchema, schedulesSchema } from '../../normalizr/schedules_schema';\n\nimport log from \"../../logger\"\nimport {convertArrayToObject} from \"../../methods/utils/utils\";\n\nconst logger = log.getLogger(\"ReportEvents\", \"Redux\")\n\nexport const convertData = (array, key) => {\n    const initialValue = {\n        station_id: {},\n        report_button_id: {}\n    };\n    return array.reduce((obj, item) => {\n        let current = obj.station_id[item.station_id] ? obj.station_id[item.station_id] : []\n        let current1 = obj.report_button_id[item.report_button_id] ? obj.report_button_id[item.report_button_id] : []\n\n        return {\n            ...obj,\n            // [item[key]]: item,\n            _id: {\n                ...obj._id,\n                [item._id]: item\n            },\n            station_id: {\n                ...obj.station_id,\n                [item.station_id]: [...current, item._id]\n            },\n            report_button_id: {\n                ...obj.report_button_id,\n                [item.report_button_id]: [...current1, item._id]\n            }\n        };\n    }, initialValue);\n};\n\n\n// get\n// ******************************\nexport const getReportEvents = () =>  async (dispatch) => {\n\n    /*\n        Invoked in api_action()\n        Whatever is returned from this function is the payload\n        that will be dispatched to redux (if successful)\n    */\n    const callback = async () => {\n\n        // make request\n        const reportEvents = await api.getReportEvents();\n        const reportEventsObj = convertData(reportEvents, \"_id\")\n\n        // format response\n        // const normalizedSchedules = normalize(schedules, schedulesSchema);\n\n        // return payload for redux\n        return {\n            reportEventsObj\n        };\n    }\n\n    const actionName = GET + REPORT_EVENTS;\n\n    // payload is returned back\n    const payload = await api_action(actionName, callback, dispatch);\n\n    return payload;\n\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n\n// create\n// ******************************\nexport const postReportEvent = (reportEvent) =>  async dispatch => {\n\n    const callback = async () => {\n        const createdReportEvent = await api.postReportEvent(reportEvent);\n        // const normalizedSchedules = normalize(createdSchedule, scheduleSchema);\n\n        return {\n            createdReportEvent\n        };\n    }\n\n    const actionName = POST + REPORT_EVENT;\n\n    const payload = await api_action(actionName, callback, dispatch, reportEvent);\n\n    return payload\n\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// delete\n// ******************************\nexport const deleteReportEvent = (id) => async (dispatch) => {\n\n    const callback = async () => {\n        await api.deleteReportEvent(id);\n\n        return {\n            id\n        };\n    }\n\n    const actionName = DELETE + REPORT_EVENT;\n    const payload = await api_action(actionName, callback, dispatch, id);\n    return payload;\n\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// update\n// ******************************\nexport const putReportEvent = (id, reportEvent) => async dispatch => {\n\n\n    const callback = async () => {\n        const updatedReportEvent = await api.putReportEvent(reportEvent, id);\n\n        return {\n            updatedReportEvent\n        };\n    }\n\n    const actionName = PUT + REPORT_EVENT           ;\n    const payload = await api_action(actionName, callback, dispatch);\n    return payload;\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nexport const getReportAnalytics = async (stationId, timeSpan) => {\n    try {\n        const stationAnalytics = await api.getReportAnalytics(stationId, timeSpan);\n        return stationAnalytics\n    } catch (error) {\n    }\n};\n","import styled from 'styled-components'\n\nimport { LightenDarkenColor } from '../../../../../methods/utils/color_utils'\n\nexport const OverviewContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    text-align: center;\n    width: 100%;\n    height: 100%;\n    flex: 1;\n\n    align-items: center;\n    justify-content: start;\n\n    //padding-top: 1rem;\n    // padding: .5rem;\n\n\n`\n\nexport const Header = styled.div`\n\tbackground: ${props => props.theme.bg.quinary};\n  \tborder-bottom: 1px solid black;\n  \twidth: 100%;\n  \tpadding: 1rem;\n`\n\n\nexport const PlotsContainer = styled.div`\n  \t//align-items: center;\n  \tposition: relative;\n    //display: flex;\n    //flex-direction: row;\n    //flex: 1;\n    width: 100%;\n    height: 100%;\n    // background: red;\n    padding: 1rem 1rem 0rem 1rem;\n    overflow: auto;\n  \n    \n    // @media (max-width: ${props => props.theme.widthBreakpoint.laptopL}){\n    //     flex-direction: column;\n    // }\n\n    // display: flex;\n    // flex-direction: column;\n    // flex: 1;\n    // align-items: center;\n\n\t/* @media (min-width: ${props => props.theme.widthBreakpoint.laptopL}){\n      display: flex;\n      flex-direction: row;\n      flex: 1;\n\t} */\n`\n\n\n\n\n// ========== Statistics Container ========== //\nexport const StatsSection = styled.div`\n    /* background: ${props => LightenDarkenColor(props.theme.bg.quaternary, -10)}; */\n    border-radius: 0.5rem;\n\n    /* margin-bottom: 1rem; */\n\n    max-width: 60rem;\n    width: 100%;\n\n    height: 12rem;\n\n    display: flex;\n    flex-direction: row;\n\n    align-items: center;\n    justify-content: center;\n\n    padding: 0rem 4rem 0 4rem;\n`\nexport const StatTitle = styled.h2`\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 4rem;\n    \n    text-align: center;\n\n    font-size: ${props => props.theme.fontSize.sz2};\n    font-family: ${props => props.theme.font.primary};\n    color: white;\n`\n\nexport const Col = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n`\n\nexport const Stat = styled.div`\n    display: flex;\n    flex-direction: row;\n\n    align-items: center;\n    justify-content: center;\n\n`\n\nexport const StatLabel = styled.h3`\n    font-size: ${props => props.theme.fontSize.sz2};\n    font-family: ${props => props.theme.font.primary};\n    color: ${props => props.theme.fg.primary};\n\n    margin-right: 1rem;\n`\n\nexport const StatValue = styled.h4`\n    font-size: ${props => props.theme.fontSize.sz3};\n    font-family: ${props => props.theme.font.primary};\n    color: white;\n`\n\nexport const RowContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n\n    // width: 100%;\n    min-width: 15rem;\n    max-width: 45rem;\n`\n\nexport const DateSelectorIcon = styled.i`\n    font-size: 1.5rem;\n    margin-right: 1rem;\n    margin-left: 1rem;\n    color: ${props => props.theme.bg.septenary};\n\n    &:hover{\n        cursor:pointer;\n    }\n`\n\nexport const DateSelectorTitle = styled.h1`\n    font-size: ${props => props.theme.fontSize.sz2};\n    font-family: ${props => props.theme.font.primary};\n    color: ${props => props.theme.bg.septenary};\n\n    margin: 0rem .5rem;\n\n`\nexport const LoadingIcon = styled.i`\n    font-size: 1.5rem;\n`","import styled from 'styled-components'\n\nimport { LightenDarkenColor } from '../../../../../../methods/utils/color_utils'\n\nexport const ButtonGroupContainer = styled.div`\n    width: 60rem;\n    max-width: 60rem;\n    height: 2.5rem;\n\n    display: flex;\n    flex-directin: row;\n`\n\nexport const SelectorButton = styled.button`\n    flex-grow: 1;\n    border: none;\n\n    color: ${props => props.selected ? props.theme.fg.primary : props.theme.bg.senary};\n    background: ${props => LightenDarkenColor(props.theme.bg.quaternary, props.selected ? -10 : -15)};\n\n    &:focus {\n        outline: none;\n    }\n`","import React, { useState, useEffect, useContext, useRef, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useParams, useHistory } from 'react-router-dom'\n\n// Import styles\nimport * as styled from './statistics_overview.style'\nimport { ThemeContext } from 'styled-components';\n\n// Import Charts\nimport ThroughputChart from './charts/throughput_chart/throughput_chart'\nimport ReportChart from './charts/report_chart'\n\n// Import Components\nimport DataSelector from './data_selector/data_selector.js'\nimport ApexGaugeChart from './apex_gauge_chart'\nimport DaySelector from '../../../../basic/day_selector/day_selector'\nimport TimeSpanSelector from '../../../../basic/timespan_selector/time_span_selector'\n\n// Import Actions\nimport { getStationAnalytics } from '../../../../../redux/actions/stations_actions'\n\n// Import Utils\nimport { getDateName, getDateFromString, convertArrayToObject } from '../../../../../methods/utils/utils'\nimport { getReportAnalytics, getReportEvents } from \"../../../../../redux/actions/report_event_actions\";\n\nexport const TIME_SPANS = {\n    live: {\n        name: \"live\",\n        displayName: \"Live\",\n    },\n    day: {\n        name: \"day\",\n        displayName: \"Time\",\n    },\n    week: {\n        name: \"week\",\n        displayName: \"Day\"\n    },\n    month: {\n        name: \"month\",\n        displayName: \"Week\"\n    },\n    year: {\n        name: \"year\",\n        displayName: \"Month\"\n    },\n    all: {\n        name: \"all\",\n        displayName: \"All\"\n    }\n}\n\n// TODO: Commented out charts for the time being (See comments that start with TEMP)\nconst StatisticsOverview = (props) => {\n\n    const themeContext = useContext(ThemeContext);\n\n    const params = useParams()\n    const stationID = params.stationID\n    let plotRef = useRef()\n\n    const dispatch = useDispatch()\n    const dispatchGetReportEvents = () => dispatch(getReportEvents());\n\n    const [delayChartRender, setDelayChartRender] = useState('none')\n    const widgetPageLoaded = useSelector(state => { return state.widgetReducer.widgetPageLoaded })\n    const stations = useSelector(state => state.stationsReducer.stations)\n    const reportEvents = useSelector(state => { return state.reportEventsReducer.reportEvents }) || {}\n    const dashboards = useSelector(state => { return state.dashboardsReducer.dashboards }) || {}\n\n    const [lineData, setLineData] = useState(null)\n    const [barData, setBarData] = useState(null)\n    const [reportData, setReportData] = useState(null)\n\n    const [timeSpan, setTimeSpan] = useState('day')\n    const [dateIndex, setDateIndex] = useState(0)\n    const [loading, setLoading] = useState(false)\n    const [timespanDisabled, setTimespanDisabled] = useState(false)\n    const [parentSortLevel, setParentSortLevel] = useState({ label: 'Product Group', value: 'product_group_id' })\n    const [reportButtons, setReportButtons] = useState([])\n\n    // update location properties\n    useEffect(() => {\n\n        const location = stations[stationID]\n\n        // get report buttons\n        const dashboardId = location.dashboards && Array.isArray(location.dashboards) && location.dashboards[0]\n        const dashboard = dashboards[dashboardId] ? dashboards[dashboardId] : {}\n        const currReportButtons = dashboard.report_buttons ? dashboard.report_buttons : []\n\n        // store as object of ids to prevent excessive looping\n        setReportButtons(convertArrayToObject(currReportButtons, \"_id\"))\n\n    }, [stationID, dashboards, stations])\n\n\n    const colors = {\n        taktTime: '#42e395',\n        pYield: '#59dbff',\n        throughPut: '#d177ed'\n    }\n\n    // On page load, load in the data for today\n    useEffect(() => {\n        getAllData()\n        const dataInterval = setInterval(() => getAllData(), 30000)\n        return () => {\n            clearInterval(dataInterval)\n        }\n    }, [timeSpan])\n\n    const getAllData = () => {\n        dispatchGetReportEvents() // load report events\n\n        // If the page has been loaded in (see widget pages) then don't delay chart load, \n        // else delay chart load because it slows down the widget page opening animation.\n        if (widgetPageLoaded) {\n            setDelayChartRender('flex')\n        } else {\n            setTimeout(() => {\n                setDelayChartRender('flex')\n            }, 300);\n        }\n\n        const body = { timespan: timeSpan, index: dateIndex, sort_index: parentSortLevel.value }\n        const dataPromise = getStationAnalytics(stationID, body)\n        dataPromise.then(response => {\n            if (response === undefined) return setLoading(false)\n            // Convert Throughput\n\n            if (timeSpan === 'line') {\n                let convertedThroughput = response.throughPut.map(dataPoint => {\n                    let convertedTime = dataPoint.x * 1000\n                    convertedTime = Math.round(convertedTime)\n                    return { x: convertedTime, y: dataPoint.y }\n                })\n                setLineData({\n                    ...response,\n                    throughPut: convertedThroughput\n                })\n                setTimeSpan('line')\n            } else {\n                setBarData(response)\n            }\n            \n            setLoading(false)\n\n            return response;\n        })\n\n        getReportData(body)\n    }\n\n    const getReportData = async (body) => {\n        setLoading(true)\n        const reportAnalyticsResponse = await getReportAnalytics(stationID, body)\n\n        if (reportAnalyticsResponse && !(reportAnalyticsResponse instanceof Error)) {\n            setReportData(reportAnalyticsResponse)\n        }\n        setLoading(false)\n    }\n\n    /**\n     * Gets the new data based on the selected time span and dateIndex\n     * \n     * TimeSpan:\n     * Can be either Day, Week, Month or Year\n     * \n     * DateIndex:\n     * The current date (today) index is 0, if you want to go back to the past date, the index would be 1 \n     * \n     * @param {*} newTimeSpan \n     * @param {*} newDateIndex \n     */\n    const onTimeSpan = async (newTimeSpan, newDateIndex, newSortLevel) => {\n\n        setTimeSpan(newTimeSpan)\n        setDateIndex(newDateIndex)\n        setParentSortLevel(newSortLevel)\n\n        setLoading(true)\n\n        const body = { timespan: newTimeSpan, index: newDateIndex, sort_index: newSortLevel.value }\n        const dataPromise = getStationAnalytics(stationID, body)\n\n        // If the timespan changes to line, then dont change what the report chart is showing\n        if (newTimeSpan !== 'line') {\n            const reportAnalyticsResponse = await getReportAnalytics(stationID, body)\n            if (reportAnalyticsResponse && !(reportAnalyticsResponse instanceof Error)) {\n                setReportData(reportAnalyticsResponse)\n            }\n        }\n\n        return dataPromise.then(response => {\n            if (response === undefined) return setLoading(false)\n            // Convert Throughput\n\n            if (newTimeSpan === 'line') {\n                let convertedThroughput = response.throughPut.map(dataPoint => {\n                    let convertedTime = dataPoint.x * 1000\n                    convertedTime = Math.round(convertedTime)\n                    return { x: convertedTime, y: dataPoint.y }\n                })\n                setLineData({\n                    ...response,\n                    throughPut: convertedThroughput\n                })\n                setTimeSpan('line')\n            } else {\n                setBarData(response)\n            }\n\n            setLoading(false)\n\n            return response;\n        })\n    }\n\n    const renderHeader = () => {\n        return (\n            <div style={{ marginBottom: '1rem', alignItems: \"center\", display: \"flex\", flexDirection: \"column\" }}>\n                {\n                    <>\n                        <TimeSpanSelector\n                            timespanDisabled={timespanDisabled}\n                            setTimeSpan={(timeSpan) => onTimeSpan(timeSpan, 0, parentSortLevel)}\n                            timeSpan={timeSpan}\n                        />\n                        {/* Commented out for now, only need through put bar chart */}\n                        {/* {handleGaugeCharts()} */}\n                    </>\n                }\n                {renderDateSelector()}\n            </div>\n        )\n    }\n\n    // Handles the date selector at the top of the charts\n    const renderDateSelector = () => {\n\n        let date_title\n        if (timeSpan === 'line') {\n            date_title = lineData?.date_title || null\n        } else {\n            date_title = barData?.date_title || null\n        }\n\n        if (date_title === null) return null\n\n        return (\n            <DaySelector\n                date={date_title}\n                dateIndex={dateIndex}\n                loading={loading}\n                onChange={(newIndex) => {\n                    onTimeSpan(timeSpan, newIndex, parentSortLevel)\n                }}\n            />\n        )\n\n    }\n\n\n\n    return (\n\n        <styled.OverviewContainer>\n            {/* {isDevice &&\n                handleDeviceStatistics()\n            } */}\n\n\n            {/* Commented out for now, only need through put bar chart */}\n            {/* <DataSelector selector={selector} setSelector={setSelector} /> */}\n\n            <styled.PlotsContainer\n                ref={pc => plotRef = pc}\n            // onMouseMove={findSlice}\n            >\n                {renderHeader()}\n                <ThroughputChart\n                    lineData={lineData}\n                    barData={barData}\n\n                    loading={loading}\n                    timeSpan={timeSpan}\n                    isWidget={true}\n                    loadLineChartData={(sortLevel) => onTimeSpan('line', dateIndex, parentSortLevel)}\n                    loadBarChartData={(sortLevel) => onTimeSpan('day', dateIndex, parentSortLevel)}\n                    disableTimeSpan={(bool) => {\n                        setTimespanDisabled(bool)\n                    }}\n                    setParentSortLevel={(val) => {\n                        onTimeSpan(timeSpan, dateIndex, val)\n                    }}\n                    sortLevel={parentSortLevel}\n                />\n                <ReportChart\n                    reportButtons={reportButtons}\n                    reportDate={reportData}\n                    isThroughputLoading={loading}\n                    timeSpan={timeSpan}\n                    reportData={reportData}\n                    isWidget={true}\n                />\n            </styled.PlotsContainer>\n\n        </styled.OverviewContainer>\n    )\n}\n\nexport default StatisticsOverview"],"sourceRoot":""}