{"version":3,"sources":["redux/actions/card_actions.js","methods/utils/map_utils.js","methods/utils/processes_utils.js","global_style.js","components/basic/drop_down_search_v2/components/ClickOutside.js","components/basic/drop_down_search_v2/components/Label.js","components/basic/drop_down_search_v2/util.js","components/basic/drop_down_search_v2/constants.js","components/basic/drop_down_search_v2/components/Option.js","components/basic/drop_down_search_v2/components/Input.js","components/basic/drop_down_search_v2/components/Content.js","components/basic/drop_down_search_v2/components/NoData.js","components/basic/drop_down_search_v2/components/Item.js","components/basic/drop_down_search_v2/components/Dropdown.js","components/basic/drop_down_search_v2/components/Loading.js","components/basic/drop_down_search_v2/components/Clear.js","components/basic/drop_down_search_v2/components/Separator.js","components/basic/drop_down_search_v2/components/DropdownHandle.js","components/basic/drop_down_search_v2/drop_down_search.js","constants/common_contants.js","normalizr/schema.js","redux/types/map_types.js","hooks/useWindowSize.js","redux/types/setting_types.js","redux/types/status_types.js","api/devices_api.js","redux/actions/devices_actions.js","redux/types/notifications_types.js","redux/types/authentication_types.js","methods/utils/color_utils.js","methods/utils/locations_utils.js","methods/utils/card_utils.js","methods/utils/form_utils.js","logger.js","App.style.js","api/local_api.js","redux/actions/local_actions.js","api/map_api.js","redux/actions/map_actions.js","api/objects_api.js","redux/actions/objects_actions.js","api/sounds_api.js","redux/actions/sounds_actions.js","api/task_analysis_api.js","redux/actions/task_analysis_actions.js","api/data_stream_api.js","normalizr/status_schema.js","api/schedules_api.js","redux/actions/schedule_actions.js","api/status_api.js","redux/actions/status_actions.js","api/settings_api.js","redux/actions/settings_actions.js","components/misc/splash_screen/splash_screen.style.js","components/misc/splash_screen/splash_screen.js","containers/side_bar/side_bar.style.js","components/side_bar/side_bar_buttons/side_bar_button.style.js","components/basic/modals/confirm_delete_modal/confirm_delete_modal.style.js","components/basic/modals/confirm_delete_modal/confirm_delete_modal.js","components/side_bar/side_bar_buttons/side_bar_button.js","redux/actions/locations_actions.js","redux/types/locations_types.js","components/side_bar/side_bar_switcher/side_bar_switcher.style.js","redux/actions/sidebar_actions.js","components/side_bar/side_bar_switcher/side_bar_switcher.js","components/side_bar/content/locations/locations_content.style.js","components/side_bar/content/content_list/content_list.style.js","components/side_bar/content/content_header/contnet_header.style.js","components/basic/plus_button/plus_button.style.js","components/basic/plus_button/plus_button.js","components/basic/back_button/back_button.style.js","components/basic/back_button/back_button.js","components/basic/bounce_button/bounce_button.style.js","components/widgets/widget_pages/dashboards_page/dashboard_editor/button_fields/button_fields.style.js","components/widgets/widget_pages/dashboards_page/dashboard_buttons/dashboard_buttons.style.js","components/widgets/widget_pages/dashboards_page/dashboard_buttons/dashboard_button/dashboard_button.style.js","components/widgets/widget_pages/dashboards_page/dashboard_buttons/dashboard_button/dashboard_button.js","hooks/useOnClickOutside.js","components/basic/bounce_button/bounce_button.js","components/side_bar/content/content_header/content_header.js","constants/station_constants.js","constants/position_constants.js","components/side_bar/content/content_list/content_list.js","components/side_bar/content/locations/edit_location/edit_location.style.js","components/side_bar/content/locations/edit_location/location_button/location_button.style.js","components/side_bar/content/locations/edit_location/location_button/location_button.js","components/side_bar/content/locations/edit_location/associated_positions/associated_positions.style.js","components/basic/minus_button/minus_button.style.js","components/basic/minus_button/minus_button.js","components/side_bar/content/locations/edit_location/associated_positions/associated_positions.js","constants/location_constants.js","methods/utils/form_schemas.js","methods/utils/regex_utils.js","components/side_bar/content/locations/edit_location/edit_location.js","components/side_bar/content/locations/locations_content.js","components/side_bar/content/objects/objects_content.style.js","components/side_bar/content/tasks/tasks_content.style.js","constants/dashboard_contants.js","components/widgets/widget_pages/dashboards_page/dashboard_screen/task_added_alert/task_added_alert.style.js","components/widgets/widget_pages/dashboards_page/dashboard_screen/task_added_alert/task_added_alert.js","methods/utils/task_utils.js","components/side_bar/content/tasks/tasks_templates/route_task.js","components/basic/form/switch_field/switch_field.style.js","components/basic/form/switch_field/switch_field.js","components/basic/form/time_picker_field/time_picker_field.style.js","components/basic/form/time_picker_field/time_picker_field.js","methods/utils/string_utils.js","components/side_bar/content/tasks/task_field/fields/load_unload_fields.js","components/basic/textbox_search/components/ClickOutside.js","components/basic/textbox_search/components/Label.js","components/basic/textbox_search/util.js","components/basic/textbox_search/constants.js","components/basic/textbox_search/components/Option.js","components/basic/textbox_search/components/Input.js","components/basic/textbox_search/components/Content.js","components/basic/textbox_search/components/NoData.js","components/basic/textbox_search/components/Item.js","components/basic/textbox_search/components/Dropdown.js","components/basic/textbox_search/components/Loading.js","components/basic/textbox_search/components/Clear.js","components/basic/textbox_search/components/Separator.js","components/basic/textbox_search/components/DropdownHandle.js","components/basic/textbox_search/textbox_search.js","components/basic/form/textbox_search_field/textbox_search_field.style.js","components/basic/form/textbox_search_field/textbox_search_field.js","hooks/usePrevious.js","components/side_bar/content/tasks/task_field/route_field.js","components/side_bar/content/tasks/task_form/route_form.js","components/side_bar/content/tasks/tasks_content.js","components/side_bar/content/devices/devices_content.style.js","components/side_bar/content/settings/settings.style.js","components/side_bar/content/devices/device_edit/device_edit.style.js","components/side_bar/content/devices/device_edit/device_edit.js","components/side_bar/content/devices/device_statistics/device_statistics.style.js","components/side_bar/content/devices/device_item/device_item.style.js","components/side_bar/content/devices/device_item/device_item.js","components/side_bar/content/devices/devices_content.js","components/basic/button_group/button_group.style.js","components/basic/button_group/button_group.js","methods/utils/style_utils.js","components/side_bar/content/scheduler/schedule_list/schedule_list_item/schedule_list_item.style.js","components/side_bar/content/scheduler/schedule_list/schedule_list_item/schedule_list_item.js","components/side_bar/content/scheduler/schedule_list/schedule_list.style.js","components/side_bar/content/scheduler/scheduler_content.style.js","components/side_bar/content/scheduler/schedule_list/schedule_list.js","components/basic/modals/modals.style.js","components/basic/small_button/small_button.style.js","components/basic/small_button/small_button.js","components/basic/modals/modals.js","components/basic/form/button_group_field/button_group_field.style.js","components/basic/form/button_group_field/button_group_field.js","components/side_bar/content/scheduler/create_schedule_form/create_schedule_form.helpers.js","methods/utils/schedules_utils.js","methods/utils/time_utils.js","components/side_bar/content/scheduler/create_schedule_form/create_schedule_form.style.js","components/side_bar/content/scheduler/create_schedule_form/button_group.style.js","components/side_bar/content/scheduler/create_schedule_form/create_schedule_form.js","components/side_bar/content/scheduler/scheduler_content.js","components/basic/form/list_item_field/list_item_field.style.js","components/basic/form/list_item_field/list_item_field.js","components/side_bar/content/processes/process_field/process_field.style.js","components/side_bar/content/processes/process_field/process_field.js","methods/utils/function_utils.js","components/side_bar/content/processes/process_form/process_form.js","components/side_bar/content/processes/processes_content.js","components/basic/header/header.style.js","components/side_bar/content/settings/settings.js","containers/page_error_boundary/page_error_boundary.style.js","containers/page_error_boundary/page_error_boundary.js","components/basic/form/calendar_field/calendar_field.style.js","components/basic/form/calendar_field/calendar_field.js","api/card_history_api.js","redux/actions/card_history_actions.js","components/basic/form/scrolling_buttons_field/scrolling_buttons_field.style.js","components/basic/form/scrolling_buttons_field/scrolling_buttons_field.js","components/basic/form/number_field/number_field.style.js","components/basic/form/number_field/number_field.js","components/side_bar/content/cards/card_editor/card_editor.js","components/side_bar/content/cards/card_menu/card_menu.style.js","components/side_bar/content/cards/card_menu/card_menu.js","components/side_bar/content/cards/columns/station_column/station_column.style.js","components/side_bar/content/cards/columns/column/column.style.js","redux/actions/card_page_actions.js","components/side_bar/content/cards/columns/column/column.js","components/side_bar/content/cards/columns/station_column/station_column.js","components/side_bar/content/cards/columns/lot_queue/lot_queue.style.js","components/side_bar/content/cards/columns/lot_queue/lot_queue.js","components/side_bar/content/cards/columns/finish_column/finish_column.style.js","components/side_bar/content/cards/columns/finish_column/finish_column.js","components/side_bar/content/cards/card_zone/card_zone.style.js","components/side_bar/content/cards/card_zone/card_zone.js","components/side_bar/content/cards/zone_header/zone_header.style.js","components/side_bar/content/cards/zone_header/zone_header.js","components/side_bar/content/cards/summary_zone/summary_zone.style.js","components/side_bar/content/cards/summary_zone/summary_zone.js","components/side_bar/content/cards/cards.style.js","components/side_bar/content/cards/cards.js","redux/actions/widget_actions.js","containers/side_bar/side_bar.js","api/report_events_api.js","redux/actions/report_event_actions.js","api/lots_api.js","redux/actions/lot_actions.js","containers/api_container/api_container.js","redux/actions/data_stream_actions.js","containers/right_menu/right_menu.style.js","components/basic/basic_list_item/basic_list_item.style.js","components/basic/basic_list_item/basic_list_item.js","components/task_queue/task_queue_item/task_queue_item.style.js","components/basic/icon_button/icon_button.style.js","components/basic/icon_button/icon_button.js","components/task_queue/task_queue_item/task_queue_item.js","components/task_queue/task_queue.style.js","components/task_queue/task_queue.js","components/notifications/notification/notification.style.js","components/notifications/notification/notification.js","components/notifications/notifications.js","containers/right_menu/right_menu.js","containers/status_header/status_header.style.js","containers/status_header/status_header.js","containers/logger/logger.js","containers/map_view/map_view.style.js","components/map/task_paths/task_paths.js","components/map/process_paths/process_paths.js","components/map/amrs/mir100/mir100.js","components/map/right_click_menu/right_click_menu.style.js","components/map/right_click_menu/right_click_menu.js","components/map/task_statistics/task_statistics.style.js","components/map/task_statistics/task_statistics.js","components/widgets/widget_pages/widget_pages.style.js","components/widgets/widget_pages/widget_page_header/widget_page_header.style.js","components/widgets/widget_pages/dashboards_page/dashboards_header/dashboards_header.style.js","components/widgets/widget_pages/dashboards_page/dashboard_list/DashboardsList.style.js","components/widgets/widget_pages/dashboards_page/dashboard_list/dashboard/dashboard.style.js","components/widgets/widget_pages/dashboards_page/dashboards_sidebar/dashboard_sidebar_button/dashboard_sidebar_button.style.js","components/widgets/widget_pages/dashboards_page/dashboards_sidebar/dashboard_sidebar_button/dashboard_sidebar_button.js","components/widgets/widget_pages/dashboards_page/dashboard_list/dashboard/dashboard.js","components/widgets/widget_pages/dashboards_page/dashboards_header/dashboards_header.js","components/widgets/widget_pages/dashboards_page/dashboard_list/DashboardsList.js","components/widgets/widget_pages/dashboards_page/dashboard_screen/dashboard_button_list/dashboard_button_list.style.js","components/widgets/widget_pages/dashboards_page/dashboards_sidebar/dashboards_sidebar.style.js","components/basic/widget_button/widget_button.style.js","components/basic/widget_button/widget_button.js","components/widgets/widget_pages/dashboards_page/dashboards_sidebar/dashboards_sidebar.jsx","methods/utils/dashboards_utils.js","components/widgets/widget_pages/dashboards_page/dashboard_buttons/dashboard_split_button/dashboard_split_button.style.js","components/widgets/widget_pages/dashboards_page/dashboard_buttons/dashboard_split_button/dashboard_split_button.js","components/widgets/widget_pages/dashboards_page/dashboard_screen/dashboard_button_list/dashboard_button_list.js","components/widgets/widget_pages/dashboards_page/dashboard_screen/dashboard_task_queue/dashboard_task_queue.style.js","components/widgets/widget_pages/dashboards_page/dashboard_screen/dashboard_task_queue/dashboard_task_queue.js","components/widgets/widget_pages/dashboards_page/dashboard_screen/dashboard_screen.style.js","components/basic/form/color_field/color_field.style.js","components/basic/form/color_field/color_field.js","components/widgets/widget_pages/dashboards_page/dashboard_screen/report_modal/report_modal.style.js","components/basic/form/delete_field_button/delete_field_button.style.js","components/basic/form/delete_field_button/delete_field_button.js","components/widgets/widget_pages/dashboards_page/dashboard_screen/report_modal/report_modal.js","components/widgets/widget_pages/dashboards_page/dashboard_screen/kick_off_modal/kick_off_modal.style.js","components/widgets/widget_pages/dashboards_page/dashboard_screen/kick_off_modal/kick_off_modal.js","components/widgets/widget_pages/dashboards_page/dashboard_screen/finish_modal/finish_modal.style.js","components/widgets/widget_pages/dashboards_page/dashboard_screen/finish_modal/finish_modal.js","components/widgets/widget_pages/dashboards_page/dashboard_screen/dashboard_screen.js","components/widgets/widget_pages/dashboards_page/dashboard_editor/dashboard_add_task/dashboard_add_task.style.js","components/widgets/widget_pages/dashboards_page/dashboard_editor/button_fields/dashboard_route_field/dashboard_route_field.style.js","components/widgets/widget_pages/dashboards_page/dashboard_editor/button_fields/dashboard_route_field/dashboard_route_field.js","components/widgets/widget_pages/dashboards_page/dashboard_editor/button_fields/dashboard_report_field/dashboard_report_field.js","components/widgets/widget_pages/dashboards_page/dashboard_editor/dashboard_editor_button_renderer/dashboard_editor_button_renderer.js","components/widgets/widget_pages/dashboards_page/dashboard_editor/dashboard_editor.style.js","components/widgets/widget_pages/dashboards_page/dashboards_page.style.js","components/widgets/widget_pages/dashboards_page/dashboard_editor/dashboard_add_button/dashboard_add_button.style.js","components/widgets/widget_pages/dashboards_page/dashboard_editor/dashboard_add_button/dashboard_add_button.js","components/widgets/widget_pages/dashboards_page/dashboard_editor/dashboard_editor.js","components/widgets/widget_pages/dashboards_page/dashboards_page.js","components/widgets/widget_pages/objects_page/objects_page.style.js","components/widgets/widget_pages/objects_page/object_columns/object_columns.style.js","components/widgets/widget_pages/objects_page/object_link/object_link.js","components/widgets/widget_pages/objects_page/object_columns/object_columns.js","components/widgets/widget_pages/objects_page/objects_page.js","components/widgets/widget_pages/statistics_page/statistics_page.style.js","components/widgets/widget_pages/statistics_page/statistics_overview/statistics_overview.style.js","components/widgets/widget_pages/statistics_page/statistics_overview/timespans/timespans.style.js","components/widgets/widget_pages/statistics_page/statistics_overview/timespans/timespans.js","components/widgets/widget_pages/statistics_page/statistics_overview/data_selector/data_selector.style.js","components/widgets/widget_pages/statistics_page/statistics_charts/statistics_charts_types/bar_chart.js","components/widgets/widget_pages/statistics_page/statistics_overview/statistics_overview.js","components/widgets/widget_pages/statistics_page/statistics_charts/statistics_charts.style.js","components/widgets/widget_pages/statistics_page/statistics_page.js","components/widgets/widget_pages/tasks_page/tasks_page.js","components/widgets/widget_pages/viewer_page/viewer_page.style.js","components/widgets/widget_pages/viewer_page/stream_container/stream_container.style.js","components/widgets/widget_pages/viewer_page/stream_container/stream_container.js","components/widgets/widget_pages/viewer_page/stream_info/stream_info.style.js","components/widgets/widget_pages/viewer_page/stream_info/stream_info.js","methods/utils/websocket_utils.js","components/widgets/widget_pages/viewer_page/test_buttons/test_buttons.style.js","components/widgets/widget_pages/viewer_page/viewer_page.js","components/widgets/widget_pages/viewer_page/test_buttons/test_buttons.js","components/widgets/widget_pages/lots_page/lots_page.style.js","components/widgets/widget_pages/lots_page/lots_page.js","components/widgets/widget_pages/widget_pages.js","components/widgets/widget_button/widget_button.style.js","components/widgets/widget_button/widget_button.js","components/widgets/widgets.style.js","components/widgets/widgets.js","components/map/locations/station/station.style.js","methods/utils/widget_utils.js","components/map/locations/location_svg/location_svg.style.js","components/map/locations/location_svg/location_svg.js","components/map/locations/drag_entity_proto.js","components/map/locations/station/station.js","components/map/locations/position/position.js","containers/map_view/map_view.js","containers/hil_modal/hil_modal.js","containers/authentication/authentication.style.js","components/sign_in_up_page/sign_in_up_page.style.js","components/sign_in_up_page/sign_in_up_page.js","containers/authentication/authentication.js","components/list_view/list_view.style.js","components/list_view/location_list/location_list.js","components/list_view/list_view.js","redux/actions/test_actions.js","containers/api_container/tests_container.js","App.js","serviceWorker.js","index.js","api/events_api.js","methods/utils/array_utils.js","common_css/common_css.js","theme.js","components/basic/form/drop_down_search_field/drop_down_search_field.style.js","components/basic/form/drop_down_search_field/drop_down_search_field.js","methods/utils/route_utils.js","redux/types/sidebar_types.js","redux/types/widget_types.js","api/dashboards_api.js","components/side_bar/content/cards/card/card.style.js","components/side_bar/content/cards/card/card.js","settings/settings.js","components/hil_modals/hil_modals.style.js","api/task_queue_api.js","api/cards_api.js","redux/types/api_types.js","components/basic/form/useChange.js","redux/types/tasks_types.js","redux/types/ui_types.js","constants/route_constants.js","components/hil_modals/hil_modals.js","components/basic/button/button.style.js","components/basic/button/button.js","redux/types/prefixes.js","api/tasks_api.js","redux/actions/tasks_actions.js","normalizr/schedules_schema.js","api/stations_api.js","redux/actions/stations_actions.js","redux/types/data_types.js","api/positions_api.js","redux/actions/positions_actions.js","components/side_bar/content/cards/card_editor/card_editor.style.js","constants/local_settings_constants.js","components/basic/textbox/textbox.style.js","components/basic/textbox/textbox.js","redux/reducers/local_reducer.js","normalizr/task_queue_schema.js","redux/actions/dashboards_actions.js","methods/utils/station_utils.js","redux/types/suffixes.js","redux/types/objects_types.js","redux/types/stations_types.js","redux/types/positions_types.js","redux/reducers/objects_reducer.js","redux/reducers/api_reducer.js","redux/reducers/task_analysis_reducer.js","redux/types/task_queue_types.js","components/hil_modals/hil_modals_content/hil_success.js","redux/reducers/schedules_reducer_v2.js","redux/reducers/skills_reducer.js","redux/reducers/stations_reducer.js","redux/reducers/positions_reducer.js","redux/reducers/dashboards_reducer.js","redux/reducers/error_reducer.js","redux/reducers/status_reducer.js","redux/reducers/task_queue_reducer.js","redux/reducers/keyboard_reducer.js","redux/reducers/tasks_reducer.js","redux/reducers/sounds_reducer.js","redux/reducers/settings_reducer.js","redux/reducers/models_reducer.js","redux/types/skill_templates_types.js","redux/reducers/skill_templates_reducer.js","redux/types/poses_types.js","redux/reducers/poses_reducer.js","methods/utils/redux_utils.js","redux/reducers/request_status_reducer.js","redux/reducers/map_reducer.js","redux/reducers/sidebar_reducer.js","redux/reducers/widget_reducer.js","redux/reducers/devices_reducer.js","redux/reducers/notifications_reducer.js","redux/reducers/events_reducer.js","redux/reducers/authentication_reducer.js","redux/reducers/processes_reducer.js","redux/reducers/report_events_reducer.js","redux/reducers/cards_reducer.js","redux/reducers/lots_reducer.js","redux/reducers/card_page_reducer.js","redux/reducers/index.js","redux/types/schedule_types.js","redux/types/skills_types.js","redux/types/error_types.js","redux/types/keyboard_types.js","redux/types/models_types.js","redux/store/index.js","api/processes_api.js","redux/actions/processes_actions.js","constants/device_constants.js","redux/types/devices_types.js","methods/utils/object_utils.js","redux/types/local_types.js","redux/types/dashboards_types.js","redux/types/processes_types.js","higher_order_components/portal.js","components/basic/form/error_tooltip/error_tooltip.style.js","components/basic/form/error_tooltip/error_tooltip.js","methods/utils/utils.js","constants/scheduler_constants.js","redux/types/events_types.js","redux/actions/task_queue_actions.js","components/basic/form/text_field/text_field.style.js","components/basic/form/text_field/text_field.js","redux/actions/index.js"],"names":["log","getLogger","setLevel","getCard","cardId","dispatch","a","callback","api","card","actionName","GET","CARD","api_action","payload","getCards","cards","cardsObj","convertArrayToObject","CARDS","getProcessCards","processId","PROCESS_CARDS","postCard","createdCard","process_id","POST","deleteCard","DELETE","putCard","cardID","response","PUT","showEditor","bool","type","SHOW_EDITOR","convertD3ToReal","d3","x","y","mapResolution","translate","scale","naturalDims","height","convertRealToD3","pos_x","pos_y","isBrokenProcess","routes","length","i","currentRoute","nextRoute","getUnloadStationId","getLoadStationId","willRouteDeleteBreakProcess","routeId","_id","copyProcessRoutes","deepCopy","index","findIndex","currRoute","splice","getProcessStations","process","stationIds","forEach","currRouteId","unload","load","unloadStationId","station","loadStationId","getPreviousRoute","processRoutes","currentRouteId","previousRoute","store","getState","tasksReducer","tasks","currentRouteindex","currItem","isObject","globStyle","lrgFontSize","medFontSize","smlFontSize","font","lightBG","darkBG","white","black","grey1","grey2","grey3","grey4","grey5","red","green","ClickOutside","container","React","createRef","handleClick","event","current","target","onClickOutside","props","contains","document","addEventListener","this","capture","passive","removeEventListener","className","children","ClickOutsideComponent","ref","Component","DefaultClickOutsideComponent","styled","div","defaultProps","Label","LabelComponent","label","DefaultLabelComponent","LightenDarkenColor","theme","bg","quinary","septenary","primary","fontSize","sz5","valueExistInSelected","value","values","find","val","getByPath","hexToRGBA","hex","alpha","RR","parseInt","slice","GG","BB","debounce","fn","timerId","delay","args","clearTimeout","setTimeout","isEqual","b","JSON","stringify","object","path","split","reduce","acc","getProp","defaultValue","normalizedPath","Array","isArray","filter","item","shift","undefined","LIB_NAME","Option","state","methods","OptionComponent","DefaultOptionComponent","optionRenderer","role","disabled","direction","color","labelField","onClick","removeItem","closeOnSelect","span","handlePlaceHolder","addPlaceholder","searchable","placeholder","noValues","hasValues","Input","input","onBlur","stopPropagation","dropdown","focus","blur","handleKeyPress","create","key","search","cursor","createNew","prevProps","autoFocus","InputComponent","inputRenderer","inputRef","tabIndex","onFocus","size","getInputSize","readOnly","dropDown","onKeyPress","onChange","setSearch","filled","DefaultInputComponent","senary","Content","ContentComponent","multi","contentRenderer","OptionsContainer","showSelectedBox","map","valueField","Value","sz3","DefaultContentComponent","NoData","NoDataComponent","noDataRenderer","id","noDataLabel","DefaultNoDataComponent","Item","itemIndex","scrollIntoView","behavior","block","inline","ItemComponent","ButtonComponent","ContentContainer","TextComponent","onMouseEnter","itemRenderer","keepSelectedInList","isSelected","aria-selected","aria-disabled","aria-label","addItem","schema","disabledLabel","showButton","onDetailsClick","e","window","cancelBubble","DefaultItemComponent","solid","secondary","tertiary","DefaultContentContainer","DefaultButtonComponent","DefaultTextComponent","dropdownPosition","DropdownBoundingClientRect","getSelectRef","getBoundingClientRect","dropdownHeight","bottom","dropdownGap","innerHeight","top","Dropdown","DropDownComponent","aria-expanded","selectBounds","portal","dropdownRenderer","Fragment","AddNew","createNewLabel","replace","searchResults","DefaultDropDownComponent","left","LoadingComponent","Loading","loadingRenderer","ClearComponent","Clear","clearRenderer","clearAll","SeparatorComponent","Separator","separatorRenderer","DropdownHandleComponent","dropdownOpen","DropdownHandle","dropdownHandleRenderer","onKeyDown","fill","viewBox","d","DropDownSearch","onDropdownClose","setState","onScroll","closeOnScroll","updateSelectBounds","select","getSelectBounds","action","srcElement","offsetParent","classList","keepOpen","clearOnBlur","clearOnSelect","close","preventDefault","newValues","onRemoveItem","toggleSelectAll","selectAll","onClearAll","valuesList","onSelectAll","options","option","areAllSelected","safeString","string","sortBy","sort","searchFn","regexp","RegExp","test","searchBy","activeCursorItem","handleKeyDown","bind","handleKeyDownFn","escape","enter","arrowUp","arrowDown","tab","shiftKey","shiftTab","currentItem","prevState","renderDropdown","ReactDOM","createPortal","dropdownRoot","newValue","onCreateNew","createElement","appendChild","onDropdownOpen","fillable","removeChild","debounceDelay","ReactDropdownSelect","Container","style","additionalProps","name","required","opacity","width","position","pattern","toString","loading","clearable","separator","dropdownHandle","DefaultReactDropdownSelect","octonary","DefaultContainer","SORT_MODES","START_ASCENDING","START_DESCENDING","END_ASCENDING","END_DESCENDING","NAME_ASCENDING","NAME_DESCENDING","QUANTITY_ASCENDING","QUANTITY_DESCENDING","SORT_OPTIONS","description","sortMode","devicesSchema","Entity","idAttribute","parent","$oid","eventsSchema","processesSchema","soundsSchema","tasksAnalysisSchema","task_id","positionsSchema","stationsSchema","processStrategy","GET_MAPS","GET_MAPS_STARTED","GET_MAPS_SUCCESS","GET_MAPS_FAILURE","GET_MAP","GET_MAP_STARTED","GET_MAP_SUCCESS","GET_MAP_FAILURE","SET_MAP_ATTRIBUTES","SET_CURRENT_MAP","useWindowSize","useState","windowSize","setWindowSize","useEffect","handleResize","innerWidth","GET_SETTINGS","GET_SETTINGS_STARTED","GET_SETTINGS_SUCCESS","GET_SETTINGS_FAILURE","POST_SETTINGS","POST_SETTINGS_STARTED","POST_SETTINGS_SUCCESS","POST_SETTINGS_FAILURE","DEVICE_ENABLED","GET_STATUS_STARTED","GET_STATUS_SUCCESS","GET_STATUS_FAILURE","POST_STATUS_STARTED","POST_STATUS_SUCCESS","POST_STATUS_FAILURE","cognotoUserSession","logger","getDevices","axios","method","url","apiIPAddress","headers","data","dataJson","parse","debug","status","request","message","putDevices","device","ID","onStart","onSuccess","onError","error","GET_DEVICES_FAILURE","GET_DEVICES_SUCCESS","GET_DEVICES_STARTED","devices","ind","normalizedDevices","normalize","entities","PUT_DEVICES_FAILURE","PUT_DEVICES_SUCCESS","PUT_DEVICES_STARTED","updateDevices","setSelectedDevice","GET_NOTIFICATIONS_STARTED","GET_NOTIFICATIONS_SUCCESS","GET_NOTIFICATIONS_FAILURE","POST_NOTIFICATIONS_STARTED","POST_NOTIFICATIONS_SUCCESS","POST_NOTIFICATIONS_FAILURE","PUT_NOTIFICATION_STARTED","PUT_NOTIFICATION_SUCCESS","PUT_NOTIFICATION_FAILURE","DELETE_NOTIFICATION_STARTED","DELETE_NOTIFICATION_SUCCESS","DELETE_NOTIFICATION_FAILURE","TOGGLE_NOTIFICATION_TASK_QUEUE","GET_REFRESH_TOKEN","GET_REFRESH_TOKEN_STARTED","GET_REFRESH_TOKEN_SUCCESS","GET_REFRESH_TOKEN_FAILURE","POST_REFRESH_TOKEN","POST_REFRESH_TOKEN_STARTED","POST_REFRESH_TOKEN_SUCCESS","POST_REFRESH_TOKEN_FAILURE","col","amt","usePound","num","r","g","RGB_Linear_Shade","p","c","Math","round","t","P","locationsSortedAlphabetically","locations","locationsCopy","aName","bName","editing","editingPosition","positionsReducer","editingStation","stationsReducer","compareExistingVsIncomingLocations","incomingLocations","existingLocations","Object","existingLocation","assign","new","incomingLocation","change_key","EVENT_NAMES","parseMessageFromEvent","eventName","username","msgs","keys","currKey","newVal","oldVal","old","push","convertCardDate","cardDate","year","month","day","Date","arr","itemA","itemB","countA","count","countB","endDateA","end_date","convertedA","endDateB","convertedB","startDateA","start_date","startDateB","getMessageFromError","err","category","defineProperty","writable","getCategoryLoggers","loggers","getLoggers","categoryLoggers","HeaderContainer","BodyContainer","loggerConfig","localStorage","getItem","postLoggers","settings","setItem","postLocalSettings","console","localSettings","getLocalSettings","defaultLocalSettings","POST_LOCAL_SETTINGS_FAILURE","POST_LOCAL_SETTINGS_SUCCESS","POST_LOCAL_SETTINGS_STARTED","stopAPICalls","STOP_API_CALLS","getMaps","getMap","map_id","setCurrentMap","getObjects","postObject","POST_OBJECT_FAILURE","newObject","POST_OBJECT_SUCCESS","POST_OBJECT_STARTED","getSounds","getTasksAnalysis","httpsAgent","https","Agent","rejectUnauthorized","getDataStream","getSchedules","postSchedule","schedule","deleteSchedule","scheduleId","putSchedule","createdSchedule","normalizedSchedules","scheduleSchema","createdSchedules","schedules","SCHEDULE","normalizedSchedule","getStatus","postStatus","getSettings","postSettings","newSettings","deviceEnabled","SwitchContainer","sz4","SwitchContainerLabel","ToggleMapViewSwitch","checked","switchContainerStyle","margin","SplashScreen","isApiLoaded","apiError","useDispatch","useSelector","localReducer","apiIpAddress","setApiIpAddress","onPostLocalSettings","handleSubmitApiIpAddress","non_local_api","non_local_api_ip","location","reload","toggleMapViewEnabled","mapViewEnabled","paddingTop","display","alignItems","flexDirection","marginBottom","minWidth","onSubmit","border","transform","justifyContent","SideBarOpenCloseButton","button","showSideBar","widthBreakpoint","tablet","SidebarWrapper","SidebarContent","ResizeBar","ResizeHandle","content","SideBarButtonIcon","mode","currentMode","gradient","SideBarButtonText","h1","borderGlowCss","css","fg","Modal","Header","Title","h2","sz2","fontWeight","bold","quaternary","ButtonForm","ConfirmDeleteModal","background","clickable","hoverable","boxShadow","pointerEvents","borderGlow","showBorder","isOpen","title","handleClose","dashboard","handleOnClick1","handleOnClick2","button_1_text","button_2_text","contentLabel","onRequestClose","overlay","zIndex","aria-hidden","SideBarButton","history","useHistory","taskEditing","editingTask","processEditing","processesReducer","editingProcess","onLocationEditing","onTaskEditing","tasksActions","onProcessEditing","processesActions","confirmDeleteModal","setConfirmDeleteModal","locationEditing","handleConfirmationModal","pathname","setShowSideBarPage","SideBarContainer","setMode","SET_MODE","setWidth","SET_WIDTH","setOpen","SET_OPEN","SideBarSwitcher","dispatchSetSelectedStation","setSelectedStation","dispatchSetSelectedPosition","setSelectedPosition","dispatchTaskEditing","dispatchProcessEditing","MiRMapEnabled","sidebarReducer","settingsReducer","wrapperRef","useRef","useLocation","page","deselectTask","ul","selected","h3","List","ListItem","isNew","commonCss","ListItemRect","LocationTypeGraphic","svg","ListItemTitle","ListItemIcon","ListItemIconContainer","ErrorContainer","ClearIcon","DeleteForeverIcon","PlusSymbol","PlusButton","BackSymbol","active","hovered","BackButton","setHovered","setActive","containerStyle","onMouseLeave","onMouseDown","onMouseUp","disable","activeStyle","backgroundColor","hoverStyle","SchemaIcon","DeleteButtonIcon","ColorDropdownInnerContainer","DeleteButton","RightContentContainer","TaskName","TransparentTextBox","Textbox","CenterContainer","DashboardEditButton","ContainerCss","ErrorContainerComponent","conditionTextCss","ConditionText","IconContainer","DashboardButton","deviceType","taskID","titleStyle","containerCss","iconColor","iconClassName","visible","text","ContainerComponent","dashboard_buttons_style","useOnClickOutside","handler","listener","BounceButton","ContentHeader","onClickAdd","onClickSave","onClickBack","onClickClear","saveEnabled","backEnabled","handleTitle","upperCaseFirstLetterInString","float","StationTypes","warehouse","svgPath","rx","attributes","dashboards","human","PositionTypes","shelf_position","cx","cy","stroke","strokeMiterlimit","strokeWidth","charger_position","cart_position","temporary_cart_position","newPositionTemplate","temp","rotation","uuid","v4","ContentList","executeTask","hideHeader","handleCardView","elements","taskQueueReducer","taskQueue","onPlus","element","broken","LocationTypes","data-name","xmlns","renderLocationTypeIcon","stylel","DefaultTypesContainer","LocationTypeContainer","LocationButtonConatiner","LocationButtonSubtitleContainer","Subtitle","isNotSelected","LocationTypeButton","LocationButton","handleAddLocation","PositionsContainer","LocationTypeLabel","Card","CardContainer","NewPositionCard","ListContainer","PositionListItem","CartIcon","MinusSymbol","MinusButton","Positions","handleSetChildPositionToCartCoords","dispatchSetSelectedStationChildrenCopy","positions","setSelectedStationChildrenCopy","selectedStation","currentMap","selectedPosition","mapReducer","selectedStationChildrenCopy","editingIndex","setEditingIndex","setDeletingIndex","deletingPosition","setDeletingPosition","positionTypes","onDelete","deletePosition","onAddAssociatedPosition","newPositionName","newPosition","addPosition","attr","setStationAttributes","onDeleteAssociatedPosition","positionType","positionName","draggable","flex","positionActions","LocationDefaultAttributes","require","lazy","mapValues","number","Yup","startPath","endPath","startDate","createError","endDate","shape","min","max","task","of","matches","days_on","start_time","time_interval","stop_time","reportEventSchema","dashboardSchema","instruction","sound","timeout","nullable","hil","quantity","buttons","signUpSchema","email","password","confirmPassword","oneOf","signInSchema","binsSchema","obj","CARD_SCHEMA_MODES","editLotSchema","bins","dates","startEndDate","getCardSchema","availableBinItems","maxCount","moveCount","moveLocation","routeStationSchema","positionSchema","stationSchema","instructions","routeSchema","track_quantity","routesSchema","processSchema","newRoute","locationSchema","stations","selectedLocation","stationNames","locationName","notOneOf","EditLocation","dispatchSetEditingStation","setEditingStation","dispatchPutStation","putStation","dispatchPostStation","postStation","dispatchDeleteStation","deleteStation","dispatchAddPosition","pos","dispatchSetEditingPosition","setEditingPosition","dispatchDeletePosition","dispatchPutPosition","putPosition","dispatchPostPosition","postPosition","dispatchRemovePosition","removePosition","devicesReducer","processes","newName","onSave","copyStation","copyPosition","onBack","save","child","removeStation","onAddLocation","defaultAttributes","newLocation","addStation","handleSetPositionToCartCoords","device_model","devicePosition","updatedSelectedLocation","orientation","initialValues","initialTouched","validateOnChange","validateOnMount","validateOnBlur","validationSchema","setSubmitting","formikProps","submitForm","errors","charCode","keyCode","textStyle","marginTop","marginRight","copyPos","updatedPosition","copyOfCopy","LocationContent","onSetSelectedLocation","onEditLocation","editingLocation","copy","objects","RowContainer","LabelHighlight","HelpText","DirectionText","DualSelectionButton","ADD_TASK_ALERT_TYPE","PAGES","DASHBOARD_BUTTON_COLORS","AddTaskAlertContainer","AddTaskAlertLabel","AddTaskAlertMessage","TaskAddedAlert","alertColor","tasksSortedAlphabetically","tasksCopy","DefaultErrorContainerComponent","SwitchField","mapOutput","mapInput","rest","useFormikContext","setFieldValue","setFieldTouched","useField","field","meta","fieldValue","fieldName","touched","TimePickerComponent","hasError","TimePicker","TimePickerField","TimePickerCss","defaultOpenValue","isString","LoadUnloadFields","fieldParent","dispatchSetSelectedTask","setSelectedTask","selectedTask","sounds","soundsReducer","humanLocation","isMiRTask","isOnlyHumanTask","device_types","DEVICE_CONSTANTS","HUMAN","isMiRandHumanTask","MIR_100","splitVal","moment","set","format","flexWrap","textAlign","showHour","autocomplete","allowEmpty","time","lines","output","paddingBottom","onColor","handoff","textbox","currentValue","setValue","TextboxInput","textboxPosition","TextboxBoundingClientRect","textboxHeight","textboxGap","TextBoxComponent","textboxRenderer","DefaultTextBoxComponent","textboxOpen","TextBoxSearch","onTextboxClose","setValues","renderTextbox","textboxRoot","onTextboxOpen","ReactTextboxSelect","DefaultReactTextboxSelect","textboxHandle","IconContainerComponent","TextboxSearchField","ReactDropdownSelectStyle","borderLeft","borderTop","borderRight","borderBottom","transition","errorMessage","usePrevious","TaskField","isTransportTask","isProcessTask","getFieldMeta","onBackClick","onRemove","validateForm","useChange","changed","insertIndex","routeProcesses","getRouteProcesses","isProcessRoute","submitDisabled","dispatchSetEditing","taskActions","selectedProcess","dashboardsReducer","objectsReducer","fixingProcess","needsValidate","setNeedsValidate","didSetHandoff","setDidSetHandoff","previousLoadStationId","previousUnloadStationId","loadName","prevLoadName","unloadName","prevUnloadName","prevName","buildDefaultRouteName","setFixingProcess","needsSubmit","createObject","objectId","modelName","dimensions","objectActions","firstTask","isNextRouteViable","routeBeforeBreak","unloadStationID","dropdownValues","selectedValue","selectedObjId","selectedRouteId","selectedObj","includes","selectedRoute","disbaled","borderRadius","toggleEditing","TaskForm","remainingProps","dispatchSaveFormRoute","formRoute","saveFormRoute","dispatchRemoveTask","taskId","dispatchDeleteRouteClean","onEditing","handleSubmit","handleBackClick","handleDelete","formikHelpers","setTouched","TaskContent","useParams","dispatchAddTask","setShift","setIsNew","addTaskAlert","setAddTaskAlert","dashboardID","getLoadStationDashboard","Id","shiftCallback","objId","prevObj","onExecuteTask","inQueue","isHumanTask","taskQueueActions","onHandlePostTaskQueue","custom","fromSideBar","newTask","generateDefaultRoute","SettingsContainer","SettingsSectionsContainer","SettingsLabel","SettingContainer","ConnectionIcon","ConnectionButton","SectionsContainer","DeviceIcon","styles","ConnectionText","DeviceEdit","deviceLocationDelete","setDeviceType","selectedDevice","device_name","labelStyle","DeviceItemTypes","icon","handleDeviceMapLocation","idle_location","idleLocation","deviceActions","onSetSelectedDevice","maxWidth","sharedDeviceCss","DeviceContainer","isSmall","BatterySvg","BatteryText","BigCircle","DeviceTitle","EditDeviceIcon","StatusContainer","StatusText","DeviceItem","batteryRectWidth","batteryRectRx","deviceID","deviceName","stationId","setStationId","DeviceTypes","station_id","deviceFontSize","primaryColor","deviceStatus","state_text","current_task_queue_id","mission_status","handleDeviceStatus","xmlnsXlink","overflow","y1","x2","y2","gradientUnits","offset","stopColor","startGradientColor","stopGradientColor","battery_percentage","deviceBattery","batteryRectFill","batteryRectStroke","batteryTextColor","toFixed","handleDeviceBattery","DevicesContent","dispatchSetSelectedDevice","handleSaveDevice","handleExistingDevices","Button","buttonViewSelectedCss","ButtonView","tiny","mobileL","selectedCss","ButtonGroup","containerProps","buttonViewCss","buttonViewProps","buttonProps","onPress","selectedIndex","selectedIndexes","selectMultiple","buttonCss","innerBorderStyle","lastBorderStyle","buttonStyle","underlayColor","selectedTextStyle","selectedButtonStyle","activeOpacity","setOpacityTo","onHideUnderlay","onShowUnderlay","disabledStyle","disabledTextStyle","disabledSelectedStyle","disabledSelectedTextStyle","buttonsLength","isDisabled","isLast","colors","itemCount","getDebugStyle","TopContainer","buttonGroupContainerCss","DaysContainer","SubTitle","bad","LeftContentContainer","TimeContainerlarge","TimeContainer","TimeTitle","TimeValue","ScheduleListItem","taskName","schedule_on","onSwitchPress","interval_on","themeContext","next_time","useContext","ThemeContext","scheduler","NextExecution","TaskListContainer","ListEmptyContainer","ListEmptyTitle","ListEmptyFiller","titleCssSmall","sz7","ScheduleList","selectedScheduleId","setShowScheduleCreator","setSelectedScheduleId","openSchedule","timeToNextScheduled","setTimeToNextScheduled","timeToNextScheduledTemp","setTimeToNextScheduledHours","setTimeToNextScheduledMinutes","nextScheduleName","setNextScheduleName","setId","handleSwitchPress","scheduleItem","submitItem","fullSchedulesArr","currentTime","Number","startTime","stopTime","intervalTime","ceil","floor","handleNextExecution","stop_time_on","taskIsDeleted","daysOnArr","daysOfTheWeek","renderTasks","quarternary","TextContainer","TextMain","h4","Caption","h5","form","Icon","SmallButton","setAppElement","textMain","caption","onCancelClick","onDeleteClick","memo","timer","hilSuccess","hilFailure","ButtonGroupField","enableErrorTooltip","ButtonViewStyle","htmlFor","button_group_style","disabledMinutes","h","getMinutesFromMoment","m","minutes","hours","FadeLoaderCSS","FieldLabel","ToggleTextLeft","ToggleTextRight","StyledForm","Form","InputContainer","sz8","SelectContainer","ButtonGroupContainer","sharedTimePickerContainerStyle","TimePickerContainer","TimePickerErrorComponent","StyledTimePickerField","SwitchLabel","DatePickerLabel","FormButtonsContainer","CreateScheduleForm","hideScheduleCreator","tasksArr","formMode","FORM_MODES","UPDATE","CREATE","validate","startMin","stopMin","selectedScheduleItem","nowDate","nowTimeString","timeString24HrToDate","newScheduleTemplate","setSeconds","setHours","setMinutes","toTimeString","uuidv4","DEFAULT_TASK_ID","getScheduleItemTemplate","getInitialValues","enableReinitialize","isSubmitting","errorCount","touchedCount","accumulator","getTasks","ButtonGroupComponents","use12Hours","ErrorComponent","autoComplete","autoCorrect","spellCheck","helpers","SchedulerContent","showScheduleCreator","showDeleteModal","setShowDeleteModal","schedulesReducer","handleSelectTask","DefaultErrorTooltipContainerComponent","edited","disabledCss","ListItemField","ErrorTooltipContainerComponent","onIconClick","onEditClick","onTitleClick","validateField","unsaved","stylec","InfoText","SectionContainer","showTopBorder","TaskContainer","ProcessField","setFieldError","currError","isEmpty","handlePostTaskQueue","dispatchSetFixingProcess","deleteRouteClean","setEditingTask","showExistingTaskWarning","setShowExistingTaskWarning","valuesRef","func","limit","lastFunc","lastRan","context","arguments","now","apply","throttle","setSelectedProcess","dispatchSetSelectedProcess_Throttled","handleAddTask","remainingRoute","updatedRoutes","fieldMeta","currRouteValue","currProcess","updateExistingRoute","remainingValues","cloneRoute","initialValue","newId","routeClone","match","handleTaskBack","handleDeleteRoute","willBreak","handleExecuteProcessTask","routeName","currProcessName","getChildren","textboxContainerStyle","currIndex","textOverflow","whiteSpace","borderColor","ProcessForm","toggleEditingProcess","dispatchPostProcess","postProcesses","dispatchPutProcess","putProcesses","dispatchSetSelectedProcess","dispatchDeleteProcess","deleteProcesses","handleSave","cleanRoute","mappedRoutes","route","handleBack","withRoutes","handleDeleteWithRoutes","handleDeleteWithoutRoutes","currRouteItem","handleDefaultObj","handleInitialRoutes","resetForm","buttonType","ProcessesContent","dispatchEditing","currentPath","onCardView","newProcess","Settings","onPostSettings","serverSettings","statusReducer","deviceEnabledSetting","maps","serverSettingsState","setServerSettingsState","localSettingsState","setLocalSettingsState","mapSettingsState","setMapSettingsState","mirUpdated","setMirUpdated","devicesEnabled","setDevicesEnabled","handleUpdateLocalSettings","setting","updatedSettings","handleMirConnection","mir","mir_connection","handleSumbitSettings","localChange","isEquivalent","serverChange","mapChange","deviceChange","connectionIcon","connectionText","mir_ip","MirIp","selectedMap","currentMapId","CurrentMap","signOut","poolData","UserPoolId","ClientId","userPool","AmazonCognitoIdentity","getCurrentUser","authenticated","SignOut","toggleDevOptions","paddingRight","Text","ReloadButton","StyledCalendar","Calendar","CalendarField","startEnd","startYearVal","start","startMonthVal","startDayVal","endYearVal","end","endMonthVal","endDayVal","isStart","changeValue","date","getUTCMonth","getUTCDate","getUTCFullYear","getCardHistory","cardHistory","CARD_HISTORY","ProcessOptionsContainer","ProcessName","ProcessOption","containsSelected","normal","ScrollingButtonField","valueKey","labelKey","currOption","currValue","currLabel","warn","HilInputContainer","HilInput","errorCss","HilInputIcon","NumberField","maxValue","minValue","enteredValue","enteredValueInt","isNaN","CONTENT","FORM_BUTTON_TYPES","SubmitErrorHandler","submitCount","isValid","onSubmitError","lastHandled","setLastHandled","FormComponent","binId","setBinId","processOptions","showProcessSelector","setContent","loaded","onGetCardHistory","currentProcess","cardsReducer","cardHistories","showLotInfo","setShowLotInfo","selectedBinName","processStationIds","availableBins","startDateText","endDateText","buttonGroupNames","buttonGroupIds","currBinId","unshift","getButtonGroupOptions","code","formik","currProcessId","ele","renderCalendarContent","events","currEvent","$date","jsDate","currentDate","diffTime","abs","modifiedData","route_id","newRouteId","oldRouteId","messages","currMessage","toLocaleString","renderHistory","destinationOptions","currStation","minHeight","highlight","containerSyle","renderMoveContent","CardEditor","onPostCard","onGetCard","onPutCard","onDeleteCard","setLoaded","handleDeleteClick","selectedBin","remainingBins","handleGetCard","setInterval","clearInterval","selectedProcessId","destinationBinId","destinationBin","currentBin","unalteredBins","currentBinCount","destinationBinCount","updatedBins","postResult","Error","CloseButton","CardMenu","params","subpage","StationContainerCss","isCollapsed","StationHeader","HeaderContent","LabelContainer","StationTitle","dragEnter","RotatedRouteName","StationContainer","maxHeight","setCardDragging","lotId","SET","CARD_DRAGGING","Column","stationName","handleCardClick","reduxCards","processCards","setDragEnter","dispatchSetCardDragging","shouldAcceptDrop","sourceContainerOptions","oldProcessId","handleDrop","dropResult","removedIndex","addedIndex","remainingPayload","droppedCard","oldBins","movedBin","remainingOldBins","oldCount","movedCount","onTouchEndCapture","onDrop","DropResult","getGhostParent","body","onDragStart","dragStartParams","onDragEnd","dragEndParams","onDragEnter","onDragLeave","onDropReady","groupName","getChildPayload","padding","object_id","objectName","StationsColumn","setCollapsed","LotQueue","setShowCardEditor","showCardEditor","FinishColumn","CardZone","prevUnloadStationId","lotFilterValue","cardPageReducer","draggedLotInfo","draggingLotId","draggingBinId","tempCardsSorted","tempQueue","tempFinished","matchesFilter","toLowerCase","entries","binEntry","cardsArr","ColumnContainer","Description","ZoneHeader","selectedProcesses","setSelectedProcesses","zone","setLotFilterValue","setSortMode","selectedSortOption","selectedOption","ProcessesContainer","ZoneContainer","SummaryZone","processIndex","processName","Body","CardZoneContainer","MenuButton","InvisibleItem","Cards","onShowCardEditor","selectedCard","setSelectedCard","setTitle","setCurrentProcess","isProcessView","setIsProcessView","showMenu","setShowMenu","offsetLeft","offsetTop","zoneSize","setZoneSize","zoneRef","offsetHeight","offsetWidth","onAfterOpen","marginLeft","initialProcesses","widgetLoaded","WIDGET_LOADED","hoverStationInfo","info","HOVER_STATION_INFO","SideBar","setShowSideBar","onSetOpen","sideBarOpen","sidebarActions","onSetWidth","prevWidth","setPrevWidth","buttonActive","setButtonActive","prevParams","setPrevParams","widgetPageLoaded","widgetReducer","open","boundToWindowSize","newWidth","prevPage","prevSubpage","prevId","handleSideBarOpenCloseButtonClick","dispatchEditingProcess","querySelector","toggle","newSideBarState","handleClickOutside","onDrag","ui","deltaX","handleActiveButton","getReportEvents","postReportEvent","reportEvent","getReportAnalytics","timeSpan","reportEvents","reportEventsObj","current1","report_button_id","REPORT_EVENTS","stationAnalytics","ApiContainer","onGetMaps","onGetStations","getStations","onGetPositions","getPositions","onGetDashboards","getDashboards","onGetObjects","GET_OBJECTS_FAILURE","GET_OBJECTS_SUCCESS","GET_OBJECTS_STARTED","normalizedObjects","onGetTasks","onGetSounds","normalizedSounds","dispatchGetDataStream","handleDevicesSuccess","handleDevicesError","handleStatusSuccess","handleStatusError","handleTaskQueueSuccess","handleTaskQueueError","GET_TASK_QUEUE_FAILURE","INCREMENT_GET_DATA_FAILURE_COUNT","GET_TASK_QUEUE_SUCCESS","dataStream","task_queue","normalizedTaskQueue","taskQueueSchema","onGetProcessCards","onGetCards","onGetProcesses","getProcesses","onGetSchedules","schedulesSchema","schedulesObj","scheduleIds","result","SCHEDULES","onGetDevices","onGetSettings","onGetLocalSettings","GET_LOCAL_SETTINGS_FAILURE","GET_LOCAL_SETTINGS_SUCCESS","GET_LOCAL_SETTINGS_STARTED","onGetLoggers","GET_LOGGERS_FAILURE","GET_LOGGERS_SUCCESS","GET_LOGGERS_STARTED","schedulerReducer","apiReducer","currentPage","setCurrentPage","setApiError","pageDataInterval","setPageDataInterval","criticalDataInterval","setCriticalDataInterval","mapDataInterval","setMapDataInterval","loadInitialData","loadCriticalData","loadMapData","containsMirCart","currDevice","updateCurrentPage","currentPageRouter","setDataInterval","pageParams","pageName","data1","data2","sidebar","widgetPage","loadObjectsData","loadSchedulerData","loadDashboardsData","loadTasksData","loadSettingsData","loadCardsData","loadMoreData","onLoad","getTaskQueue","apiLoaded","NotificationsContainer","overlaping","windowHeight","ClearText","NewNotificationContainer","warning","okay","selectable","notSelectedCss","Status","BasicListItem","leftContentContainerCss","leftContentContainerProps","leftContent","rightContentContainerCss","rightContentContainerProps","rightContent","contentContainerCss","contentContainerProps","titleCss","titleProps","StyledRemoveIcon","RemoveIcon","Spacer","ItemDiv","activeContainerStyle","hoverContainerStyle","focusContainerStyle","disabledContainerStyle","isHovering","isActive","IconButton","TaskQueueListItem","selectedTaskId","setIsSelected","deleteTaskQueueItem","statusApi","handleMouseEnter","handleMouseLeave","TaskQueueMenu","taskQueueClone","queueItem","queueItemClone","clone_object","device_type","NotificationContainer","NotificationHeader","NotificationTypeText","NotificationDateTime","NotificationBody","NotificationLabel","NotificationMessage","sz6","Notification","dateTimeFormatter","dayDelta","timeDay","notification","dateTime","timeFormat","handleType","Notifications","notifications","notificationsReducer","RightMenu","showRightMenu","newNotification","overlapStatus","hiddenNotifications","toggleNotificationTaskQueue","handleClear","deleteTaskQueueAll","handleNewNotification","StatusHeader","Logo","windowWidth","widthBreakPoint","LogoIcon","LogoSubtitle","PlayButton","play","good","PlayButtonIcon","NotificationIcon","RightMenuContainer","NotificationText","setNewNotification","displayType","sideBarWidth","isSideBarOpen","taskQueueOpen","statusBarPath","setStatusBarPath","rightCurvePoint","setRightCurvePoint","setOverlapStatus","prevNotificationRef","onTaskQueueOpen","generatePath","mergeHeight","pageWidth","leftMargin","rightMargin","handleNotifications","types","onHideNotifications","handleTogglePlayPause","status_clone","pause_status","useMemo","right","preserveAspectRatio","backdropFilter","playButtonClassName","renderRightContent","LoggerContainer","disableAll","trace","redux_logger","enableAll","updateLoggers","existingLoggerNames","level","enabled","getLevel","checkForLoggers","reduxLoggerNames","newLoggers","newLogger","addLoggers","loggersCopy","removeLogger","loggerNames","constructor","snapshot","currentReduxLoggerNames","prevReduxLoggerNames","arraysEqual","connect","POST_LOGGERS_FAILURE","POST_LOGGERS_SUCCESS","POST_LOGGERS_STARTED","MapContainer","MapGroup","MapImage","img","tall","TaskPaths","selectedTaskReducer","stateRef","loadPositionId","getLoadPositionId","unloadPositionId","getUnloadPositionId","mousePos","x1","setX1","setY1","setX2","setY2","clientX","clientY","lockToMouse","setTaskAttributes","exitTaskPath","startPos","endPos","lineLen","sqrt","pow","lineRot","atan2","arrowRot","PI","dashes","secondaryColor","dashColor","stdDeviation","in","strokeLinecap","delta","cos","sin","points","ProcessPaths","MiR100","imgResolution","MenuContainer","RightClickMenu","coords","buttonClicked","dispatchShowSideBar","disbaleStation","onSendCartToPosition","tempSelectedPosition","onAddStation","tempSelectedStation","TaskStatisticsContainer","yPosition","xPosition","TaskNameText","TaskNameContainer","TaskText","TaskIcon","TaskStatistics","onGetTasksAnalysis","GET_","TASKS","ANALYSIS","_FAILURE","tasksAnalysis","_SUCCESS","_STARTED","taskAnalysis","taskAnalysisReducer","handleSingleTask","selectedTaskAnalysis","midX","midY","numerator","denominator","atan","avg_run_time","successes","failures","showWidgetPage","WidgetPageContainer","sz1","LotsTitle","AssignmentOutlinedIcon","LotItem","AddButton","AddContainer","DashboardContainer","pageStyle","DashboardList","AddButtonContainer","NewDashboard","AddDashboardContainer","AddDashboardButtonText","NoGoals","TaskButton","li","DashboardSidebarButton","onTaskClick","Dashboard","deleted","HILTimer","editingclicked","setSelectedDashboard","openDashboard","useDrop","accept","drop","monitor","hover","isOver","shallow","dropRef","listRef","scrollTo","onDragOver","itemsRenderer","items","withRouter","showTitle","showBackButton","showEditButton","showSaveButton","setEditingDashboard","showSidebar","setShowSidebar","saveDisabled","stationID","mobileMode","renderLotsTitle","hasLot","order","DashboardsList","dashboardToDelete","setDashboardToDelete","handleNew","newDashDropRef","dashboardOpen","onPutDashboard","dashboardActions","onPutStation","stationActions","selectedDashboardType","dashboardsArray","targetDashboard","targetDashboardCopy","exists","newDash","then","postedDashboard","stationDashboards","minSize","currDashboard","ButtonContainerCss","FooterContainer","CloseOutlinedIcon","WidgetText","labelSize","WidgetIcon","WidgetButton","OPERATION_TYPES","REPORT","KICK_OFF","FINISH","TYPES","ROUTES","iconName","OPERATIONS","DashboardsSidebar","dashboardId","testSize","setSmall","setType","code409","kickOffEnabledInfo","kickOffEnabledDashboards","kickOffEnabled","finishEnabledProcesses","finishEnabledDashboards","finsihedEnabled","handleTaskClick","clickedTask","postTaskQueue","handleReportClick","availableTasks","handleAvailableTasks","availableButtons","availableReportButtons","currEntry","toLocaleLowerCase","ButtonStyle","RobotButton","HumanButton","DashboardSplitButton","DashboardButtonList","addedTaskAlert","currentButton","deviceTypes","taskExists","handleRouteClick","associatedTaskIdArg","custom_task","String","main","lineHeight","ExpandContainer","showTaskQ","ExpandIcon","ExpandSVG","ExpandPath","TaskQContatiner","DashboardTaskQueue","setShowTaskQ","ArrowBackIosIcon","hoverHighlightPer","ColorPicker","StyledTwitterPicker","ColorButton","DropdownMenu","ColorOption","ColorField","onChangeComplete","currColor","triangle","data-toggle","aria-haspopup","aria-labelledby","TextboxDiv","ReportButtonsContainer","AddNewButtonContainer","ColorFieldContainer","DefaultViewComponent","DeleteFieldButton","ViewComponent","viewProps","NewButtonForm","cancel","buttonId","report_buttons","dashboardCopy","putDashboard","editingButton","currButton","old_report_buttons","updatedDashboard","alignSelf","readonly","ReportModal","onPostReportEvent","createdReportEvent","REPORT_EVENT","noButtons","addingNew","setAddingNew","setEditing","sending","setSending","setButtonId","sendReport","reportEventsReducer","dashboard_id","getTime","currReportButton","currOldButton","HeaderMainContentContainer","ButtonsContainer","NoButtonsText","isButtons","buttonsCss","noButtonsCss","KickOffModal","useTheme","shouldFocusLotFilter","setShouldFocusLotFilter","showLotEditor","setShowLotEditor","didLoadData","setDidLoadData","availableKickOffCards","setAvailableKickOffCards","onButtonClick","cardName","cardProcess","firstRouteId","firstRoute","loadStation","firstStationBin","queueBin","queueBinCount","firstStationCount","updatedCard","requestSuccessStatus","loadData","cardsResult","processesResult","tempAvailableCards","currProcessCards","filteredCards","currCard","concat","currLot","cardIndex","FinishModal","finishEnabledDashboard","currentStationBin","finishBin","currentStationBinCount","DashboardScreen","currentDashboard","hilResponse","reportModal","setReportModal","onDashboardOpen","bol","onHILResponse","onPutTaskQueue","putTaskQueue","handleHilSuccess","toUpperCase","handleOperationClick","newItem","hil_response","success","hil_station_id","hil_message","handleDashboardButtons","DashboardRouteField","buttonFieldStyles","DashboardReportField","DashboardEditorButtonRenderer","SortableContainer","PageContainer","AddBoxIcon","DashboardEditor","onDeleteDashboard","deleteDashboard","onPostDashboard","postDashboard","initialButtons","initialErrors","buttonErrors","buttonError","getInitialErrors","every","handleDeleteDashboard","stationCopy","deleteDashboardIndex","indexOf","inputProps","buttonsCopy","shiftedButtonsCopy","arrayMove","randomHash","handleChangeButton","buttonIndex","handleDeleteButton","dispatchSetDashboardKickOffProcesses","setDashboardKickOffProcesses","dispatchSetDashboardFinishProcesses","finishEnabled","setDashboardFinishProcesses","selectedDashboard","editingDashboard","sidebarWidth","setSidebarWidth","firstStationProcesses","lastStationProcesses","lastRouteId","lastRoute","dashID","DndProvider","backend","HTML5Backend","flexGrow","onCancelClicked","goBack","LeftColumn","RightColumn","ColumnLabel","ObjectContainer","ObjectName","ObjectLink","styleO","objectLinks","rect","getElementById","ObjectColumns","parsedObjects","setObjectLinks","link","setLink","locationsReducer","handleObjectLinkPoints","point","editedLink","currentObject","currentObjectName","el","ObjectsPage","setParsedObjects","handleAssociatedObjects","parsedObjectsReturned","handleParseTaskBasedOnLoadUnload","StatisticsContainer","OverviewContainer","StationName","PlotsContainer","laptopL","PlotHeader","SinglePlotContainer","PlotContainer","NoDataText","DateSelectorIcon","PlotTitle","DateSelectorTitle","LoadingIcon","TimespanButton","thcolor","TimeSpans","setTimeSpan","BarChart","selector","axisBottom","mainTheme","axisLeft","layout","horizontal","enableGridX","enableGridY","fontFamily","textColor","axis","domain","line","ticks","legend","grid","legends","labels","markers","lineColor","lineStrokeWidth","dots","tooltip","basic","table","tableCell","crosshair","strokeOpacity","strokeDasharray","annotations","outlineWidth","outlineColor","outline","symbol","indexBy","animate","scheme","colorBy","from","axisTop","axisRight","tickSize","legendOffset","tickRotation","legendPosition","StatisticsOverview","setDelayChartRender","throughputData","setThroughputData","reportData","setReportData","dateIndex","setDateIndex","setFormat","setSlice","isThroughputLoading","setIsThroughputLoading","setIsReportsLoading","setIsDevice","setLocationName","reportButtons","setReportButtons","currReportButtons","taktTime","pYield","throughPut","device_id","timespan","getStationAnalytics","getReportData","reportAnalyticsResponse","handleTimeSpan","newTimeSpan","newDateIndex","dataPromise","renderDateSelector","today","toDateString","firstDate","getDateFromString","lastDate","getMonth","getFullYear","date_title","pc","filteredData","isData","enable","renderThroughputChart","reportButtonsArr","reportButtonNames","reports","currReport","lable","currReportEntries","updatedReport","currButtonId","renderReportChart","StatisticsPage","TasksPage","ConnectContainer","DeviceName","LiveText","TitleContainer","VideoContainer","video","PlayerWrapper","loaderCss","ErrorText","StreamContainer","myPeerId","streams","getVideoElement","vidEle","srcObject","oldStream","getTracks","track","stop","interval","getVideoPlaybackQuality","droppedVideoFrames","videoElement","pause","src","resetVideo","autoPlay","playsInline","muted","StreamInfo","outID","peerID","RTCSessionDescription","RTCIceCandidate","default_rtc_configuration","iceServers","urls","iceCandidatePoolSize","asdasdsa","our_id","TestButtons","onStartClick","onCloseClick","ws_port","getOurId","random","client","ws_url","ViewerPage","streamConnected","setError","setStatus","setStreams","setIsConnected","showStreamInfo","setShowStreamInfo","showTestButtons","setShowTestButtons","startConnection","closeConnection","URL","peer_id","rtc_config","peer_connection","roomReconnectInterval","peerReconnectInterval","helloInterval","isConnected","reconnectOnClose","messageListeners","stateChangeListeners","remoteTrackListeners","errorListeners","statusListeners","rtc_configuration","WebSocket","onopen","setHelloInterval","call","onmessage","msg","clearHelloInterval","setRoomReconnectInterval","clearRoomReconnectInterval","startsWith","setPeerReconnectInterval","splitted","createCall","generateOffer","SyntaxError","sdp","onIncomingSDP","ice","onIncomingICE","reconnectToPeer","onerror","onclose","closePeerConnection","clearPeerReconnectInterval","RTCPeerConnection","ondatachannel","onDataChannel","ontrack","onRemoteTrack","onicecandidateerror","errorCode","onremovestream","onsignalingstatechange","signalingState","onicegatheringstatechange","iceGatheringState","oniceconnectionstatechange","iceConnectionState","onconnectionstatechange","connectionState","onicecandidate","candidate","send","to","setRemoteDescription","createAnswer","onLocalDescription","catch","desc","setLocalDescription","localDescription","createOffer","addIceCandidate","identity","peerIdentity","handleDataChannelOpen","handleDataChannelMessageReceived","textarea","send_channel","handleDataChannelError","handleDataChannelClose","receiveChannel","channel","restartIce","addMessageListener","removeMessageListener","l","onStateChange","getClient","addRemoteTrackListener","addErrorListener","addStatusListener","getError","reconnectingWebRTCSocket","LotsContainer","ListSubtitle","ListContent","SubtitleContainer","ColumnContainer1","ColumnContainer2","LotsPage","lotsPresent","setLotsPresent","onShowSideBar","locationID","onWidgetPageLoaded","WIDGET_PAGE_LOADED","component","DashboardsPage","WidgetButtonButton","pageID","WidgetButtonText","WidgetButtonIcon","coordinateMove","dispatchHandlePostTaskQueue","dispatchWidgetLoaded","dispatchHoverStationInfo","dispatchDashboardOpen","onCartButtonClick","coordinate","onDashboardClick","defaultDashboard","handleOnClick","WidgetLocationContainer","WidgetContainer","WidgetStationName","WidgetPositionName","WidgetHoverArea","hoverScale","WidgetButtonContainer","WidgetBlurContainer","WidgetStatisticsBlock","EditIcon","WidgetStatisticsContainer","WidgetStatisticsIcon","WidgetStatisticsText","Widgets","hoveringInfo","onWidgetClose","edit","onClickLocation","locationChildren","handleWidgetButtons","widgetPages","handleWidgetPosition","coord","elementHeight","elementWidth","widgetPosition","realScale","foreignObject","handleWidgetHoverCoord","rd3tClassName","widgetInfo","heightWidth","bBox","WorkstationGroup","LocationSvg","hovering","rotating","shouldGlow","handleMouseDown","handleTranslating","handleRotating","locationTypes","operator","radius","floodColor","in2","DragEntityProto","handleRotate","handleTranslate","handleDisableDrag","handleEnableDrag","handleTranslateEnd","setRotating","translating","setTranslating","bindDragListener","rotateStart","originalRotation","deltaRotation","translateStart","originalTranslation","deltaTranslation","ringElement","rectElement","drag","on","angle","sourceEvent","touches","rotate","translation","Station","setHovering","dispatchSetStationAttributes","dispatchSetTaskAttributes","routeStart","getRouteStart","routeEnd","getRouteEnd","isStationUnloadStation","isStationLoadStation","isStationInRoutes","routeAfterBreak","routeIndex","getRouteIndexInRoutes","handleWidgetHover","onSetStationTask","Position","positionId","dispatchSetPositionAttributes","setPositionAttributes","hoverLocationID","isPositionAtUnloadStation","isPositionInRoutes","isPositionAtLoadStation","shapeRendering","renderParentLine","onSetPositionTask","MapView","checkForMapLoad","defaultMap","dispatchSetCurrentMap","refreshMap","dispatchGetMap","guid","openLocation","dragNewEntity","mouseDown","draggingChild","validateNewEntity","newChildEntity","bindZoomListener","scaleExtent","resolution","rd3tSvgClassName","rd3tMapClassName","zoom","lastEvent","updatedSelectedStation","dispatchUpdateStations","updatedSelectedPosition","updatedChildrenPositions","dispatchUpdatePositions","dispatchUpdateDevices","initialRender","unbindZoomListener","onDisableDrag","onEnableDrag","onWidgetDisableDrag","widgetDraggable","onWidgetEnableDrag","calculateD3Geometry","mapContainer","mapImage","cHeight","cWidth","iHeight","iWidth","iNatHeight","naturalImageDimensions","iNatWidth","actualDims","handleRightClickMenu","showRightClickMenu","rd3tLocClassName","rd3tStationClassName","rd3tPosClassName","naturalScale","boundingClientHeight","heigh","validateNewLocation","onMouseMove","mc","onContextMenu","onMouseOver","mi","naturalHeight","naturalWidth","zoomable","updateStations","childrenPositions","updatePositions","HILModal","onSetHilTimers","timers","onSetActiveHilDashboards","taskQueueItemClicked","hilTimers","activeHilDashboards","localHumanTask","statusTimerIntervals","setStatusTimerIntervals","deviceDashboard","handleHilsInTaskQueue","hilType","hilMessage","taskQuantity","taskQueueID","handleHILTimers","hil_start_time","biasedTimer","hil_timeout","timerInterval","LogoContainer","LogoWelcome","SignInUpContainer","CheckBoxWrapper","SignInUpPage","signIn","CognitoUserPool","authenticationData","Username","Password","authenticationDetails","AuthenticationDetails","userData","Pool","cognitoUser","CognitoUser","authenticateUser","accessToken","refreshToken","getRefreshToken","getToken","onFailure","alert","signUp","Authentication","authenticationReducer","cognitoUserSession","setSignIn","handleSignInChange","getSession","session","handleInitialLoad","ListScrollContainer","stylesh","LocationList","onLocationClick","locationsArr","devicesArr","dashboardsArr","SCREENS","LOCATIONS","SETTINGS","DASHBOARDS","ListView","onPostStatus","showDashboards","setShowDashboards","showSettings","setShowSettings","CURRENT_SCREEN","owner","next_position","distance_to_next_target","App","getFailureCount","setApiLoaded","stateTheme","showStopAPIModal","setShowStopAPIModal","styleMode","apiMode","logMode","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","rootElement","render","href","origin","fetch","contentType","get","ready","unregister","checkValidServiceWorker","glow","errorGlow","newGlow","goodGlow","nonary","denary","radioButton","inactive","basicButton","mobileS","mobileM","laptop","desktop","desktopL","tree","mg","goal","alternate","all","lots","kick_off","finish","ok","operations","report","delete","funky","DefaultFieldContentContainer","DefaultFieldDropdownContainer","DropDownSearchField","fieldLabel","FieldContentContainer","FieldDropdownContainer","updatingValue","setUpdatingValue","storeState","defaultTask","nameA","nameB","containsHuman","containsNonHuman","currType","hasStart","hasEnd","processRouteIds","containsStation","SET_ACTION","WIDGET_XY_COORDINATES","deleteDashboards","postDashboards","putDashboards","Row","CardName","Count","HeaderBar","StyledDraggable","Draggable","DatesContainer","DateItem","DateArrow","DateText","lotName","lotColor","substring","intToRGB","str","hash","charCodeAt","hashCode","subscribe","HilContainer","HilInputIconContainer","HilInputIconText","HilButtonContainer","LotSelectorContainer","NoLotsContainer","NoLotsText","HilMessage","HilSubtitleMessage","HilSubText","iconButtonCss","HilTimer","HilButtonCss","HeaderMainContent","HilIcon","HilButton","FooterButton","LotTitleDescription","SelectedLotContainer","SelectedLotName","LotTitleName","EditLotIcon","HilButtonText","HilButtonQuantityText","taskQueueItem","putTaskQueueItem","SET_CONDITIONS_API","SET_SCHEDULES_API","SET_STATUS_API","SET_TASK_QUEUE_API","SET_TASKS_API","POST_","DELETE_","PUT_","changedSet","setChanged","setInitialValue","TASK","GET_TASKS","GET_TASKS_STARTED","GET_TASKS_SUCCESS","GET_TASKS_FAILURE","POST_TASK","POST_TASK_STARTED","POST_TASK_SUCCESS","POST_TASK_FAILURE","PUT_TASK","PUT_TASK_STARTED","PUT_TASK_SUCCESS","PUT_TASK_FAILURE","DELETE_TASK","DELETE_TASK_STARTED","DELETE_TASK_SUCCESS","DELETE_TASK_FAILURE","ADD_TASK","SET_TASKS","UPDATE_TASK","UPDATE_TASKS","REMOVE_TASK","REMOVE_TASKS","SET_TASK_ATTRIBUTES","SELECT_TASK","SET_SELECTED_TASK","DESELECT_TASK","EDITING_TASK","COLUMN_HOVERING","SET_SIZE","ROUTE_TYPES","PUSH","PULL","HILModals","dispatchGetCards","dispatchTaskQueueItemClicked","disptachHILResponse","disptachPutTaskQueue","dispatchSetActiveHilDashboards","dispatchLocalHumanTask","setQuantity","associatedTask","setAssociatedTask","trackQuantity","setTrackQuantity","selectedLot","setSelectedLot","setIsProcessTask","availableLots","setAvailableLots","showLotSelector","setShowLotSelector","didDisplayLots","setDidDisplayLots","didSelectInitialLot","setDidSelectInitialLot","hilLoadUnload","setHilLoadUnload","dataLoaded","setDataLoaded","changeQtyMouseHold","setChangeQtyMouseHold","lotsAtStation","setLotsAtStation","taskHasProcess","setTaskHasProcess","noLotsSelected","setNoLotsSelected","dashboardName","currentTask","selectedLotName","selectedLotId","taskProcesses","stationCards","currCardProcessId","associated_task","onHilSuccess","fraction","lot_id","onHilPostpone","onBlurQuantityInput","onHilFailure","onLogHumanEvent","outgoing","eventQuantity","renderSelectedLot","renderUnloadOptions","renderFractionOptions","fractionOptions","fractionDecimals","decimal","cbrt","eval","renderQuantityOptions","renderLotSelector","currLotName","lotIndex","buttonTheme","postTask","deleteTask","putTask","normalizedTasks","updateTask","taskCopy","dashboardsActions","putRouteClean","postRouteClean","addTask","removeTask","selectTask","friday","monday","saturday","sunday","thursday","tuesday","wednesday","GET_STATIONS_FAILURE","GET_STATIONS_SUCCESS","GET_STATIONS_STARTED","normalizedStations","POST_STATION_FAILURE","POST_STATION_SUCCESS","POST_STATION_STARTED","onPostStation","newStation","PUT_STATION_FAILURE","PUT_STATION_SUCCESS","PUT_STATION_STARTED","onSaveChildren","updateStation","putStationWithoutSavingChildren","DELETE_STATION_FAILURE","DELETE_STATION_SUCCESS","DELETE_STATION_STARTED","onDeleteStation","ADD_STATION","UPDATE_STATIONS","onRemoveStation","updatedId","REMOVE_STATION","SET_STATION_ATTRIBUTES","SET_SELECTED_STATION","EDITING_STATION","stationsState","tasksState","relevantTask","positionsState","LOT","LOTS","DATA_PAGE","JUNK","DASHBOARD","GET_POSITIONS_FAILURE","GET_POSITIONS_SUCCESS","GET_POSITIONS_STARTED","normalizedPositions","POST_POSITION_FAILURE","POST_POSITION_SUCCESS","POST_POSITION_STARTED","postedPosition","PUT_POSITION_FAILURE","PUT_POSITION_SUCCESS","PUT_POSITION_STARTED","positionCopy","updatePosition","stationDelete","DELETE_POSITION_FAILURE","DELETE_POSITION_SUCCESS","DELETE_POSITION_STARTED","onDeletePosition","ADD_POSITION","UPDATE_POSITIONS","REMOVE_POSITION","SET_POSITION_ATTRIBUTES","SET_SELECTED_POSITION","EDITING_POSITION","SET_SELECTED_STATION_CHILDREN_COPY","devicesState","positionIndex","newChildIndex","newChildInd","reverse","relevantDevice","rowCss","NameContainer","FieldTitle","TheBody","ProcessFieldContainer","ObjectInfoContainer","ObjectTitleContainer","CountInput","ObjectLabel","QuantityErrorContainerComponent","iconContainerCss","ButtonContainer","ErrorTooltipContainer","ContentTitle","CalendarContainer","HistoryBodyContainer","HistoryItemContainer","textCommon","historyContainerCommon","HistoryDateContainer","HistoryDateText","HistoryUserContainer","HistoryUserText","HistoryInfoContainer","HistoryInfoText","isBrowser","TextboxContainer","TextboxLabel","TextboxArea","inputAreaComponent","inputComponent","keepFocus","rows","autofocus","defaultState","GET_LOGGERS","pending","POST_LOGGERS","GET_LOCAL_SETTINGS","POST_LOCAL_SETTINGS","GET_DASHBOARDS_FAILURE","GET_DASHBOARDS_SUCCESS","GET_DASHBOARDS_STARTED","normalizedDashboards","POST_DASHBOARD_FAILURE","POST_DASHBOARD_SUCCESS","POST_DASHBOARD_STARTED","newDashboard","PUT_DASHBOARD_FAILURE","PUT_DASHBOARD_SUCCESS","PUT_DASHBOARD_STARTED","updateDashboard","DELETE_DASHBOARD_FAILURE","DELETE_DASHBOARD_SUCCESS","DELETE_DASHBOARD_STARTED","removeRouteFromAllDashboards","currButtons","addRouteToDashboards","routeType","newDashboardButton","removeRouteFromWrongDashboards","currDashboardButtons","currDashboardIdObj","currStationId","currDashboardId","filteredButtons","currButtonIndex","DASHBOARD_OPEN","KICK_OFF_ENABLED","FINISH_ENABLED","STARTED","SUCCESS","FAILURE","GET_OBJECTS","POST_OBJECT","PUT_OBJECT","PUT_OBJECT_STARTED","PUT_OBJECT_SUCCESS","PUT_OBJECT_FAILURE","DELETE_OBJECT","DELETE_OBJECT_STARTED","DELETE_OBJECT_SUCCESS","DELETE_OBJECT_FAILURE","ADD_OBJECT","UPDATE_OBJECT","UPDATE_OBJECTS","REMOVE_OBJECT","SET_OBJECT_ATTRIBUTES","SELECT_OBJECT","DESELECT_OBJECT","UPDATE_STATION","UPDATE_POSITION","REVERT_CHILDREN","selectedObject","objectsCopy","conditionsApi","schedulesApi","dashboardsApi","skillsApi","dashboardButtonsApi","taskQueueApi","tasksApi","GET_TASK_QUEUE_STARTED","POST_TASK_QUEUE_STARTED","POST_TASK_QUEUE_SUCCESS","POST_TASK_QUEUE_FAILURE","PUT_TASK_QUEUE_STARTED","PUT_TASK_QUEUE_SUCCESS","PUT_TASK_QUEUE_FAILURE","TASK_QUEUE","TASK_QUEUE_ALL","TASK_QUEUE_ITEM","TASK_QUEUE_OPEN","HILSuccess","skills","currentSkill","skillUpdated","allFieldsFilled","positionsCopy","onUpdatePosition","parsedPositions","hilTimer","fromCharCode","focused","showKeyboard","Dashboards","Scheduler","Tasks","Objects","ModelViewer","Api","ReduxLogger","All","enableLogger","muteReducer","apiSim","models","skillTemplates","returnedSkillTemplates","poses","getActionName","actionType","join","requestStatusReducer","endsWith","reduxZoom","widgetXYCoordinates","devicesClone","currentDevice","setDevices","updatedDevice","GET_DEVICES","POST_DEVICES","POST_DEVICES_SUCCESS","POST_DEVICES_FAILURE","POST_DEVICES_STARTED","PUT_DEVICES","DELETE_DEVICES","DELETE_DEVICES_SUCCESS","DELETE_DEVICES_FAILURE","DELETE_DEVICES_STARTED","priority","newPayload","eventsReducer","eventsClone","currentEvent","GET_EVENTS","GET_EVENTS_SUCCESS","GET_EVENTS_FAILURE","GET_EVENTS_STARTED","POST_EVENTS","POST_EVENTS_SUCCESS","POST_EVENTS_FAILURE","POST_EVENTS_STARTED","PUT_EVENTS","PUT_EVENTS_SUCCESS","PUT_EVENTS_FAILURE","PUT_EVENTS_STARTED","DELETE_EVENTS","DELETE_EVENTS_SUCCESS","DELETE_EVENTS_FAILURE","DELETE_EVENTS_STARTED","processesClone","GET_PROCESSES","GET_PROCESSES_SUCCESS","GET_PROCESSES_FAILURE","GET_PROCESSES_STARTED","POST_PROCESSES","POST_PROCESSES_SUCCESS","POST_PROCESSES_FAILURE","POST_PROCESSES_STARTED","PUT_PROCESSES","PUT_PROCESSES_SUCCESS","PUT_PROCESSES_FAILURE","PUT_PROCESSES_STARTED","DELETE_PROCESSES","DELETE_PROCESSES_SUCCESS","DELETE_PROCESSES_FAILURE","DELETE_PROCESSES_STARTED","EDITING_PROCESS","isCardDragging","isHoveringOverColumn","sizes","combineReducers","created","updatedReportEvent","remaining","unchangedProcessGroups","card_id","lotsReducer","lot","oldScheduleId","skillsReducer","skillsClone","s","skillId","stationsCopy","onUpdateStation","updatedStation","parsedStations","hello","dashboardsCopy","GET_DASHBOARDS","POST_DASHBOARD","PUT_DASHBOARD","DELETE_DASHBOARD","errorReducer","exec","requestName","requestState","createdTaskQueueItem","updatedTaskQ","forceUpdate","keyboardReducer","remainingTasks","ids","currId","modelsReducer","skillTemplatesReducer","posesReducer","currentMapCopy","reduxLogger","log_module","createLogger","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","traceLimit","compose","applyMiddleware","thunk","createStore","reducers","normalizedProcesses","newProcesses","updateProcesses","removeRouteFromAllProcesses","defaultWidgetPages","generic","trident","arm","cart","rmVision","shelf","parsedTasks","prop","hasOwnProperty","Portal","mountElement","mount","WarningIcon","StyledInput","ErrorTooltip","setAutoFocus","timer1","delayShow","eventOff","data-tip","data-for","array","timeString","newDate","setTime","_arr1","_arr2","arr1","arr2","aProps","getOwnPropertyNames","bProps","propName","characters","charactersLength","charAt","word","substr","dateStr","0","1","2","3","4","5","6","normalizedData","oldTaskQueueItemId","postToQueue","DefaultFieldContainer","DefaultInputContainer","TextField","inputStyleFunc","FieldContainer","inputStyle"],"mappings":"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","file":"static/js/main.2d7e9aed.chunk.js","sourcesContent":["import { normalize } from 'normalizr';\n\n// import types\nimport {\n    GET,\n    POST,\n    DELETE,\n    PUT\n} from '../types/prefixes';\n\nimport {\n    CARDS,\n    CARD,\n    CARD_HISTORY,\n    PROCESS_CARDS,\n    SHOW_EDITOR\n} from '../types/data_types';\n\nimport { api_action } from './index';\nimport * as api from '../../api/cards_api'\n\n// import schema\nimport { scheduleSchema, schedulesSchema } from '../../normalizr/schedules_schema';\n\nimport log from \"../../logger\"\nimport {convertArrayToObject} from \"../../methods/utils/utils\";\n\nconst logger = log.getLogger(\"Cards\", \"Redux\")\nlogger.setLevel(\"debug\")\n// get\n// ******************************\nexport const getCard = (cardId) =>  async (dispatch) => {\n\n    /*\n        Invoked in api_action()\n        Whatever is returned from this function is the payload\n        that will be dispatched to redux (if successful)\n    */\n    const callback = async () => {\n\n        // make request\n        const card = await api.getCard(cardId);\n\n        // const cardsObj = convertArrayToObject(cards, \"_id\")\n        // console.log(\"getCard cardsObj\",cardsObj)\n\n        // format response\n        // const normalizedSchedules = normalize(schedules, schedulesSchema);\n\n        // return payload for redux\n        return {\n            card,\n        };\n    }\n\n    const actionName = GET + CARD;\n\n    // payload is returned back\n    const payload = await api_action(actionName, callback, dispatch, cardId);\n\n    return payload;\n\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// get\n// ******************************\nexport const getCards = () =>  async (dispatch) => {\n\n    /*\n        Invoked in api_action()\n        Whatever is returned from this function is the payload\n        that will be dispatched to redux (if successful)\n    */\n    const callback = async () => {\n\n        // make request\n        const cards = await api.getCards();\n\n        const cardsObj = convertArrayToObject(cards, \"_id\")\n\n        // format response\n        // const normalizedSchedules = normalize(schedules, schedulesSchema);\n\n        // return payload for redux\n        return {\n            cards: cardsObj,\n        };\n    }\n\n    const actionName = GET + CARDS;\n\n    // payload is returned back\n    const payload = await api_action(actionName, callback, dispatch);\n\n    return payload;\n\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// get\n// ******************************\nexport const getProcessCards = (processId) =>  async (dispatch) => {\n\n    /*\n        Invoked in api_action()\n        Whatever is returned from this function is the payload\n        that will be dispatched to redux (if successful)\n    */\n    const callback = async () => {\n\n        // make request\n        const cards = await api.getProcessCards(processId);\n\n        const cardsObj = convertArrayToObject(cards, \"_id\")\n\n        // return payload for redux\n        return {\n            cards: cardsObj,\n            processId\n        };\n    }\n\n    const actionName = GET + PROCESS_CARDS;\n\n    // payload is returned back\n    const payload = await api_action(actionName, callback, dispatch);\n\n    return payload;\n\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n\n// create\n// ******************************\nexport const postCard = (card) =>  async dispatch => {\n\n    const callback = async () => {\n        const createdCard = await api.postCard(card);\n        // const normalizedSchedules = normalize(createdSchedule, scheduleSchema);\n\n        return {\n            card: createdCard,\n            processId: card.process_id\n        };\n    }\n    //\n    const actionName = POST + CARD;\n\n    const payload = await api_action(actionName, callback, dispatch, card);\n\n    return payload.card\n    // return Object.values(payload.createdCards)[0];\n\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// delete\n// ******************************\nexport const deleteCard = (cardId, processId) => async (dispatch) => {\n\n    const callback = async () => {\n        await api.deleteCard(cardId);\n\n        return {\n            cardId,\n            processId\n        };\n    }\n    //\n    const actionName = DELETE + CARD;\n    const payload = await api_action(actionName, callback, dispatch, cardId);\n    return payload;\n\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// update\n// ******************************\nexport const putCard = (card, cardID) => async dispatch => {\n\n    const callback = async () => {\n        const response = await api.putCard(card, cardID);\n        // const normalizedSchedule = normalize(response, scheduleSchema);\n        //\n        return {\n            card: response,\n            processId: card.process_id\n        };\n    }\n\n    const actionName = PUT + CARD;\n    const payload = await api_action(actionName, callback, dispatch, { card});\n    return card;\n};\n\nexport const showEditor = (bool) => {\n    return { type: SHOW_EDITOR, payload: bool }\n}\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n","export const convertD3ToReal = ([x, y], d3) => {\n\n    const pos_x = d3.mapResolution * (x - d3.translate[0]) / d3.scale\n    const pos_y = d3.mapResolution * -(((y - d3.translate[1]) / d3.scale) - d3.naturalDims.height)\n\n    return [pos_x, pos_y]\n}\n\nexport const convertRealToD3 = ([pos_x, pos_y], d3) => {\n\n    const x = d3.translate[0] + d3.scale * pos_x / (d3.mapResolution)\n    const y = d3.translate[1] + d3.scale * (d3.naturalDims.height - (pos_y / d3.mapResolution))\n\n    return [x, y]\n}\n","import { deepCopy } from './utils'\nimport {isObject} from \"./object_utils\";\nimport store from \"../../redux/store\";\nimport {getLoadStationId, getUnloadStationId} from \"./route_utils\";\n\n/**\n * This function checks to see if a process is broken. \n * A process is broken because it has dissjointed routes, theres a gap between an unload station and a load station between 2 consecutive routes\n * \n * \n * @param {object} processRoutes Process to check and see if it is broken\n * @param {object} routes All routes\n */\nexport const isBrokenProcess = (routes) => {\n\n    // can't be broken if there is only 1 route\n    if(routes.length > 1) {\n        // Loops through and\n        for (let i = 0; i < routes.length - 1; i++) {\n            const currentRoute = routes[i]\n            const nextRoute = routes[i + 1]\n\n            const unloadStationId = getUnloadStationId(currentRoute)\n            const loadStationId = getLoadStationId(nextRoute)\n\n\n            if (unloadStationId !== loadStationId) {\n                // Have to return the current route index plus 1 because if the route that is before the broken route is the first route in s process, then the index is 0, which is considered falsy\n                return i + 1\n            }\n        }\n    }\n\n    return 0\n\n}\n\n/**\n * This function returns true if the route you are deleting will break the Process\n * \n * Currently the way it tells if it will break the process is to tell if its not the first or last route in a process\n * If it is the first or last route, then the process does not break\n * \n * RETURNS FALSE IF DELETE DOES NOT BREAK PROCESS\n * It returns an int of where the break will be (int's are truthy)\n * \n * @param {array} processRoutes Selected Process\n * @param {object} routeId Selected Route\n */\nexport const willRouteDeleteBreakProcess = (routes, routeId) => {\n\n    // if not first or last route\n    if (routeId !== routes[routes.length - 1]._id && routeId !== routes[0]._id) {\n\n        const copyProcessRoutes = deepCopy(routes)\n        const index = copyProcessRoutes.findIndex((currRoute) => currRoute._id === routeId)\n        copyProcessRoutes.splice(index, 1)\n\n        return isBrokenProcess(copyProcessRoutes)\n    }\n    else {\n        return false\n    }\n}\n\n/**\n * This checks to see if the route being added to the process will fix the broken process\n * \n * The way it tells is by getting the route before the break and checks to see if the new route's load location is the route before breaks unload location.\n * If thats the case than we see if the route after break's load station is the new routes unload location.\n * \n * If the new route's load and unload location fix the missing gap then it fixes that part of the broken process\n * \n * Perform a check to see if there's still another part of the process is broken after fix\n * If it's fix then the process is not broken anymore, if not, update the break point\n * \n * RETURNS FALSE IF THE PROCESS IS FIXED\n * It returns an int of where the new break is if it's still broken (int's are truthy)\n * \n * @param {object} processRoutes Selected Process\n * @param {int} brokenIndex index of broken route\n * @param {object} route New Route\n */\nexport const willRouteAdditionFixProcess = (routes, brokenIndex, route) => {\n    const copyRoutes = deepCopy(routes)\n    const routeBeforeBreak = routes[brokenIndex - 1]\n    const routeAfterBreak = routes[brokenIndex]\n\n    if (getUnloadStationId(routeBeforeBreak) === getLoadStationId(route) && getLoadStationId(routeAfterBreak) === getUnloadStationId(route) ) {\n\n        copyRoutes.splice(brokenIndex, 0, route) // splice route into arr\n\n        if (!!isBrokenProcess(copyRoutes)) {\n            return isBrokenProcess(copyRoutes)\n        }\n        else {\n            return false\n        }\n    }\n\n    copyRoutes.splice(brokenIndex, 0, route)\n    if (!!isBrokenProcess(copyRoutes)) {\n        return isBrokenProcess(copyRoutes)\n    }\n    else {\n        return false\n    }\n}\n\n/**\n * This returns the list of ***UNIQUE*** station ids belonging to a process\n *\n * In order to get the list of station ids, this function first gets the list of route ids belonging to the process from the process's routes key\n *\n * For each route id, the corresponding route object is retrieved from the routes object\n *\n * From each route object, the unload and load objects are extracted\n * from the unload and load objects, the station id is extracted\n *\n * Each station id is added to an object to accumulate all stations belonging to the process\n * NOTE: an object is used for this purpose since it efficiently and automatically ensures that each entry will be unique (since object keys are unique).\n *      If an array is desired, simply call Object.keys() on the returned object where needed\n *\n * RETURNS an object containing the key of each station contained in the process with value set as true\n *\n * @param {object} process The process to get stations from\n * @param {object} routes Object containing all routes with each route's id as keys\n */\nexport const getProcessStations = (process, routes) => {\n    const { routes: routeIds = [] } = process || {}\n\n    // object that will contain {stationId: true} for each station in the process\n    // an object is used instead of an array because an object can only contain a key once\n    // if an array was used, the array would have to be checked each time a station is added to ensure duplicates aren't added\n    var stationIds = {}\n\n    // loop through each routeId, get the load / unload station of the route and add it to the stationIds obj\n    routeIds.forEach((currRouteId) => {\n\n        // get route from id\n        const currRoute = routes[currRouteId] || {} // default to empty obj\n\n        // get unload and load objects\n        const {\n            unload = {},\n            load = {}\n        } = currRoute\n\n        // get unload station id\n        const {\n            station: unloadStationId\n        } = unload\n\n        // get load station id\n        const {\n            station: loadStationId\n        } = load\n\n        // if unloadStationId and loadStationId exist, add to stationIds obj\n        if(unloadStationId) stationIds[unloadStationId] = true\n        if(loadStationId) stationIds[loadStationId] = true\n    })\n\n    // return stationIds obj\n    return stationIds\n}\n\nexport const getPreviousRoute = (processRoutes, currentRouteId) => {\n    const storeState = store.getState()\n    const routes = storeState.tasksReducer.tasks\n    var previousRoute\n\n    const currentRouteindex = processRoutes.findIndex((currItem) => {\n        if(isObject(currItem)) {\n            return currItem._id === currentRouteId\n        }\n        else {\n            return currItem === currentRouteId\n        }\n\n    })\n\n    if(currentRouteindex > 0 ) {\n        previousRoute = processRoutes[currentRouteindex - 1]\n    }\n    else {\n        previousRoute = processRoutes[processRoutes.length - 1]\n    }\n\n    if(!isObject(previousRoute)) {\n        return routes[previousRoute]\n    }\n    else {\n        return previousRoute\n    }\n\n}\n\n\n\n\n","export var globStyle = {\n\n    lrgFontSize : '1.5rem',\n    medFontSize : '1.2rem',\n    smlFontSize : '1rem',\n\n    font : 'Montserrat',\n\n    lightBG : '#FFFFFF',\n    darkBG : '#3D3D3D',\n\n    white : '#FFFFFF',\n    black : '#000000',\n\n    grey1 : '#202020',\n    grey2 : '#3D3D3D',\n    grey3 : '#5D5D5D',\n    grey4 : '#BCBCBC',\n    grey5 : '#E9E9E9',\n\n    red : '#FF4B4B',\n    green : '#52B853'\n\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport PropTypes from 'prop-types';\n\nclass ClickOutside extends React.Component {\n  container = React.createRef();\n\n  componentDidMount() {\n    document.addEventListener('click', this.handleClick,{capture:true, passive:true});\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('click', this.handleClick, true);\n  }\n\n  handleClick = (event) => {\n    const container = this.container.current;\n    const { target } = event;\n    const { onClickOutside } = this.props;\n\n    if ((container && container === target) || (container && !container.contains(target))) {\n      onClickOutside(event);\n    }\n  };\n\n  render() {\n    const { className, children, ClickOutsideComponent } = this.props;\n\n    return (\n      <ClickOutsideComponent className={className} ref={this.container}>\n        {children}\n      </ClickOutsideComponent>\n    );\n  }\n}\n\nconst DefaultClickOutsideComponent = styled.div`\n\n`;\n\nClickOutside.propTypes = {\n  onClickOutside: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string\n};\n\nClickOutside.defaultProps = {\n  ClickOutsideComponent: DefaultClickOutsideComponent\n};\n\n\nexport default ClickOutside;\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport styled from 'styled-components'\n\nimport { LightenDarkenColor } from '../../../../methods/utils/color_utils'\n\nfunction Label(props) {\n    return (\n        <props.LabelComponent>\n            {props.label}\n        </props.LabelComponent>\n    )\n}\n\nconst DefaultLabelComponent = styled.div`\n    width: 100%;\n    text-align: center;\n    color: #999;\n    font-weight: 200;\n\n    background: ${props => LightenDarkenColor(props.theme.bg.quinary, -10)};\n    color: ${props => props.theme.bg.septenary};\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz5};\n`\n\nLabel.propTypes = {\n    LabelComponent: PropTypes.elementType,\n    label: PropTypes.string,\n}\n\nLabel.defaultProps = {\n    LabelComponent: DefaultLabelComponent,\n    label: '',\n}\n\nexport default Label\n\n","export const valueExistInSelected = (value, values, props) =>\n  !!values.find((val) => getByPath(val, props['valueField']) === value);\n\nexport const hexToRGBA = (hex, alpha) => {\n  const RR = parseInt(hex.slice(1, 3), 16);\n  const GG = parseInt(hex.slice(3, 5), 16);\n  const BB = parseInt(hex.slice(5, 7), 16);\n\n  return `rgba(${RR}, ${GG}, ${BB}${alpha && `, ${alpha}`})`;\n};\n\nexport const debounce = (fn, delay = 0) => {\n  let timerId;\n\n  return (...args) => {\n    if (timerId) {\n      clearTimeout(timerId);\n    }\n    timerId = setTimeout(() => {\n      fn(...args);\n      timerId = null;\n    }, delay);\n  };\n};\n\nexport const isEqual = (a, b) => JSON.stringify(a) === JSON.stringify(b);\n\nexport const getByPath = (object, path) => {\n  // console.log('getByPath: {object, path}', {object, path})\n\n  let new_path = path.split('.')\n  // console.log('getByPath: new_path', {new_path})\n\n  if (!path) {\n    return;\n  }\n\n  return path.split('.').reduce((acc, value) => acc[value], object)\n};\n\nexport const getProp = (object, path, defaultValue) => {\n  if (!path) {\n    return object;\n  }\n\n  const normalizedPath = Array.isArray(path) ? path : path.split('.').filter((item) => item.length);\n\n  if (!normalizedPath.length) {\n    return object === undefined ? defaultValue : object;\n  }\n\n  return getProp(object[normalizedPath.shift()], normalizedPath, defaultValue);\n};\n","export const LIB_NAME = 'react-dropdown-select';\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport {getByPath} from '../util';\nimport { LIB_NAME } from '../constants';\n\nconst Option = ({ item, props, state, methods }) => {\n\n    const OptionComponent = props.OptionComponent ? props.OptionComponent : DefaultOptionComponent\n    return(\n        item && props.optionRenderer ? (\n          props.optionRenderer({ item, props, state, methods })\n        ) : (\n          <OptionComponent\n            role=\"listitem\"\n            disabled={props.disabled}\n            direction={props.direction}\n            className={`${LIB_NAME}-option`}\n            color={props.color}>\n            <span className={`${LIB_NAME}-option-label`}>{getByPath(item, props.labelField)}</span>\n            <span\n              className={`${LIB_NAME}-option-remove`}\n              onClick={(event) => methods.removeItem(event, item, props.closeOnSelect)}>\n              &times;\n            </span>\n          </OptionComponent>\n        )\n    );\n\n}\n\nexport const DefaultOptionComponent = styled.span`\n\n  padding: 0 5px;\n  border-radius: 2px;\n  line-height: 21px;\n  margin: 3px 0 3px 5px;\n  background: ${({ color }) => color};\n  color: #fff;\n  display: inline-flex;\n  flex-direction: ${({ direction }) => direction === 'rtl' ? 'row-reverse' : 'row'};\n  width: auto;\n  white-space: nowrap ;\n  \n  \n  .${LIB_NAME}-option-label {\n    width: auto;\n  }\n\n\n  .${LIB_NAME}-option-remove {\n    cursor: pointer;\n    width: 22px;\n    height: 22px;\n    display: inline-block;\n    text-align: center;\n    margin: 0 -5px 0 0px;\n    border-radius: 0 3px 3px 0;\n\n    :hover {\n      color: tomato;\n    }\n  }\n\n  :hover,\n  :hover > span {\n    opacity: 0.9;\n  }\n\n`;\n\n\n// Specifies the default values for props:\nOption.defaultProps = {\n    OptionComponent: DefaultOptionComponent,\n};\n\nexport default Option;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { valueExistInSelected } from '../util';\nimport * as PropTypes from 'prop-types';\nimport { LIB_NAME } from '../constants';\n\nconst handlePlaceHolder = (props, state) => {\n  const { addPlaceholder, searchable, placeholder } = props;\n  const noValues = state.values && state.values.length === 0;\n  const hasValues = state.values && state.values.length > 0;\n\n  if (hasValues && addPlaceholder && searchable) {\n    return addPlaceholder;\n  }\n\n  if (noValues) {\n    return placeholder;\n  }\n\n  if (hasValues && !searchable) {\n    return '';\n  }\n\n  return '';\n};\n\nclass Input extends Component {\n  input = React.createRef();\n\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.state.dropdown || (prevProps.state.dropdown !== this.props.state.dropdown && this.props.state.dropdown) ||\n      this.props.props.autoFocus\n    ) {\n      this.input.current.focus();\n    }\n\n    if (prevProps.state.dropdown !== this.props.state.dropdown && !this.props.state.dropdown) {\n       this.input.current.blur();\n    }\n  }\n\n  onBlur = (event) => {\n    event.stopPropagation();\n    if (!this.props.state.dropdown) {\n      return this.input.current.blur();\n    }\n\n    return this.input.current.focus();\n  };\n\n  handleKeyPress = (event) => {\n    const { props, state, methods } = this.props;\n\n    return (\n      props.create &&\n      event.key === 'Enter' &&\n      !valueExistInSelected(state.search, state.values, this.props) &&\n      state.search &&\n      state.cursor === null &&\n      methods.createNew(state.search)\n    );\n  };\n\n  render() {\n    const { props, state, methods, InputComponent } = this.props;\n\n    if (props.inputRenderer) {\n      return props.inputRenderer({ props, state, methods, inputRef: this.input });\n    }\n\n    return (\n      <InputComponent\n        ref={this.input}\n        tabIndex=\"-1\"\n        onFocus={(event) => event.stopPropagation()}\n        className={`${LIB_NAME}-input`}\n        size={methods.getInputSize()}\n        value={state.search}\n        readOnly={!props.searchable}\n        onClick={() => methods.dropDown('open')}\n        onKeyPress={this.handleKeyPress}\n        onChange={methods.setSearch}\n        onBlur={this.onBlur}\n        placeholder={handlePlaceHolder(props, state)}\n        disabled={props.disabled}\n        filled={props.filled}\n      />\n    );\n  }\n}\n\nexport const DefaultInputComponent = styled.input`\n    cursor: pointer;\n    line-height: inherit;\n\n    // width: ${props => props.filled ? `calc(${props.size}ch + 5px)` : `100%`};\n    width: ${props => `calc(${props.size}ch + 5px)`};\n\n    border: none;\n    margin-left: 5px;\n    background: transparent;\n    font-size: smaller;\n    ${({ readOnly }) => readOnly && 'cursor: pointer;'}\n    :focus {\n      outline: none;\n    }\n\n    vertical-align: middle;\n    line-height: 2rem;\n    height: 2rem;\n    \n    &::placeholder {\n      color: ${props => props.theme.bg.senary};\n    }\n    `;\n\nInput.propTypes = {\n    props: PropTypes.object,\n    state: PropTypes.object,\n    methods: PropTypes.object\n};\n\nInput.defaultProps = {\n    InputComponent: DefaultInputComponent\n};\n\nexport default Input;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport Option from './Option';\nimport Input from './Input';\nimport { LIB_NAME } from '../constants';\nimport { getByPath } from '../util';\n\nconst Content = ({ props, state, methods, ContentComponent, InputComponent }) => {\n  return (\n    <ContentComponent\n      className={`${LIB_NAME}-content ${\n        props.multi ? `${LIB_NAME}-type-multi` : `${LIB_NAME}-type-single`\n      }`}\n      onClick={(event) => {\n        event.stopPropagation();\n        methods.dropDown('open');\n      }}>\n      {props.contentRenderer ? (\n        props.contentRenderer({ props, state, methods })\n      ) : (\n        \n        <OptionsContainer multi={props.multi}>\n          {(props.multi || props.showSelectedBox)\n            ? state.values &&\n              state.values.map((item) => (\n                <Option\n                  key={`${getByPath(item, props.valueField)}${getByPath(item, props.labelField)}`}\n                  item={item}\n                  state={state}\n                  props={props}\n                  methods={methods}\n                />\n              ))\n            : state.values &&\n              state.values.length > 0 && <Value>{getByPath(state.values[0], props.labelField)}</Value>\n            }\n          <Input  InputComponent={InputComponent} props={{...props, filled:state.values.length}} methods={methods} state={state} />\n        </OptionsContainer>\n      )}\n    </ContentComponent>\n  );\n    return (\n        <ContentComponent\n            className={`${LIB_NAME}-content ${props.multi ? `${LIB_NAME}-type-multi` : `${LIB_NAME}-type-single`\n                }`}\n            onClick={(event) => {\n                event.stopPropagation();\n                methods.dropDown('open');\n            }}>\n            {props.contentRenderer ? (\n                props.contentRenderer({ props, state, methods })\n            ) : (\n\n                    <React.Fragment>\n                        {(props.multi || props.showSelectedBox)\n                            ? state.values &&\n                            state.values.map((item, ind) => (\n                                <Option\n                                    // Fix for keys that have the same name\n                                    // key={`${getByPath(item, props.valueField)}${getByPath(item, props.labelField)}`}\n                                    key={ind}\n                                    item={item}\n                                    state={state}\n                                    props={props}\n                                    methods={methods}\n                                />\n                            ))\n                            : state.values &&\n                            state.values.length > 0 && <Value>{getByPath(state.values[0], props.labelField)}</Value>\n                        }\n                        <Input InputComponent={InputComponent} props={{ ...props, filled: state.values.length }} methods={methods} state={state} />\n                    </React.Fragment>\n                )}\n        </ContentComponent>\n    );\n};\n\nexport const Value = styled.div`\n  margin-left: 0.3rem;\n  margin-right: 0.2rem;\n  line-height: 1.8rem;\n  font-size: ${props => props.theme.fontSize.sz3};\n  width: 100%;\n`\n\nexport const OptionsContainer = styled.div`\n    width: auto;\n    height: 100%;\n    margin-right: 1rem;\n    display: inline-flex;\n    overflow-y: hidden;\n    overflow-x: ${props => props.multi ? \"auto\" : \"hidden\"};\n    \n    word-break: ${props => !props.multi && \"break-all\"};\n    white-space: ${props => !props.multi && \"nowrap\"};\n    text-overflow: ${props => !props.multi && \"ellipsis\"};\n    \n`\n\nexport const DefaultContentComponent = styled.div`\n  position: relative;\n  \n  display: flex;\n  flex-grow: 1;\n  // flex-wrap: nowrap;\n\n  overflow: hidden;\n  \n  .${LIB_NAME}-type-multi {\n    overflow-x: auto;\n  }\n  \n  word-break: break-all;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`;\n\n// Specifies the default values for props:\nContent.defaultProps = {\n    ContentComponent: DefaultContentComponent,\n};\n\nexport default Content;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { LIB_NAME } from '../constants';\n\nimport {globStyle} from '../../../../global_style'\n\nconst NoData = ({ props, state, methods, NoDataComponent }) =>\n  props.noDataRenderer ? (\n    props.noDataRenderer({ props, state, methods })\n  ) : (\n    <NoDataComponent id={'bob5'} className={`${LIB_NAME}-no-data`} color={props.color}>\n      {props.noDataLabel}\n    </NoDataComponent>\n  );\n\nconst DefaultNoDataComponent = styled.div`\n  padding: 10px;\n  text-align: center;\n  font-size: 1rem;\n  color: #FF4B4B;\n  background-color: rgba(0,0,0,0.2);\n\n`;\n\nNoData.defaultProps = {\n  NoDataComponent: DefaultNoDataComponent\n};\n\nexport default NoData;\n","import React, { Component } from 'react';\nimport styled from 'styled-components'\nimport { getByPath } from '../util';\nimport * as PropTypes from 'prop-types';\nimport { LIB_NAME } from '../constants';\n\nimport { LightenDarkenColor, hexToRGBA } from '../../../../methods/utils/color_utils'\n\nclass Item extends Component {\n  item = React.createRef();\n\n  componentDidUpdate() {\n    if (this.props.state.cursor === this.props.itemIndex) {\n      this.item.current &&\n        this.item.current.scrollIntoView({ behavior: 'smooth', block: 'nearest', inline: 'start' });\n    }\n  }\n\n  render() {\n    // console.log('Item render this.props',this.props)\n    const { props, state, methods, item, itemIndex, ItemComponent, ContentContainer, ButtonComponent, TextComponent, onMouseEnter } = this.props;\n\n    if (props.itemRenderer) {\n      return props.itemRenderer({ item, itemIndex, props, state, methods });\n    }\n\n    if (!props.keepSelectedInList && methods.isSelected(item)) {\n      return null;\n    }\n\n    // console.log('item ItemComponent', ItemComponent)\n    //const { ItemComponent } = this.props;\n\n    return (\n      <ItemComponent\n        role=\"option\"\n        ref={this.item}\n        aria-selected={methods.isSelected(item)}\n        aria-disabled={item.disabled}\n        disabled={item.disabled}\n        aria-label={getByPath(item, props.labelField)}\n        key={`${getByPath(item, props.valueField)}${getByPath(item, props.labelField)}`}\n        tabIndex=\"-1\"\n        className={`${LIB_NAME}-item ${\n          methods.isSelected(item) ? `${LIB_NAME}-item-selected` : ''\n        } ${state.cursor === itemIndex ? `${LIB_NAME}-item-active` : ''} ${\n          item.disabled ? `${LIB_NAME}-item-disabled` : ''\n        }`}\n        onClick={item.disabled ? undefined : () => methods.addItem(item)}\n        onFocus = {props.onMouseEnter}\n        onKeyPress={item.disabled ? undefined : () => methods.addItem(item)}\n        color={props.color}\n        schema={props.schema}>\n\n            <TextComponent>\n              {getByPath(item, props.labelField)} {item.disabled && <ins>{props.disabledLabel}</ins>}\n            </TextComponent>\n\n            {props.showButton && !!props.onDetailsClick &&\n              <ButtonComponent className='fas fa-ellipsis-h'\n                  onClick={(e) => {\n                    if (!e) var e = window.event;\n                    e.cancelBubble = true;\n                    if (e.stopPropagation) e.stopPropagation();\n                    props.onDetailsClick(item.id);\n                  }}>\n              </ButtonComponent>\n            }\n\n      </ItemComponent>\n    );\n  }\n}\n\nItem.propTypes = {\n  props: PropTypes.any,\n  state: PropTypes.any,\n  methods: PropTypes.any,\n  item: PropTypes.any,\n  itemIndex: PropTypes.any,\n  showButton: PropTypes.bool,\n};\n\nexport const DefaultItemComponent = styled.span`\n\n  padding: .5rem 1rem .5rem calc(1rem - 5px);\n  cursor: pointer;\n  white-space: nowrap;\n  display: flex;\n  justify-content: space-between;\n  font-family: ${props => props.theme.font.primary};\n  font-size: ${props => props.theme.fontSize.sz3};\n\n  border-left: 5px solid transparent;\n\n  // &.${LIB_NAME}-item-active {\n  //   ${({ disabled, color }) => !disabled && color && `background: green;`}\n  // }\n\n  :hover,\n  :focus {\n    background: ${props => LightenDarkenColor(props.theme.bg.quinary, 10)};\n    outline: none;\n  }\n\n\n  &.${LIB_NAME}-item-selected {\n    ${props => props.disabled ? `\n      background: rgba(0,0,0,0.01);\n      color: ${props.theme.bg.primary};\n    `\n    : `\n      background: ${!!props.schema ? hexToRGBA(props.theme.schema[props.schema].solid, 0.1) : hexToRGBA(props.theme.bg.senary, 0.1)};\n      color: ${!!props.schema ? props.theme.schema[props.schema].solid : props.theme.bg.senary};\n      border-color: ${!!props.schema ? props.theme.schema[props.schema].solid : props.theme.bg.senary};\n    `}\n  }\n\n  ${({ disabled }) =>\n    disabled\n      ? `\n    background: ${props => props.theme.bg.secondary};\n    color: ${props => props.theme.bg.tertiary};\n\n    ins {\n      text-decoration: none;\n      border:1px solid #ccc;\n      border-radius: 2px;\n      padding: 0px 3px;\n      font-size: x-small;\n      text-transform: uppercase;\n    }\n    `\n      : ''}\n\n`;\n\nconst DefaultContentContainer = styled.div`\n  display: flex;\n  flex: 1;\n  justify-content: space-between;\n  padding: 0;\n  overflow: hidden;\n  white-space: nowrap;\n`;\n\nconst DefaultButtonComponent = styled.i`\n    display: flex;\n    color: grey;\n    font-size: 1rem;\n    &:hover {\n        cursor: pointer;\n    }\n    line-height: 2rem;\n    text-align: center;\n`\n\nconst DefaultTextComponent = styled.span`\n  overflow: hidden;\n  white-space: nowrap;\n  flex: 1;\n  text-overflow: ellipsis;\n  // white-space: normal;\n  // word-wrap: break-word;\n  // word-break: break-all;\n`;\n\n// Specifies the default values for props:\nItem.defaultProps = {\n    ItemComponent: DefaultItemComponent,\n    ContentContainer: DefaultContentContainer,\n    ButtonComponent: DefaultButtonComponent,\n    TextComponent: DefaultTextComponent,\n};\n\nexport default Item;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { LIB_NAME } from '../constants';\nimport NoData from '../components/NoData';\nimport Item from '../components/Item';\nimport Label from '../components/Label';\n\nimport { valueExistInSelected, hexToRGBA } from '../util';\n\nconst dropdownPosition = (props, methods) => {\n    const DropdownBoundingClientRect = methods.getSelectRef().getBoundingClientRect();\n    const dropdownHeight =\n        DropdownBoundingClientRect.bottom + parseInt(props.dropdownHeight, 10) + parseInt(props.dropdownGap, 10);\n\n    if (props.dropdownPosition !== 'auto') {\n        return props.dropdownPosition;\n    }\n\n    if (dropdownHeight > window.innerHeight && dropdownHeight > DropdownBoundingClientRect.top) {\n        return 'top';\n    }\n\n    return 'bottom';\n};\n\nconst Dropdown = ({ ItemComponent, props, DropDownComponent, state, methods, TextComponent }) => {\n    // console.log('Dropdown props', props)\n    // console.log('Dropdown ItemComponent', ItemComponent)\n    return (\n        <DropDownComponent\n            tabIndex=\"-1\"\n            aria-expanded=\"true\"\n            role=\"list\"\n            dropdownPosition={dropdownPosition(props, methods)}\n            selectBounds={state.selectBounds}\n            portal={props.portal}\n            dropdownGap={props.dropdownGap}\n            dropdownHeight={props.dropdownHeight}\n            className={`${LIB_NAME}-dropdown ${LIB_NAME}-dropdown-position-${dropdownPosition(\n                props,\n                methods\n            )}`}>\n            {props.dropdownRenderer ? (\n                props.dropdownRenderer({ props, state, methods })\n            ) : (\n                    <React.Fragment>\n                        {props.create && state.search && !valueExistInSelected(state.search, state.values, props) && (\n                            <AddNew\n                                className={`${LIB_NAME}-dropdown-add-new`}\n                                color={props.color}\n                                onClick={() => methods.createNew(state.search)}\n                                >\n                                {props.createNewLabel.replace('{search}', `\"${state.search}\"`)}\n                            </AddNew>\n                        )}\n                        <Label LabelComponent={props.LabelComponent} label={props.label}></Label>\n                        {methods.searchResults().length === 0 ? (\n                            <NoData\n                                className={`${LIB_NAME}-no-data`}\n                                state={state}\n                                props={props}\n                                methods={methods}\n                                NoDataComponent={props.NoDataComponent}\n                            />\n                        ) : (\n                                methods\n                                    .searchResults()\n                                    .map((item, itemIndex) => (\n                                        <Item\n                                            ItemComponent={ItemComponent}\n                                            TextComponent={TextComponent}\n                                            //   Fix for dropdown search error for elements with matching keys\n                                            //   key={item[props.valueField]}\n                                            key={itemIndex}\n                                            item={item}\n                                            itemIndex={itemIndex}\n                                            state={state}\n                                            props={props}\n                                            methods={methods}\n                                        />\n                                    ))\n                            )}\n                    </React.Fragment>\n                )}\n        </DropDownComponent>\n    );\n}\n\nexport const DefaultDropDownComponent = styled.div`\n  position: absolute;\n  ${({ selectBounds, dropdownGap, dropdownPosition }) =>\n        dropdownPosition === 'top'\n            ? `bottom: ${selectBounds.height + 2 + dropdownGap}px`\n            : `top: ${selectBounds.height + 2 + dropdownGap}px`};\n\n  ${({ selectBounds, dropdownGap, portal }) =>\n        portal\n            ? `\n      position: fixed;\n      top: ${selectBounds.bottom + dropdownGap}px;\n      left: ${selectBounds.left - 1}px;`\n            : 'left: -1px;'};\n  width: 100%;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n  background: ${props => props.theme.bg.quinary};\n  border-radius: 2px;\n  box-shadow: 0 0 10px 0 ${() => hexToRGBA('#000000', 0.2)};\n  max-height: ${({ dropdownHeight }) => dropdownHeight};\n  overflow: auto;\n  z-index: 1;\n\n  border-radius: 0.2rem;\n\n  :focus {\n    outline: none;\n  }\n\n  /* Let's get this party started */\n  ::-webkit-scrollbar {\n      width: 6px;\n  }\n  /* Track */\n  ::-webkit-scrollbar-track {\n      -webkit-background: rgba(0,0,0,0.1);\n      -webkit-border-radius: 10px;\n      border-radius: 10px;\n  }\n  /* Handle */\n  ::-webkit-scrollbar-thumb {\n      -webkit-border-radius: 10px;\n      border-radius: 10px;\n      -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.5);\n      background: rgba(255,255,255,0.4);\n  }\n  ::-webkit-scrollbar-thumb:window-inactive {\n    background: rgba(255,255,255,0.2);\n  }\n\n}\n`;\n\nconst AddNew = styled.div`\n  color: ${({ color }) => color};\n  padding: 5px 10px;\n  background: white;\n  color: blue;\n\n  :hover {\n    background: ${({ color }) => color && hexToRGBA(color, 0.1)};\n    outline: none;\n    cursor: pointer;\n  }\n`;\n\nDropdown.defaultProps = {\n    DropDownComponent: DefaultDropDownComponent\n};\n\nexport default Dropdown;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { LIB_NAME } from '../constants';\n\nconst Loading = ({ props }) =>\n  props.loadingRenderer ? (\n    props.loadingRenderer({ props })\n  ) : (\n    <LoadingComponent className={`${LIB_NAME}-loading`} color={props.color} />\n  );\n\nconst LoadingComponent = styled.div`\n  @keyframes dual-ring-spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(180deg);\n    }\n  }\n\n  padding: 0 5px;\n  display: block;\n  width: auto;\n  height: auto;\n\n  :after {\n    content: ' ';\n    display: block;\n    width: 16px;\n    height: 16px;\n    border-radius: 50%;\n    border-width: 1px;\n    border-style: solid;\n    border-color: ${({ color }) => color} transparent;\n    animation: dual-ring-spin 0.7s ease-in-out infinite;\n    margin: 0 0 0 -10px;\n  }\n`;\n\nexport default Loading;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { LIB_NAME } from '../constants';\n\nconst Clear = ({ props, state, methods }) =>\n  props.clearRenderer ? (\n    props.clearRenderer({ props, state, methods })\n  ) : (\n    <ClearComponent\n      className={`${LIB_NAME}-clear`}\n      tabIndex=\"-1\"\n      onClick={() => methods.clearAll()}\n      onKeyPress={() => methods.clearAll()}>\n      &times;\n    </ClearComponent>\n  );\n\nconst ClearComponent = styled.div`\n  line-height: 25px;\n  margin: 0 10px;\n  cursor: pointer;\n\n  :focus {\n    outline: none;\n  }\n\n  :hover {\n    color: tomato;\n  }\n`;\n\nexport default Clear;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { LIB_NAME } from '../constants';\n\nconst Separator = ({ props, state, methods }) =>\n  props.separatorRenderer ? (\n    props.separatorRenderer({ props, state, methods })\n  ) : (\n    <SeparatorComponent className={`${LIB_NAME}-separator`} />\n  );\n\nconst SeparatorComponent = styled.div`\n  border-left: 1px solid #ccc;\n  width: 1px;\n  height: 25px;\n  display: block;\n`;\n\nexport default Separator;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { LIB_NAME } from '../constants';\n\nconst DropdownHandle = ({ props, state, methods }) =>\n  props.dropdownHandleRenderer ? (\n    props.dropdownHandleRenderer({ props, state, methods })\n  ) : (\n    <DropdownHandleComponent\n      tabIndex=\"-1\"\n      onClick={(event) => methods.dropDown(state.dropdown ? 'close': 'open', event)}\n      dropdownOpen={state.dropdown}\n      onKeyPress={(event) => methods.dropDown('toggle', event)}\n      onKeyDown={(event) => methods.dropDown('toggle', event)}\n      className={`${LIB_NAME}-dropdown-handle`}\n      color={props.color}>\n      <svg fill=\"currentColor\" viewBox=\"0 0 40 40\"><path d=\"M31 26.4q0 .3-.2.5l-1.1 1.2q-.3.2-.6.2t-.5-.2l-8.7-8.8-8.8 8.8q-.2.2-.5.2t-.5-.2l-1.2-1.2q-.2-.2-.2-.5t.2-.5l10.4-10.4q.3-.2.6-.2t.5.2l10.4 10.4q.2.2.2.5z\"/></svg>\n    </DropdownHandleComponent>\n  );\n\nconst DropdownHandleComponent = styled.div`\n  text-align: center;\n\n  ${({ dropdownOpen }) =>\n    dropdownOpen\n      ? `\n      pointer-events: all;\n      transform: rotate(0deg);\n      margin: 0px 0 -3px 5px;\n      `\n      : `\n      pointer-events: none;\n      margin: 0 0 0 5px;\n      transform: rotate(180deg);\n      `};\n  cursor: pointer;\n\n  text-align: center;\n  vertical-align: middle;\n  line-height: 2rem;\n  height: 2rem;\n  position: absolute;\n  right: .25rem;\n\n  svg {\n    width: 16px;\n    height: 16px;\n  }\n\n  :hover {\n    path {\n      stroke: ${({ color }) => color};\n    }\n  }\n\n  :focus {\n    outline: none;\n\n    path {\n      stroke: ${({ color }) => color};\n    }\n  }\n\n`;\n\nexport default DropdownHandle;\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components'\nimport ClickOutside from './components/ClickOutside';\n\nimport { globStyle } from '../../../global_style'\nimport { LightenDarkenColor } from '../../../methods/utils/color_utils'\n\n\nimport Label from './components/Label';\nimport Content from './components/Content';\nimport Dropdown from './components/Dropdown';\nimport Loading from './components/Loading';\nimport Clear from './components/Clear';\nimport Separator from './components/Separator';\nimport DropdownHandle from './components/DropdownHandle';\n\nimport { debounce, hexToRGBA, isEqual, getByPath, getProp, valueExistInSelected } from './util';\nimport { LIB_NAME } from './constants';\n\nimport theme from '../../../theme.js'\n\nexport class DropDownSearch extends Component {\n  static propTypes = {\n    onChange: PropTypes.func.isRequired,\n    onDropdownClose: PropTypes.func,\n    onDropdownOpen: PropTypes.func,\n    onClearAll: PropTypes.func,\n    onSelectAll: PropTypes.func,\n    values: PropTypes.array,\n    options: PropTypes.array.isRequired,\n    keepOpen: PropTypes.bool,\n    showSelectedBox: PropTypes.bool,\n    dropdownGap: PropTypes.number,\n    multi: PropTypes.bool,\n    placeholder: PropTypes.string,\n    addPlaceholder: PropTypes.string,\n    disabled: PropTypes.bool,\n    className: PropTypes.string,\n    loading: PropTypes.bool,\n    clearable: PropTypes.bool,\n    searchable: PropTypes.bool,\n    separator: PropTypes.bool,\n    dropdownHandle: PropTypes.bool,\n    searchBy: PropTypes.string,\n    sortBy: PropTypes.string,\n    closeOnScroll: PropTypes.bool,\n    openOnTop: PropTypes.bool,\n    style: PropTypes.object,\n    contentRenderer: PropTypes.func,\n    dropdownRenderer: PropTypes.func,\n    itemRenderer: PropTypes.func,\n    noDataRenderer: PropTypes.func,\n    optionRenderer: PropTypes.func,\n    inputRenderer: PropTypes.func,\n    loadingRenderer: PropTypes.func,\n    clearRenderer: PropTypes.func,\n    separatorRenderer: PropTypes.func,\n    dropdownHandleRenderer: PropTypes.func,\n    direction: PropTypes.string,\n    required: PropTypes.bool,\n    pattern: PropTypes.string,\n    // The pattern attribute specifies a regular expression that the <input> element's value is checked against on form submission\n    // set to null to bypass\n    name: PropTypes.string,\n    className: PropTypes.string,\n    schema: PropTypes.string,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dropdown: false,\n      values: props.values,\n      search: '',\n      selectBounds: {},\n      cursor: null\n    };\n\n    this.methods = {\n      removeItem: this.removeItem,\n      dropDown: this.dropDown,\n      addItem: this.addItem,\n      setSearch: this.setSearch,\n      getInputSize: this.getInputSize,\n      toggleSelectAll: this.toggleSelectAll,\n      clearAll: this.clearAll,\n      selectAll: this.selectAll,\n      searchResults: this.searchResults,\n      getSelectRef: this.getSelectRef,\n      isSelected: this.isSelected,\n      getSelectBounds: this.getSelectBounds,\n      areAllSelected: this.areAllSelected,\n      handleKeyDown: this.handleKeyDown,\n      activeCursorItem: this.activeCursorItem,\n      createNew: this.createNew,\n      sortBy: this.sortBy,\n      safeString: this.safeString\n    };\n\n    this.select = React.createRef();\n    this.dropdownRoot = typeof document !== 'undefined' && document.createElement('div');\n  }\n\n  componentDidMount() {\n\n    this.props.portal && this.props.portal.appendChild(this.dropdownRoot);\n    window.addEventListener('resize', debounce(this.updateSelectBounds), {passive:true});\n    window.addEventListener('scroll', debounce(this.onScroll), {passive:true});\n\n    this.dropDown('close');\n\n    if (this.select) {\n      this.updateSelectBounds();\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      !isEqual(prevProps.values, this.props.values) &&\n      isEqual(prevProps.values, prevState.values)\n    ) {\n      this.setState({ values: this.props.values }, () => {\n        this.props.onChange(this.props.values);\n      });\n    }\n\n    if (prevState.values !== this.state.values) {\n      if (this.state.values.length) { this.props.onChange(this.state.values) };\n      this.updateSelectBounds();\n    }\n\n    if (prevState.search !== this.state.search) {\n      this.updateSelectBounds();\n    }\n\n    if (prevState.values !== this.state.values && this.props.closeOnSelect) {\n      this.dropDown('close');\n    }\n\n    if (prevProps.multi !== this.props.multi) {\n      this.updateSelectBounds();\n    }\n\n    if (prevState.dropdown && prevState.dropdown !== this.state.dropdown) {\n      this.onDropdownClose();\n    }\n\n    if (!prevState.dropdown && prevState.dropdown !== this.state.dropdown) {\n      this.props.onDropdownOpen();\n    }\n\n    if (prevState.values !== this.state.values && !this.props.fillable && this.state.values.length) {\n      this.clearAll();\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.portal && this.props.portal.removeChild(this.dropdownRoot);\n    window.removeEventListener(\n      'resize',\n      debounce(this.updateSelectBounds, this.props.debounceDelay), {passive:true}\n    );\n    window.removeEventListener('scroll', debounce(this.onScroll, this.props.debounceDelay), {passive:true});\n  }\n\n  onDropdownClose = () => {\n    this.setState({ cursor: null });\n    this.props.onDropdownClose();\n  };\n\n  onScroll = () => {\n    if (this.props.closeOnScroll) {\n      this.dropDown('close');\n    }\n\n    this.updateSelectBounds();\n  };\n\n  updateSelectBounds = () =>\n    this.select.current &&\n    this.setState({\n      selectBounds: this.select.current.getBoundingClientRect()\n    });\n\n  getSelectBounds = () => this.state.selectBounds;\n\n  dropDown = (action = 'toggle', event) => {\n    const target = (event && event.target) || (event && event.srcElement);\n\n    if (\n      this.props.portal &&\n      !this.props.closeOnScroll &&\n      !this.props.closeOnSelect &&\n      event &&\n      target &&\n      target.offsetParent &&\n      target.offsetParent.classList.contains('react-dropdown-select-dropdown')\n    ) {\n      return;\n    }\n\n    if (this.props.keepOpen) {\n      return this.setState({ dropdown: true });\n    }\n\n    if (action === 'close' && this.state.dropdown) {\n      this.select.current.blur();\n\n      return this.setState({\n        dropdown: false,\n        search: this.props.clearOnBlur ? '' : this.state.search\n      });\n    }\n\n    if (action === 'open' && !this.state.dropdown) {\n      return this.setState({ dropdown: true });\n    }\n\n    if (action === 'toggle') {\n      this.select.current.focus();\n      return this.setState({ dropdown: !this.state.dropdown });\n    }\n\n    return false;\n  };\n\n  getSelectRef = () => this.select.current;\n\n  addItem = (item) => {\n    if (this.props.multi) {\n      if (\n        valueExistInSelected(getByPath(item, this.props.valueField), this.state.values, this.props)\n      ) {\n        return this.removeItem(null, item, false);\n      }\n\n      this.setState({\n        values: [...this.state.values, item]\n      });\n    } else {\n      this.setState({\n        values: [item],\n        dropdown: false\n      });\n    }\n\n    this.props.clearOnSelect && this.setState({ search: '' });\n\n    return true;\n  };\n\n  removeItem = (event, item, close = false) => {\n    if (event && close) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.dropDown('close');\n    }\n\n    let newValues = this.state.values.filter(\n        (values) =>\n            getByPath(values, this.props.valueField) !== getByPath(item, this.props.valueField)\n    )\n\n    this.setState({\n      values: newValues\n    });\n\n    this.props.onRemoveItem && this.props.onRemoveItem(newValues)\n  };\n\n  setSearch = (event) => {\n    this.setState({\n      cursor: null\n    });\n\n    this.setState({\n      search: event.target.value\n    });\n  };\n\n  getInputSize = () => {\n    if (this.state.values && this.state.values.length) {\n      return 0;\n    } else {\n      return this.props.placeholder.length;\n    }\n  };\n\n  toggleSelectAll = () => {\n    return this.setState({\n      values: this.state.values.length === 0 ? this.selectAll() : this.clearAll()\n    });\n  };\n\n  clearAll = () => {\n    this.props.onClearAll();\n    this.setState({\n      values: []\n    });\n  };\n\n  selectAll = (valuesList = []) => {\n    this.props.onSelectAll();\n    const values = valuesList.length > 0\n      ? valuesList\n      : this.props.options.filter((option) => !option.disabled);\n\n    this.setState({ values });\n  };\n\n  isSelected = (option) =>\n    !!this.state.values.find(\n      (value) =>\n        getByPath(value, this.props.valueField) === getByPath(option, this.props.valueField)\n    );\n\n  areAllSelected = () =>\n    this.state.values.length === this.props.options.filter((option) => !option.disabled).length;\n\n  safeString = (string) => string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n\n  sortBy = () => {\n    const { sortBy, options } = this.props;\n\n    if (!sortBy) {\n      return options;\n    }\n\n    options.sort((a, b) => {\n      if (getProp(a, sortBy) < getProp(b, sortBy)) {\n        return -1;\n      } else if (getProp(a, sortBy) > getProp(b, sortBy)) {\n        return 1;\n      } else {\n        return 0;\n      }\n    });\n\n    return options;\n  };\n\n  searchFn = ({ state, methods }) => {\n    const regexp = new RegExp(methods.safeString(state.search), 'i');\n\n    return methods\n      .sortBy()\n      .filter((item) =>\n        regexp.test(getByPath(item, this.props.searchBy) || getByPath(item, this.props.valueField))\n      );\n  };\n\n  searchResults = () => {\n    const args = { state: this.state, props: this.props, methods: this.methods };\n\n    return this.props.searchFn(args) || this.searchFn(args);\n  };\n\n  activeCursorItem = (activeCursorItem) =>\n    this.setState({\n      activeCursorItem\n    });\n\n  handleKeyDown = (event) => {\n    const args = {\n      event,\n      state: this.state,\n      props: this.props,\n      methods: this.methods,\n      setState: this.setState.bind(this)\n    };\n\n    return this.props.handleKeyDownFn(args) || this.handleKeyDownFn(args);\n  };\n\n  handleKeyDownFn = ({ event, state, props, methods, setState }) => {\n    const { cursor } = state;\n    const escape = event.key === 'Escape';\n    const enter = event.key === 'Enter';\n    const arrowUp = event.key === 'ArrowUp';\n    const arrowDown = event.key === 'ArrowDown';\n    const tab = event.key === 'Tab' && !event.shiftKey;\n    const shiftTab = event.shiftKey && event.key === 'Tab';\n\n    if ((arrowDown || tab) && cursor === null) {\n      return setState({\n        cursor: 0\n      });\n    }\n\n    if (arrowUp || arrowDown || shiftTab || tab) {\n      event.preventDefault();\n    }\n\n    if (escape) {\n      this.dropDown('close');\n    }\n\n    if (enter) {\n      const currentItem = methods.searchResults()[cursor];\n      if (currentItem && !currentItem.disabled) {\n        if (props.create && valueExistInSelected(state.search, state.values, props)) {\n          return null;\n        }\n\n        methods.addItem(currentItem);\n      }\n    }\n\n    if ((arrowDown || tab) && methods.searchResults().length === cursor) {\n      return setState({\n        cursor: 0\n      });\n    }\n\n    if (arrowDown || tab) {\n      setState((prevState) => ({\n        cursor: prevState.cursor + 1\n      }));\n    }\n\n    if ((arrowUp || shiftTab) && cursor > 0) {\n      setState((prevState) => ({\n        cursor: prevState.cursor - 1\n      }));\n    }\n\n    if ((arrowUp || shiftTab) && cursor === 0) {\n      setState({\n        cursor: methods.searchResults().length\n      });\n    }\n  };\n\n  renderDropdown = (ItemComponent) =>\n    this.props.portal ? (\n      ReactDOM.createPortal(\n        <Dropdown ItemComponent={ItemComponent} DropDownComponent={this.props.DropDownComponent} props={this.props} state={this.state} methods={this.methods} />,\n        this.dropdownRoot\n      )\n    ) : (\n        <Dropdown ItemComponent={ItemComponent} TextComponent={this.props.TextComponent} DropDownComponent={this.props.DropDownComponent} props={this.props} state={this.state} methods={this.methods} />\n      );\n\n  createNew = (item) => {\n    const newValue = {\n      [this.props.labelField]: item,\n      [this.props.valueField]: item\n    };\n\n    this.addItem(newValue);\n    this.props.onCreateNew(newValue);\n    this.setState({ search: '' });\n  };\n\n  render() {\n\n    const { ItemComponent, ReactDropdownSelect, Container } = this.props;\n\n    return (\n      <Container className={this.props.className}>\n        <ClickOutside ClickOutsideComponent={this.props.ClickOutsideComponent} onClickOutside={(event) => this.dropDown('close', event)}>\n          <ReactDropdownSelect\n            onKeyDown={this.handleKeyDown}\n            onClick={(event) => this.dropDown('open', event)}\n            // onFocus={(event) => this.dropDown('open', event)}\n            tabIndex={this.props.disabled ? '-1' : '0'}\n            direction={this.props.direction}\n            style={this.props.style}\n            ref={this.select}\n            disabled={this.props.disabled}\n            className={`${LIB_NAME} ${this.props.className}`}\n            color={this.props.color}\n            {...this.props.additionalProps}\n            schema={this.props.schema}>\n\n            <Content InputComponent={this.props.InputComponent} ContentComponent={this.props.ContentComponent} props={this.props} state={this.state} methods={this.methods} />\n\n            {(this.props.name || this.props.required) && (\n              <input\n                tabIndex={-1}\n                onChange={this.methods.setSearch}\n                style={{ opacity: 0, width: 0, position: 'absolute' }}\n                name={this.props.name}\n                required={this.props.required}\n                pattern={this.props.pattern}\n                value={this.state.values.map(value => value[this.props.labelField]).toString() || []}\n                disabled={this.props.disabled}\n              />\n            )}\n\n            {this.props.loading && <Loading props={this.props} />}\n\n            {this.props.clearable && (\n              <Clear props={this.props} state={this.state} methods={this.methods} />\n            )}\n\n            {this.props.separator && (\n              <Separator props={this.props} state={this.state} methods={this.methods} />\n            )}\n\n            {this.props.dropdownHandle && (\n              <DropdownHandle\n                onClick={() => this.select.current.focus()}\n                props={this.props}\n                state={this.state}\n                methods={this.methods}\n              />\n            )}\n\n            {this.state.dropdown && !this.props.disabled && this.renderDropdown(ItemComponent)}\n          </ReactDropdownSelect>\n        </ClickOutside>\n      </Container>\n    );\n  }\n}\n\nexport const DefaultReactDropdownSelect = styled.div`\n\n    background-color: ${props => props.theme.bg.quinary};\n    color: ${props => props.theme.bg.octonary};\n\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz3};\n\n    position: relative;\n    display: flex;\n\n    vertical-align: middle;\n    line-height: 1.6rem;\n    height: 1.6rem;\n    width: 100%;\n    padding: 2px 5px;\n    direction: ${({ direction }) => direction};\n    cursor: pointer;\n    min-height: 36px;\n    ${({ disabled }) =>\n    disabled ? 'cursor: not-allowed;pointer-events: none;opacity: 0.3;' : 'pointer-events: all;'}\n\n    border-bottom: 2px solid transparent;\n    border-radius: 0.2rem;\n\n    :focus,\n    :focus-within {\n        color: ${props => props.theme.bg.octonary};\n        background-color: ${props => LightenDarkenColor(props.theme.bg.quinary, 10)};\n        box-shadow: none;\n        border-bottom: 2px solid ${props => !!props.schema ? props.theme.schema[props.schema].solid : props.theme.bg.octonary};\n    }\n`;\n\nconst DefaultContainer = styled.div`\n\n`;\n\nDropDownSearch.defaultProps = {\n  addPlaceholder: '',\n  placeholder: 'Select...',\n  values: [],\n  options: [],\n  multi: false,\n  showSelectedBox: false,\n  disabled: false,\n  searchBy: 'label',\n  sortBy: null,\n  clearable: false,\n  searchable: true,\n  dropdownHandle: true,\n  separator: false,\n  keepOpen: undefined,\n  noDataLabel: 'No data',\n  createNewLabel: 'add {search}',\n  disabledLabel: 'disabled',\n  dropdownGap: 2,\n  closeOnScroll: false,\n  debounceDelay: 0,\n  labelField: 'label',\n  valueField: 'value',\n  color: '#0074D9',\n  keepSelectedInList: true,\n  closeOnSelect: false,\n  clearOnBlur: true,\n  clearOnSelect: true,\n  dropdownPosition: 'bottom',\n  dropdownHeight: '300px',\n  autoFocus: false,\n  portal: null,\n  create: false,\n  direction: 'ltr',\n  name: null,\n  required: false,\n  pattern: '',\n  onChange: () => undefined,\n  onDropdownOpen: () => undefined,\n  onDropdownClose: () => undefined,\n  onClearAll: () => undefined,\n  onSelectAll: () => undefined,\n  onCreateNew: () => undefined,\n  searchFn: () => undefined,\n  handleKeyDownFn: () => undefined,\n  additionalProps: null,\n  showButton: true,\n  ReactDropdownSelect: DefaultReactDropdownSelect,\n  Container: DefaultContainer,\n  fillable: true,\n  schema: null,\n};\n\n\n\nexport default DropDownSearch;\n","export const SORT_MODES = {\n\tSTART_ASCENDING: \"START_ASCENDING\",\n\tSTART_DESCENDING: \"START_DESCENDING\",\n\tEND_ASCENDING: \"END_ASCENDING\",\n\tEND_DESCENDING: \"END_DESCENDING\",\n\tNAME_ASCENDING: \"NAME_ASCENDING\",\n\tNAME_DESCENDING: \"NAME_DESCENDING\",\n\tQUANTITY_ASCENDING: \"QUANTITY_ASCENDING\",\n\tQUANTITY_DESCENDING: \"QUANTITY_DESCENDING\"\n}\n\nexport const SORT_OPTIONS = [\n\t{description: \"Name (a-z)\", sortMode: SORT_MODES.NAME_ASCENDING},\n\t{description: \"Name (z-a)\", sortMode: SORT_MODES.NAME_DESCENDING},\n\t{description: \"Quantity (Increasing)\", sortMode: SORT_MODES.QUANTITY_ASCENDING},\n\t{description: \"Quantity (Decreasing)\", sortMode: SORT_MODES.QUANTITY_DESCENDING},\n\t{description: \"Start Date (Ascending)\", sortMode: SORT_MODES.START_ASCENDING},\n\t{description: \"Start Date (Descending)\", sortMode: SORT_MODES.START_DESCENDING},\n\t{description: \"End Date (Descending)\", sortMode: SORT_MODES.END_DESCENDING},\n\t{description: \"End Date (Ascending)\", sortMode: SORT_MODES.END_ASCENDING}\n]","import { denormalize, schema } from 'normalizr';\nimport { uuidv4 } from '../methods/utils/utils';\n// condition schema - NOT CURRENTLY USED - condtions should probably have an id attribute / some unique identifier...\n\n\n// schedule schema\nexport const dashboardSchema = new schema.Entity(\n    // key\n    'dashboards',\n    // definition\n    {\n        //condition: conditionSchema\n    },\n    // options\n    {\n        idAttribute: (value, parent, key) => {\n            return value._id.$oid\n        },\n\n    },\n\n);\n\n// schema for list of schedules\nexport const dashboardsSchema = [dashboardSchema]\n\n// schedule schema\nexport const deviceSchema = new schema.Entity(\n    // key\n    'devices',\n    // definition\n    {\n        //condition: conditionSchema\n    },\n    // options\n    {\n        idAttribute: (value, parent, key) => {\n            return value._id\n        },\n\n    },\n\n);\n\n// schema for list of schedules\nexport const devicesSchema = [deviceSchema]\n\nexport const locationsSchema = new schema.Entity(\n    // key\n    'locations',\n    // definition\n    {},\n    // options\n    {\n        idAttribute: (value, parent, key) => {\n            return value._id.$oid\n        }\n    }\n)\n\n// Schema for events\nexport const eventsSchema = new schema.Entity(\n    // key\n    'events',\n    // definition\n    {},\n    // options\n    {\n        idAttribute: (value, parent, key) => {\n            return value._id.$oid\n        }\n    }\n)\n\n\n// process schema\nexport const processSchema = new schema.Entity(\n    // key\n    'processes',\n    // definition\n    {\n        //condition: conditionSchema\n    },\n    // options\n    {\n        idAttribute: (value, parent, key) => {\n            return value._id\n        },\n\n    },\n\n);\n\nexport const processesSchema = [processSchema]\n\n\n// sounds schema\nexport const soundSchema = new schema.Entity(\n    // key\n    'sounds',\n    // definition\n    {\n        //condition: conditionSchema\n    },\n    // options\n    {\n        idAttribute: (value, parent, key) => {\n            return value._id\n        },\n\n    },\n\n);\n\nexport const soundsSchema = [soundSchema]\n\n\n// sounds schema\nexport const taskAnalysisSchema = new schema.Entity(\n    // key\n    'taskAnalysis',\n    // definition\n    {\n        //condition: conditionSchema\n    },\n    // options\n    {\n        idAttribute: (value, parent, key) => {\n            return value.task_id\n        },\n\n    },\n\n);\n\nexport const tasksAnalysisSchema = [taskAnalysisSchema]\n\n\n// positions schema\nexport const positionSchema = new schema.Entity(\n    // key\n    'positions',\n    // definition\n    {\n        //condition: conditionSchema\n    },\n    // options\n    {\n        idAttribute: (value, parent, key) => {\n            return value._id\n        },\n\n    },\n\n);\n\nexport const positionsSchema = [positionSchema]\n\n\n// positions schema\nexport const stationSchema = new schema.Entity(\n    // key\n    'stations',\n    // definition\n    {},\n    // options\n    {\n        idAttribute: (value, parent, key) => {\n            return value._id\n        },\n\n    },\n\n);\n\nexport const stationsSchema = [stationSchema]\n\n// status schema\nexport const statusSchema = new schema.Entity(\n    // key\n    'status',\n    // definition\n    {\n        //condition: conditionSchema\n    },\n    // options\n    {\n        idAttribute: (value, parent, key) => {\n            return value._id.$oid\n        },\n\n        // processStrategy\n        processStrategy: (value, parent, key) => {\n            return value\n        }\n    },\n\n);\n\n// schema for list of status\nexport const statusesSchema = [statusSchema]","export const GET_MAPS = 'GET_MAPS'\nexport const GET_MAPS_STARTED = 'GET_MAPS_STARTED'\nexport const GET_MAPS_SUCCESS = 'GET_MAPS_SUCCESS'\nexport const GET_MAPS_FAILURE = 'GET_MAPS_FAILURE'\n\nexport const GET_MAP = 'GET_MAP'\nexport const GET_MAP_STARTED = 'GET_MAP_STARTED'\nexport const GET_MAP_SUCCESS = 'GET_MAP_SUCCESS'\nexport const GET_MAP_FAILURE = 'GET_MAP_FAILURE'\n\nexport const SET_MAP_ATTRIBUTES = 'SET_MAP_ATTRIBUTES'\nexport const SET_CURRENT_MAP = 'SET_CURRENT_MAP'\n","import { useState, useEffect } from 'react';\n\n// Usage\n// function App() {\n//   const size = useWindowSize();\n\n//   return (\n//     <div>\n//       {size.width}px / {size.height}px\n//     </div>\n//   );\n// }\n\n// Hook\nfunction useWindowSize() {\n    // Initialize state with undefined width/height so server and client renders match\n    // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n    const [windowSize, setWindowSize] = useState({\n        width: undefined,\n        height: undefined,\n    });\n\n    // let windowSize = {\n    //     width: undefined,\n    //     height: undefined,\n    // }\n\n    useEffect(() => {\n        // Handler to call on window resize\n        function handleResize() {\n            // Set window width/height to state\n            setWindowSize({\n                width: window.innerWidth,\n                height: window.innerHeight,\n            });\n\n            // windowSize = {\n            //     width: window.innerWidth,\n            //     height: window.innerHeight,\n            // }\n        }\n\n        // Add event listener\n        window.addEventListener(\"resize\", handleResize, {passive:true});\n\n        // Call handler right away so state gets updated with initial window size\n        handleResize();\n\n        // Remove event listener on cleanup\n        return () => window.removeEventListener(\"resize\", handleResize);\n    }, []); // Empty array ensures that effect is only run on mount\n\n    return windowSize;\n}\n\nexport default useWindowSize\n","export const GET_SETTINGS = 'GET_SETTINGS'\nexport const GET_SETTINGS_STARTED = 'GET_SETTINGS_STARTED'\nexport const GET_SETTINGS_SUCCESS = 'GET_SETTINGS_SUCCESS'\nexport const GET_SETTINGS_FAILURE = 'GET_SETTINGS_FAILURE'\n\nexport const POST_SETTINGS = 'POST_SETTINGS'\nexport const POST_SETTINGS_STARTED = 'POST_SETTINGS_STARTED'\nexport const POST_SETTINGS_SUCCESS = 'POST_SETTINGS_SUCCESS'\nexport const POST_SETTINGS_FAILURE = 'POST_SETTINGS_FAILURE'\n\nexport const PUT_SETTINGS = 'PUT_SETTINGS'\nexport const PUT_SETTINGS_STARTED = 'PUT_SETTINGS_STARTED'\nexport const PUT_SETTINGS_SUCCESS = 'PUT_SETTINGS_SUCCESS'\nexport const PUT_SETTINGS_FAILURE = 'PUT_SETTINGS_FAILURE'\n\nexport const DELETE_SETTINGS = 'DELETE_SETTINGS'\nexport const DELETE_SETTINGS_STARTED = 'DELETE_SETTINGS_STARTED'\nexport const DELETE_SETTINGS_SUCCESS = 'DELETE_SETTINGS_SUCCESS'\nexport const DELETE_SETTINGS_FAILURE = 'DELETE_SETTINGS_FAILURE'\n\nexport const POST_TASK_QUEUE = 'POST_TASK_QUEUE'\nexport const POST_TASK_QUEUE_STARTED = 'POST_TASK_QUEUE_STARTED'\nexport const POST_TASK_QUEUE_SUCCESS = 'POST_TASK_QUEUE_SUCCESS'\nexport const POST_TASK_QUEUE_FAILURE = 'POST_TASK_QUEUE_FAILURE'\nexport const DEVICE_ENABLED = 'DEVICE_ENABLED'\n","// status types\n\n// get\n// ***************\nexport const GET_STATUS = 'GET_STATUS'\nexport const GET_STATUS_STARTED = 'GET_STATUS_STARTED'\nexport const GET_STATUS_SUCCESS = 'GET_STATUS_SUCCESS'\nexport const GET_STATUS_FAILURE = 'GET_STATUS_FAILURE'\n// ~~~~~~~~~~~~~~~\n\n// post\n// ***************\nexport const POST_STATUS = 'POST_STATUS'\nexport const POST_STATUS_STARTED = 'POST_STATUS_STARTED'\nexport const POST_STATUS_SUCCESS = 'POST_STATUS_SUCCESS'\nexport const POST_STATUS_FAILURE = 'POST_STATUS_FAILURE'\n// ~~~~~~~~~~~~~~~\n","import axios from 'axios';\n// import * as log from 'loglevel';\n\nimport logger from '../logger'\n\nimport { apiIPAddress } from '../settings/settings'\n\n\nimport store from '../redux/store'\nconst token = store.getState().cognotoUserSession\n\nconst operator = 'devices'\nconst log = logger.getLogger('Api')\n\n\nexport async function getDevices() {\n    try {\n        const response = await axios({\n            method: 'get',\n            url: apiIPAddress() + operator,\n            headers: {\n                'X-API-Key': '123456',\n                'Access-Control-Allow-Origin': '*'\n            }\n            // token: token.username\n        });\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        return dataJson;     \n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n\n}\n\nexport async function deleteDevices(ID) {\n    try {\n        const response = await axios({\n            method: 'DELETE',\n            url: apiIPAddress() + operator + '/' + ID,\n            headers: {\n                'Accept': 'application/json',\n                'X-API-Key': '123456',\n            },\n        });\n\n        // Success 🎉\n        // log.debug('response',response);\n        // const data = response.data;\n        // const dataJson = JSON.parse(data)\n        return response;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}\n\nexport async function postDevices(devices) {\n    try {\n        const response = await axios({\n            method: 'POST',\n            url: apiIPAddress() + operator,\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n                'X-API-Key': '123456',\n            },\n            data: devices\n        });\n\n        // Success 🎉\n        // log.debug('response',response);\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        // log.debug('response data json',dataJson);\n\n\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}\n\nexport async function putDevices(device, ID) {\n    try {\n        const response = await axios({\n            method: 'PUT',\n            url: apiIPAddress() + operator + '/' + ID,\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'text/html',\n                'X-API-Key': '123456',\n            },\n            data: device\n        });\n\n        // Success 🎉\n        // log.debug('response',response);\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        return dataJson;\n\n\n    } catch (error) {\n\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}\n","import { normalize, schema } from 'normalizr';\n\nimport {\n    GET_DEVICES,\n    GET_DEVICES_STARTED,\n    GET_DEVICES_SUCCESS,\n    GET_DEVICES_FAILURE,\n\n    POST_DEVICES,\n    POST_DEVICES_STARTED,\n    POST_DEVICES_SUCCESS,\n    POST_DEVICES_FAILURE,\n\n    PUT_DEVICES,\n    PUT_DEVICES_STARTED,\n    PUT_DEVICES_SUCCESS,\n    PUT_DEVICES_FAILURE,\n\n    DELETE_DEVICES,\n    DELETE_DEVICES_STARTED,\n    DELETE_DEVICES_SUCCESS,\n    DELETE_DEVICES_FAILURE,\n} from '../types/devices_types'\n\nimport * as api from '../../api/devices_api'\nimport { devicesSchema } from '../../normalizr/schema';\n\n\nexport const getDevices = () => {\n    return async dispatch => {\n        function onStart() {\n            dispatch({ type: GET_DEVICES_STARTED });\n        }\n        function onSuccess(response) {\n            dispatch({ type: GET_DEVICES_SUCCESS, payload: response });\n            return response;\n        }\n        function onError(error) {\n            dispatch({ type: GET_DEVICES_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const devices = await api.getDevices();\n            devices.forEach((device, ind) => {\n                if (!(device.position === undefined)) {\n                    devices[ind].position.pos_x = device.position.x\n                    devices[ind].position.pos_y = device.position.y\n                }\n            })\n\n            // Uncomment when you want to make devices an object\n            const normalizedDevices = normalize(devices, devicesSchema);\n            return onSuccess(normalizedDevices.entities.devices)\n            // return onSuccess(devices)\n        } catch (error) {\n            return onError(error)\n        }\n    }\n}\nexport const postDevices = (devices) => {\n    return async dispatch => {\n        function onStart() {\n            dispatch({ type: POST_DEVICES_STARTED });\n        }\n        function onSuccess(response) {\n            dispatch({ type: POST_DEVICES_SUCCESS, payload: response });\n            return response;\n        }\n        function onError(error) {\n            dispatch({ type: POST_DEVICES_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const newDevices = await api.postDevices(devices);\n            return onSuccess(newDevices)\n        } catch (error) {\n            return onError(error)\n        }\n    }\n}\nexport const putDevices = (device, ID) => {\n    return async dispatch => {\n        function onStart() {\n            dispatch({ type: PUT_DEVICES_STARTED });\n        }\n        function onSuccess(response) {\n            dispatch({ type: PUT_DEVICES_SUCCESS, payload: response });\n            return response;\n        }\n        function onError(error) {\n            dispatch({ type: PUT_DEVICES_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const updateDevices = await api.putDevices(device, ID);\n            return onSuccess(updateDevices)\n        } catch (error) {\n            return onError(error)\n        }\n    }\n}\nexport const deleteDevices = (ID) => {\n    return async dispatch => {\n        function onStart() {\n            dispatch({ type: DELETE_DEVICES_STARTED });\n        }\n        function onSuccess(response) {\n            dispatch({ type: DELETE_DEVICES_SUCCESS, payload: ID });\n            return response;\n        }\n        function onError(error) {\n            dispatch({ type: DELETE_DEVICES_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const removeDevices = await api.deleteDevices(ID);\n            return onSuccess(ID)\n        } catch (error) {\n            return onError(error)\n        }\n    }\n}\n\nexport const updateDevices = (devices, d3) => {\n    return { type: 'UPDATE_DEVICES', payload: { devices, d3 } }\n}\n\nexport const setSelectedDevice = (device) => {\n    return { type: 'SET_SELECTED_DEVICE', payload: device }\n}\n","export const GET_NOTIFICATIONS = 'GET_NOTIFICATIONS'\nexport const GET_NOTIFICATIONS_STARTED = 'GET_NOTIFICATIONS_STARTED'\nexport const GET_NOTIFICATIONS_SUCCESS = 'GET_NOTIFICATIONS_SUCCESS'\nexport const GET_NOTIFICATIONS_FAILURE = 'GET_NOTIFICATIONS_FAILURE'\n\nexport const POST_NOTIFICATIONS = 'POST_NOTIFICATIONS'\nexport const POST_NOTIFICATIONS_STARTED = 'POST_NOTIFICATIONS_STARTED'\nexport const POST_NOTIFICATIONS_SUCCESS = 'POST_NOTIFICATIONS_SUCCESS'\nexport const POST_NOTIFICATIONS_FAILURE = 'POST_NOTIFICATIONS_FAILURE'\n\nexport const PUT_NOTIFICATION = 'PUT_NOTIFICATIONS'\nexport const PUT_NOTIFICATION_STARTED = 'PUT_NOTIFICATIONS_STARTED'\nexport const PUT_NOTIFICATION_SUCCESS = 'PUT_NOTIFICATIONS_SUCCESS'\nexport const PUT_NOTIFICATION_FAILURE = 'PUT_NOTIFICATIONS_FAILURE'\n\nexport const DELETE_NOTIFICATIONS = 'DELETE_NOTIFICATIONS'\nexport const DELETE_NOTIFICATIONS_STARTED = 'DELETE_NOTIFICATIONS_STARTED'\nexport const DELETE_NOTIFICATIONS_SUCCESS = 'DELETE_NOTIFICATIONS_SUCCESS'\nexport const DELETE_NOTIFICATIONS_FAILURE = 'DELETE_NOTIFICATIONS_FAILURE'\n\nexport const DELETE_NOTIFICATION = 'DELETE_NOTIFICATIONS'\nexport const DELETE_NOTIFICATION_STARTED = 'DELETE_NOTIFICATIONS_STARTED'\nexport const DELETE_NOTIFICATION_SUCCESS = 'DELETE_NOTIFICATIONS_SUCCESS'\nexport const DELETE_NOTIFICATION_FAILURE = 'DELETE_NOTIFICATIONS_FAILURE'\n\n\nexport const TOGGLE_NOTIFICATION_TASK_QUEUE = 'TOGGLE_NOTIFICATION_TASK_QUEUE'\n","export const GET_REFRESH_TOKEN = 'GET_REFRESH_TOKEN'\nexport const GET_REFRESH_TOKEN_STARTED = 'GET_REFRESH_TOKEN_STARTED'\nexport const GET_REFRESH_TOKEN_SUCCESS = 'GET_REFRESH_TOKEN_SUCCESS'\nexport const GET_REFRESH_TOKEN_FAILURE = 'GET_REFRESH_TOKEN_FAILURE'\n\nexport const POST_REFRESH_TOKEN = 'POST_REFRESH_TOKEN'\nexport const POST_REFRESH_TOKEN_STARTED = 'POST_REFRESH_TOKEN_STARTED'\nexport const POST_REFRESH_TOKEN_SUCCESS = 'POST_REFRESH_TOKEN_SUCCESS'\nexport const POST_REFRESH_TOKEN_FAILURE = 'POST_REFRESH_TOKEN_FAILURE'","export const hexToRGBA = (hex, alpha) => {\n  const RR = parseInt(hex.slice(1, 3), 16);\n  const GG = parseInt(hex.slice(3, 5), 16);\n  const BB = parseInt(hex.slice(5, 7), 16);\n\n  return `rgba(${RR}, ${GG}, ${BB}${alpha && `, ${alpha}`})`;\n};\n\nexport function LightenDarkenColor(col,amt) {\n    var usePound = false;\n    if ( col[0] === \"#\" ) {\n        col = col.slice(1);\n        usePound = true;\n    }\n\n    var num = parseInt(col,16);\n\n    var r = (num >> 16) + amt;\n\n    if ( r > 255 ) r = 255;\n    else if  (r < 0) r = 0;\n\n    var b = ((num >> 8) & 0x00FF) + amt;\n\n    if ( b > 255 ) b = 255;\n    else if  (b < 0) b = 0;\n\n    var g = (num & 0x0000FF) + amt;\n\n    if ( g > 255 ) g = 255;\n    else if  ( g < 0 ) g = 0;\n\n    return (usePound?\"#\":\"\") + (g | (b << 8) | (r << 16)).toString(16);\n}\n\n// export function pSBC(p,c0,c1,l){\n//     let r,g,b,P,f,t,h,i=parseInt,m=Math.round,a=typeof(c1)==\"string\";\n//     if(typeof(p)!=\"number\"||p<-1||p>1||typeof(c0)!=\"string\"||(c0[0]!='r'&&c0[0]!='#')||(c1&&!a))return null;\n//     if(!this.pSBCr)this.pSBCr=(d)=>{\n//         let n=d.length,x={};\n//         if(n>9){\n//             [r,g,b,a]=d=d.split(\",\"),n=d.length;\n//             if(n<3||n>4)return null;\n//             x.r=i(r[3]==\"a\"?r.slice(5):r.slice(4)),x.g=i(g),x.b=i(b),x.a=a?parseFloat(a):-1\n//         }else{\n//             if(n==8||n==6||n<4)return null;\n//             if(n<6)d=\"#\"+d[1]+d[1]+d[2]+d[2]+d[3]+d[3]+(n>4?d[4]+d[4]:\"\");\n//             d=i(d.slice(1),16);\n//             if(n==9||n==5)x.r=d>>24&255,x.g=d>>16&255,x.b=d>>8&255,x.a=m((d&255)/0.255)/1000;\n//             else x.r=d>>16,x.g=d>>8&255,x.b=d&255,x.a=-1\n//         }return x};\n//     h=c0.length>9,h=a?c1.length>9?true:c1==\"c\"?!h:false:h,f=this.pSBCr(c0),P=p<0,t=c1&&c1!=\"c\"?this.pSBCr(c1):P?{r:0,g:0,b:0,a:-1}:{r:255,g:255,b:255,a:-1},p=P?p*-1:p,P=1-p;\n//     if(!f||!t)return null;\n//     if(l)r=m(P*f.r+p*t.r),g=m(P*f.g+p*t.g),b=m(P*f.b+p*t.b);\n//     else r=m((P*f.r**2+p*t.r**2)**0.5),g=m((P*f.g**2+p*t.g**2)**0.5),b=m((P*f.b**2+p*t.b**2)**0.5);\n//     a=f.a,t=t.a,f=a>=0||t>=0,a=f?a<0?t:t<0?a:a*P+t*p:0;\n//     if(h)return\"rgb\"+(f?\"a(\":\"(\")+r+\",\"+g+\",\"+b+(f?\",\"+m(a*1000)/1000:\"\")+\")\";\n//     else return\"#\"+(4294967296+r*16777216+g*65536+b*256+(f?m(a*255):0)).toString(16).slice(1,f?undefined:-2)\n// }\n\nexport const RGB_Linear_Blend=(p,c0,c1)=>{\n    var i=parseInt,r=Math.round,P=1-p,[a,b,c,d]=c0.split(\",\"),[e,f,g,h]=c1.split(\",\"),x=d||h,j=x?\",\"+(!d?h:!h?d:r((parseFloat(d)*P+parseFloat(h)*p)*1000)/1000+\")\"):\")\";\n    return\"rgb\"+(x?\"a(\":\"(\")+r(i(a[3]===\"a\"?a.slice(5):a.slice(4))*P+i(e[3]==\"a\"?e.slice(5):e.slice(4))*p)+\",\"+r(i(b)*P+i(f)*p)+\",\"+r(i(c)*P+i(g)*p)+j;\n}\n\nexport const RGB_Linear_Shade=(p,c)=>{\n    var i=parseInt,r=Math.round,[a,b,c,d]=c.split(\",\"),P=p<0,t=P?0:255*p,P=P?1+p:1-p;\n    return\"rgb\"+(d?\"a(\":\"(\")+r(i(a[3]===\"a\"?a.slice(5):a.slice(4))*P+t)+\",\"+r(i(b)*P+t)+\",\"+r(i(c)*P+t)+(d?\",\"+d:\")\");\n}\n\nexport const RGB_Log_Blend=(p,c0,c1)=>{\n    var i=parseInt,r=Math.round,P=1-p,[a,b,c,d]=c0.split(\",\"),[e,f,g,h]=c1.split(\",\"),x=d||h,j=x?\",\"+(!d?h:!h?d:r((parseFloat(d)*P+parseFloat(h)*p)*1000)/1000+\")\"):\")\";\n    return\"rgb\"+(x?\"a(\":\"(\")+r((P*i(a[3]===\"a\"?a.slice(5):a.slice(4))**2+p*i(e[3]==\"a\"?e.slice(5):e.slice(4))**2)**0.5)+\",\"+r((P*i(b)**2+p*i(f)**2)**0.5)+\",\"+r((P*i(c)**2+p*i(g)**2)**0.5)+j;\n}\n\nexport const RGB_Log_Shade=(p,c)=>{\n    var i=parseInt,r=Math.round,[a,b,c,d]=c.split(\",\"),P=p<0,t=P?0:p*255**2,P=P?1+p:1-p;\n    return\"rgb\"+(d?\"a(\":\"(\")+r((P*i(a[3]===\"a\"?a.slice(5):a.slice(4))**2+t)**0.5)+\",\"+r((P*i(b)**2+t)**0.5)+\",\"+r((P*i(c)**2+t)**0.5)+(d?\",\"+d:\")\");\n}\n","import React from 'react'\n\nimport { useDispatch, useSelector } from 'react-redux'\n\n// Import utils\nimport { deepCopy } from './utils'\nimport { convertRealToD3 } from './map_utils'\n\n// Import Store\nimport store from '../../redux/store/index'\n\n\n/**\n * All of these coordinates have been calc by adjusting them on map with chrome dev tools\n * @param {*} location\n * @param {*} rd3tClassName\n * @param {*} d3\n */\n\n\nexport const locationsSortedAlphabetically = (locations) => {\n\n    const locationsCopy = deepCopy(locations)\n\n    locationsCopy.sort((a, b) => {\n        const aName = a.name\n        const bName = b.name\n\n        if (aName < bName) return -1\n        if (aName > bName) return 1\n        return 0\n    })\n\n    return locationsCopy\n}\n\nexport const editing = () => {\n    const editingPosition = store.getState().positionsReducer.editingPosition\n    const editingStation = store.getState().stationsReducer.editingStation\n\n    return !!editingStation ? editingStation : editingPosition\n\n}\n\n\n/**\n * This function compares existing vs incoming locations\n * \n * If the incoming location exists in existing locations then use the incoming location info but update the x and y from existing\n * Using x and y from existing because those values correlate with the local map's d3 state\n * \n * If an incoming location is not in existing locations that means it was added by another client\n * Make sure to update the new locations x and y values to match the local map's d3\n * \n * @param {object} existingStations \n * @param {object} incomingStations \n */\nexport const compareExistingVsIncomingLocations = (incomingLocations, existingLocations, d3) => {\n\n    Object.values(existingLocations).forEach(existingLocation => {\n\n        // If the location exists in the backend and frontend, take the new locations, but assign local x and y\n        if (existingLocation._id in incomingLocations) {\n            Object.assign(incomingLocations[existingLocation._id], { x: existingLocation.x, y: existingLocation.y })\n        }\n\n        // This was an attempt to fix incoming locations that had their position changed\n        // Didn't work\n        // But that should be obvious\n        // Cause if it did\n        // It wouldnt be commented\n        // Duh.\n        // if (existingLocation._id in incomingLocations && (incomingLocations[existingLocation._id].pos_x !== existingLocation.pos_x || incomingLocations[existingLocation._id].pos_y !== existingLocation.pos_y)) {\n        //     let x, y\n        //     [x, y] = convertRealToD3([incomingLocations[existingLocation._id].pos_x, incomingLocations[existingLocation._id].pos_y], d3)\n\n        //     Object.assign(incomingLocations[existingLocation._id], { x: x, y: y })\n        // }\n\n\n        // If the existing location is  new then make sure to pass it in\n        else if (existingLocation.new == true) {\n            incomingLocations[existingLocation._id] = existingLocation\n        }\n\n    })\n\n    // Compare incoming vs existing\n    Object.values(incomingLocations).forEach(incomingLocation => {\n\n        // Handles deleted Positions on the backend\n        if (!!incomingLocation.change_key && incomingLocation.change_key === 'deleted') {\n            delete incomingLocations[incomingLocation._id]\n        }\n\n        // If the incoming location is not in existing location, its a new location\n        if (!incomingLocation._id in existingLocations) {\n            let x, y\n            // If it's a new station, make sure to update it's coords to d3 coords on the local map\n            [x, y] = convertRealToD3([incomingLocation.pos_x, incomingLocation.pos_y], d3)\n            incomingLocation = {\n                ...incomingLocation,\n                x: x,\n                y: y,\n            }\n\n        }\n    })\n\n    return incomingLocations\n}","import {deepCopy} from \"./utils\";\nimport {SORT_MODES} from \"../../constants/common_contants\";\n\nconst EVENT_NAMES = {\n\tCREATE: \"create\",\n\tUPDATE: \"update\"\n}\n\nexport const generateBinId = (index, stationId) => {\n\treturn index + \"+\" + stationId\n}\nexport const parseMessageFromEvent = (eventName, username, data) => {\n\tswitch(eventName) {\n\n\t\tcase EVENT_NAMES.CREATE:\n\t\t\treturn [`Created card`]\n\n\t\tcase EVENT_NAMES.UPDATE:\n\t\t\tlet msgs = []\n\n\t\t\tconst keys = Object.keys(data)\n\t\t\tkeys.forEach((currKey) => {\n\t\t\t\tconst {\n\t\t\t\t\tnew: newVal,\n\t\t\t\t\told: oldVal,\n\t\t\t\t} = data[currKey]\n\n\t\t\t\tif(oldVal) {\n\t\t\t\t\tmsgs.push(`Changed ${currKey} from \"${oldVal}\" to \"${newVal}\"`)\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tmsgs.push(`Set ${currKey} to \"${newVal}\"`)\n\t\t\t\t}\n\n\n\t\t\t})\n\n\t\t\t// if(msgs.length === 0) msgs.push(\"No info found\")\n\n\t\t\treturn msgs\n\n\t\tdefault:\n\t\t\treturn [`${eventName} performed by ${username}`]\n\t}\n}\n\n/*\n* Converts date from a card into a JS date object\n*\n* The card date object contains key, value pairs for year, month, and date\n* These values are extracted, and if the values are valid, used to generate a new Date objects\n*\n* returns a JS Date object if the card date is valid, and null otherwise\n*\n* @param {object} cardDate - object containing year, month and date keys\n* */\nexport const convertCardDate = (cardDate) => {\n\tconst year = cardDate?.year || 0\n\tconst month = cardDate?.month || 0\n\tconst day = cardDate?.day || 0\n\n\treturn (year && (month + 1) && day) ? new Date(year, month + 1, day, 0, 0, 0, 0) : null\n}\n\n/*\n* This function receives an array of cards as an argument and sorts them based on the {sortMode} argument.\n*\n* The original array is modified in place - THIS WILL MODIFY THE ARRAY - pass a copy if the original array shouldn't be modified\n*\n* @param {array} arr - array of cards\n* @param {string} sortMode - string identifier of mode to sort by\n* */\nexport const sortBy = (arr, sortMode) => {\n\n\tswitch(sortMode) {\n\t\tcase SORT_MODES.QUANTITY_ASCENDING: {\n\t\t\tarr.sort((itemA, itemB) => {\n\t\t\t\tconst { count: countA } = itemA\n\n\t\t\t\tconst { count: countB } = itemB\n\n\t\t\t\tif(parseInt(countA) >= parseInt(countB)) return 1\n\t\t\t\treturn -1\n\t\t\t})\n\n\t\t\tbreak\n\t\t}\n\t\tcase SORT_MODES.QUANTITY_DESCENDING: {\n\t\t\tarr.sort((itemA, itemB) => {\n\t\t\t\tconst { count: countA } = itemA\n\n\t\t\t\tconst { count: countB } = itemB\n\n\t\t\t\tif(parseInt(countA) < parseInt(countB)) return 1\n\t\t\t\treturn -1\n\t\t\t})\n\n\t\t\tbreak\n\t\t}\n\n\t\tcase SORT_MODES.NAME_ASCENDING: {\n\t\t\tarr.sort((itemA, itemB) => {\n\t\t\t\tconst { name: nameA } = itemA\n\n\t\t\t\tconst { name: nameB } = itemB\n\n\t\t\t\tif(nameA >= nameB) return 1\n\t\t\t\treturn -1\n\t\t\t})\n\t\t\tbreak\n\t\t}\n\n\t\tcase SORT_MODES.NAME_DESCENDING: {\n\t\t\tarr.sort((itemA, itemB) => {\n\t\t\t\tconst { name: nameA } = itemA\n\n\t\t\t\tconst { name: nameB } = itemB\n\n\t\t\t\tif(nameA < nameB) return 1\n\t\t\t\treturn -1\n\t\t\t})\n\t\t\tbreak\n\t\t}\n\n\t\tcase SORT_MODES.END_DESCENDING: {\n\t\t\tarr.sort((itemA, itemB) => {\n\t\t\t\tconst { end_date: endDateA } = itemA\n\t\t\t\tconst convertedA = convertCardDate(endDateA)\n\n\t\t\t\tconst { end_date: endDateB } = itemB\n\t\t\t\tconst convertedB = convertCardDate(endDateB)\n\n\t\t\t\tif(!convertedA) return 1\n\t\t\t\tif(convertedA > convertedB) return -1\n\t\t\t\treturn 1\n\t\t\t})\n\n\t\t\tbreak\n\t\t}\n\t\tcase SORT_MODES.END_ASCENDING: {\n\t\t\tarr.sort((itemA, itemB) => {\n\t\t\t\tconst { end_date: endDateA } = itemA\n\t\t\t\tconst convertedA = convertCardDate(endDateA)\n\n\t\t\t\tconst { end_date: endDateB } = itemB\n\t\t\t\tconst convertedB = convertCardDate(endDateB)\n\n\t\t\t\tif(!convertedA) return 1\n\t\t\t\tif(convertedA >= convertedB) return 1\n\t\t\t\treturn -1\n\t\t\t})\n\n\t\t\tbreak\n\t\t}\n\t\tcase SORT_MODES.START_DESCENDING: {\n\t\t\tarr.sort((itemA, itemB) => {\n\t\t\t\tconst { start_date: startDateA } = itemA\n\t\t\t\tconst convertedA = convertCardDate(startDateA)\n\n\t\t\t\tconst { start_date: startDateB } = itemB\n\t\t\t\tconst convertedB = convertCardDate(startDateB)\n\n\t\t\t\tif(!convertedA) return 1\n\t\t\t\tif(convertedA > convertedB) return -1\n\t\t\t\treturn 1\n\t\t\t})\n\t\t\tbreak\n\t\t}\n\t\tcase SORT_MODES.START_ASCENDING: {\n\t\t\tarr.sort((itemA, itemB) => {\n\t\t\t\tconst { start_date: startDateA } = itemA\n\t\t\t\tconst convertedA = convertCardDate(startDateA)\n\n\t\t\t\tconst { start_date: startDateB } = itemB\n\t\t\t\tconst convertedB = convertCardDate(startDateB)\n\n\t\t\t\tif(!convertedA) return 1\n\t\t\t\tif(convertedA >= convertedB) return 1\n\t\t\t\treturn -1\n\t\t\t})\n\t\t\tbreak\n\t\t}\n\n\t}\n\n\treturn arr\n}","export const getMessageFromError = (err) => {\n    if(err) {\n\n        // err is array\n        if( Array.isArray(err) ) {\n            const firstErr = err[0] // get first item from arr and call recursively\n            return getMessageFromError(firstErr)\n\n        }\n\n        // err is object\n        if(typeof(err) === \"object\") {\n            const firstErr = Object.values(err) // convert to arr and call recursively\n            return getMessageFromError(firstErr)\n        }\n\n        // err is string - return\n        if(typeof(err) === \"string\") {\n            return err;\n        }\n    }\n\n    // default message\n    return \"Error.\"\n}","import log from 'loglevel';\n// import remote from 'loglevel-plugin-remote';\n\n\n/*\n\nNote on log levels:\n\nTrace - Only when I would be \"tracing\" the code and trying to find one part of a function specifically.\n\nDebug - Information that is diagnostically helpful to people more than just developers (IT, sysadmins, etc.).\n\nlog - Equivalent to Debug\n\nInfo - Generally useful information to log (service start/stop, configuration assumptions, etc). Info I want to always have available but usually don't care about under normal circumstances. This is my out-of-the-box config level.\n\nWarn - Anything that can potentially cause application oddities, but for which I am automatically recovering. (Such as switching from a primary to backup server, retrying an operation, missing secondary data, etc.)\n\nError - Any error which is fatal to the operation, but not the service or application (can't open a required file, missing data, etc.). These errors will force user (administrator, or direct user) intervention. These are usually reserved (in my apps) for incorrect connection strings, missing services, etc.\n\n*/\n\n/* uncomment for remote logging\nconst customJSON = log => ({\n   msg: log.message,\n   level: log.level.label,\n   stacktrace: log.stacktrace\n});\n\n\nremote.apply(log, { format: customJSON, url: '/logger' });\n\n*/\n\n/*\nObject.defineProperty(log, \"category\", {\n  value: \"root\",\n  writable: true\n})\n*/\n\nconst getLogger = log.getLogger;\n\nlog.getLogger = function getLoggerAndSetCategory(name, category) {\n    const logger = getLogger(name);\n\n    if(category) {\n        Object.defineProperty(logger, \"category\", {\n          value: category,\n          writable: true\n        })\n    }\n\n    return logger;\n};\n\nlog.getCategoryLoggers = function(category) {\n  const loggers = Object.values(log.getLoggers());\n  const categoryLoggers = [];\n\n  loggers.forEach((logger, index) => {\n    if(logger.category == category) categoryLoggers.push(logger);\n  });\n\n  return categoryLoggers;\n};\n\n// var originalFactory = log.methodFactory;\n\n// log.methodFactory = function (methodName, logLevel, loggerName) {\n//     var rawMethod = originalFactory(methodName, logLevel, loggerName);\n//\n//     return function (message) {\n//         rawMethod(\"Newsflash: \" + message);\n//     };\n// };\n// log.setLevel(log.getLevel());\n\nexport default log;\n\n\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n    width: 100%;\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    position: relative;\n\n    overscroll-behavior: contain;\n`\n\nexport const ContentContainer = styled.div`\n    width: 100%;\n    height: 100%;\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n\n    overscroll-behavior: contain;\n\n`\n\nexport const HeaderContainer = styled.div`\n`\n\nexport const BodyContainer = styled.div`\n    position: relative;\n\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    overflow: auto;\n    \n`\n","//This API is used to handle calls to the local storage\n\nimport logger from '../logger'\nimport {\n    BrowserView,\n    MobileView,\n    isBrowser,\n    isMobile\n} from \"react-device-detect\";\nimport {defaultLocalSettings} from \"../constants/local_settings_constants\";\n\nconst log = logger.getLogger('LocalStorage')\n\nexport async function getLoggers() {\n\n    // retrieve data from localStorage\n    // currently stored under the key \"logger-config-123\"\n    // this key could be set to a user id to save settings for a specific user\n    var loggerConfig = localStorage.getItem(\"logger-config-123\");\n    if (loggerConfig) {\n        loggerConfig = JSON.parse(loggerConfig);\n        return loggerConfig;\n    }\n\n}\n\nexport async function postLoggers(settings) {\n\n    const loggerConfig = localStorage.setItem(\"logger-config-123\", JSON.stringify(settings));\n    return loggerConfig;\n}\n\nexport const postLocalSettings = async (settings) => {\n\n    console.log(settings)\n\n    // NOTE: localStorage.setItem returns undefined, so can't use this return value for anything\n    const localSettings = localStorage.setItem(\"local-settings-config\", JSON.stringify(settings))\n    return localSettings\n}\n\nexport const deleteLocalSettings = async () => {\n    localStorage.removeItem(\"local-settings-config\")\n    \n}\n\nexport const getLocalSettings = async () => {\n    let localSettings = localStorage.getItem(\"local-settings-config\");\n\n    if (localSettings !== null) {\n\n        localSettings = JSON.parse(localSettings);\n\n        console.log(localSettings)\n        return localSettings;\n    }\n    // Posts settigns to the backend if there's nothing there\n    else {\n        const settings = await postLocalSettings(defaultLocalSettings)\n        return defaultLocalSettings\n    }\n}\n","// These actions are used for local API calls to local storage\n\nimport {\n  GET_LOGGERS,\n  GET_LOGGERS_STARTED,\n  GET_LOGGERS_SUCCESS,\n  GET_LOGGERS_FAILURE,\n\n  POST_LOGGERS,\n  POST_LOGGERS_STARTED,\n  POST_LOGGERS_SUCCESS,\n  POST_LOGGERS_FAILURE,\n\n  GET_LOCAL_SETTINGS,\n  GET_LOCAL_SETTINGS_STARTED,\n  GET_LOCAL_SETTINGS_SUCCESS,\n  GET_LOCAL_SETTINGS_FAILURE,\n\n  POST_LOCAL_SETTINGS,\n  POST_LOCAL_SETTINGS_STARTED,\n  POST_LOCAL_SETTINGS_SUCCESS,\n  POST_LOCAL_SETTINGS_FAILURE,\n\n  STOP_API_CALLS,\n\n} from '../types/local_types';\n\nimport * as api from '../../api/local_api';\n\n// import logger\nimport log from '../../logger.js';\n\nconst logger = log.getLogger(\"Actions\", \"Redux\");\n\nexport const getLoggers = () => {\n    return async dispatch => {\n        function onStart() {\n            dispatch({ type: GET_LOGGERS_STARTED });\n          }\n          function onSuccess(response) {\n            dispatch({ type: GET_LOGGERS_SUCCESS, payload: response });\n            return response;\n          }\n          function onError(error) {\n            dispatch({ type: GET_LOGGERS_FAILURE, payload: error });\n            return error;\n          }\n\n        try {\n            onStart();\n            const loggers = await api.getLoggers();\n\n            return onSuccess(loggers)\n        } catch(error) {\n            return onError(error)\n        }\n    }\n}\nexport const postLoggers =  (loggers, loaded) => {\n  return async dispatch => {\n        async function onStart() {\n          dispatch({ type: POST_LOGGERS_STARTED });\n        }\n        async function onSuccess(response) {\n          dispatch({ type: POST_LOGGERS_SUCCESS, payload: loggers });\n          return response;\n        }\n        async function onError(error) {\n          dispatch({ type: POST_LOGGERS_FAILURE, payload: error });\n          return error;\n        }\n\n      try {\n          onStart();\n\n          if(loaded) {\n              const newLoggers = await api.postLoggers(loggers);\n              return await onSuccess(newLoggers);\n          } else {\n              return await onSuccess(loggers);\n          }\n\n\n      } catch(error) {\n          return onError(error)\n      }\n  }\n}\n\nexport const getLocalSettings = () => {\n  return async dispatch => {\n      function onStart() {\n          dispatch({ type: GET_LOCAL_SETTINGS_STARTED });\n        }\n        function onSuccess(response) {\n          dispatch({ type: GET_LOCAL_SETTINGS_SUCCESS, payload: response });\n          return response;\n        }\n        function onError(error) {\n          dispatch({ type: GET_LOCAL_SETTINGS_FAILURE, payload: error });\n          return error;\n        }\n\n      try {\n          onStart();\n          const localSettings = await api.getLocalSettings();\n          return onSuccess(localSettings)\n      } catch(error) {\n          return onError(error)\n      }\n  }\n}\n\nexport const postLocalSettings =  (settings) => {\n  return async dispatch => {\n        async function onStart() {\n          dispatch({ type: POST_LOCAL_SETTINGS_STARTED });\n        }\n        async function onSuccess(response) {\n          dispatch({ type: POST_LOCAL_SETTINGS_SUCCESS, payload: settings });\n          return response;\n        }\n        async function onError(error) {\n          dispatch({ type: POST_LOCAL_SETTINGS_FAILURE, payload: error });\n          return error;\n        }\n\n      try {\n          onStart();\n          const localSettings = await api.postLocalSettings(settings);\n          return await onSuccess(localSettings)\n      } catch(error) {\n          return onError(error)\n      }\n  }\n}\n\nexport const stopAPICalls = (bool) => {\n    return { type: STOP_API_CALLS, payload: bool }\n}\n","import axios from 'axios';\n\nimport {apiIPAddress} from '../settings/settings';\n\nimport log from '../logger';\n\nimport store from '../redux/store'\nconst token = store.getState().cognotoUserSession\n\nconst logger = log.getLogger('Map_Api', \"Map\");\n\nconst operator = 'site_maps';\n\nexport async function getMaps() {\n  try {\n    const response = await axios({\n      method: 'GET',\n      url: apiIPAddress() + operator,\n      headers: {\n        'X-API-Key': '123456',\n        'Access-Control-Allow-Origin': '*'\n    }\n    });\n\n    // Success 🎉\n    // log.debug('res',response);\n\n    const data = response.data;\n    const dataJson = JSON.parse(data);\n\n    return dataJson;\n\n\n} catch (error) {\n\n    // Error 😨\n    if (error.response) {\n        /*\n         * The request was made and the server responded with a\n         * status code that falls out of the range of 2xx\n         */\n        logger.debug('error.response.data', error.response.data);\n        logger.debug('error.response.status',error.response.status);\n        logger.debug('error.response.headers',error.response.headers);\n    } else if (error.request) {\n        /*\n         * The request was made but no response was received, `error.request`\n         * is an instance of XMLHttpRequest in the browser and an instance\n         * of http.ClientRequest in Node.js\n         */\n        logger.debug('error.request', error.request);\n    } else {\n        // Something happened in setting up the request and triggered an Error\n        logger.debug('error.message', error.message);\n    }\n\n    logger.debug('error', error);\n    throw error;\n  }\n\n\n}\n\nexport async function getMap(map_id) {\n  try {\n    const response = await axios({\n      method: 'GET',\n      url: apiIPAddress() + operator + '/' + map_id,\n      headers: {\n        'Accept': 'application/json',\n        'X-API-Key': '123456',\n      },\n  });\n\n  // Success 🎉\n  logger.debug('getMap: response',response);\n\n  const data = response.data;\n  const dataJson = JSON.parse(data)\n  return dataJson;\n\n\n  } catch (error) {\n\n      // Error 😨\n      if (error.response) {\n          /*\n           * The request was made and the server responded with a\n           * status code that falls out of the range of 2xx\n           */\n          logger.debug('error.response.data', error.response.data);\n          logger.debug('error.response.status',error.response.status);\n          logger.debug('error.response.headers',error.response.headers);\n      } else if (error.request) {\n          /*\n           * The request was made but no response was received, `error.request`\n           * is an instance of XMLHttpRequest in the browser and an instance\n           * of http.ClientRequest in Node.js\n           */\n          logger.debug('error.request', error.request);\n      } else {\n          // Something happened in setting up the request and triggered an Error\n          logger.debug('error.message', error.message);\n      }\n      logger.debug('error', error);\n    }\n}\n","import {\n    GET_MAPS,\n    GET_MAPS_STARTED,\n    GET_MAPS_SUCCESS,\n    GET_MAPS_FAILURE,\n\n    GET_MAP,\n    GET_MAP_STARTED,\n    GET_MAP_SUCCESS,\n    GET_MAP_FAILURE,\n\n    SET_MAP_ATTRIBUTES,\n    SET_CURRENT_MAP,\n    SET_MAP_ZOOM\n} from '../types/map_types'\n\n\nimport * as api from '../../api/map_api'\n\n// get all maps\n// ******************************\nexport const getMaps = () => {\n  return async dispatch => {\n\n    function onStart() {\n      dispatch({ type: GET_MAPS_STARTED });\n    }\n    function onSuccess(response) {\n      dispatch({ type: GET_MAPS_SUCCESS, payload: response });\n      return response;\n    }\n    function onError(error) {\n      dispatch({ type: GET_MAPS_FAILURE, payload: error });\n      return error;\n    }\n\n    try {\n      onStart();\n      const maps = await api.getMaps();\n      return onSuccess(maps);\n    } catch (error) {\n      return onError(error);\n    }\n  };\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// get map details\n// ******************************\nexport const getMap = (map_id) => {\n    return async dispatch => {\n\n      function onStart() {\n        dispatch({ type: GET_MAP_STARTED });\n      }\n      function onSuccess(response) {\n        dispatch({ type: GET_MAP_SUCCESS, payload: response });\n        return response;\n      }\n      function onError(error) {\n        dispatch({ type: GET_MAP_FAILURE, payload: error });\n        return error;\n      }\n\n      try {\n        onStart();\n        const map = await api.getMap(map_id);\n        return onSuccess(map);\n      } catch (error) {\n        return onError(error);\n      }\n    };\n  };\n  // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// update map details\n// ******************************\n\nexport const setMapAttributes = (attr) => {\n    return dispatch => {\n      try {\n        dispatch({ type: SET_MAP_ATTRIBUTES, payload: {attr: attr}})\n        return true\n      } catch (error) {\n        return error\n      }\n    }\n}\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// update map details\n// ******************************\n\nexport const setCurrentMap = (map) => {\n    return dispatch => {\n        try {\n            dispatch({ type: SET_CURRENT_MAP, payload: map})\n            return true\n        } catch (error) {\n            return error\n        }\n    }\n}\n\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n","import axios from 'axios';\nimport * as log from 'loglevel';\n\nimport {apiIPAddress} from '../settings/settings'\nconst operator = 'objects'\n\nconst logger = log.getLogger('Objects_Api', \"Object\");\n\nexport async function getObjects() {\n  try {\n    const response = await axios({\n      method: 'get',\n      url: apiIPAddress() + operator,\n      headers: {\n        'X-API-Key': '123456',\n        'Access-Control-Allow-Origin': '*'\n    }\n    });\n    // Success 🎉\n    const data = response.data;\n    const dataJson = JSON.parse(data)\n    return dataJson;\n\n\n} catch (error) {\n\n    // Error 😨\n    if (error.response) {\n        /*\n         * The request was made and the server responded with a\n         * status code that falls out of the range of 2xx\n         */\n        log.debug('error.response.data', error.response.data);\n        log.debug('error.response.status',error.response.status);\n        log.debug('error.response.headers',error.response.headers);\n    } else if (error.request) {\n        /*\n         * The request was made but no response was received, `error.request`\n         * is an instance of XMLHttpRequest in the browser and an instance\n         * of http.ClientRequest in Node.js\n         */\n        log.debug('error.request', error.request);\n    } else {\n        // Something happened in setting up the request and triggered an Error\n        log.debug('error.message', error.message);\n    }\n    throw error\n  }\n\n\n}\n\nexport async function deleteObject(ID) {\n  try {\n    const response = await axios({\n      method: 'DELETE',\n      url: apiIPAddress() + operator + '/' + ID,\n      headers: {\n        'Accept': 'application/json',\n        'X-API-Key': '123456',\n        'Access-Control-Allow-Origin': '*'\n      },\n  });\n\n  // Success 🎉\n  const data = response.data;\n  const dataJson = JSON.parse(data)\n\n  } catch (error) {\n\n      // Error 😨\n      if (error.response) {\n          /*\n           * The request was made and the server responded with a\n           * status code that falls out of the range of 2xx\n           */\n          log.debug('error.response.data', error.response.data);\n          log.debug('error.response.status',error.response.status);\n          log.debug('error.response.headers',error.response.headers);\n      } else if (error.request) {\n          /*\n           * The request was made but no response was received, `error.request`\n           * is an instance of XMLHttpRequest in the browser and an instance\n           * of http.ClientRequest in Node.js\n           */\n          log.debug('error.request', error.request);\n      } else {\n          // Something happened in setting up the request and triggered an Error\n          log.debug('error.message', error.message);\n      }\n      log.debug('error', error);\n    }\n} \n\n\nexport async function postObject(object) {\n\n  console.log(\"postObject object\", object)\n\n  try {\n    const response = await axios({  \n      method: 'POST',\n      url: apiIPAddress() + operator,\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'X-API-Key': '123456',\n        'Access-Control-Allow-Origin': '*'\n      },\n      data: JSON.stringify(object)\n  });\n\n  // Success 🎉\n  const data = response.data;\n  const dataJson = JSON.parse(data)\n\n  return dataJson;\n\n\n  } catch (error) {\n\n      // Error 😨\n      if (error.response) {\n          /*\n           * The request was made and the server responded with a\n           * status code that falls out of the range of 2xx\n           */\n          log.debug('error.response.data', error.response.data);\n          log.debug('error.response.status',error.response.status);\n          log.debug('error.response.headers',error.response.headers);\n      } else if (error.request) {\n          /*\n           * The request was made but no response was received, `error.request`\n           * is an instance of XMLHttpRequest in the browser and an instance\n           * of http.ClientRequest in Node.js\n           */\n          log.debug('error.request', error.request);\n      } else {\n          // Something happened in setting up the request and triggered an Error\n          log.debug('error.message', error.message);\n      }\n      log.debug('error', error);\n    }\n}\n\nexport async function putObject(object, ID) {\n    console.log(\"putObject object\", object)\n  try {\n    const response = await axios({\n      method: 'PUT',\n      url: apiIPAddress() + operator + '/' + ID,\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'text/html',\n        'X-API-Key': '123456',\n        'Access-Control-Allow-Origin': '*'\n      },\n      data: object\n  });\n\n  // Success 🎉\n  const data = response.data;\n  const dataJson = JSON.parse(data)\n  \n  return dataJson;\n\n\n  } catch (error) {\n\n      // Error 😨\n      if (error.response) {\n          /*\n           * The request was made and the server responded with a\n           * status code that falls out of the range of 2xx\n           */\n          log.debug('error.response.data', error.response.data);\n          log.debug('error.response.status',error.response.status);\n          log.debug('error.response.headers',error.response.headers);\n      } else if (error.request) {\n          /*\n           * The request was made but no response was received, `error.request`\n           * is an instance of XMLHttpRequest in the browser and an instance\n           * of http.ClientRequest in Node.js\n           */\n          log.debug('error.request', error.request);\n      } else {\n          // Something happened in setting up the request and triggered an Error\n          log.debug('error.message', error.message);\n      }\n      log.debug('error', error);\n    }\n}\n\n","import {\n    GET_OBJECTS,\n    GET_OBJECTS_STARTED,\n    GET_OBJECTS_SUCCESS,\n    GET_OBJECTS_FAILURE,\n\n    GET_OBJECT,\n    GET_OBJECT_STARTED,\n    GET_OBJECT_SUCCESS,\n    GET_OBJECT_FAILURE,\n\n    POST_OBJECT,\n    POST_OBJECT_STARTED,\n    POST_OBJECT_SUCCESS,\n    POST_OBJECT_FAILURE,\n\n    PUT_OBJECT,\n    PUT_OBJECT_STARTED,\n    PUT_OBJECT_SUCCESS,\n    PUT_OBJECT_FAILURE,\n\n    DELETE_OBJECT,\n    DELETE_OBJECT_STARTED,\n    DELETE_OBJECT_SUCCESS,\n    DELETE_OBJECT_FAILURE,\n\n    ADD_OBJECT,\n    UPDATE_OBJECT,\n    UPDATE_OBJECTS,\n    REMOVE_OBJECT,\n    SET_OBJECT_ATTRIBUTES,\n    VALIDATE_OBJECT,\n    SELECT_OBJECT,\n    SET_SELECTED_OBJECT,\n    DESELECT_OBJECT,\n} from '../types/objects_types'\n\nimport { mapArrayToObjById, deepCopy } from '../../methods/utils/utils';\nimport { formatScheduleItem } from '../../methods/utils/data_utils';\n\nimport * as api from '../../api/objects_api'\n\n// get\n// ******************************\nexport const getObjects = () => {\n    return async dispatch => {\n\n        function onStart() {\n            dispatch({ type: GET_OBJECTS_STARTED });\n        }\n        function onSuccess(response) {\n            dispatch({ type: GET_OBJECTS_SUCCESS, payload: response });\n            return response;\n        }\n        function onError(error) {\n            dispatch({ type: GET_OBJECTS_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const objects = await api.getObjects();\n\n            const normalizedObjects = {}\n            objects.map((object) => {\n                normalizedObjects[object._id] = object\n            })\n\n            return onSuccess(normalizedObjects);\n        } catch (error) {\n            return onError(error);\n        }\n    };\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// get object details\n// ******************************\n// export const getObject = (object_id) => {\n//   return async dispatch => {\n\n//     function onStart() {\n//       dispatch({ type: GET_OBJECT_STARTED });\n//     }\n//     function onSuccess(response) {\n//       dispatch({ type: GET_OBJECT_SUCCESS, payload: response });\n//       return response;\n//     }\n//     function onError(error) {\n//       dispatch({ type: GET_OBJECT_FAILURE, payload: error });\n//       return error;\n//     }\n\n//     try {\n//       onStart();\n//       const object_details = await api.getObject(object_id);\n//       return onSuccess(object_details);\n//     } catch (error) {\n//       return onError(error);\n//     }\n//   };\n// };\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// post\n// ******************************\nexport const postObject = (object) => {\n    return async dispatch => {\n\n        function onStart() {\n            dispatch({ type: POST_OBJECT_STARTED });\n        }\n        function onSuccess(newObject) {\n            dispatch({ type: POST_OBJECT_SUCCESS, payload: newObject });\n            return newObject;\n        }\n        function onError(error) {\n            dispatch({ type: POST_OBJECT_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const newObject = await api.postObject(object);\n            return onSuccess(newObject);\n        } catch (error) {\n            return onError(error);\n        }\n    };\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// put\n// ******************************\nexport const putObject = (object, ID) => {\n    return async dispatch => {\n        function onStart() {\n            dispatch({ type: PUT_OBJECT_STARTED });\n        }\n        function onSuccess(updateObject) {\n            dispatch({ type: PUT_OBJECT_SUCCESS, payload: updateObject });\n            return updateObject;\n        }\n        function onError(error) {\n            dispatch({ type: PUT_OBJECT_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            let objectCopy = deepCopy(object)\n            const updateObject = await api.putObject(objectCopy, ID);\n            return onSuccess(updateObject)\n        } catch (error) {\n            return onError(error)\n        }\n    }\n}\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// delete\n// ******************************\nexport const deleteObject = (ID) => {\n    return async dispatch => {\n        function onStart() {\n            dispatch({ type: DELETE_OBJECT_STARTED });\n        }\n        function onSuccess(response) {\n            dispatch({ type: DELETE_OBJECT_SUCCESS, payload: ID });\n            return response;\n        }\n        function onError(error) {\n            dispatch({ type: DELETE_OBJECT_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const removeObject = await api.deleteObject(ID);\n            return onSuccess(ID)\n        } catch (error) {\n            return onError(error)\n        }\n    }\n}\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nexport const addObject = (object) => {\n    return { type: ADD_OBJECT, payload: { object } }\n}\n\nexport const updateObject = (object) => {\n    return { type: UPDATE_OBJECT, payload: { object } }\n}\n\nexport const updateObjects = (objects) => {\n    return { type: UPDATE_OBJECTS, payload: { objects } }\n}\n\nexport const removeObject = (id) => {\n    return { type: REMOVE_OBJECT, payload: { id } }\n}\n\nexport const setObjectAttributes = (attr) => {\n    return { type: SET_OBJECT_ATTRIBUTES, payload: attr  }\n}\n\nexport const selectObject = (id) => {\n    return { type: SELECT_OBJECT, payload: { id } }\n}\n\nexport const deselectObject = () => {\n    return { type: DESELECT_OBJECT }\n}\n","import axios from 'axios';\nimport * as log from 'loglevel';\n\nimport {apiIPAddress} from '../settings/settings'\nconst operator = 'sounds'\n\nexport async function getSounds() {\n  try {\n    const response = await axios({\n      method: 'get',\n      url: apiIPAddress() + operator,\n      headers: {\n        'X-API-Key': '123456',\n        'Access-Control-Allow-Origin': '*'\n    }\n    });\n    // Success 🎉\n    // log.debug('res',response);\n    const data = response.data;\n    const dataJson = JSON.parse(data)\n\n    return dataJson;\n\n\n} catch (error) {\n\n    // Error 😨\n    if (error.response) {\n        /*\n         * The request was made and the server responded with a\n         * status code that falls out of the range of 2xx\n         */\n        log.debug('error.response.data', error.response.data);\n        log.debug('error.response.status',error.response.status);\n        log.debug('error.response.headers',error.response.headers);\n    } else if (error.request) {\n\n        /*\n         * The request was made but no response was received, `error.request`\n         * is an instance of XMLHttpRequest in the browser and an instance\n         * of http.ClientRequest in Node.js\n         */\n        log.debug('error.request', error.request);\n    } else {\n        // Something happened in setting up the request and triggered an Error\n        log.debug('error.message', error.message);\n    }\n    log.debug('error', error);\n  }\n}\n","import { normalize, schema } from 'normalizr';\n\nimport { soundsSchema } from '../../normalizr/schema';\nimport * as api from '../../api/sounds_api'\n\nlet GET_SOUNDS = 'GET_SOUNDS';\nlet GET_SOUNDS_STARTED = 'GET_SOUNDS_STARTED';\nlet GET_SOUNDS_SUCCESS = 'GET_SOUNDS_SUCCESS';\nlet GET_SOUNDS_FAILURE = 'GET_SOUNDS_FAILURE';\n\n// get\n// ******************************\nexport const getSounds = () => {\n    return async dispatch => {\n\n        function onStart() {\n            dispatch({ type: GET_SOUNDS_STARTED });\n        }\n        function onSuccess(response) {\n            dispatch({ type: GET_SOUNDS_SUCCESS, payload: response });\n            return response;\n        }\n        function onError(error) {\n            dispatch({ type: GET_SOUNDS_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const sounds = await api.getSounds();\n\n            const normalizedSounds = normalize(sounds, soundsSchema)\n\n            if (normalizedSounds.entities.sounds === undefined) {\n                return onSuccess(normalizedSounds.entities)\n            }\n            else {\n                return onSuccess(normalizedSounds.entities.sounds)\n            }\n\n            return onSuccess(sounds);\n        } catch (error) {\n            return onError(error);\n        }\n    };\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n","import axios from 'axios';\nimport {apiIPAddress} from '../settings/settings'\nimport * as log from 'loglevel';\n\nconst operator = 'analysis'\n\nexport async function getTasksAnalysis() {\n  try {\n    const response = await axios({\n      method: 'GET',\n      url: apiIPAddress() + operator,\n      headers: {\n        'X-API-Key': '123456',\n        'Access-Control-Allow-Origin': '*'\n    }\n    });\n\n    // Success 🎉\n    // log.debug('getTasks :res:',response);\n    const data = response.data;\n    // const dataJson = JSON.parse(data)\n    // log.debug('getTasks: dataJson: ', dataJson)\n\n    return data;\n\n} catch (error) {\n\n    // Error 😨\n    if (error.response) {\n        /*\n         * The request was made and the server responded with a\n         * status code that falls out of the range of 2xx\n         */\n        console.error('error.response.data', error.response.data);\n        console.error('error.response.status',error.response.status);\n        console.error('error.response.headers',error.response.headers);\n    } else if (error.request) {\n        /*\n         * The request was made but no response was received, `error.request`\n         * is an instance of XMLHttpRequest in the browser and an instance\n         * of http.ClientRequest in Node.js\n         */\n        console.error('error.request', error.request);\n    } else {\n        // Something happened in setting up the request and triggered an Error\n        console.error('error.message', error.message);\n    }\n    throw error\n    console.error('error', error);\n  }\n\n\n};\n\nexport async function getTaskAnalysis(id) {\n  // log.debug('getTask: id: ', id)\n  try {\n    const response = await axios({\n      method: 'GET',\n      url: apiIPAddress() + operator + '/' + id,\n      headers: {\n        'X-API-Key': '123456',\n        'Access-Control-Allow-Origin': '*'\n    }\n    });\n    // Success 🎉\n    // log.debug('getTask: response: ', response);\n    const data = response.data;\n    // log.debug('getTask: dataJson:', dataJson)\n    return data;\n\n\n} catch (error) {\n\n    // Error 😨\n    if (error.response) {\n        /*\n         * The request was made and the server responded with a\n         * status code that falls out of the range of 2xx\n         */\n        console.error('getTask: error.response.data', error.response.data);\n        console.error('getTask: error.response.status',error.response.status);\n        console.error('getTask: error.response.headers',error.response.headers);\n    } else if (error.request) {\n        /*\n         * The request was made but no response was received, `error.request`\n         * is an instance of XMLHttpRequest in the browser and an instance\n         * of http.ClientRequest in Node.js\n         */\n        console.error('getTask: error.request', error.request);\n    } else {\n        // Something happened in setting up the request and triggered an Error\n        console.error('getTask: error.message', error.message);\n    }\n    throw error\n    console.error('getTask: error', error);\n  }\n\n\n};\n","import { normalize, schema } from 'normalizr';\n\nimport {\n    TASKS,\n    TASK,\n    ANALYSIS,\n} from '../types/tasks_types';\n\nimport {\n    GET_,\n\n    _STARTED,\n    _SUCCESS,\n    _FAILURE,\n} from '../types/api_types';\n\nimport * as api from '../../api/task_analysis_api'\n\nimport { tasksAnalysisSchema } from '../../normalizr/schema'\n\n\n// get\n// ******************************\nexport const getTasksAnalysis = () => {\n    return async dispatch => {\n\n        function onStart() {\n            dispatch({ type: GET_ + TASKS + ANALYSIS + _STARTED });\n        }\n        function onSuccess(tasksAnalysis) {\n            dispatch({ type: GET_ + TASKS + ANALYSIS + _SUCCESS, payload: tasksAnalysis });\n            return tasksAnalysis;\n        }\n        function onError(error) {\n            dispatch({ type: GET_ + TASKS + ANALYSIS + _FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const tasksAnalysis = await api.getTasksAnalysis();\n            const schema = normalize(tasksAnalysis, tasksAnalysisSchema)\n            return onSuccess(schema.entities.taskAnalysis);\n\n        } catch (error) {\n            return onError(error);\n        }\n    };\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// get\n// ******************************\nexport const getTaskAnalysis = (id) => {\n    return async dispatch => {\n\n        function onStart() {\n            dispatch({ type: GET_ + TASK + ANALYSIS + _STARTED });\n        }\n        function onSuccess(taskAnalysis) {\n            dispatch({ type: GET_ + TASK + ANALYSIS + _SUCCESS, payload: taskAnalysis });\n            return taskAnalysis;\n        }\n        function onError(error) {\n            dispatch({ type: GET_ + TASK + ANALYSIS + _FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const taskAnalysis = await api.getTaskAnalysis(id);\n\n            return onSuccess(taskAnalysis);\n\n        } catch (error) {\n            return onError(error);\n        }\n    };\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n","import axios from 'axios';\nimport * as log from 'loglevel';\n\nimport { apiIPAddress } from '../settings/settings'\n\nimport https from 'https'\n\nconst operator = 'data_stream'\n\nconst logger = log.getLogger('Positions_Api', \"Position\");\n\n// https.globalAgent.options.rejectUnauthorized = false;\n\nconst httpsAgent = new https.Agent({\n    rejectUnauthorized: false\n  })\n\nexport async function getDataStream() {\n    try {\n        const response = await axios({\n            method: 'GET',\n            url: apiIPAddress() + operator,\n            headers: {\n                'X-API-Key': '123456',\n                'Access-Control-Allow-Origin': '*'\n            },\n            httpsAgent: httpsAgent\n        });\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        throw error\n    }\n\n\n}\n","import { denormalize, schema } from 'normalizr';\nimport { uuidv4 } from '../methods/utils/utils';\n\n// status schema\nexport const statusSchema = new schema.Entity(\n  // key\n  'status',\n  // definition\n  {\n    //condition: conditionSchema\n  },\n  // options\n  {\n    idAttribute: (value, parent, key) => {\n      return value._id.$oid\n    },\n\n    // processStrategy\n    processStrategy: (value, parent, key) => {\n      return value\n    }\n  },\n\n);\n\n// schema for list of status\nexport const statusesSchema = [statusSchema]\n","import { TEMP_NEW_SCHEDULE_ID, DEFAULT_TASK_ID } from '../constants/scheduler_constants';\nimport axios from 'axios';\nimport * as log from 'loglevel';\n\nimport {apiIPAddress} from '../settings/settings'\nconst operator = 'schedules'\n\nexport async function getSchedules() {\n  try {\n    const response = await axios({\n      method: 'get',\n      url: apiIPAddress() + operator,\n      headers: {\n        'X-API-Key': '123456',\n        'Access-Control-Allow-Origin': '*'\n    }\n    });\n    // Success 🎉\n    // log.debug('res',response);\n    const data = response.data;\n    const dataJson = JSON.parse(data)\n    // log.debug('dataJson', dataJson)\n    // log.debug('getSchedulesdataJson', dataJson[0]._id.$oid)\n    return dataJson;\n\n\n} catch (error) {\n\n    // Error 😨\n    if (error.response) {\n        /*\n         * The request was made and the server responded with a\n         * status code that falls out of the range of 2xx\n         */\n        log.debug('error.response.data', error.response.data);\n        log.debug('error.response.status',error.response.status);\n        log.debug('error.response.headers',error.response.headers);\n    } else if (error.request) {\n        /*\n         * The request was made but no response was received, `error.request`\n         * is an instance of XMLHttpRequest in the browser and an instance\n         * of http.ClientRequest in Node.js\n         */\n        log.debug('error.request', error.request);\n    } else {\n        // Something happened in setting up the request and triggered an Error\n        log.debug('error.message', error.message);\n    }\n    throw error\n    log.debug('error', error);\n  }\n\n\n}\n\nexport async function getSchedule(scheduleId) {\n  try {\n    const response = await axios({\n      method: 'get',\n      url: apiIPAddress() + operator + '/' + scheduleId,\n      headers:{\n        'X-API-Key': '123456',\n      }\n    });\n    // Success 🎉\n    // log.debug('res',response);\n    const data = response.data;\n    const dataJson = JSON.parse(data)\n    // log.debug('dataJson', dataJson)\n    // log.debug('getSchedulesdataJson', dataJson[0]._id.$oid)\n    return dataJson;\n\n\n} catch (error) {\n\n    // Error 😨\n    if (error.response) {\n        /*\n         * The request was made and the server responded with a\n         * status code that falls out of the range of 2xx\n         */\n        log.debug('error.response.data', error.response.data);\n        log.debug('error.response.status',error.response.status);\n        log.debug('error.response.headers',error.response.headers);\n    } else if (error.request) {\n        /*\n         * The request was made but no response was received, `error.request`\n         * is an instance of XMLHttpRequest in the browser and an instance\n         * of http.ClientRequest in Node.js\n         */\n        log.debug('error.request', error.request);\n    } else {\n        // Something happened in setting up the request and triggered an Error\n        log.debug('error.message', error.message);\n    }\n    throw error\n    log.debug('error', error);\n  }\n\n\n}\n\nexport async function postSchedule(schedule) {\n  // log.debug('createSchedule start:',schedule)\n  try {\n    const response = await axios({\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'X-API-Key': '123456',\n      },\n      url: apiIPAddress() + operator,\n      data: schedule\n    });\n\n    // Success 🎉\n    // log.debug('createSchedule: response',response);\n    const data = response.data;\n    const dataJson = JSON.parse(data)\n    // log.debug('createSchedule: dataJson', dataJson)\n\n    return dataJson;\n\n} catch (error) {\n\n    // Error 😨\n    if (error.response) {\n        /*\n         * The request was made and the server responded with a\n         * status code that falls out of the range of 2xx\n         */\n        log.debug('error.response.data', error.response.data);\n        log.debug('error.response.status',error.response.status);\n        log.debug('error.response.headers',error.response.headers);\n    } else if (error.request) {\n        /*\n         * The request was made but no response was received, `error.request`\n         * is an instance of XMLHttpRequest in the browser and an instance\n         * of http.ClientRequest in Node.js\n         */\n        log.debug('error.request', error.request);\n    } else {\n        // Something happened in setting up the request and triggered an Error\n        log.debug('error.message', error.message);\n    }\n    throw error\n    log.debug('error', error);\n  }\n\n\n}\n\nexport async function deleteSchedule(scheduleId) {\n  // log.debug('deleteSchedule start:',scheduleId)\n\n  try {\n    const response = await axios({\n      method: 'delete',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'X-API-Key': '123456',\n      },\n      url: apiIPAddress() + operator + '/' + scheduleId\n    });\n\n    // Success 🎉\n    // log.debug('deleteSchedule: response',response);\n    const data = response.data;\n\n    return response;\n\n} catch (error) {\n\n    // Error 😨\n    if (error.response) {\n        /*\n         * The request was made and the server responded with a\n         * status code that falls out of the range of 2xx\n         */\n        log.debug('error.response.data', error.response.data);\n        log.debug('error.response.status',error.response.status);\n        log.debug('error.response.headers',error.response.headers);\n    } else if (error.request) {\n        /*\n         * The request was made but no response was received, `error.request`\n         * is an instance of XMLHttpRequest in the browser and an instance\n         * of http.ClientRequest in Node.js\n         */\n        log.debug('error.request', error.request);\n    } else {\n        // Something happened in setting up the request and triggered an Error\n        log.debug('error.message', error.message);\n    }\n    throw error\n    log.debug('error', error);\n  }\n\n\n}\n\nexport async function putSchedule(scheduleId, schedule) {\n  // log.debug('updateSchedule start:',scheduleId, schedule)\n\n  try {\n    const response = await axios({\n      method: 'put',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-API-Key': '123456',\n      },\n      url: apiIPAddress() + operator + '/' + scheduleId,\n      data: JSON.stringify(schedule)\n    });\n\n    // Success 🎉\n    // log.debug('updateSchedule: response',response);\n    const data = response.data;\n    const dataJson = JSON.parse(data)\n    // log.debug('getSchedulesdataJson', dataJson._id.$oid)\n    return dataJson;\n\n    //return response;\n\n} catch (error) {\n\n    // Error 😨\n    if (error.response) {\n        /*\n         * The request was made and the server responded with a\n         * status code that falls out of the range of 2xx\n         */\n        log.debug('error.response.data', error.response.data);\n        log.debug('error.response.status',error.response.status);\n        log.debug('error.response.headers',error.response.headers);\n    } else if (error.request) {\n        /*\n         * The request was made but no response was received, `error.request`\n         * is an instance of XMLHttpRequest in the browser and an instance\n         * of http.ClientRequest in Node.js\n         */\n        log.debug('error.request', error.request);\n    } else {\n        // Something happened in setting up the request and triggered an Error\n        log.debug('error.message', error.message);\n    }\n    throw error\n    log.debug('error', error);\n  }\n\n\n}\n","import { normalize } from 'normalizr';\n\n// import types\nimport {\n    GET,\n    POST,\n    DELETE,\n    PUT\n} from '../types/prefixes';\n\nimport {\n    SCHEDULES,\n    SCHEDULE\n} from '../types/data_types';\n\nimport { api_action } from './index';\nimport * as api from '../../api/schedules_api'\n\n// import schema\nimport { scheduleSchema, schedulesSchema } from '../../normalizr/schedules_schema';\n\nimport log from \"../../logger\"\n\nconst logger = log.getLogger(\"Schedules\", \"Redux\")\n\n// get\n// ******************************\nexport const getSchedules = () =>  async (dispatch) => {\n\n    /*\n        Invoked in api_action()\n        Whatever is returned from this function is the payload\n        that will be dispatched to redux (if successful)\n    */\n    const callback = async () => {\n\n        // make request\n        const schedules = await api.getSchedules();\n\n        // format response\n        const normalizedSchedules = normalize(schedules, schedulesSchema);\n\n        // return payload for redux\n        return {\n            schedulesObj: normalizedSchedules.entities.schedules,\n            scheduleIds: normalizedSchedules.result\n        };\n    }\n\n    const actionName = GET + SCHEDULES;\n\n    // payload is returned back\n    const payload = await api_action(actionName, callback, dispatch);\n\n    return payload.schedulesObj;\n\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n\n// create\n// ******************************\nexport const postSchedule = (schedule) =>  async dispatch => {\n\n    const callback = async () => {\n        const createdSchedule = await api.postSchedule(schedule);\n        const normalizedSchedules = normalize(createdSchedule, scheduleSchema);\n\n        return {\n            createdSchedules:normalizedSchedules.entities.schedules,\n        };\n    }\n\n    const actionName = POST + SCHEDULE;\n\n    const payload = await api_action(actionName, callback, dispatch, schedule);\n\n    return Object.values(payload.createdSchedules)[0];\n\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// delete\n// ******************************\nexport const deleteSchedule = (scheduleId) => async (dispatch) => {\n\n    const callback = async () => {\n        await api.deleteSchedule(scheduleId);\n\n        return {\n            scheduleId\n        };\n    }\n\n    const actionName = DELETE + SCHEDULE;\n    const payload = await api_action(actionName, callback, dispatch, scheduleId);\n    return payload;\n\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// update\n// ******************************\nexport const putSchedule = (scheduleId, schedule) => async dispatch => {\n\n    logger.log(\"action_putSchedule: scheduleId:\",scheduleId)\n    logger.log(\"action_putSchedule: schedule:\",schedule)\n\n    const callback = async () => {\n        const response = await api.putSchedule(scheduleId, schedule);\n        const normalizedSchedule = normalize(response, scheduleSchema);\n\n        return {\n            scheduleId,\n            schedules: normalizedSchedule.entities.schedules\n        };\n    }\n\n    const actionName = PUT + SCHEDULE;\n    const payload = await api_action(actionName, callback, dispatch, {scheduleId, schedule});\n    return payload.scheduleId;\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n\n// add edited schedules (temp storage for unsaved schedules, so no api call)\n// ******************************\nexport const addUnsavedSchedules = (schedules) => {\n  return async dispatch => {\n      const payload = schedules;\n      dispatch({ type: \"ADD_SCHEDULES_UNSAVED\", payload });\n      return schedules;\n  };\n\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nexport function addSchedules(schedules) {\n  return {\n    type: \"ADD_SCHEDULES\",\n    schedules\n  };\n}\n","import axios from 'axios';\nimport * as log from 'loglevel';\n\nimport { apiIPAddress } from '../settings/settings'\n\n\nimport store from '../redux/store'\nconst token = store.getState().cognotoUserSession\n\nconst operator = 'status'\n\nexport async function getStatus() {\n    try {\n        const response = await axios({\n            method: 'get',\n            url: apiIPAddress() + operator,\n            headers: {\n                'X-API-Key': '123456',\n                'Access-Control-Allow-Origin': '*'\n            }\n            // token: token.username\n        });\n        // Success 🎉\n        //  log.debug('THE STATE OF PLAY IS!!! on get status',response);\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        return dataJson;\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n        throw error;\n\n    }\n\n\n}\n\nexport async function postStatus(status) {\n    // log.debug(\"postStatus: started: status\", status)\n    try {\n        const response = await axios({\n            method: 'POST',\n            url: apiIPAddress() + operator,\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'application/json'\n            },\n            data: status\n        });\n\n        // Success 🎉\n        // log.debug('postStatus: response: ',response);\n        // const data = response.data;\n        // const dataJson = JSON.parse(data)\n        // log.debug('response data json',dataJson);\n\n        return response;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n        throw error;\n    }\n}\n","import { normalize, schema } from 'normalizr';\nimport {\n    GET_STATUS,\n    GET_STATUS_STARTED,\n    GET_STATUS_SUCCESS,\n    GET_STATUS_FAILURE,\n\n    POST_STATUS,\n    POST_STATUS_STARTED,\n    POST_STATUS_SUCCESS,\n    POST_STATUS_FAILURE,\n} from '../types/status_types';\n\nimport { statusSchema, statusesSchema } from '../../normalizr/status_schema';\nimport * as api from '../../api/status_api'\n\n\n// get\n// ******************************\nexport const getStatus = () => {\n    return async dispatch => {\n\n        function onStart() {\n            dispatch({ type: GET_STATUS_STARTED });\n        }\n        function onSuccess(status) {\n            dispatch({ type: GET_STATUS_SUCCESS, payload: status });\n            return status;\n        }\n        function onError(error) {\n            dispatch({ type: GET_STATUS_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const status = await api.getStatus();\n            //const normalizedStatus = normalize(status, statusesSchema);\n            //console.log('normalizedStatus',normalizedStatus)\n\n\n            return onSuccess(status);\n        } catch (error) {\n            return onError(error);\n        }\n    };\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n\n// For some reason, this function does not execute the dispatch function. Have no idea why...\nexport const postStatus = (status) => {\n\n    return async dispatch => {\n\n        function onStart() {\n            dispatch({ type: POST_STATUS_STARTED });\n        }\n\n        function onSuccess(response) {\n            dispatch({ type: POST_STATUS_SUCCESS, payload: response });\n            return response;\n        }\n        function onError(error) {\n            dispatch({ type: POST_STATUS_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n\n            // currently the backend just returns the status code\n            // if backend returns new status object, newStatus should be passed to onSuccess instead of status\n            const response = await api.postStatus(status);\n            return onSuccess(status)\n\n        } catch (error) {\n            return onError(error)\n        }\n    }\n}\n","import axios from 'axios';\n// import * as log from 'loglevel';\nimport logger from '../logger'\n\nimport { apiIPAddress } from '../settings/settings'\n\nimport store from '../redux/store'\nconst token = '123456'//store.getState().cognotoUserSession\n\nconst operator = 'settings'\n\nconst log = logger.getLogger('Api')\n\nexport async function getSettings() {\n    try {\n        const response = await axios({\n            method: 'get',\n            url: apiIPAddress() + operator,\n            headers:{\n                'X-API-Key': '123456',\n                'Access-Control-Allow-Origin': '*'\n            }\n            // token: token.username\n        });\n        // Success 🎉\n        log.debug('getSettings response', response);\n        const data = response.data;\n\n        const dataJson = JSON.parse(data)\n        log.debug('getSettings dataJson', dataJson);\n        return dataJson;\n\n        // const settings = {\n        //   mir_ip: '10.1.12.136',\n        //   idle_task: 'Bring me beer',\n        //   charge_location: 'Station'\n        // }\n        // return settings;\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n\n}\n\nexport async function postSettings(settings) {\n    console.log(settings)\n    try {\n        const response = await axios({\n            method: 'POST',\n            url: apiIPAddress() + operator,\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'application/json',\n                'Access-Control-Allow-Origin': '*'\n            },\n            data: settings\n        });\n\n        // Success 🎉\n        log.debug('response', response);\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        log.debug('response data json', dataJson);\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n\n        }\n        log.debug('error', error);\n    }\n}\n","import {\n    GET_SETTINGS,\n    GET_SETTINGS_STARTED,\n    GET_SETTINGS_SUCCESS,\n    GET_SETTINGS_FAILURE,\n\n    POST_SETTINGS,\n    POST_SETTINGS_STARTED,\n    POST_SETTINGS_SUCCESS,\n    POST_SETTINGS_FAILURE,\n    DEVICE_ENABLED,\n} from '../types/setting_types'\n\nimport * as api from '../../api/settings_api'\n\nexport const getSettings = () => {\n    return async dispatch => {\n        function onStart() {\n            dispatch({ type: GET_SETTINGS_STARTED });\n        }\n        function onSuccess(response) {\n            dispatch({ type: GET_SETTINGS_SUCCESS, payload: response });\n\n            return response;\n        }\n        function onError(error) {\n            dispatch({ type: GET_SETTINGS_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const settings = await api.getSettings();\n\n            // Uncomment when you want to make SETTINGS an object\n            // const normalizedSETTINGS = normalize(SETTINGS, SETTINGSSchema);\n\n            // return onSuccess(normalizedSETTINGS.entities.SETTINGS)\n\n            return onSuccess(settings)\n        } catch (error) {\n            return onError(error)\n        }\n    }\n}\nexport const postSettings = (settings) => {\n    return async dispatch => {\n        function onStart() {\n            dispatch({ type: POST_SETTINGS_STARTED });\n        }\n        function onSuccess(response) {\n            dispatch({ type: POST_SETTINGS_SUCCESS, payload: settings });\n            return response;\n        }\n        function onError(error) {\n            dispatch({ type: POST_SETTINGS_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const newSettings = await api.postSettings(JSON.stringify(settings));\n            return onSuccess(newSettings)\n        } catch (error) {\n            return onError(error)\n        }\n    }\n}\n\nexport const deviceEnabled = (state) => {\n    return { type: DEVICE_ENABLED, payload: state}\n}\n","import styled from 'styled-components'\n\nexport const SwitchContainer = styled.div`\n    display: flex;\n    alignItems: center;\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz4};\n`\n\nexport const SwitchContainerLabel = styled.span`\n    padding: 0;\n    margin: 0;\n    align-self: center;\n`","// import external dependencies\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\n\n// components\nimport Switch from 'react-ios-switch'\nimport Textbox from '../../basic/textbox/textbox'\nimport Button from '../../basic/button/button'\n\n// styles\nimport * as styled from \"./splash_screen.style\"\n\n// import logger\nimport logger from '../../../logger.js';\nimport { postLocalSettings } from \"../../../redux/actions/local_actions\";\n\n\nconst ToggleMapViewSwitch = (props) => {\n    const {\n        checked,\n        onChange,\n        switchContainerStyle\n    } = props\n\n    return (\n        <styled.SwitchContainer style={switchContainerStyle}>\n            <styled.SwitchContainerLabel>Show List View</styled.SwitchContainerLabel>\n            <Switch\n                checked={checked}\n                onChange={onChange}\n                style={{ margin: \"0 2rem 0 2rem\" }}\n            />\n            <styled.SwitchContainerLabel>Show Map View</styled.SwitchContainerLabel>\n        </styled.SwitchContainer>\n    )\n}\n\nconst SplashScreen = (props) => {\n    const {\n        isApiLoaded,\n        apiError\n    } = props\n\n    const dispatch = useDispatch()\n    const localSettings = useSelector(state => state.localReducer)\n    const [apiIpAddress, setApiIpAddress] = useState('')\n    const onPostLocalSettings = (settings) => dispatch(postLocalSettings(settings))\n\n    /**\n     * Submit API address to local storage\n     */\n    const handleSubmitApiIpAddress = async () => {\n        console.log(\"submitting\")\n        await onPostLocalSettings({ ...localSettings.localSettings, non_local_api: true, non_local_api_ip: apiIpAddress })\n        window.location.reload(false);\n    }\n\n    /*\n    * toggle mapViewEnabled\n    * */\n    const toggleMapViewEnabled = async () => {\n        await onPostLocalSettings({ ...localSettings.localSettings, mapViewEnabled: !localSettings.localSettings.mapViewEnabled })\n    }\n\n    return (\n        <>\n            {/* When loading show an RM logo, if no api info, then show input to enter */}\n            {!isApiLoaded ? apiError ?\n                <div style={{ width: '100%', height: '100%', paddingTop: '15%', display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\n                    <i className={'icon-rmLogo'} style={{ fontSize: '10rem', marginBottom: '5rem', color: '#FF4B4B' }} />\n\n                    <div style={{ width: '50%', minWidth: '20rem', display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\n                        < p > Please Enter API IP</p>\n                        <form onSubmit={handleSubmitApiIpAddress}>\n                            <Textbox\n                                placeholder=\"API IP Address\"\n                                onChange={(event) => {\n                                    setApiIpAddress(event.target.value)\n                                }}\n                                style={{ width: '100%' }}\n                            // type = 'submit'\n                            />\n                            <Button schema={'scheduler'} style={{ color: 'red', border: '0.1rem solid red' }} type='submit'>Submit</Button>\n                        </form>\n\n\n\n                        <ToggleMapViewSwitch\n                            switchContainerStyle={{\n                                bottom: \"1rem\",\n                                transform: \"translateY(-50%)\",\n                                position: \"absolute\"\n                            }}\n                            checked={localSettings.localSettings.mapViewEnabled}\n                            onChange={toggleMapViewEnabled}\n                        />\n                    </div>\n                </div>\n\n                :\n                <div style={{ width: '100%', height: '100%', display: 'flex', justifyContent: 'center', alignItems: \"center\", flexDirection: \"column\" }}>\n                    <i className={'icon-rmLogo'} style={{ fontSize: '10rem', margin: \"3rem\", color: '#FF4B4B' }} />\n\n                    {/* <ToggleMapViewSwitch\n                        checked={localSettings.localSettings.mapViewEnabled}\n                        onChange={toggleMapViewEnabled}\n                    /> */}\n\n                </div>\n                :\n                <>\n                </>\n            }\n        </>\n    )\n}\n\nexport default SplashScreen;\n","import styled from 'styled-components'\n\n\nexport const SideBarOpenCloseButton = styled.button`\n    position: absolute;\n    top: 0rem;\n    z-index: 101;\n    height: 3.2rem;\n    width: 3.2rem;\n    margin-top: 0.4rem;\n    margin-left: 1rem;\n\n    border-radius: .5rem;\n\n    box-shadow: 0 0.1rem 0.2rem 0rem #303030;\n    /* background-color: ${props => props.showSideBar ? 'rgba(255,255,255,0.2)' : props.theme.bg.secondary} ; */\n    background: rgba(97, 98, 109, 0.97);\n    \n    transition: background-color 0.25s ease, box-shadow 0.1s ease;\n\n    &:focus{\n        outline: 0 !important;\n    }\n\n    &:active{\n        box-shadow: none;\n    }\n\n    &:hover{\n    }\n\n    // @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n    //     width: 3.5rem;\n    //     height: 3.5rem;\n    //     margin-left: .5rem;\n\n    // }\n`\n\n// export const HamburgerInner = styled.span`\n//     &:before\n// `\n\nexport const SidebarWrapper = styled.div`\n    position: absolute;\n    top: 4rem;\n    bottom: 0rem;\n\n    display: flex;\n    align-items: stretch;\n    flex-flow: row nowrap;\n    flex-direction: row;\n    flex: 1;\n    // width: auto;\n    // flex-grow: 0;\n\n    background: rgba(46, 47, 58, 0.97);\n    overflow: auto;\n`\n\nexport const SidebarContent = styled.div`\n    display: flex;\n    align-self: stretch;\n    flex: 1;\n\n    // background: ${props => props.theme.bg.primary};\n    z-index: 1;\n    backdrop-filter: blur(3px);\n\n    border-radius: 0 0 8px 0;\n    // border-right: 8px solid ${props => props.theme.bg.quinary};\n\n    background-color: rgba(255, 255, 255, 0.1);\n\n    overflow: auto;\n\n`\n\nexport const ResizeBar = styled.div`\n\tbackground-color: rgba(97, 98, 109, 0.97);\n    cursor: ew-resize;\n    width: 8px;\n    min-width: 8px;\n    display: flex;\n    z-index: 10;\n    align-items: center ;\n    align-content: center ;\n    justify-content: center;\n\n`\n\nexport const ResizeHandle = styled.div`\n    cursor: ew-resize;\n    width: 4px;\n    height: 30px;\n    background: ${props => props.theme.schema[props.content].solid};\n    border-radius: 8px;\n    text-align: center;\n    z-index: 10;\n    overflow: hidden;\n    display: flex;\n    align-items: center ;\n\n`\n","import styled from 'styled-components'\n\nexport const SideBarButtonIcon = styled.i`\n    font-size: 2rem;\n    padding: 1.5rem;\n    cursor: pointer;\n    display: flex;\n    flex-direction:column;\n    align-items: center;\n\n    // You cant stack a color on a gradient, but you CAN stack a gradient on a gradient\n    background: ${props => props.mode==props.currentMode ? `linear-gradient(rgba(255,255,255,0.4),rgba(255,255,255,0.4)), `+props.theme.schema[props.mode].gradient : props.theme.bg.octonary};\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n\n    transition: color 0.15s ease;\n\n    &:hover{\n        background: ${props => `linear-gradient(rgba(255,255,255,0.2),rgba(255,255,255,0.2)), `+props.theme.schema[props.mode].gradient};\n        -webkit-background-clip: text;\n        -webkit-text-fill-color: transparent;\n    }\n\n    @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n        font-size: 2rem;\n        padding: 1rem;\n\n\n    }\n`\nexport const SideBarButtonText = styled.h1`\n  padding-top:.3rem;\n  font-family: ${props => props.theme.font.primary};\n  font-weight: 100;\n  font-size:1rem;\n  color: ${props => props.theme.schema.locations};\n  text-align: center;\n\n  @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n      font-size: .7rem;\n\n`\n","import styled, {css} from 'styled-components'\nimport Modal from 'react-modal';\nimport {LightenDarkenColor} from \"../../../../methods/utils/color_utils\";\n\n\nconst borderGlowCss = css`\n    --border-width: .1rem;\n    background: none;\n\n    @keyframes moveGradient {\n        50% {\n          background-position: 100% 50%;\n        }\n      }\n\n    border-radius: var(--border-width);\n\n    &::after {\n    position: absolute;\n    content: \"\";\n    top: calc(-1 * var(--border-width));\n    left: calc(-1 * var(--border-width));\n    z-index: -1;\n    width: calc(100% + var(--border-width) * 2);\n    height: calc(100% + var(--border-width) * 2);\n    background: linear-gradient(\n        60deg,\n        /* hsl(224, 85%, 66%), */\n        /* hsl(269, 85%, 66%), */\n        /* hsl(314, 85%, 66%), */\n        /* hsl(359, 85%, 66%), */\n        hsl(44, 85%, 66%),\n        hsl(89, 85%, 66%),\n        hsl(134, 85%, 66%),\n        hsl(179, 85%, 66%)\n    );\n    background-size: 300% 300%;\n    background-position: 0 50%;\n    border-radius: calc(2 * var(--border-width));\n    animation: moveGradient 4s alternate infinite;\n}\n`\n\nexport const TextboxDiv = styled.div`\n    background-color: ${props => props.theme.bg.quinary};\n    border: none;\n    font-size: ${props => props.theme.fontSize.sz4};\n    font-family: ${props => props.theme.font.primary};\n    font-weight: 500;\n    min-height: 2rem;\n    display: flex;\n    flex-grow: 1;\n    color: ${props => props.theme.bg.octonary};\n    padding: .5rem;\n    border-radius: .5rem;\n\n    box-shadow: 0 0.1rem 0.2rem 0rem rgba(0,0,0,0.1) !important;\n    border-bottom: 2px solid ${props => props.theme.bg.quinary};\n\n    &:focus {\n        background-color: ${props => LightenDarkenColor(props.theme.bg.quinary, 10)};\n        border-bottom: 2px solid ${props => !!props.schema ? props.theme.schema[props.schema].solid : props.theme.fg.primary};\n        color: ${props => props.theme.bg.octonary};\n        outline: none !important;\n    }\n\n    &::placeholder {\n        font-family: ${props => props.theme.font.secondary};\n        color: ${props => props.theme.bg.senary};\n    }\n`;\n\nexport const Container = styled(Modal)`\n\toutline: none !important;\n\toutline-offset: none !important;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translate(-50%, -50%);\n\tright: auto;\n\tbottom: auto;\n\n\tposition: absolute;\n\n\tz-index: 50;\n\n\tmin-width: 95%;\n\tmax-width: 95%;\n\tmax-height: 95%;\n\t// height: 95%;\n\n\tcolor: ${props => props.theme.bg.octonary};\n\n\tdisplay: flex;\n\tflex-direction: column;\n\n\tcolor: ${props => props.theme.bg.octonary};\n\tborder-radius: 1rem;\n\toverflow: hidden;\n`;\n\nexport const HeaderContainer = styled.div`\n\twidth: 100%;\n\tdisplay: flex;\n\tflex-direction: column;\n\tborder-width: 0;\n\tborder-bottom-width: thin;\n\tborder-color: black;\n\tborder-style: solid;\n\tmargin-bottom: 2rem;\n`;\n\nexport const Header = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\tpadding: 0;\n\tmargin: 0;\n\tmax-height: 5rem;\n\tbackground: #FF4B4B;\n\n`\nexport const Label = styled.span`\n\tpadding-left: 1rem;\n\tfont-size: ${props => props.theme.fontSize.sz3};\n\tmargin-bottom: .25rem;\n`\n\nexport const Title = styled.h2`\n\tflex: 2;\n\theight: 100%;\n\tmin-height: 100%;\n\tmargin: 1rem;\n\tpadding: 0;\n\ttext-align: center;\n\tdisplay: inline-flex;\n\tjustify-content: center;\n\talign-items: center;\n\n\tfont-size: ${props => props.theme.fontSize.sz2};\n\tfont-weight: ${props => props.theme.fontWeight.bold};\n`;\n\nexport const TextContainer = styled.div`\n\twidth: 100%;\n\tdisplay: flex;\n\tflex-direction: column;\n\tmargin-bottom: 1.5rem;\n`;\n\nexport const BodyContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tpadding: 1rem;\n\tflex: 1;\n\tjustify-content: space-between;\n\toverflow: hidden;\n\n\tbackground: ${props => props.theme.bg.quaternary};\n`\n\nexport const ButtonForm = styled.div`\n\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: center;\n\tmin-height: fit-content;\n`;\n\nexport const IconSelectorContainer = styled.div`\n\tbackground: ${props => props.theme.bg.quinary};\n\toverflow: auto;\n\tmin-height: 2rem;\n\twidth: 100%;\n\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tflex-wrap: wrap;\n\tborder-radius: .5rem;\n`\n\nexport const ContentContainer = styled.div`\n\tbackground: ${props => props.theme.bg.quinary};\n\tborder-radius: 1rem;\n\tdisplay: flex;\n\tflex-direction: column;\n\toverflow: hidden;\n\tmargin-bottom: 1rem;\n\talign-items: center;\n`\nexport const ReportButtonsContainer = styled.div`\n\tdisplay: flex;\n\n\tflex-direction: column;\n\talign-items: center;\n\t// justify-content: center;\n\tflex-wrap: nowrap;\n\toverflow: auto;\n\tmin-height: 5rem;\n\twidth: 100%;\n`\n\nexport const ConditionText = styled.span`\n\tfont: ${props => props.theme.font.primary};\n\tfont-size: ${props => props.theme.fontSize.sz3};\n\tmax-width: 100 %;\n\toverflow: hidden;\n\ttext-overflow: ellipsis;\n`\n\nexport const RightContentContainer = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: ${props => props.theme.bg.senary};\n    width: 4rem;\n    border-left: 1px solid ${props => props.theme.bg.tertiary};\n    height: 100%;\n    // background-color: ${props => props.theme.bg.septenary};\n\n    // padding-left: 1rem;\n    // border-top-right-radius: 0.6rem;\n    // border-bottom-right-radius: 0.6rem;\n\n\n`\n\nexport const ButtonContainer = styled.button`\n  position: relative;\n  user-select: none;\n\n  // flex layout\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  // flex-grow: 1;\n  width: 90%;\n  overflow: hidden;\n  height: 4rem;\n  min-height: 4rem;\n  line-height: 3rem;\n  min-width: 80%;\n\n  background: ${props => `linear-gradient(180deg,\n                            ${LightenDarkenColor(props.background, 20)} 0%,\n                            ${props.background} 50%,\n                            ${LightenDarkenColor(props.background, -20)} 100%)`};\n  border-radius: 0.6rem;\n  padding: 0;\n\n\n  // margins\n  margin: .5rem 0 .5rem 0;\n\n  // padding\n  // padding: 0.5rem 1rem 0.5rem 1rem;\n\n  outline: none;\n  &:focus {\n    outline: none;\n  }\n\n  letter-spacing: 1.5px;\n  border: none;\n  box-shadow: ${props => props.clickable ? 'none' : `2px 2px 2px rgba(0, 0, 0, 0.5)`};\n  transition: all 0.1s ease 0s;\n  cursor: pointer;\n  outline: none;\n\n  &:hover {\n    ${props => props.hoverable && !props.clickable &&\n\t{\n\t\tboxShadow: \"3px 3px 3px rgba(0, 0, 0, 0.5)\",\n\t\ttransform: \"translateY(-1px)\",\n\t}\n}\n  }\n\n  ${props => props.clickable && !props.disabled &&\n\t`&:active {\n      background: ${`linear-gradient(180deg,\n          ${LightenDarkenColor(props.background, -20)} 0%,\n          ${props.background} 50%,\n          ${LightenDarkenColor(props.background, 20)} 100%)`\n\t}\n    }`\n}\n\n  ${props => props.disabled &&\n\t{\n\t\tcolor: props.theme.bg.quaternary,\n\t\tbackground: `linear-gradient(180deg, rgba(255,255,255,0.4) 0%, rgba(255,255,255,0.4) 100%), ${LightenDarkenColor(props.background, -60)}`,\n\t\tpointerEvents: \"none\",\n\t}\n}\n\n    // --border-width: 3px;\n    ${props => props.borderGlow &&\n\tborderGlowCss\n}\n\n${props => props.css};\n\n`\n\nexport const AddNewButtonContainer = styled.div`\n\tdisplay: flex;\n\tjustify-content: center;\n\twidth: 100%;\n\tborder-bottom:  ${props => props.showBorder && `1px solid` + props.theme.bg.tertiary};\n`\n\nexport const ColorFieldContainer = styled.div`\n\tposition: relative;\n\n`\n\n\nexport const Icon = styled.i`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin: auto auto;\n    color: green;\n    fill: green;\n    font-size: 7rem;\n    width: 14rem;\n    &:hover {\n        cursor: pointer;\n    }\n\n    &:active{\n        filter: brightness(85%)\n    }\n`\n","import React, {useEffect, useState} from \"react\";\nimport Modal from 'react-modal';\nimport {useDispatch, useSelector} from \"react-redux\";\n\n\nimport Button from \"../../../basic/button/button\";\nimport Textbox from \"../../../basic/textbox/textbox\";\n\n// actions\n\n// styles\nimport * as styled from './confirm_delete_modal.style'\n\nconst ConfirmDeleteModal = (props) => {\n\n    const {\n        isOpen,\n        title,\n        close,\n        dashboard,\n        onSubmit,\n        handleClose,\n        handleOnClick1,\n        handleOnClick2,\n        button_1_text,\n        button_2_text,\n        children\n    } = props\n\n\n    const dispatch = useDispatch()\n\n\n\n\n    return (\n        <styled.Container\n            isOpen={isOpen}\n            contentLabel=\"Confirm Delete Modal\"\n            onRequestClose={close}\n            style={{\n                overlay: {\n                    zIndex: 500\n                },\n                content: {\n\n                }\n            }}\n        >\n            <styled.Header>\n                <styled.Title>{title}</styled.Title>\n\n                <Button\n                    onClick={handleClose}\n                    schema={'error'}\n                >\n                    <i className=\"fa fa-times\" aria-hidden=\"true\"/>\n                </Button>\n            </styled.Header>\n            <styled.BodyContainer>\n\n                        <styled.ContentContainer>\n\n                            {children}\n                        </styled.ContentContainer>\n\n                        <styled.ButtonForm>\n                            <Button\n                                tertiary\n                                schema={\"delete\"}\n                                onClick={handleOnClick1}\n                                label={button_1_text}\n                                type=\"button\"\n                            />\n                            <Button\n                                tertiary\n                                schema={\"delete\"}\n                                onClick={handleOnClick2}\n                                label={button_2_text}\n                                type=\"button\"\n                            />\n\n                        </styled.ButtonForm>\n\n            </styled.BodyContainer>\n        </styled.Container>\n    );\n};\n\nexport default ConfirmDeleteModal\n","import React, { useState, useMemo, useRef, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport * as style from './side_bar_button.style'\n\nimport * as locationActions from '../../../redux/actions/locations_actions'\nimport * as tasksActions from '../../../redux/actions/tasks_actions'\nimport * as processesActions from '../../../redux/actions/processes_actions'\n\n\nimport ConfirmDeleteModal from '../../basic/modals/confirm_delete_modal/confirm_delete_modal'\n\n\nconst SideBarButton = (props) => {\n\n    const {\n      mode,\n      currentMode\n    } = props\n\n    const history = useHistory()\n\n    const editingStation = useSelector(state => state.stationsReducer.editingStation)\n    const editingPosition = useSelector(state => state.positionsReducer.editingPosition)\n    \n    const taskEditing = useSelector(state => state.tasksReducer.editingTask)\n    const processEditing = useSelector(state => state.processesReducer.editingProcess)\n\n    const dispatch = useDispatch()\n    const onLocationEditing = (props) => dispatch(locationActions.editing(props))\n    const onTaskEditing = (props) => dispatch(tasksActions.editingTask(props))\n    const onProcessEditing = (props) => dispatch(processesActions.editingProcess(props))\n\n    const [confirmDeleteModal, setConfirmDeleteModal] = useState(false);\n\n    const locationEditing = !!editingStation ? editingStation : editingPosition\n\n    const handleConfirmationModal = () => {\n        return (\n            <ConfirmDeleteModal\n                isOpen={!!confirmDeleteModal}\n                title={\"Are you sure you want to leave this page? Any changes will not be saved\"}\n                button_1_text={\"Yes\"}\n                button_2_text={\"No\"}\n                handleClose={() => setConfirmDeleteModal(null)}\n                handleOnClick1={() => {\n                    if (props.mode === 'lots') {\n                        const currentPath = history.location.pathname\n                        history.push('/lots/summary')\n\n                        setConfirmDeleteModal(null)\n                        onLocationEditing(false)\n                        onTaskEditing(false)\n                        onProcessEditing(false)\n                    }\n                    else {\n                        props.setShowSideBarPage(props.mode)\n                        setConfirmDeleteModal(null)\n                        onLocationEditing(false)\n                        onTaskEditing(false)\n                        onProcessEditing(false)\n                    }\n\n                }}\n                handleOnClick2={() => {\n                    setConfirmDeleteModal(null)\n                }}\n            />\n        )\n    }\n\n\n\n    if (mode === 'locations') {\n\n        return (\n            <>\n                {handleConfirmationModal()}\n                <style.SideBarButtonIcon\n                    className='fas fa-map-marker-alt'\n                    onClick={() => {\n                        if (locationEditing || taskEditing || processEditing) {\n                            setConfirmDeleteModal(true)\n                        }\n                        else{props.setShowSideBarPage(mode)}\n                    }}\n                    currentMode={currentMode}\n                    mode={mode}\n                >\n                    <style.SideBarButtonText>Locations</style.SideBarButtonText>\n                </style.SideBarButtonIcon>\n            </>\n        )\n    }\n\n    else if (mode === 'devices') {\n        return (\n            <>\n                {handleConfirmationModal()}\n                <style.SideBarButtonIcon\n                    className={'icon-rmLogo'}\n                    onClick={() => {\n                        if (locationEditing || taskEditing || processEditing) {\n                            setConfirmDeleteModal(true)\n                        }\n                        else{props.setShowSideBarPage(mode)}\n                    }}\n                    currentMode={currentMode}\n                    mode={mode}\n                >\n                    <style.SideBarButtonText>Devices</style.SideBarButtonText>\n                </style.SideBarButtonIcon>\n            </>\n        )\n    }\n\n    else if (mode === 'lots') {\n        return (\n            <>\n                {handleConfirmationModal()}\n                <style.SideBarButtonIcon\n                    className={'fas fa-layer-group'}\n                    onClick={() => {\n                         if(locationEditing || taskEditing || processEditing){\n                             setConfirmDeleteModal(true)\n                         }\n                         else{\n                              const currentPath = history.location.pathname\n                              history.push('/lots/summary')}\n                            }}\n                    currentMode={currentMode}\n                    mode={mode}\n                >\n                    <style.SideBarButtonText>Lot Summary</style.SideBarButtonText>\n                </style.SideBarButtonIcon>\n            </>\n        )\n    }\n\n    else if (mode === 'processes') {\n        return (\n            <>\n                {handleConfirmationModal()}\n                <style.SideBarButtonIcon\n                    className={'fas fa-route'}\n                    onClick={() => {\n                        if (locationEditing || taskEditing || processEditing) {\n                            setConfirmDeleteModal(true)\n                        }\n                        else{props.setShowSideBarPage(mode)}\n                    }}\n                    currentMode={currentMode}\n                    mode={mode}\n                >\n                    <style.SideBarButtonText>Processes</style.SideBarButtonText>\n                </style.SideBarButtonIcon>\n            </>\n        )\n    }\n\n    else if (mode === 'scheduler') {\n        return (\n            <>\n                <style.SideBarButtonIcon\n                    className={'far fa-calendar-alt'}\n                    onClick={() => {\n                        if (locationEditing || taskEditing || processEditing) {\n                            setConfirmDeleteModal(true)\n                        }\n                        else{props.setShowSideBarPage(mode)}\n                    }}\n                    currentMode={currentMode}\n                    mode={mode}\n                >\n                    <style.SideBarButtonText>Schedules</style.SideBarButtonText>\n                </style.SideBarButtonIcon>\n            </>\n        )\n    }\n\n    else if (mode === 'tasks') {\n        return (\n            <>\n                {handleConfirmationModal()}\n                <style.SideBarButtonIcon\n                    className={'fa fa-tasks'}\n                    onClick={() => {\n                        if (locationEditing || taskEditing || processEditing) {\n                            setConfirmDeleteModal(true)\n                        }\n                        else{props.setShowSideBarPage(mode)}\n                    }}\n                    currentMode={currentMode}\n                    mode={mode}\n                >\n                    <style.SideBarButtonText>Routes</style.SideBarButtonText>\n                </style.SideBarButtonIcon>\n            </>\n        )\n    }\n\n    else if (mode === 'settings') {\n        return (\n            <>\n                {handleConfirmationModal()}\n                <style.SideBarButtonIcon\n                    className={'fas fa-cog'}\n                    onClick={() => {\n                        if (locationEditing || taskEditing || processEditing) {\n                            setConfirmDeleteModal(true)\n                        }\n                        else{props.setShowSideBarPage(mode)}\n                    }}\n                    currentMode={currentMode}\n                    mode={mode}\n\n                >\n                    <style.SideBarButtonText>Settings</style.SideBarButtonText>\n                </style.SideBarButtonIcon>\n            </>\n        )\n    }\n\n    else {\n        return (\n            <style.SideBarButtonIcon\n                className={\"icon-\" + mode}\n                onClick={() => {\n                    props.setShowSideBarPage(mode)\n                }}\n                currentMode={currentMode}\n                mode={mode}\n            />\n        )\n    }\n\n}\n\nexport default SideBarButton\n","import { useDispatch, useSelector } from 'react-redux'\n\nimport {\n    SELECT_LOCATION,\n    SET_SELECTED_LOCATION,\n    SET_SELECTED_LOCATION_COPY,\n    SET_SELECTED_LOCATION_CHILDREN_COPY,\n    DESELECT_LOCATION,\n    EDITING_LOCATION,\n} from '../types/locations_types'\n\nimport * as stationActions from './stations_actions.js'\nimport { deleteStation } from './stations_actions.js'\nimport * as positionActions from './positions_actions.js'\nimport { deletePosition } from './positions_actions.js'\nimport { setSelectedDevice, putDevices } from './devices_actions'\nimport { deleteDashboard } from './dashboards_actions'\nimport { deleteTask } from './tasks_actions'\nimport { putProcesses } from './processes_actions'\n\nimport { deepCopy } from '../../methods/utils/utils';\nimport uuid from 'uuid';\n\n\n// // get\n// // ******************************\n// export const getLocations = () => {\n//     return async dispatch => {\n//         const stations = await dispatch(stationActions.getStations())\n//         const positions = await dispatch(positionActions.getPositions())\n//         return ({ stations: stations, positions: positions })\n//     }\n// }\n// // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// // post\n// // ******************************\n// export const postLocation = (location) => {\n//     return async dispatch => {\n//         if (location.schema == 'station') {\n//             return dispatch(stationActions.postStation(location))\n//         } else if (location.schema == 'position') {\n//             return dispatch(positionActions.postPosition(location))\n//         }\n//     }\n// };\n// // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// // put\n// // ******************************\n// export const putLocation = (location, ID) => {\n//     return async dispatch => {\n//         if (location.schema == 'station') {\n//             return dispatch(stationActions.putStation(location, ID))\n//         } else if (location.schema == 'position') {\n//             return dispatch(positionActions.putPosition(location, ID))\n//         }\n//     }\n// }\n// // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// // delete\n// // ******************************\n// export const deleteLocation = (id) => {\n//     return async dispatch => {\n//         dispatch(stationActions.deleteStation(id))\n//         // TODO: Why is this here? Is this a catch because it may either be a position or location?\n//         // dispatch(positionActions.deletePosition(id))\n//     }\n// }\n// // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// export const addLocation = (location) => {\n//     return async dispatch => {\n//         if (location.schema == 'station') {\n//             dispatch(stationActions.addStation(location))\n//         } else if (location.schema == 'position') {\n//             dispatch(positionActions.addPosition(location))\n//         }\n//     }\n// }\n\n// export const updateLocation = (location) => {\n//     return async dispatch => {\n//         if (location.schema == 'station') {\n//             dispatch(stationActions.updateStation(location))\n//         } else if (location.schema == 'position') {\n//             dispatch(positionActions.updatePosition(location))\n//         }\n\n//     }\n// }\n\n// export const updateChildren = (location) => {\n//     return async dispatch => {\n\n\n\n//         dispatch(stationActions.updateStation(location))\n//         dispatch(positionActions.updatePosition(location))\n\n//     }\n// }\n\n\n// export const updateLocations = (locations) => {\n//     return async dispatch => {\n//         Object.values(locations).forEach(location => {\n//             if (location.schema == 'station') {\n//                 dispatch(stationActions.updateStation(location))\n//             } else if (location.schema == 'position') {\n//                 dispatch(positionActions.updatePosition(location))\n//             }\n//         })\n//     }\n// }\n\n// export const removeLocation = (location) => {\n\n//     const {\n//         _id,\n//         children\n//     } = location\n\n//     if (location.schema === 'station') {\n\n//         return async dispatch => {\n//             dispatch(stationActions.removeStation(_id))\n\n//             children.forEach((child) => {\n//                 dispatch(positionActions.removePosition(child))\n//             })\n//         }\n//     }\n\n//     else if (location.schema === 'position') {\n//         return async dispatch => {\n//             dispatch(positionActions.removePosition(_id))\n//         }\n//     }\n// }\n\n// export const setLocationAttributes = (id, attr) => {\n//     return async dispatch => {\n//         dispatch(stationActions.setStationAttributes(id, attr))\n//         dispatch(positionActions.setPositionAttributes(id, attr))\n//     }\n// }\n\n// export const selectLocation = (id) => {\n//     return { type: SELECT_LOCATION, payload: { id } }\n// }\n\n// export const setSelectedLocation = (location) => {\n//     return { type: SET_SELECTED_LOCATION, payload: { location } }\n// }\n\n// export const deselectLocation = () => {\n//     return { type: DESELECT_LOCATION }\n// }\n\n// export const setSelectedLocationCopy = (location) => {\n//     return { type: SET_SELECTED_LOCATION_COPY, payload: location }\n// }\n\n// export const setSelectedLocationChildrenCopy = (locationChildren) => {\n//     return { type: SET_SELECTED_LOCATION_CHILDREN_COPY, payload: locationChildren }\n// }\n\n\nexport const editing = (bool) => {\n    return { type: EDITING_LOCATION, payload: bool }\n}\n\n\n// ======================================== //\n//                                          //\n//  Back, Delete, Save Location Functions   //\n//                                          //\n// ======================================== //\n\n\n/**\n * This handles when the back button is pressed on either devices or locations\n * If the location is new, it is deleted;\n * otherwise, it is reverted to the state it was when editing begun.\n * @param {*} props\n */\n\nexport const sideBarBack = (props) => {\n    \n}\n\n\n\n\n\n/**\n* Called when the delete button is pressed. Deletes the location, its children, its dashboards,\n* and any tasks associated with the location\n*/\nexport const deleteLocationProcess = (props) => {\n\n}\n","export const SELECT_LOCATION = 'SELECT_LOCATION'\nexport const DESELECT_LOCATION = 'DESELECT_LOCATION'\nexport const SET_SELECTED_LOCATION = 'SET_SELECTED_LOCATION'\nexport const SET_SELECTED_LOCATION_COPY = 'SET_SELECTED_LOCATION_COPY'\nexport const SET_SELECTED_LOCATION_CHILDREN_COPY = 'SET_SELECTED_LOCATION_CHILDREN_COPY'\nexport const EDITING_LOCATION = 'EDITING_LOCATION'\n","import styled from 'styled-components'\n\nexport const SideBarContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 6rem;\n    margin-top: 0rem;\n\n    transition: width 0.25s ease-in-out;\n\n    @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n        width: 4.5rem;\n\n    }\n`","import {\n    SET_MODE,\n    SET_ACTION,\n    SET_WIDTH,\n    SET_OPEN,\n} from '../types/sidebar_types'\n\nexport const setMode = (mode) => {\n    return { type: SET_MODE, payload: {mode}}\n}\n\nexport const setAction = (action) => {\n    return { type: SET_ACTION, payload: {action} }\n}\n\nexport const setWidth = (width) => {\n    return { type: SET_WIDTH, payload: width }\n}\n\nexport const setOpen = (state) => {\n    return { type: SET_OPEN, payload: state}\n}\n","import React, { useState, useMemo, useRef, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory, useLocation } from 'react-router-dom'\n\nimport SideBarButton from '../side_bar_buttons/side_bar_button';\n\nimport * as styled from './side_bar_switcher.style'\nimport { setMode } from '../../../redux/actions/sidebar_actions'\n\nimport { setSelectedStation } from '../../../redux/actions/stations_actions'\nimport { setSelectedPosition } from '../../../redux/actions/positions_actions'\nimport { deselectTask } from '../../../redux/actions/tasks_actions'\nimport { editingTask } from '../../../redux/actions/tasks_actions'\nimport { editingProcess } from '../../../redux/actions/processes_actions'\n\n\n\nconst SideBarSwitcher = (props) => {\n\n    const dispatch = useDispatch()\n    const dispatchSetSelectedStation = (station) => dispatch(setSelectedStation(station))\n    const dispatchSetSelectedPosition = (position) => dispatch(setSelectedPosition(position))\n\n    const dispatchTaskEditing = (props) => dispatch(editingTask(props))\n    const dispatchProcessEditing = (props) => dispatch(editingProcess(props))\n\n    const MiRMapEnabled = useSelector(state => state.localReducer.localSettings.MiRMapEnabled)\n    const mode = useSelector(state => state.sidebarReducer.mode)\n    const serverSettings = useSelector(state => state.settingsReducer.settings)\n    const deviceEnabled = serverSettings.deviceEnabled\n    const wrapperRef = useRef(null)\n\n    const history = useHistory()\n    const url = useLocation().pathname.split('/')[1]\n\n    return (\n        <styled.SideBarContainer ref={wrapperRef}>\n\n            <SideBarButton\n                mode={'locations'}\n                setShowSideBarPage={(page) => {\n                    dispatch(setMode(page));\n                    history.push(`/${page}`)\n                    dispatchTaskEditing(false)\n                    dispatchProcessEditing(false)\n                }}\n                currentMode={url}\n            />\n\n            <SideBarButton\n                mode={'tasks'}\n                setShowSideBarPage={(page) => {\n                    dispatch(setMode(page));\n                    history.push(`/${page}`)\n                    dispatchSetSelectedStation(null)\n                    dispatchSetSelectedPosition(null)\n                    dispatch(deselectTask())\n                    dispatchProcessEditing(false)\n                    dispatchTaskEditing(false)\n                }}\n                currentMode={url}\n            />\n\n            <SideBarButton\n                mode={'processes'}\n                setShowSideBarPage={(page) => {\n                    dispatch(setMode(page));\n                    history.push(`/${page}`)\n                    dispatchSetSelectedStation(null)\n                    dispatchSetSelectedPosition(null)\n                    dispatch(deselectTask())\n                    dispatchTaskEditing(false)\n                    dispatchProcessEditing(false)\n                }}\n                currentMode={url}\n            />\n\n            {/* Commented out for now, probably going to delete */}\n            {/* <SideBarButton\n                mode={'objects'}\n                setShowSideBarPage={(page) => {\n                    dispatch(setMode(page));\n                    history.push(`/${page}`)\n                    dispatchSetSelectedStation(null)\n                    dispatchSetSelectedPosition(null)\n                    dispatch(deselectTask())\n                }}\n                currentMode={url}\n            /> */}\n            {/* {MiRMapEnabled &&\n              <SideBarButton\n                  mode={'scheduler'}\n                  setShowSideBarPage={(page) => {\n                      dispatch(setMode(page));\n                      history.push(`/${page}`)\n                    dispatchSetSelectedStation(null)\n                    dispatchSetSelectedPosition(null)\n                      dispatch(deselectTask())\n                  }}\n                  currentMode={url}\n              />\n            } */}\n\n            <SideBarButton\n                mode={'lots'}\n                setShowSideBarPage={(page) => {\n                    dispatch(setMode(page));\n                    history.push(`/${page}`)\n                    dispatchTaskEditing(false)\n                }}\n                currentMode={url}\n            />\n\n            {!!deviceEnabled &&\n              <SideBarButton\n                  mode={'devices'}\n                  setShowSideBarPage={(page) => {\n                      dispatch(setMode(page));\n                      history.push(`/${page}`)\n                      dispatchTaskEditing(false)\n                  }}\n                  currentMode={url}\n              />\n            }\n\n            <SideBarButton\n                mode={'settings'}\n                setShowSideBarPage={(page) => {\n                    dispatch(setMode(page));\n                    history.push(`/${page}`)\n                    dispatchSetSelectedStation(null)\n                    dispatchSetSelectedPosition(null)\n                    dispatch(deselectTask())\n                    dispatchTaskEditing(false)\n                }}\n                currentMode={url}\n            />\n\n\n        </styled.SideBarContainer>\n    )\n\n}\n\nexport default SideBarSwitcher\n","import styled from 'styled-components'\nimport { RGB_Linear_Shade, hexToRGBA } from '../../../../methods/utils/color_utils'\n\n\n// ========== Content ========== //\nexport const ContentContainer = styled.div`\n    flex-grow: 1;\n    padding: 1rem;\n    padding-top: 1.5rem;\n\n    display: flex;\n    flex-direction: column;\n\n`\n\nexport const ContentHeader = styled.div`\n    display: flex; \n    flex-direction: row;\n`\n\nexport const ContentTitle = styled.h1`\n    font-family: ${props => props.theme.font.primary};\n    font-size: 2rem;\n    font-weight: 500;\n    color: ${props => props.theme.schema.locations};\n    flex-grow: 1;\n`\n\n// ========== Location List ========== //\n\nexport const LocationList = styled.ul`\n    flex-grow: 1;\n    padding: 0;\n`\n\nexport const LocationItem = styled.div`\n    width: auto;\n    height: 2rem;\n    box-sizing: content-box;\n\n    text-align: center;\n\n    background: transparent;\n    border-radius: 0.5rem;\n    margin-bottom: 0.4rem;\n\n    border: 0.1rem solid white;\n    box-sizing: border-box;\n\n    cursor: pointer;\n    user-select: none;\n\n    &:hover {\n        background: ${props => props.theme.bg.octonary};\n    }\n`\n\nexport const LocationText = styled.span`\n    height: 2rem;\n    line-height: 2rem;\n    box-sizing: content-box;\n\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz4};\n    font-weight: 500;\n    color: ${props => props.theme.bg.octonary};\n\n    ${props => props.selected && `\n        background: ${props.theme.schema.locations};\n        -webkit-text-fill-color: transparent;\n        -webkit-background-clip: text;\n        display:block;\n    `}\n`\n\n// ========== Type Buttons & Containers ========== //\n\n\n\nexport const CustomTypesContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n\n    margin: 0.5rem 0 0.5rem 0;\n    justify-content: center;\n`\n\nexport const Label = styled.h3`\n    font-family: ${props => props.theme.font.primary};\n    font-size: 1.5rem;\n    font-weight: 500;\n    color: ${props => props.theme.schema[props.schema].solid};\n    user-select: none;\n    text-align: center;\n`","import styled from 'styled-components'\nimport { RGB_Linear_Shade, hexToRGBA } from '../../../../methods/utils/color_utils'\nimport * as commonCss from \"../../../../common_css/common_css\";\n\n\n// ========== Content ========== //\nexport const Container = styled.div`\n    flex-grow: 1;\n    padding: 1rem;\n    padding-top: 1.5rem;\n    display: flex;\n    flex-direction: column;\n    overflow-x: hidden;\n    margin-right: .5rem;\n\n\n`\n\nexport const Header = styled.div`\n    display: flex;\n    flex-direction: row;\n\n`\n\nexport const Title = styled.h1`\n    font-family: ${props => props.theme.font.primary};\n    font-size: 2rem;\n    font-weight: 500;\n    color: ${props => props.theme.schema[props.schema].solid};\n    flex-grow: 1;\n    user-select: none;\n`\n\n// ========== List ========== //\n\nexport const List = styled.ul`\n    flex-grow: 1;\n    padding: 0;\n`\n\nexport const ListItem = styled.div`\n    display: flex;\n    align-items: center;\n    width: auto;\n    height: 3rem;\n    text-overflow: ellipsis;\n    justify-content: space-between;\n    background: transparent;\n    padding: 0rem 1rem;\n\n    border-radius: 0.5rem;\n    border: 0.1rem solid;\n    border-color: ${props => props.error ? 'red' : 'white'};\n  \n    // border-color: ${props => props.isNew ? 'blue' : 'white'};\n\n  ${props => props.isNew &&  commonCss.newGlow};\n\n    margin-bottom: 1rem;\n\n\n`\n\nexport const ListItemRect = styled.div`\n    height: 100%;\n    width: 100%;\n\n    border-radius: 0.5rem;\n    text-align: center;\n    padding-right:0.5rem;\n    cursor: pointer;\n    user-select: none;\n\n    border: 0.1rem solid white;\n    box-sizing: border-box;\n\n    &:hover {\n        background: ${props => props.theme.bg.octonary};\n    }\n\n`\nexport const LocationTypeGraphic = styled.svg`\n    height: 1.5rem;\n`\nexport const ListItemTitle = styled.h1`\n\n    font-family: ${props => props.theme.font.primary};\n    /* font-size: ${props => props.theme.fontSize.sz3}; */\n    font-size: 1rem;\n    font-weight: 500;\n    color: ${props => props.theme.bg.octonary};\n    user-select: none;\n\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    margin-right:0.5rem;\n    margin-bottom: 0rem;\n    width: 75%;\n`\n\nexport const ListItemIcon = styled.i`\n\n    font-size: 1.3rem;\n    color: lightgreen;\n\n\n\n    &:hover {\n        cursor: pointer;\n        color:green;\n    }\n`\n\nexport const ListItemIconContainer = styled.div`\n    position: relative;\n    display: flex;\n    width: 10%;\n`\n\nexport const ErrorContainer = styled.div`\n\tposition: relative;\n`\n","import styled from 'styled-components'\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\n\nexport const Header = styled.div`\n    display: flex; \n    flex-direction: row;\n    width: 100%;\n    justify-content: space-between;\n`\n\nexport const Title = styled.h1`\n    font-family: ${props => props.theme.font.primary};\n    font-size: 2rem;\n    font-weight: 500;\n    color: ${props => props.theme.schema[props.schema].solid};\n    user-select: none;\n`\n\nexport const ClearIcon = styled(DeleteForeverIcon)`\n\n`","import styled from 'styled-components'\nimport {globStyle} from '../../../global_style'\n\nexport const PlusSymbol = styled.i`\n    display: flex;\n    flex-direction: row;\n    flex-basis: 5rem;\n    flex-shrink: 0;\n\n    color: ${props => props.disabled ? props.theme.bg.senary : props.theme.bg.octonary};\n    height: 2rem;\n    width: 2rem;\n    margin: none;\n    padding: none;\n    font-size: 2rem;\n    font-weight: 400;\n    text-align: center;\n    vertical-align: middle;\n    line-height: 2rem;\n\n    transform: translate(-0.52rem, -0.16rem);\n`;\n\nexport const PlusButton = styled.button`\n    width: 2rem;\n    height: 2rem;\n    margin: 0.25rem;\n    margin-top: 0.2rem;\n    background-color: transparent;\n    border: none;\n    text-align: center;\n    box-sizing: border-box;\n\n    :focus {\n      outline: 0;\n    }\n\n`;\n","import React from 'react';\nimport * as style from './plus_button.style'\n\nconst PlusButton = (props) => (\n    <style.PlusButton onClick={props.onClick}>\n        <style.PlusSymbol\n            style={{...props.style}}\n            className={\"far fa-plus-square\"}\n            disabled={props.disabled}\n            schema={props.schema}\n        >\n        </style.PlusSymbol>\n    </style.PlusButton>\n);\n\nexport default PlusButton;\n","import styled from 'styled-components'\n\nexport const BackSymbol = styled.i`\n\n    font-size: 1.2rem;\n    font-weight: 800;\n\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n\n    color: ${props => {\n      if (props.active) {\n        return props.theme.bg.tertiary\n      } else if (props.hovered) {\n        return !!props.schema ? props.theme.schema[props.schema].solid : props.theme.fg.primary\n      } else {\n        return props.theme.bg.octonary\n      }\n    }}\n`;\n\nexport const BackButton = styled.button`\n    width: 2rem;\n    min-width: 2rem;\n    height: 2rem;\n    min-height: 2rem;\n    \n    margin: 0.3rem 0.5rem 0.3rem 0.5rem;\n    padding: 0;\n    border-radius: 0.35rem;\n    background-color: transparent;\n\n    position: relative;\n\n    border: 0.1rem solid ${props => props.theme.bg.octonary};\n    box-sizing: content-box;\n\n    :focus {\n      outline: 0;\n    }\n\n    border: 0.1rem solid ${props => props.hovered ? (!!props.schema ? props.theme.schema[props.schema].solid : props.theme.fg.primary) : props.theme.bg.octonary};\n    &:active {\n      background: ${props => !!props.schema ? props.theme.schema[props.schema].solid : props.theme.fg.primary};\n    }\n\n    ${props => {\n      if (props.active) {\n        return `\n          border: 0.1rem solid transparent;\n          background: ${!!props.schema ? props.theme.schema[props.schema].solid : props.theme.fg.primary};\n        `\n      } else if (props.hovered) {\n        return `\n          border: 0.1rem solid ${!!props.schema ? props.theme.schema[props.schema].solid : props.theme.fg.primary};\n          background: transparent;\n        `\n      } else {\n        return `\n          border: 0.1rem solid ${props.theme.bg.octonary};\n          background: transparent;\n        `\n      }\n    }}\n`;\n","import React, { useState } from 'react';\nimport * as style from './back_button.style'\nimport {globStyle} from '../../../global_style'\n\nconst BackButton = (props) => {\n\n    const [hovered, setHovered] = useState(false)\n    const [active, setActive] = useState(false)\n\n\n    return (\n        <style.BackButton\n            hovered={props.hovered}\n            active={props.active}\n            onClick={props.onClick}\n            schema={props.schema}\n            style={{...props.containerStyle}}\n\n            onMouseEnter={() => setHovered(true)}\n            onMouseLeave={() => setHovered(false)}\n            onMouseDown={() => setActive(true)}\n            onMouseUp={() => setActive(false)}\n        >\n            <style.BackSymbol\n                hovered={props.hovered}\n                active={props.active}\n                style={{...props.style}}\n\n                disable={props.disabled}\n                schema={props.schema}\n                className=\"fa fa-chevron-left\"\n            />\n\n        </style.BackButton>\n    )\n}\n\nexport default BackButton;\n","import styled, {css} from 'styled-components'\nimport {hexToRGBA, RGB_Linear_Shade} from \"../../../methods/utils/color_utils\";\n\nconst activeStyle = css`\n\tbox-shadow: none;\n\ttransform: translateY(4px);\n\tcolor:  ${props => RGB_Linear_Shade(-0.1, hexToRGBA(props.color))};\n\tbackground-color:  ${props => RGB_Linear_Shade(-0.1, hexToRGBA(props.backgroundColor))};\n`\n\nconst hoverStyle = css`\n\tbox-shadow: 5px 5px 5px rgba(0, 0, 0, 0.5);\n\ttransform: translateY(-1px);\n\tcolor:  ${props => RGB_Linear_Shade(0.01, hexToRGBA(props.color))};\n\tbackground-color:  ${props => RGB_Linear_Shade(0.01, hexToRGBA(props.backgroundColor))};\n`\n\n\n\nexport const Container = styled.button`\n  width: ${props => props.width};\n  height: ${props => props.height};\n  color: ${props => props.color};\n  \n  // flex layout\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\t\n  // margins\n  margin: 0;\n  \n  outline: none;\n  &:focus {\n\toutline: none;\n  }\n  \n\tborder: thin solid ${props => props.theme.bg.secondary};\n\tborder-radius: .5rem;\n\tbox-shadow: 1px 1px 5px rgba(0, 0, 0, 0.5);\n\ttransition: all 0.2s ease 0s;\n\tcursor: pointer;\n\toutline: none;\n\t\n  \n  \n  &:hover {\n\t${props => props.hoverable && hoverStyle}\n  }\n  \n  &:active {\n\t${props => props.clickable && activeStyle}\n  }\n  \n  ${props=> props.active && activeStyle}\n  \n  &:focus {\n    outline: none;\n  }\n  \n  ${props => props.disabled &&\n\t{\n\t\t// backgroundImage: `linear-gradient(to bottom right, grey, white)`,\n\t\tpointerEvents: \"none\",\n\t}\n\t\n\t\n}\n  \n\tbackgroundColor: ${props => props.backgroundColor};\n\tpadding: .5rem;\n`\n","import styled from \"styled-components\";\nimport {LightenDarkenColor} from \"../../../../../../methods/utils/color_utils\";\nimport Textbox from \"../../../../../basic/textbox/textbox\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\n\nexport const SchemaIcon = styled.i`\n    color: ${props => props.color};\n    padding: 0;\n    font-size: 2rem;\n    margin: 0;\n    height: fit-content;\n    width: fit-content;\n    // background: blue;\n\n`\n\n// ===== Delete Button ===== //\nexport const DeleteButtonIcon = styled(DeleteForeverIcon)`\n    color: white;\n\n    &:hover {\n        color: ${LightenDarkenColor('#FFFFFF', -20)};\n    }\n\n    width: 5rem;\n    height: 5rem;\n  \n`\n\n\nexport const ColorDropdownInnerContainer = styled.div`\n    height: 100%;\n    line-height: 100%;\n\n    position: relative;\n    width: 8rem;\n    margin-right: 1rem;\n    z-index: 0;\n    // z-index: 100;\n`\n\nexport const DeleteButton = styled.button`\n    margin: 0;\n    padding: 0;\n    background: transparent;\n    border: transparent;\n    outline: none;\n    z-index: 7;\n    color: white;\n    \n    &:focus {\n        outline: none;\n    }\n\n    width: 3rem;\n    margin-left: 1rem;\n\n   \n`\n\nexport const RightContentContainer = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: ${props => props.theme.bg.senary};\n    width: 8rem;\n    border-left: 1px solid ${props => props.theme.bg.tertiary};\n    // padding-left: 1rem;\n    border-top-right-radius: 0.6rem;\n    border-bottom-right-radius: 0.6rem;\n`\n\nexport const TaskName = styled.span`\n\n  font: ${props => props.theme.font.primary};\n  font-size: ${props => props.theme.fontSize.sz3};\n\n  color: ${props => props.theme.bg.tertiary};\n\n`\n\nexport const TransparentTextBox = styled(Textbox)`\n    background: rgba(0 ,0 ,0 , 0.2);\n    border-bottom: 2px solid rgba(0 ,0 ,0 , 0.1);\n\n    &:focus {\n        background-color: rgba(0 ,0 ,0 , 0.3);\n        border-bottom: 2px solid white;\n        outline: none !important;\n    }\n\n    text-align: center;\n`\n\nexport const CenterContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    flex-grow: 1;\n    align-items: center;\n    justify-content: center;\n`\n\nexport const DashboardEditButton = styled.div`\n    height: 6rem;\n\n    display: flex;\n    flex: 1;\n    flex-direction: row;\n        \n    background: ${props => `linear-gradient(180deg, \n                                ${LightenDarkenColor(props.color, 20)} 0%, \n                                ${props.color} 50%, \n                                ${LightenDarkenColor(props.color, -20)} 100%)`};\n    border-top-left-radius: 0.6rem;\n    border-bottom-left-radius: 0.6rem;\n    overflow: visible;\n        \n    // margins\n    // margin: 0 2rem 0.5rem 2rem;\n        \n    // padding\n    padding: 0.5rem 1rem 0.5rem 1rem;\n    \n    outline: none;\n    &:focus {\n        outline: none;\n    }\n\n    letter-spacing: 1.5px;\n    box-shadow: 2px 2px 2px rgba(0, 0, 0, 0.5);\n    \n    outline: none;\n    user-select: none;\n\n    transition: transform 0.2s ease;\n\n    cursor: grab;\n    &:active {\n        box-shadow: 2px 2px 2px rgba(0,0,0,0.5);\n        transform: translateY(-2px);\n        cursor: grabbing;\n    }\n\n}\n`\n\nexport const Container = styled.div`\n    height: 6rem;\n\n    display: flex;\n    flex-direction: row;\n        \n    border-radius: 0.6rem;\n    overflow: visible;\n        \n    // margins\n    margin: 0 2rem 0.5rem 2rem;\n        \n    outline: none;\n    &:focus {\n        outline: none;\n    }\n\n    letter-spacing: 1.5px;\n    box-shadow: 2px 2px 2px rgba(0, 0, 0, 0.5);\n    \n    outline: none;\n    user-select: none;\n\n    transition: transform 0.2s ease;\n\n    cursor: grab;\n    &:active {\n        box-shadow: 2px 2px 2px rgba(0,0,0,0.5);\n        transform: translateY(-2px);\n        cursor: grabbing;\n    }\n\n}\n`","import styled, {css} from \"styled-components\";\nimport {LightenDarkenColor} from \"../../../../../methods/utils/color_utils\";\n\nexport const borderGlowCss = css`\n    --border-width: .1rem;\n    background: none;\n\n    @keyframes moveGradient {\n        50% {\n          background-position: 100% 50%;\n        }\n      }\n\n    border-radius: var(--border-width);\n\n    &::after {\n    position: absolute;\n    content: \"\";\n    top: calc(-1 * var(--border-width));\n    left: calc(-1 * var(--border-width));\n    z-index: -1;\n    width: calc(100% + var(--border-width) * 2);\n    height: calc(100% + var(--border-width) * 2);\n    background: linear-gradient(\n        60deg,\n        /* hsl(224, 85%, 66%), */\n        /* hsl(269, 85%, 66%), */\n        /* hsl(314, 85%, 66%), */\n        /* hsl(359, 85%, 66%), */\n        hsl(44, 85%, 66%),\n        hsl(89, 85%, 66%),\n        hsl(134, 85%, 66%),\n        hsl(179, 85%, 66%)\n    );\n    background-size: 300% 300%;\n    background-position: 0 50%;\n    border-radius: calc(2 * var(--border-width));\n    animation: moveGradient 4s alternate infinite;\n}\n`\n\nexport const ContainerCss = css`\n  position: relative;\n  user-select: none;\n\n  // flex layout\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  flex-grow: 1;\n  width: 100%;\n  overflow: hidden;\n\n  background: ${props => `linear-gradient(180deg, \n                            ${LightenDarkenColor(props.background, 20)} 0%, \n                            ${props.background} 50%, \n                            ${LightenDarkenColor(props.background, -20)} 100%)`};\n  border-radius: 0.6rem;\n\n\n  // margins\n  margin: 0 0 0.1rem 0;\n\n  // padding\n  padding: 0.5rem 1rem 0.5rem 1rem;\n\n  outline: none;\n  &:focus {\n    outline: none;\n  }\n\n  letter-spacing: 1.5px;\n  border: none;\n  box-shadow: ${props => props.clickable ? 'none' : `2px 2px 2px rgba(0, 0, 0, 0.5)`};\n  transition: all 0.1s ease 0s;\n  cursor: pointer;\n  outline: none;\n\n  &:hover {\n    ${props => props.hoverable && !props.clickable &&\n            {\n              boxShadow: \"3px 3px 3px rgba(0, 0, 0, 0.5)\",\n              transform: \"translateY(-1px)\",\n            }\n    }\n  }\n\n  ${props => props.clickable && !props.disabled &&\n          `&:active {\n      background: ${`linear-gradient(180deg, \n          ${LightenDarkenColor(props.background, -20)} 0%, \n          ${props.background} 50%, \n          ${LightenDarkenColor(props.background, 20)} 100%)`\n          }\n    }`\n  }\n\n          ${props => props.disabled &&\n                  {\n                    color: props.theme.bg.quaternary,\n                    background: `linear-gradient(180deg, rgba(255,255,255,0.4) 0%, rgba(255,255,255,0.4) 100%), ${LightenDarkenColor(props.background, -60)}`,\n                    pointerEvents: \"none\",\n                  }\n          }\n\n            // --border-width: 3px;\n          ${props => props.borderGlow &&\n                  borderGlowCss\n          }\n\n          ${props => props.css};\n`\n\nexport const ErrorContainerComponent = styled.div`\n    width: auto;\n    height: auto;\n    position: absolute;\n    top: 50%;\n    right: 1rem;\n    transform: translateY(-50%);\n    margin: 0;\n    padding: 0;\n`;\n\nexport const conditionTextCss = css`\n    font: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz3};\n    max-width: 100%;\n    overflow: hidden;\n    text-overflow: ellipsis;\n`","import styled, { css } from 'styled-components'\n\nimport { borderGlowCss, ContainerCss, conditionTextCss } from \"../dashboard_buttons.style\"\n\n\nexport const Container = styled.button`\n    ${ContainerCss};\n    \n    // flex layout\n    flex-direction: column;\n    \n    // padding\n    padding: 0.5rem 1rem 0.5rem 1rem;\n`\n\nexport const ConditionText = styled.span`\n    ${conditionTextCss};\n`\n\nexport const IconContainer = styled.div`\n    position: absolute;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: ${props => props.theme.bg.senary};\n    right: 0;\n    top: 0;\n    bottom: 0;\n    width: 4rem;\n    border-left: 1px solid ${props => props.theme.bg.tertiary};\n`","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\n// import components\nimport ErrorTooltip from \"../../../../../basic/form/error_tooltip/error_tooltip\";\nimport {SchemaIcon} from \"../../dashboard_editor/button_fields/button_fields.style\";\n\n// Import Styles\nimport * as style from './dashboard_button.style';\nimport * as dashboard_buttons_style from '../dashboard_buttons.style';\nimport { theme } from \"../../../../../../theme\"\n\n// import logging\nimport log from '../../../../../../logger'\nimport {DEVICE_CONSTANTS} from \"../../../../../../constants/device_constants\";\n\nconst logger = log.getLogger(\"Dashboards\", \"EditDashboard\");\n\nconst DashboardButton = (props => {\n\n    const {\n        color,\n        title,\n        children,\n        onClick,\n        deviceType,\n        taskID,\n        disabled,\n        width,\n        height,\n        clickable,\n        hoverable,\n        titleStyle,\n        containerStyle,\n        containerCss,\n        error,\n        type = \"\",\n        iconColor,\n        iconClassName\n    } = props\n\n\n    return (\n        <style.Container\n            type={\"button\"}\n            disabled={disabled}\n            width={width}\n            height={height}\n            background={color}\n            onClick={clickable ? ()=>onClick(taskID, deviceType) : null}\n            borderGlow={taskID === 'hil_success'}\n            clickable={clickable}\n            hoverable={hoverable}\n            style={containerStyle}\n            css={containerCss}\n        >\n            <div style={{display: \"flex\", alignItems: \"center\"}}>\n                <style.ConditionText style={titleStyle}>{title}</style.ConditionText>\n                {(iconColor && iconClassName) &&\n                <style.IconContainer>\n                    <SchemaIcon className={iconClassName} color={color ? color : iconColor}></SchemaIcon>\n                </style.IconContainer>\n\n                }\n\n                {children && children}\n                <ErrorTooltip\n                    visible={error}\n                    text={error}\n                    ContainerComponent={dashboard_buttons_style.ErrorContainerComponent}\n                />\n            </div>\n\n\n\n\n        </style.Container>\n    )\n\n})\n\n// Specifies propTypes\nDashboardButton.propTypes = {\n    clickable: PropTypes.bool,\n    hoverable: PropTypes.bool,\n    title: PropTypes.string,\n    taskID: PropTypes.string,\n    onClick: PropTypes.func,\n    disabled: PropTypes.bool\n};\n\n// Specifies the default values for props:\nDashboardButton.defaultProps = {\n    clickable: true,\n    hoverable: true,\n    title: \"\",\n    taskID: \"\",\n    onClick: () => { },\n    disabled: false\n\n};\n\nexport default (DashboardButton)\n","import { useEffect } from \"react\";\n\n// custom hook that listens for clicks outside of the ref component,\n// and calls the provided handler when outside click is detected\nfunction useOnClickOutside(ref, handler) {\n    useEffect(\n        () => {\n            const listener = event => {\n                // Do nothing if clicking ref's element or descendent elements\n                if (!ref.current || ref.current.contains(event.target)) {\n                    return;\n                }\n\n                handler(event)\n            }\n\n            document.addEventListener('mousedown', listener, {passive:true})\n            document.addEventListener('touchstart', listener, {passive:true})\n\n            return () => {\n                document.removeEventListener('mousedown', listener, {passive:true})\n                document.removeEventListener('touchstart', listener, {passive:true})\n            }\n        },\n        // Add ref and handler to effect dependencies\n        // It's worth noting that because passed in handler is a new ...\n        // ... function on every render that will cause this effect ...\n        // ... callback/cleanup to run every render. It's not a big deal ...\n        // ... but to optimize you can wrap handler in useCallback before ...\n        // ... passing it into this hook.\n        [ref, handler]\n    )\n}\n\nexport default useOnClickOutside\n\n// EXAMPLE\n\n// // Usage\n// function App() {\n//     // Create a ref that we add to the element for which we want to detect outside clicks\n//     const ref = useRef();\n//     // State for our modal\n//     const [isModalOpen, setModalOpen] = useState(false);\n//     // Call hook passing in the ref and a function to call on outside click\n//     useOnClickOutside(ref, () => setModalOpen(false));\n\n//     return (\n//       <div>\n//         {isModalOpen ? (\n//           <div ref={ref}>\n//             👋 Hey, I'm a modal. Click anywhere outside of me to close.\n//           </div>\n//         ) : (\n//           <button onClick={() => setModalOpen(true)}>Open Modal</button>\n//         )}\n//       </div>\n//     );\n//   }\n","import React, {useEffect, useRef, useState} from 'react'\nimport PropTypes from 'prop-types'\n\n// Import Styles\nimport * as style from './bounce_button.style'\nimport DashboardButton from \"../../widgets/widget_pages/dashboards_page/dashboard_buttons/dashboard_button/dashboard_button\"\nimport useOnClickOutside from \"../../../hooks/useOnClickOutside\";\n\nconst BounceButton = (props => {\n\n    const {\n        color,\n        children,\n        onClick,\n        disabled,\n        width,\n        height,\n        clickable,\n        hoverable,\n        containerStyle,\n        Component,\n        backgroundColor,\n        active,\n        onClickOutside\n    } = props\n\n    const ref = useRef() // ref for useOnClickOutside\n    useOnClickOutside(ref, onClickOutside) // calls onClickOutside when click outside of element\n\n    return(\n        <style.Container\n            disabled={disabled}\n            width={width}\n            height={height}\n            onClick={onClick}\n            clickable={clickable}\n            hoverable={hoverable}\n            color={color}\n            backgroundColor={backgroundColor}\n            style={containerStyle}\n            active={active}\n            ref={ref}\n        >\n            { children}\n        </style.Container>\n    )\n\n})\n\n\n// Specifies propTypes\nBounceButton.propTypes = {\n    clickable: PropTypes.bool,\n    hoverable: PropTypes.bool,\n    active: PropTypes.bool,\n    onClick: PropTypes.func,\n    onClickOutside: PropTypes.func,\n    disabled: PropTypes.bool\n}\n\n// Specifies the default values for props:\nBounceButton.defaultProps = {\n    clickable: true,\n    hoverable: true,\n    onClick: () => {},\n    onClickOutside: () => {},\n    disabled: false,\n    width: \"auto\",\n    height: \"auto\",\n    backgroundColor: \"#FFFFFF\",\n    active: false,\n\n}\n\nexport default BounceButton\n","import React from 'react'\n\n// Import styles\nimport * as styled from './contnet_header.style'\n\n// Import Utils\nimport { upperCaseFirstLetterInString } from '../../../../methods/utils/utils'\n\n// Import Components\nimport PlusButton from '../../../basic/plus_button/plus_button'\nimport Button from '../../../basic/button/button'\nimport BackButton from '../../../basic/back_button/back_button'\nimport BounceButton from '../../../basic/bounce_button/bounce_button'\n\nconst ContentHeader = (props) => {\n\n    const {\n        content,\n        onClickAdd,\n        onClickSave,\n        onClickBack,\n        onClickClear,\n        mode,\n        disabled,\n        saveEnabled,\n        backEnabled,\n    } = props\n\n    // Handles the title\n    const handleTitle = () => {\n\n        if (content === 'scheduler') {\n            return 'Schedules'\n        }\n\n        else if (content === 'taskQueue') {\n            return 'Task Queue'\n        }\n\n        else if (content === 'tasks') {\n            return 'Routes'\n        }\n\n        else {\n            return upperCaseFirstLetterInString(content)\n        }\n    }\n\n    // If the side bar is show a list of itemts, then have the title and add button\n    if (mode === 'list') {\n        return (\n            <styled.Header>\n                <styled.Title schema={content}>{handleTitle()}</styled.Title>\n\n                {content === 'taskQueue' ?\n                    <BounceButton\n                        color={\"red\"}\n                        onClick={onClickClear}\n                        disabled={disabled}\n                    >\n                        <styled.ClearIcon\n                            fontSize={\"medium\"}\n                        />\n                    </BounceButton>\n                    :\n                    <PlusButton\n                        onClick={onClickAdd}\n                    />\n                }\n\n            </styled.Header>\n        )\n    }\n\n    // If the side bar is in create mode then have a back button and a save button\n    else if (mode === 'create') {\n        return (\n            <styled.Header>\n\n                <BackButton schema={content} style={{ display: 'inline-block' }}\n                    onClick={onClickBack}\n                />\n\n                <Button schema={content} style={{ display: 'inline-block', float: 'right' }}\n                    onClick={onClickSave} disabled={disabled}\n                >\n                    Save\n                </Button>\n            </styled.Header>\n\n        )\n    }\n\n    // If the side bar is in add mode then have a back button and a add button\n    else if (mode === 'add') {\n        return (\n            <styled.Header>\n\n                <BackButton schema={content} style={{ display: 'inline-block' }}\n                    onClick={onClickBack}\n                />\n\n                <Button schema={content} style={{ display: 'inline-block', float: 'right' }}\n                    onClick={onClickSave} disabled={disabled}\n                >\n                    Add\n                    </Button>\n            </styled.Header>\n\n        )\n    }\n\n    // If the side bar is in title mode then have a back button and if save is enabled then add a save button\n    else if (mode === 'title') {\n        return (\n            <styled.Header>\n\n                <styled.Title schema={content}>{handleTitle()}</styled.Title>\n\n\n                {saveEnabled &&\n\n                    <Button schema={content} style={{ display: 'inline-block', float: 'right' }}\n                        onClick={onClickSave} disabled={disabled}\n                    >\n                        Save\n                    </Button>\n                }\n\n                {backEnabled &&\n                    <BackButton schema={content} style={{ display: 'inline-block' }}\n                        onClick={onClickBack}\n                    />\n                }\n            </styled.Header>\n\n\n        )\n    }\n\n}\n\nContentHeader.defaultProps = {\n    mode: 'list'\n}\n\nexport default ContentHeader\n","import React from 'react'\n\nexport const StationTypes = {\n\n    /**\n     * Heads up, currently there are 2 different svg rectangles being used\n     * One thats width is 200 and height is 320\n     * One thats width is 378 and height 236\n     * \n     * Need to unify this and make all of them standard\n     * Probably use the 200 by 320 since you don't need to add a 'y' offset to the svg\n     * \n     *  */\n\n    warehouse: {\n        svgPath:\n            <svg y=\"50\" x='50'>\n\n                {/* <path d=\"M63.74,128.08v43.71H236.26V128h-69c0,2.79,0,5.34,0,7.89-.06,3.58-1.85,5.23-5.86,5.25q-11.43.07-22.86,0c-4,0-5.81-1.66-5.87-5.24,0-2.62,0-5.25,0-7.8Z\" />\n                <path d=\"M261.06,97.3H38.92v4.08H261.06Z\" />\n                <path d=\"M261,171.79v-61.3H39.05v61.38H53.61v-3.25q0-21.75,0-43.5c0-4.68,1.51-6,6.82-6H239.57c5.3,0,6.81,1.34,6.81,6q0,21.9,0,43.78v2.89Z\" />\n                <path d=\"M157.27,128.11H142.73v4.06h14.54Z\" />\n                <path d=\"M26.33,18C23.36,18,24,20.48,24,22.24q0,128.43,0,256.88v3h4.9v-3.18q0-128.31,0-256.61C28.88,20.5,29.61,17.88,26.33,18Z\" />\n                <path d=\"M236.3,31.27H216.73c0,2.69,0,5.16,0,7.63,0,3.82-1.73,5.36-6,5.38q-8.79,0-17.6,0c-4.41,0-6-1.53-6.07-5.56,0-2.52,0-5,0-7.6H167.52V88.17H236.3Z\" />\n                <path d=\"M206.78,31.22h-9.61v4h9.61Z\" />\n                <path d=\"M38.86,268.67H261v-4H38.86Z\" />\n                <path d=\"M132.53,31.23H112.92c0,2.74,0,5.29,0,7.85,0,3.61-1.79,5.18-5.85,5.2q-9,.06-17.92,0c-4.07,0-5.81-1.58-5.87-5.19,0-2.62,0-5.24,0-7.81H63.59V88.11h68.94Z\" />\n                <path d=\"M102.84,31.25H93.29v4.07h9.55Z\" />\n                <path d=\"M39,185H261.13v-4H39Z\" />\n                <path d=\"M261,255.49V194.14H39v61.44H53.62v-3.2q0-17.48,0-35c0-4.33,1.62-5.76,6.48-5.76H146c4.9,0,6.5,1.4,6.51,5.72q0,17.63,0,35.25v2.86H167.3v-3.14q0-24,0-47.91c0-4.68,1.51-6,6.81-6h65.48c5.29,0,6.79,1.34,6.79,6q0,24,0,47.91v3.12Z\" />\n                <path d=\"M107.85,220.61H98.28v4.08h9.57Z\" />\n                <path d=\"M270,0H30A30,30,0,0,0,0,30V270a30,30,0,0,0,30,30H270a30,30,0,0,0,30-30V30A30,30,0,0,0,270,0Zm15.92,219.88q0,32.76,0,65.52c0,4-1.72,5.55-6.1,5.58q-6.33,0-12.66,0c-4.19,0-5.9-1.62-5.94-5.43,0-2.54,0-5.08,0-7.65H38.79c0,2.84.05,5.49,0,8.14-.07,3.25-1.89,4.87-5.55,4.93s-7.62,0-11.43,0c-6.43,0-7.67-1.12-7.67-7q0-130.77-.12-261.55C14,15.73,16.72,11.2,24,9h4.94c7.25,2.17,10,6.69,10,13.45-.22,20.83-.08,41.66-.08,62.49v3.15H53.62V28.43c0-4.85,1.52-6.19,7-6.19h75.05c5.43,0,6.93,1.35,6.93,6.23V88.11h14.83V28.47c0-4.88,1.5-6.23,6.93-6.23h75c5.47,0,7,1.34,7,6.18v59.7H261.2V84.94c0-20.83.14-41.66-.08-62.49-.07-6.76,2.73-11.28,10-13.45H276c7.39,2.24,10,6.93,10,13.75Q285.79,121.32,285.92,219.88Z\" />\n                <path d=\"M273.45,18c-3,.05-2.35,2.53-2.35,4.28q0,128.46,0,256.91V282H276V279q0-128.32,0-256.64C276,20.49,276.71,17.89,273.45,18Z\" />\n                <path d=\"M177.45,207.42v48.17h58.83V207.37H222.12c-.22.21-.35.27-.35.34,0,2.57,0,5.13-.11,7.7-.08,3.4-1.88,5-5.74,5.05q-9.1.06-18.21,0c-3.84,0-5.62-1.66-5.69-5.1-.05-2.63,0-5.26,0-7.93Z\" />\n                <path d=\"M63.71,220.58v34.95h78.68V220.69H117.87c0,2.79,0,5.36,0,7.92-.07,3.42-1.87,5-5.74,5.06q-9.11.08-18.22,0c-3.83,0-5.62-1.67-5.68-5.11,0-2.63,0-5.26,0-8Z\" />\n                <path d=\"M211.61,207.41H202v4.11h9.59Z\" /> */}\n\n\n                <rect width=\"300\" height=\"300\" rx=\"30\" />\n                <path fill='#3B3C43' d=\"M271.1,9H276c7.39,2.24,10,6.93,10,13.75q-.21,98.57-.08,197.12,0,32.77,0,65.53c0,4-1.72,5.55-6.1,5.58q-6.33,0-12.66,0c-4.19,0-5.9-1.62-5.94-5.43,0-2.54,0-5.08,0-7.65H38.79c0,2.84.05,5.49,0,8.14-.07,3.25-1.89,4.87-5.55,4.93s-7.62,0-11.43,0c-6.43,0-7.67-1.12-7.67-7q0-130.77-.12-261.55C14,15.73,16.72,11.2,24,9h4.94c7.25,2.17,10,6.69,10,13.45-.22,20.83-.08,41.66-.08,62.49v3.15H53.62V28.43c0-4.85,1.52-6.19,7-6.19h75.05c5.43,0,6.93,1.35,6.93,6.23V88.11h14.83V28.47c0-4.88,1.5-6.23,6.93-6.23h75c5.47,0,7,1.34,7,6.18v59.7H261.2V84.94c0-20.83.14-41.66-.08-62.49C261.05,15.69,263.85,11.17,271.1,9ZM167.3,128c0,2.79,0,5.34,0,7.89-.06,3.58-1.85,5.23-5.86,5.25q-11.43.07-22.86,0c-4,0-5.81-1.66-5.87-5.24,0-2.62,0-5.25,0-7.8h-69v43.71H236.26V128ZM53.62,255.58v-3.2q0-17.48,0-35c0-4.33,1.62-5.76,6.48-5.76H146c4.9,0,6.5,1.4,6.51,5.72q0,17.63,0,35.25v2.86H167.3v-3.14q0-24,0-47.91c0-4.68,1.51-6,6.81-6h65.48c5.29,0,6.79,1.34,6.79,6q0,24,0,47.91v3.12H261V194.14H39v61.44Zm10-167.47h68.94V31.23H112.92c0,2.74,0,5.29,0,7.85,0,3.61-1.79,5.18-5.85,5.2q-9,.06-17.92,0c-4.07,0-5.81-1.58-5.87-5.19,0-2.62,0-5.24,0-7.81H63.59Zm103.93-57V88.17H236.3V31.27H216.73c0,2.69,0,5.16,0,7.63,0,3.82-1.73,5.36-6,5.38q-8.79,0-17.6,0c-4.41,0-6-1.53-6.07-5.56,0-2.52,0-5,0-7.6ZM53.61,171.87v-3.25q0-21.75,0-43.5c0-4.68,1.51-6,6.82-6H239.57c5.3,0,6.81,1.34,6.81,6q0,21.9,0,43.78v2.89H261v-61.3H39.05v61.38Zm182.67,83.72V207.37H222.12c-.22.21-.35.27-.35.34,0,2.57,0,5.13-.11,7.7-.08,3.4-1.88,5-5.74,5.05q-9.1.06-18.21,0c-3.84,0-5.62-1.66-5.69-5.1-.05-2.63,0-5.26,0-7.93H177.45v48.17Zm-172.57-35v34.95h78.68V220.69H117.87c0,2.79,0,5.36,0,7.92-.07,3.42-1.87,5-5.74,5.06q-9.11.08-18.22,0c-3.83,0-5.62-1.67-5.68-5.11,0-2.63,0-5.26,0-8ZM28.9,282.1v-3.18q0-128.31,0-256.61c0-1.81.73-4.43-2.55-4.36C23.36,18,24,20.48,24,22.24q0,128.43,0,256.88v3ZM276,282V279q0-128.32,0-256.64c0-1.82.7-4.42-2.56-4.36-3,.05-2.35,2.53-2.35,4.28q0,128.46,0,256.91V282Zm-15-184.74H38.92v4.08H261.06Zm.07,83.68H39v4H261.13ZM38.86,268.67H261v-4H38.86ZM157.27,128.11H142.73v4.06h14.54Zm-64-92.79h9.55V31.25H93.29Zm113.49-4.1h-9.61v4h9.61ZM202,211.52h9.59v-4.11H202Zm-94.17,9.09H98.28v4.08h9.57Z\" />\n            </svg>,\n\n        attributes:\n        {\n            schema: 'station',\n            type: 'warehouse',\n            children: [],\n            dashboards: [],\n            new: true,\n        },\n        color: '#f4a460'\n    },\n\n    // workstation: {\n    //     svgPath:\n    //         <>\n    //             <rect x=\"100\" y=\"40\" width=\"300\" height=\"300\" rx=\"10\" transform=\"translate(390 -50) rotate(90)\" fill=\"none\" strokeMiterlimit=\"10\" strokeWidth=\"20\" />\n    //             <rect x=\"120\" y=\"60\" width=\"260\" height=\"260\" rx=\"2\" transform=\"translate(390 -50) rotate(90)\" />\n    //         </>,\n    //     attributes:\n    //     {\n    //         schema: 'station',\n    //         type: 'workstation',\n    //         children: [],\n    //         dashboards: [],\n    //         new: true,\n    //     },\n    //     color: '#6283f0'\n    // },\n\n    human: {\n        svgPath:\n            // <svg y=\"70\">\n            //     <rect fill='transparent' strokeMiterlimit='10' strokeWidth='20px' x=\"10\" y=\"10\" width=\"378\" height=\"236\" rx=\"30\" />\n            //     <path d=\"M194,123a49.63,49.63,0,1,0-49.62-49.63A49.62,49.62,0,0,0,194,123Zm34.74,12.41h-6.48a67.51,67.51,0,0,1-56.52,0h-6.48a52.12,52.12,0,0,0-52.1,52.1v16.13a18.61,18.61,0,0,0,18.61,18.61H262.23a18.61,18.61,0,0,0,18.61-18.61V187.51A52.12,52.12,0,0,0,228.74,135.41Z\" />\n            // </svg>,\n            <svg y=\"50\" x='50'>\n                <rect width=\"300\" height=\"300\" rx=\"30\" />\n                <path fill='#3B3C43' d=\"M150,150A56.07,56.07,0,1,0,93.94,93.94,56.05,56.05,0,0,0,150,150Zm39.24,14h-7.31a76.32,76.32,0,0,1-63.86,0h-7.31a58.88,58.88,0,0,0-58.87,58.86V241.1a21,21,0,0,0,21,21H227.09a21,21,0,0,0,21-21V222.88A58.88,58.88,0,0,0,189.24,164Z\" />\n            </svg>,\n        attributes:\n        {\n            schema: 'station',\n            type: 'human',\n            children: [],\n            dashboards: [],\n            new: true,\n        },\n        color: '#5eec33',\n    },\n\n}","import React from 'react'\nimport uuid from 'uuid'\n\nexport const PositionTypes = {\n\n    /**\n     * Heads up, currently there are 2 different svg rectangles being used\n     * One thats width is 200 and height is 320\n     * One thats width is 378 and height 236\n     *\n     * Need to unify this and make all of them standard\n     * Probably use the 200 by 320 since you don't need to add a 'y' offset to the svg\n     *\n     *  */\n\n    shelf_position: {\n        svgPath:\n            <svg y=\"70\">\n                <path d=\"M263.53,56.31l33,47a10,10,0,0,1-8.18,15.74h-66a10,10,0,0,1-8.19-15.74l33-47A10,10,0,0,1,263.53,56.31Z\" />\n                <path d=\"M142.71,56.31l33,47a10,10,0,0,1-8.19,15.74h-66a10,10,0,0,1-8.18-15.74l33-47A10,10,0,0,1,142.71,56.31Z\" />\n                <circle cx=\"255.44\" cy=\"146.56\" r=\"12.5\" />\n                <circle cx=\"255.44\" cy=\"181.56\" r=\"7.5\" />\n                <circle stroke='none' cx=\"134.44\" cy=\"146.56\" r=\"12.5\" />\n                <circle cx=\"134.44\" cy=\"181.56\" r=\"7.5\" />\n                <rect fill='transparent' strokeMiterlimit='10' strokeWidth='20px' x=\"10\" y=\"10\" width=\"378\" height=\"236\" rx=\"30\" />\n            </svg>,\n        attributes:\n        {\n            schema: 'position',\n            type: 'shelf_position',\n            parent: null,\n            new: true,\n        },\n        color: '#fb7c4e',\n\n    },\n\n    charger_position: {\n        svgPath:\n            <svg y=\"70\">\n                <path d=\"M344.75,131.18l-47,33A10,10,0,0,1,282,156V90a10,10,0,0,1,15.75-8.18l47,33A10,10,0,0,1,344.75,131.18Z\" />\n                <rect fill='none' strokeMiterlimit='10' strokeWidth='20px' x=\"5\" y=\"5\" width=\"378\" height=\"236\" rx=\"30\" />\n                <path d=\"M251,171.13c-2.45,3.47-4.09,3.9-8.1,2.12l-73.27-32.63c-.72-.32-1.45-.61-2.47-1v3.15q0,12.9,0,25.81c0,4.89-3,6.91-7.46,5L31.14,118.34c-2.83-1.22-4.08-3.12-3.65-5.47s2.19-3.61,5.09-3.91q29.51-3,59-6c9-.91,17.93-1.86,26.91-2.63,1.81-.15,2.1-.82,2.06-2.38-.09-3.65,0-7.29,0-10.94,0-4.26,1.43-5.77,5.64-6.1q32.61-2.53,65.23-5.1c17.69-1.36,35.38-2.65,53.06-4.08,2.93-.23,5.1.52,6.54,3.12Z\" />\n                <rect fill='transparent' strokeMiterlimit='10' strokeWidth='20px' x=\"10\" y=\"10\" width=\"378\" height=\"236\" rx=\"30\" />\n            </svg>,\n        color: '#fbd34e',\n\n    },\n\n    cart_position: {\n        svgPath:\n            <>\n                <rect fill='transparent' x=\"100\" y=\"40\" width=\"200\" height=\"320\" rx=\"30\" transform=\"translate(400 0) rotate(90)\" strokeMiterlimit=\"10\" strokeWidth=\"20\" />\n                <path d=\"M315.5,200.87l-64,36.95A1,1,0,0,1,250,237v-73.9a1,1,0,0,1,1.5-.87l64,36.95A1,1,0,0,1,315.5,200.87Z\" strokeMiterlimit=\"10\" strokeWidth=\"10\" />\n                <circle cx=\"200\" cy=\"200\" r=\"15\" />\n                <circle cx=\"150\" cy=\"200\" r=\"10\" />\n                <circle cx=\"102.5\" cy=\"200\" r=\"7.5\" />\n            </>,\n        attributes:\n        {\n            schema: 'position',\n            type: 'cart_position',\n            parent: null,\n            new: true,\n        },\n        color: '#6283f0',\n    },\n\n    temporary_cart_position: {\n        svgPath:\n            <>\n                <rect fill='transparent' x=\"100\" y=\"40\" width=\"200\" height=\"320\" rx=\"30\" transform=\"translate(400 0) rotate(90)\" strokeMiterlimit=\"10\" strokeWidth=\"20\" />\n                <path d=\"M315.5,200.87l-64,36.95A1,1,0,0,1,250,237v-73.9a1,1,0,0,1,1.5-.87l64,36.95A1,1,0,0,1,315.5,200.87Z\" strokeMiterlimit=\"10\" strokeWidth=\"10\" />\n                <circle cx=\"200\" cy=\"200\" r=\"15\" />\n                <circle cx=\"150\" cy=\"200\" r=\"10\" />\n                <circle cx=\"102.5\" cy=\"200\" r=\"7.5\" />\n            </>,\n        attributes:\n        {\n            schema: 'temporary_position',\n            type: 'cart_position',\n            parent: null,\n            new: true,\n        },\n        color: '#6283f0',\n    },\n\n    // human_position: {\n    //     svgPath:\n    //         // <svg y=\"70\">\n    //         //     <rect fill='transparent' strokeMiterlimit='10' strokeWidth='20px' x=\"10\" y=\"10\" width=\"378\" height=\"236\" rx=\"30\" />\n    //         //     <path d=\"M194,123a49.63,49.63,0,1,0-49.62-49.63A49.62,49.62,0,0,0,194,123Zm34.74,12.41h-6.48a67.51,67.51,0,0,1-56.52,0h-6.48a52.12,52.12,0,0,0-52.1,52.1v16.13a18.61,18.61,0,0,0,18.61,18.61H262.23a18.61,18.61,0,0,0,18.61-18.61V187.51A52.12,52.12,0,0,0,228.74,135.41Z\" />\n    //         // </svg>,\n    //         <svg y=\"50\" x='50'>\n    //             <rect width=\"300\" height=\"300\" rx=\"30\" />\n    //             <path fill='#3B3C43' d=\"M150,150A56.07,56.07,0,1,0,93.94,93.94,56.05,56.05,0,0,0,150,150Zm39.24,14h-7.31a76.32,76.32,0,0,1-63.86,0h-7.31a58.88,58.88,0,0,0-58.87,58.86V241.1a21,21,0,0,0,21,21H227.09a21,21,0,0,0,21-21V222.88A58.88,58.88,0,0,0,189.24,164Z\" />\n    //         </svg>,\n    //     attributes:\n    //     {\n    //         schema: 'station',\n    //         type: 'human',\n    //         parent: null,\n    //         new: true,\n    //     },\n    //     color: '#5eec33',\n    // },\n\n}\n\nexport const newPositionTemplate = (name, type, parent, map_id) => {\n\n    return {\n        name: name,\n        schema: 'position',\n        type: type,\n        temp: true,\n        new: true,\n        pos_x: 0,\n        pos_y: 0,\n        rotation: 0,\n        x: 0,\n        y: 0,\n        parent: parent,\n        _id: uuid.v4(),\n        map_id: map_id\n    }\n}\n","import React, { useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\n// Import Styles\nimport * as styled from './content_list.style'\n\n// Import Components\nimport ContentHeader from '../content_header/content_header'\nimport ErrorTooltip from '../../../basic/form/error_tooltip/error_tooltip'\n\n// Import Utils\nimport { deepCopy } from '../../../../methods/utils/utils'\n\n// Import Constants\nimport { StationTypes } from '../../../../constants/station_constants'\nimport { PositionTypes } from '../../../../constants/position_constants'\n\n\nexport default function ContentList(props) {\n\n    const {\n        executeTask,\n        hideHeader,\n        handleCardView,\n        elements,\n    } = props\n\n    let taskQueue = useSelector(state => state.taskQueueReducer.taskQueue)\n    const [inQueue, setInQueue] = useState(false)\n\n\n    const handleInQueue = (element) => {\n        setInQueue(false)\n        if (!!element) {\n\n            Object.values(taskQueue).forEach((taskQueueItem, ind) => {\n                if (element._id === taskQueueItem.task_id) {\n                    setInQueue(true)\n                }\n            })\n        }\n        return inQueue\n    }\n\n    const renderLocationTypeIcon = (element) => {\n\n        const LocationTypes ={\n            ...StationTypes,\n            ...PositionTypes,\n        }\n\n        switch (element.type) {\n\n            case 'charger_position':\n                return (\n                    <styled.LocationTypeGraphic fill={LocationTypes['shelf_position'].color} stroke={LocationTypes['shelf_position'].color} id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 400 400\">\n                        {LocationTypes['charger_position'].svgPath}\n                    </styled.LocationTypeGraphic>\n                )\n\n            case 'shelf_position':\n                return (\n                    <styled.LocationTypeGraphic fill={LocationTypes['shelf_position'].color} stroke={LocationTypes['shelf_position'].color} id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 400 400\">\n                        {LocationTypes['shelf_position'].svgPath}\n                    </styled.LocationTypeGraphic>\n                )\n\n            case 'warehouse':\n                return (\n                    <styled.LocationTypeGraphic fill={LocationTypes['warehouse'].color} stroke={LocationTypes['warehouse'].color} id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 400 400\">\n                        {LocationTypes['warehouse'].svgPath}\n                    </styled.LocationTypeGraphic>\n                )\n\n            case 'human':\n                return (\n                    <styled.LocationTypeGraphic fill={LocationTypes['human'].color} stroke={LocationTypes['human'].color} id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 400 400\">\n                        {LocationTypes['human'].svgPath}\n                    </styled.LocationTypeGraphic>\n                )\n\n            case 'cart_position':\n                return (\n                    <styled.LocationTypeGraphic fill={LocationTypes['cart_position'].color} stroke={LocationTypes['cart_position'].color} id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 400 400\">\n                        {LocationTypes['cart_position'].svgPath}\n                    </styled.LocationTypeGraphic>\n                )\n        }\n    }\n\n\n    return (\n        <styled.Container>\n\n            {!hideHeader &&\n                <ContentHeader content={props.schema} onClickAdd={props.onPlus} />\n            }\n\n            <styled.List>\n                {elements.map((element, ind) => {\n                    const error = (props.schema === 'processes' && element.broken) ? true : false\n                    return (\n                        <>\n                            <styled.ListItem\n                                key={`li-${ind}`}\n                                error={error}\n                                onMouseEnter={() => props.onMouseEnter(element)}\n                                onMouseLeave={() => props.onMouseLeave(element)}\n                            >\n                                <styled.ListItemIconContainer style={{ width: '15%' }} >\n\n                                    {props.schema === 'locations' &&\n                                        <>\n                                            {renderLocationTypeIcon(element)}\n                                        </>\n                                    }\n\n\n                                    {props.schema === 'tasks' &&\n\n                                        <styled.ListItemIcon\n                                            className='fas fa-play'\n                                            onClick={() => {\n                                                executeTask()\n                                            }}\n                                        />\n                                    }\n\n                                    {props.schema === 'processes' ? error ?\n                                        <div\n                                            onClick={() => props.onClick(element)}\n                                        >\n                                            <ErrorTooltip\n                                                visible={true}\n                                                text={'Process is broken, click to fix'}\n                                                ContainerComponent={styled.ErrorContainer}\n                                            />\n                                        </div>\n                                        :\n                                        <styled.ListItemIcon\n                                            className='far fa-clone'\n                                            style={{ color: '#ffb62e' }}\n                                            onClick={() => {\n                                                handleCardView(element)\n                                            }}\n                                        />\n                                        :\n                                        <>\n                                        </>\n                                    }\n\n                                </styled.ListItemIconContainer>\n\n\n                                <styled.ListItemTitle schema={props.schema}>{element.name}</styled.ListItemTitle>\n\n\n\n                                <styled.ListItemIconContainer>\n\n                                    <styled.ListItemIcon\n                                        className='fas fa-edit'\n                                        onClick={() => props.onClick(element)}\n                                        style={{ color: '#c6ccd3' }}\n                                    />\n\n\n                                </styled.ListItemIconContainer>\n\n                            </styled.ListItem>\n                        </>\n                    )\n                })}\n            </styled.List>\n        </styled.Container>\n\n    )\n}\n","import styled from 'styled-components'\n\nimport * as stylel from '../locations_content.style'\n\nexport const ContentContainer = styled(stylel.ContentContainer)`\n`\n\nexport const Label = styled(stylel.Label)`\n`\n\nexport const DefaultTypesContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    flex-wrap: wrap;\n    border-bottom: 0.1rem solid ${props => props.theme.bg.septenary};\n    justify-content: center;\n    align-items: center;\n\n    margin-top: 0.5rem;\n    padding-bottom: 0.5rem;\n`\n\nexport const LocationTypeContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 8rem;\n    // margin-right: 1rem;\n    // background: blue;\n`\n\nexport const LocationButtonConatiner = styled.div`\n    display: flex;\n    flex-direction: row;\n`\n\nexport const LocationButtonSubtitleContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    width:8rem;\n    margin-right: 5rem;\n`\n\nexport const Subtitle = styled.h1`\n    font-family: ${props => props.theme.font.primary};\n    flex-grow: 1;\n    font-size: 1rem;\n    font-weight: 500;\n    color: white;\n    margin-right: 1rem;\n    justify-content: center;\n`\n","import styled from 'styled-components'\n\nexport const LocationTypeGraphic = styled.svg`\n    height: 4.5rem;\n\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n\n    fill: ${props => props.isNotSelected && 'gray'};\n    stroke: ${props => props.isNotSelected && 'gray'};\n`\n\nexport const LocationTypeButton = styled.div`\n    height: 4rem;\n    width: 6rem;\n    border-radius: 0.5rem;\n\n    background: ${props => props.isSelected ? `rgba(0,0,0,0.2)` : props.isNotSelected ? 'lightgray' : props.theme.bg.octonary};\n\n    margin: 0.5rem;\n    position: relative;\n    opacity: 0.999;\n\n    box-shadow: ${props => props.isSelected ? `inset 0 0.1rem 0.2rem rgba(0,0,0,.39), 0 -0.1rem 0.1rem rgba(255,255,255,0.1), 0 0.1rem 0 rgba(255,255,255,0.1)` : `0 0.2rem 0.3rem 0rem rgba(0,0,0,0.3)`};\n`\n\nexport const LocationTypeLabel = styled.p`\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz3};\n    color: ${props => props.theme.bg.octonary};\n    margin-bottom: auto;\n    user-select: none;\n    text-align: center;\n`","import React from 'react'\nimport * as styled from './location_button.style'\n\nimport { StationTypes } from '../../../../../../constants/station_constants'\nimport { PositionTypes } from '../../../../../../constants/position_constants'\n\nconst LocationButton = (props) => {\n\n    const {\n        type,\n        isSelected,\n        handleAddLocation\n    } = props\n\n    const LocationTypes = {\n        ...StationTypes,\n        ...PositionTypes\n    }\n\n    return (\n        <>\n            <styled.LocationTypeButton\n                isSelected={!!isSelected && isSelected === type}\n                isNotSelected={!!isSelected && isSelected !== type}\n                id={`location-type-button-${type}`}\n                onMouseDown={async e => {\n\n                    handleAddLocation(type)\n\n                }}\n\n                isSelected={isSelected}\n                style={{ cursor: 'grab' }}\n            >\n                <styled.LocationTypeGraphic\n                    fill={LocationTypes[type].color}\n                    isNotSelected={!!isSelected && isSelected !== type}\n                    stroke={LocationTypes[type].color}\n                    id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 400 400\"\n                >\n                    {LocationTypes[type].svgPath}\n                </styled.LocationTypeGraphic>\n            </styled.LocationTypeButton>\n        </>\n\n    )\n\n}\n\nexport default LocationButton\n","import styled from 'styled-components'\n\nexport const PositionsContainer = styled.div`\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n\n    user-select: none;\n`\n\nexport const Label = styled.h1`\n    font-family: ${props => props.theme.font.primary};\n    font-size: 1.5rem;\n    font-weight: 500;\n    /* color: ${props => props.theme.schema.locations.solid}; */\n    color: ${props => props.theme.bg.octonary};\n    text-align: center;\n    user-select: none;\n`\n\nexport const LocationTypeGraphic = styled.svg`\n    height: 2.5rem;\n\n    position: absolute;\n    top: 40%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n`\n\nexport const LocationTypeLabel = styled.p`\n    margin-bottom: 0rem;\n`\n\nexport const Card = styled.div`\n    height: 5rem;\n    width: 100%;\n    position:relative;\n    margin: 0rem .5rem;\n\n`\n\nexport const CardContainer = styled.div`\n    display: flex;\n    margin-top: 1rem;\n    \n`\n\nexport const NewPositionCard = styled.div`\n\n    max-height: 4rem;\n    max-width: 6rem;\n    \n    display: flex;\n\n    height: 100%;\n    width: 100%;\n\n    border-radius: 0.5rem;\n\n    background: ${props => props.theme.bg.octonary};\n    opacity: 0.999;\n\n    position: absolute;\n    left: calc(50% - 3rem);\n\n    box-shadow: 0 0.2rem 0.3rem 0rem rgba(0,0,0,0.3);\n\n    text-align: center;\n    justify-content: center;\n    align-items: flex-end;\n\n    cursor: grab;\n    &:active {\n        cursor: grabbing;\n    }\n`\n\nexport const ListContainer = styled.div`\n    flex: 1;\n`\n\nexport const PositionList = styled.div`\n    width: 100%;\n`\n\nexport const PositionListItem = styled.div`\n    border: .25rem solid ${props => props.background};\n    border-radius: 1rem;\n\n    padding: .25rem;\n    padding-top: .35rem;\n\n    margin: .5rem 0rem;\n\n    display: flex;\n    flex-direction: row;\n    flex-grow: 1;\n    padding-bottom: 0.4rem;\n    align-items:center;\n\n`\n\nexport const SortIcon = styled.i`\n    font-size: 1.2rem;\n    color: ${props => props.theme.bg.octonary};\n\n    margin: 0.4rem;\n    margin-left: 0.6rem;\n    padding: 0;\n    background-color: transparent;\n    border: none;\n    text-align: center;\n    box-sizing: border-box;\n\n    &:hover{\n        cursor: ns-resize;\n    }\n    &:active{\n        cursor: grabbing;\n    }\n\n`\n\n\nexport const CartIcon = styled.i`\n    font-size: .8rem;\n    color: ${props => props.theme.bg.octonary};\n\n    margin: 0.4rem;\n    margin-left: 0.6rem;\n    padding: 0;\n    background-color: transparent;\n    border: none;\n    text-align: center;\n    box-sizing: border-box;\n\n`","import styled from 'styled-components'\n\nexport const MinusSymbol = styled.i`\n\n    color: ${props => props.disabled ? props.theme.bg.senary : props.theme.bg.octonary};\n    height: 1.6rem;\n    width: 1.6rem;\n    margin: none;\n    padding: none;\n    font-size: 1.6rem;\n    vertical-align: middle;\n    line-height: 1.6rem;\n`;\n\nexport const MinusButton = styled.button`\n    width: 1.6rem;\n    height: 1.6rem;\n    margin: 0.2rem;\n    padding: 0;\n    background-color: transparent;\n    border: none;\n    text-align: center;\n    box-sizing: border-box;\n\n    :focus {\n      outline: 0;\n    }\n`;\n","import React from 'react';\nimport * as style from './minus_button.style'\nimport {globStyle} from '../../../global_style'\n\nconst MinusButton = (props) => (\n    <style.MinusButton onClick={props.onClick}>\n        <style.MinusSymbol\n            style={{...props.style}}\n            className={\"far fa-minus-square\"}\n            disabled={props.disabled}\n            schema={props.schema}\n        >\n        </style.MinusSymbol>\n    </style.MinusButton>\n);\n\nexport default MinusButton;\n","import React, { useState, useEffect, useMemo } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport * as styled from './associated_positions.style'\n\nimport { sortableElement, sortableHandle } from 'react-sortable-hoc';\n\n// Import Components\nimport MinusButton from '../../../../../basic/minus_button/minus_button'\nimport Textbox from '../../../../../basic/textbox/textbox'\nimport ConfirmDeleteModal from '../../../../../basic/modals/confirm_delete_modal/confirm_delete_modal'\n\n\nimport arrayMove from 'array-move';\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\n\n// Import Actions\nimport { setStationAttributes } from '../../../../../../redux/actions/stations_actions'\nimport { setPositionAttributes, deletePosition, addPosition, postPosition, setSelectedStationChildrenCopy } from '../../../../../../redux/actions/positions_actions'\nimport * as positionActions from '../../../../../../redux/actions/positions_actions'\nimport { deleteTask } from '../../../../../../redux/actions/tasks_actions'\nimport { deepCopy } from '../../../../../../methods/utils/utils'\n\n// Import Constants\nimport { PositionTypes, newPositionTemplate } from '../../../../../../constants/position_constants'\nimport { setSelectedStation } from '../../../../../../redux/actions/stations_actions';\n\nexport default function Positions(props) {\n\n    const {\n        handleSetChildPositionToCartCoords,\n    } = props\n\n    const dispatch = useDispatch()\n    const dispatchSetPositionAttributes = (id, attr) => dispatch(setPositionAttributes(id, attr))\n    const dispatchDeletePosition = (id) => dispatch(deletePosition(id))\n    const dispatchAddPosition = (position) => dispatch(addPosition(position))\n    const disptachPostPosition = (position) => dispatch(postPosition(position))\n    const dispatchSetSelectedStationChildrenCopy = (positions) => dispatch(setSelectedStationChildrenCopy(positions))\n\n    const dispatchSetStationAttributes = (id, attr) => dispatch(setStationAttributes(id, attr))\n\n    const positions = useSelector(state => state.positionsReducer.positions)\n    const selectedStation = useSelector(state => state.stationsReducer.selectedStation)\n    const selectedPosition = useSelector(state => state.positionsReducer.selectedPosition)\n    const tasks = useSelector(state => state.tasksReducer.tasks)\n    const currentMap = useSelector(state => state.mapReducer.currentMap)\n    const MiRMapEnabled = useSelector(state => state.localReducer.localSettings.MiRMapEnabled)\n    const selectedStationChildrenCopy = useSelector(state => state.positionsReducer.selectedStationChildrenCopy)\n\n    const [editingIndex, setEditingIndex] = useState(null)\n    const [confirmDeleteModal, setConfirmDeleteModal] = useState(false);\n    const [deletingIndex, setDeletingIndex] = useState()\n    const [deletingPosition, setDeletingPosition] = useState()\n\n    const positionTypes = !!MiRMapEnabled ? ['cart_position', 'shelf_position',] : []\n\n    /**\n     * Handles deleting positions\n     * Does some different things based on if the position is new or not (see comments bellow)\n     * TODO: FIX THIS SHIT!\n     * @param {*} position\n     */\n    const onDelete = (position) => {\n        dispatchDeletePosition(position._id)\n    }\n\n    const renderAssociatedPositions = () => {\n        return positionTypes.map((positionType) => {\n            return Object.values(selectedStationChildrenCopy).map((position, i) => {\n                if (position.type === positionType) {\n                    return (\n                        <styled.PositionListItem background={PositionTypes[positionType].color} key={`associatecd_pos_${i}`}>\n\n\n                            <MinusButton\n                                onClick={() => {\n                                    setConfirmDeleteModal(true)\n                                    setDeletingIndex(i)\n                                    setDeletingPosition(position)\n                                }}\n                            />\n                            <Textbox\n                                style={{ flex: '1' }}\n                                schema=\"locations\"\n                                focus={i == editingIndex}\n                                // defaultValue={position.name}\n                                value={position.name}\n                                onChange={(e) => {\n                                    setEditingIndex(i)\n                                    dispatch(positionActions.setPositionAttributes(position._id, { name: e.target.value }))\n                                }}\n\n                            />\n\n\n                            {/* If not a human position, then add ability to use cart location */}\n                            {position.type !== 'human_position' &&\n                                <styled.CartIcon className='icon-cart' onClick={() => handleSetChildPositionToCartCoords(position)} />\n                            }\n\n                            {/* Commenting out for now, not working with constent updating */}\n                            {/* <DragHandle></DragHandle> */}\n\n\n                        </styled.PositionListItem>\n                    )\n                }\n            })\n        })\n\n\n\n    }\n\n    // TODO: Comment\n    const onAddAssociatedPosition = async (type) => {\n\n        // const newPositionName = selectedStation.name + ' ' + (selectedStation.children.filter((position) => positions[position].type === type).length + 1)\n        const newPositionName = `${type === 'cart_position' ? 'Cart Position' : 'Shelf Position'}` + ' ' + (selectedStation.children.filter((position) => positions[position].type === type).length + 1)\n        \n        const newPositionType = type\n\n        const newPosition = newPositionTemplate(newPositionName, newPositionType, selectedStation._id, currentMap._id)\n\n        await dispatchSetSelectedStationChildrenCopy({\n            ...selectedStationChildrenCopy,\n            [newPosition._id]: newPosition\n        })\n\n\n        await dispatchAddPosition(newPosition)\n\n        let { children } = selectedStation\n        children.push(newPosition._id)\n\n        dispatchSetStationAttributes(selectedStation._id, { children })\n    }\n\n    const onDeleteAssociatedPosition = async () => {\n        await onDelete(deletingPosition)\n        setConfirmDeleteModal(null)\n    }\n\n    const renderPositionCards = () => {\n\n        return positionTypes.map((positionType) => {\n\n            let positionName\n            // Sets of vairables based on position type\n            if (positionType === 'cart_position') {\n                positionName = 'Cart'\n            }\n            if (positionType === 'shelf_position') {\n                positionName = 'Shelf'\n            }\n\n            return (\n                <styled.Card>\n\n                    <styled.NewPositionCard style={{ transform: 'translate(-0.4rem, 0.4rem)' }} />\n                    <styled.NewPositionCard style={{ transform: 'translate(-0.2rem, 0.2rem)' }} />\n                    <styled.NewPositionCard draggable={false}\n                        onMouseDown={e => {\n                            onAddAssociatedPosition(positionType)\n                        }\n                        }\n                    >\n\n                        <styled.LocationTypeGraphic fill={PositionTypes[positionType].color} stroke={PositionTypes[positionType].color} id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 400 400\">\n                            {PositionTypes[positionType].svgPath}\n                        </styled.LocationTypeGraphic>\n\n                        <styled.LocationTypeLabel>\n                            {positionName}\n                        </styled.LocationTypeLabel>\n\n                    </styled.NewPositionCard>\n                </styled.Card>\n            )\n        })\n\n    }\n\n    return (\n\n        <styled.PositionsContainer>\n\n            <ConfirmDeleteModal\n                isOpen={!!confirmDeleteModal}\n                title={\"Are you sure you want to delete this Position?\"}\n                button_1_text={\"Yes\"}\n                handleOnClick1={async () => {\n                    await onDeleteAssociatedPosition()\n                }}\n                button_2_text={\"No\"}\n                handleOnClick2={() => setConfirmDeleteModal(null)}\n                handleClose={() => setConfirmDeleteModal(null)}\n            />\n\n\n            {/* Cards for dragging a new position onto the map */}\n\n            {!!MiRMapEnabled &&\n                <>\n                    <styled.CardContainer>\n                        {renderPositionCards()}\n                    </styled.CardContainer>\n\n                    <styled.Label>Associated Positions</styled.Label>\n                </>\n\n            }\n\n\n            <styled.ListContainer>\n                {!!selectedStationChildrenCopy &&\n                    renderAssociatedPositions()\n                }\n            </styled.ListContainer>\n        </styled.PositionsContainer>\n    )\n}\n","export const LocationDefaultAttributes = {\n    name: null,\n    schema: null,\n    type: null,\n    pos_x: 0,\n    pos_y: 0,\n    rotation: 0,\n    x: 0,\n    y: 0,\n    _id: '',\n    map_id: null,\n    temp: true\n}","import * as Yup from 'yup';\n\nimport { notBrokenRegex, notTaskDeletedRegex } from \"./regex_utils\";\nimport { isObject } from \"./object_utils\";\nimport {convertCardDate} from \"./card_utils\";\n\nconst { object, lazy, string, number } = require('yup')\nconst mapValues = require('lodash/mapValues')\n\nYup.addMethod(Yup.object, 'startEndDate', function (startPath, endPath, message) {\n    return this.test('startEndDate', message, function (value) {\n\n        if(!value) return true\n\n        const {\n            path,\n            createError\n        } = this\n\n        const startDate = convertCardDate(value[startPath])\n        const endDate = convertCardDate(value[endPath])\n\n        if(startDate && endDate) {\n            if(endDate < startDate) {\n                return this.createError({\n                    path: `${path}`,\n                    message,\n                });\n            }\n        }\n        return true;\n    });\n});\n\nexport const scheduleSchema = Yup.object().shape({\n    name: Yup.string()\n        .min(1, '1 character minimum.')\n        .max(50, '50 character maximum.')\n        .required('Please enter a name.'),\n    task: Yup.array().of(\n        Yup.object().shape({\n            name: Yup.string()\n                // .min(1, '1 character minimum')\n                // .max(2, '50 character maximum')\n                .matches(notTaskDeletedRegex, \"Task is deleted.\")\n                .required('Please select a task.'),\n            status: Yup.string().matches(notBrokenRegex, \"Task is broken.\"),\n        })\n    ).required('Required'),\n    days_on: Yup.array()\n        .min(1, 'Please select at least one day.')\n        .required('Required'),\n    start_time: Yup.string()\n        .required('Required'),\n    time_interval: Yup.string(), // not required\n    stop_time: Yup.string() // not required\n});\n\nexport const reportEventSchema = Yup.object().shape({\n    label: Yup.string()\n        .min(1, '1 character minimum.')\n        .max(50, '50 character maximum.')\n        .required('Please enter a label.'),\n    description: Yup.string()\n});\n\nexport const objectSchema = Yup.object().shape({\n    name: Yup.string()\n        .min(1, '1 character minimum.')\n        .max(50, '50 character maximum.')\n        .required('Please enter a name.'),\n    description: Yup.string()\n        .max(1000, '1000 character maximum.'),\n    // width: Yup.number()\n    //     .positive(\"Please enter a positive number.\")\n    //     .moreThan(0, \"Must be greater than 0.\")\n    //     .required(\"Please enter the object's width.\"),\n    // height: Yup.number()\n    //     .positive(\"Please enter a positive number.\")\n    //     .moreThan(0, \"Must be greater than 0.\")\n    //     .required(\"Please enter the object's height.\"),\n    // length: Yup.number()\n    //     .positive(\"Please enter a positive number.\")\n    //     .moreThan(0, \"Must be greater than 0.\")\n    //     .required(\"Please enter the object's length.\"),\n    // modelName: Yup.string()\n    //     .required(\"Please select a model.\"),\n});\n\n\nexport const hilSchema = Yup.object().shape({\n    instruction: Yup.string()\n        .max(20, '20 character maximum.')\n        .required('Please enter instructions.'),\n    position: Yup.array().of(\n        Yup.object().shape({\n            name: Yup.string()\n                .required('Position is missing name.'),\n        })\n    )\n        .required('Please select a position.'),\n    dashboard: Yup.array().of(\n        Yup.object().shape({\n            name: Yup.string()\n                .required('Dashboard is missing name.'),\n        })\n    )\n        .required('Please select a dashboard.'),\n    sound: Yup.array().of(\n        Yup.object().shape({\n            name: Yup.string()\n                .required('Sound is missing name.'),\n        })\n    )\n        .required('Please select a sound.'),\n    timeout: Yup.string()\n        .nullable()\n        .required('Please select timeout.'),\n});\n\nexport const moveSchema = Yup.object().shape({\n    location: Yup.array().of(\n        Yup.object().shape({\n            name: Yup.string()\n                .required('Location is missing name.'),\n            _id: Yup.string()\n                .required('Location is missing ID.'),\n        })\n    ).required('Please select a location.'),\n});\n\n\n\nexport const nameSchema = Yup.object().shape({\n    name: Yup.string()\n        .min(1, '1 character minimum.')\n        .max(50, '50 character maximum.')\n        .required('Please enter a name.'),\n});\n\nexport const hilGoalSchema = Yup.object().shape({\n    hil: Yup.array().of(\n        Yup.object().shape({\n            name: Yup.string()\n                .required('HIL is missing name.'),\n        })\n    ).required('Please select a HIL.')\n});\n\nexport const objectAtLocationGoalSchema = Yup.object().shape({\n    quantity: Yup.array().of(\n        Yup.object().shape({\n            name: Yup.string()\n                .required('Quantity is missing name.'),\n        })\n    ).required('Please select a quantity.'),\n    object: Yup.array().of(\n        Yup.object().shape({\n            name: Yup.string()\n                .required('Object is missing name.'),\n        })\n    ).min(1, \"Please select an object.\").nullable(),\n    position: Yup.array().of(\n        Yup.object().shape({\n            name: Yup.string()\n                .required('Position is missing name.'),\n        })\n    ).required('Please select a position.'),\n});\n\nexport const dashboardSchema = Yup.object().shape({\n    name: Yup.string()\n        .min(1, '1 character minimum.')\n        .max(50, '50 character maximum.')\n        .required('Please enter a name.'),\n    buttons: Yup.array().of(\n        Yup.object().shape({\n            name: Yup.string()\n                .required('Please enter a name.'),\n            // task: Yup.array().of(\n            //     Yup.object().shape({\n            //         Description: Yup.string()\n            //             .matches(notBrokenRegex, \"Task is broken.\")\n            //             .required('Task is missing description.'),\n            //         task_id: Yup.string()\n            //             .required('Task is missing ID.'),\n            //     })\n            // ).required('Please select a task.'),\n            // banana: Yup.string()\n            //     .required('Please enter a name.'),\n            color: Yup.string()\n                .required('Please select a color.'),\n\n        })\n    ),\n\n});\n\nexport const signUpSchema = Yup.object().shape({\n    email: Yup.string()\n        .email()\n        .required('Please enter an email'),\n    password: Yup.string()\n        .required('Please enter a password')\n        .matches(\n            /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\n            \"Must Contain 8 characters, one uppercase, one lowercase, one number and one special character\"\n        ),\n\n    confirmPassword: Yup.string()\n        .oneOf([Yup.ref('password'), null], 'Passwords must match')\n        .required('Password confirm is required'),\n})\n\nexport const signInSchema = Yup.object().shape({\n    email: Yup.string()\n        .email()\n        .required('Please enter an email'),\n    password: Yup.string()\n        .required('Please enter a password'),\n\n})\n\n\nconst binsSchema = lazy(obj => object(\n    mapValues(obj, (value, key) => {\n        return Yup.object().shape({\n            count: Yup.number()\n                .min(1, \"Quantity must be at least 1.\")\n                .required('Quantity required.'),\n        })\n    })\n));\n\nexport const CARD_SCHEMA_MODES = {\n    EDIT_LOT: \"EDIT_LOT\",\n    MOVE_LOT: \"MOVE_LOT\"\n}\n\n\n\nexport const editLotSchema = Yup.object().shape({\n    name: Yup.string()\n        .min(1, '1 character minimum.')\n        .max(50, '50 character maximum.')\n        .required('Please enter a name.'),\n    description: Yup.string()\n        .min(1, '1 character minimum.')\n        .max(250, '250 character maximum.'),\n    bins: binsSchema,\n    processId: Yup.string()\n        .min(1, '1 character minimum.')\n        .max(100, '50 character maximum.')\n        .required('Please select a process.')\n        .nullable(),\n    dates: Yup.object().nullable().startEndDate(\"start\", \"end\", \"End date must be after start date.\")\n})\n\nexport const getMoveLotSchema = (maxCount) => Yup.object().shape({\n    moveCount: Yup.number()\n        .min(1, 'Must be positive value.')\n        .max(maxCount, `Only ${maxCount} items are available.`)\n        .required('Please enter a quantity.'),\n    moveLocation: Yup.array().of(\n        Yup.object().shape({\n            name: Yup.string()\n                .required('Please select a destination.'),\n        })\n    )\n        .min(1, 'Please select a destination.')\n        .required('Please select a destination.')\n        .nullable(),\n})\n\nexport const getCardSchema = (mode, availableBinItems) => {\n    switch (mode) {\n        case CARD_SCHEMA_MODES.EDIT_LOT:\n            return editLotSchema\n        case CARD_SCHEMA_MODES.MOVE_LOT:\n            return getMoveLotSchema(availableBinItems)\n        default:\n            return editLotSchema\n\n    }\n\n}\n\nconst routeStationSchema = lazy(obj => {\n\n    let positionSchema\n    let stationSchema\n    if (isObject(obj)) {\n        if (!obj.position && !obj.station) {\n            positionSchema = Yup.string().nullable()\n            stationSchema = Yup.string().nullable().required('Please select a location.')\n        }\n        else if (obj.station && !obj.position) {\n            positionSchema = Yup.string().nullable()\n            stationSchema = Yup.string().nullable().required('Please select a location.')\n        }\n        else if (obj.position && !obj.station) {\n            positionSchema = Yup.string().nullable().required('Please select a location.')\n            stationSchema = Yup.string().nullable()\n        }\n        else {\n            positionSchema = Yup.string().nullable().required('Please select a location.')\n            stationSchema = Yup.string().nullable().required('Please select a location.')\n        }\n    } else {\n        positionSchema = Yup.string().nullable().required('Please select a location.')\n        stationSchema = Yup.string().nullable().required('Please select a location.')\n    }\n\n\n\n    return Yup.object().shape({\n        instructions: Yup.string().nullable(),\n        position: positionSchema,\n        station: stationSchema,\n        timeout: Yup.string().nullable(),\n    })\n});\n\nexport const routeSchema = Yup.object().shape({\n    name: Yup.string()\n        .min(1, '1 character minimum.')\n        .max(50, '50 character maximum.')\n        .required('Please enter a name.'),\n    obj: Yup.object().shape({\n        name: Yup.string()\n            .required('Please enter a name.'),\n    }).nullable(),\n    track_quantity: Yup.bool().required('Please select whether to use quantities or fractions.'),\n    load: routeStationSchema, //.required(\"Required.\"),\n    unload: routeStationSchema//.required(\"Required.\"),\n})\n\n\n\nexport const routesSchema = Yup.array().of(\n    routeSchema\n)\n\nexport const processSchema = Yup.object().shape({\n    name: Yup.string()\n        .min(1, '1 character minimum.')\n        .max(50, '50 character maximum.')\n        .required('Please enter a name.'),\n    routes: routesSchema,\n    newRoute: routeSchema.nullable(),\n\n})\n\nexport const getProcessSchema = () => {\n    return\n}\n\nexport const locationSchema = (stations, selectedLocation) => {\n\n    let stationNames = []\n    Object.values(stations).forEach(station => {\n        if (!!selectedLocation && station._id === selectedLocation._id) {\n\n        }\n        else {\n            stationNames.push(station.name)\n        }\n    })\n\n    return (\n        Yup.object().shape({\n            locationName: Yup.string()\n                .required('Please enter a name')\n                .notOneOf(stationNames, 'Name already in use')\n        })\n    )\n}\n","\n// regex for time string\nexport const timeStringRegex = /^(?:(?:([01]?\\d|2[0-3]):)?([0-5]?\\d):)?([0-5]?\\d)$/\n\n// regex for OID's\nexport const oidRegex = /^([0-2])((\\.0)|(\\.[1-9][0-9]*))*$/\n\n// valid if input does NOT match \"broken\" or \"BROKEN\"\nexport const notBrokenRegex = /^(?!.*(broken|.*BROKEN))/;\n\n// valid if input does NOT match \"TASK DELETED\"\nexport const notTaskDeletedRegex = /^(?!.*(TASK DELETED))/;\n\nexport const hoursRegex = /^(2[0-4]|1[0-9]|0[0-9]|[0-9])$/\nexport const minutesRegex = /^(5[0-9]|4[0-9]|3[0-9]|2[0-9]|1[0-9]|[0-9])$/\nexport const secondsRegex = /^(5[0-9]|4[0-9]|3[0-9]|2[0-9]|1[0-9]|[0-9])$/","import React, { useState, useEffect, useMemo } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport uuid from 'uuid'\n\nimport * as styled from './edit_location.style'\nimport { Formik, Form } from 'formik'\n\n// Import Components\nimport LocationButton from './location_button/location_button'\nimport ContentHeader from '../../content_header/content_header'\nimport ConfirmDeleteModal from '../../../../basic/modals/confirm_delete_modal/confirm_delete_modal'\nimport AssociatedPositions from './associated_positions/associated_positions'\n\n// Import Basic Components\nimport DropDownSearch from '../../../../basic/drop_down_search_v2/drop_down_search'\nimport Textbox from '../../../../basic/textbox/textbox.js'\nimport TextField from '../../../../basic/form/text_field/text_field.js'\nimport Button from '../../../../basic/button/button'\n\n// Import Constants\nimport { StationTypes } from '../../../../../constants/station_constants'\nimport { PositionTypes } from '../../../../../constants/position_constants'\nimport { LocationDefaultAttributes } from '../../../../../constants/location_constants'\n\n// Import utils\nimport { deepCopy } from '../../../../../methods/utils/utils'\nimport { locationSchema } from '../../../../../methods/utils/form_schemas'\n\n// Import actions\nimport { setSelectedPosition, setPositionAttributes, addPosition, deletePosition, updatePosition, setEditingPosition, putPosition, postPosition, setSelectedStationChildrenCopy, removePosition } from '../../../../../redux/actions/positions_actions'\nimport { setSelectedStation, setStationAttributes, addStation, deleteStation, updateStation, setEditingStation, putStation, postStation, removeStation } from '../../../../../redux/actions/stations_actions'\n\nconst EditLocation = () => {\n    const dispatch = useDispatch()\n\n    // Station Dispatches\n    const dispatchSetSelectedStation = (station) => dispatch(setSelectedStation(station))\n    const dispatchSetEditingStation = (bool) => dispatch(setEditingStation(bool))\n    const dispatchSetStationAttributes = (id, attr) => dispatch(setStationAttributes(id, attr))\n    const dispatchAddStation = (station) => dispatch(addStation(station))\n    const dispatchSetSelectedStationChildrenCopy = (children) => dispatch(setSelectedStationChildrenCopy(children))\n    const dispatchPutStation = async (station) => await dispatch(putStation(station))\n    const dispatchPostStation = async (station) => await dispatch(postStation(station))\n    const dispatchDeleteStation = async (id) => await dispatch(deleteStation(id))\n    const dispatchRemoveStation = (id) => dispatch(removeStation(id))\n\n    // Position Dispatches\n    const dispatchSetSelectedPosition = async (position) => await dispatch(setSelectedPosition(position))\n    const dispatchAddPosition = async (pos) => await dispatch(addPosition(pos))\n    const dispatchSetPositionAttributes = (id, attr) => dispatch(setPositionAttributes(id, attr))\n    const dispatchSetEditingPosition = (bool) => dispatch(setEditingPosition(bool))\n    const dispatchDeletePosition = async (id) => dispatch(deletePosition(id))\n    const dispatchPutPosition = async (position) => await dispatch(putPosition(position))\n    const dispatchPostPosition = async (position) => await dispatch(postPosition(position))\n    const dispatchRemovePosition = (id) => dispatch(removePosition(id))\n\n    const stations = useSelector(state => state.stationsReducer.stations)\n    const selectedStation = useSelector(state => state.stationsReducer.selectedStation)\n    const selectedPosition = useSelector(state => state.positionsReducer.selectedPosition)\n    const positions = useSelector(state => state.positionsReducer.positions)\n    const selectedStationChildrenCopy = useSelector(state => state.positionsReducer.selectedStationChildrenCopy)\n\n    const tasks = useSelector(state => state.tasksReducer.tasks)\n    const devices = useSelector(state => state.devicesReducer.devices)\n    const currentMap = useSelector(state => state.mapReducer.currentMap)\n    const MiRMapEnabled = useSelector(state => state.localReducer.localSettings.MiRMapEnabled)\n    const serverSettings = useSelector(state => state.settingsReducer.settings)\n    const deviceEnabled = serverSettings.deviceEnabled\n    const processes = useSelector(state => state.processesReducer.processes)\n\n    const [confirmDeleteModal, setConfirmDeleteModal] = useState(false);\n    const [newName, setNewName] = useState('')\n\n    const selectedLocation = !!selectedStation ? selectedStation : selectedPosition\n\n    const LocationTypes = {\n        ...StationTypes,\n        ...PositionTypes,\n    }\n\n    useEffect(() => {\n        return () => {\n            dispatchSetEditingStation(false)\n            dispatchSetEditingPosition(false)\n\n            dispatchSetSelectedPosition(null)\n            dispatchSetSelectedStation(null)\n            dispatchSetSelectedStationChildrenCopy(null)\n        }\n    }, [])\n\n    /**\n     * This function is called when the save button is pressed. The location is POSTED or PUT to the backend.\n     * If the location is new and is a station, this function also handles posting the default dashboard and\n     * tieing it to this location. Each child position for a station is also either POSTED or PUT.\n     */\n    const onSave = async (name) => {\n        // Station\n        if (!!selectedStation) {\n            const copyStation = deepCopy(selectedStation)\n            copyStation.name = name\n            // Post\n            if (!!copyStation.new) {\n                await dispatchPostStation(copyStation)\n\n                // Add dashboard\n            }\n            // Put\n            else {\n                await dispatchPutStation(copyStation)\n            }\n        }\n\n        // Position\n        else if (!!selectedPosition) {\n            const copyPosition = deepCopy(selectedPosition)\n            copyPosition.name = name\n            // Post\n            if (!!copyPosition.new) {\n                await dispatchPostPosition(copyPosition)\n\n                // Add dashboard\n            }\n            // Put\n            else {\n                await dispatchPutPosition(copyPosition)\n            }\n\n        }\n\n        else {\n            throw ('You son of a bitch Trebech')\n        }\n\n        onBack(true)\n\n\n    }\n\n    /**\n     * Deletes the selected location\n     * The whole delete process can be found in each locations respected actions\n     */\n    const onDelete = async () => {\n\n        // Station\n        if (selectedLocation.schema === 'station') {\n            await dispatchDeleteStation(selectedStation._id)\n        }\n\n        // Position\n        else {\n            await dispatchDeletePosition(selectedPosition._id)\n        }\n\n        // Adding true to save even though you arent saving\n        // Since deleting location, there is no need to remove location in onBack (see use of save in onBack function)\n        onBack(true)\n    }\n\n    /**\n     * Handles Back\n     * Sets editing to false\n     * Removes Station if new and not a save\n     * Sets selected Location to null\n     */\n    const onBack = (save) => {\n\n        // The order of these functions matter\n        dispatchSetEditingStation(false)\n        dispatchSetEditingPosition(false)\n\n        // If theres a children copy check the children\n        if (!!selectedStationChildrenCopy) {\n            Object.values(selectedStationChildrenCopy).forEach(child => {\n                // If it's a new child remove the position\n                if (!!child.new) {\n\n                    dispatchRemovePosition(child._id)\n\n                }\n            })\n        }\n        dispatchSetSelectedStationChildrenCopy(null)\n\n        if (!!selectedLocation && !!selectedLocation.new && !save) {\n            if (selectedLocation.schema === 'station') {\n                dispatchRemoveStation(selectedLocation._id)\n            }\n\n            else if (selectedLocation.schema === 'position') {\n                dispatchRemovePosition(selectedLocation._id)\n            }\n        }\n\n        dispatchSetSelectedPosition(null)\n        dispatchSetSelectedStation(null)\n    }\n\n    /**\n     * The X and Y here are set in map view view dragNewEntity\n     */\n    const onAddLocation = async (type) => {\n\n        // TODO: Stick this into Constants\n        const defaultAttributes = deepCopy(LocationDefaultAttributes)\n\n        defaultAttributes['neame'] = newName\n        defaultAttributes['map_id'] = currentMap._id\n        defaultAttributes['_id'] = uuid.v4()\n\n        const attributes = deepCopy(LocationTypes[type].attributes)\n\n        const newLocation = {\n            ...defaultAttributes,\n            ...attributes\n        }\n\n        // Handle Station addition\n        if (attributes.schema === 'station') {\n            dispatchSetSelectedStationChildrenCopy({})\n            await dispatchAddStation(newLocation)\n            await dispatchSetSelectedStation(newLocation)\n        }\n\n        else if (attributes.schema === 'position') {\n            await dispatchAddPosition(newLocation)\n            await dispatchSetSelectedPosition(newLocation)\n        }\n\n        else {\n            throw ('Schema Does Not exist')\n        }\n    }\n\n    const onLocationNameChange = (e) => {\n        if (!!selectedStation) {\n            dispatchSetStationAttributes(selectedStation._id, { name: e.target.value })\n        }\n        else if (!!selectedPosition) {\n            dispatchSetPositionAttributes(selectedPosition._id, { name: e.target.value })\n        }\n\n        // Location Type has not been defined yet\n        else {\n            setNewName(e.target.value)\n        }\n    }\n\n    const handleSetPositionToCartCoords = async () => {\n\n        Object.values(devices).map(async (device, ind) => {\n            if (device.device_model === 'MiR100') {\n                const devicePosition = device.position\n\n                const updatedSelectedLocation = {\n                    ...selectedLocation,\n                    pos_x: devicePosition.pos_x,\n                    pos_y: devicePosition.pos_y,\n                    x: devicePosition.x,\n                    y: devicePosition.y,\n                    rotation: devicePosition.orientation,\n                }\n\n                // Not sure why onSetSelectedLocation is not working, should be the same as a normal dispatch...\n                await dispatchAddPosition(updatedSelectedLocation)\n                await dispatchSetSelectedPosition(updatedSelectedLocation)\n            }\n        })\n    }\n\n    const handleSetChildPositionToCartCoords = (position) => {\n        Object.values(devices).map(async (device, ind) => {\n            if (device.device_model === 'MiR100') {\n                const devicePosition = device.position\n                const copyPos = deepCopy(position)\n                const updatedPosition = {\n                    ...copyPos,\n                    pos_x: devicePosition.pos_x,\n                    pos_y: devicePosition.pos_y,\n                    x: devicePosition.x,\n                    y: devicePosition.y,\n                    rotation: devicePosition.orientation,\n                }\n\n                if (updatedPosition._id in selectedStationChildrenCopy) {\n                    let copyOfCopy = deepCopy(selectedStationChildrenCopy)\n                    copyOfCopy = {\n                        ...copyOfCopy,\n                        [updatedPosition._id]: updatedPosition,\n                    }\n                    dispatchSetSelectedStationChildrenCopy(copyOfCopy)\n                }\n\n                else {\n                    setSelectedPosition(updatedPosition)\n                }\n\n\n            }\n        })\n    }\n\n\n    const renderStationButtons = () => {\n        // If there is a type selected and its not the button type, that means this type has not been selected so gray everything out\n        const types = ['human', 'warehouse']\n\n        return types.map((type, i) => {\n            const isSelected = (!!selectedStation && selectedStation.type !== null && selectedStation.type === type) ? selectedStation.type : false;\n            return (\n                <LocationButton key={`stat_button_${i}`} type={type} isSelected={isSelected} handleAddLocation={onAddLocation} />\n            )\n        })\n\n    }\n\n    const renderPositionButtons = () => {\n        const types = ['cart_position', 'shelf_position']\n\n        return types.map((type, i) => {\n            const isSelected = (!!selectedPosition && selectedPosition.type !== null && selectedPosition.type === type) ? selectedPosition.type : false;\n            return (\n                <LocationButton key={`pos_button_${i}`} type={type} isSelected={isSelected} handleAddLocation={onAddLocation} />\n            )\n        })\n    }\n\n    return (\n        <>\n            <styled.ContentContainer\n            >\n\n                <ConfirmDeleteModal\n                    isOpen={!!confirmDeleteModal}\n                    title={\"Are you sure you want to delete this Location?\"}\n                    button_1_text={\"Yes\"}\n                    handleOnClick1={() => {\n                        onDelete()\n                        setConfirmDeleteModal(null)\n                    }}\n                    button_2_text={\"No\"}\n                    handleOnClick2={() => setConfirmDeleteModal(null)}\n                    handleClose={() => setConfirmDeleteModal(null)}\n                />\n\n                <Formik\n\n                    initialValues={{\n                        locationName: !!selectedLocation ? selectedLocation.name : null,\n\n                    }}\n                    initialTouched={{\n                        locationName: false,\n                    }}\n                    validateOnChange={true}\n                    validateOnMount={true}\n                    validateOnBlur={true}\n                    // Chooses what schema to use based on whether it's a sign in or sign up\n                    // TODO: The schemas are not 100% working as of 9/14/2020. Need to figure out regex for passwords\n                    validationSchema={locationSchema(stations, selectedLocation)}\n                    onSubmit={async (values, { setSubmitting }) => {\n                        setSubmitting(true)\n\n                        await onSave(deepCopy(values.locationName))\n\n                        setSubmitting(false)\n                    }}\n                >\n                    {formikProps => {\n                        const {\n                            submitForm,\n                            errors,\n                        } = formikProps\n\n                        return (\n                            <Form\n                                onKeyDown={(e) => {\n                                    if (((e.charCode || e.keyCode) === 13) && Object.keys(errors).length === 0) {\n                                        submitForm()\n                                    }\n                                    else if ((e.charCode || e.keyCode) === 13) {\n                                        e.preventDefault();\n                                    }\n                                }}\n                            >\n\n                                <div style={{ marginBottom: '1rem' }}>\n\n                                    <ContentHeader\n                                        content={'locations'}\n                                        mode={'create'}\n                                        onClickBack={() => onBack()}\n                                        onClickSave={() => {\n\n                                        }}\n\n                                    />\n                                </div>\n\n                                <TextField\n                                    name={\"locationName\"}\n                                    textStyle={{ fontWeight: 'Bold' }}\n                                    placeholder='Enter Location Name'\n                                    type='text'\n                                    InputComponent={Textbox}\n                                    style={{\n                                        'fontSize': '1.2rem',\n                                        'fontWeight': '600',\n                                        'marginBottom': '.5rem',\n                                        'marginTop': '0',\n                                    }}\n                                />\n                                {/* <Textbox\n                                    name={'locationName'}\n                                    placeholder=\"Location Name\"\n                                    defaultValue={!!selectedLocation ? selectedLocation.name : null}\n                                    schema={'locations'}\n                                    focus={!!selectedLocation && selectedLocation.type == null}\n                                    onChange={(e) => {\n                                        onLocationNameChange(e)\n                                    }}\n                                    style={{ fontSize: '1.2rem', fontWeight: '600' }}>\n                                </Textbox> */}\n                            </Form>\n                        )\n                    }}\n                </Formik>\n                {/* Location Type */}\n                <styled.DefaultTypesContainer>\n\n                    {!selectedLocation ?\n                        <>\n                            <styled.LocationTypeContainer>\n                                <styled.Label schema={'locations'}>Stations</styled.Label>\n                                <styled.LocationButtonConatiner>\n                                    {renderStationButtons()}\n                                </styled.LocationButtonConatiner>\n\n                                <styled.LocationButtonSubtitleContainer>\n                                  <styled.Subtitle schema={'locations'}>Workstation</styled.Subtitle>\n                                  <styled.Subtitle schema={'locations'}>Warehouse</styled.Subtitle>\n                                </styled.LocationButtonSubtitleContainer>\n\n                            </styled.LocationTypeContainer>\n\n                            {deviceEnabled &&\n                                <styled.LocationTypeContainer>\n                                    <styled.Label schema={'locations'} style = {{marginTop: '1rem'}}>Positions</styled.Label>\n                                    <styled.LocationButtonConatiner>\n                                        {renderPositionButtons()}\n                                    </styled.LocationButtonConatiner>\n\n                                    <styled.LocationButtonSubtitleContainer style = {{marginRight: '1.1rem'}}>\n                                      <styled.Subtitle schema={'locations'} style = {{marginRight: '4.5rem'}}>Cart</styled.Subtitle>\n                                      <styled.Subtitle schema={'locations'}>Shelf</styled.Subtitle>\n                                    </styled.LocationButtonSubtitleContainer>\n\n                                </styled.LocationTypeContainer>\n                            }\n                        </>\n\n                        :\n                        <LocationButton\n                            type={selectedLocation['type']}\n                            isSelected={(!!selectedLocation && selectedLocation.type !== null) ? selectedLocation.type : false}\n                            handleAddLocation={onAddLocation}\n                        />\n\n                    }\n\n                </styled.DefaultTypesContainer>\n\n                {(!!selectedLocation && selectedLocation.schema === 'station') ?\n\n                    <AssociatedPositions handleSetChildPositionToCartCoords={handleSetChildPositionToCartCoords} />\n                    :\n                    <Button\n                        schema={'locations'}\n                        secondary\n                        onClick={() => {\n                            handleSetPositionToCartCoords()\n                        }}\n                        style={{ marginBottom: '1rem' }}\n                    >\n                        Use Cart Location\n                    </Button>\n                }\n                <div style={{ height: \"100%\" }}></div>\n\n\n                {/* Delete Location Button */}\n                <Button schema={'locations'} secondary onClick={() => setConfirmDeleteModal(true)} >Delete</Button>\n            </styled.ContentContainer>\n\n        </>\n    )\n}\n\nexport default EditLocation\n","import React, { useState, useEffect, useMemo } from 'react'\nimport * as styled from './locations_content.style'\nimport { useSelector, useDispatch } from 'react-redux'\n\n// Import components\nimport ContentList from '../content_list/content_list'\nimport EditLocation from './edit_location/edit_location'\n\nimport { convertD3ToReal } from '../../../../methods/utils/map_utils'\n\n// Import actions\nimport { setEditingPosition, setSelectedPosition, setSelectedStationChildrenCopy } from '../../../../redux/actions/positions_actions'\nimport { setEditingStation, setSelectedStation } from '../../../../redux/actions/stations_actions'\n\n// Import Constants\nimport { StationTypes } from '../../../../constants/station_constants'\n\n// Import Utils\nimport { setAction } from '../../../../redux/actions/sidebar_actions'\nimport { deepCopy } from '../../../../methods/utils/utils'\nimport { locationsSortedAlphabetically } from '../../../../methods/utils/locations_utils'\n\nimport uuid from 'uuid'\n\n// This adds a location selected info to the reducer\nexport default function LocationContent() {\n\n    const dispatch = useDispatch()\n\n    const dispatchSetEditingPosition = (bool) => dispatch(setEditingPosition(bool))\n    const dispatchSetSelectedPosition = (position) => dispatch(setSelectedPosition(position))\n\n    const dispatchSetEditingStation = (bool) => dispatch(setEditingStation(bool))\n    const dispatchSetSelectedStation = (position) => dispatch(setSelectedStation(position))\n    const dispatchSetSelectedStationChildrenCopy = (positions) => dispatch(setSelectedStationChildrenCopy(positions))\n\n    const stations = useSelector(state => state.stationsReducer.stations)\n    const selectedStation = useSelector(state => state.stationsReducer.selectedStation)\n    const selectedPosition = useSelector(state => state.positionsReducer.selectedPosition)\n    const positions = useSelector(state => state.positionsReducer.positions)\n\n    const editingStation = useSelector(state => state.stationsReducer.editingStation)\n    const editingPosition = useSelector(state => state.positionsReducer.editingPosition)\n\n    const tasks = useSelector(state => state.tasksReducer.tasks)\n    const devices = useSelector(state => state.devicesReducer.devices)\n    const currentMap = useSelector(state => state.mapReducer.currentMap)\n    const MiRMapEnabled = useSelector(state => state.localReducer.localSettings.MiRMapEnabled)\n    const processes = useSelector(state => state.processesReducer.processes)\n\n    const [mergeStation, setMergeStation] = useState(false)\n    const [confirmDeleteModal, setConfirmDeleteModal] = useState(false);\n\n    const selectedLocation = !!selectedStation ? selectedStation : selectedPosition\n\n    const locations = {\n        ...stations,\n        ...positions\n    }\n\n    useEffect(() => {\n        return () => {\n\n        }\n    }, [])\n\n    const onSetSelectedLocation = (id) => {\n        if (id in stations) {\n            dispatchSetSelectedStation(stations[id])\n        }\n\n        else if (id in positions) {\n            dispatchSetSelectedPosition(positions[id])\n        }\n\n        else if (id === null) {\n            dispatchSetSelectedStation(null)\n            dispatchSetSelectedPosition(null)\n\n        }\n    }\n\n    /**\n     * Tells what location is being edited\n     * Handles whether location is a station or a position\n     * @param {*} id\n     */\n    const onEditLocation = (id) => {\n        const editingLocation = locations[id]\n\n        // If a station\n        if (editingLocation.schema === 'station') {\n            dispatchSetEditingStation(true)\n            dispatchSetSelectedStation(editingLocation)\n\n            // Copy Children\n            if (editingLocation.children.length > 0) {\n                let copy = {}\n\n                editingLocation.children.forEach(child => {\n                    copy[child] = positions[child]\n                })\n\n                dispatchSetSelectedStationChildrenCopy(copy)\n            }\n        }\n\n        // Else its a position\n        else {\n            dispatchSetEditingPosition(true)\n            dispatchSetSelectedPosition(editingLocation)\n        }\n    }\n\n    return (\n        (editingPosition || editingStation) ?\n            <EditLocation />\n\n            :\n            <ContentList\n                title={'Locations'}\n                schema={'locations'}\n                // Filters out devices from being displayed in locations\n                elements={\n                    locationsSortedAlphabetically(Object.values(locations))\n                        // Filters out devices, entry positions, other positions and right click to move positions\n                        .filter(location => !location.parent && location.type !== 'device' && location.type !== 'cart_entry_position' && location.type !== 'shelf_entry_position' && location.type !== 'charger_entry_position' && location.type !== 'other' && location.schema !== 'temporary_position' && (location.map_id === currentMap._id))\n                }\n                // elements={Object.values(locations)}\n                onMouseEnter={(location) => onSetSelectedLocation(location._id)}\n                onMouseLeave={() => onSetSelectedLocation(null)}\n                onClick={(location) => {\n                    console.log('QQQQ Editing Location', location)\n                    onEditLocation(location._id)\n                }}\n                onPlus={() => {\n                    dispatchSetEditingStation(true)\n                }}\n            />\n    )\n}\n","import styled from 'styled-components'\nimport { RGB_Linear_Shade, hexToRGBA } from '../../../../methods/utils/color_utils'\n\n\n// ========== Content ========== //\nexport const ContentContainer = styled.div`\n    flex-grow: 1;\n    padding: 1rem;\n    padding-top: 1.5rem;\n\n    display: flex;\n    flex-direction: column;\n\n`\n\nexport const ContentHeader = styled.div`\n    display: flex; \n    flex-direction: row;\n`\n\nexport const ContentTitle = styled.h1`\n    font-family: ${props => props.theme.font.primary};\n    font-size: 2rem;\n    font-weight: 500;\n    // color: ${props => props.theme.schema.objects};\n    color: white;\n    flex-grow: 1;\n`\n\n// ========== Object List ========== //\n\nexport const ObjectList = styled.ul`\n    flex-grow: 1;\n    padding: 0;\n`\n\nexport const ObjectItem = styled.div`\n    width: auto;\n    height: 2rem;\n    box-sizing: content-box;\n\n    text-align: center;\n\n    background: transparent;\n    border-radius: 0.5rem;\n    margin-bottom: 0.4rem;\n\n    border: 0.1rem solid white;\n    box-sizing: border-box;\n\n    cursor: pointer;\n    user-select: none;\n\n    &:hover {\n        background: ${props => props.theme.bg.primary};\n    }\n`\n\nexport const ObjectText = styled.span`\n    height: 2rem;\n    line-height: 2rem;\n    box-sizing: content-box;\n\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz4};\n    font-weight: 500;\n    color: ${props => props.theme.bg.primary};\n\n    ${props => props.selected && `\n        background: ${props.theme.schema.locations};\n        -webkit-text-fill-color: transparent;\n        -webkit-background-clip: text;\n        display:block;\n    `}\n`\n\n// ========== Type Buttons & Containers ========== //\n\nexport const DefaultTypesContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    border-bottom: 0.1rem solid ${props => props.theme.bg.secondary};\n    justify-content: center;\n\n    margin-top: 0.5rem;\n    padding-bottom: 0.5rem;\n`\n\nexport const CustomTypesContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n\n    margin: 0.5rem 0 0.5rem 0;\n    justify-content: center;\n`\n\nexport const ObjectTypeButton = styled.div`\n    height: 4rem;\n    width: 6rem;\n    border-radius: 0.5rem;\n\n    background: ${props => props.isSelected ? `rgba(0,0,0,0.2)` :  props.theme.bg.primary};\n\n    margin: 0.5rem;\n    position: relative;\n    opacity: 0.999;\n\n    box-shadow: ${props => props.isSelected ? `inset 0 0.1rem 0.2rem rgba(0,0,0,.39), 0 -0.1rem 0.1rem rgba(255,255,255,0.1), 0 0.1rem 0 rgba(255,255,255,0.1)` : `0 0.2rem 0.3rem 0rem rgba(0,0,0,0.3)`};\n`\nexport const ObjectTypeGraphic = styled.svg`\n    height: 3.5rem;\n\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n\n    fill: red;\n`","import styled from 'styled-components'\n\nexport const ContentContainer = styled.div`\n    flex-grow: 1;\n    padding: 1rem;\n    padding-top: 1.5rem;\n\n    display: flex;\n    flex-direction: column;\n\n`\n\nexport const RowContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n`\n\nexport const Header = styled.h1`\n    font-size: ${props => props.theme.fontSize.sz2};\n    font-family: ${props => props.theme.font.primary};\n    color: white;\n    margin-top: 1rem;\n`\n\nexport const Label = styled.h2`\n    font-size: ${props => props.theme.fontSize.sz3};\n    font-family: ${props => props.theme.font.primary};\n    color: white;\n    margin-right: 1rem;\n    line-height: 2rem;\n`\n\nexport const LabelHighlight = styled.span`\n    font-size: ${props => props.theme.fontSize.sz3};\n    font-family: ${props => props.theme.font.primary};\n    color: ${props => props.theme.schema.tasks.solid};\n    line-height: 2rem;\n    font-weight: bold;\n\n`\n\nexport const HelpText = styled.h3`\n    font-size: ${props => props.theme.fontSize.sz4};\n    font-family: ${props => props.theme.font.primary};\n    color: white;\n    text-align: center;\n`\n\nexport const DirectionText = styled.h3`\n    font-size: ${props => props.theme.fontSize.sz4};\n    font-family: ${props => props.theme.font.primary};\n    color: ${props => props.theme.schema.tasks.solid};\n    text-align: center;\n`\n\nexport const DualSelectionButton = styled.button`\n    font-size: 1rem;\n    width: 8rem;\n    border: none;\n    font-family: ${props => props.theme.font.primary};\n\n    color: ${props => !props.selected ? props.theme.bg.tertiary : props.theme.bg.octonary};\n\n    background-color: ${props => props.selected ? props.theme.schema.tasks.solid : props.theme.bg.octonary};\n\n    transition: background-color 0.25s ease, box-shadow 0.1s ease;\n\n    &:focus{\n        outline: 0 !important\n    }\n\n    &:active{\n        box-shadow: none;\n    }\n\n    &:hover{\n        //background-color: ${props => props.theme.bg.quaternary};\n    }\n`\n","export const ADD_TASK_ALERT_TYPE = {\n\tTASK_EXISTS: \"TASK_EXISTS\",\n\tTASK_ADDED: \"TASK_ADDED\",\n\tADDING: \"ADDING\",\n\tREPORT_SEND_SUCCESS: \"REPORT_SEND_SUCCESS\",\n\tREPORT_SEND_FAILURE: \"REPORT_SEND_FAILURE\",\n\tKICK_OFF_SUCCESS: \"KICK_OFF_SUCCESS\",\n\tKICK_OFF_FAILURE: \"KICK_OFF_FAILURE\",\n\tFINISH_SUCCESS: \"FINISH_SUCCESS\",\n\tFINISH_FAILURE: \"FINISH_FAILURE\",\n}\n\nexport const PAGES = {\n\tDASHBOARDS: \"Dashboards\",\n\tEDITING: \"Editing\",\n\tDASHBOARD: \"Dashboard\"\n}\n\nexport const DASHBOARD_BUTTON_COLORS = [\n\t{\n\t\thex: '#FF4B4B',\n\t\tlabel: \"Red\"\n\t},\n\t{\n\t\thex: '#56d5f5',\n\t\tlabel: \"Blue\"\n\t},\n\t{\n\t\thex: '#50de76',\n\t\tlabel: \"Green\"\n\t},\n\t{\n\t\thex: '#f2ae41',\n\t\tlabel: \"Orange\"\n\t},\n\t{\n\t\thex: '#c7a0fa',\n\t\tlabel: \"Purple\"\n\t}\n\t]","import styled from \"styled-components\";\n\nexport const AddTaskAlertContainer = styled.div`\n    position: fixed;\n    flex-direction: column;\n    text-align: center;\n\n    background-color: ${props => props.theme.bg.tertiary};\n    opacity: 90%;\n    border-radius: .3rem;\n    min-width: 70%;\n    max-width: 95%;\n    margin-left: auto;\n    margin-right: auto;\n    box-shadow: .1rem .1rem .5rem grey;\n    \n    left: 50%;\n    top: 50%;\n    transform: translate(-50%,-50%);\n    \n    padding-top: 1rem;  \n    z-index: 10000;\n`\n\nexport const AddTaskAlertLabel = styled.span`\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz2};\n    font-weight: bold;\n    color: ${props => props.color};\n`\n\nexport const AddTaskAlertMessage = styled.p`\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz3};\n    color: ${props => props.color};\n`","import React, { useEffect } from 'react';\n\n// import utils\nimport { ADD_TASK_ALERT_TYPE } from \"../../../../../../constants/dashboard_contants\";\n\n// Import styles\nimport * as style from './task_added_alert.style'\n\nconst TaskAddedAlert = (props) => {\n\n    // extract props\n    const {\n        type,\n        visible,\n        label,\n        message,\n        containerStyle\n    } = props\n\n\n    let alertColor\n    switch (type) {\n        case ADD_TASK_ALERT_TYPE.TASK_EXISTS:\n            alertColor = '#FF4B4B'\n            break\n        case ADD_TASK_ALERT_TYPE.ADDING:\n            alertColor = '#6c6e78'\n            break\n        case ADD_TASK_ALERT_TYPE.TASK_ADDED:\n            alertColor = '#79d99b'\n            break\n\n        case ADD_TASK_ALERT_TYPE.FINISH_SUCCESS:\n        case ADD_TASK_ALERT_TYPE.KICK_OFF_SUCCESS:\n        case ADD_TASK_ALERT_TYPE.REPORT_SEND_SUCCESS:\n            alertColor = '#79d99b'\n            break\n\n        case ADD_TASK_ALERT_TYPE.FINISH_FAILURE:\n        case ADD_TASK_ALERT_TYPE.KICK_OFF_FAILURE:\n        case ADD_TASK_ALERT_TYPE.REPORT_SEND_FAILURE:\n            alertColor = '#FF4B4B'\n            break\n\n\n        default:\n            alertColor = '#FF4B4Bs'\n    }\n\n    if (visible) {\n        return <style.AddTaskAlertContainer style={containerStyle}>\n            <style.AddTaskAlertLabel color={alertColor}>{label}</style.AddTaskAlertLabel>\n            <style.AddTaskAlertMessage color={alertColor}>{message}</style.AddTaskAlertMessage>\n        </style.AddTaskAlertContainer>\n    } else {\n        return null\n    }\n}\n\nexport default TaskAddedAlert;\n","// Import utils\nimport { deepCopy } from './utils'\n\nexport const tasksSortedAlphabetically = (tasks) => {\n    const tasksCopy = deepCopy(tasks)\n\n    tasksCopy.sort((a,b) => {\n        const aName = a.name\n        const bName = b.name\n\n        if(aName < bName) return -1\n        if(aName > bName) return 1\n        return 0\n    })\n\n    return tasksCopy\n}","import uuid from 'uuid'\n\nconst RouteTask = {\n    name: '',\n    obj: null,\n    type: 'push',\n    quantity: 1,\n    // device_type: !!MiRMapEnabled ? 'MiR_100' : 'human',\n    handoff: true,\n    track_quantity: true,\n    // map_id: currentMap._id,\n    new: true,\n    process: false,\n    load: {\n        position: null,\n        station: null,\n        sound: null,\n        instructions: 'Load',\n        timeout: '01:00'\n    },\n    unload: {\n        position: null,\n        station: null,\n        sound: null,\n        instructions: 'Unload'\n    },\n    _id: uuid.v4(),\n}\n\nexport default RouteTask","import styled from \"styled-components\";\n\nexport const DefaultContainer = styled.div`\n\tposition: relative;\n`;\n\nexport const DefaultErrorContainerComponent = styled.div`\n    width: auto;\n    height: auto;\n    position: absolute;\n    top: 50%;\n    right: 2rem;\n    transform: translateY(-50%);\n    margin: 0;\n    padding: 0;\n    z-index: 500;\n`;","import React from \"react\";\nimport { useField, useFormikContext } from \"formik\";\nimport Switch from 'react-ios-switch';\nimport ErrorTooltip from \"../error_tooltip/error_tooltip\";\nimport PropTypes from \"prop-types\";\nimport * as styled from \"./switch_field.style\";\nimport {getMessageFromError} from \"../../../../methods/utils/form_utils\";\n\nconst SwitchField = (props) => {\n\n    const {\n        Container,\n        containerStyle,\n        ErrorContainerComponent,\n        style,\n        onChange,\n        mapOutput,\n        mapInput,\n        ...rest\n    } = props\n\n    const { setFieldValue, setFieldTouched } = useFormikContext();\n    const [field, meta] = useField(props);\n\n    const {\n        value: fieldValue,\n        name: fieldName\n    } = field\n\n    const {\n        touched,\n        error\n    } = meta\n\n    const hasError = touched && error;\n    const errorMessage = getMessageFromError(error);\n\n    return (\n        <Container\n            style={containerStyle}\n        >\n            <Switch\n                checked={mapInput(fieldValue)}\n                {...rest}\n                onChange={val => {\n                    if(!touched) setFieldTouched(fieldName, true);\n\n                    setFieldValue(fieldName, mapOutput(val))\n\n                    onChange && onChange(val)\n                }}\n            />\n            {/*<ErrorTooltip*/}\n            {/*    visible={hasError}*/}\n            {/*    text={errorMessage}*/}\n            {/*    ContainerComponent={ErrorContainerComponent}*/}\n            {/*/>*/}\n\n        </Container>\n    );\n};\n\n// Specifies propTypes\nSwitchField.propTypes = {\n    Container: PropTypes.elementType,\n    ErrorContainerComponent: PropTypes.elementType,\n    containerStyle: PropTypes.object,\n    style: PropTypes.object,\n    onChange: PropTypes.func,\n    mapInput: PropTypes.func,\n    mapOutput: PropTypes.func,\n};\n\n// Specifies the default values for props:\nSwitchField.defaultProps = {\n    Container: styled.DefaultContainer,\n    ErrorContainerComponent: styled.DefaultErrorContainerComponent,\n    containerStyle: {},\n    style: {},\n    onChange: () => {},\n    mapInput: (val) => val,\n    mapOutput: (val) => val\n};\n\nexport default SwitchField;\n","import styled from 'styled-components';\nimport TimePicker from 'rc-time-picker';\nimport {css} from 'styled-components'\n\n\nexport const DefaultContainer = styled.div`\n\tposition: relative;\n`;\n\nexport const DefaultErrorContainerComponent = styled.div`\n    width: auto;\n    height: auto;\n    position: absolute;\n    top: 50%;\n    right: 2rem;\n    transform: translateY(-50%);\n    margin: 0;\n    padding: 0;\n    z-index: 500;\n`;\n\n\nconst someCss = css`\n    // ${props => props.css};\n    //\n    // & .rc-time-picker-panel-select-option-selected {\n    //\n    // }\n    //\n    // & .rc-time-picker-panel-input-wrap {\n    //\n    // }\n    //\n    // & .rc-time-picker-clear,\n    // & .rc-time-picker-clear-icon:after {\n    //\n    // }\n    //\n    // & .rc-time-picker-panel-inner {\n    //     border-color: ${props => props.hasError && \"red\"};\n    //     box-shadow:  ${props => props.hasError && \"0 0 5px red\"};\n    // }\n    //\n    // & .rc-time-picker-panel-select,\n    // & .rc-time-picker-input,\n    // & .rc-time-picker-panel-input,\n    // & .rc-time-picker-panel-input-wrap {\n    //     border-color: ${props => props.hasError && \"red\"};\n    //     box-shadow:  ${props => props.hasError && \"0 0 5px red\"};\n    // }\n`\nexport const TimePickerComponent = styled(TimePicker)`\n    \n`;\n","// import external modules\nimport React from \"react\";\nimport { useField, useFormikContext } from \"formik\";\nimport TimePicker from 'rc-time-picker';\nimport moment from 'moment';\nimport 'rc-time-picker/assets/index.css';\n\n// import components\nimport ErrorTooltip from \"../error_tooltip/error_tooltip\";\n\n// import styles\nimport * as styled from './time_picker_field.style'\nimport PropTypes from \"prop-types\";\nimport {getMessageFromError} from \"../../../../methods/utils/form_utils\";\n\nconst TimePickerField = (props) => {\n\n\tconst {\n\t\tTimePickerCss,\n\t\tContainer,\n\t\tErrorContainerComponent,\n\t\tcontainerStyle,\n\t\tstyle,\n\t\tonChange,\n\t\tdefaultOpenValue,\n\t\tdefaultValue,\n\t\tmapOutput,\n\t\tmapInput,\n\t\t...rest\n\t} = props\n\n\tconst { setFieldValue, setFieldTouched } = useFormikContext();\n\tconst [field, meta] = useField(props);\n\n\tconst {\n\t\tvalue: fieldValue,\n\t\tname: fieldName\n\t} = field\n\n\tconst {\n\t\ttouched,\n\t\terror\n\t} = meta\n\n\tconst hasError = touched && error;\n\tconst errorMessage = getMessageFromError(error);\n\n\treturn (\n\t\t\t// <Container\n\t\t\t// \tstyle={containerStyle}\n\t\t\t// >\n\t\t\t\t<styled.TimePickerComponent\n\t\t\t\t\t{...style}\n\t\t\t\t\t{...field}\n\t\t\t\t\t{...rest}\n\t\t\t\t\tcss={TimePickerCss}\n\t\t\t\t\thasError={hasError}\n\t\t\t\t\t// showSecond={false}\n\t\t\t\t\tvalue={mapInput(fieldValue)}\n\t\t\t\t\tonChange={(val) => {\n\n\t\t\t\t\t\tif(!touched) setFieldTouched(fieldName, true)\n\t\t\t\t\t\tsetFieldValue(fieldName, mapOutput(val))\n\n\t\t\t\t\t\tonChange && onChange(val)\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t// \t<ErrorTooltip\n\t\t\t// \t\tvisible={hasError}\n\t\t\t// \t\ttext={errorMessage}\n\t\t\t// \t\tContainerComponent={ErrorContainerComponent}\n\t\t\t// \t/>\n\t\t\t// </Container>\n\t)\n}\n\n// Specifies propTypes\nTimePickerField.propTypes = {\n\tContainer: PropTypes.elementType,\n\tErrorContainerComponent: PropTypes.elementType,\n\tcontainerStyle: PropTypes.object,\n\tstyle: PropTypes.object,\n\tonChange: PropTypes.func,\n\tmapOutput: PropTypes.func,\n\tmapInput: PropTypes.func,\n};\n\n// Specifies the default values for props:\nTimePickerField.defaultProps = {\n\tContainer: styled.DefaultContainer,\n\tErrorContainerComponent: styled.DefaultErrorContainerComponent,\n\tcontainerStyle: {},\n\tstyle: {},\n\tonChange: () => {},\n\tmapOutput: () => {},\n\tmapInput: () => {},\n};\n\nexport default TimePickerField;\n","export const isString = (value) => {\n    return (typeof value) === \"string\"\n}","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\n// Import Styles\nimport * as styled from '../../tasks_content.style'\n\n// Import basic components\nimport Switch from 'react-ios-switch';\nimport moment from 'moment';\nimport TimePicker from 'rc-time-picker';\nimport DropDownSearch from '../../../../../basic/drop_down_search_v2/drop_down_search'\nimport Textbox from '../../../../../basic/textbox/textbox.js'\n\n// Import actions\nimport { setSelectedTask, setTaskAttributes } from '../../../../../../redux/actions/tasks_actions'\nimport {isHumanTask, isMiRandHumanTask, isMiRTask, isOnlyHumanTask} from \"../../../../../../methods/utils/route_utils\";\nimport {DEVICE_CONSTANTS} from \"../../../../../../constants/device_constants\";\nimport SwitchField from \"../../../../../basic/form/switch_field/switch_field\";\nimport TimePickerField from \"../../../../../basic/form/time_picker_field/time_picker_field\";\nimport TextField from \"../../../../../basic/form/text_field/text_field\";\nimport DropDownSearchField from \"../../../../../basic/form/drop_down_search_field/drop_down_search_field\";\nimport {isArray} from \"../../../../../../methods/utils/array_utils\";\nimport {isString} from \"../../../../../../methods/utils/string_utils\";\nimport {isObject} from \"../../../../../../methods/utils/object_utils\";\n\n\nconst LoadUnloadFields = (props) => {\n\n    const {\n        fieldParent,\n        setFieldValue,\n        values\n    } = props\n\n    const dispatch = useDispatch()\n    const dispatchSetSelectedTask = (task) => dispatch(setSelectedTask(task))\n    const dispatchSetTaskAttributes = (id, attr) => dispatch(setTaskAttributes(id, attr))\n\n    let selectedTask = useSelector(state => state.tasksReducer.selectedTask)\n    const sounds = useSelector(state => state.soundsReducer.sounds)\n    const stations = useSelector(state => state.stationsReducer.stations)\n\n\n    // This handles if any position of a route is a human position, then it cant be done by a robot\n    let humanLocation = false\n    const mirEnabled = isMiRTask(selectedTask)\n\n    if ((!!stations[selectedTask.load.position] && stations[selectedTask.load.position].type === 'human') || (!!stations[selectedTask.unload.position] && stations[selectedTask.unload.position].type === 'human')) {\n        humanLocation = true\n\n        if (!isOnlyHumanTask(selectedTask)) {\n            dispatchSetSelectedTask({\n                ...selectedTask,\n                device_types: [DEVICE_CONSTANTS.HUMAN],\n            })\n        }\n    }\n    else if(!isMiRandHumanTask(selectedTask)) {\n        dispatchSetSelectedTask({\n            ...selectedTask,\n            device_types: [DEVICE_CONSTANTS.HUMAN, DEVICE_CONSTANTS.MIR_100],\n        })\n    }\n\n    return (\n        <>\n            {/*{!humanLocation &&*/}\n            {/*    <>*/}\n            {/*        <styled.RowContainer>*/}\n            {/*            <styled.Header>Robot Enabled</styled.Header>*/}\n            {/*            <SwitchField*/}\n            {/*                name={fieldParent ? `${fieldParent}.device_types` : \"device_types\"}*/}\n            {/*                // checked={mirEnabled}*/}\n            {/*                mapInput={(devices)=> {*/}\n            {/*                    if(devices.includes(DEVICE_CONSTANTS.MIR_100) && devices.includes(DEVICE_CONSTANTS.HUMAN)) {*/}\n            {/*                        return true*/}\n            {/*                    }*/}\n            {/*                    else {*/}\n            {/*                        return false*/}\n            {/*                    }*/}\n            {/*                }}*/}\n            {/*                mapOutput={(enable) => {*/}\n            {/*                    if(enable) {*/}\n            {/*                        return([DEVICE_CONSTANTS.MIR_100, DEVICE_CONSTANTS.HUMAN])*/}\n            {/*                    }*/}\n            {/*                    else {*/}\n            {/*                        return([DEVICE_CONSTANTS.HUMAN])*/}\n            {/*                    }*/}\n            {/*                }}*/}\n            {/*                onColor='red'*/}\n            {/*                style={{ marginRight: '1rem' }}*/}\n            {/*            />*/}\n\n            {/*        </styled.RowContainer>*/}\n            {/*        <styled.HelpText>Do you want a robot to perform this task? If selected, there will be an option for a person to take over the task when the button is placed onto the dashboard.</styled.HelpText>*/}\n            {/*    </>*/}\n            {/*}*/}\n\n\n\n            <styled.RowContainer style={{ marginTop: '2rem' }}>\n\n                <styled.Header style={{ marginTop: '0rem',marginRight: \".5rem\" }}>Load</styled.Header>\n\n                {!humanLocation &&\n\n                    <styled.RowContainer style={{ justifyContent: 'flex-end', alignItems: 'baseline',  }}>\n                        <styled.HelpText style={{ fontSize: '1rem', marginRight: '.5rem' }}>TimeOut: </styled.HelpText>\n\n                        <TimePickerField\n                            mapInput={(value) => {\n                                if(value) {\n                                    const splitVal = value.split(':')\n                                    return moment().set({ 'minute': splitVal[0], 'second': splitVal[1] })\n                                }\n                            }}\n                            mapOutput={(value) => {\n                                return value.format(\"mm:ss\")\n                            }}\n                            name={fieldParent ? `${fieldParent}.load.timeout` : \"load.timeout\"}\n                            style={{ flex: '0 0 7rem', display: 'flex', flexWrap: 'wrap', textAlign: 'center', backgroundColor: '#6c6e78' }}\n                            showHour={false}\n                            className=\"xxx\"\n                            autocomplete={\"off\"}\n                            allowEmpty={false}\n                            defaultOpenValue={!!selectedTask.load.timeout ? moment().set({ 'minute': selectedTask.load.timeout.split(':')[0], 'second': selectedTask.load.timeout.split(':')[1] }) : moment().set({ 'minute': 1, 'second': 0 })}\n                            defaultValue={!!selectedTask.load.timeout ? moment().set({ 'minute': selectedTask.load.timeout.split(':')[0], 'second': selectedTask.load.timeout.split(':')[1] }) : moment().set({ 'minute': 1, 'second': 0 })}\n                            onChange={(time) => {\n                                dispatchSetSelectedTask({\n                                    ...selectedTask,\n                                    load: {\n                                        ...selectedTask.load,\n                                        timeout: time.format(\"mm:ss\")\n                                    }\n                                })\n                            }}\n                        />\n                    </styled.RowContainer>\n                }\n\n            </styled.RowContainer>\n\n            <TextField\n                name={fieldParent ? `${fieldParent}.load.instructions` : \"load.instructions\"}\n                schema={'tasks'}\n                focus={!!selectedTask && selectedTask.type == null}\n                lines={2}\n                InputComponent={Textbox}\n            />\n\n            {!isOnlyHumanTask(selectedTask) &&\n                <div style={{ display: \"flex\", flexDirection: \"row\", marginTop: \"0.5rem\" }}>\n                    <styled.Label>Sound </styled.Label>\n                    <DropDownSearchField\n                        name={fieldParent ? `${fieldParent}.load.sound` : \"load.sound\"}\n                        placeholder=\"Select Sound\"\n                        label=\"Sound to be played upon arrival\"\n                        labelField=\"name\"\n                        valueField=\"name\"\n                        options={Object.values(sounds)}\n                        mapInput={(val)=>{\n                            if(isString(val) && isObject(sounds[val])) return [sounds[val]]\n                            return []\n                        }}\n                        mapOutput={(val) => {\n                            let output = null\n                            if(isArray(val) && val.length > 0) {\n                                output = val[0]?._id || null\n                            }\n                            return output\n                        }}\n                        // values={!!selectedTask.load.sound ? [sounds[selectedTask.load.sound]] : []}\n                        dropdownGap={5}\n                        noDataLabel=\"No matches found\"\n                        closeOnSelect=\"true\"\n                        className=\"w-100\"\n                        schema=\"tasks\" />\n                </div>\n            }\n\n            {/* If its a human task, then the task can also be defined as a handoff.\n                    A handoff does not require unload confirmation.\n                */}\n            {!isMiRTask(selectedTask) &&\n                <styled.ContentContainer style={{ paddingBottom: '0rem' }}>\n                    <styled.RowContainer>\n                        <styled.Label style={{ marginBottom: '0rem' }}>Confirm Unload?</styled.Label>\n                        <SwitchField\n                            mapInput={(val)=>!val}\n                            mapOutput={(val)=>!val}\n                            name={fieldParent ? `${fieldParent}.handoff` : \"handoff\"}\n                            onColor='red'\n                            containerStyle={{ marginRight: '1rem' }}\n                        />\n                    </styled.RowContainer>\n                    <styled.HelpText>Do you want to track transit time? This will display a Unload Button at the Unload Station</styled.HelpText>\n                </styled.ContentContainer>\n            }\n\n            {/* Hides the unload field if its a handoff task */}\n            {!values.handoff &&\n\n                <>\n                    <styled.Header>Unload</styled.Header>\n                    <TextField\n                        name={fieldParent ? `${fieldParent}.unload.instructions` : \"unload.instructions\"}\n                        schema={'tasks'}\n                        focus={!!selectedTask && selectedTask.type == null}\n                        lines={2}\n                        InputComponent={Textbox}\n                    />\n\n                    {/* If its a human task, then you shouldnt require people to make noises. I personally would though...  */}\n                    {!isOnlyHumanTask(selectedTask) &&\n\n                        <div style={{ display: \"flex\", flexDirection: \"row\", marginTop: \"0.5rem\" }}>\n                            <styled.Label>Sound </styled.Label>\n                            <DropDownSearchField\n                                name={fieldParent ? `${fieldParent}.unload.sound` : \"unload.sound\"}\n                                placeholder=\"Select Sound\"\n                                label=\"Sound to be played upon arrival\"\n                                labelField=\"name\"\n                                valueField=\"name\"\n                                options={Object.values(sounds)}\n                                dropdownGap={5}\n                                noDataLabel=\"No matches found\"\n                                closeOnSelect=\"true\"\n                                mapInput={(val)=>{\n                                    if(isString(val) && isObject(sounds[val])) return [sounds[val]]\n                                    return []\n                                }}\n                                mapOutput={(val) => {\n                                    let output = null\n                                    if(isArray(val) && val.length > 0) {\n                                        output = val[0]?._id || null\n                                    }\n                                    return output\n                                }}\n                                className=\"w-100\"\n                                schema=\"tasks\"\n                            />\n                        </div>\n                    }\n                </>\n            }\n\n\n            {/* {selectedTask.device_type === 'MiR_100' &&\n                    <>\n                        <styled.Header>Idle Location</styled.Header>\n                        <DropDownSearch\n                            placeholder=\"Select Location\"\n                            label=\"Idle Location for MiR Cart\"\n                            labelField=\"name\"\n                            valueField=\"name\"\n                            options={Object.values(positions)}\n                            values={!!selectedTask.idle_location ? [positions[selectedTask.idle_location]] : []}\n                            dropdownGap={5}\n                            noDataLabel=\"No matches found\"\n                            closeOnSelect=\"true\"\n                            onChange={values => {\n\n                                const idleLocation = values[0]._id\n\n                                dispatchSetSelectedTask({\n                                    ...selectedTask,\n                                    idle_location: idleLocation,\n                                })\n                            }}\n                            className=\"w-100\"\n                            schema=\"tasks\"\n                        />\n                    </>\n                } */}\n\n\n        </>\n    )\n};\n\nexport default LoadUnloadFields\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport PropTypes from 'prop-types';\n\nclass ClickOutside extends React.Component {\n  container = React.createRef();\n\n  componentDidMount() {\n    document.addEventListener('click', this.handleClick, {capture:true, passive:true});\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('click', this.handleClick, {capture:true, passive:true});\n  }\n\n  handleClick = (event) => {\n    const container = this.container.current;\n    const { target } = event;\n    const { onClickOutside } = this.props;\n\n    if ((container && container === target) || (container && !container.contains(target))) {\n      onClickOutside(event);\n    }\n  };\n\n  render() {\n    const { className, children, ClickOutsideComponent } = this.props;\n\n    return (\n      <ClickOutsideComponent className={className} ref={this.container}>\n        {children}\n      </ClickOutsideComponent>\n    );\n  }\n}\n\nconst DefaultClickOutsideComponent = styled.div`\n\n`;\n\nClickOutside.propTypes = {\n  onClickOutside: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string\n};\n\nClickOutside.defaultProps = {\n  ClickOutsideComponent: DefaultClickOutsideComponent\n};\n\n\nexport default ClickOutside;\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport styled from 'styled-components'\n\nimport { LightenDarkenColor } from '../../../../methods/utils/color_utils'\n\nfunction Label(props) {\n    return (\n        <props.LabelComponent schema={props.schema}>\n            {props.label}\n        </props.LabelComponent>\n    )\n}\n\nconst DefaultLabelComponent = styled.div`\n    width: 100%;\n\n    font-family: ${props => props.theme.font.primary};\n\n    text-align: center;\n    font-weight: 200;\n    color: ${props => !!props.schema ? props.theme.schema[props.schema].solid : props.theme.fg.primary};\n    font-size: ${props => props.theme.fontSize.sz5};\n    background: ${props => LightenDarkenColor(props.theme.bg.quinary, -10)};\n    cursor: default;\n`\n\nLabel.propTypes = {\n    LabelComponent: PropTypes.elementType,\n    label: PropTypes.string,\n}\n\nLabel.defaultProps = {\n    LabelComponent: DefaultLabelComponent,\n    label: '',\n}\n\nexport default Label\n\n","export const valueExistInSelected = (value, values, props) =>\n  !!values.find((val) => getByPath(val, props['valueField']) === value);\n\nexport const hexToRGBA = (hex, alpha) => {\n  const RR = parseInt(hex.slice(1, 3), 16);\n  const GG = parseInt(hex.slice(3, 5), 16);\n  const BB = parseInt(hex.slice(5, 7), 16);\n\n  return `rgba(${RR}, ${GG}, ${BB}${alpha && `, ${alpha}`})`;\n};\n\nexport const debounce = (fn, delay = 0) => {\n  let timerId;\n\n  return (...args) => {\n    if (timerId) {\n      clearTimeout(timerId);\n    }\n    timerId = setTimeout(() => {\n      fn(...args);\n      timerId = null;\n    }, delay);\n  };\n};\n\nexport const isEqual = (a, b) => JSON.stringify(a) === JSON.stringify(b);\n\nexport const getByPath = (object, path) => {\n  // console.log('getByPath: {object, path}', {object, path})\n\n  let new_path = path.split('.')\n  // console.log('getByPath: new_path', {new_path})\n\n  if (!path) {\n    return;\n  }\n\n  return path.split('.').reduce((acc, value) => acc[value], object)\n};\n\nexport const getProp = (object, path, defaultValue) => {\n  if (!path) {\n    return object;\n  }\n\n  const normalizedPath = Array.isArray(path) ? path : path.split('.').filter((item) => item.length);\n\n  if (!normalizedPath.length) {\n    return object === undefined ? defaultValue : object;\n  }\n\n  return getProp(object[normalizedPath.shift()], normalizedPath, defaultValue);\n};\n","export const LIB_NAME = 'react-dropdown-select';\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport {getByPath} from '../util';\nimport { LIB_NAME } from '../constants';\n\nconst Option = ({ item, props, state, methods }) => {\n\n    const OptionComponent = props.OptionComponent ? props.OptionComponent : DefaultOptionComponent\n    return(\n        item && props.optionRenderer ? (\n          props.optionRenderer({ item, props, state, methods })\n        ) : (\n          <OptionComponent\n            role=\"listitem\"\n            disabled={props.disabled}\n            direction={props.direction}\n            className={`${LIB_NAME}-option`}\n            color={props.color}>\n            <span className={`${LIB_NAME}-option-label`}>{getByPath(item, props.labelField)}</span>\n            <span\n              className={`${LIB_NAME}-option-remove`}\n              onClick={(event) => methods.removeItem(event, item, props.closeOnSelect)}>\n              &times;\n            </span>\n          </OptionComponent>\n        )\n    );\n\n}\n\nexport const DefaultOptionComponent = styled.span`\n\n  padding: 0 5px;\n  border-radius: 2px;\n  line-height: 21px;\n  margin: 3px 0 3px 5px;\n  background: ${({ color }) => color};\n  color: #fff;\n  display: flex;\n  flex-direction: ${({ direction }) => direction === 'rtl' ? 'row-reverse' : 'row'};\n\n\n  .${LIB_NAME}-option-remove {\n    cursor: pointer;\n    width: 22px;\n    height: 22px;\n    display: inline-block;\n    text-align: center;\n    margin: 0 -5px 0 0px;\n    border-radius: 0 3px 3px 0;\n\n    :hover {\n      color: tomato;\n    }\n  }\n\n  :hover,\n  :hover > span {\n    opacity: 0.9;\n  }\n\n`;\n\n\n// Specifies the default values for props:\nOption.defaultProps = {\n    OptionComponent: DefaultOptionComponent,\n};\n\nexport default Option;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { valueExistInSelected } from '../util';\nimport * as PropTypes from 'prop-types';\nimport { LIB_NAME } from '../constants';\n\nimport { LightenDarkenColor } from '../../../../methods/utils/color_utils'\n\nconst handlePlaceHolder = (props, state) => {\n  const { addPlaceholder, searchable, placeholder } = props;\n  const noValues = state.values && state.values.length === 0;\n  const hasValues = state.values && state.values.length > 0;\n\n  if (hasValues && addPlaceholder && searchable) {\n    return addPlaceholder;\n  }\n\n  if (noValues) {\n    return placeholder;\n  }\n\n  if (hasValues && !searchable) {\n    return '';\n  }\n\n  return '';\n};\n\nclass Input extends Component {\n  input = React.createRef();\n\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.state.textbox || (prevProps.state.textbox !== this.props.state.textbox && this.props.state.textbox) ||\n      this.props.props.autoFocus\n    ) {\n      this.input.current.focus();\n    }\n\n    if (prevProps.state.textbox !== this.props.state.textbox && !this.props.state.textbox) {\n       this.input.current.blur();\n    }\n  }\n\n  onBlur = (event) => {\n    event.stopPropagation();\n    if (!this.props.state.textbox) {\n      return this.input.current.blur();\n    }\n\n    return this.input.current.focus();\n  };\n\n  handleKeyPress = (event) => {\n    const { props, state, methods } = this.props;\n\n    return (\n      props.create &&\n      event.key === 'Enter' &&\n      !valueExistInSelected(state.search, state.values, this.props) &&\n      state.search &&\n      state.cursor === null &&\n      methods.createNew(state.search)\n    );\n  };\n\n  render() {\n    const { props, state, methods, InputComponent } = this.props;\n\n    if (props.inputRenderer) {\n      return props.inputRenderer({ props, state, methods, inputRef: this.input });\n    }\n\n    return (\n      <InputComponent\n        ref={this.input}\n        tabIndex=\"-1\"\n        onFocus={(event) => {\n          event.stopPropagation()\n          methods.setSearch({target: {value: !!state.currentValue ? state.currentValue : ''}})\n        }}\n        className={`${LIB_NAME}-input`}\n        size={methods.getInputSize()}\n        value={state.currentValue}\n        readOnly={!props.searchable}\n        onClick={() => methods.dropDown('open')}\n        onKeyPress={this.handleKeyPress}\n        onChange={(e) => {\n          methods.setSearch(e)\n          methods.setValue(e.target.value)\n          props.onChange([{name: e.target.value}])\n        }}\n        onBlur={this.onBlur}\n        placeholder={handlePlaceHolder(props, state)}\n        disabled={props.disabled}\n        filled={props.filled}\n      />\n    );\n  }\n}\n\nexport const TextboxInput = styled.input`\n    background-color: ${props => props.theme.bg.quinary};\n    border: none;\n    font-size: 1.2rem;\n    font-family: ${props => props.theme.font.primary};\n    font-weight: 500;\n    display: flex;\n    flex-grow: 1;\n    color: ${props => props.theme.bg.octonary};\n\n    margin: 0 0.5rem 0 0.5rem;\n\n    &:focus {\n      background-color: ${props => LightenDarkenColor(props.theme.bg.quinary, 10)};\n      outline: none !important;\n  }\n\n    &::placeholder {\n        font-size: ${props => props.theme.fontSize.sz4};\n        font-family: ${props => props.theme.font.secondary};\n        color: ${props => props.theme.bg.senary};\n    }\n`;\n\n// export const DefaultInputComponent = styled.input`\n//     cursor: pointer;\n//     line-height: inherit;\n\n//     // width: ${props => props.filled ? `calc(${props.size}ch + 5px)` : `100%`};\n//     width: ${props => `calc(${props.size}ch + 5px)`};\n\n//     border: none;\n//     margin-left: 5px;\n//     background: transparent;\n//     font-size: smaller;\n//     ${({ readOnly }) => readOnly && 'cursor: pointer;'}\n//     :focus {\n//       outline: none;\n//     }\n\n//     vertical-align: middle;\n//     line-height: 2rem;\n//     height: 2rem;\n    \n//     &::placeholder {\n//       color: ${props => props.theme.bg.senary};\n//     }\n//     `;\n\nInput.propTypes = {\n    props: PropTypes.object,\n    state: PropTypes.object,\n    methods: PropTypes.object\n};\n\nInput.defaultProps = {\n    InputComponent: TextboxInput\n};\n\nexport default Input;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport Option from './Option';\nimport Input from './Input';\nimport { LIB_NAME } from '../constants';\nimport {getByPath} from '../util';\n\nconst Content = ({ props, state, methods, ContentComponent, InputComponent }) => {\n  return (\n    <ContentComponent\n      className={`${LIB_NAME}-content ${\n        props.multi ? `${LIB_NAME}-type-multi` : `${LIB_NAME}-type-single`\n      }`}\n      onClick={(event) => {\n        event.stopPropagation();\n        methods.dropDown('open');\n      }}>\n      {props.contentRenderer ? (\n        props.contentRenderer({ props, state, methods })\n      ) : (\n        \n        <React.Fragment>\n          <Input InputComponent={InputComponent} props={props} methods={methods} state={state} />\n        </React.Fragment>\n      )}\n    </ContentComponent>\n  );\n};\n\nexport const Value = styled.div`\n  margin-left: 0.3rem;\n  margin-right: 0.2rem;\n  line-height: 1.8rem;\n  font-size: ${props => props.theme.fontSize.sz3};\n  width: 100%;\n`\n\nexport const DefaultContentComponent = styled.div`\n  position: relative;\n  \n  display: flex;\n  flex-grow: 1;\n  // flex-wrap: nowrap;\n\n  overflow: hidden;\n  word-break: break-all;\n  // white-space: nowrap;\n  text-overflow: ellipsis;\n`;\n\n// Specifies the default values for props:\nContent.defaultProps = {\n    ContentComponent: DefaultContentComponent,\n};\n\nexport default Content;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { LIB_NAME } from '../constants';\n\nimport { LightenDarkenColor } from '../../../../methods/utils/color_utils'\n\nconst NoData = ({ props, state, methods, NoDataComponent }) =>\n\n  props.noDataRenderer ? (\n    props.noDataRenderer({ props, state, methods })\n  ) : (\n    <NoDataComponent id={'bob5'} className={`${LIB_NAME}-no-data`} color={props.color} schema={props.schema}>\n      {props.noDataLabel}\n    </NoDataComponent>\n  );\n\nconst DefaultNoDataComponent = styled.div`\n  text-align: center;\n  font-weight: 200;\n  color: ${props => !!props.schema ? props.theme.schema[props.schema].solid : props.theme.fg.primary};\n  font-size: ${props => props.theme.fontSize.sz5};\n  background: ${props => LightenDarkenColor(props.theme.bg.quinary, -10)};\n  cursor: default;\n`;\n\nNoData.defaultProps = {\n  NoDataComponent: DefaultNoDataComponent\n};\n\nexport default NoData;\n","import React, { Component } from 'react';\nimport styled from 'styled-components'\nimport { getByPath } from '../util';\nimport * as PropTypes from 'prop-types';\nimport { LIB_NAME } from '../constants';\n\nimport { LightenDarkenColor, hexToRGBA } from '../../../../methods/utils/color_utils'\n\nclass Item extends Component {\n  item = React.createRef();\n\n  componentDidUpdate() {\n    if (this.props.state.cursor === this.props.itemIndex) {\n      this.item.current &&\n        this.item.current.scrollIntoView({ behavior: 'smooth', block: 'nearest', inline: 'start' });\n    }\n  }\n\n  render() {\n    // console.log('Item render this.props',this.props)\n    const { props, state, methods, item, itemIndex, ItemComponent, ContentContainer, ButtonComponent, TextComponent } = this.props;\n\n    if (props.itemRenderer) {\n      return props.itemRenderer({ item, itemIndex, props, state, methods });\n    }\n\n    if (!props.keepSelectedInList && methods.isSelected(item)) {\n      return null;\n    }\n\n    // console.log('item ItemComponent', ItemComponent)\n    //const { ItemComponent } = this.props;\n\n    return (\n      <ItemComponent\n        role=\"option\"\n        ref={this.item}\n        aria-selected={methods.isSelected(item)}\n        aria-disabled={item.disabled}\n        disabled={item.disabled}\n        aria-label={getByPath(item, props.labelField)}\n        key={`${getByPath(item, props.valueField)}${getByPath(item, props.labelField)}`}\n        tabIndex=\"-1\"\n        className={`${LIB_NAME}-item ${\n          methods.isSelected(item) ? `${LIB_NAME}-item-selected` : ''\n        } ${state.cursor === itemIndex ? `${LIB_NAME}-item-active` : ''} ${\n          item.disabled ? `${LIB_NAME}-item-disabled` : ''\n        }`}\n        onClick={item.disabled ? undefined : () => {console.log(item); methods.addItem(item); methods.setValue(item.name)}}\n        onKeyPress={item.disabled ? undefined : () => methods.addItem(item)}\n        color={props.color}\n        schema={props.schema}>\n\n            <TextComponent>\n              {getByPath(item, props.labelField)} {item.disabled && <ins>{props.disabledLabel}</ins>}\n            </TextComponent>\n\n            {props.showButton && !!props.onDetailsClick &&\n              <ButtonComponent className='fas fa-ellipsis-h'\n                  onClick={(e) => {\n                    if (!e) var e = window.event;\n                    e.cancelBubble = true;\n                    if (e.stopPropagation) e.stopPropagation();\n                    props.onDetailsClick(item.id);\n                  }}>\n              </ButtonComponent>\n            }\n\n      </ItemComponent>\n    );\n  }\n}\n\nItem.propTypes = {\n  props: PropTypes.any,\n  state: PropTypes.any,\n  methods: PropTypes.any,\n  item: PropTypes.any,\n  itemIndex: PropTypes.any,\n  showButton: PropTypes.bool,\n};\n\nexport const DefaultItemComponent = styled.span`\n\n  padding: .5rem 1rem .5rem calc(1rem - 5px);\n  cursor: pointer;\n  white-space: nowrap;\n  display: flex;\n  justify-content: space-between;\n  font-family: ${props => props.theme.font.primary};\n  font-size: ${props => props.theme.fontSize.sz3};\n\n  border-left: 5px solid transparent;\n\n  // &.${LIB_NAME}-item-active {\n  //   ${({ disabled, color }) => !disabled && color && `background: green;`}\n  // }\n\n  :hover,\n  :focus {\n    background: ${props => LightenDarkenColor(props.theme.bg.quinary, 10)};\n    outline: none;\n  }\n\n\n  &.${LIB_NAME}-item-selected {\n    ${props => props.disabled ? `\n      background: rgba(0,0,0,0.01);\n      color: ${props.theme.bg.primary};\n    `\n    : `\n      background: ${!!props.schema ? hexToRGBA(props.theme.schema[props.schema].solid, 0.1) : hexToRGBA(props.theme.bg.senary, 0.1)};\n      color: ${!!props.schema ? props.theme.schema[props.schema].solid : props.theme.bg.senary};\n      border-color: ${!!props.schema ? props.theme.schema[props.schema].solid : props.theme.bg.senary};\n    `}\n  }\n\n  ${({ disabled }) =>\n    disabled\n      ? `\n    background: ${props => props.theme.bg.secondary};\n    color: ${props => props.theme.bg.tertiary};\n\n    ins {\n      text-decoration: none;\n      border:1px solid #ccc;\n      border-radius: 2px;\n      padding: 0px 3px;\n      font-size: x-small;\n      text-transform: uppercase;\n    }\n    `\n      : ''}\n\n`;\n\nconst DefaultContentContainer = styled.div`\n  display: flex;\n  flex: 1;\n  justify-content: space-between;\n  background: red;\n  padding: 0;\n  overflow: hidden;\n  white-space: nowrap;\n`;\n\nconst DefaultButtonComponent = styled.i`\n    display: flex;\n    color: grey;\n    font-size: 1rem;\n    &:hover {\n        cursor: pointer;\n    }\n    line-height: 2rem;\n    text-align: center;\n`\n\nconst DefaultTextComponent = styled.span`\n  overflow: hidden;\n  white-space: nowrap;\n  flex: 1;\n  text-overflow: ellipsis;\n  // white-space: normal;\n  // word-wrap: break-word;\n  // word-break: break-all;\n`;\n\n// Specifies the default values for props:\nItem.defaultProps = {\n    ItemComponent: DefaultItemComponent,\n    ContentContainer: DefaultContentContainer,\n    ButtonComponent: DefaultButtonComponent,\n    TextComponent: DefaultTextComponent,\n};\n\nexport default Item;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { LIB_NAME } from '../constants';\nimport NoData from './NoData';\nimport Item from './Item';\nimport Label from './Label';\n\nimport { valueExistInSelected, hexToRGBA } from '../util';\n\nconst textboxPosition = (props, methods) => {\n  const TextboxBoundingClientRect = methods.getSelectRef().getBoundingClientRect();\n  const textboxHeight =\n    TextboxBoundingClientRect.bottom + parseInt(props.textboxHeight, 10) + parseInt(props.textboxGap, 10);\n\n  if (props.textboxPosition !== 'auto') {\n    return props.textboxPosition;\n  }\n\n  if (textboxHeight > window.innerHeight && textboxHeight > TextboxBoundingClientRect.top) {\n    return 'top';\n  }\n\n  return 'bottom';\n};\n\nconst Textbox = ({ ItemComponent, props, TextBoxComponent, state, methods, TextComponent }) => {\n  // console.log('Textbox props', props)\n  // console.log('Textbox ItemComponent', ItemComponent)\n\n  return(\n    <TextBoxComponent\n      tabIndex=\"-1\"\n      aria-expanded=\"true\"\n      role=\"list\"\n      textboxPosition={textboxPosition(props, methods)}\n      selectBounds={state.selectBounds}\n      portal={props.portal}\n      textboxGap={props.textboxGap}\n      textboxHeight={props.textboxHeight}\n      className={`${LIB_NAME}-textbox ${LIB_NAME}-textbox-position-${textboxPosition(\n        props,\n        methods\n      )}`}>\n      {props.textboxRenderer ? (\n        props.textboxRenderer({ props, state, methods })\n      ) : (\n        <React.Fragment>\n          {props.create && state.search && !valueExistInSelected(state.search, state.values, props) && (\n            <AddNew\n\n              className={`${LIB_NAME}-textbox-add-new`}\n              color={props.color}\n              onClick={() => methods.createNew(state.search)}>\n              {props.createNewLabel.replace('{search}', `\"${state.search}\"`)}\n            </AddNew>\n          )}\n          {state.currentValue.length > 0 && \n            <Label LabelComponent={props.LabelComponent} label={props.label} schema={props.schema}></Label>\n          }\n          {methods.searchResults().length > 0 && (\n            methods\n              .searchResults()\n              .map((item, itemIndex) => (\n                <Item\n                  ItemComponent={ItemComponent}\n                  TextComponent={TextComponent}\n                  key={item[props.valueField]}\n                  item={item}\n                  itemIndex={itemIndex}\n                  state={state}\n                  props={props}\n                  methods={methods}\n                />\n              ))\n          )}\n        </React.Fragment>\n      )}\n    </TextBoxComponent>\n  );\n}\n\nexport const DefaultTextBoxComponent = styled.div`\n  position: absolute;\n  ${({ selectBounds, textboxGap, textboxPosition }) =>\n    textboxPosition === 'top'\n      ? `bottom: ${selectBounds.height + 2 + textboxGap}px`\n      : `top: ${selectBounds.height + 2 + textboxGap}px`};\n\n  ${({ selectBounds, textboxGap, portal }) =>\n    portal\n      ? `\n      position: fixed;\n      top: ${selectBounds.bottom + textboxGap}px;\n      left: ${selectBounds.left - 1}px;`\n      : 'left: -1px;'};\n  width: ${({ selectBounds }) => selectBounds.width}px;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n  background: ${props => props.theme.bg.quinary};\n  border-radius: 2px;\n  box-shadow: 0 0 10px 0 ${() => hexToRGBA('#000000', 0.2)};\n  max-height: ${({ textboxHeight }) => textboxHeight};\n  overflow: auto;\n  z-index: 1;\n\n  border-radius: 0.2rem;\n\n  :focus {\n    outline: none;\n  }\n\n  /* Let's get this party started */\n  ::-webkit-scrollbar {\n      width: 6px;\n  }\n  /* Track */\n  ::-webkit-scrollbar-track {\n      -webkit-background: rgba(0,0,0,0.1); \n      -webkit-border-radius: 10px;\n      border-radius: 10px;\n  }\n  /* Handle */\n  ::-webkit-scrollbar-thumb {\n      -webkit-border-radius: 10px;\n      border-radius: 10px;\n      -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.5); \n      background: rgba(255,255,255,0.4); \n  }\n  ::-webkit-scrollbar-thumb:window-inactive {\n    background: rgba(255,255,255,0.2); \n  }\n\n}\n`;\n\nconst AddNew = styled.div`\n  color: ${({ color }) => color};\n  padding: 5px 10px;\n  background: white;\n  color: blue;\n\n  :hover {\n    background: ${({ color }) => color && hexToRGBA(color, 0.1)};\n    outline: none;\n    cursor: pointer;\n  }\n`;\n\nTextbox.defaultProps = {\n  TextBoxComponent: DefaultTextBoxComponent\n};\n\nexport default Textbox;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { LIB_NAME } from '../constants';\n\nconst Loading = ({ props }) =>\n  props.loadingRenderer ? (\n    props.loadingRenderer({ props })\n  ) : (\n    <LoadingComponent className={`${LIB_NAME}-loading`} color={props.color} />\n  );\n\nconst LoadingComponent = styled.div`\n  @keyframes dual-ring-spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(180deg);\n    }\n  }\n\n  padding: 0 5px;\n  display: block;\n  width: auto;\n  height: auto;\n\n  :after {\n    content: ' ';\n    display: block;\n    width: 16px;\n    height: 16px;\n    border-radius: 50%;\n    border-width: 1px;\n    border-style: solid;\n    border-color: ${({ color }) => color} transparent;\n    animation: dual-ring-spin 0.7s ease-in-out infinite;\n    margin: 0 0 0 -10px;\n  }\n`;\n\nexport default Loading;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { LIB_NAME } from '../constants';\n\nconst Clear = ({ props, state, methods }) =>\n  props.clearRenderer ? (\n    props.clearRenderer({ props, state, methods })\n  ) : (\n    <ClearComponent\n      className={`${LIB_NAME}-clear`}\n      tabIndex=\"-1\"\n      onClick={() => methods.clearAll()}\n      onKeyPress={() => methods.clearAll()}>\n      &times;\n    </ClearComponent>\n  );\n\nconst ClearComponent = styled.div`\n  line-height: 25px;\n  margin: 0 10px;\n  cursor: pointer;\n\n  :focus {\n    outline: none;\n  }\n\n  :hover {\n    color: tomato;\n  }\n`;\n\nexport default Clear;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { LIB_NAME } from '../constants';\n\nconst Separator = ({ props, state, methods }) =>\n  props.separatorRenderer ? (\n    props.separatorRenderer({ props, state, methods })\n  ) : (\n    <SeparatorComponent className={`${LIB_NAME}-separator`} />\n  );\n\nconst SeparatorComponent = styled.div`\n  border-left: 1px solid #ccc;\n  width: 1px;\n  height: 25px;\n  display: block;\n`;\n\nexport default Separator;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport { LIB_NAME } from '../constants';\n\nconst TextboxHandle = ({ props, state, methods }) =>\n  props.textboxHandleRenderer ? (\n    props.textboxHandleRenderer({ props, state, methods })\n  ) : (\n    <TextboxHandleComponent\n      tabIndex=\"-1\"\n      onClick={(event) => methods.textBox(state.textbox ? 'close': 'open', event)}\n      textboxOpen={state.textbox}\n      onKeyPress={(event) => methods.textBox('toggle', event)}\n      onKeyDown={(event) => methods.textBox('toggle', event)}\n      className={`${LIB_NAME}-textbox-handle`}\n      color={props.color}>\n      <svg fill=\"currentColor\" viewBox=\"0 0 40 40\"><path d=\"M31 26.4q0 .3-.2.5l-1.1 1.2q-.3.2-.6.2t-.5-.2l-8.7-8.8-8.8 8.8q-.2.2-.5.2t-.5-.2l-1.2-1.2q-.2-.2-.2-.5t.2-.5l10.4-10.4q.3-.2.6-.2t.5.2l10.4 10.4q.2.2.2.5z\"/></svg>\n    </TextboxHandleComponent>\n  );\n\nconst TextboxHandleComponent = styled.div`\n  text-align: center;\n\n  ${({ textboxOpen }) =>\n    textboxOpen\n      ? `\n      pointer-events: all;\n      transform: rotate(0deg);\n      margin: 0px 0 -3px 5px;\n      `\n      : `\n      pointer-events: none;\n      margin: 0 0 0 5px;\n      transform: rotate(180deg);\n      `};\n  cursor: pointer;\n\n  text-align: center;\n  vertical-align: middle;\n  line-height: 2rem;\n  height: 2rem;\n  position: absolute;\n  right: .25rem;\n\n  svg {\n    width: 16px;\n    height: 16px;\n  }\n\n  :hover {\n    path {\n      stroke: ${({ color }) => color};\n    }\n  }\n\n  :focus {\n    outline: none;\n\n    path {\n      stroke: ${({ color }) => color};\n    }\n  }\n\n`;\n\nexport default TextboxHandle;\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components'\nimport ClickOutside from './components/ClickOutside';\n\nimport { globStyle } from '../../../global_style'\nimport { LightenDarkenColor } from '../../../methods/utils/color_utils'\n\n\nimport Label from './components/Label';\nimport Content from './components/Content';\nimport Textbox from './components/Dropdown';\nimport Loading from './components/Loading';\nimport Clear from './components/Clear';\nimport Separator from './components/Separator';\nimport TextboxHandle from './components/DropdownHandle';\n\nimport { debounce, hexToRGBA, isEqual, getByPath, getProp, valueExistInSelected } from './util';\nimport { LIB_NAME } from './constants';\n\nimport theme from '../../../theme.js'\n\nexport class TextBoxSearch extends Component {\n  static propTypes = {\n    onChange: PropTypes.func.isRequired,\n    onBlur: PropTypes.func,\n    onTextboxClose: PropTypes.func,\n    onTextboxOpen: PropTypes.func,\n    onClearAll: PropTypes.func,\n    onSelectAll: PropTypes.func,\n    values: PropTypes.array,\n    options: PropTypes.array.isRequired,\n    keepOpen: PropTypes.bool,\n    showSelectedBox: PropTypes.bool,\n    textboxGap: PropTypes.number,\n    multi: PropTypes.bool,\n    placeholder: PropTypes.string,\n    addPlaceholder: PropTypes.string,\n    disabled: PropTypes.bool,\n    className: PropTypes.string,\n    loading: PropTypes.bool,\n    clearable: PropTypes.bool,\n    searchable: PropTypes.bool,\n    separator: PropTypes.bool,\n    textboxHandle: PropTypes.bool,\n    searchBy: PropTypes.string,\n    sortBy: PropTypes.string,\n    closeOnScroll: PropTypes.bool,\n    openOnTop: PropTypes.bool,\n    style: PropTypes.object,\n    contentRenderer: PropTypes.func,\n    textboxRenderer: PropTypes.func,\n    itemRenderer: PropTypes.func,\n    noDataRenderer: PropTypes.func,\n    optionRenderer: PropTypes.func,\n    inputRenderer: PropTypes.func,\n    loadingRenderer: PropTypes.func,\n    clearRenderer: PropTypes.func,\n    separatorRenderer: PropTypes.func,\n    textboxHandleRenderer: PropTypes.func,\n    direction: PropTypes.string,\n    required: PropTypes.bool,\n    pattern: PropTypes.string,\n    // The pattern attribute specifies a regular expression that the <input> element's value is checked against on form submission\n    // set to null to bypass\n    name: PropTypes.string,\n    className: PropTypes.string,\n    schema: PropTypes.string,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      textbox: false,\n      values: props.values,\n      search: '',\n      selectBounds: {},\n      cursor: null,\n\n      currentValue: ''\n    };\n\n    this.methods = {\n      removeItem: this.removeItem,\n      dropDown: this.dropDown,\n      addItem: this.addItem,\n      setSearch: this.setSearch,\n      getInputSize: this.getInputSize,\n      toggleSelectAll: this.toggleSelectAll,\n      clearAll: this.clearAll,\n      selectAll: this.selectAll,\n      searchResults: this.searchResults,\n      getSelectRef: this.getSelectRef,\n      isSelected: this.isSelected,\n      getSelectBounds: this.getSelectBounds,\n      areAllSelected: this.areAllSelected,\n      handleKeyDown: this.handleKeyDown,\n      activeCursorItem: this.activeCursorItem,\n      createNew: this.createNew,\n      sortBy: this.sortBy,\n      safeString: this.safeString,\n\n      setValue: this.setValue,\n      setValues: this.setValues,\n    };\n\n    this.select = React.createRef();\n    this.textboxRoot = typeof document !== 'undefined' && document.createElement('div');\n  }\n\n  componentDidMount() {\n\n    this.props.portal && this.props.portal.appendChild(this.textboxRoot);\n    window.addEventListener('resize', debounce(this.updateSelectBounds), {passive:true});\n    window.addEventListener('scroll', debounce(this.onScroll), {passive:true});\n\n    this.dropDown('close');\n\n    if (this.select) {\n      this.updateSelectBounds();\n    }\n\n    if (!!this.props.defaultValue) {\n      this.addItem(this.props.defaultValue)\n      this.setValue(this.props.defaultValue.name)\n      this.setState({currentValue : this.props.defaultValue.name})\n      this.setSearch({target: {value: this.props.defaultValue.name}})\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      !isEqual(prevProps.values, this.props.values) &&\n      isEqual(prevProps.values, prevState.values)\n    ) {\n      this.setState({ values: this.props.values }, () => {\n        this.props.onChange(this.props.values);\n      });\n    }\n\n    if (prevState.values !== this.state.values) {\n      if (this.state.values.length) { this.props.onChange(this.state.values) };\n      this.updateSelectBounds();\n    }\n\n    if (prevState.search !== this.state.search) {\n      this.updateSelectBounds();\n    }\n\n    if (prevState.values !== this.state.values && this.props.closeOnSelect) {\n      this.dropDown('close');\n    }\n\n    if (prevProps.multi !== this.props.multi) {\n      this.updateSelectBounds();\n    }\n\n    if (prevState.textbox && prevState.textbox !== this.state.textbox) {\n      this.onTextboxClose();\n    }\n\n    if (!prevState.textbox && prevState.textbox !== this.state.textbox) {\n      this.props.onTextboxOpen();\n    }\n\n    if (prevState.values !== this.state.values && !this.props.fillable && this.state.values.length) {\n      this.clearAll();\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.portal && this.props.portal.removeChild(this.textboxRoot);\n    window.removeEventListener(\n      'resize',\n      debounce(this.updateSelectBounds, this.props.debounceDelay)\n    );\n    window.removeEventListener('scroll', debounce(this.onScroll, this.props.debounceDelay));\n  }\n\n  onTextboxClose = () => {\n    this.setState({ cursor: null });\n    this.props.onTextboxClose();\n  };\n\n  onScroll = () => {\n    if (this.props.closeOnScroll) {\n      this.dropDown('close');\n    }\n\n    this.updateSelectBounds();\n  };\n\n  updateSelectBounds = () =>\n    this.select.current &&\n    this.setState({\n      selectBounds: this.select.current.getBoundingClientRect()\n    });\n\n  getSelectBounds = () => this.state.selectBounds;\n\n  dropDown = (action = 'toggle', event) => {\n    const target = (event && event.target) || (event && event.srcElement);\n\n    if (\n      this.props.portal &&\n      !this.props.closeOnScroll &&\n      !this.props.closeOnSelect &&\n      event &&\n      target &&\n      target.offsetParent &&\n      target.offsetParent.classList.contains('react-textbox-select-dropdown')\n    ) {\n      return;\n    }\n\n    if (this.props.keepOpen) {\n      return this.setState({ textbox: true });\n    }\n\n    if (action === 'close' && this.state.textbox) {\n      this.select.current.blur();\n\n      return this.setState({\n        textbox: false,\n        search: this.props.clearOnBlur ? '' : this.state.search\n      });\n    }\n\n    if (action === 'open' && !this.state.textbox) {\n      return this.setState({ textbox: true });\n    }\n\n    if (action === 'toggle') {\n      this.select.current.focus();\n      return this.setState({ textbox: !this.state.textbox });\n    }\n\n    return false;\n  };\n\n  getSelectRef = () => this.select.current;\n\n  setValue = (value) => {\n    this.setState({currentValue : value})\n  }\n\n  setValues = (values) => {\n    this.setState({values: [values]})\n  }\n\n  addItem = (item) => {\n    if (this.props.multi) {\n      if (\n        valueExistInSelected(getByPath(item, this.props.valueField), this.state.values, this.props)\n      ) {\n        return this.removeItem(null, item, false);\n      }\n\n      this.setState({\n        values: [...this.state.values, item]\n      });\n    } else {\n      this.setState({\n        values: [item],\n        textbox: false\n      });\n    }\n\n    this.props.clearOnSelect && this.setState({ search: '' });\n\n    return true;\n  };\n\n  removeItem = (event, item, close = false) => {\n    if (event && close) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.dropDown('close');\n    }\n\n    this.setState({\n      values: this.state.values.filter(\n        (values) =>\n          getByPath(values, this.props.valueField) !== getByPath(item, this.props.valueField)\n      )\n    });\n  };\n\n  setSearch = (event) => {\n    this.setState({\n      cursor: null\n    });\n\n    this.setState({\n      search: event.target.value\n    });\n  };\n\n  getInputSize = () => {\n    if (this.state.values && this.state.values.length) {\n      return 0;\n    } else {\n      return this.props.placeholder.length;\n    }\n  };\n\n  toggleSelectAll = () => {\n    return this.setState({\n      values: this.state.values.length === 0 ? this.selectAll() : this.clearAll()\n    });\n  };\n\n  clearAll = () => {\n    this.props.onClearAll();\n    this.setState({\n      values: []\n    });\n  };\n\n  selectAll = (valuesList = []) => {\n    this.props.onSelectAll();\n    const values = valuesList.length > 0\n      ? valuesList\n      : this.props.options.filter((option) => !option.disabled);\n\n    this.setState({ values });\n  };\n\n  isSelected = (option) =>\n    this.state.currentValue == option[this.props.labelField]\n\n  areAllSelected = () =>\n    this.state.values.length === this.props.options.filter((option) => !option.disabled).length;\n\n  safeString = (string) => string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n\n  sortBy = () => {\n    const { sortBy, options } = this.props;\n\n    if (!sortBy) {\n      return options;\n    }\n\n    options.sort((a, b) => {\n      if (getProp(a, sortBy) < getProp(b, sortBy)) {\n        return -1;\n      } else if (getProp(a, sortBy) > getProp(b, sortBy)) {\n        return 1;\n      } else {\n        return 0;\n      }\n    });\n\n    return options;\n  };\n\n  searchFn = ({ state, methods }) => {\n    const regexp = new RegExp(methods.safeString(state.search), 'i');\n\n    return methods\n      .sortBy()\n      .filter((item) =>\n        regexp.test(getByPath(item, this.props.searchBy) || getByPath(item, this.props.valueField))\n      );\n  };\n\n  searchResults = () => {\n    const args = { state: this.state, props: this.props, methods: this.methods };\n\n    return this.props.searchFn(args) || this.searchFn(args);\n  };\n\n  activeCursorItem = (activeCursorItem) =>\n    this.setState({\n      activeCursorItem\n    });\n\n  handleKeyDown = (event) => {\n    const args = {\n      event,\n      state: this.state,\n      props: this.props,\n      methods: this.methods,\n      setState: this.setState.bind(this)\n    };\n\n    return this.props.handleKeyDownFn(args) || this.handleKeyDownFn(args);\n  };\n\n  handleKeyDownFn = ({ event, state, props, methods, setState }) => {\n    const { cursor } = state;\n    const escape = event.key === 'Escape';\n    const enter = event.key === 'Enter';\n    const arrowUp = event.key === 'ArrowUp';\n    const arrowDown = event.key === 'ArrowDown';\n    const tab = event.key === 'Tab' && !event.shiftKey;\n    const shiftTab = event.shiftKey && event.key === 'Tab';\n\n    if ((arrowDown || tab) && cursor === null) {\n      return setState({\n        cursor: 0\n      });\n    }\n\n    if (arrowUp || arrowDown || shiftTab || tab) {\n      event.preventDefault();\n    }\n\n    if (escape) {\n      this.dropDown('close');\n    }\n\n    if (enter) {\n      const currentItem = methods.searchResults()[cursor];\n      if (currentItem && !currentItem.disabled) {\n        if (props.create && valueExistInSelected(state.search, state.values, props)) {\n          return null;\n        }\n\n        methods.addItem(currentItem);\n      }\n      this.dropDown('close');\n    }\n\n    if ((arrowDown || tab) && methods.searchResults().length === cursor) {\n      return setState({\n        cursor: 0\n      });\n    }\n\n    if (arrowDown || tab) {\n      setState((prevState) => ({\n        cursor: prevState.cursor + 1\n      }));\n    }\n\n    if ((arrowUp || shiftTab) && cursor > 0) {\n      setState((prevState) => ({\n        cursor: prevState.cursor - 1\n      }));\n    }\n\n    if ((arrowUp || shiftTab) && cursor === 0) {\n      setState({\n        cursor: methods.searchResults().length\n      });\n    }\n  };\n\n  renderTextbox = (ItemComponent) =>\n    this.props.portal ? (\n      ReactDOM.createPortal(\n        <Textbox ItemComponent={ItemComponent} TextBoxComponent={this.props.TextBoxComponent} props={this.props} state={this.state} methods={this.methods} />,\n        this.textboxRoot\n      )\n    ) : (\n        <Textbox ItemComponent={ItemComponent} TextComponent={this.props.TextComponent} TextBoxComponent={this.props.TextBoxComponent} props={this.props} state={this.state} methods={this.methods} />\n      );\n\n  createNew = (item) => {\n    const newValue = {\n      [this.props.labelField]: item,\n      [this.props.valueField]: item\n    };\n\n    this.addItem(newValue);\n    this.props.onCreateNew(newValue);\n    this.setState({ search: '' });\n  };\n\n  render() {\n\n    const { ItemComponent, ReactTextboxSelect, Container } = this.props;\n\n    return (\n      <Container className={this.props.className}>\n        <ClickOutside ClickOutsideComponent={this.props.ClickOutsideComponent} onClickOutside={(event) => this.dropDown('close', event)}>\n          <ReactTextboxSelect\n            onKeyDown={this.handleKeyDown}\n            onClick={(event) => this.dropDown('open', event)}\n            // onFocus={(event) => this.dropDown('open', event)}\n            tabIndex={this.props.disabled ? '-1' : '0'}\n            direction={this.props.direction}\n            style={this.props.style}\n            ref={this.select}\n            disabled={this.props.disabled}\n            className={`${LIB_NAME} ${this.props.className}`}\n            color={this.props.color}\n            {...this.props.additionalProps}\n            schema={this.props.schema}>\n\n            <Content InputComponent={this.props.InputComponent} ContentComponent={this.props.ContentComponent} props={this.props} state={this.state} methods={this.methods} />\n\n            {this.props.loading && <Loading props={this.props} />}\n\n            {this.state.textbox && !this.props.disabled && this.renderTextbox(ItemComponent)}\n          </ReactTextboxSelect>\n        </ClickOutside>\n      </Container>\n    );\n  }\n}\n\nexport const DefaultReactTextboxSelect = styled.div`\n\n    background-color: ${props => props.theme.bg.quinary};\n    color: ${props => props.theme.bg.octonary};\n\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz3};\n\n    position: relative;\n    display: flex;\n\n    vertical-align: middle;\n    line-height: 1.6rem;\n    height: 1.6rem;\n    width: 100%;\n    padding: 2px 5px;\n    direction: ${({ direction }) => direction};\n    cursor: pointer;\n    min-height: 36px;\n    ${({ disabled }) =>\n    disabled ? 'cursor: not-allowed;pointer-events: none;opacity: 0.3;' : 'pointer-events: all;'}\n\n    border-bottom: 2px solid transparent;\n    border-radius: 0.2rem;\n\n    :focus,\n    :focus-within {\n        color: ${props => props.theme.bg.octonary};\n        background-color: ${props => LightenDarkenColor(props.theme.bg.quinary, 10)};\n        box-shadow: none;\n        border-bottom: 2px solid ${props => !!props.schema ? props.theme.schema[props.schema].solid : props.theme.bg.octonary};\n    }\n`;\n\nconst DefaultContainer = styled.div`\n\n`;\n\nTextBoxSearch.defaultProps = {\n  addPlaceholder: '',\n  placeholder: 'Select...',\n  values: [],\n  options: [],\n  multi: false,\n  showSelectedBox: false,\n  disabled: false,\n  searchBy: 'label',\n  sortBy: null,\n  clearable: false,\n  searchable: true,\n  textboxHandle: true,\n  separator: false,\n  keepOpen: undefined,\n  noDataLabel: 'No data',\n  createNewLabel: 'add {search}',\n  disabledLabel: 'disabled',\n  textboxGap: 5,\n  closeOnScroll: false,\n  debounceDelay: 0,\n  labelField: 'label',\n  valueField: 'value',\n  color: '#0074D9',\n  keepSelectedInList: true,\n  closeOnSelect: false,\n  clearOnBlur: true,\n  clearOnSelect: true,\n  textboxPosition: 'bottom',\n  textboxHeight: '300px',\n  autoFocus: false,\n  portal: null,\n  create: false,\n  direction: 'ltr',\n  name: null,\n  required: false,\n  pattern: '',\n  onChange: () => undefined,\n  onTextboxOpen: () => undefined,\n  onTextboxClose: () => undefined,\n  onClearAll: () => undefined,\n  onSelectAll: () => undefined,\n  onCreateNew: () => undefined,\n  searchFn: () => undefined,\n  handleKeyDownFn: () => undefined,\n  additionalProps: null,\n  showButton: true,\n  ReactTextboxSelect: DefaultReactTextboxSelect,\n  Container: DefaultContainer,\n  fillable: true,\n  schema: null,\n};\n\n\n\nexport default TextBoxSearch;\n","import styled from 'styled-components'\n\nexport const DefaultContainer = styled.div`\n\tposition: relative;\n`;\n\nexport const IconContainerComponent = styled.div`\n    width: auto;\n    height: auto;\n    position: absolute;\n    top: 50%;\n    right: 2rem;\n    transform: translateY(-50%);\n    margin: 0;\n    padding: 0;\n    z-index: 500;\n`;\n","import React, {Component, useEffect, useState} from 'react';\n\n// external functions\nimport PropTypes from 'prop-types';\nimport { useField, useFormikContext } from \"formik\";\n\n// internal functions\nimport { getMessageFromError } from \"../../../../methods/utils/form_utils\";\n\n// internal components\nimport ErrorTooltip from \"../error_tooltip/error_tooltip\";\nimport TextBoxSearch from \"../../textbox_search/textbox_search\";\n\n// styles\nimport * as styled from './textbox_search_field.style'\n\nconst TextboxSearchField = ({\n\t\t\t\t\t\t\t\tonTextboxClose,\n\t\t\t\t\t\t\t\tonChange,\n\t\t\t\t\t\t\t\tContainer,\n\t\t\t\t\t\t\t\tstyle,\n\t\t\t\t\t\t\t\tcontainerStyle,\n\t\t\t\t\t\t\t\tlabelField,\n\t\t\t\t\t\t\t\tvalueField,\n\t\t\t\t\t\t\t\tmulti,\n\t\t\t\t\t\t\t\tmapInput,\n\t\t\t\t\t\t\t\tmapOutput,\n\t\t\t\t\t\t\t\t...props\n\t\t\t\t\t\t\t}) => {\n\n\tconst { setFieldValue, setFieldTouched } = useFormikContext();\n\tconst [field, meta] = useField(props);\n\n\tconst {\n\t\tvalue: fieldValue,\n\t\tname: fieldName\n\t} = field\n\n\tconst {\n\t\ttouched,\n\t\terror\n\t} = meta\n\n\tconst hasError = touched && error;\n\n\n\tlet ReactDropdownSelectStyle = {\n\t\tborderLeft: hasError ? '1px solid red' : \"1px solid transparent\",\n\t\tborderTop: hasError ? '1px solid red' : \"1px solid transparent\",\n\t\tborderRight: hasError ? '1px solid red' : \"1px solid transparent\",\n\t\tborderBottom: hasError && '1px solid red',\n\t\tboxShadow: hasError && `0 0 5px red`,\n\t\ttransition: \"all .5s ease-in-out\",\n\t}\n\n\tconst errorMessage = getMessageFromError(meta.error);\n\n\treturn (\n\t\t<Container\n\t\t\tstyle={containerStyle}\n\t\t>\n\t\t\t<TextBoxSearch\n\t\t\t\t// value={\"adaw\"}\n\t\t\t\t// values={mapInput(fieldValue)}\n\t\t\t\tonTextboxClose={() => {\n\t\t\t\t\t// set this field to touched if not already\n\t\t\t\t\tconst isTouched = meta.touched;\n\t\t\t\t\tif(!isTouched) {\n\t\t\t\t\t\tsetFieldTouched(fieldName,true)\n\t\t\t\t\t}\n\t\t\t\t\t// call any additional function that was passed as prop\n\t\t\t\t\tonTextboxClose && onTextboxClose();\n\t\t\t\t}}\n\t\t\t\tonBlur={() => {\n\t\t\t\t\tsetFieldTouched(true)\n\t\t\t\t}}\n\t\t\t\tlabelField={labelField}\n\t\t\t\tvalueField={valueField}\n\t\t\t\tmulti={multi}\n\t\t\t\tstyle={{...ReactDropdownSelectStyle, ...style}}\n\t\t\t\t{...field}\n\t\t\t\t{...props}\n\t\t\t\tonChange={values => {\n\t\t\t\t\tif(!touched) {\n\t\t\t\t\t\tsetFieldTouched(fieldName, \"true\")\n\t\t\t\t\t}\n\n\t\t\t\t\tif(values.length === 1) {\n\t\t\t\t\t\tif(values[0].name === \"\") {\n\t\t\t\t\t\t\tsetFieldValue(fieldName, null)\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tsetFieldValue(fieldName, values[0])\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telse {\n\t\t\t\t\t\tif(multi) {\n\t\t\t\t\t\t\tsetFieldValue(fieldName, values)\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tsetFieldValue(fieldName, values[0])\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tonChange && onChange(values)\n\t\t\t\t}}\n\t\t\t/>\n\n\t\t\t<ErrorTooltip\n\t\t\t\tvisible={hasError}\n\t\t\t\ttext={errorMessage}\n\t\t\t\tContainerComponent={styled.IconContainerComponent}\n\t\t\t/>\n\t\t</Container>\n\t);\n};\n\n// Specifies propTypes\nTextboxSearchField.propTypes = {\n\tContainer: PropTypes.elementType,\n\tonTextboxClose: PropTypes.func,\n\tonChange: PropTypes.func,\n\tmapInput: PropTypes.func,\n\tmapOutput: PropTypes.func,\n\tstyle: PropTypes.object,\n\tcontainerStyle: PropTypes.object,\n\tlabelField: PropTypes.string,\n\tvalueField: PropTypes.string,\n\tmulti: PropTypes.bool\n};\n\n// Specifies the default values for props:\nTextboxSearchField.defaultProps = {\n\tContainer: styled.DefaultContainer,\n\tonTextboxClose: () => {},\n\tonChange: () => {},\n\tstyle: {},\n\tcontainerStyle: {},\n\tlabelField: \"\",\n\tvalueField: \"\",\n\tmulti: false,\n\tmapInput: val => val,\n\tmapOutput: val => val,\n};\n\nexport default TextboxSearchField;\n","import { useRef, useEffect } from 'react'\n\n/**\n * This will take a value and store its current state\n * This can be used to see if the stored state has changed\n * For example: Does the new state differ from the previous state\n * @param {var} val \n */\nconst usePrevious = (val) => {\n    const ref = useRef()\n    useEffect(() => {\n        ref.current = val;\n    })\n    return ref.current\n}\n\nexport default usePrevious","import React, { useState, useEffect } from 'react'\nimport * as styled from '../tasks_content.style'\nimport { useSelector, useDispatch } from 'react-redux'\n\n\n/*\n*\n* Should track quantity / fraction option only display if there is an obj? in master it always displays\n*\n* When creating new process\n*   when adding route, should click add create the route in mongo, or should this wait until the process is made as well\n*       If we don't wait till the process is saved, if you leave the page / refresh / cancel, the route will already be made without the process. I think wait - Justin\n*\n* */\n\n\n// Import Basic Components\nimport ContentHeader from '../../content_header/content_header'\nimport Textbox from '../../../../basic/textbox/textbox.js'\nimport Button from '../../../../basic/button/button'\nimport DropDownSearch from '../../../../basic/drop_down_search_v2/drop_down_search'\n\n// Import Components\nimport ConfirmDeleteModal from '../../../../basic/modals/confirm_delete_modal/confirm_delete_modal'\nimport LoadUnloadFields from './fields/load_unload_fields'\n\n// Import utils\nimport uuid from 'uuid'\nimport { deepCopy } from '../../../../../methods/utils/utils'\nimport { getPreviousRoute, willRouteAdditionFixProcess } from '../../../../../methods/utils/processes_utils'\n\n// Import actions\nimport { putDashboard, postDashboard } from '../../../../../redux/actions/dashboards_actions'\nimport * as objectActions from '../../../../../redux/actions/objects_actions'\nimport { setFixingProcess } from '../../../../../redux/actions/processes_actions'\nimport { putStation } from '../../../../../redux/actions/stations_actions'\nimport { setSelectedStation } from '../../../../../redux/actions/stations_actions'\nimport { setSelectedPosition } from '../../../../../redux/actions/positions_actions'\nimport {\n    buildDefaultRouteName,\n    getLoadStationId,\n    getRouteProcesses,\n    getUnloadStationId, isMiRTask,\n    isNextRouteViable, isOnlyHumanTask\n} from \"../../../../../methods/utils/route_utils\";\nimport TextField from \"../../../../basic/form/text_field/text_field\";\nimport TextboxSearchField from \"../../../../basic/form/textbox_search_field/textbox_search_field\";\nimport PropTypes from \"prop-types\";\nimport { isObject } from \"../../../../../methods/utils/object_utils\";\nimport useChange from \"../../../../basic/form/useChange\";\nimport { removeTask } from \"../../../../../redux/actions/tasks_actions\";\nimport { isArray } from \"../../../../../methods/utils/array_utils\";\nimport usePrevious from \"../../../../../hooks/usePrevious\";\nimport * as taskActions from \"../../../../../redux/actions/tasks_actions\";\n\nconst TaskField = (props) => {\n\n    const {\n        isTransportTask,\n        isProcessTask,\n        fieldParent,\n        setFieldValue,\n        setValues,\n        setFieldTouched,\n        getFieldMeta,\n        onSave,\n        onBackClick,\n        onRemove,\n        validateForm,\n        onDelete,\n        isNew\n    } = props\n\n    const fieldMeta = getFieldMeta(fieldParent)\n\n    const {\n        value: values = {},\n        error: errors = {},\n        touched,\n    } = fieldMeta || {}\n\n    // sets values.changed to true when a change occurs\n    useChange(fieldParent)\n\n    const {\n        name,\n        obj,\n        track_quantity,\n        _id: routeId,\n        changed,\n        temp\n    } = values || {}\n\n    const {\n        insertIndex\n    } = temp || {}\n\n    const routeProcesses = getRouteProcesses(routeId) || []\n    const isProcessRoute = routeProcesses.length > 0 || fieldParent\n\n    const errorCount = Object.keys(errors).length // get number of field errors\n    // const touchedCount = Object.values(touched).length // number of touched fields\n    const submitDisabled = ((errorCount > 0) || (!changed)) //&& (submitCount > 0) // disable if there are errors or no touched field, and form has been submitted at least once\n\n    const dispatch = useDispatch()\n    const dispatchPutStation = (station, ID) => dispatch(putStation(station, ID))\n    const dispatchPutDashboard = (dashboard, ID) => dispatch(putDashboard(dashboard, ID))\n    const dispatchPostDashboard = (dashboard) => dispatch(postDashboard(dashboard))\n    const dispatchSetFixingProcess = (bool) => dispatch(setFixingProcess(bool))\n    const dispatchSetSelectedStation = (station) => dispatch(setSelectedStation(station))\n    const dispatchSetSelectedPosition = (position) => dispatch(setSelectedPosition(position))\n    const dispatchSetEditing = async (props) => await dispatch(taskActions.editingTask(props))\n\n    let routes = useSelector(state => state.tasksReducer.tasks)\n    let selectedTask = useSelector(state => state.tasksReducer.selectedTask)\n    const selectedProcess = useSelector(state => state.processesReducer.selectedProcess)\n    const dashboards = useSelector(state => state.dashboardsReducer.dashboards)\n    const objects = useSelector(state => state.objectsReducer.objects)\n    const currentMap = useSelector(state => state.mapReducer.currentMap)\n    const fixingProcess = useSelector(state => state.processesReducer.fixingProcess)\n\n    const stations = useSelector(state => state.stationsReducer.stations)\n\n    const [confirmDeleteModal, setConfirmDeleteModal] = useState(false);\n    const [needsValidate, setNeedsValidate] = useState(false);\n    const [didSetHandoff, setDidSetHandoff] = useState(false);\n\n\n    const previousLoadStationId = usePrevious(getLoadStationId(values))\n    const previousUnloadStationId = usePrevious(getUnloadStationId(values))\n\n    useEffect(() => {\n        const loadStationId = getLoadStationId(selectedTask)\n        const unloadStationId = getUnloadStationId(selectedTask)\n\n        // update load & unload from selectedTask - currently have to do it this way since selectedTask is used in so many places\n        if (selectedTask && selectedTask.load) {\n            setFieldValue(fieldParent ? `${fieldParent}.load.station` : \"load.station\", selectedTask.load.station, false)\n            setFieldValue(fieldParent ? `${fieldParent}.load.position` : \"load.position\", selectedTask.load.position, false)\n        }\n        if (selectedTask && selectedTask.unload) {\n            setFieldValue(fieldParent ? `${fieldParent}.unload.station` : \"unload.station\", selectedTask.unload.station, false)\n            setFieldValue(fieldParent ? `${fieldParent}.unload.position` : \"unload.position\", selectedTask.unload.position, false)\n        }\n\n        if (selectedTask && selectedTask.type) {\n            setFieldValue(fieldParent ? `${fieldParent}.type` : \"type\", selectedTask.type, false)\n        }\n\n        if (selectedTask && selectedTask.device_types) {\n            setFieldValue(fieldParent ? `${fieldParent}.device_types` : \"device_types\", selectedTask.device_types, false)\n        }\n\n        if(isMiRTask(selectedTask)) {\n            if(values.handoff) setFieldValue(fieldParent ? `${fieldParent}.handoff` : \"handoff\", false)\n        }\n\n        else if(isOnlyHumanTask(selectedTask)) {\n            if(!values.handoff && !didSetHandoff && isNew) {\n                setDidSetHandoff(true)\n                setFieldValue(fieldParent ? `${fieldParent}.handoff` : \"handoff\", true)\n            }\n        }\n\n        const loadStation = stations[loadStationId] || {name: \"\"}\n        const {\n            name: loadName\n        } = loadStation\n        const prevLoadStation = stations[previousLoadStationId] || {name: \"\"}\n        const {\n            name: prevLoadName\n        } = prevLoadStation\n\n        const unloadStation = stations[unloadStationId] || {name: \"\"}\n        const {\n            name: unloadName\n        } = unloadStation\n        const prevUnloadStation = stations[previousUnloadStationId] || {name: \"\"}\n        const {\n            name: prevUnloadName\n        } = prevUnloadStation\n\n        const prevName = buildDefaultRouteName(prevLoadName, prevUnloadName)\n        const newName = buildDefaultRouteName(loadName, unloadName)\n\n        if((name === prevName) || !name) {\n            setFieldValue(fieldParent ? `${fieldParent}.name` : \"name\", newName, false)\n        }\n\n        setNeedsValidate(true)\n\n        // set touched if changes\n        return () => {\n\n\n            if (selectedTask && selectedTask.load) {\n                setFieldTouched(fieldParent ? `${fieldParent}.load` : \"load\", true)\n            }\n            if (selectedTask && selectedTask.unload) {\n                setFieldTouched(fieldParent ? `${fieldParent}.unload` : \"unload\", true)\n            }\n        }\n    }, [selectedTask])\n\n    useEffect(() => {\n\n        dispatchSetEditing(true) // set editing to true\n\n        return () => {\n            // When unmounting edit task, always set fixing process to false\n            // This will take care of when it's set to true in edit process\n            dispatchSetFixingProcess(false)\n            dispatchSetSelectedPosition(null)\n            dispatchSetSelectedStation(null)\n            dispatchSetEditing(false)\n\n        }\n    }, [])\n\n    // calls save function when values.needsSubmit is true - used for auto submit when selecting route from existing\n    useEffect(() => {\n        if (values.needsSubmit) onSave()\n    }, [values.needsSubmit])\n\n    // calls save function when values.needsSubmit is true - used for auto submit when selecting route from existing\n    useEffect(() => {\n        if (needsValidate) {\n            validateForm()\n            setNeedsValidate(false)\n        }\n    }, [needsValidate])\n\n\n\n\n    const renderLoadUnloadParameters = () => {\n        if (selectedTask.load.position === null) {\n            // No load position has been defined - ask user to define load (start) position\n            return <styled.DirectionText>Click a position on the map to be the load (or start) position.</styled.DirectionText>\n        } else if (selectedTask.load.station === null) {\n            // Load position is not tied to a station - task is no longer a transport task\n            return (\n                <>\n                    {selectedTask.unload.position === null &&\n                        <styled.DirectionText>Click on a position on the map to be the end position.</styled.DirectionText>\n                    }\n                    <styled.HelpText>Since the start position is not tied to a station, this task is no longer a transport task</styled.HelpText>\n                </>\n            )\n        } else {\n            // Load position has been defined and is a station - now handle unload position\n            if (selectedTask.unload.position === null) {\n                // No unload position has been defined - ask user to define load (end) position\n                return <styled.DirectionText>Click on a position on the map to be the unload (or end) position.</styled.DirectionText>\n            } else if (selectedTask.unload.station === null) {\n                // Unload position is not a station - task is no longer a transport task\n                return <styled.HelpText>Since the end position is not tied to a station, this task is no longer a transport task</styled.HelpText>\n            } else {\n                // Load AND Unload positions have been defined. Display load/unload parameter fields\n                return <LoadUnloadFields\n                    fieldParent={fieldParent}\n                    values={values}\n                    setFieldValue={setFieldValue}\n                />\n\n            }\n        }\n    }\n\n    const createObject = async () => {\n        // Save object\n        let objectId = null\n        if (isObject(obj) && ('name' in obj)) {\n            if (obj._id == undefined) { // If the object does not currently exist, make a new one\n                const newObject = {\n                    name: obj.name,\n                    description: \"\",\n                    modelName: \"\",\n                    dimensions: null,\n                    map_id: currentMap._id,\n                    _id: uuid.v4(),\n                }\n                const response = await dispatch(objectActions.postObject(newObject))\n                setFieldValue(fieldParent ? `${fieldParent}.obj` : \"obj\", newObject)\n\n\n                objectId = newObject._id\n            } else { //  Otherwise just set the task obj to the existing obj\n                objectId = obj._id\n            }\n\n        }\n\n        setFieldValue(fieldParent ? `${fieldParent}.needsSubmit` : \"needsSubmit\", true)\n\n        return objectId\n    }\n\n\n\n    const updateDashboard = () => {\n        // Add the task automatically to the associated load station dashboard\n        // Since as of now the only type of task we are doing is push, only need to add it to the load location\n        let updatedStation = deepCopy(stations[selectedTask.load.station])\n\n        let updatedDashboard = dashboards[updatedStation.dashboards[0]]\n\n        if (updatedDashboard === undefined) {\n            let defaultDashboard = {\n                name: updatedStation.name + ' Dashboard',\n                buttons: [],\n                station: updatedStation._id\n            }\n            const postDashboardPromise = dispatchPostDashboard(defaultDashboard)\n            postDashboardPromise.then(async postedDashboard => {\n                alert('Added dashboard to location. There already should be a dashboard tied to this location, so this is an temp fix')\n                updatedStation.dashboards = [postedDashboard._id.$oid]\n                await dispatchPutStation(updatedStation, updatedStation._id)\n\n            })\n        }\n\n        const newDashboardButton = {\n            color: '#bcbcbc',\n            id: selectedTask._id,\n            name: selectedTask.name,\n            task_id: selectedTask._id\n        }\n        updatedDashboard.buttons.push(newDashboardButton)\n        dispatchPutDashboard(updatedDashboard, updatedDashboard._id.$oid)\n\n        // dispatch(taskActions.removeTask(selectedTask._id)) // Remove the temporary task from the local copy of tasks\n    }\n\n\n\n\n\n\n    return (\n        <>\n            {!!selectedTask &&\n\n                <styled.ContentContainer>\n\n                    {confirmDeleteModal &&\n                        <ConfirmDeleteModal\n                            isOpen={!!confirmDeleteModal}\n                            title={\n\n                                `Are you sure you want to delete this Route?\n\n                    ${routeProcesses.length > 0 ?\n                                    `This task is a part of processes:\n\n                        ${routeProcesses.map((process) => {\n                                        // Try catch for error with editing an existing task that belongs to a new process\n                                        try {\n                                            return ` '${process.name}'`\n\n                                        } catch (error) {\n                                            return ``\n                                        }\n                                    })}\n\n                        and will be removed from these processes if deleted.\n                        `\n                                    :\n                                    ''\n                                }\n                    `\n                            }\n                            button_1_text={\"Yes\"}\n                            handleOnClick1={() => {\n                                onDelete(routeId)\n                                setConfirmDeleteModal(null)\n                            }}\n                            button_2_text={\"No\"}\n                            handleOnClick2={() => setConfirmDeleteModal(null)}\n                            handleClose={() => setConfirmDeleteModal(null)}\n                        />\n                    }\n\n\n                    <div style={{ marginBottom: '1rem' }}>\n                        {selectedTask &&\n                            <ContentHeader\n                                content={'tasks'}\n                                mode={(!!isProcessTask && selectedTask.new) ? 'add' : 'create'}\n                                // Disables the button if load and unloads have not been selected for a task/route in a process\n                                // disabled={selectedTask !== null && (!selectedTask.load.position || selectedTask.unload.position === null)}\n                                disabled={submitDisabled}\n                                onClickSave={async () => {\n                                    await createObject()\n                                    // await onSave()\n                                }}\n\n                                onClickBack={() => {\n                                    onBackClick(routeId)\n                                }}\n                            />\n                        }\n\n                    </div>\n\n                    {/*\n                If it's a process route and its a new route then add the ability to select already existing routes.\n                Some filtering is done based on certain conditions, see 'options' key\n            */}\n                    {!!selectedTask && isProcessTask && !!selectedTask.new &&\n                        <>\n                            <styled.Label>\n                                <styled.LabelHighlight>Either</styled.LabelHighlight> choose an existing Route...\n                    </styled.Label>\n                            <DropDownSearch\n                                placeholder=\"Select Existing Route\"\n                                label=\"Choose An Existing Route\"\n                                labelField=\"name\"\n                                valueField=\"name\"\n\n                                options={\n\n                                    Object.values(routes)\n\n                                        .filter(task => {\n\n                                            // This filters out tasks when fixing a process\n                                            // If the process is broken, then you can only select tasks that are associated with the last route before break's unload station\n                                            if (fixingProcess) {\n\n                                                // Gets the route before break\n                                                const routeBeforeBreak = selectedProcess.routes[selectedProcess.broken - 1]\n\n                                                if (!!routeBeforeBreak.unload) {\n                                                    const unloadStationID = routeBeforeBreak.unload.station\n\n                                                    if (task.load.station === unloadStationID) {\n                                                        return true\n\n                                                    }\n                                                }\n                                            }\n\n                                            // If the selected process has routes, then filter out tasks that have load stations that arent the last route's unload station\n                                            // This eliminates 'broken' processes with tasks that are between non-connected stations\n                                            else if (selectedProcess.routes.length > 0) {\n                                                if(insertIndex === 0) {\n                                                    const firstTask = selectedProcess.routes[0]\n                                                    return isNextRouteViable(task, firstTask)\n                                                }\n                                                else {\n                                                    // Gets the previous route\n                                                    const previousRoute = getPreviousRoute(selectedProcess.routes, values._id)\n                                                    return isNextRouteViable(previousRoute, task)\n                                                }\n                                            }\n\n                                            else {\n                                                return true\n                                            }\n                                        })\n                                }\n                                // values={!!selectedTask.idle_location ? [positions[selectedTask.idle_location]] : []}\n                                dropdownGap={5}\n                                noDataLabel=\"No matches found\"\n                                closeOnSelect=\"true\"\n                                name={fieldParent ? `${fieldParent}.existingRoute` : \"existingRoute\"}\n                                onChange={async (dropdownValues) => {\n\n                                    const selectedValue = dropdownValues[0] || {}\n\n                                    const {\n                                        obj: selectedObjId = \"\",\n                                        _id: selectedRouteId = \"\"\n                                    } = selectedValue || {}\n\n                                    const selectedObj = selectedObjId ? (objects[selectedObjId] || null) : null\n\n                                    // If this task is part of a process and not already in the array of routes, then add the task to the selected process\n                                    if (!selectedProcess.routes.includes(selectedRouteId)) {\n\n                                        var selectedRoute = { ...selectedValue, needsSubmit: true, obj: selectedObj, temp: values.temp }\n                                        // setFieldValue\n                                        if (fieldParent) {\n                                            setFieldValue(fieldParent, selectedRoute)\n                                        }\n                                        else {\n                                            await setValues(selectedRoute)\n                                        }\n\n                                    }\n                                }}\n                                className=\"w-100\"\n                                schema=\"tasks\"\n                            />\n                        </>\n                    }\n\n                    {!!selectedTask && isProcessTask && !!selectedTask.new &&\n                        <styled.Label style={{ marginTop: '1rem' }}>\n                            <styled.LabelHighlight>Or</styled.LabelHighlight> make a new one\n                </styled.Label>\n                    }\n\n                    {/* Task Title */}\n                    <TextField\n                        InputComponent={Textbox}\n                        name={fieldParent ? `${fieldParent}.name` : \"name\"}\n                        placeholder={\"Route Name\"}\n                        schema={'tasks'}\n                        focus={!name}\n                        style={{ fontSize: '1.2rem', fontWeight: '600' }}\n                    />\n\n                    {isTransportTask &&\n                        <>\n                            <TextboxSearchField\n                                mapInput={(val) => {\n                                    if (!val) return []\n\n                                    if (Array.isArray(val)) return val\n\n                                    return [val]\n                                }}\n                                name={fieldParent ? `${fieldParent}.obj` : \"obj\"}\n                                placeholder=\"Object\"\n                                label={!values.obj?._id ? \"New object will be created\" : null}\n                                labelField=\"name\"\n                                onChange={(val) => {\n                                }}\n\n                                valueField=\"name\"\n                                options={Object.values(objects).filter((obj) => obj.map_id === currentMap._id)}\n                                defaultValue={obj}\n                                textboxGap={0}\n                                closeOnSelect=\"true\"\n                                className=\"w-100\"\n                                schema=\"tasks\"\n                                disbaled={!isTransportTask}\n                                containerStyle={{ marginTop: '1rem', marginBottom: \"1rem\" }}\n                            />\n\n                            <styled.HelpText>\n                                Select the object that will be transported. Either search & select an existing object, or type the\n                                name of a new object to create one.\n                    </styled.HelpText>\n\n                            {isProcessRoute &&\n                            <>\n                                <styled.Label>Track Using Quantity or Fractions</styled.Label>\n                                <styled.RowContainer style={{justifyContent: 'center'}}>\n                                    <styled.DualSelectionButton\n                                        style={{borderRadius: '.5rem 0rem 0rem .5rem'}}\n                                        onClick={() => {\n                                            setFieldValue(fieldParent ? `${fieldParent}.track_quantity` : \"track_quantity\", true)\n                                        }}\n                                        selected={values.track_quantity}\n                                    >\n                                        Quantity\n                                    </styled.DualSelectionButton>\n\n                                    <styled.DualSelectionButton\n                                        style={{borderRadius: '0rem .5rem .5rem 0rem'}}\n                                        onClick={() => {\n                                            setFieldValue(fieldParent ? `${fieldParent}.track_quantity` : \"track_quantity\", false)\n                                        }}\n                                        selected={!values.track_quantity}\n\n                                    >\n                                        Fraction\n                                    </styled.DualSelectionButton>\n\n                                </styled.RowContainer>\n                            </>\n                            }\n                        </>\n                    }\n\n                    {/* Load and Unload Parameters */}\n                    <div style={{ height: \"100%\", paddingTop: \"1rem\" }}>\n                        {renderLoadUnloadParameters()}\n                    </div>\n\n                    <hr />\n\n                    {/* Remove Task From Process Button */}\n                    {selectedTask.new ?\n                        <>\n                            <Button\n                                schema={'tasks'}\n                                // disabled={!!selectedTask && !!selectedTask._id && !!selectedTask.new}\n                                secondary\n                                onClick={() => onBackClick(routeId)}\n                            >\n                                Cancel\n                    </Button>\n                        </>\n                        :\n                        <>\n                            {selectedProcess &&\n                                <Button\n                                    schema={'tasks'}\n                                    disabled={!!selectedTask && !!selectedTask._id && !!selectedTask.new}\n                                    primary\n                                    onClick={() => {\n                                        onRemove(routeId)\n                                    }}\n                                >\n                                    Remove Route\n                        </Button>\n                            }\n\n\n                            {/* Delete Task Button */}\n                            <Button\n                                schema={'tasks'}\n                                disabled={!!selectedTask && !!selectedTask._id && !!selectedTask.new}\n                                secondary\n                                onClick={() => {\n                                    setConfirmDeleteModal(true)\n                                }}\n                            >\n                                Delete Route\n                        </Button>\n                        </>\n                    }\n\n                </styled.ContentContainer>\n            }\n        </>\n\n    )\n}\n\n// Specifies propTypes\nTaskField.propTypes = {\n    onSave: PropTypes.func,\n    toggleEditing: PropTypes.func,\n    fieldParent: null,\n    setFieldValue: PropTypes.func,\n    setValues: PropTypes.func,\n    setFieldTouched: PropTypes.func,\n    getFieldMeta: PropTypes.func,\n    onBackClick: PropTypes.func,\n    onRemove: PropTypes.func,\n    onDelete: PropTypes.func,\n};\n\n// Specifies the default values for props:\nTaskField.defaultProps = {\n    onSave: () => { },\n    toggleEditing: () => { },\n    fieldParent: null,\n    setFieldValue: () => { },\n    setValues: () => { },\n    setFieldTouched: () => { },\n    getFieldMeta: () => { },\n    onBackClick: () => { },\n    onRemove: () => { },\n    onDelete: () => { },\n};\n\nexport default TaskField\n","import {Formik} from \"formik\";\nimport {routeSchema} from \"../../../../../methods/utils/form_schemas\";\nimport React, {useEffect} from \"react\";\nimport TaskField from \"../task_field/route_field\";\nimport {deleteRouteClean, saveFormRoute, setSelectedTask} from \"../../../../../redux/actions/tasks_actions\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport * as taskActions from \"../../../../../redux/actions/tasks_actions\";\n\nconst TaskForm = (props) => {\n\n\tconst {\n\t\tinitialValues,\n\t\ttoggleEditing,\n\t\tisNew,\n\t\t...remainingProps\n\t} = props\n\n\tconst dispatch = useDispatch()\n\tconst dispatchSaveFormRoute = async (formRoute) => await dispatch(saveFormRoute(formRoute))\n\tconst dispatchSetSelectedTask = (task) => dispatch(setSelectedTask(task))\n\tconst dispatchRemoveTask = async (taskId) => await dispatch(taskActions.removeTask(taskId))\n\tconst dispatchDeleteRouteClean = async (routeId) => await dispatch(taskActions.deleteRouteClean(routeId))\n\tconst onEditing = async (props) => await dispatch(taskActions.editingTask(props))\n\n\tconst tasks = useSelector(state => state.tasksReducer.tasks)\n\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t\tdispatchSetSelectedTask(null)\n\t\t}\n\n\t}, []);\n\n\tconst handleSubmit = async (values) => {\n\n\t\tawait dispatchSaveFormRoute(values)\n\n\t\tdispatchSetSelectedTask(null)\n\t\tonEditing(false)\n\t}\n\n\tconst handleBackClick = (routeId) => {\n\t\tdispatchSetSelectedTask(null)\n\t\tif(tasks[routeId] && tasks[routeId].new) {\n\t\t\tdispatchRemoveTask(routeId)\n\t\t}\n\t\tonEditing(false)\n\t}\n\n\tconst handleDelete = async (routeId) => {\n\t\tawait dispatchDeleteRouteClean(routeId)\n\t\tonEditing(false)\n\t\tdispatchSetSelectedTask(null)\n\t}\n\n\treturn (\n\t\t<Formik\n\t\t\tinitialValues={initialValues}\n\n\t\t\t// validation control\n\t\t\tvalidationSchema={routeSchema}\n\t\t\tvalidateOnChange={true}\n\t\t\tvalidateOnMount={false} // leave false, if set to true it will generate a form error when new data is fetched\n\t\t\tvalidateOnBlur={true}\n\n\t\t\t// enableReinitialize={true} // leave false, otherwise values may be reset when new data is fetched\n\t\t\tonSubmit={async (values, formikHelpers) => {\n\n\t\t\t\tconst {\n\t\t\t\t\tsetSubmitting,\n\t\t\t\t\tsetTouched,\n\t\t\t\t} = formikHelpers\n\n\t\t\t\t// set submitting to true, handle submit, then set submitting to false\n\t\t\t\t// the submitting property is useful for eg. displaying a loading indicator\n\t\t\t\t// const {\n\t\t\t\t// \tbuttonType\n\t\t\t\t// } = values\n\n\t\t\t\tsetSubmitting(true)\n\t\t\t\tawait handleSubmit(values)\n\t\t\t\tsetTouched({}) // after submitting, set touched to empty to reflect that there are currently no new changes to save\n\t\t\t\tsetSubmitting(false)\n\n\t\t\t}}\n\t\t>\n\t\t\t{formikProps => {\n\n\t\t\t\tconst {\n\t\t\t\t\tsubmitForm\n\t\t\t\t} = formikProps\n\n\t\t\t\treturn(\n\t\t\t\t\t<TaskField\n\t\t\t\t\t\t{...formikProps}\n\t\t\t\t\t\tonDelete={handleDelete}\n\t\t\t\t\t\tisNew={isNew}\n\t\t\t\t\t\tisTransportTask={true}\n\t\t\t\t\t\ttoggleEditing={toggleEditing}\n\t\t\t\t\t\tisProcessTask={null}\n\t\t\t\t\t\tonSave={submitForm}\n\t\t\t\t\t\tonBackClick={handleBackClick}\n\t\t\t\t\t\tonRemove={null}\n\t\t\t\t\t\t{...remainingProps}\n\t\t\t\t\t/>\n\t\t\t\t)\n\t\t\t}}\n\t\t</Formik>\n\t)\n}\n\nexport default TaskForm","import React, { useState, useEffect } from 'react'\nimport * as styled from './tasks_content.style'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useParams } from 'react-router-dom'\n\n// Import Components\nimport ContentList from '../content_list/content_list'\nimport TaskAddedAlert from '../../../widgets/widget_pages/dashboards_page/dashboard_screen/task_added_alert/task_added_alert'\n\n// Import actions\nimport * as taskActions from '../../../../redux/actions/tasks_actions'\nimport * as dashboardActions from '../../../../redux/actions/dashboards_actions'\nimport * as objectActions from '../../../../redux/actions/objects_actions'\nimport * as taskQueueActions from '../../../../redux/actions/task_queue_actions'\n\nimport { postTaskQueue } from '../../../../redux/actions/task_queue_actions'\n\n// Import Utils\nimport { deepCopy } from '../../../../methods/utils/utils'\nimport { tasksSortedAlphabetically } from '../../../../methods/utils/task_utils'\nimport RouteTask from './tasks_templates/route_task'\nimport uuid from 'uuid'\nimport TaskForm from \"./task_form/route_form\";\nimport {\n    generateDefaultRoute,\n    getLoadStationDashboard,\n    getLoadStationId,\n    isHumanTask,\n    isMiRTask\n} from \"../../../../methods/utils/route_utils\";\nimport { willRouteDeleteBreakProcess } from \"../../../../methods/utils/processes_utils\";\nimport { deleteRouteClean } from \"../../../../redux/actions/tasks_actions\";\nimport { isObject } from \"../../../../methods/utils/object_utils\";\nimport { DEVICE_CONSTANTS } from \"../../../../constants/device_constants\";\nimport { ADD_TASK_ALERT_TYPE } from '../../../../constants/dashboard_contants'\n\nexport default function TaskContent(props) {\n\n    // Connect redux reducers\n    const dispatch = useDispatch()\n    const params = useParams()\n    const onTaskQueueItemClicked = (id) => dispatch({ type: 'TASK_QUEUE_ITEM_CLICKED', payload: id })\n    const onHandlePostTaskQueue = (props) => dispatch(taskQueueActions.handlePostTaskQueue(props))\n    const onEditing = async (props) => await dispatch(taskActions.editingTask(props))\n    const dispatchSetSelectedTask = async (task) => await dispatch(taskActions.setSelectedTask(task))\n    const dispatchAddTask = async (task) => await dispatch(taskActions.addTask(task))\n\n    const tasks = useSelector(state => state.tasksReducer.tasks)\n    const taskQueue = useSelector(state => state.taskQueueReducer.taskQueue)\n    const selectedTask = useSelector(state => state.tasksReducer.selectedTask)\n    const currentMap = useSelector(state => state.mapReducer.currentMap)\n    const MiRMapEnabled = useSelector(state => state.localReducer.localSettings.MiRMapEnabled)\n\n    const stations = useSelector(state => state.stationsReducer.stations)\n    const editing = useSelector(state => state.tasksReducer.editingTask) //Moved to redux so the variable can be accesed in the sideBar files for confirmation modal\n    const objects = useSelector(state => state.objectsReducer.objects)\n\n    /**\n    * @param {*} Id\n    */\n\n    // State definitions\n    //const [editing, toggleEditing] = useState(false)    // Is a task being edited? Otherwise, list view\n    const [selectedTaskCopy, setSelectedTaskCopy] = useState(null)  // Current task\n    const [shift, setShift] = useState(false) // Is shift key pressed ?\n    const [isNew, setIsNew] = useState(false) // Is shift key pressed ?\n    const [addTaskAlert, setAddTaskAlert] = useState(null);\n\n\n    // To be able to remove the listeners, the function needs to be stored in state\n\n    //Parameters to pass into handlePostTaskQueue dispatch\n    const dashboardID = getLoadStationDashboard(selectedTask)\n    const Id = selectedTask ? selectedTask._id : {}\n    const name = selectedTask ? selectedTask.name : {}\n    const custom = false\n    const fromSideBar = true\n\n    const [shiftCallback] = useState(() => e => {\n        setShift(e.shiftKey)\n    })\n\n    // Creates listeners for if the shift key is pressed\n    useEffect(() => {\n\n        window.addEventListener('keydown', shiftCallback)\n        window.addEventListener('keyup', shiftCallback)\n\n        // When component unmounts, clean up by removing listeners\n        return function cleanup() {\n            window.removeEventListener('keydown', shiftCallback)\n            window.removeEventListener('keyup', shiftCallback)\n        }\n    })\n\n    const handleDefaultObj = (objId, prevObj) => {\n\n        if (isObject(objects[objId])) {\n            return objects[objId]\n        }\n        else if (prevObj) {\n            return prevObj\n        }\n        else {\n            return null\n        }\n    }\n\n    const onExecuteTask = () => {\n\n        let inQueue = false\n        let deviceType\n\n        Object.values(taskQueue).map((item) => {\n            // If its in the Q and not a handoff, then alert the user saying its already there\n            if (item.task_id === Id && !tasks[item.task_id].handoff) inQueue = true\n        })\n\n        // add alert to notify task has been added\n        // If in Q, then tell them it's already there\n        if (inQueue) {\n            // display alert notifying user that task is already in queue\n            setAddTaskAlert({\n                type: ADD_TASK_ALERT_TYPE.TASK_EXISTS,\n                label: \"Alert! Task Already in Queue\",\n                message: `'${name}' not added`,\n            })\n\n            // clear alert after timeout\n            return setTimeout(() => setAddTaskAlert(null), 1800)\n        }\n\n        // Else see what type of task it is and add accordingly\n        else {\n\n            // See device type\n            if (isMiRTask(selectedTask)) {\n                deviceType = DEVICE_CONSTANTS.MIR_100\n            }\n            else if (isHumanTask(selectedTask)) {\n                deviceType = DEVICE_CONSTANTS.HUMAN\n            }\n\n            // Handle Add\n            if (deviceType !== 'human') {\n                setAddTaskAlert({\n                    type: ADD_TASK_ALERT_TYPE.TASK_ADDED,\n                    label: \"Task Added to Queue\",\n                    message: name\n                })\n\n                // clear alert after timeout\n                setTimeout(() => setAddTaskAlert(null), 1800)\n            }\n            onHandlePostTaskQueue({ dashboardID, tasks, deviceType, taskQueue, Id, name, custom, fromSideBar })\n\n        }\n\n\n    }\n\n    if (editing && selectedTask !== null) { // Editing Mode\n        return (\n            <TaskForm\n                isNew={isNew}\n                initialValues={{\n                    ...selectedTask,\n                    obj: handleDefaultObj(selectedTask.obj)\n                }}\n                shift={shift}\n                toggleEditing={props => onEditing(props)}\n            />\n        )\n    } else {    // List Mode\n        return (\n            <>\n                <TaskAddedAlert\n                    containerStyle={{\n                        'position': 'absolute'\n                    }}\n                    {...addTaskAlert}\n                    visible={!!addTaskAlert}\n                />\n                <ContentList\n                    title={'Routes'}\n                    schema={'tasks'}\n                    elements={\n\n                        tasksSortedAlphabetically(Object.values(tasks))\n                            // Filters outs any tasks that don't belong to the current map\n                            .filter(task => task.map_id === currentMap._id)\n                            // Filter out empty tasks that are somehow created when choosing an existing task to add to a process in the process tab\n                            // These are deleted by the cleaner function on page refresh but in the meantime dont show in the list view\n                            .filter(task => task.load.position !== null)\n\n                    }\n                    onMouseEnter={(task) => {\n                        dispatchSetSelectedTask(task)\n                    }}\n                    onMouseLeave={(task) => dispatchSetSelectedTask(null)}\n                    onClick={(task) => {\n                        setIsNew(false)\n                        // If task button is clicked, start editing it\n                        dispatchSetSelectedTask(task)\n                        onEditing(true)\n                    }}\n\n                    executeTask={() => {\n                        onExecuteTask()\n                    }}\n\n                    onPlus={() => {\n                        const newTask = generateDefaultRoute()\n                        setIsNew(true)\n                        dispatchAddTask(newTask)\n                        dispatchSetSelectedTask(newTask)\n                        onEditing(true)\n                    }}\n                />\n            </>\n        )\n    }\n}\n","import styled, { css } from 'styled-components'\n\nexport const ContentContainer = styled.div`\n    flex-grow: 1;\n    padding: 1rem;\n    padding-top: 1.5rem;\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    overflow-y: scroll;\n    overflow-x: hidden;\n\n    ::-webkit-scrollbar{\n        display: none;\n    }\n\n`\n\nexport const DevicesSpan = styled.span`\n    /* line-height: 2rem; */\n`\n\nexport const Circle = styled.div`\n    height: 4rem;\n    width: 4rem;\n    border-radius: 50%;\n    border: solid .1rem red;\n    position: absolute;\n`\n\nexport const SettingsIcon = styled.i`\n    font-size: 3rem;\n    display: flex;\n    position: absolute;\n    left: 17rem;\n    margin-top: -1rem;\n`\n\nexport const AddDeviceIcon = styled.i`\n    font-size: 5rem;\n    margin-top: 1rem;\n    &:hover{\n        cursor: pointer;\n    }\n\n`\n\nexport const SettingsContainer = styled.div`\n    display: flex;\n    width: 100%;\n    flex-direction: column;\n    align-items: center;\n`\n\nexport const SettingsSectionsContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    max-width: 25rem;\n    margin: .75rem 0rem;\n`\n\nexport const SettingsLabel = styled.h1`\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz2};\n    color: ${props => props.theme.schema[props.schema].solid};\n    line-height: 1rem;\n`\n\nexport const Title = styled.h1`\n    font-family: ${props => props.theme.font.primary};\n    font-size: 2rem;\n    font-weight: 500;\n    color: ${props => props.theme.schema[props.schema].solid};\n`\n\nexport const Header = styled.div`\n    display: flex; \n    flex-direction: row;\n    width: 100%;\n    justify-content: space-between;\n`\n\nexport const RowContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n`","import styled from 'styled-components'\n\nexport const SettingsContainer = styled.div`\n    flex-grow: 1;\n    padding: 1rem;\n    padding-top: 1.5rem;\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    overflow-y: scroll;\n\n    ::-webkit-scrollbar{\n        display: none;\n    }\n`\n\nexport const SettingContainer = styled.div`\n\n    width: 100%;\n    max-width: 20rem;\n    margin-bottom: 2rem;\n`\n\nexport const RowContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n`\n\nexport const ColumnContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`\n\nexport const Header = styled.p`\n    color: ${props => props.theme.bg.octonary};\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz2};\n\n    margin-bottom: 1rem;\n`\n\nexport const ConnectionIcon = styled.i`\n\n    margin-left: 1rem;\n    font-size: 1.2rem;\n    color: ${props => props.className === 'fas fa-check' ? 'green' :\n        props.className === 'fas fa-circle-notch fa-spin' ? 'yellow' :\n        props.className === 'fas fa-times' ? 'red' : 'gray'\n    };\n`\n\nexport const ConnectionButton = styled.button`\n\n    margin-bottom: 1rem;\n    border: none;\n    border-radius: .5rem;\n    background-color: ${props => props.theme.bg.octonary};\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    outline: 0 !important;\n    width: 10rem;\n\n    box-shadow: 0 0.1rem 0.2rem 0rem #303030;\n\n    &:focus{\n        outline: 0 !important\n    }\n\n    &:active{\n        box-shadow: none;\n    }\n\n    &:hover{\n        background-color: ${props => !props.disabled && props.theme.bg.senary};\n    }\n\n`\n\nexport const SwitchContainerLabel = styled.span`\n    padding: 0;\n    margin: 0;\n    align-self: center;\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz4};\n    color: ${props => props.theme.bg.octonary};\n`\n","import styled, { css } from 'styled-components'\nimport * as style from '../devices_content.style'\nimport * as styles from '../../settings/settings.style'\nimport * as stylel from '../../locations/edit_location/location_button/location_button.style'\n\nexport const Container = styled(style.SettingsContainer)`\n`\n\nexport const SectionsContainer = styled(style.SettingsSectionsContainer)`\n`\n\nexport const Label = styled(style.SettingsLabel)`\n    margin-bottom: 1rem;\n`\n\nexport const RowContainer = styled(style.RowContainer)`\n`\n\nexport const ConnectionButton = styled(styles.ConnectionButton)`\n`\n\nexport const ConnectionIcon = styled(styles.ConnectionIcon)`\n`\n\nexport const LocationTypeGraphic = styled(stylel.LocationTypeGraphic)`\n`\n\nexport const LocationTypeButton = styled(stylel.LocationTypeButton)`\n`\n\nexport const DeviceIcon = styled.i`\n    color: ${props => props.theme.bg.octonary};\n\tfont-size: 3rem;\n`\n\nexport const ConnectionText = styled.p`\n    color: ${props => props.theme.bg.octonary};\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz3};\n    user-select: none;\n`","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport uuid from 'uuid'\n\n// Import Style\nimport * as styled from './device_edit.style'\n\n// Import basic components\nimport { deepCopy } from '../../../../../methods/utils/utils'\nimport Textbox from '../../../../basic/textbox/textbox'\nimport DropDownSearch from '../../../../basic/drop_down_search_v2/drop_down_search'\nimport Button from '../../../../basic/button/button'\n\n// Import actions\nimport { addStation, setSelectedStation } from '../../../../../redux/actions/stations_actions'\nimport * as deviceActions from '../../../../../redux/actions/devices_actions'\nimport * as positionActions from '../../../../../redux/actions/positions_actions'\n\n// Import templates\nimport * as templates from '../devices_templates/device_templates'\n\n// Import Utils\nimport { DeviceItemTypes } from '../../../../../methods/utils/device_utils'\nimport { locationsSortedAlphabetically } from '../../../../../methods/utils/locations_utils'\n\n/**\n * This handles editing device informaton\n * This also handles adding devices to the map\n * Currently using 'location' vs 'device' nominclature to match adding a location to the map and because devices really are just locations to the map\n *\n * @param {*} props\n */\nconst DeviceEdit = (props) => {\n\n    const {\n        deviceLocationDelete\n    } = props\n\n    const [connectionText, setConnectionText] = useState('Not Connected')\n    const [connectionIcon, setConnectionIcon] = useState('fas fa-question')\n    const [deviceType, setDeviceType] = useState('')\n\n    const dispatch = useDispatch()\n    const dispatchAddStation = (selectedStation) => dispatch(addStation(selectedStation))\n    const dispatchSetSelectedStation = (selectedStation) => dispatch(setSelectedStation(selectedStation))\n    const onSetSelectedDevice = (selectedDevice) => dispatch(deviceActions.setSelectedDevice(selectedDevice))\n    const onAddPosition = (updatedPosition) => dispatch(positionActions.addPosition(updatedPosition))\n\n    const selectedDevice = useSelector(state => state.devicesReducer.selectedDevice)\n    const devices = useSelector(state => state.devicesReducer.devices)\n    const positions = useSelector(state => state.positionsReducer.positions)\n\n    // On page load, see if the device is a new device or existing device\n    // TODO: This is going to fundementally change with how devices 'connect' to the cloud.\n    useEffect(() => {\n\n        // Sets the type of device, unknown devic defaults to an RM logo while known devices use their own custom SVGs\n        if (selectedDevice.device_model === 'MiR100') setDeviceType('cart')\n\n    }, [])\n\n    // TODO: Not sure this is needed with IOT Implementation\n    const handleDeviceConnection = () => {\n\n        // Need to see how the device is connecting\n\n        // if (device.status.connection === 'connected') {\n        //     setConnectionIcon('fas fa-check')\n        //     setConnectionText('Connected')\n        // } else if (device.status.connection === 'connecting') {\n        //     setConnectionIcon('fas fa-circle-notch fa-spin')\n        //     setConnectionText = 'Connecting'\n        // }\n        // else if (device.status.connection === 'failed') {\n        //     setConnectionIcon('fas fa-times')\n        //     setConnectionText('Failed')\n        // }\n        // else {\n        //     setConnectionIcon('fas fa-question')\n        //     setConnectionText('Not Connected')\n        // }\n\n    }\n\n    /**\n     * This will appear if a new device has been found with the inputed IP address\n     */\n    const handleDeviceAdd = () => {\n\n        return (\n            <>\n                <p>Connected!</p>\n            </>\n        )\n    }\n\n    /**\n     * This is used to place the device onto the map\n     * Mir cart or AGV do not need to show this because they will already be on the map\n     */\n    const handleDeviceMapLocation = () => {\n\n        let template = templates.defaultAttriutes\n\n        // Sets the device logo type\n        let deviceType = DeviceItemTypes['generic']\n        if (!!DeviceItemTypes[selectedDevice.device_model]) deviceType = DeviceItemTypes[selectedDevice.device_model]\n        else if (selectedDevice.device_model === 'MiR100') deviceType = DeviceItemTypes['cart']\n\n\n        return (\n            <styled.SectionsContainer style={{ alignItems: 'center', textAlign: 'center', }}>\n\n                <styled.ConnectionText>To add the device to the screen, grab the device with your mouse and drag onto the screen</styled.ConnectionText>\n\n                <styled.DeviceIcon\n                    className={deviceType.icon}\n                    style={{ color: 'white' }}\n                    onMouseDown={async e => {\n\n                    }}\n                />\n\n            </styled.SectionsContainer>\n\n        )\n\n    }\n\n    /**\n     * This is used to set the idle location of the AMR when not in use.\n     * This should only show up if th\n     */\n    const handleAMRIdleLocation = () => {\n\n        return (\n            <styled.SectionsContainer>\n\n                <styled.Label schema={'devices'} >Idle Location</styled.Label>\n                <DropDownSearch\n                    placeholder=\"Select Location\"\n                    label=\"Idle Location for MiR Cart\"\n                    labelField=\"name\"\n                    valueField=\"name\"\n                    options={locationsSortedAlphabetically(Object.values(positions))}\n                    values={!!selectedDevice.idle_location ? [positions[selectedDevice.idle_location]] : []}\n                    dropdownGap={5}\n                    noDataLabel=\"No matches found\"\n                    closeOnSelect=\"true\"\n                    onChange={values => {\n\n                        const idleLocation = values[0]._id\n                        onSetSelectedDevice({\n                            ...selectedDevice,\n                            idle_location: idleLocation,\n                        })\n                    }}\n                    className=\"w-100\"\n                    schema=\"tasks\"\n                />\n            </styled.SectionsContainer>\n        )\n    }\n\n    const handleSetChildPositionToCartCoords = (position) => {\n        Object.values(devices).map(async (device, ind) => {\n            if (device.device_model === 'MiR100') {\n\n                const devicePosition = device.position\n\n                const updatedPosition = {\n                    ...position,\n                    pos_x: devicePosition.pos_x,\n                    pos_y: devicePosition.pos_y,\n                    x: devicePosition.x,\n                    y: devicePosition.y,\n                    rotation: devicePosition.orientation,\n                }\n\n                onAddPosition(updatedPosition)\n\n            }\n        })\n    }\n\n    // This sets both the device name and station name to the same name\n    const handleSetDeviceName = (event) => {\n    }\n\n    return (\n        <styled.Container>\n\n            {/* Commented Out for now because we dont need to show/connect via IP TODO: Probably delete   */}\n            {/* <styled.SectionsContainer>\n\n                <styled.RowContainer style={{ justifyContent: 'space-between' }}>\n                    <styled.SettingsLabel schema={'devices'} >Device IP</styled.SettingsLabel>\n\n                    <styled.ConnectionButton onClick={() => handleDeviceConnection()} disabled={(connectionText === 'Connected' || connectionText === 'Connecting')}>\n                        {connectionText}\n                        <styled.ConnectionIcon className={connectionIcon} />\n                    </styled.ConnectionButton>\n\n                </styled.RowContainer>\n                <Textbox\n                    defaultValue={device.ip}\n                    onChange={(event) => {\n                        // Sets the IP address of the device to the event target vcalue\n                        setDevice({\n                            ...device,\n                            ip: event.target.value\n                        })\n                    }}\n                    style={{ fontWeight: '600', fontSize: '1.5rem' }}\n                    labelStyle={{ color: 'black' }}\n                />\n            </styled.SectionsContainer> */}\n\n            <styled.SectionsContainer>\n\n                <styled.Label schema={'devices'} >Device Name</styled.Label>\n\n                <Textbox\n                    defaultValue={selectedDevice.device_name}\n                    onChange={(event) => {\n                        // Sets the IP address of the device to the event target vcalue\n                        handleSetDeviceName(event)\n                    }}\n                    style={{ fontWeight: '600', fontSize: '1.5rem' }}\n                    labelStyle={{ color: 'black' }}\n                />\n\n            </styled.SectionsContainer>\n\n\n            {selectedDevice.device_model !== 'MiR100' ?\n                handleDeviceMapLocation()\n                :\n                handleAMRIdleLocation()\n            }\n\n\n            <Button schema={'devices'} secondary style={{ display: 'inline-block', float: 'right', width: '100%', maxWidth: '25rem', marginTop: '2rem' }}\n                onClick={() => {\n                    deviceLocationDelete()\n                }}\n            >\n                Delete\n                </Button>\n\n        </styled.Container>\n    )\n\n}\n\nexport default DeviceEdit\n","import styled, { css } from 'styled-components'\nimport * as style from '../devices_content.style'\n\nexport const SettingsContainer = styled(style.SettingsContainer)`\n`\n\nexport const SettingsSectionsContainer = styled(style.SettingsSectionsContainer)`\n`\n\nexport const SettingsLabel = styled(style.SettingsLabel)`\n`","import styled, { css } from 'styled-components'\n\nconst sharedDeviceCss = css`\n\tposition: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    color: ${props => props.theme.bg.octonary};\n`\n\nexport const DeviceContainer = styled.div`\n    display: flex;\n    position: relative;\n    margin-bottom: 2rem;\n`\n\nexport const DeviceIcon = styled.i`\n\t${sharedDeviceCss};\n    font-size: 6rem;\n    \n\t${props => props.isSmall && {\n\t\tfontSize: \"3rem\"\n\t}};\n`\n\nexport const BatterySvg = styled.svg`\n    position: absolute;\n    overflow: visible;\n    height: 40%;\n    right: -.2rem;\n    top: 50%;\n    transform: translateY(-50%);    \n`\n\nexport const OEESvg = styled.svg`\n    position: absolute;\n    overflow: visible;\n    height: 40%;\n    left: 2.25rem;\n    top: 14rem;\n    /* transform: translateY(-50%);     */\n`\n\nexport const BatteryText = styled.p`\n    position: absolute;\n    top: 45.5%;\n    right: 10%;\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz3};\n    user-select: none;\n    \n    ${props => props.isSmall && {\n\t\tfontSize: props.theme.fontSize.sz4\n\t}};\n`\n\nexport const BigCircle = styled.div`\n    height: 20rem;\n    width: 20rem;\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    overflow: hidden;\n    border: solid .2rem black;\n    border-radius: 50%;\n\n\n    /* $border: 1rem;\n    background-clip: padding-box;\n    border: solid $border transparent;\n    border-radius: 50%;\n    color: #FFF;\n    &:before {\n        content: '';\n        position: relative;\n        top: 0; right: 0; bottom: 0; left: 0;\n        z-index: -1;\n        margin: -$border;\n        border-radius: inherit; \n        background: linear-gradient(to right, red, orange);\n    } */\n\t\n\t${props => props.isSmall && {\n\t\twidth: \"15rem\",\n\t\theight: \"15rem\"\n\t}};\n`\n\n\nexport const DeviceTitle = styled.h2`\n\n    font-family: ${props => props.theme.font.primary};\n    /* font-size: ${props => props.theme.fontSize.sz2}; */\n    font-size: 2rem;\n    color: ${props => props.theme.bg.octonary};\n    position: absolute;\n    text-align:center;\n\n    max-height: 5rem;\n    text-overflow: ellipsis;\n    overflow: hidden;\n\n    top: 22%;\n    transform: translateY(-50%);\n    max-width: 13.5rem;\n\n    user-select: none;\n\n    \n    // small style\n    ${props => props.isSmall && {\n\t\tfontSize: props.theme.fontSize.sz2\n\t}};\n\n`\n\nexport const EditDeviceIcon = styled.i`\n    position: absolute;\n    bottom: 5%;\n    color: ${props => props.theme.bg.octonary};\n    z-index: 10;\n    &:hover{\n        cursor: pointer;\n    }\n    \n    font-size: 2rem;\n    \n    ${props => props.isSmall && {\n\t\tfontSize: \"1.5rem\"\n\t}};\n`\n\nexport const StatusContainer = styled.div`\n    border: solid .1rem;\n    border-color: ${props => props.theme.bg.octonary};\n    border-radius: 1rem;\n    width: 75%;\n    height: 10%;\n    text-align: center;\n    position: absolute;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    \n    bottom: 25%;\n    transform: translateY(50%);\n    \n`\n\nexport const StatusText = styled.p`\n    margin: auto;\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz3};\n    color: ${props => props.theme.bg.octonary};\n    overflow: hidden;\n    user-select: none;\n    \n    ${props => props.isSmall && {\n\t\tfontSize: props.theme.fontSize.sz4\n\t}};\n`","import React, { useState, useEffect } from 'react'\n\nimport { useDispatch, useSelector } from 'react-redux'\n\n// Import actions\nimport { setSelectedStation } from '../../../../../redux/actions/stations_actions'\n\n// Import styles\nimport * as styled from './device_item.style'\n\n// Import utils\nimport { DeviceTypes } from '../../../../../constants/device_constants'\n\nconst DeviceItem = (props) => {\n\n    const {\n        device,\n        isSmall,\n        ind,\n        setSelectedDevice,\n        tasks,\n        taskQueue,\n    } = props\n\n    const batteryRectWidth = isSmall ? 20 : 25\n    const batteryRectRx = batteryRectWidth / 5\n    const deviceID = device._id\n    const deviceName = device.device_name\n\n    const dispatch = useDispatch()\n    const dispatchSetSelectedStation = (station) => dispatch(setSelectedStation(station))\n\n    const stations = useSelector(state => state.stationsReducer.stations)\n\n    const [stationId, setStationId] = useState(false)\n\n\n    // Sets the type of device\n    let deviceType = DeviceTypes['generic']\n    if (!!DeviceTypes[device.device_model]) deviceType = DeviceTypes[device.device_model]\n    else if (device.device_model === 'MiR100') deviceType = DeviceTypes['cart']\n\n    // Sets the location of the device\n    useEffect(() => {\n        if (!!device.station_id && device.device_model !== 'MiR100' && !stationId) setStationId(device.station_id)\n\n        // If the device does not have a station_id but there is one in state, then set the state to false (this happens when a devices location is deleted)\n        if (!!stationId && !device.station_id) setStationId(false)\n\n    }, [device])\n\n    // Handles Device status, this might have to be tailord for each device\n    const handleDeviceStatus = () => {\n        // Sets the current task of the device\n\n        let deviceStatus = ''\n\n        try {\n            if (device.state_text === 'EmergencyStop') {\n                deviceStatus = 'Emergency Stoped'\n            }\n            else if (device.current_task_queue_id === null) {\n                deviceStatus = 'No Active Task'\n            }\n            else if (!!device.current_task_queue_id) {\n                try {\n                    deviceStatus = taskQueue[device.current_task_queue_id.$oid].mission_status\n                } catch (error) {\n                    deviceStatus = 'No Active Task'\n                }\n            }\n\n            else {\n                // Map through the task q to find the current task and display the task\n                deviceStatus = 'This device status is not set up yet.'\n            }\n        } catch (error) {\n            deviceStatus = 'There was an issue with device status'\n        }\n\n\n        return deviceStatus\n    }\n\n    const handleDeviceBattery = () => {\n\n        const deviceBattery = device.battery_percentage\n\n        // This sets the battery SVG colors depending on battery level\n        let batteryRectFill = ['lime', 'lime', 'lime', 'lime', 'lime']\n        let batteryRectStroke = ['none', 'none', 'none', 'none', 'none']\n        let batteryTextColor = 'lime'\n\n        if (deviceBattery > 80) {\n            batteryRectFill = ['lime', 'lime', 'lime', 'lime', 'lime']\n            batteryRectStroke = ['none', 'none', 'none', 'none', 'none']\n            batteryTextColor = 'lime'\n\n        } else if (deviceBattery > 60) {\n            batteryRectFill = ['none', 'lime', 'lime', 'lime', 'lime']\n            batteryRectStroke = ['lime', 'none', 'none', 'none', 'none']\n            batteryTextColor = 'lime'\n\n        } else if (deviceBattery > 40) {\n            batteryRectFill = ['none', 'none', 'lime', 'lime', 'lime']\n            batteryRectStroke = ['lime', 'lime', 'none', 'none', 'none']\n            batteryTextColor = 'lime'\n\n        } else if (deviceBattery > 20) {\n            batteryRectFill = ['none', 'none', 'none', 'orange', 'orange']\n            batteryRectStroke = ['orange', 'orange', 'orange', 'none', 'none']\n            batteryTextColor = 'orange'\n\n        } else if (deviceBattery > 10) {\n            batteryRectFill = ['none', 'none', 'none', 'none', 'red']\n            batteryRectStroke = ['red', 'red', 'red', 'red', 'none']\n            batteryTextColor = 'red'\n\n        } else {\n            batteryRectFill = ['none', 'none', 'none', 'none', 'none']\n            batteryRectStroke = ['red', 'red', 'red', 'red', 'red']\n            batteryTextColor = 'red'\n\n        }\n\n        return (\n            <>\n                <styled.BatteryText isSmall={isSmall} style={{ color: batteryTextColor }}>{deviceBattery.toFixed(0)}%</styled.BatteryText>\n\n                {/* SVG for the battery percent dots. Uses the above arrays to determine what percentage to show */}\n                <styled.BatterySvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 67.6 218.09\">\n\n                    <g id=\"Layer_2\" data-name=\"Layer 2\">\n                        <g id=\"Layer_1-2\" data-name=\"Layer 1\">\n                            <rect fill={batteryRectFill[4]} stroke={batteryRectStroke[4]} strokeWidth='.3rem' x=\"13.86\" y=\"174.04\" width={batteryRectWidth} height={batteryRectWidth} rx={batteryRectRx} transform=\"translate(-169.27 153.88) rotate(-69.46)\" />\n                            <rect fill={batteryRectFill[3]} stroke={batteryRectStroke[3]} strokeWidth='.3rem' x=\"25.91\" y=\"130.42\" width={batteryRectWidth} height={batteryRectWidth} rx={batteryRectRx} transform=\"translate(-121.38 165.29) rotate(-79.65)\" />\n                            <rect fill={batteryRectFill[2]} stroke={batteryRectStroke[2]} strokeWidth='.3rem' x=\"17.6\" y=\"96.54\" width={batteryRectWidth} height={batteryRectWidth} rx={batteryRectRx} />\n                            <rect fill={batteryRectFill[1]} stroke={batteryRectStroke[1]} strokeWidth='.3rem' x=\"13.41\" y=\"50.17\" width={batteryRectWidth} height={batteryRectWidth} rx={batteryRectRx} transform=\"translate(-10.63 7.92) rotate(-10.35)\" />\n                            <rect fill={batteryRectFill[0]} stroke={batteryRectStroke[0]} strokeWidth='.3rem' x=\"1.36\" y=\"6.54\" width={batteryRectWidth} height={batteryRectWidth} rx={batteryRectRx} transform=\"translate(-5.01 10.46) rotate(-20.54)\" />\n                        </g>\n                    </g>\n\n                </styled.BatterySvg>\n            </>\n        )\n\n    }\n\n    const handleDeviceOEE = () => {\n        const deviceOEE = device.OEE\n\n        // This sets the OEE SVG colors depending on OEE level\n        let OEERectFill = ['lime', 'lime', 'lime', 'lime', 'lime']\n        let OEERectStroke = ['none', 'none', 'none', 'none', 'none']\n        let OEETextColor = 'lime'\n\n        if (deviceOEE > 80) {\n            OEERectFill = ['lime', 'lime', 'lime', 'lime', 'lime']\n            OEERectStroke = ['none', 'none', 'none', 'none', 'none']\n            OEETextColor = 'lime'\n\n        } else if (deviceOEE > 60) {\n            OEERectFill = ['none', 'lime', 'lime', 'lime', 'lime']\n            OEERectStroke = ['lime', 'none', 'none', 'none', 'none']\n            OEETextColor = 'lime'\n\n        } else if (deviceOEE > 40) {\n            OEERectFill = ['none', 'none', 'lime', 'lime', 'lime']\n            OEERectStroke = ['lime', 'lime', 'none', 'none', 'none']\n            OEETextColor = 'lime'\n\n        } else if (deviceOEE > 20) {\n            OEERectFill = ['none', 'none', 'none', 'orange', 'orange']\n            OEERectStroke = ['orange', 'orange', 'orange', 'none', 'none']\n            OEETextColor = 'orange'\n\n        } else if (deviceOEE > 10) {\n            OEERectFill = ['none', 'none', 'none', 'none', 'red']\n            OEERectStroke = ['red', 'red', 'red', 'red', 'none']\n            OEETextColor = 'red'\n\n        } else {\n            OEERectFill = ['none', 'none', 'none', 'none', 'none']\n            OEERectStroke = ['red', 'red', 'red', 'red', 'red']\n            OEETextColor = 'red'\n\n        }\n\n        return (\n            //  Copy of Battery SVG just rotated 180 degrees\n            <styled.OEESvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 67.6 218.09\">\n\n                <g id=\"Layer_2\" data-name=\"Layer 2\" transform=\"rotate(180)\">\n                    <g id=\"Layer_1-2\" data-name=\"Layer 1\">\n                        <rect fill={OEERectFill[0]} stroke={OEERectStroke[0]} strokeWidth='.3rem' x=\"13.86\" y=\"174.04\" width={batteryRectWidth} height={batteryRectWidth} rx={batteryRectRx} transform=\"translate(-169.27 153.88) rotate(-69.46)\" />\n                        <rect fill={OEERectFill[1]} stroke={OEERectStroke[1]} strokeWidth='.3rem' x=\"25.91\" y=\"130.42\" width={batteryRectWidth} height={batteryRectWidth} rx={batteryRectRx} transform=\"translate(-121.38 165.29) rotate(-79.65)\" />\n                        <rect fill={OEERectFill[2]} stroke={OEERectStroke[2]} strokeWidth='.3rem' x=\"17.6\" y=\"96.54\" width={batteryRectWidth} height={batteryRectWidth} rx={batteryRectRx} />\n                        <rect fill={OEERectFill[3]} stroke={OEERectStroke[3]} strokeWidth='.3rem' x=\"13.41\" y=\"50.17\" width={batteryRectWidth} height={batteryRectWidth} rx={batteryRectRx} transform=\"translate(-10.63 7.92) rotate(-10.35)\" />\n                        <rect fill={OEERectFill[4]} stroke={OEERectStroke[4]} strokeWidth='.3rem' x=\"1.36\" y=\"6.54\" width={batteryRectWidth} height={batteryRectWidth} rx={batteryRectRx} transform=\"translate(-5.01 10.46) rotate(-20.54)\" />\n                    </g>\n                </g>\n\n            </styled.OEESvg>\n        )\n    }\n\n\n\n    return (\n\n        <styled.DeviceContainer key={ind}\n            onMouseEnter={() => {\n                !!stationId && dispatchSetSelectedStation(stations[stationId])\n            }}\n            onMouseLeave={() => { !!stationId && dispatchSetSelectedStation(null) }}>\n\n            <styled.BigCircle isSmall={isSmall}>\n\n                <styled.DeviceTitle isSmall={isSmall}>{deviceName}</styled.DeviceTitle>\n\n                {/* Sets attributes of device Icon based on what type of device has been selected */}\n                <styled.DeviceIcon isSmall={isSmall} className={deviceType.icon} style={{ fontSize: !!deviceType.deviceFontSize && deviceType.deviceFontSize, color: !!stationId || deviceType.icon === 'icon-cart' ? deviceType.primaryColor : 'white' }} />\n\n                <styled.StatusContainer>\n                    <styled.StatusText isSmall={isSmall}>\n                        {handleDeviceStatus()}\n                    </styled.StatusText>\n                </styled.StatusContainer>\n\n                <styled.EditDeviceIcon\n                    isSmall={isSmall}\n                    className='fas fa-cog'\n                    onClick={() => setSelectedDevice(deviceID)}\n                />\n\n            </styled.BigCircle>\n\n            {/* SVG for Gradient Circle. Has 2 linear gradients and conditional statements based on the deviceType. Had to use 2 gradient elements because they are global. Changing the stopColor just changes the global element making all gradients those colors */}\n            <svg xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 518 518\" style={{ position: 'absolute', overflow: 'visible' }}>\n                <defs>\n                    <linearGradient id={device._id} y1=\"259\" x2=\"518\" y2=\"259\" gradientUnits=\"userSpaceOnUse\">\n                        <stop offset=\"0\" style={{ stopColor: deviceType.startGradientColor }} />\n                        <stop offset=\"0.99\" style={{ stopColor: deviceType.stopGradientColor }} />\n                    </linearGradient>\n\n                </defs>\n                <g id=\"Layer_2\" data-name=\"Layer 2\">\n                    <g id=\"Layer_1-2\" data-name=\"Layer 1\">\n\n                        <circle className=\"cls-1\" cx=\"259\" cy=\"259\" r=\"256.5\" style={{ fill: 'none', strokeMiterlimit: '10', strokeWidth: '1rem', stroke: `url(#${device._id})` }} />\n\n                    </g>\n                </g>\n            </svg>\n\n            {!!device.battery_percentage &&\n                handleDeviceBattery()\n            }\n\n            {/* Commented out for now since OEE is not implmented */}\n            {/* {handleDeviceOEE()} */}\n\n\n        </styled.DeviceContainer>\n\n    )\n\n}\n\nexport default DeviceItem\n","import React, { useState, useEffect } from 'react'\n\n// external functions\nimport { useDispatch, useSelector } from 'react-redux'\n\n// import styles\nimport * as styled from './devices_content.style'\n\n// Import Utils\nimport { deepCopy } from '../../../../methods/utils/utils'\n\n// Import basic components\nimport ContentHeader from '../content_header/content_header'\nimport DropDownSearch from '../../../basic/drop_down_search_v2/drop_down_search'\nimport BackButton from '../../../basic/back_button/back_button'\nimport Button from '../../../basic/button/button'\nimport Textbox from '../../../basic/textbox/textbox'\nimport PlusButton from '../../../basic/plus_button/plus_button'\n\n// Import Components\nimport DeviceEdit from './device_edit/device_edit'\nimport DeviceStatistics from './device_statistics/device_statistics'\nimport DeviceItem from './device_item/device_item'\n\n// Import Actions\nimport { putDevices, postDevices, getDevices, deleteDevices, setSelectedDevice } from '../../../../redux/actions/devices_actions'\nimport { setSelectedStation, putStation, postStation } from '../../../../redux/actions/stations_actions'\nimport { postPosition, putPosition, setSelectedStationChildrenCopy } from '../../../../redux/actions/positions_actions'\nimport { postDashboard } from '../../../../redux/actions/dashboards_actions'\nimport * as stationActions from '../../../../redux/actions/stations_actions'\n\n\nconst widthBreakPoint = 450\n\n\nconst DevicesContent = () => {\n\n\n    // ======================================== //\n    //                                          //\n    //             Constructor                  //\n    //                                          //\n    // ======================================== //\n\n\n    // Redux Set Up\n    const dispatch = useDispatch()\n    const dispatchPutDevice = (device, ID) => dispatch(putDevices(device, ID))\n    const dispatchSetSelectedStation = (station) => dispatch(setSelectedStation(station))\n    const dispatchSetSelectedStationChildrenCopy = (children) => dispatch(setSelectedStationChildrenCopy(children))\n    const dispatchSetSelectedDevice = (selectedDevice) => dispatch(setSelectedDevice(selectedDevice))\n\n    const dispatchPostPosition = (position) => dispatch(postPosition(position))\n    const dispatchPutPosition = (position) => dispatch(putPosition(position))\n    const dispatchPostDashboard = (dashboard) => dispatch(postDashboard(dashboard))\n\n    const selectedStation = useSelector(state => state.stationsReducer.selectedStation)\n    const selectedStationChildrenCopy = useSelector(state => state.positionsReducer.selectedStationChildrenCopy)\n    const stations = useSelector(state => state.stationsReducer.stations)\n    const positions = useSelector(state => state.positionsReducer.positions)\n    const tasks = useSelector(state => state.tasksReducer.tasks)\n    const taskQueue = useSelector(state => state.taskQueueReducer.taskQueue)\n    const selectedDevice = useSelector(state => state.devicesReducer.selectedDevice)\n\n    const width = useSelector(state => state.sidebarReducer.width)\n    const isSmall = width < widthBreakPoint\n\n    const devices = useSelector(state => { return state.devicesReducer.devices })\n\n\n    // ======================================== //\n    //                                          //\n    //             Main Functions               //\n    //                                          //\n    // ======================================== //\n\n    // Sets the editingDeviceID to new so that the save knows to post instead of put\n    const handleAddDevice = () => {\n    }\n\n    // Renders Existing Devices\n    const handleExistingDevices = () => {\n\n        try {\n\n\n            let devicesValue = Object.values(devices)\n\n            // Maps through the existing devices\n            return devicesValue.map((device, ind) => {\n                return (\n                    <DeviceItem\n                        key={ind}\n                        device={device}\n                        isSmall={isSmall}\n                        ind={ind}\n                        tasks={tasks}\n                        taskQueue={taskQueue}\n                        setSelectedDevice={(deviceID) => {\n\n                            console.log('QQQQ Selected Device', devices[deviceID])\n                            dispatchSetSelectedDevice(deepCopy(devices[deviceID]))\n\n                        }\n                        }\n                    />\n                )\n\n            })\n\n        } catch (error) {\n            console.log('Device is undefined', devices)\n        }\n\n    }\n\n    /**\n     * This function is called when the save button is pressed. The location is POSTED or PUT to the backend.\n     * If the location is new and is a station, this function also handles posting the default dashboard and\n     * tieing it to this location. Each child position for a station is also either POSTED or PUT.\n     */\n    const handleSaveDevice = () => {\n\n        // If a AMR, then just put device, no need to save locaiton since it does not need one\n        if (selectedDevice.device_model === 'MiR100') {\n            dispatchPutDevice(selectedDevice, selectedDevice._id)\n        }\n\n        dispatchSetSelectedStation(null)\n        dispatchSetSelectedDevice(null)\n    }\n\n    const onBack = () => {\n        dispatchSetSelectedDevice(null)\n    }\n\n    /**\n    * Called when the delete button is pressed. Deletes the location, its children, its dashboards,\n    * and any tasks associated with the location\n    */\n    const onDeleteDeviceLocation = () => {\n\n    }\n\n\n    return (\n        <styled.ContentContainer>\n\n            {/* Content header changes based on whats going on with devices\n                If in standard list mode then header should be in list mode (add button)\n                If in editing/adding then the header should be in create mode (save button)\n                If in stats then the header should be in title mode with back enabled\n            */}\n            <ContentHeader\n                content={'devices'}\n                mode={!!selectedDevice ? 'create' : 'list'}\n                onClickAdd={() => { handleAddDevice() }}\n                onClickBack={onBack}\n\n                backEnabled={!!selectedDevice ? true : false}\n\n                onClickSave={() => {\n                    handleSaveDevice()\n                }}\n\n            />\n\n\n            {!!selectedDevice ?\n                <DeviceEdit deviceLocationDelete={onDeleteDeviceLocation} />\n                :\n\n                handleExistingDevices()\n            }\n\n\n\n        </styled.ContentContainer>\n    )\n}\n\nexport default DevicesContent\n","import styled, { css } from 'styled-components';\n\nexport const Container = styled.div`\n    width: 100%;\n    background: transparent;\n    border-color: transparent;\n    border-width: 0;\n    \n    ${props => props.css};\n`\n\nexport const Button = styled.button`\n    width: 100%;\n\n    background: transparent;\n    outline: none !important;\n    outline-offset: none !important;\n    border-color: transparent;\n    border-width: 0;\n\n    margin-bottom: 0.5rem;\n    \n    ${props => props.css};\n    \n`\n\n// export const ButtonViewCss = styled.div`\n//   color: ${props => (props.whiteColor ? 'white' : 'black')};\n//   flex-grow: 1;\n\n//     @media (max-width: ${props => props.theme.widthBreakpoint.tiny}) {\n//         height: 7rem;\n//         line-height: 7rem;\n//     }\n\n//     background: ${props => props.isSelected ? props.theme.fg.primary : 'transparent'};\n//     color: ${props => props.isSelected ? props.theme.bg.primary : props.theme.bg.octonary};\n\n//     outline: none !important;\n//     outline-offset: none !important;\n//     padding: .75rem;\n//     margin-left: -0.2rem;\n//     margin-bottom: .5rem;\n//     border-radius: .3rem;\n//     border-width: .15rem;\n//     border-color: ${props => props.theme.fg.primary};\n//     border-style: solid;\n\n\n//     font-size: ${props => props.theme.fontSize.sz4};\n//     font-family: ${props => props.theme.font.primary};\n//     font-weight: 400;\n//     @media ${props => props.theme.widthBreakpoint.mobileL} {\n//       padding: .25rem;\n//       fontSize: ${props => props.theme.fontSize.sz5};\n//     }\n// `;\n\nexport const buttonViewSelectedCss = css`\n\tcolor: ${props => props.theme.bg.primary};\n\tbackground-color: ${props => props.theme.fg.primary};\n`\n\n\nexport const ButtonView = styled.div`\n\n    flex-grow: 1;\n\n    @media (max-width: ${props => props.theme.widthBreakpoint.tiny}) {\n        height: 7rem;\n        line-height: 7rem;\n    }\n\n    background-color: transparent;\n    color: ${props => props.theme.bg.octonary};\n\n    outline: none !important;\n    outline-offset: none !important;\n    padding: .75rem;\n    margin-left: -0.2rem;\n    margin-bottom: .5rem;\n    border-radius: .3rem;\n    border-width: .15rem;\n    /* border-color: ${props => props.theme.fg.primary}; */\n    border-color: transparent;\n    border-style: solid;\n\n\n    font-size: ${props => props.theme.fontSize.sz4};\n    font-family: ${props => props.theme.font.primary};\n    font-weight: 400;\n    @media ${props => props.theme.widthBreakpoint.mobileL} {\n      padding: .25rem;\n      fontSize: ${props => props.theme.fontSize.sz5};\n    }\n    \n    ${props => props.css};\n    ${props => props.isSelected && buttonViewSelectedCss};\n    ${props => props.isSelected && props.selectedCss};\n`\n","// import external dependencies\nimport React, {useState} from 'react';\nimport PropTypes from 'prop-types';\n\n// import styles\nimport * as styled from './button_group.style';\n\nconst ButtonGroup = props => {\n  const { ...rest } = props;\n  // Declare a new state variable, which we'll call \"count\"\n\n\n  const {\n\tContainer,\n\tcontainerProps,\n\tButtonView,\n\tbuttonViewCss,\n\tbuttonViewSelectedCss,\n\tbuttonViewProps,\n\tButton,\n\tbuttonProps,\n\tComponent,\n\tbuttons,\n\tonPress,\n\tselectedIndex,\n\tselectedIndexes,\n\tselectMultiple,\n\tcontainerStyle,\n\tcontainerCss,\n\tinnerBorderStyle,\n\tlastBorderStyle,\n\tbuttonStyle,\n\tbuttonCss,\n\ttextStyle,\n\tselectedTextStyle,\n\tselectedButtonStyle,\n\tunderlayColor,\n\tactiveOpacity,\n\tonHideUnderlay,\n\tonShowUnderlay,\n\tsetOpacityTo,\n\tdisabled,\n\tdisabledStyle,\n\tdisabledTextStyle,\n\tdisabledSelectedStyle,\n\tdisabledSelectedTextStyle,\n\n\thasError,\n\t...attributes\n  } = rest;\n\n  const buttonsLength = buttons.length\n\n  return (\n\t  <Container\n          {...containerProps}\n\t\t  css={containerCss}\n\t\t  hasError={hasError}\n\t  >\n\t\t{buttons.map((button, i, arr) => {\n\t\t  const isSelected = selectedIndex === i || selectedIndexes.includes(i);\n\t\t  const isDisabled =\n\t\t\t  disabled === true ||\n\t\t\t  (Array.isArray(disabled) && disabled.includes(i));\n\n\t\t  const isLast = i === buttonsLength - 1 // true if the current button is the last element, useful for styling\n\n\t\t  return (\n\t\t\t  <div\n\t\t\t\t  key={i}\n\t\t\t\t  style={{}}\n\t\t\t  >\n\t\t\t\t<Button\n\t\t\t\t\t{...buttonProps}\n\t\t\t\t\tisLast={isLast}\n\t\t\t\t\tactiveOpacity={activeOpacity}\n\t\t\t\t\tsetOpacityTo={setOpacityTo}\n\t\t\t\t\tunderlayColor={underlayColor}\n\t\t\t\t\tdisabled={isDisabled}\n\t\t\t\t\ttype={\"button\"}\n\t\t\t\t\thasError={hasError}\n\t\t\t\t\tschema={props.schema}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t  if (selectMultiple) {\n\t\t\t\t\t\tif (selectedIndexes.includes(i)) {\n\t\t\t\t\t\t  onPress(selectedIndexes.filter(index => index !== i));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t  onPress([...selectedIndexes, i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t  } else {\n\t\t\t\t\t\tonPress(i);\n\t\t\t\t\t  }\n\t\t\t\t\t}}\n\t\t\t\t\tstyle={{}}\n\t\t\t\t\tcss={buttonCss}\n\t\t\t\t>\n\t\t\t\t  <ButtonView\n\t\t\t\t\t  {...buttonViewProps}\n\t\t\t\t\t  isLast={isLast}\n\t\t\t\t\t  isSelected={isSelected}\n\t\t\t\t\t  style={{}}\n\t\t\t\t\t  index={i}\n\t\t\t\t\t  arr={arr}\n\t\t\t\t\t  hasError={hasError}\n\t\t\t\t\t  css={buttonViewCss}\n\t\t\t\t\t  selectedCss={buttonViewSelectedCss}\n\n\n\t\t\t\t  >\n\t\t\t\t\t{button.element ? (\n\t\t\t\t\t\t<button.element />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tstyle={{}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t  {button}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t  </ButtonView>\n\t\t\t\t</Button>\n\t\t\t  </div>\n\t\t  );\n\t\t})}\n\t  </Container>\n  );\n}\n\n// Specifies propTypes\nButtonGroup.propTypes = {\n  button: PropTypes.object,\n  Component: PropTypes.elementType,\n  onPress: PropTypes.func,\n  buttons: PropTypes.array,\n  containerStyle: PropTypes.object,\n  textStyle: PropTypes.object,\n  selectedTextStyle: PropTypes.object,\n  selectedButtonStyle: PropTypes.object,\n  underlayColor: PropTypes.string,\n  selectedIndex: PropTypes.number,\n  selectedIndexes: PropTypes.arrayOf(PropTypes.number),\n  activeOpacity: PropTypes.number,\n  onHideUnderlay: PropTypes.func,\n  onShowUnderlay: PropTypes.func,\n  setOpacityTo: PropTypes.func,\n  innerBorderStyle: PropTypes.shape({\n\tcolor: PropTypes.string,\n\twidth: PropTypes.number,\n  }),\n  lastBorderStyle: PropTypes.oneOfType([\n\tPropTypes.object,\n\tPropTypes.func,\n  ]),\n  buttonStyle: PropTypes.object,\n  selectMultiple: PropTypes.bool,\n  theme: PropTypes.object,\n  disabled: PropTypes.oneOfType([\n\tPropTypes.bool,\n\tPropTypes.arrayOf(PropTypes.number),\n  ]),\n  disabledStyle: PropTypes.object,\n  disabledTextStyle: PropTypes.object,\n  disabledSelectedStyle: PropTypes.object,\n  disabledSelectedTextStyle: PropTypes.object,\n};\n\n// Specifies the default values for props:\nButtonGroup.defaultProps = {\n  selectedIndex: null,\n  hasError: false,\n\n  selectedIndexes: [],\n  selectMultiple: false,\n  disabled: false,\n  Component: \"div\",\n  onPress: () => null,\n  onShowUnderlay: () => {},\n  Container: styled.Container,\n  //Container={<div/>}\n  ButtonView: styled.ButtonView,\n  Button: styled.Button,\n};\n\nexport { ButtonGroup };\n\n\nexport default ButtonGroup;\n","const colors = [\"lime\", \"fuchsia\", \"aqua\", \"orange\", \"blanchedalmond\", \"coral\", \"darkcyan\", \"deeppink\", 'gold', \"lightcyan\", \"lightgreen\"]\nlet itemCount = 0\n\n// creates a unique debug style to make it easier to visualize the layout of items\nexport const getDebugStyle = () => {\n\tconst style =  {\n\t\tbackgroundColor: colors[itemCount]\n\t}\n\n\titemCount = itemCount + 1\n\treturn style\n}\n\n\n","import styled, { css } from 'styled-components'\nimport { getDebugStyle } from \"../../../../../../methods/utils/style_utils\";\n\nexport const Container = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\t\n\talign-items: center;\n\tjustify-content: space-between;\n\t\n\tposition: relative;\n\t\n\toutline: none !important;\n\toutline-offset: none !important;\n\t\n\tmargin-top: .5rem;\n\t\n\tbackground-color: transparent;\n\t\n\tborder: .2rem solid;\n\tborder-radius: 1rem;\n\tborder-color: ${props=>props.theme.bg.octonary};\n\t\n\tpadding-top: 1rem;\n\tpadding-bottom: .5rem;\n\tpadding-left: 1rem;\n\tpadding-right: 1rem;\n\t\n\t// transition: all 0.5s ease 0s;\n\t\n\t// box-shadow: 2px 2px 2px rgba(0, 0, 0, 0.5);\n\t\n\t&:hover{\n\t\tcursor: grab;\n\t\tborder-color: ${props => props.theme.schema[\"scheduler\"].solid};\n\t\t// box-shadow: 4px 4px 4px rgba(0, 0, 0, 0.5);\n\t\t// transform: translateY(-2px);\n\t}\n\t\n\t&:active {\n\t\tbox-shadow: none;\n\t\t// transform: translateY(4px);\n\t}\n\t\n\t${props => props.hasError && {\n\t\t// opacity: 0.5\n\t}}\n\t\n\tfont-family: ${props => props.theme.font.primary};\n\t\n`\n\nexport const TopContainer = styled.div`\n\tdisplay: flex;\n\twidth: 100%;\n\tjustify-content: space-between;\n`\n\nexport const ErrorContainer = styled.div`\n\tposition: relative;\n`\n\nexport const buttonViewCss = css`\n\tborder-right: ${props => !props.isLast && `solid ${props.theme.bg.quaternary} thin`}; // dont show border on last item\n\tcolor: ${props => props.theme.bg.quinary};\n\tpadding: 0;\n\tmargin: 0;\n\tpadding-left: .5rem;\n\tpadding-right: .5rem;\n`\n\nexport const buttonGroupContainerCss = css`\n\tdisplay: flex;\n\tflex-direction: row;\n\talign-self: center;\n\tpadding: 0;\n\tmargin: 0;\n\t\n`\n\nexport const buttonViewSelectedCss = css`\n\tbackground: transparent;\n\tcolor: ${props => props.theme.schema[\"scheduler\"].solid};\n`\nexport const buttonCss = css`\n\tmargin: 0;\n\tpadding: 0;\n\t\n\t&:focus{\n\t}\n\t\n\t&:active{\n\t}\n\t\n\t&:hover{\n\t\tcursor: default;\n\t}\n\t\n`\n\nexport const DaysContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: row;\n\tmargin: 0;\n\tpadding: 0;\n\t\n\t${props => props.hasError && {\n\t\topacity: 0.5\n\t}}\n`\n\nexport const ContentContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: row;\n\t\n\talign-items: center;\n\tjustify-content: space-between;\n\twidth: 100%;\n\tmargin-bottom: .5rem;\n`\n\nexport const Title = styled.span`\n\tfont-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz3};\n    text-align: left;\n    margin: 0;\n    word-break: break-all;\n    color: ${props => props.theme.schema[\"scheduler\"].solid};\n    \n    // size styling based on sidebar width rather than screen size\n\t${props => (props.isSmall) && {\n\t\t// fontSize: \".2rem\"\n\t}}\n`\n\nexport const SubTitle = styled.span`\n\tfont-size: ${props => props.theme.fontSize.sz4};\n\tfont-family: ${props => props.theme.font.primary};\n\tcolor: ${props => props.theme.bg.senary};\n\toverflow: hidden;\n\n\twhite-space: wrap;\n\tmargin: 0;\n\ttext-align: left;\n\tword-break: break-all;\n\t\n\tfont-family: ${props => props.theme.font.primary};\n\tfont-size: ${props => props.theme.fontSize.sz4};\n\tcolor: ${props => props.theme.bg.senary};\n\tcursor: pointer;\n\t\n\t// size styling based on sidebar width rather than screen size\n\t${props => (props.isSmall) && {\n\t\t// fontSize: \".2rem\"\n\t}};\n\t\n\t${props => props.hasError && {\n\t\tcolor: props.theme.bad\n\t}};\n\t\n`\n\nexport const LeftContentContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\twidth: 100%;\n`\n\nexport const TimeContainerlarge = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tmargin-left: 1rem;\n\t\n\t${props => props.hasError && {\n\t\topacity: 0.5\n\t}}\n`\n\nexport const TimeContainerSmall = styled.div`\n\tdisplay: flex;\n\tjustify-content: flex-start;\n\tflex-direction: column;\n\talign-items: flex-start;\n\twidth: 100%;\n\tmargin-bottom: .5rem;\n\t\n\t${props => props.hasError && {\n\t\topacity: 0.5\n\t}}\n`\n\nexport const TimeContainer = styled.span`\n\tcolor: ${props => props.theme.bg.octonary};\n\tdisplay: flex;\n\talign-items: flex-end;\n`\n\nexport const SwitchContainer = styled.div`\n\tmargin-left: 1rem;\n\t&:hover{\n\t\tcursor: grab;\n\t}\n`\n\nexport const TimeTitle = styled.span`\n\tmargin-right: .5rem;\n\tfont-weight: 600;\n\tfont-size: 1rem;\n\twhite-space: nowrap;\n\t\n\t// size styling based on sidebar width rather than screen size\n\t${props => (props.isSmall) && {\n\t\tfontSize: \".2rem\"\n\t}}\n\n`\nexport const TimeValue = styled.span`\n\tfont-weight: 200;\n\tjustify-content: center;\n\talign-items: flex-end;\n\tfont-size: .9rem;\n\twhite-space: nowrap;\n\t\n\t// size styling based on sidebar width rather than screen size\n\t${props => (props.isSmall) && {\n\t\tfontSize: \".2rem\"\n\t}}\t\n\n\n`\n\nexport const ContentComponent = styled.div`\n\n\t\n\n`\n","import React, {Component, useContext, useEffect, useRef, useState} from \"react\"\nimport PropTypes from 'prop-types'\n\n// external components\nimport Switch from 'react-ios-switch'\n\n// external functions\nimport {useSelector} from \"react-redux\"\nimport {ThemeContext} from \"styled-components\"\n\n// components\nimport ButtonGroup from \"../../../../../basic/button_group/button_group\"\nimport ErrorTooltip from '../../../../../basic/form/error_tooltip/error_tooltip'\n\n// styles\nimport * as style from './schedule_list_item.style'\nimport {getMessageFromError} from \"../../../../../../methods/utils/form_utils\";\n\nconst widthBreakPoint =  525\n\nconst ScheduleListItem = (props) => {\n\n\tconst {\n\n\t\tname,\n\t\ttaskName,\n\t\tdisabled,\n\t\tselected,\n\t\tid,\n\t\tschedule_on,\n\t\tonSwitchPress,\n\t\tonClick,\n\t\terror,\n\t\tdays_on,\n\t\ttime_interval,\n\t\tinterval_on,\n\t\tstop_time,\n    start_time,\n\t\tnext_time,\n\n\t} = props\n\n\n\n\tconst themeContext = useContext(ThemeContext)\n\n\tconst width = useSelector(state => state.sidebarReducer.width)\n\tconst isSmall = width < widthBreakPoint\n\tconst hasError = Object.keys(error).length > 0\n\tconst errorMessage = getMessageFromError(error)\n\n\treturn (\n\t\t<style.Container\n\t\t\tonClick={()=>onClick(id)}\n\t\t\tisSmall={isSmall}\n\t\t\thasError={hasError}\n\t\t>\n\t\t\t<style.TopContainer>\n\t\t\t\t<div/>\n\n\t\t\t\t<ErrorTooltip\n\t\t\t\t\tvisible={hasError}\n\t\t\t\t\ttext={errorMessage}\n\t\t\t\t\tContainerComponent={style.ErrorContainer}\n\t\t\t\t/>\n\t\t\t</style.TopContainer>\n\n\t\t\t<style.ContentContainer isSmall={isSmall}>\n\t\t\t\t<style.LeftContentContainer isSmall={isSmall}>\n\t\t\t\t\t<style.Title isSmall={isSmall}>{name}</style.Title>\n\t\t\t\t\t<style.SubTitle hasError={!taskName} isSmall={isSmall}>{taskName ? taskName : \"Task not found\"}</style.SubTitle>\n\t\t\t\t</style.LeftContentContainer>\n\n\n\t\t\t\t{!isSmall &&\n\t\t\t\t\t<style.TimeContainerlarge\n\t\t\t\t\t\tisSmall={isSmall}\n\t\t\t\t\t\thasError={hasError}\n\t\t\t\t\t>\n\t\t\t\t\t\t<style.TimeContainer isSmall={isSmall}>\n\t\t\t\t\t\t\t<style.TimeTitle isSmall={isSmall}>Start Time</style.TimeTitle>\n\t\t\t\t\t\t\t<style.TimeValue isSmall={isSmall}>{start_time}</style.TimeValue>\n\t\t\t\t\t\t</style.TimeContainer>\n\n\t\t\t\t\t\t{interval_on ?\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<style.TimeContainer isSmall={isSmall}>\n\t\t\t\t\t\t\t\t\t<style.TimeTitle isSmall={isSmall}>Stop Time</style.TimeTitle>\n\t\t\t\t\t\t\t\t\t<style.TimeValue isSmall={isSmall}>{stop_time}</style.TimeValue>\n\t\t\t\t\t\t\t\t</style.TimeContainer>\n\n\t\t\t\t\t\t\t\t<style.TimeContainer isSmall={isSmall}>\n\t\t\t\t\t\t\t\t\t<style.TimeTitle isSmall={isSmall}>Interval</style.TimeTitle>\n\t\t\t\t\t\t\t\t\t<style.TimeValue isSmall={isSmall}>{time_interval}</style.TimeValue>\n\t\t\t\t\t\t\t\t</style.TimeContainer>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t<style.TimeContainer isSmall={isSmall}>\n\t\t\t\t\t\t\t\t<style.TimeTitle isSmall={isSmall}>Interval</style.TimeTitle>\n\t\t\t\t\t\t\t\t<style.TimeValue isSmall={isSmall}>off</style.TimeValue>\n\t\t\t\t\t\t\t</style.TimeContainer>\n\t\t\t\t\t\t}\n\t\t\t\t\t</style.TimeContainerlarge>\n\t\t\t\t}\n\n\n\t\t\t\t<style.SwitchContainer\n\t\t\t\t\t// this container is used so click events anywhere on the switch will trigger the onClick event\n\t\t\t\t\t// otherwise if a click isn't directly over the handle, it will register the click on the outer Container\n\t\t\t\t\tonClick={(event) => {\n\t\t\t\t\t\tevent.preventDefault()\n\t\t\t\t\t\tevent.stopPropagation()\n\t\t\t\t\t\tonSwitchPress(id)\n\t\t\t\t\t}}\n\t\t\t\t\tisSmall={isSmall}\n\t\t\t\t>\n\t\t\t\t\t<Switch\n\t\t\t\t\t\tchecked={schedule_on}\n\t\t\t\t\t\tonChange={()=>onSwitchPress(id)}\n\t\t\t\t\t\tdisabled={disabled || hasError}\n\t\t\t\t\t\tonColor={themeContext.schema.scheduler.solid}\n\t\t\t\t\t\t// style={{zIndex: 5}}\n\t\t\t\t\t/>\n\t\t\t\t</style.SwitchContainer>\n\n\t\t\t</style.ContentContainer>\n\n\t\t\t<style.DaysContainer\n\t\t\t\tisSmall={isSmall}\n\t\t\t\thasError={hasError}\n\t\t\t>\n\t\t\t\t<ButtonGroup\n\t\t\t\t\tbuttonViewCss={style.buttonViewCss}\n\t\t\t\t\tbuttons={[\"M\", \"T\", \"W\", \"T\", \"F\", \"S\"]}\n\t\t\t\t\tselectMultiple\n\t\t\t\t\tselectedIndexes={days_on}\n\t\t\t\t\tcontainerCss={style.buttonGroupContainerCss}\n\t\t\t\t\tbuttonViewSelectedCss={style.buttonViewSelectedCss}\n\t\t\t\t\tbuttonCss={style.buttonCss}\n\t\t\t\t/>\n\t\t\t</style.DaysContainer>\n\n\t\t</style.Container>\n\t)\n}\n\n// Specifies the default values for props:\nScheduleListItem.propTypes = {\n\ttitle: PropTypes.string,\n\tdisabled: PropTypes.bool\n}\n\nScheduleListItem.defaultProps = {\n\ttitle: \"\",\n\tdisabled: false\n}\n\nexport default ScheduleListItem\n","import styled from 'styled-components'\n\n\n\nexport const Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    max-height: 100%;\n    padding: 1rem;\n    padding-top: 1.5rem;\n\n\n`\nexport const NextExecution = styled.h2`\n\tfont-size: ${props => props.theme.fontSize.sz3};\n\tfont-weight: 100;\n\ttext-align: center;\n\tmargin-top: 1rem;\n  margin-left:1rem;\n  margin-right:1rem;\n  color: ${props => props.theme.schema[\"scheduler\"].solid};\n\tfont-family: ${props => props.theme.font.primary};\n\n  border: .2rem solid;\n  border-radius: 1rem;\n  border-color: ${props=>props.theme.bg.octonary};\n\n  padding-top: .5rem;\n  padding-bottom: .5rem;\n  padding-left: .5rem;\n  padding-right: .5rem;\n\n  &:hover{\n    cursor: pointer;\n    border-color: ${props => props.theme.schema[\"scheduler\"].solid};\n    color: ${props => props.theme.schema[\"scheduler\"].solid};\n  }\n`\n\n\nexport const TaskListContainer = styled.div`\n    padding: 1rem;\n    overflow-y: scroll;\n    flex: 1;\n\n    // hide scroll bar\n\t::-webkit-scrollbar {\n\t\twidth: 0px;  /* Remove scrollbar space */\n\t\tbackground: transparent;  /* Optional: just make scrollbar invisible */\n\t}\n\t::-webkit-scrollbar-thumb {\n\t\tbackground: #FF0000;\n\t}\n`\n\nexport const ListEmptyContainer = styled.div`\n\tdisplay: flex;\n\tflex: 1;\n\tjustify-content: center;\n\talign-items: center;\n\tflex-direction: column;\n`\n\nexport const ListEmptyTitle = styled.h2`\n\tfont-size: ${props => props.theme.fontSize.sz2};\n\tfont-weight: 600;\n\ttext-align: center;\n\tmargin-top: 5rem;\n\tcolor: ${props => props.theme.bg.octonary};\n\tfont-family: ${props => props.theme.font.primary};\n`\n\nexport const ListEmptyFiller = styled.div`\n\tdisplay: flex;\n\tflex: 1;\n\tjustify-content: center;\n\talign-items: flex-start;\n`\n\nexport const ListItemContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    // width: 100%;\n    align-items: center;\n\n`\n\nexport const WarningIcon = styled.i`\n    margin-right: 2rem;\n    color: ${props => props.theme.bad};\n    z-index: 10;\n\n\n`\n","import styled, {css} from 'styled-components';\n\nexport const Container = styled.div`\n    flex-grow: 1;\n    display: flex;\n    position: relative;\n    flex-direction: column;\n    overflow: hidden;\n    max-width: 100%;\n`\n\n\nexport const Title = styled.h1`\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz7};\n    font-weight: 500;\n    color: ${props => props.theme.schema[props.schema].solid};\n    padding: 0;\n    margin: 0;\n    \n    ${props => props.isSmall && titleCssSmall}};\n`\n\nexport const titleCssSmall = css`\n\tfont-size: ${props => props.theme.fontSize.sz2};\n`\n\nexport const Header = styled.div`\n    // display: flex; \n    // flex-direction: row;\n    // width: 100%;\n    // justify-content: space-between;\n    \n    \n    \n    display: flex;\n\talign-items: center;\n\twidth: 100%;\n\t/* box-shadow: 2px 2px 10px black; */\n\tpadding: 1rem;\n\tpadding-top: 1.5rem;\n\t/* background-color: ${props => props.theme.bg.quinary}; */\n\tjustify-content: space-between;\n`","// import external dependencies\nimport React, {Component, useState} from \"react\";\n\n// external functions\nimport {useDispatch, useSelector} from 'react-redux';\nimport moment from 'moment';\n\n// components\nimport ContentHeader from '../../content_header/content_header'\nimport PlusButton from \"../../../../basic/plus_button/plus_button\";\nimport ScheduleListItem from \"./schedule_list_item/schedule_list_item\";\n\n// import actions\nimport { putSchedule } from '../../../../../redux/actions/schedule_actions';\n\n// import utils\nimport { clone_object } from '../../../../../methods/utils/utils';\nimport {daysOfTheWeek} from \"../../../../../constants/scheduler_constants\";\n\n// import styles\nimport * as styled from './schedule_list.style';\nimport * as pageStyle from '../scheduler_content.style';\n\n// import logger\nimport log from '../../../../../logger.js';\n\nconst logger = log.getLogger(\"Schedule\")\n\nconst ScheduleList = (props) => {\n\n    // extract props\n    const {\n        schedules,\n        selectedScheduleId,\n        tasks,\n        setShowScheduleCreator,\n        setSelectedScheduleId,\n        openSchedule,\n    } = props\n\n    // dispatch\n    const dispatch = useDispatch()\n\n    let [timeToNextScheduled, setTimeToNextScheduled] = useState(\"10000000\")\n    let [timeToNextScheduledTemp, setTimeToNextScheduledTemp] = useState(\"10000000\")\n    let [nextScheduledTimeTemp, setNextScheduledTimeTemp] = useState(\"10000000\")\n\n    let [timeToNextScheduledHours, setTimeToNextScheduledHours] = useState(\"10000000\")\n    let [timeToNextScheduledMinutes, setTimeToNextScheduledMinutes] = useState(\"10000000\")\n    let [nextScheduleName, setNextScheduleName] = useState(\"\")\n    let [id, setId] = useState(\"\")\n\n    const currentMap = useSelector(state => state.mapReducer.currentMap)\n\n    /*\n    * handles switch press event of list items\n    *\n    * the parent schedule is found by id,\n    * and all of its properties are copied into a new object for submission,\n    * with the exception of the schedule_on property, which is toggled to its opposite\n    * */\n    const handleSwitchPress = (scheduleId) => {\n\n        // get schedule item - clone to avoid directly modifying redux state\n        const scheduleItem = schedules[scheduleId]\n\n\n        // toggle schedule items schedule_on property\n        const submitItem = {\n            task_id: scheduleItem.task_id,\n            days_on: scheduleItem.days_on,\n            interval_on: scheduleItem.interval_on,\n            name: scheduleItem.name,\n            schedule_on: !scheduleItem.schedule_on,\n            start_time: scheduleItem.start_time,\n            time_interval: scheduleItem.time_interval,\n            stop_time: scheduleItem.stop_time,\n            next_time: scheduleItem.next_time,\n        }\n\n        dispatch(putSchedule(scheduleItem.id, submitItem))\n    }\n\n    /*\n    * renders the task list\n    * */\n    const renderTasks = () => {\n        let fullSchedulesArr = Object.values(schedules).filter((item) => item.map_id === currentMap._id)\n        return (\n            <styled.TaskListContainer>\n                {fullSchedulesArr.length > 0 ?\n                    fullSchedulesArr.map((item, index, arr) => {\n                        const {\n                            days_on,\n                            interval_on,\n                            name,\n                            schedule_on,\n                            start_time,\n                            stop_time,\n                            stop_time_on,\n                            task_id,\n                            time_interval,\n                            next_time,\n                            _id: {$oid: id}\n                        } = item\n\n                        // initialize empty error object\n                        let error = {}\n\n                        logger.log(\"renderTasks item\",item)\n\n                        // const id = item._id.$oid\n                        const selectedTask = task_id ? tasks[task_id] : {};\n                        const taskIsDeleted = task_id === 'TASK DELETED';\n\n                        // check for taskName error\n                        if(!selectedTask?.name) error.taskName = \"Task not found\"\n\n                        if(taskIsDeleted) error.taskName = \"Task deleted\"\n\n                        logger.log(\"renderTasks selectedTask\",selectedTask)\n\n                        // convert days_on object to arr of indices\n                        const daysOnArr = [];\n                            Object.values(daysOfTheWeek).forEach((val, ind) => {\n                                if (days_on[val]) daysOnArr.push(ind)\n                            })\n\n                        return (\n                            <ScheduleListItem\n                                name={name}\n                                days_on={daysOnArr}\n                                taskName={(selectedTask && selectedTask.name) ? selectedTask.name : ''}\n                                selected={selectedScheduleId === id}\n                                interval_on={interval_on}\n                                key={item.id}\n                                id={item.id}\n                                start_time={start_time}\n                                stop_time={stop_time}\n                                schedule_on={schedule_on}\n                                time_interval={time_interval}\n                                onSwitchPress={handleSwitchPress}\n                                onClick={openSchedule}\n                                disabled={taskIsDeleted || (item.task_id === 'TEMP_NEW_SCHEDULE_ID') || (item.task_id === 'DEFAULT_TASK_ID')}\n                                error={error}\n                                next_time={next_time}\n                            />\n                        );\n                    })\n                    :\n                    <styled.ListEmptyContainer>\n                        <styled.ListEmptyTitle>No Schedules</styled.ListEmptyTitle>\n                        <styled.ListEmptyFiller />\n                    </styled.ListEmptyContainer>\n                }\n\n            </styled.TaskListContainer>\n        );\n    }\n\n    const handleNextExecution = () => {\n        let fullSchedulesArr = Object.values(schedules).filter((item) => item.map_id === currentMap._id)\n        const minutesPerDay = 1440\n        let currentTime = Number(((moment(moment(), 'HH:mm:ss')).format('HH')) * 60) + Number((moment(moment(), 'HH:mm:ss')).format('mm'))\n        logger.log('nexttime')\n\n        if (fullSchedulesArr.length > 0) {\n          fullSchedulesArr.map((item, index, arr) => {\n            var startTime = Number(((moment(item.start_time, 'HH:mm:ss')).format('HH')) * 60) + Number((moment(item.start_time, 'HH:mm:ss')).format('mm'))\n            if(item.interval_on){\n                var stopTime = Number(((moment(item.stop_time, 'HH:mm:ss')).format('HH')) * 60) + Number((moment(item.stop_time, 'HH:mm:ss')).format('mm'))\n\n                if (stopTime - currentTime > 0 && startTime - currentTime < 0) {\n                    var intervalTime = Number(((moment(item.time_interval, 'HH:mm:ss')).format('HH')) * 60) + Number((moment(item.time_interval, 'HH:mm:ss')).format('mm'))\n                    timeToNextScheduledTemp = Math.ceil((currentTime - startTime) / intervalTime) * intervalTime + startTime - currentTime\n                    nextScheduledTimeTemp = Math.ceil((currentTime - startTime) / intervalTime) * intervalTime + startTime\n                }\n\n                if (stopTime - currentTime < 0) {\n                    timeToNextScheduledTemp = minutesPerDay - currentTime + startTime\n                    nextScheduledTimeTemp = minutesPerDay + startTime\n                }\n                if (startTime - currentTime > 0) {\n                    timeToNextScheduledTemp = startTime - currentTime\n                    nextScheduledTimeTemp = startTime\n                }\n          }\n          else{\n              nextScheduledTimeTemp = startTime\n\n              if (startTime - currentTime > 0) {\n                  timeToNextScheduledTemp = startTime - currentTime\n              }\n\n              else{\n                timeToNextScheduledTemp = minutesPerDay - currentTime + startTime\n              }\n            }\n\n            if (timeToNextScheduledTemp < timeToNextScheduled) {\n                setTimeToNextScheduled(timeToNextScheduledTemp)\n                setTimeToNextScheduledHours(Math.floor(timeToNextScheduled / 60))\n                setTimeToNextScheduledMinutes(timeToNextScheduled % 60)\n                setNextScheduleName(item.name)\n                setId(item.id)\n\n              }\n              })\n            }\n          }\n\n\n    return (\n        <styled.Container>\n            {/* <pageStyle.Header>\n                <pageStyle.Title schema={'scheduler'}>Schedules</pageStyle.Title>\n                <PlusButton\n                    onClick={() => setShowScheduleCreator(true)}\n                />\n            </pageStyle.Header> */}\n            <ContentHeader content={'scheduler'} onClickAdd={() => setShowScheduleCreator(true)}/>\n            {handleNextExecution()}\n            {timeToNextScheduled < 1440 ?\n\n            <styled.NextExecution\n                onClick={() => {setShowScheduleCreator(true)\n                                setSelectedScheduleId(id)}}>\n                                Next Up:  \" {nextScheduleName} \" will execute in {timeToNextScheduled} minutes\n            </styled.NextExecution>\n            :\n            <></>\n          }\n            {renderTasks()}\n        </styled.Container>\n\n    );\n}\n\n\nexport default ScheduleList\n","import styled from 'styled-components'\nimport Modal from 'react-modal';\nimport {css} from 'styled-components'\n\nconst sharedButtonStyle = css`\n  outline: none !important;\n  outline-offset: none !important;\n  align-self: center;\n  font-size: 1.5rem;\n  position: relative;\n  text-align: center;\n  -webkit-transition-duration: 0.4s; /* Safari */\n  transition-duration: 0.4s;\n  cursor: pointer;\n`\n\nexport const Container = styled(Modal)`\n  outline: none !important;\n  outline-offset: none !important;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  right: auto;\n  bottom: auto;\n\n  position: absolute;\n\n  background: ${props => props.theme.bg.primary};\n  border-width: thin;\n  border-radius: .5em;\n  border-color: ${props => props.theme.bg.quarternary};\n  border-style: solid;\n  padding: 2rem;\n  z-index: 50;\n  \n  color: ${props => props.theme.bg.octonary};\n`;\n\nexport const HeaderContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  border-width: 0;\n  border-bottom-width: thin;\n  border-color: black;\n  border-style: solid;\n  margin-bottom: 2rem;\n`;\n\nexport const Title = styled.h2`\n  text-align: center;\n  font-size: ${props =>  props.theme.fontSize.sz3};\n  font-family: ${props =>  props.theme.font.primary};\n  font-weight: bold;\n`;\n\nexport const TextContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 1.5rem;\n`;\n\nexport const TextMain = styled.h4`\n  text-align: center;\n  font-size: ${props =>  props.theme.fontSize.sz3};\n  font-family: ${props =>  props.theme.font.primary};\n  font-weight: 500;\n`;\n\nexport const Caption = styled.h5`\n  text-align: center;\n  font-size: ${props =>  props.theme.fontSize.sz4};\n  font-family: ${props =>  props.theme.font.primary};\n  font-weight: 400;\n  font-style: italic;\n`;\n\nexport const ButtonForm = styled.form`\n\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n`;\n\nexport const Icon = styled.i`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin: auto auto;\n    color: green;\n    fill: green;\n    font-size: 7rem;\n    width: 14rem;\n    &:hover {\n        cursor: pointer;\n    }\n\n    &:active{\n        filter: brightness(85%)\n    }\n`","import styled from 'styled-components'\nimport { hexToRGBA, LightenDarkenColor, RGB_Linear_Shade } from '../../../methods/utils/color_utils';\n\n\nconst backgroundColor = (props) => {\n  if(props.secondary || props.disabled) {\n    return props.theme.bg.senary;\n  }\n\n  else {\n    if(props.tertiary) {\n      return props.theme.bg.secondary;\n    }\n    else {\n       if(props.disabled) {\n         return props.theme.disabled;\n       }\n       else {\n         return props.theme.fg.primary;\n       }\n     }\n  }\n\n\n}\nexport const SmallButton = styled.button`\n    display: inline-block;\n    height: calc(${props => props.theme.fontSize.sz3} * 2.2);\n    line-height: 1rem;\n    text-align: center;\n    vertical-align: middle;\n    margin: 0.5rem;\n    user-select: none;\n\n    padding: 0.375rem 0.75rem;\n    font-size: ${props => props.theme.fontSize.sz3};\n    font-family: ${props => props.theme.font.primary};\n    font-weight: 500;\n\n    border-radius: calc(${props => props.theme.fontSize.sz3} * 0.3);\n    color: ${props => props.secondary || props.disabled ? props.theme.bg.primary : (props.tertiary ? props.theme.fg.primary : props.theme.bg.octonary)};\n    background-color: ${props => backgroundColor(props)};\n    /*\n    background-color: ${props => props.secondary || props.disabled ?\n       (props.theme.bg.senary)\n      :\n      (props.tertiary ?\n        props.theme.bg.secondary\n        :\n        (props.disabled ? props.theme.disabled :  props.theme.fg.primary))};\n    */\n\n    border: none;\n\n    white-space: pre;\n\n    &:focus {\n        outline: none;\n        background-color: ${props => backgroundColor(props)};\n        //background-color: ${props => props.secondary || props.disabled ? props.theme.bg.senary : (props.tertiary ? props.theme.bg.secondary : props.theme.fg.primary)};\n    }\n\n    &:hover {\n      background-color: ${props => props.disabled ? backgroundColor(props) : LightenDarkenColor(backgroundColor(props), 10)};\n    }\n`;\n","import React from 'react';\nimport * as styled from './small_button.style'\n\nconst SmallButton = ({label, onClick, style, secondary, tertiary, disabled, type, ...props}) => {\n\n    return (\n        <styled.SmallButton onClick={!disabled ? onClick : () => {return}} disabled={disabled} type={type} {...props} style={style} secondary={secondary} tertiary={tertiary}>\n          {props.children ?\n            props.children\n            :\n            label\n          }\n        </styled.SmallButton>\n    )\n};\n\nSmallButton.defaultProps = {\n    secondary : false,\n    tertiary : false,\n    disabled: false\n};\n\nexport default SmallButton;\n","import React from \"react\";\nimport Modal from 'react-modal';\n\nimport * as styled from './modals.style'\nimport SmallButton from '../small_button/small_button.js'\n\n\nModal.setAppElement('body');\n\nexport const ConfirmDeleteModal = (props) => {\n\n  const {\n    isOpen,\n    title,\n    textMain,\n    caption,\n    onCancelClick,\n    onDeleteClick\n\n  } = props\n\n  return (\n    <styled.Container\n      isOpen={isOpen}\n      contentLabel=\"Confirm Delete Modal\"\n      style={{\n        overlay: {\n          zIndex: 500\n        },\n        content: {\n\n        }\n      }}\n    >\n\n\n      <styled.HeaderContainer>\n        <styled.Title>{title}</styled.Title>\n      </styled.HeaderContainer>\n      \n      <styled.TextContainer>\n        <styled.TextMain>{textMain}</styled.TextMain>\n        <styled.Caption>{caption}</styled.Caption>\n      </styled.TextContainer>\n\n      <styled.ButtonForm>\n      <SmallButton\n                    tertiary\n                    onClick={() => onCancelClick()}\n                    label={\"Cancel\"}\n                    type=\"button\"\n                  />\n        <SmallButton\n                    onClick={() => onDeleteClick()}\n                    label={\"Delete\"}\n                    type=\"button\"\n                  />\n      </styled.ButtonForm>\n\n    </styled.Container>\n  );\n};\n\nexport const ConfirmExitModal = (props) => {\n\n\n  return (\n    <styled.Container\n      isOpen={props.isOpen}\n      contentLabel=\"Confirm Exit Modal\"\n    >\n\n      <styled.HeaderContainer>\n        <styled.Title>Are you sure you want to exit?</styled.Title>\n      </styled.HeaderContainer>\n      \n      <styled.TextContainer>\n        <styled.TextMain>Your changes will not be saved</styled.TextMain>\n        {/* <styled.Caption>{props.caption}</styled.Caption> */}\n      </styled.TextContainer>\n\n      <styled.ButtonForm onSubmit={(e) => props.onConfirm()}>\n        <SmallButton\n            tertiary\n            onClick={() => props.onCancel()}\n            label={\"Cancel\"}\n            type=\"button\"\n          />\n        <SmallButton\n            onClick={() => props.onConfirm()}\n            label={\"Continue\"}\n            type=\"submit\"\n          />\n      </styled.ButtonForm>\n\n    </styled.Container>\n  );\n\n};\n\n\nexport const WarningModal  = (props) => {\n\n  return (\n    <styled.Container\n      isOpen={props.isOpen}\n      contentLabel=\"Confirm Delete Modal\"\n    >\n\n      <styled.HeaderContainer>\n        <styled.Title>{props.title}</styled.Title>\n      </styled.HeaderContainer>\n      <styled.TextContainer>\n        <styled.TextMain>{props.textMain}</styled.TextMain>\n        <styled.Caption>{props.caption}</styled.Caption>\n      </styled.TextContainer>\n\n      <styled.ButtonForm>\n        {/* <styled.CancelButton   type={\"button\"} onClick={props.onContinueClick}>Continue</styled.CancelButton> */}\n      </styled.ButtonForm>\n\n    </styled.Container>\n  );\n};\n\nexport const HILModal = React.memo((props) => {\n\n  return(\n    <styled.Container\n      isOpen={props.isOpen}\n\n      contentLabel=\"Confirm Delete Modal\"\n    >\n\n\n      <styled.HeaderContainer>\n        <styled.Title>{props.title}</styled.Title>\n      </styled.HeaderContainer>\n      <styled.TextContainer>\n        <styled.TextMain>{props.textMain}</styled.TextMain>\n        <styled.Caption>{props.timer}</styled.Caption>\n      </styled.TextContainer>\n\n      <styled.ButtonForm>\n        <styled.Icon\n            secondary\n            onClick={() => props.hilSuccess()}\n            type=\"button\"\n            className='far fa-check-square fa-10x'\n          />\n          <styled.Icon\n              secondary\n              onClick={() => props.hilFailure()}\n              type=\"button\"\n              className='far fa-minus-square'\n              style={{color: 'red'}}\n          />\n      </styled.ButtonForm>\n      <styled.ButtonForm>\n        <SmallButton\n          secondary\n          onClick={() => props.onCancelClick()}\n          label={\"Cancel\"}\n          type=\"button\"\n        />\n      </styled.ButtonForm>\n\n\n    </styled.Container>\n  )\n})\n\n","import styled, {css} from 'styled-components'\n\nexport const Container = styled.div`\n    // border-width: thin;\n    // border-style: solid;\n    // border-color: ${props => props.hasError ? \"red\" : \"transparent\"};\n    // box-shadow:  ${props => props.hasError && \"0 0 5px red\"};\n    width: 100%;\n`;\n\nexport const StyledLabel = styled.label`\n  background: pink;\n  height: 3rem;\n`;\n\nexport const ErrorContainerComponent = styled.div`\n    // position: relative;\n    // width: auto;\n    // height: auto;\n    // margin-left: 1rem;\n    left: 50%;\n    // right: 1rem;\n    transform: translateX(50%);\n`;\n\n// export const DefaultButtonViewErrorCss = css`\n//     border-color: ${props => props.hasError && \"red\"};\n//     box-shadow:  ${props => props.hasError && \"0 0 5px red\"};\n// `;\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { useField, useFormikContext } from \"formik\";\n\n// import components\nimport ErrorTooltip from \"../error_tooltip/error_tooltip\";\nimport ButtonGroup from '../../button_group/button_group';\n\n// import styles\nimport * as style from './button_group_field.style'\nimport * as button_group_style from '../../button_group/button_group.style'\n\nconst ButtonGroupField = (\n    {\n        label,\n        containerStyle,\n        LabelComponent,\n        Container,\n        ButtonView,\n        Button,\n        ButtonViewStyle,\n        // ButtonViewErrorCss,\n        enableErrorTooltip,\n        ...props\n    }) => {\n\n    const { setFieldValue, setFieldTouched } = useFormikContext();\n    const [field, meta] = useField(props);\n    const hasError = meta.touched && meta.error;\n\n    return (\n        <>\n            {label &&\n                <LabelComponent htmlFor={props.id || props.name}>{label}</LabelComponent>\n            }\n\n            <style.Container\n                hasError={hasError}\n            >\n                {enableErrorTooltip &&\n                    <ErrorTooltip\n                        visible={hasError}\n                        text={meta.error}\n                        ContainerComponent={style.ErrorContainerComponent}\n                    />\n                }\n\n                <ButtonGroup\n                    {...field}\n                    {...props}\n                    hasError={hasError}\n                    Container={Container}\n                    // ButtonView={<Wrapper hasError={hasError}/>}\n                    ButtonView={ButtonView}\n                    // ButtonView={React.cloneElement(ButtonView, { size: 24 })}\n                    // ButtonView={renderClone(ButtonView)}\n                    Button={Button}\n                    selectedIndexes={field.value}\n                    onPress={(val) => {\n                        const isTouched = meta.touched;\n                        if (!isTouched) {\n                            setFieldTouched(field.name, true)\n                        }\n                        setFieldValue(field.name, val);\n                    }}\n                />\n            </style.Container>\n\n\n            {/*\n            {meta.touched && meta.error ? (\n\t\t\t\t<div className=\"error\">{meta.error}</div>\n\t\t\t) : null}\n            */}\n\n        </>\n    );\n};\n\n// Specifies propTypes\nButtonGroupField.propTypes = {\n\n};\n\n// Specifies the default values for props:\nButtonGroupField.defaultProps = {\n    LabelComponent: null,\n    // ButtonViewErrorCss: style.DefaultButtonViewErrorCss,\n    ButtonView: button_group_style.ButtonView,\n    enableErrorTooltip: true,\n};\n\nexport default ButtonGroupField;\n","// export function generateOptions(length, excludedOptions) {\n//   const arr = [];\n//   for (let value = 0; value < length; value++) {\n//     if (excludedOptions.indexOf(value) < 0) {\n//       arr.push(value);\n//     }\n//   }\n//   return arr;\n// }\n//\n// export function disabledHours(a,b,c,d) {\n//   return [];\n// }\n\nexport function disabledMinutes(h) {\n  switch (h) {\n    case 0:\n      return [0];\n    default:\n      return[];\n  }\n}\n\n// export function disabledSeconds(h, m) {\n//   return [h + m % 60];\n// }\n","import { TEMP_NEW_SCHEDULE_ID, DEFAULT_TASK_ID } from '../../constants/scheduler_constants';\nimport { timeString24HrToDate, uuidv4 } from './utils';\nimport moment from 'moment';\n\nconst timeStringRegex = '^(?:(?:([01]?\\d|2[0-3]):)?([0-5]?\\d):)?([0-5]?\\d)$'\nconst timeStringRegex2 = /^(?:(?:([01]?\\d|2[0-3]):)?([0-5]?\\d):)?([0-5]?\\d)$/\nconst timeStringRegex3 = /(?:[01]\\d|2[0123]):(?:[012345]\\d):(?:[012345]\\d)$/\n\nexport function getScheduleItemTemplate() {\n\n    let start_time = new Date();\n    start_time.setSeconds(0);\n    start_time.setHours(8);\n    start_time.setMinutes(0);\n    start_time = start_time.toTimeString().split(' ')[0];\n    start_time = moment(timeString24HrToDate(start_time))\n    // let start_time = '07:00:00';\n\n    // let  = '00:15:00';\n    let time_interval = new Date();\n    time_interval.setSeconds(0);\n    time_interval.setMinutes(15);\n    time_interval.setHours(0);\n    time_interval = time_interval.toTimeString().split(' ')[0];\n    time_interval = moment(timeString24HrToDate(time_interval))\n\n\n    let stop_time = new Date();\n    stop_time.setSeconds(0);\n    stop_time.setMinutes(0);\n    stop_time.setHours(20);\n    stop_time = stop_time.toTimeString().split(' ')[0];\n    stop_time = moment(timeString24HrToDate(stop_time))\n    // let stop_time =\"8:00:00 PM\";\n\n    const id = uuidv4();\n\n    return {\n        id: id,\n        _id: id,\n        task_id: DEFAULT_TASK_ID,\n        days_on: [],\n        interval_on: false,\n        schedule_on: true,\n        start_time: start_time,\n        time_interval: time_interval,\n        stop_time: stop_time,\n        new: true,\n        name: \"\",\n        task: []\n    }\n}\n\nexport function getScheduleItemTemplate2(timeString) {\n    return {\n        id: uuidv4(),\n        task_id: DEFAULT_TASK_ID,\n        days_on: {\n            friday: false,\n            monday: false,\n            saturday: false,\n            sunday: false,\n            thursday: false,\n            tuesday: false,\n            wednesday: false\n        },\n        interval_on: false,\n        schedule_on: false,\n        start_time: new Date().toTimeString().split(' ')[0],\n        time_interval: new Date().toTimeString().split(' ')[0],\n        label: \"\"\n    };\n}\n\nexport function formatScheduleItemOld(scheduleItem) {\n    console.log('formatScheduleItem scheduleItem', scheduleItem)\n    scheduleItem.id = scheduleItem._id.$oid;\n    if (!scheduleItem.name) scheduleItem.name = \"\";\n    if (!scheduleItem.label) scheduleItem.label = \"\";\n    if (!scheduleItem.task_id) scheduleItem.task_id = \"\";\n\n\n\n    const startTimeIsValid = timeStringRegex3.test(scheduleItem.start_time);\n    if (!startTimeIsValid) {\n        scheduleItem.start_time = \"00:00:00\";\n        scheduleItem.start_time_label = \"NOT SET\";\n    } else {\n        scheduleItem.start_time_label = scheduleItem.start_time;\n    }\n\n    const timeIntervalIsValid = timeStringRegex3.test(scheduleItem.time_interval);\n    if (!timeIntervalIsValid) {\n        scheduleItem.time_interval = \"00:00:00\";\n        scheduleItem.time_interval_label = \"NOT SET\";\n    } else {\n        scheduleItem.time_interval_label = scheduleItem.time_interval;\n    }\n\n    const stopTimeIsValid = timeStringRegex3.test(scheduleItem.stop_time);\n    if (!stopTimeIsValid) {\n        scheduleItem.stop_time = \"00:00:00\";\n        scheduleItem.stop_time_label = \"NOT SET\";\n    } else {\n        scheduleItem.stop_time_label = scheduleItem.stop_time;\n    }\n\n\n\n    console.log('startTimeIsValid', startTimeIsValid)\n    console.log('timeIntervalIsValid', timeIntervalIsValid)\n    console.log('stopTimeIsValid', stopTimeIsValid)\n\n    return scheduleItem;\n}\n\nexport function formatScheduleItem(scheduleItem) {\n\n\n    return scheduleItem;\n}\n\n/*\nfunction isSchedule(arg: any): arg is Schedule {\n    return arg && arg.prop && typeof(arg.prop) == 'number';\n}\n*/\n\nexport class Schedule_v2 {\n    constructor(apiResponse) {\n        this.days_on = {\n            friday: 'boolean',\n            monday: 'boolean',\n            saturday: 'boolean',\n            sunday: 'boolean',\n            thursday: 'boolean',\n            tuesday: 'boolean',\n            wednesday: 'boolean',\n        };\n\n        this.interval_on = 'boolean';\n        this.name = 'string';\n        this.precondition_id = 'string';\n        this.schedule_on = 'boolean';\n        this.start_time = 'string';\n        this.time_interval = 'string';\n    }\n}\n\nexport class Schedule {\n    constructor(apiResponse) {\n        let days_on = {\n            friday: 'boolean',\n            monday: 'boolean',\n            saturday: 'boolean',\n            sunday: 'boolean',\n            thursday: 'boolean',\n            tuesday: 'boolean',\n            wednesday: 'boolean',\n        };\n\n        let interval_on = 'boolean';\n        let name = 'string';\n        let precondition_id = 'string';\n        let schedule_on = 'boolean';\n        let start_time = 'string';\n        let time_interval = 'string';\n    }\n}\n\ninterface ScheduleInterface {\n    days_on: {\n        friday: string;\n        monday: boolean;\n        saturday: boolean;\n        sunday: boolean;\n        thursday: boolean;\n        tuesday: boolean;\n        wednesday: boolean;\n    },\n    interval_on: boolean;\n    name: string;\n    precondition_id: string;\n    schedule_on: boolean;\n    start_time: string;\n    time_interval: string;\n}\n","export const getMinutesFromMoment = (m) => {\n    return m.minutes() + m.hours() * 60;\n}","import styled from 'styled-components'\nimport { css } from 'styled-components'\nimport { Form } from 'formik';\n\n// import components\nimport TimePickerField from '../../../../basic/form/time_picker_field/time_picker_field';\n\nimport { globStyle } from '../../../../../global_style';\nimport { hexToRGBA } from '../../../../../methods/utils/color_utils';\n\nexport const FadeLoaderCSS = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\nexport const FieldLabel = styled.label`\n    padding: 0;\n    width: 100%;\n    font-size: ${props => props.theme.fontSize.sz2};\n    font-family: ${props => props.theme.font.primary};\n    color: ${props => props.theme.bg.septenary};\n`\n\nexport const RowContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    margin-top: 1rem;\n    justify-items: space-between;\n    justify-content: center;\n    align-items: center;\n`;\n\nexport const FlexContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n\n    /* @media (min-width: ${props => props.theme.widthBreakpoint.tablet}) {\n      flex-direction: row;\n      width: 40rem;\n    } */\n`;\n\nexport const FlexBox = styled.div`\n    /* width: 100%; */\n    /* min-width: 15rem; */\n    /* margin-right: 3rem; */\n`;\n\nexport const ToggleTextLeft = styled.h1`\n    font-size: ${props => props.theme.fontSize.sz3};\n    font-family: ${props => props.theme.font.primary};\n    display: flex;\n    margin-top: 0.2rem;\n    padding-right: 0.8rem;\n    color: ${props => props.theme.bg.octonary};\n\n`;\n\nexport const ToggleTextRight = styled.h1`\n    font-size: ${props => props.theme.fontSize.sz3};\n    font-family: ${props => props.theme.font.primary};\n    display: flex;\n    margin-top: 0.2rem;\n    padding-left: 0.8rem;\n    color: ${props => props.theme.bg.octonary};\n\n`;\n\n\n\n\nexport const ErrorComponent = styled.span`\n  color: ${props => props.theme.bad};\n  font-size: ${props => props.theme.fontSize.sz4};\n  font-weight: 600;\n  margin-top: .5rem;\n  align-self: center;\n`;\n\n\n\nexport const StyledForm = styled(Form)`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    max-width: 100%;\n    max-height: 100%;\n    padding: 1rem;\n    \n    overflow-x: hidden;\n`;\n\nexport const ContentContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n    /* overflow-y: scroll; */\n    padding: 1rem;\n    max-width: 100%;\n    overflow-x: hidden;\n`\n\nexport const FooLabel = styled.div``;\n\n// text input\n// ************************************\n// ************************************\nexport const Input = styled.input`\n    background-color: ${props => props.theme.bg.secondary};\n    border: 1px solid ${props => props.theme.bg.primary};\n    font-size: ${props => props.theme.fontSize.sz8};\n    font-family: ${props => props.theme.font.primary};\n    display: flex;\n    flex-grow: 1;\n    color: ${props => props.theme.bg.septenary};\n\n    &:focus {\n        outline: none;\n        border: 1px solid ${props => props.theme.fg.primary};\n        color: ${props => props.theme.bg.septenary};\n        box-shadow: none;\n        background-color: ${props => props.theme.bg.secondary};\n    }\n\n    &::placeholder {\n        font-size: ${props => props.theme.fontSize.sz8};\n        font-family: ${props => props.theme.font.secondary};\n        color: ${props => props.theme.bg.quaternary};\n    }\n`;\n\nexport const InputContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding-bottom: 1rem;\n  width: 100%;\n`;\n\nexport const InputLabel = styled.label`\n    width: 100%;\n    padding: 0;\n    margin-bottom: 1rem;\n    font-size: ${props => props.theme.fontSize.sz2};\n    font-family: ${props => props.theme.font.primary};\n    color: ${props => props.theme.bg.septenary};\n`;\n\nexport const TitleTextbox = styled.input`\n    background-color: ${props => props.theme.bg.secondary};\n    border-color: ${props => props.theme.bg.primary};;\n    font-size: ${props => props.theme.fontSize.sz2};\n    font-family: ${props => props.theme.font.primary};\n    display: flex;\n    flex-grow: 1;\n\n    &:focus {\n        border: 1px solid ${props => props.theme.fg.primary};\n        color: ${props => props.theme.bg.septenary};\n        box-shadow: none;\n        background-color: ${props => props.theme.bg.secondary};\n    }\n\n    &::placeholder {\n        font-size: ${props => props.theme.fontSize.sz2};\n        font-family: ${props => props.theme.font.secondary};\n        color: ${props => props.theme.bg.quaternary};\n    }\n`;\n// ************************************\n// ************************************\n\n\n// drop down field\n// ************************************\n// ************************************\nexport const SelectContainer = styled.div`\n  width: 100%;\n  flex-direction: column;\n  z-index: 2;\n  text-align: center;\n  padding-bottom: 2rem;\n\n`;\n\nexport const ContentComponent = styled.div`\n  display: flex;\n  flex: 1;\n  flex-wrap: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n`;\n\nexport const SelectItemComponent = styled.span`\n  padding: .5rem 1rem .5rem 1rem;\n  cursor: pointer;\n  border-bottom: 1px solid ${globStyle.white};\n  white-space: wrap;\n  display: flex;\n  justify-content: space-between;\n  font-family: ${globStyle.font};\n  flex: 1;\n  max-width: 100%;\n\n  &.react-dropdown-select-item-active {\n    border-bottom: 1px solid ${globStyle.white};\n    ${({ disabled, color }) => !disabled && color && `background: ${hexToRGBA(color, 0.1)};`}\n  }\n\n  :hover,\n  :focus {\n    background: ${globStyle.grey5};\n    outline: none;\n  }\n\n  &.react-dropdown-select-item-selected {\n    ${({ disabled, color }) =>\n        disabled\n            ? `\n    background: ${globStyle.red};\n    color: ${globStyle.black};\n    `\n            : `\n    background: ${globStyle.red};\n    color: ${globStyle.black};\n    border-bottom: 1px solid ${globStyle.white};\n    `}\n  }\n\n  ${({ disabled }) =>\n        disabled\n            ? `\n    background: ${globStyle.white};\n    color: ${globStyle.grey3};\n\n    ins {\n      text-decoration: none;\n      border:1px solid #ccc;\n      border-radius: 2px;\n      padding: 0px 3px;\n      font-size: x-small;\n      text-transform: uppercase;\n    }\n    `\n            : ''}\n\n    background-color: ${globStyle.white};\n`;\n\nexport const TextComponent = styled.span`\n  overflow: wrap;\n  white-space: wrap;\n  flex-wrap: wrap;\n  max-width: 100%;\n\n`;\n\n\nexport const SelectLabel = styled.label`\nwidth: 100%;\npadding: 0;\nmargin-bottom: 1rem;\nfont-size: ${props => props.theme.fontSize.sz2};\nfont-family: ${props => props.theme.font.primary};\ncolor: ${props => props.theme.bg.septenary};\n\n`;\n// ************************************\n// ************************************\n\n// ButtonGroup\n// ************************************\n// ************************************\nexport const ButtonGroupContainer = styled.div`\n  background: transparent;\n  align-items: start;\n  width: 100%;\n  max-width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: start;\n  padding-bottom: 2rem;\n\n`;\n\n\n\n// ************************************\n// ************************************\n\nexport const StyledErrorMessage = styled.div`\n\n`;\n\n// date picker\n// ************************************\n// ************************************\n\nconst sharedTimePickerContainerStyle = css`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  align-items: center;\n  flex-wrap: wrap;\n`\n\nexport const TimePickerContainer = styled.div`\n  ${sharedTimePickerContainerStyle}\n  justify-content: center;\n  width: 100%;\n  \n  padding-top: 0.5rem;\n  flex-direction: row;\n`;\n\nexport const TimePickerErrorComponent = styled.span`\n  color: ${props => props.theme.bad};\n  font-size: ${props => props.theme.fontSize.sz4};\n  font-weight: 600;\n  margin-top: .25rem;\n`;\n\nexport const StopTimePickerContainer = styled.div`\n  ${sharedTimePickerContainerStyle}\n  justify-content: flex-start;\n  padding-bottom:2rem;\n  width: 100%;\n  font-size: ${props => props.theme.fontSize.sz2};\n  font-family: ${props => props.theme.font.primary};\n  color: ${props => props.theme.bg.septenary};\n`;\n\nexport const StyledTimePickerField = styled(TimePickerField)`\n\n`;\n\n\nexport const SwitchLabel = styled.label`\n\n`;\n\nexport const DatePickerLabel = styled.label`\n  font-size: ${props => props.theme.fontSize.sz4};\n  font-family: ${props => props.theme.font.primary};\n  color: ${props => props.theme.bg.septenary};\n\n  // flex-grow: 1;\n  // flex-basis: 12rem;\n\n  line-height: 2.5rem;\n  width: 7rem;\n  margin-right: 1rem;\n`;\n// ************************************\n// ************************************\n\n\n\n// bottom buttons\n// ************************************\n// ************************************\nexport const FormButtonsContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  background: transparent;\n    width: 100%;\n  justify-content: center;\n`;\n\nexport const FormButton = styled.button`\n\n\n`;\n// ************************************\n// ************************************\n","import styled, {css} from 'styled-components';\n\nexport const Container = styled.div`\n    width: 100%;\n    max-width: 100%;\n    background: transparent;\n    border-color: transparent;\n    border-width: 0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-wrap: wrap;\n    \n    word-break: break-all;\n    \n`\n\nexport const Button = styled.button`\n    // width: 7rem;\n\n    background: transparent;\n    outline: none !important;\n    outline-offset: none !important;\n    border-color: transparent;\n    border-width: 0;\n\n    margin-bottom: 0.5rem;\n    word-break: break-all;\n    \n`\n\nexport const buttonViewCss = css`\n\tword-break: break-all;\n`\n\nexport const ButtonView = styled.div`\n\n    flex-grow: 1;\n\n    @media (max-width: ${props => props.theme.widthBreakpoint.tiny}) {\n        height: 7rem;\n        line-height: 7rem;\n    }\n\n    background: ${props => props.isSelected ? props.theme.schema['scheduler'].solid : 'transparent'};\n    color: ${props => props.isSelected ? props.theme.bg.primary : props.theme.bg.octonary};\n\n    outline: none !important;\n    outline-offset: none !important;\n    padding: .75rem;\n    margin-left: -0.2rem;\n    margin-bottom: .5rem;\n    border-radius: .3rem;\n    border-width: .15rem;\n    border-color: ${props => props.theme.schema['scheduler'].solid};\n\n    border-style: solid;\n\n\n    font-size: ${props => props.theme.fontSize.sz4};\n    font-family: ${props => props.theme.font.primary};\n    font-weight: 400;\n    @media ${props => props.theme.widthBreakpoint.mobileL} {\n      padding: .25rem;\n      fontSize: ${props => props.theme.fontSize.sz5};\n    }\n    \n    border-color: ${props => props.hasError && \"red\"};\n    box-shadow:  ${props => props.hasError && \"0 0 5px red\"};\n    word-break: break-all;\n`\n","// import external dependencies\nimport React, { useContext, useState } from 'react'\nimport PropTypes from 'prop-types'\n\n// import external components\nimport FadeLoader from \"react-spinners/FadeLoader\"\n\n// external functions\nimport { Formik } from 'formik'\nimport { ThemeContext } from \"styled-components\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport moment from 'moment'\n\n// import components\nimport ContentHeader from '../../content_header/content_header'\nimport ButtonGroupField from '../../../../basic/form/button_group_field/button_group_field'\nimport TextField from '../../../../basic/form/text_field/text_field.js'\nimport SwitchField from '../../../../basic/form/switch_field/switch_field.js'\nimport DropDownSearchField from '../../../../basic/form/drop_down_search_field/drop_down_search_field.js'\nimport Button from '../../../../basic/button/button'\nimport BackButton from \"../../../../basic/back_button/back_button\"\nimport Textbox from \"../../../../basic/textbox/textbox\";\n\n// import utils\nimport * as helpers from './create_schedule_form.helpers'\nimport { daysOfTheWeek } from '../../../../../constants/scheduler_constants'\nimport { FORM_MODES } from '../../../../../constants/scheduler_constants'\nimport { scheduleSchema } from '../../../../../methods/utils/form_schemas'\nimport { timeString24HrToDate } from \"../../../../../methods/utils/utils\"\nimport { getScheduleItemTemplate } from \"../../../../../methods/utils/schedules_utils\"\nimport { getMinutesFromMoment } from \"../../../../../methods/utils/time_utils\"\n\n// actions\nimport { postSchedule, putSchedule } from \"../../../../../redux/actions/schedule_actions\"\nimport { getTasks } from \"../../../../../redux/actions/tasks_actions\";\n\n// import styles\nimport * as styled from './create_schedule_form.style'\nimport * as pageStyle from '../scheduler_content.style'\nimport * as ButtonGroupComponents from './button_group.style'\n\n// logger\nimport log from '../../../../../logger'\n\nconst logger = log.getLogger(\"CreateScheduleForm\", \"Scheduler\")\nlogger.setLevel(\"silent\")\n\nconst widthBreakPoint = 525\n\nconst CreateScheduleForm = (props) => {\n\n    const {\n        onDeleteClick,\n        hideScheduleCreator,\n        selectedScheduleId,\n        setSelectedScheduleId,\n        schedules,\n        tasks,\n    } = props\n\n    const dispatch = useDispatch()\n\n    const width = useSelector(state => state.sidebarReducer.width)\n    const currentMap = useSelector(state => state.mapReducer.currentMap)\n    const isSmall = width < widthBreakPoint\n\n    const tasksArr = Object.values(tasks).filter((task) => task.map_id === currentMap._id) // get copy of tasks as arr here instead of calling Object.values() multiple times\n\n    const themeContext = useContext(ThemeContext)\n\n    /*\n    * submission logic for form\n    *\n    * extracts form values into a new object that will be send as either a POST or PUT request depending on whether a new item is being created, or an existing item modified\n    *\n    * expected fields\n    *   start_time: Moment\n    *   time_interval: Moment\n    *   stop_time: Moment\n    *   days_on: array - [1,2,3]\n    *   name: string - \"this is a name\"\n    *   task: array of objects - [{}]\n    *   interval_on: bool - false\n    * */\n    const handleSubmit = async (values, formMode) => {\n\n        // convert days_on from array of indices to object with the days as keys and values as either true or false\n        const days_on = {}\n        Object.values(daysOfTheWeek).forEach((day, ind, arr) => {\n            days_on[day] = values.days_on.includes(ind)\n        })\n\n        const {\n            task,\n            name,\n            schedule_on,\n            start_time,\n            interval_on,\n            time_interval,\n            stop_time,\n            map_id,\n            next_time\n        } = values\n\n        // eextract properties into new object for submission\n        const submitItem = {\n            task_id: task[0]?._id,\n            days_on,\n            name: name,\n            schedule_on: schedule_on,\n            start_time: start_time.format(\"HH:mm:ss\"),\n            interval_on: interval_on,\n            time_interval: time_interval.format(\"HH:mm:ss\"),\n            stop_time: stop_time.format(\"HH:mm:ss\"),\n            next_time: next_time,\n            map_id: map_id,\n        }\n\n        // update existing object - PUT request\n        if (formMode === FORM_MODES.UPDATE) {\n            // dispatch update action\n            dispatch(putSchedule(selectedScheduleId, submitItem))\n\n            // create new object - POST request\n        } else if (formMode === FORM_MODES.CREATE) {\n            // dispatch post action\n            const createdSchedule = await dispatch(postSchedule(submitItem))\n            setSelectedScheduleId(createdSchedule?._id?.$oid) // set selected schedule id, which will update the form mode from create to update\n        }\n\n        // close form optionally\n        hideScheduleCreator()\n    }\n\n    /*\n    * returns the initial values for the form\n    *\n    * initial values are found by finding the schedule from redux with the id matching selectedScheduleId passed via props\n    * If selectedScheduleId is null, or no matching schedule is found, a template for creating a new schedule is returned instead\n    * */\n    const getInitialValues = () => {\n\n        // Gets the selected schedule for the list of schedules\n        let selectedScheduleItem = schedules[selectedScheduleId]\n        logger.log(\"getInitialValues selectedScheduleItem\", selectedScheduleItem)\n        logger.log(\"getInitialValues selectedScheduleId\", selectedScheduleId)\n\n        // get initial values from schedule\n        if (selectedScheduleItem) {\n\n            // convert days_on from object to array of indices (required for button group)\n            const days_on = []\n            if (selectedScheduleItem) {\n                Object.values(daysOfTheWeek).forEach((val, ind) => {\n                    if (selectedScheduleItem.days_on[val]) days_on.push(ind)\n                })\n            }\n\n            // default time value for time fields that don't exist\n            const nowDate = new Date()\n            const nowTimeString = moment(timeString24HrToDate(nowDate))\n\n            // create new object with required properties\n            const initialValues = {\n                days_on: days_on,\n                start_time: selectedScheduleItem.start_time ? moment(timeString24HrToDate(selectedScheduleItem.start_time)) : nowTimeString,\n                schedule_on: selectedScheduleItem.schedule_on,\n                time_interval: selectedScheduleItem.time_interval ? moment(timeString24HrToDate(selectedScheduleItem.time_interval)) : nowTimeString,\n                interval_on: selectedScheduleItem.interval_on,\n                next_time: selectedScheduleItem.next_time,\n                map_id: currentMap._id,\n                stop_time: selectedScheduleItem.stop_time ? moment(timeString24HrToDate(selectedScheduleItem.stop_time)) : nowTimeString,\n                name: selectedScheduleItem.name ? selectedScheduleItem.name : '',\n                selectedScheduleId: selectedScheduleItem.id,\n                task: (selectedScheduleItem.task_id && tasks[selectedScheduleItem.task_id]) ?\n                    [tasks[selectedScheduleItem.task_id]]\n                    :\n                    // if task id equals TASK DELETED, the corresponding task has been deleted,\n                    // set task property to reflect this\n                    selectedScheduleItem.task_id == 'TASK DELETED' ?\n                        [{\n                            _id:\n                                \"TASK DELETED\"\n                            ,\n                            name: 'TASK DELETED'\n                        }]\n                        :\n                        // NO task, and task id isn't deleted, set set to default value that will prevent the dropdownsearch from throwing an error\n                        [{\n                            _id:\n                                \"TEMP_NEW_SCHEDULE_ID\"\n                            ,\n                            name: ''\n                        }],\n            }\n\n            return initialValues\n\n            // no schedule was found, return template\n        } else {\n            let newScheduleTemplate = getScheduleItemTemplate()\n            newScheduleTemplate.map_id = currentMap._id\n            return newScheduleTemplate\n        }\n    }\n\n    /*\n    * performs additional validation not covered by the schema\n    * some validation is easier to perform this way rather than in the schema\n    * */\n    const validate = async (values, initialValues) => {\n        logger.log('handleValidate: values:', values)\n\n        // validate gets called every time form changes\n        // so this can be used to handle any desired on change function\n        // handleFormChange(values, initialValues)\n\n        // initialize empty error object\n        var errors = {}\n\n        // stop time  must be greater than start time:\n        {\n            const { start_time, stop_time, interval_on } = values\n\n            if (interval_on) {\n                const startMin = getMinutesFromMoment(start_time)\n                const stopMin = getMinutesFromMoment(stop_time)\n\n                if (startMin >= stopMin) {\n                    errors.stop_time = \"Stop time must be greater than start time.\"\n                }\n            }\n        }\n\n        // return error object\n        return errors\n    }\n\n    /*\n    * use to implement any desired on change logic\n    * not currently used, but left so it can be easily implemented if desired\n    * */\n    const handleFormChange = (values, initialValues) => {\n        // not currently used, but can add logic here for any time a form value changes\n    }\n\n    const initialValues = getInitialValues() // get initial values\n    const formMode = selectedScheduleId ? FORM_MODES.UPDATE : FORM_MODES.CREATE // if a schedule id was passed, form is being used to edit an existing item, otherwise a new item is being created\n\n    return (\n        <Formik\n            initialValues={initialValues}\n\n            // validation control\n            validationSchema={scheduleSchema}\n            validateOnChange={true}\n            validate={(values) => validate(values, initialValues)}\n            validateOnMount={false} // leave false, if set to true it will generate a form error when new data is fetched\n            validateOnBlur={true}\n\n            enableReinitialize={false} // leave false, otherwise values will be reset when new data is fetched for editing an existing item\n            onSubmit={async (values, { setSubmitting, setTouched }) => {\n                // set submitting to true, handle submit, then set submitting to false\n                // the submitting property is useful for eg. displaying a loading indicator\n                setSubmitting(true)\n                await handleSubmit(values, formMode)\n                setTouched({}) // after submitting, set touched to empty to reflect that there are currently no new changes to save\n                setSubmitting(false)\n            }}\n        >\n            {formikProps => {\n\n                // extract common properties from formik\n                const { errors, values, touched, isSubmitting } = formikProps\n\n                // use this instead of validateOnMount\n                // validateOnMount will cause an error when new data is fetched\n                // eg. when the tasks dropdown is opened, it fetches tasks from the backend, this trigger a remount, which will then create an undesired form error\n                // if( (formMode === FORM_MODES.UPDATE) && (submitCount === 0) ) submitForm()\n\n                // get number of field errors\n                const errorCount = Object.keys(errors).length > 0\n\n                // get number of touched fields\n                const touchedReducer = (accumulator, currentValue) => (currentValue === true) ? accumulator + 1 : accumulator\n                const touchedCount = Object.values(touched).reduce(touchedReducer, 0)\n\n                // submit disabled if:\n                //      form contains any errors\n                //      no fields have been touched\n                //      form is currently submitting\n                const submitDisabled = (errorCount > 0) || (touchedCount === 0) || isSubmitting\n\n                return (\n                    (\n                        <styled.StyledForm>\n                            <ContentHeader\n                                content={'scheduler'}\n                                mode={'create'}\n                                onClickBack={hideScheduleCreator}\n                                onClickSave={() => formikProps.submitForm()}\n                                disabled={submitDisabled}\n                            // Need to figure out how to submit formik using this method. No internet atm so this'll have to wait\n\n                            />\n\n                            <styled.ContentContainer>\n                                <FadeLoader\n                                    css={styled.FadeLoaderCSS}\n                                    height={5}\n                                    width={3}\n                                    loading={isSubmitting}\n                                />\n\n                                <styled.FieldLabel>{'Schedule Name'}</styled.FieldLabel>\n                                <styled.InputContainer className=\"form-group\">\n                                    <TextField\n                                        name=\"name\"\n                                        type=\"text\"\n                                        placeholder=\"Schedule Name\"\n                                        InputComponent={Textbox}\n                                    />\n                                </styled.InputContainer>\n\n                                <styled.SelectContainer>\n                                    <DropDownSearchField\n                                        pattern={null}\n                                        name=\"task\"\n                                        options={tasksArr\n                                            // Filters outs any tasks that don't belong to the current map\n                                            .filter(task => task.map_id === currentMap._id)\n                                        }\n                                        // valueField={tasksArr.length > 0 ? \"_id.$oid\" : 'id'}\n                                        valueField={tasksArr.length > 0 ? \"_id\" : 'id'}\n                                        label={'Choose Task'}\n                                        onDropdownOpen={() => {\n                                            dispatch(getTasks())\n                                        }}\n                                        labelField={'name'}\n                                    />\n                                </styled.SelectContainer>\n\n                                <styled.FieldLabel>Schedule</styled.FieldLabel>\n                                <styled.ButtonGroupContainer>\n                                    <ButtonGroupField\n                                        name=\"days_on\"\n                                        buttons={Object.values(daysOfTheWeek)}\n                                        selectMultiple\n                                        Container={ButtonGroupComponents.Container}\n                                        ButtonView={ButtonGroupComponents.ButtonView}\n                                        Button={ButtonGroupComponents.Button}\n                                        buttonViewCss={ButtonGroupComponents.buttonViewCss}\n                                    />\n                                </styled.ButtonGroupContainer>\n\n                                <styled.RowContainer style={{ marginBottom: '2.5rem' }}>\n                                    <styled.ToggleTextLeft>{'Interval Off'}</styled.ToggleTextLeft>\n                                    <SwitchField\n                                        name=\"interval_on\"\n                                        onColor={themeContext.schema.scheduler.solid}\n                                        LabelComponent={styled.SwitchLabel}\n                                    />\n                                    <styled.ToggleTextRight>{'Interval On'}</styled.ToggleTextRight>\n                                </styled.RowContainer>\n\n                                <styled.RowContainer>\n                                    {/*\n                                        <styled.DatePickerLabel>Start Time</styled.DatePickerLabel>\n                                    */}\n\n                                    <styled.TimePickerContainer>\n                                        <styled.StyledTimePickerField\n                                            LabelComponent={styled.DatePickerLabel}\n                                            label=\"Start Time\"\n                                            name=\"start_time\"\n                                            use12Hours\n                                            format={'h:mm a'}\n                                            ErrorComponent={styled.TimePickerErrorComponent}\n                                            autoComplete=\"off\"\n                                            autoCorrect=\"off\"\n                                            spellCheck=\"off\"\n                                        />\n                                        {/*<SwitchField\n                                          name=\"scheduleOn\"\n                                          LabelComponent={styled.ButtonGroupLabel}\n                                        />*/}\n                                    </styled.TimePickerContainer>\n                                </styled.RowContainer>\n\n                                <styled.RowContainer>\n                                    {/*\n                                        <styled.DatePickerLabel>Time Interval</styled.DatePickerLabel>\n                                    */}\n\n                                    <styled.TimePickerContainer>\n                                        <styled.StyledTimePickerField\n                                            LabelComponent={styled.DatePickerLabel}\n                                            label=\"Time Interval\"\n                                            name=\"time_interval\"\n                                            // disabledHours={helpers.disabledHours}\n                                            disabledMinutes={helpers.disabledMinutes}\n                                            ErrorComponent={styled.TimePickerErrorComponent}\n                                            use12Hours={false}\n                                            disabled={!values.interval_on}\n                                            autoComplete=\"off\"\n                                            autoCorrect=\"off\"\n                                            spellCheck=\"off\"\n                                        // format = {'h:mm'}\n                                        />\n                                    </styled.TimePickerContainer>\n                                </styled.RowContainer>\n\n                                <styled.RowContainer>\n                                    {/*\n                                        <styled.DatePickerLabel>Stop Time</styled.DatePickerLabel>\n                                    */}\n\n                                    <styled.TimePickerContainer>\n                                        <styled.StyledTimePickerField\n                                            LabelComponent={styled.DatePickerLabel}\n                                            label=\"Stop Time\"\n                                            name=\"stop_time\"\n                                            ErrorComponent={styled.TimePickerErrorComponent}\n                                            use12Hours\n                                            format={'h:mm a'}\n                                            disabled={!values.interval_on}\n                                            autoComplete=\"off\"\n                                            autoCorrect=\"off\"\n                                            spellCheck=\"off\"\n                                        />\n                                    </styled.TimePickerContainer>\n                                </styled.RowContainer>\n\n\n                                <styled.FormButtonsContainer>\n\n                                    {/* delete button only makes sense for a schedule that has been created */}\n                                    {/* {formMode === FORM_MODES.UPDATE && */}\n                                    <Button schema={'scheduler'} secondary style={{ display: 'inline-block', float: 'right', width: '100%', maxWidth: '10rem', marginTop: '2rem' }}\n                                        onClick={() => {\n                                            onDeleteClick()\n                                        }}\n                                        type={\"button\"}\n                                    >\n                                        Delete\n                                    </Button>\n                                    {/* } */}\n\n                                </styled.FormButtonsContainer>\n                            </styled.ContentContainer>\n                        </styled.StyledForm>\n                    )\n                )\n            }}\n        </Formik>\n    )\n}\n\nCreateScheduleForm.propTypes = {\n    onDeleteClick: PropTypes.func,\n    hideScheduleCreator: PropTypes.func,\n    selectedScheduleId: PropTypes.string,\n    setSelectedScheduleId: PropTypes.func,\n}\n\nCreateScheduleForm.defaultProps = {\n    onDeleteClick: () => { },\n    hideScheduleCreator: () => { },\n    selectedScheduleId: \"\",\n    setSelectedScheduleId: () => { },\n}\n\nexport default CreateScheduleForm\n","import React, { useState} from 'react'\n\n// external funcs\nimport {useDispatch, useSelector} from 'react-redux'\n\n// import components\nimport ScheduleList from './schedule_list/schedule_list'\nimport {ConfirmDeleteModal} from \"../../../basic/modals/modals\"\nimport CreateScheduleForm from \"./create_schedule_form/create_schedule_form\"\n\n// import styles\nimport * as styled from './scheduler_content.style'\n\n// logging\nimport log from '../../../../logger.js'\nimport {deleteSchedule} from \"../../../../redux/actions/schedule_actions\";\nconst logger = log.getLogger(\"Schedule\")\n\nconst SchedulerContent = () => {\n\n    // dispatch\n    const dispatch = useDispatch()\n\n    // self contained state\n    const [selectedScheduleId, setSelectedScheduleId] = useState(null)\n    const [showScheduleCreator, setShowScheduleCreator] = useState(false)\n    const [showDeleteModal, setShowDeleteModal] = useState(false)\n\n    // redux state\n    const tasks = useSelector(state => {return state.tasksReducer.tasks})\n    const schedules = useSelector(state => {\n        return state.schedulesReducer.schedules\n    })\n\n    const handleSelectTask = (taskId) => {\n        setSelectedScheduleId(taskId)\n        setShowScheduleCreator(true)\n    }\n\n    const handleDelete = async () => {\n        // get schedule item - clone to avoid directly modifying redux state\n        const foundScheduleItem = schedules[selectedScheduleId]\n\n        if (foundScheduleItem) {\n            // dispatch action to make delete request to api and update redux\n            await dispatch(deleteSchedule(selectedScheduleId))\n        }\n\n        setShowDeleteModal(false)\n        setShowScheduleCreator(false)\n    }\n    return (\n        <styled.Container>\n            <ConfirmDeleteModal\n                isOpen={showDeleteModal}\n                title={\"Confirm Delete\"}\n                textMain={\"Are you sure you want to delete this schedule?\"}\n                caption={\"This action cannot be undone.\"}\n                onCancelClick={()=>setShowDeleteModal(false)}\n                onDeleteClick={handleDelete}\n            />\n            {showScheduleCreator ?\n                <CreateScheduleForm\n                    selectedScheduleId={selectedScheduleId}\n                    onDeleteClick={() => setShowDeleteModal(true)}\n                    setSelectedScheduleId={setSelectedScheduleId}\n                    hideScheduleCreator={()=> {\n                        setShowScheduleCreator(false)\n                        setSelectedScheduleId(null)\n                    }}\n                    schedules={schedules}\n                    tasks={tasks}\n\n                />\n                :\n                <ScheduleList\n                    selectedScheduleId={selectedScheduleId}\n                    handleSelectTask={handleSelectTask}\n                    schedules={schedules}\n                    setShowScheduleCreator={setShowScheduleCreator}\n                    setSelectedScheduleId = {(id)=>setSelectedScheduleId(id)}\n                    openSchedule={(id) => {\n                        setSelectedScheduleId(id)\n                        setShowScheduleCreator(true)\n                    }}\n                    tasks={tasks}\n                />\n            }\n        </styled.Container>\n    )\n}\n\nexport default SchedulerContent\n","import styled, { css } from 'styled-components'\nimport { RGB_Linear_Shade, hexToRGBA } from '../../../../methods/utils/color_utils'\nimport * as commonCss from \"../../../../common_css/common_css\";\n\n\n// ========== Content ========== //\nexport const DefaultContainer = styled.div`\n\tpostion: relative;\n`;\n\n\nexport const DefaultErrorTooltipContainerComponent = styled.div`\n  margin: 0 1rem;\n`\n\n\nexport const ListItem = styled.div`\n    display: flex;\n    align-items: center;\n    width: auto;\n    height: 3rem;\n    text-overflow: ellipsis;\n    justify-content: space-between;\n    background: transparent;\n    padding: 0rem 1rem;\n\n    border-radius: 0.5rem;\n    border: 0.1rem solid;\n    border-color:  white;\n  \n    // border-color: ${props => props.isNew ? 'blue' : 'white'};\n\n  ${props => props.isNew &&  commonCss.newGlow};\n  ${props => props.edited &&  commonCss.newGlow};\n  ${props => props.error &&  commonCss.errorGlow};\n    \n\n`\n\nexport const ListItemRect = styled.div`\n    height: 100%;\n    width: 100%;\n\n    border-radius: 0.5rem;\n    text-align: center;\n    padding-right:0.5rem;\n    cursor: pointer;\n    user-select: none;\n\n    border: 0.1rem solid white;\n    box-sizing: border-box;\n\n    &:hover {\n        background: ${props => props.theme.bg.octonary};\n    }\n\n`\nexport const ListItemTitle = styled.h1`\n\n    font-family: ${props => props.theme.font.primary};\n    /* font-size: ${props => props.theme.fontSize.sz3}; */\n    font-size: 1rem;\n    font-weight: 500;\n    color: ${props => props.theme.bg.octonary};\n\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    margin-right:0.5rem;\n    margin-bottom: 0rem;\n    width: 75%;\n`\n\nconst disabledCss = css`\n  color: ${props => props.theme.disabled};\n  \n  &:hover {\n    cursor: default;\n    color: ${props => props.theme.disabled};\n  }\n`\n\nexport const ListItemIcon = styled.i`\n\n    font-size: 1.3rem;\n    color: lightgreen;\n    \n\n\n\n    &:hover {\n        cursor: pointer;\n        color:green;\n    }\n  \n    ${props => props.disabled && disabledCss};\n`\n\n\n\nexport const ListItemIconContainer = styled.div`\n    position: relative;\n    display: flex;\n    //width: 10%;\n`","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { useField, useFormikContext } from \"formik\";\n\nimport ErrorTooltip from '../error_tooltip/error_tooltip';\nimport * as styled from './list_item_field.style'\nimport {getMessageFromError} from \"../../../../methods/utils/form_utils\";\n\nconst ListItemField = (props) => {\n\tconst {\n\t\tContainer,\n\t\tcontainerStyle,\n\t\tErrorTooltipContainerComponent,\n\t\tonMouseEnter,\n\t\tonMouseLeave,\n\t\tonIconClick,\n\t\tonEditClick,\n\t\tonTitleClick,\n\t\t...rest\n\t} = props\n\n\tconst { setFieldValue, setFieldTouched, validateOnChange, validateOnBlur, validateField, validateForm, ...context } = useFormikContext();\n\tconst [field, meta] = useField(rest);\n\tconst {\n\t\tvalue: fieldValue,\n\t\tname: fieldName\n\t} = field\n\n\tconst {\n\t\tname,\n\t\tnew: isNew,\n\t\tchanged,\n\t\tunsaved\n\t} = fieldValue\n\n\tconst {\n\t\ttouched,\n\t\terror\n\t} = meta\n\n\tconst hasError = error\n\tconst errorMessage = getMessageFromError(error)\n\n\tconst edited = changed\n\n\tconst disabled = hasError || isNew || edited || unsaved\n\n\n\treturn (\n\t\t<Container\n\t\t\tstyle={containerStyle}\n\t\t>\n\t\t<styled.ListItem\n\t\t\tedited={edited}\n\t\t\terror={hasError}\n\t\t\tisNew={isNew || unsaved}\n\t\t\tonMouseEnter={onMouseEnter}\n\t\t\tonMouseLeave={onMouseLeave}\n\t\t>\n\t\t\t<styled.ListItemIconContainer style={{ width: '15%' }}>\n\t\t\t\t<styled.ListItemIcon\n\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\tclassName='fas fa-play'\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tif(!disabled) onIconClick()\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</styled.ListItemIconContainer>\n\n\t\t\t{/* <styled.ListItemTitle schema={props.schema} onClick={() => props.onClick(element)}>{element.name}</styled.ListItemTitle> */}\n\t\t\t<styled.ListItemTitle\n\t\t\t\tschema={'processes'}\n\t\t\t\tonClick={onTitleClick}\n\t\t\t>\n\t\t\t\t{name}\n\t\t\t</styled.ListItemTitle>\n\n\t\t\t<styled.ListItemIconContainer>\n\n\t\t\t\t<styled.ListItemIcon\n\t\t\t\t\tclassName='fas fa-edit'\n\t\t\t\t\tonClick={onEditClick}\n\t\t\t\t\tstyle={{ color: '#c6ccd3' }}\n\t\t\t\t/>\n\n\t\t\t\t{hasError ?\n\t\t\t\t\t<ErrorTooltip\n\t\t\t\t\t\tvisible={hasError}\n\t\t\t\t\t\ttext={errorMessage}\n\t\t\t\t\t\t// className={\"fas fa-exclamation-circle\"}\n\t\t\t\t\t\t// color={\"red\"}\n\t\t\t\t\t\tContainerComponent={ErrorTooltipContainerComponent}\n\t\t\t\t\t/>\n\t\t\t\t:\n\t\t\t\t\t(isNew || unsaved) ?\n\t\t\t\t\t<ErrorTooltip\n\t\t\t\t\t\tvisible={(isNew || unsaved)}\n\t\t\t\t\t\ttext={\"This route is not saved. Leaving the editor will remove the route.\"}\n\t\t\t\t\t\tclassName={\"fas fa-exclamation-circle\"}\n\t\t\t\t\t\tcolor={\"yellow\"}\n\t\t\t\t\t\tContainerComponent={ErrorTooltipContainerComponent}\n\t\t\t\t\t/>\n\t\t\t\t\t:\n\t\t\t\t\t\tedited &&\n\t\t\t\t\t\t<ErrorTooltip\n\t\t\t\t\t\t\tvisible={edited}\n\t\t\t\t\t\t\ttext={\"This route contains unsaved changes. Leaving the editor without saving will undo your changes.\"}\n\t\t\t\t\t\t\tclassName={\"fas fa-exclamation-circle\"}\n\t\t\t\t\t\t\tcolor={\"yellow\"}\n\t\t\t\t\t\t\tContainerComponent={ErrorTooltipContainerComponent}\n\t\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t</styled.ListItemIconContainer>\n\t\t</styled.ListItem>\n\t\t</Container>\n\t);\n};\n\n/* *\n*\n* Returns style for input component\n* Accepts hasError prop, which can be used to change styling based on presence of errors\n*\n* */\nconst defaultInputStyleFunc = (hasError) => {\n\treturn {\n\t}\n}\n\n// Specifies propTypes\nListItemField.propTypes = {\n};\n\n// Specifies the default values for props:\nListItemField.defaultProps = {\n\tContainer: styled.DefaultContainer,\n\tErrorTooltipContainerComponent: styled.DefaultErrorTooltipContainerComponent,\n\tonMouseEnter: () => {},\n\tonMouseLeave: () => {},\n\tonIconClick: () => {},\n\tonEditClick: () => {},\n};\n\nexport default ListItemField;\n","import styled from 'styled-components'\nimport {Form} from \"formik\";\n\nimport * as stylec from '../../content_list/content_list.style'\n\nexport const ListItemTitle = styled(stylec.ListItemTitle)`\n`\n\nexport const ListItemIcon = styled(stylec.ListItemIcon)`\n`\n\nexport const ListItemRect = styled(stylec.ListItemRect)`\n`\n\nexport const ListItem = styled(stylec.ListItem)`\n`\n\nexport const Container = styled(stylec.Container)`\n\toverflow: hidden;\n`\n\nexport const ListItemIconContainer = styled(stylec.ListItemIconContainer)`\n\n`\n\nexport const Title = styled.h1`\n    font-family: ${props => props.theme.font.primary};\n    font-size: 1.5rem;\n    font-weight: 500;\n    color: ${props => props.theme.schema[props.schema].solid};\n    user-select: none;\n`\n\nexport const InfoText = styled.span`\n  font-family: ${props => props.theme.font.primary};\n  font-size: ${props => props.theme.fontSize.sz3};\n  color: ${props => props.theme.bg.octonary};\n`\n\nexport const SectionContainer = styled.div`\n    border-bottom: 0.1rem solid ${props => props.theme.bg.septenary};\n    margin-bottom: 1rem;\n  \tborder-top: ${props => props.showTopBorder && `0.1rem solid ${props.theme.bg.septenary}`};\n  \tmargin-top: ${props => props.showTopBorder && `1rem`};\n  \n  \twidth: 100%;\n  \n  \tpadding: 1rem .5rem;\n  \t//flex: 1;\n  overflow-y: auto;\n  overflow-x: hidden;\n  \t\n`\n\nexport const TaskContainer = styled.div`\n    background-color: ${props => props.theme.bg.tertiary};\n    border-radius: 1rem;\n  overflow: auto;\n\n`\n","import React, {useState, useEffect, useRef} from 'react'\n\n// external functions\nimport uuid from 'uuid'\nimport { useSelector, useDispatch } from 'react-redux'\n\n// internal components\nimport Textbox from '../../../../basic/textbox/textbox.js'\nimport Button from '../../../../basic/button/button'\nimport TaskField from '../../tasks/task_field/route_field'\nimport ContentHeader from '../../content_header/content_header'\nimport ConfirmDeleteModal from '../../../../basic/modals/confirm_delete_modal/confirm_delete_modal'\nimport TextField from \"../../../../basic/form/text_field/text_field\";\nimport ListItemField from \"../../../../basic/form/list_item_field/list_item_field\";\n\n// Import actions\nimport {\n    deleteRouteClean,\n    postRouteClean,\n    putRouteClean,\n    setSelectedTask,\n} from '../../../../../redux/actions/tasks_actions'\nimport { setSelectedProcess, setFixingProcess } from '../../../../../redux/actions/processes_actions'\nimport {handlePostTaskQueue, postTaskQueue} from '../../../../../redux/actions/task_queue_actions'\n\n// Import Utils\nimport {\n    generateDefaultRoute, getLoadStationDashboard,\n    getRouteProcesses,\n    isHumanTask,\n    isMiRTask\n} from \"../../../../../methods/utils/route_utils\";\nimport {isBrokenProcess, willRouteAdditionFixProcess, willRouteDeleteBreakProcess} from \"../../../../../methods/utils/processes_utils\";\nimport {isEmpty, isObject} from \"../../../../../methods/utils/object_utils\";\nimport useChange from \"../../../../basic/form/useChange\";\n\n// styles\nimport * as styled from './process_field.style'\nimport {DEVICE_CONSTANTS} from \"../../../../../constants/device_constants\";\nimport {throttle} from \"../../../../../methods/utils/function_utils\";\n\nexport const ProcessField = (props) => {\n    const {\n        formikProps,\n        onDelete,\n        onSave,\n        onBack,\n    } = props\n\n    // extract formik props\n    const {\n        errors,\n        values,\n        touched,\n        isSubmitting,\n        setFieldValue,\n        setFieldError,\n        setFieldTouched,\n        getFieldMeta,\n        validateForm\n    } = formikProps\n\n    useChange() // adds changed key to values - true if the field has changed\n\n    let errorCount = 0\n    Object.values(errors).forEach((currError) => {\n        if(!isEmpty(currError)) errorCount++\n    }) // get number of field errors\n    const touchedCount = Object.values(touched).length // number of touched fields\n    const submitDisabled = ((errorCount > 0) || (touchedCount === 0) || isSubmitting ||!values.changed) //&& (submitCount > 0) // disable if there are errors or no touched field, and form has been submitted at least once\n\n    const dispatch = useDispatch()\n    const dispatchSetSelectedTask = async (task) => await dispatch(setSelectedTask(task))\n    const dispatchSetSelectedProcess = (process) => dispatch(setSelectedProcess(process))\n    const onHandlePostTaskQueue = (props) => dispatch(handlePostTaskQueue(props))\n    const dispatchSetFixingProcess = async (bool) => await dispatch(setFixingProcess(bool))\n    const dispatchDeleteRouteClean = async (routeId) => await dispatch(deleteRouteClean(routeId))\n\n    const tasks = useSelector(state => state.tasksReducer.tasks)\n    const stations = useSelector(state => state.stationsReducer.stations)\n    const selectedTask = useSelector(state => state.tasksReducer.selectedTask)\n    const selectedProcess = useSelector(state => state.processesReducer.selectedProcess)\n    const fixingProcess = useSelector(state => state.processesReducer.fixingProcess)\n\n    const taskQueue = useSelector(state => state.taskQueueReducer.taskQueue)\n\n    // State definitions\n    const [shift, ] = useState(false) // Is shift key pressed ?\n    const [isTransportTask, ] = useState(true) // Is this task a transport task (otherwise it may be a 'go to idle' type task)\n    const [editingTask, setEditingTask] = useState(false) // Used to tell if a task is being edited\n    const [confirmDeleteModal, setConfirmDeleteModal] = useState(false);\n    const [showExistingTaskWarning, setShowExistingTaskWarning] = useState(false);\n\n    const valuesRef = useRef(values);\n\n    // throttled func\n    const [dispatchSetSelectedProcess_Throttled, ] = useState(()=>throttle(\n        ()=> {\n            if(valuesRef.current) dispatchSetSelectedProcess({\n                ...valuesRef.current,\n            })\n        }, 500));\n\n    useEffect(() => {\n        valuesRef.current = values;\n    }, [values]);\n\n    useEffect(() => {\n\n        // update selectedProcess (throttled to reduce lag from updating constantly\n        dispatchSetSelectedProcess_Throttled()\n\n        return () => {}\n\n    }, [values]);\n\n    useEffect(() => {\n\n        // when editing task is toggled off, reset newRoute\n        if(!editingTask) {\n            setFieldTouched(\"newRoute\", {})\n            setFieldError(\"newRoute\", {})\n            setFieldValue(\"newRoute\", null)\n        }\n\n    }, [editingTask])\n\n    const handleAddTask = async () => {\n\n        // contains new route\n        if(values.newRoute) {\n            // extract newRoute values\n            const {\n                needsSubmit,    // remove from route\n                new: isNew,     // remove from route\n                temp,\n                ...remainingRoute\n            } = values.newRoute || {}\n\n            const {\n                insertIndex\n            } = temp || {}\n\n            // add unsaved key if route being added doesn't already exist - used to determine if a route has been saved or not\n            var newRoute\n            if(tasks[remainingRoute._id]) {\n                // task exists\n                newRoute = {...remainingRoute}\n            }\n            else {\n                // task doesn't exist, add unsaved key\n                newRoute = {...remainingRoute, new: isNew}\n            }\n\n            // make copy of routes\n            let updatedRoutes = [...values.routes]\n\n            // add route to values at broken index\n            updatedRoutes.splice(insertIndex, 0, newRoute)\n\n            // update values\n            setFieldValue(\"routes\", updatedRoutes)\n            setFieldValue(\"broken\", isBrokenProcess(updatedRoutes))\n            setEditingTask(false)\n        }\n\n        // not a new route\n        else {\n            // get data for route being edited\n            const fieldMeta = getFieldMeta(editingTask)\n            const {\n                value: currRouteValue,\n            } = fieldMeta\n\n            const routeProcesses = getRouteProcesses(currRouteValue._id) // get routes processes\n            const belongsToAnotherProcess = routeProcesses.findIndex((currProcess) => currProcess._id !== values._id) // does route belong to another process?\n\n            // if route belongs to more than one process, give option to make a copy of the route so other processes won't be affected\n            if(belongsToAnotherProcess !== -1) {\n                setShowExistingTaskWarning(true)\n            }\n\n            // if it only belongs to one process, go ahead and update it\n            else {\n                updateExistingRoute()\n            }\n\n        }\n\n        // clear newRoute and selectedTask\n        setFieldValue(\"newRoute\", null)\n        dispatchSetSelectedTask(null)\n\n        validateForm() // run validation so errors will show up right away\n    }\n\n    // clear selectedTask and add new route to values.routes\n    const updateExistingRoute = () => {\n        const fieldMeta = getFieldMeta(editingTask)\n        const {\n            value: currRouteValue,\n        } = fieldMeta\n\n        const {\n            needsSubmit,\n            ...remainingValues\n        } = currRouteValue || {}\n\n\n        setFieldValue(\"broken\", isBrokenProcess(values.routes, tasks))\n        setFieldValue(editingTask, {...remainingValues})\n        setEditingTask(false)\n        dispatchSetSelectedTask(null)\n    }\n\n    const cloneRoute = async () => {\n        // get current route's meta data\n        const fieldMeta = getFieldMeta(editingTask)\n        const {\n            initialValue,\n            value: currRouteValue,\n        } = fieldMeta\n\n\n        const {\n            changed,\n            needsSubmit,\n            ...remainingValues\n        } = currRouteValue || {}\n\n\n        const newId = uuid.v4()\n        const routeClone = {...remainingValues, _id: newId, new: true} // copy all attributes, but make new id\n\n        // Not a new process, so save changes now\n        if(!values.new) {\n\n            const index = editingTask.match(/\\d+/)[0] // \"3\"\n            const updatedRoutes = [...values.routes]\n            updatedRoutes.splice(index, 1, routeClone) // replace existing route with new clone\n\n            setFieldValue(\"routes\", updatedRoutes)\n        }\n\n        else {\n            // if process doesn't exist yet, just add to field\n            setFieldValue(editingTask, {...routeClone, new: true})\n        }\n\n        // if not new route, only thing to check is if any changes broke the process\n        setFieldValue(\"broken\", isBrokenProcess(values.routes, tasks))\n        setEditingTask(false)\n        dispatchSetSelectedTask(null)\n    }\n\n    /**\n     * Removes the route from the array of routes for a process\n     */\n    const handleRemoveRoute = (routeId) => {\n\n        // clear editing values\n        setEditingTask(false)\n        setFieldValue(\"newRoute\", null)\n        dispatchSetSelectedTask(null)\n\n        // update broken\n        const willBreak = willRouteDeleteBreakProcess(values.routes, routeId)\n        setFieldValue(\"broken\", willBreak)\n\n        // Remove the route from the process\n        const index = values.routes.findIndex((currRoute) => currRoute._id === routeId)\n        let updatedRoutes = [...values.routes]\n        updatedRoutes.splice(index, 1)\n\n        // update routes\n        setFieldValue(\"routes\", updatedRoutes)\n    }\n\n    const handleTaskBack = async () => {\n        // clear newRoute and selectedTask\n        setFieldValue(\"newRoute\", null)\n        await dispatchSetSelectedTask(null)\n        setEditingTask(false)\n\n        // run validation\n        validateForm()\n    }\n\n    const handleDeleteRoute = async (routeId) => {\n        setEditingTask(false)\n        dispatchSetSelectedTask(null)\n\n        const willBreak = willRouteDeleteBreakProcess(values.routes, routeId)\n        setFieldValue(\"broken\", willBreak)\n\n        await dispatchDeleteRouteClean(routeId)\n\n        setFieldValue(\"routes\", values.routes.filter(((currRoute) => currRoute._id !== routeId)))\n    }\n\n    const handleExecuteProcessTask = async (routeId) => {\n        const task = tasks[routeId] || null\n        if(!isObject(task)) return\n\n        const routeName = task.name\n\n        let deviceType\n        if(isMiRTask(task)) {\n            // if MiR is available, default to MiR\n            deviceType = DEVICE_CONSTANTS.MIR_100\n        }\n        else if(isHumanTask(task)){\n            // otherwise if human is available, submit human\n            deviceType = DEVICE_CONSTANTS.HUMAN\n        }\n\n        const dashboardID = getLoadStationDashboard(selectedTask)\n\n        onHandlePostTaskQueue({dashboardID, tasks, deviceType, taskQueue, Id: routeId, name: routeName, custom: false, fromSideBar: true})\n    }\n\n    // Maps through the list of existing routes\n    const renderRoutes = (routes) => {\n\n        return routes.filter((currRoute, currIndex) => {\n\n            if (currRoute === undefined) {\n                return false\n            }\n            return true\n\n        }).map((currRoute, currIndex) => {\n\n            const {\n                _id: currRouteId = \"\",\n            } = currRoute || {}\n\n            const isLast = currIndex === routes.length - 1\n            const fieldName = `routes[${currIndex}]`\n\n            return (\n                <div key={`li-${currIndex}`}>\n                    <ListItemField\n                        containerStyle={{marginBottom: isLast ? 0 : \"1rem\"}}\n                        name={fieldName}\n                        onMouseEnter={() => {\n                            if (!selectedTask && !editingTask) {\n                                dispatchSetSelectedTask(currRoute)\n                            }\n\n                        }}\n                        onMouseLeave={() => {\n                            if (selectedTask !== null && !editingTask) {\n                                dispatchSetSelectedTask(null)\n                            }\n                        }}\n                        onIconClick={() => {\n                            handleExecuteProcessTask(currRouteId)\n                        }}\n                        onEditClick={() => {\n                            setEditingTask(fieldName)\n                            dispatchSetSelectedTask(currRoute)\n                        }}\n                        onTitleClick={() => {\n                            setEditingTask(fieldName)\n                            dispatchSetSelectedTask(currRoute)\n                        }}\n                        key={`li-${currIndex}`}\n                    />\n\n\n\n                    {/* If the process is broken and it's at the broken index, then show a button there to fix it */}\n                    {(!!values.broken && currIndex === values.broken - 1) &&\n\n                    <Button\n                        schema={'devices'}\n                        // disabled={!!selectedProcess && !!selectedProcess._id && !!selectedProcess.new}\n                        style={{margin: 0, marginBottom: '1rem', width: \"100%\", textOverflow: 'ellipsis', whiteSpace: 'nowrap', overflow: 'hidden'}}\n                        secondary\n                        disabled={selectedTask?.new}\n                        onClick={() => {\n                            let prevObj\n                            if(values.routes.length > 0) {\n                                prevObj = values.routes[values.routes.length - 1].obj\n                            }\n\n                            const newTask = {...generateDefaultRoute(prevObj), temp: {insertIndex: values.broken}}\n\n                            dispatchSetSelectedTask(newTask)\n                            setFieldValue(\"newRoute\", newTask)\n\n                            // Tells the map that the new task is supposed to be fixing the process\n                            // This means instead of only allowing to to pick a location that belongs to the last route\n                            // Now you must pick a location that is connected to the location before the broken route occurs\n                            dispatchSetFixingProcess(true)\n                            setEditingTask(\"newRoute\")\n                        }}\n                    >\n                        Add Route To Fix Process\n                    </Button>\n\n                    }\n                </div>\n            )\n        })\n    }\n\n    const handleAddRoute = () => {\n\n        return (\n            <>\n                <Button\n                    schema={'processes'}\n                    // disabled={!!selectedProcess && !!selectedProcess._id && !!selectedProcess.new}\n                    secondary\n                    disabled={editingTask}\n                    onClick={() => {\n\n                        let prevObj\n                        if(values.routes.length > 0) {\n                            prevObj = values.routes[values.routes.length - 1].obj\n                        }\n\n                        const newTask = {...generateDefaultRoute(prevObj), temp: {insertIndex: values.routes.length}}\n                        setFieldValue(\"newRoute\", newTask)\n                        dispatchSetSelectedTask(newTask)\n                        setEditingTask(\"newRoute\")\n                    }}\n                >\n                    Add Route\n                </Button>\n\n            </>\n        )\n    }\n\n    const handleAddBeginningRoute = () => {\n\n        return (\n            <>\n                <Button\n                    schema={'processes'}\n                    // disabled={!!selectedProcess && !!selectedProcess._id && !!selectedProcess.new}\n                    secondary\n                    disabled={editingTask}\n                    onClick={() => {\n\n                        let prevObj\n                        if(values.routes.length > 0) {\n                            prevObj = values.routes[values.routes.length - 1].obj\n                        }\n\n                        const newTask = {...generateDefaultRoute(prevObj), temp: {insertIndex: 0}}\n\n                        setFieldValue(\"newRoute\", newTask)\n                        dispatchSetSelectedTask(newTask)\n                        setEditingTask(\"newRoute\")\n                    }}\n                >\n                    Add Route To Beginning\n                </Button>\n\n            </>\n        )\n    }\n\n    const getChildren = () => {\n        const fieldMeta = getFieldMeta(editingTask)\n        const {\n            value: currRouteValue,\n        } = fieldMeta\n        const routeProcesses = getRouteProcesses(currRouteValue._id)\n\n        return(\n            <div>\n                {routeProcesses.map((currProcess) => {\n                    const {\n                        name: currProcessName\n                    } = currProcess\n\n                    return <div>{currProcessName} aaaa</div>\n                })}\n            </div>\n\n        )\n    }\n    return(\n        <>\n          {selectedProcess.routes.length !==0 ?\n            <ConfirmDeleteModal\n                isOpen={!!confirmDeleteModal}\n                title={\"Are you sure you want to delete this process?\"}\n                button_1_text={\"Delete process and KEEP associated routes\"}\n                button_2_text={\"Delete process and DELETE associated routes\"}\n                handleClose={() => setConfirmDeleteModal(null)}\n                handleOnClick1={() => {\n                    onDelete(false)\n                    setConfirmDeleteModal(null)\n                }}\n                handleOnClick2={() => {\n                    onDelete(true)\n                    setConfirmDeleteModal(null)\n                }}\n            />\n            :\n            <ConfirmDeleteModal\n                isOpen={!!confirmDeleteModal}\n                title={\"Are you sure you want to delete this process?\"}\n                button_1_text={\"Yes\"}\n                button_2_text={\"No\"}\n                handleClose={() => setConfirmDeleteModal(null)}\n                handleOnClick1={() => {\n                  onDelete(true)\n                  setConfirmDeleteModal(null)\n                }}\n                handleOnClick2={() => {\n                  setConfirmDeleteModal(null)\n\n                }}\n            />\n\n          }\n\n\n            {showExistingTaskWarning &&\n            <ConfirmDeleteModal\n                isOpen={!!showExistingTaskWarning}\n                title={\"Changing an existing route will affect other processes that use this route. Would you like to make a copy, or change the existing route?\"}\n                button_1_text={\"Make a Copy\"}\n                button_2_text={\"Change the Existing Route\"}\n                handleClose={() => setShowExistingTaskWarning(false)}\n                children={getChildren()}\n                handleOnClick1={() => {\n                    cloneRoute()\n                    setShowExistingTaskWarning(false)\n                }}\n                handleOnClick2={() => {\n                    updateExistingRoute()\n                    setShowExistingTaskWarning(false)\n\n                }}\n            />\n            }\n\n            <styled.Container>\n                <div style={{ marginBottom: '1rem' }}>\n                    <ContentHeader\n                        content={'processes'}\n                        mode={'create'}\n                        disabled={(!!selectedTask && !!editingTask) || submitDisabled}\n                        onClickSave={() => {\n                            onSave(values, true)\n                        }}\n\n                        onClickBack={() => {\n                            onBack()\n                        }}\n\n                    />\n                </div>\n\n                <div style={{marginBottom: \"1rem\"}}>\n                    <TextField\n                        focus={!values.name}\n                        placeholder='Process Name'\n                        defaultValue={values.name}\n                        schema={'processes'}\n                        name={`name`}\n                        InputComponent={Textbox}\n                        style={{ fontSize: '1.2rem', fontWeight: '600'}}\n                        textboxContainerStyle={{border: \"none\"}}\n                    />\n                </div>\n\n                {editingTask && selectedTask ?\n                <styled.TaskContainer schema={'processes'}>\n                    <TaskField\n                        {...formikProps}\n                        isNew={editingTask === \"newRoute\"}\n                        onRemove={handleRemoveRoute}\n                        onDelete={handleDeleteRoute}\n                        onBackClick={handleTaskBack}\n                        onSave={handleAddTask}\n                        fieldParent={editingTask}\n                        shift={shift}\n                        isTransportTask={isTransportTask}\n                        isProcessTask={true}\n                        toggleEditing={(props) => {\n                            setEditingTask(props)\n                        }}\n                    />\n                </styled.TaskContainer>\n                    :\n                    <>\n                        <styled.Title schema={'processes'}>Associated Routes</styled.Title>\n\n                        {values.routes.length > 0 && handleAddBeginningRoute()}\n\n                        <styled.SectionContainer\n                            showTopBorder={values.routes.length > 0}\n                        >\n                            {values.routes.length > 0 ?\n                                renderRoutes(values.routes)\n                                :\n                                <styled.InfoText></styled.InfoText>\n\n                            }\n                        </styled.SectionContainer>\n\n                        {handleAddRoute()}\n\n                        {/*<div style={{ height: \"100%\", paddingTop: \"1rem\" }} />*/}\n\n                        {/* Delete Task Button */}\n                        <Button\n                            schema={'processes'}\n                            disabled={!!selectedProcess && !!selectedProcess._id && !!selectedProcess.new}\n                            style={{ marginBottom: '0rem', borderColor: 'red' }}\n                            secondary\n                            onClick={() => {\n                                setConfirmDeleteModal(true)\n                            }}\n                        >\n                            Delete\n                        </Button>\n                    </>\n                }\n\n\n\n            </styled.Container>\n        </>\n\n    )\n}\n\nexport default ProcessField\n","export const throttle = (func, limit) => {\n    let lastFunc\n    let lastRan\n    return function() {\n        const context = this\n        const args = arguments\n        if (!lastRan) {\n            func.apply(context, args)\n            lastRan = Date.now()\n        } else {\n            clearTimeout(lastFunc)\n            lastFunc = setTimeout(function() {\n                if ((Date.now() - lastRan) >= limit) {\n                    func.apply(context, args)\n                    lastRan = Date.now()\n                }\n            }, limit - (Date.now() - lastRan))\n        }\n    }\n}","import {useDispatch, useSelector} from \"react-redux\";\nimport {Formik} from \"formik\";\nimport {processSchema} from \"../../../../../methods/utils/form_schemas\";\nimport React, {useEffect} from \"react\";\nimport {ProcessField} from \"../process_field/process_field\";\nimport uuid from 'uuid'\nimport {\n\tdeleteRouteClean,\n\tdeleteTask,\n\tputRouteClean,\n\tputTask, saveFormRoute,\n\tsetSelectedTask\n} from \"../../../../../redux/actions/tasks_actions\";\nimport {\n\tdeleteProcesses,\n\tpostProcesses,\n\tputProcesses,\n\tsetSelectedProcess\n} from \"../../../../../redux/actions/processes_actions\";\nimport * as taskActions from \"../../../../../redux/actions/tasks_actions\";\nimport {isObject} from \"../../../../../methods/utils/object_utils\";\nimport {isArray} from \"../../../../../methods/utils/array_utils\";\n\nconst ProcessForm = (props) => {\n\n\tconst {\n\t\ttoggleEditingProcess,\n\t} = props\n\n\tconst dispatchSetSelectedTask = (task) => dispatch(setSelectedTask(task))\n\n\n\tconst dispatch = useDispatch()\n\tconst dispatchPostProcess = async (process) => await dispatch(postProcesses(process))\n\n\tconst dispatchPutProcess = async (process) => await dispatch(putProcesses(process))\n\n\tconst dispatchPostRouteClean = async (route) => await dispatch(taskActions.postRouteClean(route))\n\tconst dispatchPutRouteClean = (task, ID) => dispatch(putRouteClean(task, ID))\n\n\tconst dispatchSetSelectedProcess = (process) => dispatch(setSelectedProcess(process))\n\tconst dispatchDeleteProcess = async (ID) => await dispatch(deleteProcesses(ID))\n\tconst dispatchDeleteRouteClean = (routeId) => dispatch(deleteRouteClean(routeId))\n\tconst dispatchSaveFormRoute = async (formRoute) => await dispatch(saveFormRoute(formRoute))\n\n\tconst tasks = useSelector(state => state.tasksReducer.tasks)\n\tconst selectedProcess = useSelector(state => state.processesReducer.selectedProcess)\n\tconst objects = useSelector(state => state.objectsReducer.objects)\n\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t\tdispatchSetSelectedTask(null)\n\t\t\tdispatchSetSelectedProcess(null)\n\t\t}\n\t}, []);\n\n\tconst handleSave = async (values, close) => {\n\n\t\t// extract some values\n\t\tconst {\n\t\t\tnewRoute,\n\t\t\tchanged,\n\t\t\t...remainingValues\n\t\t} = values\n\n\t\t// perform any updates for routes\n\t\tfor (const currRoute of remainingValues.routes) {\n\t\t\tawait dispatchSaveFormRoute(currRoute)\n\t\t\tcleanRoute(currRoute)\n\t\t}\n\n\t\tdispatchSetSelectedTask(null) // clear selected task\n\t\tconst mappedRoutes = remainingValues.routes.map((currRoute) => currRoute._id)\n\n\t\t// if new, POST\n\t\tif (remainingValues.new) {\n\t\t\tawait dispatchPostProcess({\n\t\t\t\t...remainingValues,\n\t\t\t\troutes: mappedRoutes\n\t\t\t})\n\t\t}\n\n\t\t// Else put\n\t\telse {\n\t\t\tawait dispatchPutProcess({\n\t\t\t\t...remainingValues,\n\t\t\t\troutes: mappedRoutes\n\t\t\t})\n\t\t}\n\n\t\t// close editor\n\t\tif(close) {\n\t\t\tdispatchSetSelectedProcess(null)\n\t\t\ttoggleEditingProcess(false)\n\t\t}\n\t}\n\n\t// remove keys from route that shouldn't be saved\n\tconst cleanRoute = (route) => {\n\t\tdelete route.new\n\t\tdelete route.changed\n\t\tdelete route.needsSubmit\n\t\tdelete route.unsaved\n\t}\n\n\tconst handleBack = async () => {\n\t\t// clear selectedTask, selectedProcess, and set toggleEditing to false\n\t\tawait dispatchSetSelectedTask(null)\n\t\tdispatchSetSelectedProcess(null)\n\t\ttoggleEditingProcess(false)\n\t}\n\n\n\n\tconst handleDelete = (withRoutes) => {\n\t\tif(withRoutes) {\n\t\t\thandleDeleteWithRoutes()\n\t\t}\n\n\t\telse {\n\t\t\thandleDeleteWithoutRoutes()\n\t\t}\n\t}\n\tconst handleDeleteWithRoutes = async () => {\n\n\t\t// If there's routes in this process, delete the routes\n\t\tif (selectedProcess.routes.length > 0) {\n\t\t\tselectedProcess.routes.forEach(route => {\n\t\t\t\tif(isObject(route)) {\n\t\t\t\t\tdispatchDeleteRouteClean(route._id)\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdispatchDeleteRouteClean(route)\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tawait dispatchDeleteProcess(selectedProcess._id)\n\n\t\tdispatchSetSelectedTask(null)\n\t\tdispatchSetSelectedProcess(null)\n\t\ttoggleEditingProcess(false)\n\t}\n\n\tconst handleDeleteWithoutRoutes = async () => {\n\n\t\tawait dispatchDeleteProcess(selectedProcess._id)\n\n\t\tdispatchSetSelectedTask(null)\n\t\tdispatchSetSelectedProcess(null)\n\t\ttoggleEditingProcess(false)\n\t}\n\n\tconst handleDefaultObj = (objId, prevObj) => {\n\n\t\tif(isObject(objects[objId])) {\n\t\t\treturn objects[objId]\n\t\t}\n\t\telse if (prevObj) {\n\t\t\treturn prevObj\n\t\t}\n\t\telse {\n\t\t\treturn null\n\t\t}\n\t}\n\n\tconst handleInitialRoutes = () => {\n\t\tif(selectedProcess && selectedProcess.routes && Array.isArray(selectedProcess.routes)) {\n\t\t\tlet prevObj = null\n\n\t\t\treturn selectedProcess.routes\n\t\t\t\t.filter((currRouteItem) => {\n\t\t\t\t\treturn isObject(isObject(currRouteItem) ? currRouteItem : tasks[currRouteItem])\n\t\t\t\t})\n\t\t\t\t.map((currRouteItem) => {\n\n\t\t\t\tconst route = isObject(currRouteItem) ? currRouteItem : tasks[currRouteItem]\n\n\t\t\t\tconst obj = handleDefaultObj(route.obj, prevObj)\n\t\t\t\tprevObj = obj\n\n\t\t\t\treturn {\n\t\t\t\t\t...route,\n\t\t\t\t\tobj\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\t// otherwise initialize to empty array\n\t\treturn []\n\n\t}\n\n\n\treturn (\n\t\t<Formik\n\t\t\tinitialValues={{\n\t\t\t\tname: selectedProcess ? selectedProcess.name : \"\",\n\t\t\t\troutes: handleInitialRoutes(),\n\t\t\t\tbroken: selectedProcess ? selectedProcess.broken : false,\n\t\t\t\t_id: selectedProcess ? selectedProcess._id : uuid.v4(),\n\t\t\t\tnew: selectedProcess.new,\n\t\t\t\tnewRoute: null\n\t\t\t}}\n\n\t\t\t// validation control\n\t\t\tvalidationSchema={processSchema}\n\t\t\tvalidateOnChange={true}\n\t\t\tvalidateOnMount={false} // leave false, if set to true it will generate a form error when new data is fetched\n\t\t\tvalidateOnBlur={true}\n\n\t\t\t// enableReinitialize={true} // leave false, otherwise values will be reset when new data is fetched for editing an existing item\n\t\t\tonSubmit={async (values, formikHelpers) => {\n\n\t\t\t\tconst {\n\t\t\t\t\tsetSubmitting,\n\t\t\t\t\tsetTouched,\n\t\t\t\t\tresetForm\n\t\t\t\t} = formikHelpers\n\n\t\t\t\t// set submitting to true, handle submit, then set submitting to false\n\t\t\t\t// the submitting property is useful for eg. displaying a loading indicator\n\t\t\t\tconst {\n\t\t\t\t\tbuttonType\n\t\t\t\t} = values\n\n\t\t\t\tsetSubmitting(true)\n\t\t\t\t// await handleSubmit(values, formMode)\n\t\t\t\tsetTouched({}) // after submitting, set touched to empty to reflect that there are currently no new changes to save\n\t\t\t\tsetSubmitting(false)\n\n\t\t\t}}\n\t\t>\n\t\t\t{formikProps => {\n\t\t\t\tconst {\n\t\t\t\t\tsetSubmitting,\n\t\t\t\t\tsubmitForm,\n\t\t\t\t\tsetTouched,\n\t\t\t\t\tresetForm,\n\t\t\t\t\tsetFieldValue\n\t\t\t\t} = formikProps\n\n\n\t\t\t\treturn(\n\t\t\t\t\t<ProcessField\n\t\t\t\t\t\tonSave={async (values, close) => {\n\t\t\t\t\t\t\tsetSubmitting(true)\n\t\t\t\t\t\t\tawait handleSave(values, close)\n\t\t\t\t\t\t\tsetTouched({}) // after submitting, set touched to empty to reflect that there are currently no new changes to save\n\t\t\t\t\t\t\tsetSubmitting(false)\n\n\t\t\t\t\t\t\t// reset changed to false\n\t\t\t\t\t\t\tsetFieldValue(\"changed\", false)\n\n\n\t\t\t\t\t\t\t// resetForm()\n\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonBack={handleBack}\n\t\t\t\t\t\tonDelete={handleDelete}\n\t\t\t\t\t\tformikProps={formikProps}\n\t\t\t\t\t\ttoggleEditingProcess={toggleEditingProcess}\n\t\t\t\t\t/>\n\t\t\t\t)\n\t\t\t}}\n\t\t</Formik>\n\t)\n}\n\nexport default ProcessForm","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory } from \"react-router-dom\";\n\nimport * as styled from './processes_content.style'\n\n// Import basic components\nimport ContentHeader from '../content_header/content_header'\nimport Textbox from '../../../basic/textbox/textbox.js'\nimport Button from '../../../basic/button/button'\nimport DropDownSearch from '../../../basic/drop_down_search_v2/drop_down_search'\nimport TextBoxSearch from '../../../basic/textbox_search/textbox_search'\n\nimport ContentList from '../content_list/content_list'\n\n// Import actions\nimport { setSelectedProcess, editingProcess, putProcesses } from '../../../../redux/actions/processes_actions'\nimport { postTaskQueue } from '../../../../redux/actions/task_queue_actions'\n\n// Import Utils\nimport { deepCopy } from '../../../../methods/utils/utils'\nimport { isBrokenProcess } from '../../../../methods/utils/processes_utils'\n\nimport uuid from 'uuid'\nimport { uuidv4 } from \"../../../../methods/utils/utils\";\nimport ProcessForm from \"./process_form/process_form\";\n\nconst ProcessesContent = () => {\n\n    const history = useHistory()\n\n    const dispatch = useDispatch()\n    const dispatchSetSelectedProcess = (process) => dispatch(setSelectedProcess(process))\n    const dispatchEditing = (props) => dispatch(editingProcess(props))\n    const dispatchPutProcess = (process) => dispatch(putProcesses(process))\n\n    let tasks = useSelector(state => state.tasksReducer.tasks)\n    let selectedTask = useSelector(state => state.tasksReducer.selectedTask)\n    const selectedProcess = useSelector(state => state.processesReducer.selectedProcess)\n    const processes = useSelector(state => state.processesReducer.processes)\n    const editing = useSelector(state => state.processesReducer.editingProcess)\n\n    // State definitions\n    const [shift, setShift] = useState(false) // Is shift key pressed ?\n    const [isTransportTask, setIsTransportTask] = useState(true)\n\n\n    useEffect(() => {\n\n        return () => {\n            dispatchSetSelectedProcess(null)\n        }\n    }, [])\n\n    useEffect(() => {\n        // Maps through all process and sees if they're broken\n        Object.values(processes).map((process) => {\n            const processRoutes = process.routes.map((currRoute) => tasks[currRoute]) || {}\n\n            // If it was previously broken, but not anymore, then correct that ish\n            if (!!process.broken && !isBrokenProcess(processRoutes, tasks)) {\n                process.broken = null\n                dispatchPutProcess(process)\n            }\n\n            // Else if the process is broken, so fix that ish\n            else if (!!isBrokenProcess(processRoutes, tasks) && process.broken === null) {\n                process.broken = isBrokenProcess(processRoutes, tasks)\n                dispatchPutProcess(process)\n            }\n        })\n        return () => {\n        }\n    }, [processes])\n\n\n    const onCardView = (element) => {\n        const currentPath = history.location.pathname\n        history.push(currentPath + '/' + element._id + \"/lots\")\n    }\n\n    if (editing && selectedProcess !== null) { // Editing Mode\n        return (\n            <ProcessForm\n                toggleEditingProcess={props => dispatchEditing(props)}\n            />\n        )\n    } else {    // List Mode\n        return (\n            <ContentList\n                title={'Processes'}\n                schema={'processes'}\n                // elements={Object.values(tasks)}\n                elements={Object.values(processes)}\n                onMouseEnter={(process) => dispatchSetSelectedProcess(process)}\n                onMouseLeave={() => dispatchSetSelectedProcess(null)}\n                handleCardView={(element) => onCardView(element)}\n                onClick={(process) => {\n                    // If task button is clicked, start editing it\n                    dispatchSetSelectedProcess(process)\n                    dispatchEditing(true)\n                }}\n                onPlus={() => {\n                    const newProcess = {\n                        name: '',\n                        _id: uuid.v4(),\n                        new: true,\n                        routes: [],\n                        broken: null,\n                    }\n                    // TODO: May have to do this with processes\n                    // dispatch(taskActions.addTask(newTask))\n                    dispatchSetSelectedProcess(newProcess)\n                    dispatchEditing(true)\n                }}\n            />\n        )\n    }\n}\n\nexport default ProcessesContent\n","import styled from 'styled-components'\nimport {globStyle} from '../../../global_style'\n\nexport const Header = styled.h1`\n    color: ${globStyle.black};\n    font-size: ${globStyle.lrgFontSize};\n    font-family: ${globStyle.font};\n    margin-bottom: 1rem;\n`;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport * as styled from './settings.style'\n\nimport ContentHeader from '../content_header/content_header'\n\n// Import Components\nimport Textbox from '../../../basic/textbox/textbox'\nimport Header from '../../../basic/header/header'\nimport SmallButton from '../../../basic/small_button/small_button'\nimport Switch from 'react-ios-switch';\n\nimport TimezonePicker, { timezones } from 'react-timezone';\n\nimport Button from \"../../../basic/button/button\";\n\nimport * as AmazonCognitoIdentity from 'amazon-cognito-identity-js';\n\n// Import Actions\nimport { postSettings, getSettings } from '../../../../redux/actions/settings_actions'\nimport { postLocalSettings } from '../../../../redux/actions/local_actions'\nimport { deviceEnabled } from '../../../../redux/actions/settings_actions'\nimport { getStatus } from '../../../../redux/actions/status_actions'\nimport { postStatus } from '../../../../api/status_api'\nimport { setCurrentMap } from '../../../../redux/actions/map_actions'\n\n// Import Utils\nimport { isEquivalent } from '../../../../methods/utils/utils'\nimport DropDownSearch from \"../../../basic/drop_down_search_v2/drop_down_search\";\nimport * as taskActions from \"../../../../redux/actions/tasks_actions\";\n\nconst Settings = () => {\n\n    const dispatch = useDispatch()\n    const onPostSettings = (settings) => dispatch(postSettings(settings))\n    const onGetSettings = () => dispatch(getSettings())\n    const onPostLocalSettings = (settings) => dispatch(postLocalSettings(settings))\n    const onSetCurrentMap = (map) => dispatch(setCurrentMap(map))\n    const onGetStatus = () => dispatch(getStatus())\n    const onDeviceEnabled = (bool) => dispatch(deviceEnabled(bool))\n\n    const mapReducer = useSelector(state => state.mapReducer)\n    const serverSettings = useSelector(state => state.settingsReducer.settings)\n    const localSettings = useSelector(state => state.localReducer.localSettings)\n    const status = useSelector(state => state.statusReducer.status)\n    const MiRMapEnabled = useSelector(state => state.localReducer.localSettings.MiRMapEnabled)\n    const devices = useSelector(state =>state.devicesReducer.devices)\n    const deviceEnabledSetting = serverSettings.deviceEnabled\n    const {\n        currentMap,\n        maps\n    } = mapReducer\n\n    const [serverSettingsState, setServerSettingsState] = useState({})\n    const [localSettingsState, setLocalSettingsState] = useState({})\n    const [mapSettingsState, setMapSettingsState] = useState(currentMap)\n    const [mirUpdated, setMirUpdated] = useState(false)\n    const [devicesEnabled, setDevicesEnabled] = useState(!!deviceEnabledSetting)\n\n    /**\n     *  Sets current settings to state so that changes can be discarded or saved\n     * */\n    useEffect(() => {\n        setServerSettingsState(serverSettings)\n        setLocalSettingsState(localSettings)\n    }, [])\n\n\n    /**\n     * Handles updating settings on the server\n     * All devices that are connected to the server will have these settings\n     */\n    const handleUpdateServerSettings = (setting) => {\n\n        const key = Object.keys(setting)[0]\n        const value = Object.values(setting)[0]\n\n        const updatedSettings = {\n            ...serverSettingsState,\n            [key]: value,\n        }\n\n        setServerSettingsState(updatedSettings)\n\n    }\n\n    /**\n     * Handles updating settings on the device\n     * These are device specific settings,\n     * Changing these will only effect the current device\n     */\n    const handleUpdateLocalSettings = (setting) => {\n\n        const key = Object.keys(setting)[0]\n        const value = Object.values(setting)[0]\n\n        const updatedSettings = {\n            ...localSettingsState,\n            [key]: value,\n        }\n\n        console.log(updatedSettings)\n        \n        setLocalSettingsState(updatedSettings)\n\n    }\n\n    // Submits the Mir Connection to the backend\n    const handleMirConnection = async () => {\n        // Tells the backend that a new mir ip has been entered\n        const mir = { mir_connection: 'connecting' }\n\n        // post both settiings and status because the IP address is in settings but the backend knows it was updated from the status\n        await onPostSettings(serverSettingsState)\n        await postStatus(mir)\n\n        setMirUpdated(false)\n\n    }\n\n    // Submits settings to the backend\n    const handleSumbitSettings = async () => {\n        // Sees if either settings have changed. If the state settigns and redux settings are different, then they've changed\n        const localChange = isEquivalent(localSettingsState, localSettings)\n        const serverChange = isEquivalent(serverSettingsState, serverSettings)\n        const mapChange = !isEquivalent(mapSettingsState, currentMap)\n        const deviceChange = isEquivalent(deviceEnabled, deviceEnabledSetting)\n\n        if (!localChange) {\n            await onPostLocalSettings(localSettingsState)\n            if(localSettingsState.mapViewEnabled){\n              //const hamburger = document.querySelector('.hamburger')\n              //hamburger.classList.toggle('is-active')\n            }\n\n        }\n\n        if (!serverChange) {\n            delete serverSettingsState._id\n            await onPostSettings(serverSettingsState)\n        }\n\n        if (mapChange) {\n            // await onPostLocalSettings(localSettingsState)\n            await onSetCurrentMap(mapSettingsState)\n        }\n\n        if(!deviceChange) {\n          await onDeviceEnabled(devicesEnabled)\n          await onPostSettings(serverSettingsState)\n        }\n\n        await onGetSettings()\n        await onGetStatus()\n\n    }\n\n    // Handles Time zone (NOT WORKING)\n    const TimeZone = () => {\n\n\n        return (\n            <styled.SettingContainer>\n\n                <styled.Header>Time Zone (NOT WORKING)</styled.Header>\n\n                <TimezonePicker\n                    value='Pacific/Honolulu'\n                    onChange={() => {}}\n                    inputProps={{\n                        placeholder: 'Select Timezone ...',\n                        name: 'timezone',\n                    }}\n                    style={{ width: '100%' }}\n\n                />\n            </styled.SettingContainer>\n\n        )\n    }\n\n    // Handles the MIR IP connectiong\n    const MirIp = () => {\n\n        let connectionIcon = ''\n        let connectionText = ''\n\n        // Sets the connection variables according to the state of\n        if (mirUpdated) {\n            connectionIcon = 'fas fa-question'\n            connectionText = 'Not Connected'\n        }\n        else if (status.mir_connection === 'connected') {\n            connectionIcon = 'fas fa-check'\n            connectionText = 'Connected'\n        }\n        else if (status.mir_connection === 'connecting') {\n            connectionIcon = 'fas fa-circle-notch fa-spin'\n            connectionText = 'Connecting'\n        }\n        else if (status.mir_connection === 'failed') {\n            connectionIcon = 'fas fa-times'\n            connectionText = 'Failed'\n        }\n        else {\n            connectionIcon = 'fas fa-question'\n            connectionText = 'Not Connected'\n\n        }\n\n        if (MiRMapEnabled) {\n            return (\n                <styled.SettingContainer style={{ marginTop: '1rem' }}>\n\n\n\n                    <styled.RowContainer style={{ position: 'relative', justifyContent: 'space-between' }}>\n                        <styled.Header>MIR IP</styled.Header>\n                        <styled.ConnectionButton onClick={() => handleMirConnection()} disabled={(connectionText === 'Connected' || connectionText === 'Connecting')}>\n                            {connectionText}\n                            <styled.ConnectionIcon className={connectionIcon} />\n                        </styled.ConnectionButton>\n\n                    </styled.RowContainer>\n\n                    <Textbox\n                        placeholder=\"MiR IP Address\"\n                        value={serverSettingsState.mir_ip}\n                        onChange={(event) => {\n                            setServerSettingsState({\n                                ...serverSettingsState,\n                                mir_ip: event.target.value\n                            })\n                        }}\n                        style={{ width: '100%' }}\n\n                    />\n\n                </styled.SettingContainer>\n            )\n        }\n    }\n\n    const APIAddress = () => {\n        //  if(MiRMapEnabled){\n        return (\n            <styled.SettingContainer>\n\n\n\n                <styled.RowContainer>\n                    <styled.Header>Show Developer Settings</styled.Header>\n`                  <Switch\n                        checked={localSettingsState.toggleDevOptions}\n                        onChange={() => {\n                            handleUpdateLocalSettings({ toggleDevOptions: !localSettingsState.toggleDevOptions })\n                        }}\n                        onColor='red'\n                        style={{ marginRight: '1rem' }}\n                    />\n\n                </styled.RowContainer>\n\n                {localSettingsState.toggleDevOptions ?\n                    <>\n\n                        <styled.Header style = {{fontSize: '1.2rem'}}>Non Local API IP Address</styled.Header>\n\n                        <styled.RowContainer>\n                            <Switch\n                                checked={localSettingsState.non_local_api}\n                                onChange={() => {\n                                    handleUpdateLocalSettings({ non_local_api: !localSettings.non_local_api })\n                                }}\n                                onColor='red'\n                                style={{ marginRight: '1rem' }}\n                            />\n                            <Textbox\n                                placeholder=\"API IP Address\"\n                                value={localSettingsState.non_local_api_ip}\n                                onChange={(event) => {\n                                    handleUpdateLocalSettings({ non_local_api_ip: event.target.value })\n                                }}\n                                style={{ width: '100%' }}\n                            // type = 'number'\n                            />\n                        </styled.RowContainer>\n\n                        <styled.Header style = {{fontSize: '1.2rem', paddingTop: '2rem'}}>Devices Enabled</styled.Header>\n\n                        <styled.RowContainer>\n                            <styled.Header style = {{fontSize: '.8rem', paddingTop: '1rem', paddingRight: '1rem'}}>Disabled</styled.Header>\n                            <Switch\n                                checked={serverSettingsState.deviceEnabled}\n                                onChange={() => {\n                                    setDevicesEnabled(!devicesEnabled)\n                                    setServerSettingsState({\n                                        ...serverSettingsState,\n                                        deviceEnabled: !devicesEnabled\n                                    })\n                                }}\n                                onColor='red'\n                                style={{ marginRight: '1rem' }}\n                            />\n                            <styled.Header style = {{fontSize: '.8rem', paddingTop: '1rem'}}>Enabled</styled.Header>\n                        </styled.RowContainer>\n                    </>\n                    :\n                    <></>\n                }\n\n            </styled.SettingContainer>\n        )\n        //  }\n    }\n\n\n    const MapViewEnabled = () => {\n        return (\n            <styled.SettingContainer>\n\n\n                <styled.Header>Show Map View</styled.Header>\n\n\n                <styled.RowContainer>\n                    <styled.SwitchContainerLabel>Show List View</styled.SwitchContainerLabel>\n                    <Switch\n                        onColor='red'\n                        checked={localSettingsState.mapViewEnabled}\n                        onChange={() => {\n                            handleUpdateLocalSettings({ mapViewEnabled: !localSettingsState.mapViewEnabled })\n                        }}\n                        style={{ margin: \"0 2rem 0 2rem\" }}\n                    />\n                    <styled.SwitchContainerLabel>Show Map View</styled.SwitchContainerLabel>\n                </styled.RowContainer>\n\n            </styled.SettingContainer>\n        )\n    }\n\n    const CurrentMap = () => {\n        const selectedMap = maps.find((map) => map._id === localSettings.currentMapId)\n        return (\n            <styled.SettingContainer>\n\n\n                <styled.Header>Current Map</styled.Header>\n\n\n                <styled.RowContainer>\n                    <DropDownSearch\n                        placeholder=\"Select Map\"\n                        label=\"Select the map you would like to use for RMStudio\"\n                        labelField=\"name\"\n                        valueField=\"_id\"\n                        options={maps}\n                        values={selectedMap ? [selectedMap] : []}\n                        dropdownGap={5}\n                        noDataLabel=\"No matches found\"\n                        closeOnSelect=\"true\"\n                        onChange={values => {\n                            // update current map\n                            setMapSettingsState(values[0])\n                            // update current map in local storage\n                            handleUpdateLocalSettings({ currentMapId: values[0]._id })\n                        }}\n                        className=\"w-100\"\n                    />\n                </styled.RowContainer>\n\n            </styled.SettingContainer>\n        )\n    }\n\n    const SignOut = () => {\n\n        const localReducer = useSelector(state => state.localReducer.localSettings)\n\n        const signOut = async () => {\n\n            var poolData = {\n                UserPoolId: 'us-east-2_YFnCIb6qJ',\n                ClientId: '5bkenhii8f4mqv36k0trq6hgc7',\n            };\n    \n            var userPool = new AmazonCognitoIdentity.CognitoUserPool(poolData);\n            var cognitoUser = userPool.getCurrentUser();\n            cognitoUser.signOut();\n\n            await onPostLocalSettings({\n                ...localReducer,\n                authenticated: false\n            })\n\n            window.location.reload();\n\n         }\n        return (\n            <styled.SettingContainer>\n\n                <Button onClick={signOut}> Sign Out </Button>\n\n            </styled.SettingContainer>\n        )\n    }\n\n    return (\n        <styled.SettingsContainer>\n            <ContentHeader content={'settings'} mode={'title'} saveEnabled={true} onClickSave={handleSumbitSettings} />\n            {MirIp()}\n            {MapViewEnabled()}\n            {CurrentMap()}\n            {SignOut()}\n            {APIAddress()}\n\n            {/* {TimeZone()} */}\n        </styled.SettingsContainer>\n    )\n}\n\nexport default Settings\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    flex-grow: 1;\n    justify-content: center;\n    align-items: center;\n`;\n\nexport const Text = styled.h1`\n\n`\n\nexport const ReloadButton = styled.button`\n  margin-top: .5rem;\n`\n","import React, {Component} from 'react';\n\n// import styles\nimport * as styled from './page_error_boundary.style'\n\nclass PageErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n       hasError: false,\n       error:null,\n       info:null\n     };\n  }\n\n\n  getDerivedStateFromError(error) {\n    return {hasError:true}\n  }\n\n  componentDidCatch(error, info) {\n    // log the error to an error reporting service\n    this.setState({\n    hasError: true,\n    error: error,\n    info: info\n  });\n}\n\n\n\n  handleReloadPage = () => {\n    window.location.reload();\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return(\n        <styled.Container>\n          <styled.Text>There was an issue loading the page... sorry!</styled.Text>\n          <styled.ReloadButton onClick={this.handleReloadPage} className=\"btn btn-outline-danger\">\n            Reload Page\n          </styled.ReloadButton>\n          <styled.ReloadButton onClick={this.props.deleteLocalSettings} className=\"btn btn-outline-danger\">\n            Delete Local Storage\n          </styled.ReloadButton>\n        </styled.Container>\n      )\n\n    }\n    else{\n      return this.props.children\n    }\n  }\n}\n\nexport default PageErrorBoundary;\n","import styled from 'styled-components'\nimport {Calendar} from \"react-calendar\";\n\n\nexport const TitleContainer = styled.h1`\n    font-size: ${props => props.theme.fontSize.sz2};\n    font-family: ${props => props.theme.font.primary};\n    color: ${props => props.theme.bg.septenary};\n    margin-top: .6rem;\n`;\n\nexport const DefaultContainer = styled.div`\n`;\n\nexport const DefaultFieldContentContainer = styled.div`\n    width: 100%;\n    height: auto;\n    position: relative;\n`;\n\nexport const DefaultFieldDropdownContainer = styled.div`\n    flex: 1;\n`;\n\nexport const IconContainerComponent = styled.div`\n    width: auto;\n    height: auto;\n    position: absolute;\n    top: 50%;\n    right: 2rem;\n    transform: translateY(-50%);\n    margin: 0;\n    padding: 0;\n    background; cyan;\n`;\n\nexport const StyledCalendar = styled(Calendar)`\n\n\t.react-calendar {\n    width: 100%;\n    max-width: 100%;\n    // background: white;\n    border: 1px solid #a0a096;\n    font-family: Arial, Helvetica, sans-serif;\n    line-height: 1.125em;\n    \n}\n.react-calendar--doubleView {\n    width: 700px;\n}\n.react-calendar--doubleView .react-calendar__viewContainer {\n    display: flex;\n    margin: -0.5em;\n}\n.react-calendar--doubleView .react-calendar__viewContainer > * {\n    width: 50%;\n    margin: 0.5em;\n}\n.react-calendar,\n.react-calendar *,\n.react-calendar *:before,\n.react-calendar *:after {\n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n    box-sizing: border-box;\n}\n.react-calendar button {\n    margin: 0;\n    border: 0;\n    outline: none;\n    outline: none !important;\n}\n.react-calendar button:enabled:hover {\n    cursor: pointer;\n}\n.react-calendar__navigation {\n    height: 44px;\n    margin-bottom: 1em;\n}\n.react-calendar__navigation button {\n    min-width: 44px;\n    background: none;\n    background: ${props => props.theme.bg.quinary};\n    color: ${props => props.theme.bg.octonary};\n}\n.react-calendar__navigation button:enabled:hover,\n.react-calendar__navigation button:enabled:focus {\n    background-color: #e6e6e6;\n}\n.react-calendar__navigation button[disabled] {\n    background-color: #f0f0f0;\n}\n.react-calendar__month-view__weekdays {\n    text-align: center;\n    text-transform: uppercase;\n    font-weight: bold;\n    font-size: 0.75em;\n}\n.react-calendar__month-view__weekdays__weekday {\n    padding: 0.5em;\n}\n.react-calendar__month-view__weekNumbers {\n    font-weight: bold;\n}\n.react-calendar__month-view__weekNumbers .react-calendar__tile {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 0.75em;\n    padding: calc(0.75em / 0.75) calc(0.5em / 0.75);\n    \n}\n.react-calendar__month-view__days__day {\n\tcolor: white;\n}\n.react-calendar__month-view__days__day--weekend {\n    color: ${props => props.theme.bg.senary};\n}\n.react-calendar__month-view__days__day--neighboringMonth {\n    color: grey;\n}\n.react-calendar__year-view .react-calendar__tile,\n.react-calendar__decade-view .react-calendar__tile,\n.react-calendar__century-view .react-calendar__tile {\n    padding: 2em 0.5em;\n}\n.react-calendar__tile {\n    max-width: 100%;\n    text-align: center;\n    padding: 0.75em 0.5em;\n    background: ${props => props.theme.bg.quinary};\n    \n}\n.react-calendar__tile:disabled {\n    background-color: #f0f0f0;\n}\n.react-calendar__tile:enabled:hover,\n.react-calendar__tile:enabled:focus {\n    background-color: #e6e6e6;\n}\n.react-calendar__tile--now {\n    background: ${props => props.theme.bg.senary};\n}\n.react-calendar__tile--now:enabled:hover,\n.react-calendar__tile--now:enabled:focus {\n    background: ${props => props.theme.bg.septenary};\n}\n.react-calendar__tile--hasActive {\n    background: #76baff;\n}\n.react-calendar__tile--hasActive:enabled:hover,\n.react-calendar__tile--hasActive:enabled:focus {\n    background: #a9d4ff;\n}\n.react-calendar__tile--active {\n    background: #006edc;\n    color: white;\n}\n.react-calendar__tile--active:enabled:hover,\n.react-calendar__tile--active:enabled:focus {\n    background: #1087ff;\n}\n.react-calendar--selectRange .react-calendar__tile--hover {\n    background-color: #e6e6e6;\n}\n\n\n\n`\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useField, useFormikContext } from \"formik\";\nimport Calendar from 'react-calendar'\nimport { getMessageFromError } from \"../../../../methods/utils/form_utils\";\n\n// import styles\nimport * as styled from './calendar_field.style'\nimport ErrorTooltip from \"../error_tooltip/error_tooltip\";\nimport { isEmpty } from \"ramda\";\n\n\nconst CalendarField = ({\n    onChange,\n    Container,\n    onDropdownClose,\n    startEnd,\n    ...props\n}) => {\n\n    const { setFieldValue, setFieldTouched, ...formikContext } = useFormikContext();\n    const [{ value, ...field }, { initialValue, ...meta }] = useField(props);\n    const hasError = meta.touched && meta.error;\n\n    const errorMessage = getMessageFromError(meta.error);\n\n    const startYearVal = value?.start?.year || 0\n    const startMonthVal = value?.start?.month || 0\n    const startDayVal = value?.start?.day || 0\n\n    const endYearVal = value?.end?.year || 0\n    const endMonthVal = value?.end?.month || 0\n    const endDayVal = value?.end?.day || 0\n\n    const startDate = (startYearVal && (startMonthVal + 1) && startDayVal) ? new Date(startYearVal, startMonthVal, startDayVal, 0, 0, 0, 0) : new Date()\n    const endDate = (endYearVal && (endMonthVal + 1) && endDayVal) ? new Date(endYearVal, endMonthVal, endDayVal, 0, 0, 0, 0) : null\n\n    const isStart = startEnd === 'CALENDAR_START' ? true : false\n\n    return (\n        <Container>\n            <styled.StyledCalendar\n                onDropdownClose={() => {\n                    // set this field to touched if not already\n\n                    // call any additional function that was passed as prop\n                    onDropdownClose && onDropdownClose();\n                }}\n                {...field}\n                // selectRange={true}\n                // value={[startDate, endDate]}\n                // allowPartialRange\n                value={!!isStart ? startDate : endDate}\n\n                // defaultValue={[initialStartDate, initialEndDate]}\n                // defaultActiveStartDate={initialStartDate}\n                // defaultValue={value}\n                {...props}\n                onChange={changeValue => {\n                    const isTouched = meta.touched;\n                    if (!isTouched) {\n                        setFieldTouched(true)\n                    }\n\n                    const date = changeValue\n\n                    let month = date.getUTCMonth()\n                    let day = date.getUTCDate();\n                    let year = date.getUTCFullYear();\n\n                    let newValue\n                    // If start add Start\n                    if (!!isStart) {\n                        newValue = {\n                            ...value,\n                            start: { year, month, day }\n                        }\n                    }\n                    // Else add end\n                    else {\n                        newValue = {\n                            ...value,\n                            end: { year, month, day }\n                        }\n                    }\n\n                    // const startDate = value[0]\n\n\n                    // let month = startDate.getUTCMonth()\n                    // let day = startDate.getUTCDate();\n                    // let year = startDate.getUTCFullYear();\n\n\n\n                    // if (Array.isArray(value) && value.length > 1) {\n                    //     const endDate = value[1]\n                    //     let month = endDate.getUTCMonth()\n                    //     let day = endDate.getUTCDate() - 1\n                    //     let year = endDate.getUTCFullYear()\n                    // }\n\n                    setFieldValue(field.name, newValue);\n                    onChange && onChange(value)\n                }}\n            />\n            {/*</style.DefaultFieldDropdownContainer>*/}\n\n            <ErrorTooltip\n                visible={hasError}\n                text={errorMessage}\n                ContainerComponent={styled.IconContainerComponent}\n            />\n        </Container>\n    );\n};\n\n// Specifies propTypes\nCalendarField.propTypes = {\n};\n\n// Specifies the default values for props:\nCalendarField.defaultProps = {\n    Container: styled.DefaultContainer,\n    onChange: null,\n};\n\nexport default CalendarField;\n","import axios from 'axios';\n// import * as log from 'loglevel';\n\nimport logger from '../logger'\n\nimport { apiIPAddress } from '../settings/settings'\nconst operator = 'cards'\nconst log = logger.getLogger('Api')\n\nexport async function getCardHistory(ID) {\n    try {\n        const response = await axios({\n            method: 'get',\n            url: apiIPAddress() + operator + '/' + ID + '/card_history',\n            headers: {\n                'X-API-Key': '123456',\n                'Access-Control-Allow-Origin': '*'\n            }\n        });\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n\n}","import { normalize } from 'normalizr';\n\n// import types\nimport {\n    GET,\n    POST,\n    DELETE,\n    PUT\n} from '../types/prefixes';\n\nimport {\n    CARD_HISTORY,\n} from '../types/data_types';\n\nimport { api_action } from './index';\n\nimport log from \"../../logger\"\nimport * as api from \"../../api/card_history_api\";\nimport {convertArrayToObject} from \"../../methods/utils/utils\";\n\nconst logger = log.getLogger(\"Card History\", \"Redux\")\n\n// get\n// ******************************\nexport const getCardHistory = (cardId) =>  async (dispatch) => {\n\n    const callback = async () => {\n\n        // make request\n        const card = await api.getCardHistory(cardId);\n        console.log(\"getCardHistory card\",card)\n\n        // const cardsObj = convertArrayToObject(cards, \"_id\")\n        // console.log(\"getCards cardsObj\",cardsObj)\n\n        // format response\n        // const normalizedSchedules = normalize(schedules, schedulesSchema);\n\n        // return payload for redux\n        return {\n            cardHistory: card,\n        };\n    }\n\n    const actionName = GET + CARD_HISTORY;\n\n    // payload is returned back\n    const payload = await api_action(actionName, callback, dispatch);\n\n    return payload;\n\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n","import styled from 'styled-components';\nimport TimePicker from 'rc-time-picker';\nimport {css} from 'styled-components'\n\n\nexport const ProcessFieldContainer = styled.div`\n    margin-bottom: 1rem;\n    display: flex;\n    flex-direction: column;\n    //width: auto;\n`\n\n\nexport const ProcessOptionsContainer = styled.div`\n    //margin-bottom: 1rem;\n    display: flex;\n    overflow-x: auto;\n    overflow-y: hidden;\n    position: relative;\n\n\n    box-shadow: ${props => props.hasError && \"0 0 5px red\"};\n\n    background: ${props => props.theme.bg.quinary};\n    padding: 1rem;\n    border-radius: 1rem;\n\n    padding-bottom: 1rem;\n\n    ::-webkit-scrollbar {\n        height: 10px;\n    }\n\n    /* Track */\n    ::-webkit-scrollbar-track {\n        background: rgba(100,100,100,0.2);\n        opacity: 10%;\n    }\n\n    ::-webkit-scrollbar-track:hover {\n        background: rgba(100,100,100,0.6);\n        border-left: 1px solid rgba(100,100,100,0.6);\n        border-right: 1px solid rgba(100,100,100,0.6);\n    }\n\n    /* Handle */\n    ::-webkit-scrollbar-thumb {\n        background: ${props => props.theme.bg.tertiary};\n        border-radius: .5rem;\n    }\n\n    /* Handle on hover */\n    ::-webkit-scrollbar-thumb:hover {\n        background: #555;\n\n    }\n`\nexport const ProcessName = styled.span`\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`\n\nexport const ProcessOption = styled.div`\n\n\t&:hover {\n\t\tcursor: pointer;\n\t}\n\t\n\ttext-shadow: 0.05rem 0.05rem 0.2rem #303030;\n\t&:hover {\n\t\tcursor: pointer;\n\t\tfilter: brightness(140%);\n\t}\n\t\n\t&:active{\n\t\tfilter: brightness(85%);\n\t\ttext-shadow: none;\n\t}\n  \n  \tbackground: ${props => props.theme.bg.senary};\n\t\n  \tpadding: 1rem;\n\tborder-radius: 1rem;\n  \tmargin-right: 1rem;\n  \n\tmin-width: 10rem;\n\tmax-width: 10rem;\n\twidth: 10rem;\n\t\n\tdisplay: inline-flex;\n\tjustify-content: center;\n\talign-items: center;\n\t\n\t${props => (!props.isSelected && props.containsSelected) && \"filter: grayscale(50%)\"};\n\t${props => props.isSelected && \"filter: brightness(130%)\"};\n\ttransition: all 0.5s ease;\n\t\n\tfont-size: ${props => props.theme.fontSize.sz3};\n\tfont-weight: ${props => props.theme.fontWeight.normal};\n  \n\toverflow: hidden;\n\twhite-space: nowrap;\n\ttext-overflow: ellipsis;\n`\n\nexport const ErrorTooltipContainerComponent = styled.div`\n\t//align-self: center;\n  width: auto;\n  height: auto;\n  position: absolute;\n  z-index: 500;\n  top: 50%;\n  right: 1rem;\n  transform: translateY(-50%);\n  margin: 0;\n  padding: 0;\n`\n\n\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { useField, useFormikContext } from \"formik\";\n\nimport ErrorTooltip from '../error_tooltip/error_tooltip';\nimport * as styled from './scrolling_buttons_field.style'\n\nimport log from \"../../../../logger\";\nconst logger = log.getLogger(\"ScrollingButtonField\");\n\nconst ScrollingButtonField = ({\n\t\t\t\t\t\tvalueKey,\n\t\t\t\t\t\tlabelKey,\n\t\t\t\t\t\tonBlur,\n\t\t\t\t\t\tonFocus,\n\t\t\t\t\t\tonChange,\n\t\t\t\t\t\tErrorTooltipContainerComponent,\n\t\t\t\t\t\toptions,\n\t\t\t\t\t\t...props }) => {\n\n\t// get formik data\n\tconst { setFieldValue, setFieldTouched, validateOnChange, validateOnBlur, validateField, validateForm, ...context } = useFormikContext();\n\tconst [field, meta] = useField(props);\n\n\t// extract field data\n\tconst {\n\t\tvalue: fieldValue,\n\t\tname: fieldName\n\t} = field\n\n\t// extract meta data\n\tconst { touched, error } = meta\n\n\t// does the field contain an error?\n\tconst hasError = touched && error\n\n\treturn (\n\t\t<div style={{position: \"relative\"}}>\n\t\t\t<ErrorTooltip\n\t\t\t\tvisible={hasError}\n\t\t\t\ttext={error}\n\t\t\t\tContainerComponent={ErrorTooltipContainerComponent}\n\t\t\t/>\n\t\t\t<styled.ProcessOptionsContainer\n\t\t\t\thasError={hasError}\n\t\t\t>\n\t\t\t\t{options\n\n\t\t\t\t\t// each option must contain value and label - filter out any that don't\n\t\t\t\t\t.filter((currOption) => {\n\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\t[valueKey]: currValue = null,\n\t\t\t\t\t\t\t[labelKey]: currLabel = null\n\t\t\t\t\t\t} = currOption\n\n\t\t\t\t\t\tif(currValue && currLabel) {\n\t\t\t\t\t\t\treturn true\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// give warning to developer that item is missing parameter(s)\n\t\t\t\t\t\t\tif(!currValue) logger.warn(\"Option is missing value\")\n\t\t\t\t\t\t\tif(!currLabel) logger.warn(\"Option is missing label\")\n\n\t\t\t\t\t\t\treturn false\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\n\t\t\t\t\t// map remaining options content\n\t\t\t\t\t.map((currOption) => {\n\n\t\t\t\t\tconst {\n\t\t\t\t\t\t[valueKey]: currValue = \"\",\n\t\t\t\t\t\t[labelKey]: currLabel = \"\"\n\t\t\t\t\t} = currOption\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<styled.ProcessOption\n\t\t\t\t\t\t\tkey={currValue}\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tsetFieldValue(fieldName, currValue)\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tisSelected={currValue === fieldValue}\n\t\t\t\t\t\t\tcontainsSelected={fieldValue}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<styled.ProcessName>{currLabel}</styled.ProcessName>\n\t\t\t\t\t\t</styled.ProcessOption>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</styled.ProcessOptionsContainer>\n\t\t</div>\n\t);\n};\n\n// Specifies propTypes\nScrollingButtonField.propTypes = {\n\tErrorTooltipContainerComponent: PropTypes.elementType\n};\n\n// Specifies the default values for props:\nScrollingButtonField.defaultProps = {\n\tErrorTooltipContainerComponent: styled.ErrorTooltipContainerComponent\n};\n\nexport default ScrollingButtonField;\n","import styled from 'styled-components';\nimport TimePicker from 'rc-time-picker';\nimport {css} from 'styled-components'\n\n\nexport const HilInputContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n`\n\n\nexport const IconContainerComponent = styled.div`\n    width: auto;\n    height: auto;\n    position: absolute;\n    top: 50%;\n    right: 2rem;\n    transform: translateY(-50%);\n    margin: 0;\n    padding: 0;\n`;\n\nexport const InputContainer = styled.div`\n\n`\n\nexport const HilInput = styled.input`\n  -webkit-transition: all 0.30s ease-in-out;\n  -moz-transition: all 0.30s ease-in-out;\n  -ms-transition: all 0.30s ease-in-out;\n  -o-transition: all 0.30s ease-in-out;\n\n  transition: all 0.30s ease-in-out;\n  transition: all 0.30s ease-in-out;\n  \n    margin: 1rem 1rem;\n    border-radius: .5rem;\n    text-align: center;\n    width: 10rem;\n    font-size: 2rem;\n    color: white;\n  background: ${props => props.theme.bg.quinary};\n  \n    //-webkit-appearance: none !important;\n    &:focus{\n        outline: 0 !important;\n        //border-color: #56d5f5;\n        box-shadow: 0 0 5px #56d5f5;\n      \tborder: 1px solid #56d5f5;\n      filter: brightness(120%);\n      // background: ${props => props.theme.bg.senary};\n    }\n\n  /* Chrome, Safari, Edge, Opera */\n  &::-webkit-outer-spin-button,\n  &::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n\n  /* Firefox */\n  & input[type=number] {\n    -moz-appearance: textfield;\n  }\n  \n  \n  ${props => props.hasError && errorCss};\n`\n\nconst errorCss = css`\n  box-shadow: 0 0 5px red;\n  border: 1px solid red;\n  \n  &:focus{\n    outline: 0 !important;\n    box-shadow: 0 0 5px red;\n    border: 1px solid red;\n  }\n`\n\nexport const HilInputIcon = styled.i`\n    font-size: 5rem;\n    text-shadow: 0.05rem 0.05rem 0.2rem #303030;\n    transition: text-shadow 0.1s ease, filter 0.1s ease;\n  color: ${props => props.color};\n\n  ${props => props.disabled && disabledCss};\n  \n    &:hover {\n        cursor: pointer;\n    }\n\n    &:active{\n        filter: brightness(85%);\n        text-shadow: none;\n    }\n  \n  \n`\n\nconst disabledCss = css`\n  color: ${props => props.theme.disabled};\n`\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { useField, useFormikContext } from \"formik\";\n\nimport ErrorTooltip from '../error_tooltip/error_tooltip';\nimport * as styled from './number_field.style'\nimport useLongPress from \"../../../../hooks/useLongPress\";\n\n// function setDeceleratingTimeout(callback, factor, initialRate, times, minRate)\n// {\n// \tvar internalCallback = function(tick, counter) {\n//\n// \t\tconst newRate = (initialRate) - (++counter * factor)\n//\n// \t\treturn function() {\n// \t\t\tif (--tick >= 0) {\n// \t\t\t\twindow.setTimeout(internalCallback, (newRate > minRate) ? newRate : minRate);\n// \t\t\t\tcallback();\n// \t\t\t}\n// \t\t}\n// \t}(times, 0);\n//\n// \twindow.setTimeout(internalCallback, factor);\n// };\n\nconst NumberField = ({\n\t\t\t\t\t\tmaxValue,\n\t\t\t\t\t\tminValue,\n\t\t\t\t\t   ...props }) => {\n\n\tconst { setFieldValue, setFieldTouched, validateOnChange, validateOnBlur, validateField, validateForm, ...context } = useFormikContext();\n\tconst [field, meta] = useField(props);\n\n\t// extract field data\n\tconst {\n\t\tvalue: fieldValue,\n\t\tname: fieldName\n\t} = field\n\n\t// extract meta data\n\tconst { touched, error } = meta\n\n\t// does the field contain an error?\n\tconst hasError = touched && error\n\n\t// const onLongPress = () => {\n\t//\n\t// \tconsole.log('longpress is triggered');\n\t// \tsetDeceleratingTimeout(\n\t// \t\t() => {\n\t// \t\t\tconsole.log(\"CALLBACK\")\n\t// \t\t\tsetFieldValue(fieldName, parseInt(fieldValue) - 1)\n\t// \t\t},\n\t// \t\t50,\n\t// \t\t500,\n\t// \t\t300,\n\t// \t\t10)\n\t//\n\t// };\n\t//\n\t// const onClick = () => {\n\t// \tconsole.log('click is triggered')\n\t// }\n\t//\n\t// const defaultOptions = {\n\t// \tshouldPreventDefault: true,\n\t// \tdelay: 500,\n\t// };\n\t// const longPressEvent = useLongPress(onLongPress, onClick, defaultOptions);\n\n\n\treturn (\n\t\t<styled.HilInputContainer>\n\t\t\t<styled.HilInputIcon\n\t\t\t\tdisabled={!(fieldValue > minValue)}\n\t\t\t\tclassName='fas fa-minus-circle'\n\t\t\t\tcolor={'#ff1818'}\n\t\t\t\tonClick={() => {\n\t\t\t\t\tif(!touched) {\n\t\t\t\t\t\tsetFieldTouched(fieldName, true)\n\t\t\t\t\t}\n\n\t\t\t\t\tif (maxValue) {\n\t\t\t\t\t\tif (fieldValue > maxValue) {\n\t\t\t\t\t\t\t// fieldValue should not exceed count, it may have been set higher before a lot was selected\n\t\t\t\t\t\t\t// reduce fieldValue to lot count\n\t\t\t\t\t\t\tsetFieldValue(fieldName, maxValue)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// if(minValue !== null) {\n\t\t\t\t\t\t// fieldValue cannot be negative\n\t\t\t\t\t\tif (fieldValue > minValue) setFieldValue(fieldName,fieldValue - 1)\n\t\t\t\t\t// }\n\n\t\t\t\t\t// setFieldValue(fieldName,fieldValue - 1)\n\n\n\t\t\t\t}}\n\t\t\t/>\n\n\t\t\t<div style={{position: \"relative\"}}>\n\t\t\t\t<styled.HilInput\n\t\t\t\t\thasError={hasError}\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tonChange={(e) => {\n\n\t\t\t\t\t\tif(!touched) {\n\t\t\t\t\t\t\tsetFieldTouched(fieldName, true)\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst enteredValue = e.target.value\n\t\t\t\t\t\tconst enteredValueInt = parseInt(enteredValue)\n\n\t\t\t\t\t\tif (isNaN(enteredValueInt)) {\n\t\t\t\t\t\t\tif(enteredValue === \"-\") {\n\t\t\t\t\t\t\t\tsetFieldValue(fieldName, -0)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tsetFieldValue(fieldName, 0)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// if there is a maxValue, the fieldValue cannot exceed this\n\t\t\t\t\t\t\tif (maxValue) {\n\t\t\t\t\t\t\t\tif (enteredValueInt <= maxValue) setFieldValue(fieldName,enteredValueInt)\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// otherwise the value can be anything\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tsetFieldValue(fieldName, enteredValueInt)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t}}\n\t\t\t\t\tvalue={fieldValue}\n\t\t\t\t/>\n\t\t\t\t<ErrorTooltip\n\t\t\t\t\tvisible={hasError}\n\t\t\t\t\ttext={error}\n\t\t\t\t\tContainerComponent={styled.IconContainerComponent}\n\t\t\t\t/>\n\t\t\t</div>\n\n\n\n\t\t\t<styled.HilInputIcon\n\t\t\t\tdefaultValue={0}\n\t\t\t\tdisabled={!(fieldValue < maxValue)}\n\t\t\t\tclassName='fas fa-plus-circle'\n\t\t\t\tcolor={'#1c933c'}\n\t\t\t\tonClick={() => {\n\n\t\t\t\t\tif(!touched) {\n\t\t\t\t\t\tsetFieldTouched(fieldName, true)\n\t\t\t\t\t}\n\n\t\t\t\t\t// if there is a maxValue, fieldValue cannot exceed maxValue\n\t\t\t\t\tif (maxValue) {\n\t\t\t\t\t\tif (fieldValue < maxValue) {\n\t\t\t\t\t\t\tsetFieldValue(fieldName,fieldValue + 1)\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// fieldValue is greater than count (probably was set before lot was selected), reduce to count\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tsetFieldValue(fieldName, parseInt(maxValue))\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\t// otherwise fieldValue can be anything\n\t\t\t\t\telse {\n\t\t\t\t\t\tsetFieldValue(fieldName,fieldValue + 1)\n\t\t\t\t\t}\n\n\t\t\t\t}}\n\t\t\t/>\n\n\n\t\t</styled.HilInputContainer>\n\t);\n};\n\n// Specifies propTypes\nNumberField.propTypes = {\n\n};\n\n// Specifies the default values for props:\nNumberField.defaultProps = {\n\n};\n\nexport default NumberField;\n","import React, {useState, useEffect} from \"react\";\n\n// external functions\nimport PropTypes from \"prop-types\";\nimport {Formik} from \"formik\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport FadeLoader from \"react-spinners/FadeLoader\"\n\n// internal components\nimport CalendarField from \"../../../../basic/form/calendar_field/calendar_field\";\nimport TextField from \"../../../../basic/form/text_field/text_field\";\nimport Textbox from \"../../../../basic/textbox/textbox\";\nimport DropDownSearchField from \"../../../../basic/form/drop_down_search_field/drop_down_search_field\";\nimport Button from \"../../../../basic/button/button\";\nimport ButtonGroup from \"../../../../basic/button_group/button_group\";\n\n// actions\nimport {deleteCard, getCard, postCard, putCard} from \"../../../../../redux/actions/card_actions\";\nimport {getCardHistory} from \"../../../../../redux/actions/card_history_actions\";\n\n// constants\nimport {FORM_MODES} from \"../../../../../constants/scheduler_constants\";\n\n// utils\nimport {parseMessageFromEvent} from \"../../../../../methods/utils/card_utils\";\nimport {CARD_SCHEMA_MODES, cardSchema, getCardSchema} from \"../../../../../methods/utils/form_schemas\";\nimport {getProcessStations} from \"../../../../../methods/utils/processes_utils\";\nimport {isEmpty} from \"../../../../../methods/utils/object_utils\";\n\n// import styles\nimport * as styled from \"./card_editor.style\"\n\n// logger\nimport log from '../../../../../logger'\nimport ErrorTooltip from \"../../../../basic/form/error_tooltip/error_tooltip\";\nimport ScrollingButtonField from \"../../../../basic/form/scrolling_buttons_field/scrolling_buttons_field\";\nimport NumberField from \"../../../../basic/form/number_field/number_field\";\n\nconst logger = log.getLogger(\"CardEditor\")\nlogger.setLevel(\"debug\")\n\nconst CONTENT = {\n\tHISTORY: \"HISTORY\",\n\tCALENDAR_START: \"CALENDAR_START\",\n\tCALENDAR_END: \"CALENDAR_END\",\n\tCALENDAR_RANGE: \"CALENDAR_RANGE\",\n\tMOVE: \"MOVE\"\n}\n\nconst FORM_BUTTON_TYPES = {\n\tSAVE: \"SAVE\",\n\tADD: \"ADD\",\n\tADD_AND_NEXT: \"ADD_AND_NEXT\",\n\tMOVE_OK: \"MOVE_OK\"\n}\n\nconst SubmitErrorHandler = ({ submitCount, isValid, onSubmitError }) => {\n\tconst [lastHandled, setLastHandled] = useState(0);\n\tuseEffect(() => {\n\t\tif (submitCount > lastHandled && !isValid) {\n\t\t\tonSubmitError();\n\t\t\tsetLastHandled(submitCount);\n\t\t}\n\t}, [submitCount, isValid, onSubmitError, lastHandled]);\n\n\treturn null;\n};\n\nconst FormComponent = (props) => {\n\n\tconst {\n\t\tformMode,\n\t\tbins,\n\t\tbinId,\n\t\tsetBinId,\n\t\tcardId,\n\t\tclose,\n\t\tisOpen,\n\t\tonDeleteClick,\n\t\tprocessId,\n\t\terrors,\n\t\tvalues,\n\t\ttouched,\n\t\tisSubmitting,\n\t\tsubmitCount,\n\t\tsetFieldValue,\n\t\tsubmitForm,\n\t\tformikProps,\n\t\tprocessOptions,\n\t\tshowProcessSelector,\n\t\tcontent,\n\t\tsetContent,\n\t\tloaded\n\n\t} = props\n\n\n\t// actions\n\tconst dispatch = useDispatch()\n\tconst onGetCardHistory = async (cardId) => await dispatch(getCardHistory(cardId))\n\n\t// redux state\n\tconst currentProcess = useSelector(state => { return state.processesReducer.processes[processId] })\n\tconst cardHistory = useSelector(state => { return state.cardsReducer.cardHistories[cardId] })\n\tconst routes = useSelector(state => { return state.tasksReducer.tasks })\n\tconst stations = useSelector(state => { return state.stationsReducer.stations })\n\tconst processes = useSelector(state => { return state.processesReducer.processes }) || {}\n\n\t// component state\n\tconst [showLotInfo, setShowLotInfo] = useState(true)\n\n\t// derived state\n\tconst selectedBinName = stations[binId] ?\n\t\tstations[binId].name :\n\t\tbinId === \"QUEUE\" ? \"Queue\" : \"Finished\"\n\n\tconst processStationIds = getProcessStations(currentProcess, routes) // get object with all station's belonging to the current process as keys\n\tconst availableBins = !isEmpty(bins) ? Object.keys(bins) : [\"QUEUE\"]\n\n\tconst startDateText = ((values?.dates?.start?.month + 1) && values?.dates?.start?.day && values?.dates?.start?.year) ?  (values.dates.start.month + 1) + \"/\" + values.dates.start.day + \"/\" + values.dates.start.year : \"Planned start\"\n\tconst endDateText = ((values?.dates?.end?.month + 1) && values?.dates?.end?.day && values?.dates?.end?.year) ?  (values.dates?.end.month + 1) + \"/\" + values.dates?.end.day + \"/\" + values.dates?.end.year : \"Planned end\"\n\n\tconst errorCount = Object.keys(errors).length > 0 // get number of field errors\n\tconst touchedCount = Object.values(touched).length // number of touched fields\n\tconst submitDisabled = ((errorCount > 0) || (touchedCount === 0) || isSubmitting) && (submitCount > 0) // disable if there are errors or no touched field, and form has been submitted at least once\n\n\t/*\n\t*\n\t* */\n\tconst getButtonGroupOptions = () => {\n\t\tvar buttonGroupNames = []\n\t\tvar buttonGroupIds = []\n\t\tavailableBins.forEach((currBinId) =>{\n\t\t\tif(stations[currBinId]) {\n\t\t\t\tbuttonGroupNames.push(stations[currBinId].name)\n\t\t\t\tbuttonGroupIds.push(currBinId)\n\t\t\t}\n\t\t})\n\t\tif(bins[\"QUEUE\"]) {\n\t\t\tbuttonGroupNames.unshift(\"Queue\")\n\t\t\tbuttonGroupIds.unshift(\"QUEUE\")\n\t\t}\n\t\tif(bins[\"FINISH\"]) {\n\t\t\tbuttonGroupNames.push(\"Finished\")\n\t\t\tbuttonGroupIds.push(\"FINISH\")\n\t\t}\n\n\t\treturn [buttonGroupNames, buttonGroupIds]\n\t}\n\n\tconst [buttonGroupNames, buttonGroupIds] = getButtonGroupOptions()\n\n\t/*\n\t* handles when enter key is pressed\n\t*\n\t* This effect attaches an event listener to the keydown event\n\t* The listener effect listens for 'Enter' and 'NumpadEnter' events\n\t* If either of these events occur, the form will be submitted\n\t* */\n\tuseEffect(() => {\n\t\t// keydown event listener\n\t\tconst listener = event => {\n\n\t\t\t// check if event code corresponds to enter\n\t\t\tif (event.code === \"Enter\" || event.code === \"NumpadEnter\" || event.code === 13 || event.key === \"Enter\") {\n\t\t\t\t// prevent default actions\n\t\t\t\tevent.preventDefault()\n\t\t\t\tevent.stopPropagation()\n\n\n\t\t\t\tif(formMode === FORM_MODES.UPDATE) {\n\t\t\t\t\t// if the form mode is set to UPDATE, the default action of enter should be to save the lot\n\t\t\t\t\t// this is done by setting buttonType to SAVE and submitting the form\n\n\t\t\t\t\tswitch(content){\n\t\t\t\t\t\tcase CONTENT.MOVE:\n\t\t\t\t\t\t\tsetFieldValue(\"buttonType\", FORM_BUTTON_TYPES.MOVE_OK)\n\t\t\t\t\t\t\tsubmitForm()\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tsetFieldValue(\"buttonType\", FORM_BUTTON_TYPES.SAVE)\n\t\t\t\t\t\t\tsubmitForm()\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// if the form mode is set to CREATE (the only option other than UPDATE), the default action of the enter key should be to add the lot\n\t\t\t\t\t// this is done by setting buttonType to ADD and submitting the form\n\t\t\t\t\tsetFieldValue(\"buttonType\", FORM_BUTTON_TYPES.ADD)\n\t\t\t\t\tsubmitForm()\n\t\t\t\t}\n\n\t\t\t}\n\t\t};\n\n\t\t// add event listener to 'keydown'\n\t\tdocument.addEventListener(\"keydown\", listener);\n\n\t\t// on dismount remove the event listener\n\t\treturn () => {\n\t\t\tdocument.removeEventListener(\"keydown\", listener);\n\t\t};\n\t}, [])\n\n\tuseEffect(() => {\n\n\t\tif(!isOpen && content) setContent(null)\n\n\t\treturn () => {\n\t\t}\n\t}, [isOpen])\n\n\t/*\n\t* Renders content for moving some or all of a lot from one bin to another\n\t* */\n\tconst renderMoveContent = () => {\n\n\t\t// get destination options for move\n\t\t// the destination options include\n\t\tconst destinationOptions = [...Object.values(stations).filter((currStation) => {\n\t\t\tif((currStation._id !== binId) && processStationIds[currStation._id]) return true\n\t\t})]\n\t\tif(binId !== \"QUEUE\") destinationOptions.unshift({name: \"Queue\", _id: \"QUEUE\"})\n\t\tif(binId !== \"FINISH\") destinationOptions.push({name: \"Finished\", _id: \"FINISH\"})\n\n\t\tconst maxValue = bins[binId]?.count || 0\n\n\t\treturn(\n\t\t\t<styled.BodyContainer\n\t\t\t\tminHeight={\"20rem\"}\n\t\t\t>\n\t\t\t\t<div>\n\t\t\t\t\t<styled.ContentHeader style={{flexDirection: \"column\"}}>\n\t\t\t\t\t\t<styled.ContentTitle>Move lot</styled.ContentTitle>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<styled.InfoText style={{marginRight: \"1rem\"}}>Current Station</styled.InfoText>\n\t\t\t\t\t\t\t<styled.InfoText schema={\"lots\"} highlight={true}>{selectedBinName}</styled.InfoText>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</styled.ContentHeader>\n\t\t\t\t\t<div style={{display: \"flex\", flexDirection: \"column\", alignItems: \"center\", marginBottom: \"1rem\"}}>\n\t\t\t\t\t\t<styled.InfoText>Select Quantity to Move</styled.InfoText>\n\t\t\t\t\t\t<styled.InfoText style={{marginBottom: \"1rem\"}}>{maxValue} Items Available</styled.InfoText>\n\n\t\t\t\t\t\t<NumberField\n\t\t\t\t\t\t\tmaxValue={maxValue}\n\t\t\t\t\t\t\tminValue={0}\n\t\t\t\t\t\t\tname={\"moveCount\"}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\", marginBottom: \"1rem\"}}>\n\t\t\t\t\t\t<styled.InfoText style={{marginBottom: \"1rem\"}}>Select Lot Destination</styled.InfoText>\n\n\t\t\t\t\t\t<DropDownSearchField\n\t\t\t\t\t\t\tcontainerSyle={{minWidth: \"35%\"}}\n\t\t\t\t\t\t\tpattern={null}\n\t\t\t\t\t\t\tname=\"moveLocation\"\n\t\t\t\t\t\t\tlabelField={'name'}\n\t\t\t\t\t\t\toptions={destinationOptions}\n\t\t\t\t\t\t\tvalueField={\"_id\"}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</styled.BodyContainer>\n\t\t)\n\t}\n\n\tconst renderCalendarContent = (content) => {\n\t\treturn(\n\t\t\t<styled.BodyContainer>\n\t\t\t\t<styled.ContentHeader style={{}}>\n\t\t\t\t\t<styled.ContentTitle>Select Start and End Date</styled.ContentTitle>\n\t\t\t\t\t<div></div>\n\t\t\t\t</styled.ContentHeader>\n\n\t\t\t\t<styled.CalendarContainer>\n\t\t\t\t\t<CalendarField\n\t\t\t\t\t\tname={\"dates\"}\n                        startEnd = {content}\n\t\t\t\t\t/>\n\t\t\t\t</styled.CalendarContainer>\n\t\t\t</styled.BodyContainer>\n\t\t)\n\t}\n\n\tconst renderMainContent = () => {\n\t\treturn(\n\t\t\t<styled.BodyContainer>\n\t\t\t\t<styled.FieldTitle>Station</styled.FieldTitle>\n\n\t\t\t\t<ButtonGroup\n\t\t\t\t\tbuttonViewCss={styled.buttonViewCss}\n\t\t\t\t\tbuttons={buttonGroupNames}\n\t\t\t\t\tselectedIndex={buttonGroupIds.findIndex((ele) => ele === binId)}\n\t\t\t\t\tonPress={(selectedIndex)=>{\n\t\t\t\t\t\tsetBinId(buttonGroupIds[selectedIndex])\n\t\t\t\t\t\t// setFieldValue(\"selectedBin\", buttonGroupIds[selectedIndex])\n\t\t\t\t\t\t// setSelectedBin(availableBins[selectedIndex])\n\t\t\t\t\t}}\n\t\t\t\t\tcontainerCss={styled.buttonGroupContainerCss}\n\t\t\t\t\tbuttonViewSelectedCss={styled.buttonViewSelectedCss}\n\t\t\t\t\tbuttonCss={styled.buttonCss}\n\t\t\t\t/>\n\n\t\t\t\t<styled.RowContainer>\n\t\t\t\t\t<styled.ObjectInfoContainer>\n\t\t\t\t\t\t<styled.ObjectTitleContainer>\n\t\t\t\t\t\t\t<styled.ObjectLabel>Quantity</styled.ObjectLabel>\n\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tname={`bins.${binId}.count`}\n\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\tmapOutput={(val)=>parseInt(val)}\n\t\t\t\t\t\t\t\tmapInput={(val)=>parseInt(val)}\n\t\t\t\t\t\t\t\tInputComponent={styled.CountInput}\n\t\t\t\t\t\t\t\tIconContainerComponent={styled.QuantityErrorContainerComponent}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</styled.ObjectTitleContainer>\n\t\t\t\t\t</styled.ObjectInfoContainer>\n\t\t\t\t</styled.RowContainer>\n\n\t\t\t\t{formMode === FORM_MODES.UPDATE &&\n\t\t\t\t<styled.WidgetContainer>\n\t\t\t\t\t<styled.Icon\n\t\t\t\t\t\tclassName=\"fas fa-history\"\n\t\t\t\t\t\tcolor={\"red\"}\n\t\t\t\t\t\tonClick={()=> {\n\t\t\t\t\t\t\tif(content !== CONTENT.HISTORY) {\n\t\t\t\t\t\t\t\tonGetCardHistory(cardId)\n\t\t\t\t\t\t\t\tsetContent(CONTENT.HISTORY)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tsetContent(null)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</styled.WidgetContainer>\n\t\t\t\t}\n\t\t\t</styled.BodyContainer>\n\t\t)\n\t}\n\n\tconst renderHistory = () => {\n\t\tconst {\n\t\t\tevents = []\n\t\t} = cardHistory || {}\n\n\t\treturn(\n\t\t\t<styled.BodyContainer>\n\t\t\t\t<styled.ContentHeader style={{}}>\n\t\t\t\t\t<styled.ContentTitle>History</styled.ContentTitle>\n\t\t\t\t</styled.ContentHeader>\n\n\n\t\t\t\t<styled.HistoryBodyContainer>\n\t\t\t\t\t{events.map((currEvent) => {\n\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\tdescription,\n\t\t\t\t\t\t\tusername,\n\t\t\t\t\t\t\tdata,\n\t\t\t\t\t\t\tdate: {$date: date}\n\t\t\t\t\t\t} = currEvent\n\n\t\t\t\t\t\tvar jsDate = new Date(date);\n\t\t\t\t\t\tvar currentDate = new Date();\n\t\t\t\t\t\tconst diffTime = Math.abs(currentDate - jsDate);\n\t\t\t\t\t\tconst diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n\n\t\t\t\t\t\tvar {\n\t\t\t\t\t\t\tbins,\n\t\t\t\t\t\t\t...modifiedData\n\t\t\t\t\t\t} = data\n\n\t\t\t\t\t\t// handle route_id change\n\t\t\t\t\t\tif(Object.keys(modifiedData).includes(\"route_id\")) {\n\t\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\t\troute_id: {\n\t\t\t\t\t\t\t\t\tnew: newRouteId,\n\t\t\t\t\t\t\t\t\told: oldRouteId\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t...rest\n\t\t\t\t\t\t\t} = modifiedData\n\n\t\t\t\t\t\t\tmodifiedData = {\n\t\t\t\t\t\t\t\t...rest, \"route\": {\n\t\t\t\t\t\t\t\t\tnew: routes[newRouteId] ? routes[newRouteId].name : \"\",\n\t\t\t\t\t\t\t\t\told: routes[oldRouteId] ? routes[oldRouteId].name : \"\",\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet messages = parseMessageFromEvent(name, username, modifiedData)\n\n\t\t\t\t\t\t// handle bins change\n\t\t\t\t\t\t// if(Object.keys(modifiedData).includes(\"bins\")) {\n\t\t\t\t\t\t// \tconst {\n\t\t\t\t\t\t// \t\tbins: {\n\t\t\t\t\t\t// \t\t\tnew: newBins,\n\t\t\t\t\t\t// \t\t\told: oldBins\n\t\t\t\t\t\t// \t\t},\n\t\t\t\t\t\t// \t\t...rest\n\t\t\t\t\t\t// \t} = modifiedData\n\t\t\t\t\t\t//\n\t\t\t\t\t\t// \tvar oldVals = {}\n\t\t\t\t\t\t// \tvar newVals = {}\n\t\t\t\t\t\t// \tObject.entries(newBins).forEach((currEntry) => {\n\t\t\t\t\t\t// \t\tconst currKey = currEntry[0]\n\t\t\t\t\t\t// \t\tconst currValue = currEntry[1]\n\t\t\t\t\t\t//\n\t\t\t\t\t\t// \t\tif(oldBins[currKey]) {\n\t\t\t\t\t\t// \t\t\tif(oldBins[currKey].count !== newBins[currKey].count) {\n\t\t\t\t\t\t// \t\t\t\tmessages.push(`Changed count in ${currKey} from ${oldBins[currKey].count} to ${newBins[currKey].count}`)\n\t\t\t\t\t\t// \t\t\t}\n\t\t\t\t\t\t//\n\t\t\t\t\t\t// \t\t\t// oldVals[stations[currKey].name] = oldBins[currKey].count\n\t\t\t\t\t\t// \t\t\t// newVals[stations[currKey].name] = newBins[currKey].count\n\t\t\t\t\t\t//\n\t\t\t\t\t\t// \t\t}\n\t\t\t\t\t\t// \t\telse {\n\t\t\t\t\t\t// \t\t\tmessages.push(`Set count to ${newBins[currKey].count} in ${currKey} `)\n\t\t\t\t\t\t// \t\t\t// entries[modifiedData]\n\t\t\t\t\t\t// \t\t\t// modifiedData = {\n\t\t\t\t\t\t// \t\t\t// \t...rest, \"bins\": {\n\t\t\t\t\t\t// \t\t\t// \t\tnew: stations[newStationId] ? stations[newStationId].name : \"\",\n\t\t\t\t\t\t// \t\t\t// \t\told: stations[oldStationId] ? stations[oldStationId].name : \"\",\n\t\t\t\t\t\t// \t\t\t// \t}\n\t\t\t\t\t\t// \t\t\t// }\n\t\t\t\t\t\t// \t\t}\n\t\t\t\t\t\t// \t})\n\t\t\t\t\t\t//\n\t\t\t\t\t\t// }\n\n\t\t\t\t\t\tif(messages.length === 0) return null\n\n\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t<styled.HistoryItemContainer>\n\t\t\t\t\t\t\t\t<styled.HistoryUserContainer>\n\t\t\t\t\t\t\t\t\t<styled.HistoryUserText>{username}</styled.HistoryUserText>\n\t\t\t\t\t\t\t\t</styled.HistoryUserContainer>\n\t\t\t\t\t\t\t\t<styled.HistoryInfoContainer>\n\t\t\t\t\t\t\t\t\t{messages.map((currMessage) => {\n\t\t\t\t\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t\t\t\t\t<styled.HistoryInfoText>\n\t\t\t\t\t\t\t\t\t\t\t\t{currMessage}\n\t\t\t\t\t\t\t\t\t\t\t</styled.HistoryInfoText>\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t</styled.HistoryInfoContainer>\n\t\t\t\t\t\t\t\t<styled.HistoryDateContainer>\n\t\t\t\t\t\t\t\t\t<styled.HistoryDateText>{jsDate.toLocaleString()}</styled.HistoryDateText>\n\t\t\t\t\t\t\t\t</styled.HistoryDateContainer>\n\t\t\t\t\t\t\t</styled.HistoryItemContainer>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t</styled.HistoryBodyContainer>\n\t\t\t</styled.BodyContainer>\n\t\t)\n\t}\n\n\tconst renderProcessSelector = () => {\n\n\t\treturn(\n\t\t\t<styled.ProcessFieldContainer>\n\t\t\t\t<styled.ContentHeader>\n\t\t\t\t\t<styled.ContentTitle>Select Process</styled.ContentTitle>\n\t\t\t\t</styled.ContentHeader>\n\n\t\t\t\t<ScrollingButtonField\n\t\t\t\t\tname={\"processId\"}\n\t\t\t\t\tvalueKey={\"value\"}\n\t\t\t\t\tlabelKey={\"label\"}\n\t\t\t\t\toptions={\n\t\t\t\t\t\tprocessOptions.map((currProcessId, currIndex) => {\n\t\t\t\t\t\t\tconst currProcess = processes[currProcessId] || {}\n\t\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\t\tname: currProcessName = \"\"\n\t\t\t\t\t\t\t} = currProcess\n\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tlabel: currProcessName,\n\t\t\t\t\t\t\t\t\tvalue: currProcessId\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</styled.ProcessFieldContainer>\n\t\t)\n\t}\n\n\tif(loaded) {\n\t\treturn(\n\t\t\t<styled.StyledForm>\n\t\t\t\t<SubmitErrorHandler\n\t\t\t\t\tsubmitCount={submitCount}\n\t\t\t\t\tisValid={formikProps.isValid}\n\t\t\t\t\tonSubmitError={() => {}}\n\t\t\t\t\tformik={formikProps}\n\t\t\t\t/>\n\t\t\t\t<styled.Header>\n\t\t\t\t\t{((content === CONTENT.CALENDAR_START) || (content === CONTENT.CALENDAR_END) || (content === CONTENT.HISTORY) || (content === CONTENT.MOVE))  &&\n\t\t\t\t\t<Button\n\t\t\t\t\t\tonClick={()=>setContent(null)}\n\t\t\t\t\t\tschema={'error'}\n\t\t\t\t\t\t// secondary\n\t\t\t\t\t>\n\t\t\t\t\t\t<styled.Icon className=\"fas fa-arrow-left\"></styled.Icon>\n\t\t\t\t\t</Button>\n\t\t\t\t\t}\n\n\t\t\t\t\t<styled.Title>\n\t\t\t\t\t\t{formMode === FORM_MODES.CREATE ?\n\t\t\t\t\t\t\t\"Create Lot\"\n\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\"Edit Lot\"\n\t\t\t\t\t\t}\n\t\t\t\t\t</styled.Title>\n\n\t\t\t\t\t<Button\n\t\t\t\t\t\tsecondary\n\t\t\t\t\t\tonClick={close}\n\t\t\t\t\t\tschema={'error'}\n\t\t\t\t\t>\n\t\t\t\t\t\t<i className=\"fa fa-times\" aria-hidden=\"true\"/>\n\t\t\t\t\t</Button>\n\t\t\t\t</styled.Header>\n\n\t\t\t\t<styled.TheBody>\n\n\t\t\t\t\t<styled.SectionContainer>\n\n\n\t\t\t\t\t\t{showProcessSelector && renderProcessSelector()}\n\n\t\t\t\t\t\t<styled.ContentHeader>\n\t\t\t\t\t\t\t<styled.ContentTitle>Lot Name</styled.ContentTitle>\n\t\t\t\t\t\t</styled.ContentHeader>\n\t\t\t\t\t\t<styled.NameContainer>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tplaceholder=\"Enter name...\"\n\t\t\t\t\t\t\t\tInputComponent={Textbox}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</styled.NameContainer>\n\n\t\t\t\t\t\t{((content === null)) &&\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t{showLotInfo &&\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<styled.NameContainer>\n\t\t\t\t\t\t\t\t\t<styled.ContentHeader>\n\t\t\t\t\t\t\t\t\t\t<styled.ContentTitle>Lot Description</styled.ContentTitle>\n\t\t\t\t\t\t\t\t\t</styled.ContentHeader>\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\tname=\"description\"\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Description...\"\n\t\t\t\t\t\t\t\t\t\tInputComponent={Textbox}\n\t\t\t\t\t\t\t\t\t\tlines={5}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</styled.NameContainer>\n\n\t\t\t\t\t\t\t\t<styled.DatesContainer>\n\t\t\t\t\t\t\t\t\t<styled.DateItem onClick={()=>setContent(CONTENT.CALENDAR_START)}>\n\t\t\t\t\t\t\t\t\t\t<styled.DateText>{startDateText}</styled.DateText>\n\t\t\t\t\t\t\t\t\t</styled.DateItem>\n\n\t\t\t\t\t\t\t\t\t<styled.DateArrow className=\"fas fa-arrow-right\"></styled.DateArrow>\n\n\t\t\t\t\t\t\t\t\t<styled.DateItem onClick={()=>setContent(CONTENT.CALENDAR_END)}>\n\t\t\t\t\t\t\t\t\t\t<styled.DateText>{endDateText}</styled.DateText>\n\t\t\t\t\t\t\t\t\t</styled.DateItem>\n\n\t\t\t\t\t\t\t\t\t{errors.dates &&\n\t\t\t\t\t\t\t\t\t<ErrorTooltip\n\t\t\t\t\t\t\t\t\t\tvisible={errors.dates}\n\t\t\t\t\t\t\t\t\t\ttext={errors.dates}\n\t\t\t\t\t\t\t\t\t\tContainerComponent={styled.ErrorTooltipContainer}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</styled.DatesContainer>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\t\t{formMode === FORM_MODES.UPDATE &&\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t// secondary\n\t\t\t\t\t\t\t\tstyle={{margin: \"0 0 1rem 0\", width: \"fit-content\"}}\n\t\t\t\t\t\t\t\ttype={\"button\"}\n\t\t\t\t\t\t\t\tonClick={()=>setShowLotInfo(!showLotInfo)}\n\t\t\t\t\t\t\t\tschema={\"lots\"}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{showLotInfo ? \"Hide Lot Details\" : \"Show Lot Details\"}\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t</>\n\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t</styled.SectionContainer>\n\n\t\t\t\t\t{(content === null) &&\n\t\t\t\t\trenderMainContent()\n\t\t\t\t\t}\n\t\t\t\t\t{(((content === CONTENT.CALENDAR_END) || (content === CONTENT.CALENDAR_START))) &&\n\t\t\t\t\trenderCalendarContent(content)\n\t\t\t\t\t}\n\t\t\t\t\t{(content === CONTENT.HISTORY) &&\n\t\t\t\t\trenderHistory()\n\t\t\t\t\t}\n\t\t\t\t\t{(content === CONTENT.MOVE) &&\n\t\t\t\t\trenderMoveContent()\n\t\t\t\t\t}\n\n\t\t\t\t</styled.TheBody>\n\n\t\t\t\t{/* render buttons for appropriate content */}\n\t\t\t\t{\n\t\t\t\t\t{\n\t\t\t\t\t\t\"CALENDAR_START\":\n                        <styled.ButtonContainer style={{width: \"100%\"}}>\n                        <Button\n                            style={{...buttonStyle, width: \"8rem\"}}\n                            onClick={()=>setContent(null)}\n                            schema={\"ok\"}\n                            secondary\n                        >\n                            Ok\n                        </Button>\n                        <Button\n                            style={buttonStyle}\n                            onClick={()=>setContent(null)}\n                            schema={\"error\"}\n                        >\n                            Cancel\n                        </Button>\n                    </styled.ButtonContainer>,\n                        \"CALENDAR_END\":\n\t\t\t\t\t\t\t<styled.ButtonContainer style={{width: \"100%\"}}>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tstyle={{...buttonStyle, width: \"8rem\"}}\n\t\t\t\t\t\t\t\t\tonClick={()=>setContent(null)}\n\t\t\t\t\t\t\t\t\tschema={\"ok\"}\n\t\t\t\t\t\t\t\t\tsecondary\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tOk\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tstyle={buttonStyle}\n\t\t\t\t\t\t\t\t\tonClick={()=>setContent(null)}\n\t\t\t\t\t\t\t\t\tschema={\"error\"}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</styled.ButtonContainer>,\n\t\t\t\t\t\t\"HISTORY\":\n\t\t\t\t\t\t\t<styled.ButtonContainer>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tstyle={{...buttonStyle}}\n\t\t\t\t\t\t\t\t\tonClick={()=>setContent(null)}\n\t\t\t\t\t\t\t\t\tschema={\"error\"}\n\t\t\t\t\t\t\t\t\t// secondary\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tGo Back\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</styled.ButtonContainer>,\n\t\t\t\t\t\t\"MOVE\":\n\t\t\t\t\t\t\t<styled.ButtonContainer>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tdisabled={submitDisabled}\n\t\t\t\t\t\t\t\t\tstyle={{...buttonStyle, width: \"8rem\"}}\n\t\t\t\t\t\t\t\t\ttype={\"button\"}\n\t\t\t\t\t\t\t\t\tonClick={()=> {\n\t\t\t\t\t\t\t\t\t\tsetFieldValue(\"buttonType\", FORM_BUTTON_TYPES.MOVE_OK)\n\t\t\t\t\t\t\t\t\t\tsubmitForm()\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tschema={\"ok\"}\n\t\t\t\t\t\t\t\t\tsecondary\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tOk\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\ttype={\"button\"}\n\t\t\t\t\t\t\t\t\tstyle={buttonStyle}\n\t\t\t\t\t\t\t\t\tonClick={()=>setContent(null)}\n\t\t\t\t\t\t\t\t\tschema={\"error\"}\n\t\t\t\t\t\t\t\t\t// secondary\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</styled.ButtonContainer>\n\t\t\t\t\t}[content] ||\n\t\t\t\t\t<styled.ButtonContainer>\n\t\t\t\t\t\t{formMode === FORM_MODES.CREATE ?\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tschema={'lots'}\n\t\t\t\t\t\t\t\t\ttype={\"button\"}\n\t\t\t\t\t\t\t\t\tdisabled={submitDisabled}\n\t\t\t\t\t\t\t\t\tstyle={{...buttonStyle, marginBottom: '0rem', marginTop: 0}}\n\t\t\t\t\t\t\t\t\tsecondary\n\t\t\t\t\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\t\t\t\t\tsetFieldValue(\"buttonType\", FORM_BUTTON_TYPES.ADD)\n\t\t\t\t\t\t\t\t\t\tsubmitForm()\n\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tAdd\n\t\t\t\t\t\t\t\t</Button>\n\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tschema={'lots'}\n\t\t\t\t\t\t\t\t\ttype={\"button\"}\n\t\t\t\t\t\t\t\t\tdisabled={submitDisabled}\n\t\t\t\t\t\t\t\t\tstyle={{...buttonStyle, marginBottom: '0rem', marginTop: 0}}\n\t\t\t\t\t\t\t\t\tsecondary\n\t\t\t\t\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\t\t\t\t\tsetFieldValue(\"buttonType\", FORM_BUTTON_TYPES.ADD_AND_NEXT)\n\t\t\t\t\t\t\t\t\t\tsubmitForm()\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tAdd & Next\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tschema={'lots'}\n\t\t\t\t\t\t\t\t\ttype={\"button\"}\n\t\t\t\t\t\t\t\t\tdisabled={submitDisabled}\n\t\t\t\t\t\t\t\t\tstyle={{...buttonStyle, marginBottom: '0rem', marginTop: 0}}\n\t\t\t\t\t\t\t\t\tsecondary\n\t\t\t\t\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\t\t\t\t\tsetFieldValue(\"buttonType\", FORM_BUTTON_TYPES.SAVE)\n\t\t\t\t\t\t\t\t\t\tsubmitForm()\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tSave\n\t\t\t\t\t\t\t\t</Button>\n\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tschema={'lots'}\n\t\t\t\t\t\t\t\t\tstyle={{...buttonStyle, marginBottom: '0rem', marginTop: 0}}\n\t\t\t\t\t\t\t\t\tsecondary\n\t\t\t\t\t\t\t\t\ttype={\"button\"}\n\t\t\t\t\t\t\t\t\tonClick={() => onDeleteClick(binId)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<i style={{marginRight: \".5rem\"}} className=\"fa fa-trash\" aria-hidden=\"true\"/>\n\n\t\t\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tschema={'lots'}\n\t\t\t\t\t\t\t\t\ttype={\"button\"}\n\t\t\t\t\t\t\t\t\tstyle={{...buttonStyle, marginBottom: '0rem', marginTop: 0}}\n\t\t\t\t\t\t\t\t\tsecondary\n\t\t\t\t\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\t\t\t\t\tsetContent(CONTENT.MOVE)\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tMove\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t}\n\t\t\t\t\t</styled.ButtonContainer>\n\t\t\t\t}\n\t\t\t</styled.StyledForm>\n\t\t)\n\t}\n\telse {\n\t\treturn(\n\t\t\t<FadeLoader\n\t\t\t\tcss={styled.FadeLoaderCSS}\n\t\t\t\theight={5}\n\t\t\t\twidth={3}\n\t\t\t\tloading={true}\n\t\t\t/>\n\t\t)\n\t}\n\n\t\t\t}\n\n// overwrite default button text color since it's hard to see on the lots background color\n// const buttonStyle = {color: \"black\"}\nconst buttonStyle = {marginBottom: '0rem', marginTop: 0}\n\n\nconst CardEditor = (props) => {\n\tconst {\n\t\tisOpen,\n\t\tclose,\n\t\tprocessId,\n\t\tprocessOptions,\n\t\tshowProcessSelector\n\t} = props\n\n\t// redux state\n\tconst cards = useSelector(state => { return state.cardsReducer.cards })\n\n\t// actions\n\tconst dispatch = useDispatch()\n\tconst onPostCard = async (card) => await dispatch(postCard(card))\n\tconst onGetCard = async (cardId) => await dispatch(getCard(cardId))\n\tconst onPutCard = async (card, ID) => await dispatch(putCard(card, ID))\n\tconst onDeleteCard = async (cardId, processId) => await dispatch(deleteCard(cardId, processId))\n\n\t// component state\n\tconst [cardDataInterval, setCardDataInterval] = useState(null)\n\n\tconst [cardId, setCardId] = useState(props.cardId) //cardId and binId are stored as internal state but initialized from props (if provided)\n\tconst [binId, setBinId] = useState(props.binId)\n\tconst [content, setContent] = useState(null)\n\tconst [loaded, setLoaded] = useState(false)\n\tconst [formMode, setFormMode] = useState(props.cardId ? FORM_MODES.UPDATE : FORM_MODES.CREATE) // if cardId was passed, update existing. Otherwise create new\n\n\t// get card object from redux by cardId\n\tconst card = cards[cardId] || null\n\n\t// extract card attributes\n\tconst {\n\t\tbins = {}\n\t} = card || {}\n\n\t/*\n\t*\n\t* */\n\tconst handleDeleteClick = async (selectedBin) => {\n\t\tconst {\n\t\t\t[selectedBin]: currentBin,\n\t\t\t...remainingBins\n\t\t} = bins\n\n\t\tvar submitItem = {\n\t\t\t...card,\n\t\t\tbins: {...remainingBins},\n\t\t}\n\n\t\t// if there are no remaining bins, delete the card\n\t\tif(isEmpty(remainingBins)) {\n\t\t\tonDeleteCard(cardId, processId)\n\t\t}\n\n\t\t// otherwise update the card to contain only the remaining bins\n\t\telse {\n\t\t\tconst result = await onPutCard(submitItem, cardId)\n\t\t}\n\n\t\tclose()\n\t}\n\n\t/*\n\t*\n\t* */\n\tconst handleGetCard = async (cardId) => {\n\t\tif(cardId) {\n\t\t\tconst result = await onGetCard(cardId)\n\t\t}\n\t\tif(!loaded) {\n\t\t\tsetLoaded(true)\n\t\t}\n\t}\n\n\t/*\n\t*\n\t* */\n\tuseEffect( () => {\n\t\thandleGetCard(cardId)\n\t\tvar timer = setInterval(()=>handleGetCard(cardId),5000)\n\n\t\treturn () => {\n\t\t\tclearInterval(timer)\n\t\t}\n\n\t}, [cardId])\n\n\t/*\n\t* if card exists, set form mode to update\n\t* */\n\tuseEffect( () => {\n\t\tif(card && !loaded) {\n\t\t\tsetLoaded(true) // if card already exists, set loaded to true\n\t\t}\n\n\t}, [card])\n\n\t/*\n\t*\n\t* */\n\tconst handleSubmit = async (values, formMode) => {\n\n\t\tconst {\n\t\t\tname,\n\t\t\tbins,\n\t\t\tdescription,\n\t\t\tmoveCount,\n\t\t\tmoveLocation,\n\t\t\tbuttonType,\n\t\t\tprocessId: selectedProcessId\n\t\t} = values\n\n\n\t\tconst start = values?.dates?.start || null\n\t\tconst end = values?.dates?.end || null\n\n\t\tif(content === CONTENT.MOVE) {\n\t\t\t// moving card need to update count for correct bins\n\t\t\tif(moveCount && moveLocation) {\n\n\t\t\t\tvar submitItem = {\n\t\t\t\t\tname,\n\t\t\t\t\tbins,\n\t\t\t\t\tdescription,\n\t\t\t\t\tprocess_id: card.process_id,\n\t\t\t\t\tstart_date: start,\n\t\t\t\t\tend_date: end,\n\t\t\t\t}\n\n\t\t\t\t/*\n\t\t\t\t* if lot items are being moved to a different bin, the submitItem's bins key needs to be updated\n\t\t\t\t* namely, the count field for the destination and origin bins needs to updated\n\t\t\t\t*\n\t\t\t\t* The destination bin's count should be incremented by the number of items being moved\n\t\t\t\t* The current bin's count should be decremented by the number of items being moved\n\t\t\t\t*\n\t\t\t\t* */\n\n\t\t\t\t// get count and location info for move from form values\n\t\t\t\tconst {\n\t\t\t\t\tname: moveName,\n\t\t\t\t\t_id: destinationBinId,\n\t\t\t\t} = moveLocation[0]\n\n\t\t\t\t// extract destination, current, and remaining bins\n\t\t\t\tconst {\n\t\t\t\t\t[destinationBinId]: destinationBin,\n\t\t\t\t\t[binId]: currentBin,\n\t\t\t\t\t...unalteredBins\n\t\t\t\t} = bins\n\n\t\t\t\t// update counts of current and destination bins\n\t\t\t\tconst currentBinCount = parseInt(currentBin ? currentBin.count : 0) - moveCount\n\t\t\t\tconst destinationBinCount = parseInt(destinationBin ? destinationBin.count : 0) + moveCount\n\n\t\t\t\t// update bins\n\t\t\t\tvar updatedBins\n\n\t\t\t\tif(currentBinCount) {\n\t\t\t\t\t// both the current bin and the destination bin have items, so update both lots and spread the remaining\n\n\t\t\t\t\tupdatedBins = {\n\t\t\t\t\t\t...unalteredBins, \t\t\t// spread remaining bins\n\t\t\t\t\t\t[destinationBinId]: {\t\t// update destination bin's count, keep remaining attributes\n\t\t\t\t\t\t\t...destinationBin,\n\t\t\t\t\t\t\tcount: destinationBinCount\n\t\t\t\t\t\t},\n\t\t\t\t\t\t[binId]: {\t\t\t// update current bin's count, keep remaining attributes\n\t\t\t\t\t\t\t...currentBin,\n\t\t\t\t\t\t\tcount: currentBinCount\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\telse {\n\t\t\t\t\t// if currentBinCount is 0, the bin no longer has any items associated with the lot, so remove it\n\t\t\t\t\tupdatedBins = {\n\t\t\t\t\t\t...unalteredBins,\n\t\t\t\t\t\t[destinationBinId]: {\n\t\t\t\t\t\t\t...destinationBin,\n\t\t\t\t\t\t\tcount: destinationBinCount\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// update submit items bins\n\t\t\t\tsubmitItem = {\n\t\t\t\t\t...submitItem,\n\t\t\t\t\tbins: updatedBins\n\t\t\t\t}\n\n\t\t\t\t// update card\n\t\t\t\tonPutCard(submitItem, cardId)\n\t\t\t}\n\t\t}\n\n\t\telse {\n\t\t\t// update (PUT)\n\t\t\tif(formMode === FORM_MODES.UPDATE) {\n\n\t\t\t\tvar submitItem = {\n\t\t\t\t\tname,\n\t\t\t\t\tbins,\n\t\t\t\t\tdescription,\n\t\t\t\t\tprocess_id: card.process_id,\n\t\t\t\t\tstart_date: start,\n\t\t\t\t\tend_date: end,\n\t\t\t\t}\n\n\t\t\t\tonPutCard(submitItem, cardId)\n\t\t\t}\n\n\t\t\t// create (POST)\n\t\t\telse {\n\n\t\t\t\tconst submitItem = {\n\t\t\t\t\tname,\n\t\t\t\t\tbins,\n\t\t\t\t\tdescription,\n\t\t\t\t\tprocess_id: processId ? processId : selectedProcessId,\n\t\t\t\t\tstart_date: start,\n\t\t\t\t\tend_date: end,\n\t\t\t\t}\n\n\t\t\t\tconst postResult = await onPostCard(submitItem)\n\n\t\t\t\tif(!(postResult instanceof Error)) {\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconsole.log(\"postResult\",postResult)\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\n\t}\n\n\treturn(\n\t\t<styled.Container\n\t\t\tisOpen={isOpen}\n\t\t\tonRequestClose={()=> {\n\t\t\t\tclose()\n\n\t\t\t}}\n\t\t\tcontentLabel=\"Lot Editor Form\"\n\t\t\tstyle={{\n\t\t\t\toverlay: {\n\t\t\t\t\tzIndex: 500\n\t\t\t\t},\n\t\t\t\tcontent: {\n\n\t\t\t\t}\n\t\t\t}}\n\t\t>\n\t\t\t<Formik\n\t\t\t\tinitialValues={{\n\t\t\t\t\tprocessId: processId,\n\t\t\t\t\tmoveCount: 0,\n\t\t\t\t\tmoveLocation: [],\n\t\t\t\t\tname: card ? card.name : \"\",\n\t\t\t\t\tdescription: card ? card.description : \"\",\n\t\t\t\t\tbins: card && card.bins ?\n\t\t\t\t\t\tcard.bins\n\t\t\t\t\t\t:\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"QUEUE\": {\n\t\t\t\t\t\t\t\tcount: 0\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\tdates: card ? {\n\t\t\t\t\t\tstart: card.start_date,\n\t\t\t\t\t\tend: card.end_date,\n\t\t\t\t\t} : null,\n\t\t\t\t\tcount: card ? card.count : 0,\n\t\t\t\t\t// object: (card && card.object_id) ?  [objects[card.object_id]] : []\n\t\t\t\t}}\n\n\t\t\t\t// validation control\n\t\t\t\tvalidationSchema={getCardSchema((content === CONTENT.MOVE) ? CARD_SCHEMA_MODES.MOVE_LOT : CARD_SCHEMA_MODES.EDIT_LOT, bins[binId]?.count ? bins[binId].count : 0)}\n\t\t\t\tvalidateOnChange={true}\n\t\t\t\tvalidateOnMount={false} // leave false, if set to true it will generate a form error when new data is fetched\n\t\t\t\tvalidateOnBlur={true}\n\n\t\t\t\t// enableReinitialize={true} // leave false, otherwise values will be reset when new data is fetched for editing an existing item\n\t\t\t\tonSubmit={async (values, { setSubmitting, setTouched, resetForm }) => {\n\t\t\t\t\t// set submitting to true, handle submit, then set submitting to false\n\t\t\t\t\t// the submitting property is useful for eg. displaying a loading indicator\n\t\t\t\t\tconst {\n\t\t\t\t\t\tbuttonType\n\t\t\t\t\t} = values\n\n\t\t\t\t\tsetSubmitting(true)\n\t\t\t\t\tawait handleSubmit(values, formMode)\n\t\t\t\t\tsetTouched({}) // after submitting, set touched to empty to reflect that there are currently no new changes to save\n\t\t\t\t\tsetSubmitting(false)\n\n\t\t\t\t\tswitch(buttonType) {\n\t\t\t\t\t\tcase FORM_BUTTON_TYPES.ADD:\n\t\t\t\t\t\t\tresetForm()\n\t\t\t\t\t\t\tclose()\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\tcase FORM_BUTTON_TYPES.MOVE_OK:\n\t\t\t\t\t\t\tresetForm()\n\t\t\t\t\t\t\tclose()\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\tcase FORM_BUTTON_TYPES.ADD_AND_NEXT:\n\t\t\t\t\t\t\tresetForm()\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\tcase FORM_BUTTON_TYPES.SAVE:\n\t\t\t\t\t\t\tclose()\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{formikProps => {\n\n\t\t\t\t\t// extract formik props\n\t\t\t\t\tconst {\n\t\t\t\t\t\terrors,\n\t\t\t\t\t\tvalues,\n\t\t\t\t\t\ttouched,\n\t\t\t\t\t\tisSubmitting,\n\t\t\t\t\t\tsubmitCount,\n\t\t\t\t\t\tsetFieldValue,\n\t\t\t\t\t\tsubmitForm\n\t\t\t\t\t} = formikProps\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<FormComponent\n\t\t\t\t\t\t\tloaded={loaded}\n\t\t\t\t\t\t\tprocessId={processId}\n\t\t\t\t\t\t\tclose={close}\n\t\t\t\t\t\t\tformMode={formMode}\n\t\t\t\t\t\t\tformikProps={formikProps}\n\t\t\t\t\t\t\tcard={card}\n\t\t\t\t\t\t\tbins={bins}\n\t\t\t\t\t\t\tbinId={binId}\n\t\t\t\t\t\t\tsetBinId={setBinId}\n\t\t\t\t\t\t\tcardId={cardId}\n\t\t\t\t\t\t\tisOpen={isOpen}\n\t\t\t\t\t\t\tonDeleteClick={handleDeleteClick}\n\t\t\t\t\t\t\terrors={errors}\n\t\t\t\t\t\t\tvalues={values}\n\t\t\t\t\t\t\ttouched={touched}\n\t\t\t\t\t\t\tisSubmitting={isSubmitting}\n\t\t\t\t\t\t\tsubmitCount={submitCount}\n\t\t\t\t\t\t\tsetFieldValue={setFieldValue}\n\t\t\t\t\t\t\tsubmitForm={submitForm}\n\t\t\t\t\t\t\tformikProps={formikProps}\n\t\t\t\t\t\t\tprocessOptions={processOptions}\n\t\t\t\t\t\t\tshowProcessSelector={showProcessSelector}\n\t\t\t\t\t\t\tcontent={content}\n\t\t\t\t\t\t\tsetContent={setContent}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)\n\t\t\t\t}}\n\t\t\t</Formik>\n\t\t</styled.Container>\n\t)\n}\n\n// Specifies propTypes\nCardEditor.propTypes = {\n\tbinId: PropTypes.string,\n\t\tshowProcessSelector: PropTypes.bool,\n};\n\n// Specifies the default values for props:\nCardEditor.defaultProps = {\n\tbinId: \"QUEUE\",\n\t\tshowProcessSelector: false\n};\n\nexport default CardEditor","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n\tdisplay: flex;\n\twidth: fit-content;\n\tbackground: ${props => props.theme.bg.quaternary};\n\tflex-direction: column;\n\t// flex: 1;\n\tpadding: 1rem;\n\tcolor: ${props => props.theme.bg.octonary};\n\tborder-right: 1px solid ${props => props.theme.bg.tertiary};\n`\n\nexport const Header = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\tmargin-bottom: 1rem;\n`\n\nexport const Title = styled.span`\n\tfont-size: ${props => props.theme.fontSize.sz2};\n\tfont-weight: ${props => props.theme.fontWeight.bold};\n`\n\nexport const CloseButton = styled.i`\n\tfont-size: 1.5rem;\n`\n","import React from \"react\";\n\nimport Button from \"../../../../basic/button/button\";\n\nimport * as styled from \"./card_menu.style\";\nimport DropDownSearch from \"../../../../basic/drop_down_search_v2/drop_down_search\";\nimport DropDownSearchField from \"../../../../basic/form/drop_down_search_field/drop_down_search_field\";\nimport {useSelector} from \"react-redux\";\nimport {useHistory, useParams} from \"react-router-dom\";\n\n\nconst CardMenu = (props) => {\n\tconst {\n\t\tcurrentProcess,\n\t\tclose\n\t} = props\n\n\tconst history = useHistory()\n\tconst processes = Object.values(useSelector(state => { return state.processesReducer.processes }))\n\tlet params = useParams()\n\tconst {\n\t\tid,\n\t\tpage,\n\t\tsubpage\n\t} = params\n\n\treturn(\n\t\t<styled.Container>\n\t\t\t<styled.Header>\n\t\t\t\t<styled.Title>Zones</styled.Title>\n\t\t\t\t<styled.CloseButton\n\t\t\t\t\tclassName=\"fa fa-times\"\n\t\t\t\t\taria-hidden=\"true\"\n\t\t\t\t\tonClick={close}\n\t\t\t\t/>\n\n\t\t\t</styled.Header>\n\n\n\t\t\t<Button\n\t\t\t\tschema={'lots'}\n\t\t\t\tstyle={{ margin: 0, marginBottom: \"1rem\" }}\n\t\t\t\tonClick={async () => {\n\t\t\t\t\thistory.replace ('/lots/summary')\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tLots Summary\n\t\t\t</Button>\n\t\t\t<styled.Title style={{marginBottom: \"1rem\"}}>Processes</styled.Title>\n\t\t\t<DropDownSearch\n\t\t\t\tvalues={currentProcess ? [currentProcess] : []}\n\t\t\t\toptions={processes}\n\t\t\t\tonChange={values => {\n\t\t\t\t\tconst processId = values[0]?._id\n\t\t\t\t\tconst currentPath = history.location.pathname\n\t\t\t\t\t// if(processId) history.push(currentPath + '/' + processId + \"/card\")\n\t\t\t\t\t// history.push ('./../' + processId + \"/card\")\n\t\t\t\t\thistory.replace ('/processes/' + processId + \"/lots\")\n\n\t\t\t\t}}\n\t\t\t\tpattern={null}\n\t\t\t\tlabelField={'name'}\n\t\t\t\tvalueField={\"_id\"}\n\t\t\t\tonDropdownOpen={() => {\n\t\t\t\t}}\n\t\t\t/>\n\n\n\n\t\t</styled.Container>\n\t)\n}\n\nexport default CardMenu\n","import styled, { css } from \"styled-components\";\nimport {Container} from \"react-smooth-dnd\";\n\n// export const RouteContainer = styled.div`\n//     display: flex;\n//     flex: 1;\n//     flex-direction: column;\n//     background: yellow;\n// `\n\nconst minHeight = \"10rem\"\nexport const RotatedRouteName = styled.span`\n// background: red;\n\ttransform: rotate(-90deg);\n\t// transform: translateY(50%);\n`\n\n\nexport const StationContainerCss = css`\n\tdisplay: flex;\n    flex-direction: column;\n    min-height: ${minHeight};\n    \n    width: ${props => props.isCollapsed ? \"2rem\" : \"15rem\"};\n    max-width: ${props => props.isCollapsed ? \"2rem\" : \"15rem\"};\n    min-width: ${props => props.isCollapsed ? \"2rem\" : \"15rem\"};\n    margin-right: 1rem;\n    \n    border-radius: 1rem;\n    overflow: hidden;\n    \n    color: ${props => props.theme.bg.octonary};\n`\n\nexport const StationContainer = styled.div`\n    ${StationContainerCss};\n`\n\nexport const StationHeader = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    justify-content: center;\n    align-items: center;\n    background: ${props => props.theme.bg.quinary};\n    padding: .5rem 1rem;\n    \n \n   \n`\n\nexport const HeaderContent = styled.div`\n    display: flex;\n    flex-direction: row;\n    width: 100%;\n    justify-content: space-between;\n    align-items: center;\n`\n\n\nexport const TitleContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n`\n\n\n\nexport const RouteContainer = styled.div`\n\tdisplay: flex;\n\tborder-bottom: 1px solid black;\n\twidth: 100%;\n`\n\nexport const LabelContainer = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\t// justify-content: space-between;\n`\n\nexport const StationLabel = styled.span`\n    text-align: center;\n    font-size: ${props => props.theme.fontSize.sz4};\n    border-bottom: 1px solid black;\n    width: 100%;\n    padding: .25rem;\n    background: ${props => props.theme.bg.senary};\n`\n\nexport const StationTitle = styled.span`\n    text-align: center;\n    font-size: ${props => props.theme.fontSize.sz3};\n`\n\n\n\nexport const StationButton = styled.button`\n\n`\n\nexport const BodyContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\t// flex: 1;\n\tmin-height: ${minHeight};\n\toverflow: hidden;\n\tbackground: ${props => props.theme.bg.quaternary};\n\topacity: ${props => props.dragEnter ? 0.75 : 1};\n\tborder-bottom-right-radius: 1rem;\n\tborder-bottom-left-radius: 1rem;\n\tjustify-content: center;\n`\n","import styled, { css } from \"styled-components\";\nimport {Container} from \"react-smooth-dnd\";\n\n// export const RouteContainer = styled.div`\n//     display: flex;\n//     flex: 1;\n//     flex-direction: column;\n//     background: yellow;\n// `\n\nconst minHeight = \"10rem\"\nexport const RotatedRouteName = styled.span`\n// background: red;\n\ttransform: rotate(-90deg);\n\t// transform: translateY(50%);\n`\n\n\nexport const StationContainerCss = css`\n\t\n`\n\nexport const StationContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    min-height: ${minHeight};\n    \n    width: ${props => props.isCollapsed ? \"2rem\" : props.maxWidth};\n    max-width: ${props => props.isCollapsed ? \"2rem\" : props.maxWidth};\n    min-width: ${props => props.isCollapsed ? \"2rem\" : props.maxWidth};\n    margin-right: 1rem;\n    max-height: ${props => props.maxHeight};\n    \n    border-radius: 1rem;\n    overflow: hidden;\n    \n    color: ${props => props.theme.bg.octonary};\n`\n\nexport const StationHeader = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    justify-content: center;\n    align-items: center;\n    background: ${props => props.theme.bg.quinary};\n \n   \n`\n\nexport const HeaderContent = styled.div`\n    display: flex;\n    flex-direction: row;\n    width: 100%;\n    justify-content: space-between;\n    align-items: center;\n    padding-left: 1rem;\n    padding-right: 1rem;\n \n \n`\n\n\nexport const TitleContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n`\n\n\n\nexport const RouteContainer = styled.div`\n\tdisplay: flex;\n\tborder-bottom: 1px solid black;\n\twidth: 100%;\n`\n\nexport const LabelContainer = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\t// justify-content: space-between;\n`\n\nexport const StationLabel = styled.span`\n    text-align: center;\n    font-size: ${props => props.theme.fontSize.sz4};\n`\n\nexport const StationTitle = styled.span`\n    text-align: center;\n    font-size: ${props => props.theme.fontSize.sz3};\n`\n\n\n\nexport const StationButton = styled.button`\n\n`\n\nexport const BodyContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\t// flex: 1;\n\tmin-height: ${minHeight};\n\toverflow: hidden;\n\tbackground: ${props => props.theme.bg.quaternary};\n\topacity: ${props => props.dragEnter ? 0.75 : 1};\n\tborder-bottom-right-radius: 1rem;\n\tborder-bottom-left-radius: 1rem;\n\tjustify-content: center;\n`\n","import { SET } from \"../types/prefixes\"\nimport {CARD_DRAGGING, COLUMN_HOVERING, SET_SIZE} from \"../types/ui_types\"\n\nexport const setCardDragging = (lotId, binId) => async dispatch => {\n\tdispatch({ type: SET + CARD_DRAGGING, payload: {lotId, binId} });\n}\n\nexport const setColumnHovering = (isHoveringOverColumn) => async dispatch => {\n\tdispatch({ type: SET + COLUMN_HOVERING, payload: isHoveringOverColumn });\n}\n","import {SortableContainer} from \"react-sortable-hoc\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {deleteCard, putCard} from \"../../../../../../redux/actions/card_actions\";\nimport * as styled from \"./column.style\";\nimport {Container} from \"react-smooth-dnd\";\nimport Card from \"../../card/card\";\nimport React, {useState} from \"react\";\nimport {setCardDragging, setColumnHovering} from \"../../../../../../redux/actions/card_page_actions\";\nimport {generateBinId, sortBy} from \"../../../../../../methods/utils/card_utils\";\n\n\n// const animationDuration = 500\nconst Column = ((props) => {\n\n\tconst {\n\t\tstation_id,\n\t\tstationName = \"Unnamed\",\n\t\thandleCardClick,\n\t\tcards,\n\t\tprocessId,\n\t\tHeaderContent,\n\t\tisCollapsed,\n\t\tmaxWidth,\n\t\tmaxHeight,\n\t\tsortMode\n\t} = props\n\n\tif(sortMode) {\n\t\tsortBy(cards, sortMode)\n\t}\n\n\tconst objects = useSelector(state => { return state.objectsReducer.objects })\n\tconst reduxCards = useSelector(state => { return state.cardsReducer.processCards[processId] }) || {}\n\n\tconst [dragEnter, setDragEnter] = useState(false)\n\n\tconst dispatch = useDispatch()\n\tconst onPutCard = async (card, ID) => await dispatch(putCard(card, ID))\n\tconst dispatchSetCardDragging = async (lotId, binId) => await dispatch(setCardDragging(lotId, binId))\n\n\tconst shouldAcceptDrop = (sourceContainerOptions, payload) => {\n\t\tconst {\n\t\t\tbinId,\n\t\t\tcardId,\n\t\t\tprocess_id: oldProcessId,\n\t\t\t...remainingPayload\n\t\t} = payload\n\n\t\tif(oldProcessId !== processId) return false\n\t\t// if(binId === station_id) return false\n\t\treturn true\n\t}\n\n\tconst handleDrop = async (dropResult) => {\n\t\tconst { removedIndex, addedIndex, payload, element } = dropResult;\n\n\t\tif (payload === null) { //  No new button, only reorder\n\n\t\t} else {\n\t\t\tif(addedIndex !== null) {\n\t\t\t\tconst {\n\t\t\t\t\tbinId,\n\t\t\t\t\tcardId,\n\t\t\t\t\tcount,\n\t\t\t\t\t// process_id: oldProcessId,\n\t\t\t\t\t...remainingPayload\n\t\t\t\t} = payload\n\n\t\t\t\tawait dispatchSetCardDragging(cardId, binId)\n\n\t\t\t\tif(!(binId === station_id)) {\n\n\n\t\t\t\t\tconst droppedCard = reduxCards[cardId] ? reduxCards[cardId] : {}\n\n\t\t\t\t\tconst oldBins = droppedCard.bins ? droppedCard.bins : {}\n\t\t\t\t\tconst {\n\t\t\t\t\t\t[binId]: movedBin,\n\t\t\t\t\t\t...remainingOldBins\n\t\t\t\t\t} = oldBins || {}\n\n\n\t\t\t\t\tif(movedBin) {\n\t\t\t\t\t\t// already contains items in bin\n\t\t\t\t\t\tif(oldBins[station_id] && movedBin) {\n\n\t\t\t\t\t\t\tconst oldCount = parseInt(oldBins[station_id]?.count || 0)\n\t\t\t\t\t\t\tconst movedCount = parseInt(movedBin?.count || 0)\n\n\t\t\t\t\t\t\tawait onPutCard({\n\t\t\t\t\t\t\t\t...remainingPayload,\n\t\t\t\t\t\t\t\tbins: {\n\t\t\t\t\t\t\t\t\t...remainingOldBins,\n\t\t\t\t\t\t\t\t\t[station_id]: {\n\t\t\t\t\t\t\t\t\t\t...oldBins[station_id],\n\t\t\t\t\t\t\t\t\t\tcount:  oldCount + movedCount\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}, cardId)\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// no items in bin\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tconst a = await onPutCard({\n\t\t\t\t\t\t\t\t...remainingPayload,\n\t\t\t\t\t\t\t\tbins: {\n\t\t\t\t\t\t\t\t\t...remainingOldBins,\n\t\t\t\t\t\t\t\t\t[station_id]: {\n\t\t\t\t\t\t\t\t\t\t...movedBin,\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}, cardId)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tawait dispatchSetCardDragging(null, null)\n\t\t\t}\n\t\t}\n\n\t}\n\n\tconst renderCards = () => {\n\t\treturn(\n\t\t\t<styled.BodyContainer\n\t\t\t\tdragEnter={dragEnter}\n\t\t\t>\n\t\t\t\t<div onTouchEndCapture={null}></div>\n\t\t\t\t<Container\n\t\t\t\t\tonDrop={async (DropResult)=> {\n\t\t\t\t\t\tawait handleDrop(DropResult)\n\t\t\t\t\t\tsetDragEnter(false)\n\t\t\t\t\t}}\n\t\t\t\t\tshouldAcceptDrop={shouldAcceptDrop}\n\t\t\t\t\tgetGhostParent={()=>document.body}\n\t\t\t\t\tonDragStart={(dragStartParams, b, c)=>{}}\n\t\t\t\t\tonDragEnd={(dragEndParams)=>{}}\n\t\t\t\t\tonDragEnter={()=> {\n\t\t\t\t\t\tsetDragEnter(true)\n\t\t\t\t\t}}\n\t\t\t\t\tonDragLeave={()=> {\n\t\t\t\t\t\tsetDragEnter(false)\n\t\t\t\t\t}}\n\t\t\t\t\tonDropReady={(dropResult)=>{}}\n\t\t\t\t\tgroupName=\"process-cards\"\n\t\t\t\t\tgetChildPayload={index =>\n\t\t\t\t\t\tcards[index]\n\t\t\t\t\t}\n\t\t\t\t\tstyle={{overflow: \"auto\",height: \"100%\", padding: \"1rem 1rem 2rem 1rem\" }}\n\t\t\t\t>\n\t\t\t\t\t\t{cards.map((card, index) => {\n\t\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\t\t_id,\n\t\t\t\t\t\t\t\tcount = 0,\n\t\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\t\tobject_id,\n\t\t\t\t\t\t\t\tcardId,\n\t\t\t\t\t\t\t\tstart_date,\n\t\t\t\t\t\t\t\tend_date\n\t\t\t\t\t\t\t} = card\n\n\t\t\t\t\t\t\t// const lotName = lots[lot_id] ? lots[lot_id].name : null\n\t\t\t\t\t\t\tconst objectName = objects[object_id] ? objects[object_id].name : null\n\n\t\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t\t<Card\n\t\t\t\t\t\t\t\t\tname={name}\n\t\t\t\t\t\t\t\t\tstart_date={start_date}\n\t\t\t\t\t\t\t\t\tend_date={end_date}\n\t\t\t\t\t\t\t\t\tobjectName={objectName}\n\t\t\t\t\t\t\t\t\tcount={count}\n\t\t\t\t\t\t\t\t\tid={index}\n\t\t\t\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\t\t\t\tonClick={()=>handleCardClick(cardId, processId, station_id)}\n\t\t\t\t\t\t\t\t\tcontainerStyle={{marginBottom: \"0.5rem\"}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})}\n\n\t\t\t\t</Container>\n\t\t\t</styled.BodyContainer>\n\n\t\t)\n\t}\n\n\tif(isCollapsed) {\n\t\treturn(\n\t\t\t<styled.StationContainer\n\t\t\t\tmaxHeight={maxHeight}\n\t\t\t\tisCollapsed={isCollapsed}\n\t\t\t\tmaxWidth={maxWidth}\n\t\t\t>\n\t\t\t\t{HeaderContent}\n\n\t\t\t\t<styled.BodyContainer>\n\t\t\t\t\t<styled.RotatedRouteName>{stationName}</styled.RotatedRouteName>\n\t\t\t\t</styled.BodyContainer>\n\t\t\t</styled.StationContainer>\n\t\t)\n\t}\n\n\telse {\n\t\treturn(\n\t\t\t<styled.StationContainer\n\t\t\t\tisCollapsed={isCollapsed}\n\t\t\t\tmaxWidth={maxWidth}\n\t\t\t\tmaxHeight={maxHeight}\n\t\t\t>\n\t\t\t\t{HeaderContent}\n\n\t\t\t\t{renderCards()}\n\t\t\t</styled.StationContainer>\n\t\t)\n\t}\n\n})\n\nexport default Column","import {SortableContainer} from \"react-sortable-hoc\";\n\nimport * as styled from \"./station_column.style\";\n\nimport React, {useState} from \"react\";\n\nimport Column from \"../column/column\"\n\nconst StationsColumn = ((props) => {\n\tconst {\n\t\tstation_id,\n\t\tstationName = \"Unnamed\",\n\t\thandleCardClick,\n\t\tcards = [],\n\t\tprocessId,\n\t\tmaxHeight,\n\t\tsortMode\n\t} = props\n\n\tconst [isCollapsed, setCollapsed] = useState(false)\n\n\treturn(\n\t\t<Column\n\t\t\tmaxWidth={\"20rem\"}\n\t\t\tsortMode={sortMode}\n\t\t\tmaxHeight={maxHeight}\n\t\t\tHeaderContent={\n\t\t\t\t!isCollapsed ?\n\t\t\t\t<styled.StationHeader>\n\t\t\t\t\t<styled.HeaderContent>\n\t\t\t\t\t\t<i className=\"fa fa-chevron-down\" aria-hidden=\"true\"\n\t\t\t\t\t\t   onClick={() => setCollapsed(true)}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<styled.LabelContainer>\n\n\t\t\t\t\t\t\t<styled.StationTitle>{stationName}</styled.StationTitle>\n\t\t\t\t\t\t</styled.LabelContainer>\n\n\t\t\t\t\t\t<i className=\"fas fa-ellipsis-h\" style={{opacity: 0}}></i>\n\t\t\t\t\t</styled.HeaderContent>\n\t\t\t\t</styled.StationHeader>\n\t\t\t\t\t:\n\t\t\t\t\t<styled.StationHeader>\n\t\t\t\t\t\t<i className=\"fa fa-chevron-right\" aria-hidden=\"true\"\n\t\t\t\t\t\t\tonClick={() => setCollapsed(false)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</styled.StationHeader>\n\t\t\t}\n\t\t\tstation_id={station_id}\n\t\t\tstationName = {stationName}\n\t\t\thandleCardClick={handleCardClick}\n\t\t\tcards = {cards}\n\t\t\tprocessId={processId}\n\t\t\tisCollapsed={isCollapsed}\n\t\t/>\n\t)\n\n\n})\n\nexport default StationsColumn","import styled, { css } from \"styled-components\";\nimport {Container} from \"react-smooth-dnd\";\n\n// export const RouteContainer = styled.div`\n//     display: flex;\n//     flex: 1;\n//     flex-direction: column;\n//     background: yellow;\n// `\n\nconst minHeight = \"10rem\"\nexport const RotatedRouteName = styled.span`\n// background: red;\n\ttransform: rotate(-90deg);\n\t// transform: translateY(50%);\n`\n\n\nexport const StationContainerCss = css`\n\tdisplay: flex;\n    flex-direction: column;\n    min-height: ${minHeight};\n    \n    width: ${props => props.isCollapsed ? \"2rem\" : \"fit-content\"};\n    max-width: ${props => props.isCollapsed ? \"2rem\" : \"fit-content\"};\n    min-width: ${props => props.isCollapsed ? \"2rem\" : \"fit-content\"};\n    margin-right: 1rem;\n    \n    border-radius: 1rem;\n    overflow: hidden;\n    \n    color: ${props => props.theme.bg.octonary};\n`\n\nexport const StationContainer = styled.div`\n    ${StationContainerCss};\n`\n\nexport const StationHeader = styled.div`\n    display: flex;\n    flex-direction: row;\n    width: 100%;\n    justify-content: center;\n    align-items: center;\n    background: ${props => props.theme.bg.quinary};\n    padding: 0.5rem 1rem;\n    \n    // border-top-right-radius: 1rem;\n\t// border-top-left-radius: 1rem;  \n`\n\n\nexport const TitleContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n`\n\n\n\nexport const RouteContainer = styled.div`\n\tdisplay: flex;\n\tborder-bottom: 1px solid black;\n\twidth: 100%;\n`\n\nexport const LabelContainer = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n    margin: 0 2rem;\n\t// justify-content: space-between;\n`\n\nexport const StationLabel = styled.span`\n    text-align: center;\n    margin-right: 1rem;\n    \n    font-size: ${props => props.theme.fontSize.sz3};\n`\n\nexport const StationTitle = styled.span`\n    text-align: center;\n    font-size: ${props => props.theme.fontSize.sz3};\n`\n\n\n\nexport const StationButton = styled.button`\n\n`\n\nexport const BodyContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\t// flex: 1;\n\tmin-height: ${minHeight};\n\toverflow: hidden;\n\tbackground: ${props => props.theme.bg.quaternary};\n\topacity: ${props => props.dragEnter ? 0.75 : 1};\n\tborder-bottom-right-radius: 1rem;\n\tborder-bottom-left-radius: 1rem;\n\tjustify-content: center;\n`\n","import {SortableContainer} from \"react-sortable-hoc\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {putCard} from \"../../../../../../redux/actions/card_actions\";\nimport * as styled from \"./lot_queue.style\";\nimport {Container} from \"react-smooth-dnd\";\nimport Card from \"../../card/card\";\nimport React, {useState} from \"react\";\nimport {setCardDragging, setColumnHovering} from \"../../../../../../redux/actions/card_page_actions\";\nimport Button from \"../../../../../basic/button/button\";\nimport CalendarField from \"../../../../../basic/form/calendar_field/calendar_field\";\nimport PropTypes from 'prop-types';\nimport Column from \"../column/column\";\n\nconst LotQueue = ((props) => {\n\tconst {\n\t\tstation_id = \"QUEUE\",\n\t\tstationName = \"Unnamed\",\n\t\thandleCardClick,\n\t\tcards,\n\t\tprocessId,\n\t\tsetShowCardEditor,\n\t\tshowCardEditor,\n\t\tmaxHeight,\n\t\tsortMode\n\t} = props\n\n\tconst [isCollapsed, setCollapsed] = useState(false)\n\n\treturn(\n\t\t<Column\n\t\t\tsortMode={sortMode}\n\t\t\tmaxHeight={maxHeight}\n\t\t\tmaxWidth={\"20rem\"}\n\t\t\tHeaderContent={\n\t\t\t\t!isCollapsed ?\n\t\t\t\t\t<styled.StationHeader>\n\t\t\t\t\t\t<i className=\"fa fa-chevron-down\" aria-hidden=\"true\"\n\t\t\t\t\t\t   onClick={() => setCollapsed(true)}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<styled.LabelContainer>\n\t\t\t\t\t\t\t<styled.StationTitle>{stationName}</styled.StationTitle>\n\t\t\t\t\t\t</styled.LabelContainer>\n\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tonClick={()=> {\n\t\t\t\t\t\t\t\thandleCardClick(null, processId)\n\t\t\t\t\t\t\t\tsetShowCardEditor(!showCardEditor)\n\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tschema={'lots'}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t+ Lot\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</styled.StationHeader>\n\t\t\t\t\t:\n\t\t\t\t\t<styled.StationHeader>\n\t\t\t\t\t\t<i className=\"fa fa-chevron-right\" aria-hidden=\"true\"\n\t\t\t\t\t\t   onClick={() => setCollapsed(false)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</styled.StationHeader>\n\t\t\t}\n\t\t\tstation_id={station_id}\n\t\t\tstationName = {stationName}\n\t\t\thandleCardClick={handleCardClick}\n\t\t\tcards = {cards}\n\t\t\tprocessId={processId}\n\t\t\tisCollapsed={isCollapsed}\n\t\t/>\n\t)\n\n\n})\n\n// Specifies propTypes\nLotQueue.propTypes = {\n\tstationName: PropTypes.string,\n\thandleCardClick: PropTypes.func,\n\t// cards: [],\n\tsetShowCardEditor: PropTypes.func,\n\tshowCardEditor: PropTypes.bool\n};\n\n// Specifies the default values for props:\nLotQueue.defaultProps = {\n\tstationName: \"Unnamed\",\n\thandleCardClick: ()=>{},\n\tcards: [],\n\tsetShowCardEditor: ()=>{},\n\tshowCardEditor: false\n};\n\nexport default LotQueue","import styled, { css } from \"styled-components\";\nimport {Container} from \"react-smooth-dnd\";\n\n// export const RouteContainer = styled.div`\n//     display: flex;\n//     flex: 1;\n//     flex-direction: column;\n//     background: yellow;\n// `\n\nconst minHeight = \"10rem\"\nexport const RotatedRouteName = styled.span`\n// background: red;\n\ttransform: rotate(-90deg);\n\t// transform: translateY(50%);\n`\n\n\nexport const StationContainerCss = css`\n\tdisplay: flex;\n    flex-direction: column;\n    min-height: ${minHeight};\n    \n    width: ${props => props.isCollapsed ? \"2rem\" : \"15rem\"};\n    max-width: ${props => props.isCollapsed ? \"2rem\" : \"15rem\"};\n    min-width: ${props => props.isCollapsed ? \"2rem\" : \"15rem\"};\n    margin-right: 1rem;\n    \n    border-radius: 1rem;\n    overflow: hidden;\n    \n    color: ${props => props.theme.bg.octonary};\n`\n\nexport const StationContainer = styled.div`\n    ${StationContainerCss};\n`\n\nexport const StationHeader = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    justify-content: center;\n    align-items: center;\n    background: ${props => props.theme.bg.quinary};\n    padding: .5rem 1rem;\n \n   \n`\n\nexport const HeaderContent = styled.div`\n    display: flex;\n    flex-direction: row;\n    width: 100%;\n    justify-content: space-between;\n    align-items: center;\n    padding-left: 1rem;\n    padding-right: 1rem;\n \n \n`\n\n\nexport const TitleContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n`\n\n\n\nexport const RouteContainer = styled.div`\n\tdisplay: flex;\n\tborder-bottom: 1px solid black;\n\twidth: 100%;\n`\n\nexport const LabelContainer = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\t// justify-content: space-between;\n`\n\nexport const StationLabel = styled.span`\n    text-align: center;\n    font-size: ${props => props.theme.fontSize.sz4};\n`\n\nexport const StationTitle = styled.span`\n    text-align: center;\n    font-size: ${props => props.theme.fontSize.sz3};\n`\n\n\n\nexport const StationButton = styled.button`\n\n`\n\nexport const BodyContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\t// flex: 1;\n\tmin-height: ${minHeight};\n\toverflow: hidden;\n\tbackground: ${props => props.theme.bg.quaternary};\n\topacity: ${props => props.dragEnter ? 0.75 : 1};\n\tborder-bottom-right-radius: 1rem;\n\tborder-bottom-left-radius: 1rem;\n\tjustify-content: center;\n`\n","import {SortableContainer} from \"react-sortable-hoc\";\n\nimport * as styled from \"./finish_column.style\";\n\nimport React, {useState} from \"react\";\n\nimport Column from \"../column/column\"\n\nconst FinishColumn = ((props) => {\n\tconst {\n\t\tstation_id,\n\t\tstationName = \"Unnamed\",\n\t\thandleCardClick,\n\t\tcards = [],\n\t\tprocessId,\n\t\tmaxHeight,\n\t\tsortMode\n\t} = props\n\n\tconst [isCollapsed, setCollapsed] = useState(false)\n\n\treturn(\n\t\t<Column\n\t\t\tmaxHeight={maxHeight}\n\t\t\tsortMode={sortMode}\n\t\t\tmaxWidth={\"20rem\"}\n\t\t\tHeaderContent={\n\t\t\t\t!isCollapsed ?\n\t\t\t\t<styled.StationHeader>\n\t\t\t\t\t<styled.HeaderContent>\n\t\t\t\t\t\t<i className=\"fa fa-chevron-down\" aria-hidden=\"true\"\n\t\t\t\t\t\t   onClick={() => setCollapsed(true)}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<styled.LabelContainer>\n\n\t\t\t\t\t\t\t<styled.StationTitle>{stationName}</styled.StationTitle>\n\t\t\t\t\t\t</styled.LabelContainer>\n\n\t\t\t\t\t\t<i className=\"fas fa-ellipsis-h\" style={{opacity: 0}}></i>\n\t\t\t\t\t</styled.HeaderContent>\n\t\t\t\t</styled.StationHeader>\n\t\t\t\t\t:\n\t\t\t\t\t<styled.StationHeader>\n\t\t\t\t\t\t<i className=\"fa fa-chevron-right\" aria-hidden=\"true\"\n\t\t\t\t\t\t\tonClick={() => setCollapsed(false)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</styled.StationHeader>\n\t\t\t}\n\t\t\tstation_id={station_id}\n\t\t\tstationName = {stationName}\n\t\t\thandleCardClick={handleCardClick}\n\t\t\tcards = {cards}\n\t\t\tprocessId={processId}\n\t\t\tisCollapsed={isCollapsed}\n\t\t/>\n\t)\n\n\n})\n\nexport default FinishColumn","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  // max-height: ${props => props.maxHeight};\n  display: flex;\n  flex-direction: row;\n  padding: 1rem;\n  justify-content:  flex-start;\n`","import React, {useEffect, useState} from \"react\"\n\n// components\nimport StationsColumn from \"../columns/station_column/station_column\"\nimport LotQueue from \"../columns/lot_queue/lot_queue\"\nimport FinishColumn from \"../columns/finish_column/finish_column\"\n\n// external functions\nimport {useDispatch, useSelector} from \"react-redux\"\nimport PropTypes from \"prop-types\"\nimport {SortableContainer} from \"react-sortable-hoc\"\n\n// actions\nimport {setDataPage} from \"../../../../../redux/actions/api_actions\"\n\n// styles\nimport * as styled from \"./card_zone.style\"\n\nconst CardZone = ((props) => {\n\n\t// extract props\n\tconst {\n\t\thandleCardClick,\n\t\tprocessId,\n\t\tsetShowCardEditor,\n\t\tshowCardEditor,\n\t\tmaxHeight,\n\t\tlotFilterValue,\n\t\tsortMode\n\t} = props\n\n\t// redux state\n\tconst currentProcess = useSelector(state => { return state.processesReducer.processes[processId] }) || {}\n\tconst routes = useSelector(state => { return state.tasksReducer.tasks })\n\tconst cards = useSelector(state => { return state.cardsReducer.processCards[processId] }) || []\n\tconst stations = useSelector(state => { return state.stationsReducer.stations })\n\tconst draggedLotInfo = useSelector(state => { return state.cardPageReducer.draggedLotInfo })\n\tconst {\n\t\tlotId: draggingLotId = \"\",\n\t\tbinId: draggingBinId = \"\"\n\t} = draggedLotInfo || {}\n\n\n\n\t// console.log(\"draggedLotInfo\",draggedLotInfo)\n\n\tconst [cardsSorted, setCardsSorted] = useState({})\n\tconst [queue, setQueue] = useState([])\n\tconst [finished, setFinished] = useState([])\n\n\t// const onSetDataPage = (page) => setDataPage(page)\n\t//\n\t// useEffect(() => {\n\t//\n\t// \tonSetDataPage(\"CardZone\")\n\t//\n\t// \treturn () => {\n\t// \t\t// remove page\n\t// \t\tonSetDataPage(null)\n\t// \t}\n\t// }, [])\n\n\t// need to loop through the process's routes first and get all station ids involved in the process\n\t// this must be done first in order to avoid showing lots that are in stations that are no longer a part of the process\n\n\tvar prevLoadStationId\t\t// tracks previous load station id when looping through routes\n\tvar prevUnloadStationId\t\t// tracks previous unload station id when looping through routes\n\tvar tempCardsSorted = {}\t// temp var for storing sorted cards\n\n\t// loop through routes, get load / unload station id and create entry in tempCardsSorted for each station\n\tcurrentProcess.routes && currentProcess.routes.forEach((currRouteId, index) => {\n\n\t\t// get current route and load / unload station ids\n\t\tconst currRoute = routes[currRouteId]\n\t\tconst loadStationId = currRoute?.load?.station\n\t\tconst unloadStationId = currRoute?.unload?.station\n\n\t\t// only add loadStation entry if the previous unload wasn't identical (in order to avoid duplicates)\n\t\tif (prevUnloadStationId !== loadStationId) {\n\n\t\t\t// add entry in tempCardsSorted\n\t\t\ttempCardsSorted[loadStationId] = {\n\t\t\t\tstation_id: loadStationId,\n\t\t\t\tcards: []\n\t\t\t}\n\t\t}\n\n\t\t// add entry in tempCardsSorted\n\t\ttempCardsSorted[unloadStationId] = {\n\t\t\tstation_id: unloadStationId,\n\t\t\tcards: []\n\t\t}\n\n\t\t// update prevLoadStationId and prevUnloadStationId\n\t\tprevLoadStationId = loadStationId\n\t\tprevUnloadStationId = unloadStationId\n\t})\n\n\t// now that the object keys have been made, loop through the process's cards and add them to the correct bins\n\n\tvar tempQueue = []\t\t// temp var for storing queue lots\n\tvar tempFinished = []\t// temp var for storing finished lots\n\n\tObject.values(cards).forEach((card) => {\n\n\t\t// extract card attributes\n\t\tconst {\n\t\t\tbins,\n\t\t\t_id,\n\t\t\t...rest\n\t\t} = card\n\n\t\tconst matchesFilter = card.name.toLowerCase().includes(lotFilterValue.toLowerCase())\n\n\t\tif(card.bins && matchesFilter) {\n\n\t\t\t// loop through this lot's bins\n\t\t\tObject.entries(card.bins).forEach((binEntry) => {\n\n\t\t\t\t// get bin attributes\n\t\t\t\tconst binId = binEntry[0]\n\t\t\t\tconst binValue = binEntry[1]\n\t\t\t\tconst {\n\t\t\t\t\tcount\n\t\t\t\t} = binValue\n\n\t\t\t\t// don't render card being dragged - prevents flicker bug after drop\n\t\t\t\tif((binId === draggingBinId) && (_id === draggingLotId)) return\n\n\t\t\t\t// if there is an entry in tempCardsSorted with key matching {binId}, add the card to this bin\n\t\t\t\tif(tempCardsSorted[binId]) {\n\t\t\t\t\ttempCardsSorted[binId].cards.push({\n\t\t\t\t\t\t...rest,\n\t\t\t\t\t\tbinId,\n\t\t\t\t\t\tcount,\n\t\t\t\t\t\tcardId: _id\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\t// if {binId} is queue, add the card to the queue\n\t\t\t\telse if(binId === \"QUEUE\") {\n\t\t\t\t\ttempQueue.push({\n\t\t\t\t\t\t...rest,\n\t\t\t\t\t\tcount,\n\t\t\t\t\t\tbinId,\n\t\t\t\t\t\tcardId: _id\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\t// if the {binId} is finish, add the card to the finished column\n\t\t\t\telse if(binId === \"FINISH\") {\n\t\t\t\t\ttempFinished.push({\n\t\t\t\t\t\t...rest,\n\t\t\t\t\t\tcount,\n\t\t\t\t\t\tbinId,\n\t\t\t\t\t\tcardId: _id\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t})\n\t\t}\n\t})\n\n\t/*\n\t* Renders a {StationColumn} for each entry in {cardsSorted}\n\t*\n\t* */\n\tconst renderStationColumns = () => {\n\n\t\t// loop through each entry in {cardsSorted} and return a {StationsColumn}\n\t\treturn Object.values(tempCardsSorted).map((obj, index) => {\n\n\t\t\t// extract attributes of current bin\n\t\t\tconst {\n\t\t\t\tstation_id,\n\t\t\t\troute_id,\n\t\t\t\tcards: cardsArr\n\t\t\t} = obj\n\n\t\t\t// get current station attributes from {station_id} and redux state\n\t\t\tconst currStation = stations[station_id]\n\t\t\tconst {\n\t\t\t\tname: stationName\n\t\t\t} = currStation || {}\n\n\t\t\treturn (\n\t\t\t\t<StationsColumn\n\t\t\t\t\tsortMode={sortMode}\n\t\t\t\t\tmaxHeight={maxHeight}\n\t\t\t\t\tkey={station_id + index}\n\t\t\t\t\tid={route_id+\"+\"+station_id}\n\t\t\t\t\tstation_id={station_id}\n\t\t\t\t\tstationName={stationName}\n\t\t\t\t\tprocessId={processId}\n\t\t\t\t\troute_id={route_id}\n\t\t\t\t\tcards={cardsArr}\n\t\t\t\t\thandleCardClick={handleCardClick}\n\t\t\t\t/>\n\t\t\t)\n\t\t})\n\t}\n\n\treturn(\n\t\t<styled.Container>\n\t\t\t<LotQueue\n\t\t\t\tkey={\"QUEUE\"}\n\t\t\t\tsortMode={sortMode}\n\t\t\t\tmaxHeight={maxHeight}\n\t\t\t\tstation_id={\"QUEUE\"}\n\t\t\t\tsetShowCardEditor={setShowCardEditor}\n\t\t\t\tshowCardEditor={showCardEditor}\n\t\t\t\tstationName={\"Queue\"}\n\t\t\t\tprocessId={processId}\n\t\t\t\tcards={tempQueue}\n\t\t\t\thandleCardClick={handleCardClick}\n\t\t\t/>\n\n\t\t\t{renderStationColumns()}\n\n\t\t\t<FinishColumn\n\t\t\t\tkey={\"FINISH\"}\n\t\t\t\tsortMode={sortMode}\n\t\t\t\tmaxHeight={maxHeight}\n\t\t\t\tstation_id={\"FINISH\"}\n\t\t\t\tsetShowCardEditor={setShowCardEditor}\n\t\t\t\tshowCardEditor={showCardEditor}\n\t\t\t\tstationName={\"Finished\"}\n\t\t\t\tprocessId={processId}\n\t\t\t\tcards={tempFinished}\n\t\t\t\thandleCardClick={handleCardClick}\n\t\t\t/>\n\t\t</styled.Container>\n\t)\n})\n\n// Specifies propTypes\nCardZone.propTypes = {\n\thandleCardClick: PropTypes.func,\n\tsetShowCardEditor: PropTypes.func,\n\tprocessId: PropTypes.string,\n\tlotFilterValue: PropTypes.string,\n\tshowCardEditor: PropTypes.bool,\n\tmaxHeight: PropTypes.number\n}\n\n// Specifies the default values for props:\nCardZone.defaultProps = {\n\thandleCardClick: () => {},\n\tprocessId: null,\n\tsetShowCardEditor: () => {},\n\tshowCardEditor: false,\n\tmaxHeight: \"30rem\",\n\tlotFilterValue: \"\"\n}\n\nexport default CardZone\n\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n\tdisplay: flex;\n    flex-direction: row;\n    width: 100%;\n    padding: .5rem 1rem; \n    background: ${props => props.theme.bg.quaternary};\n    border-bottom: 1px solid ${props => props.theme.bg.tertiary};\n    z-index: 20;\n`\n\nexport const ColumnContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-right: 1rem;\n`\n\nexport const Description = styled.span`\n  color: white;\n  margin-bottom: .25rem;\n`","import DropDownSearch from \"../../../../basic/drop_down_search_v2/drop_down_search\";\nimport React, {useContext} from \"react\";\nimport {useSelector} from \"react-redux\";\n\nimport * as styled from './zone_header.style'\nimport Textbox from \"../../../../basic/textbox/textbox\";\nimport {ThemeContext} from \"styled-components\";\nimport {SORT_MODES, SORT_OPTIONS} from \"../../../../../constants/common_contants\";\n\nconst ZoneHeader = (props) => {\n\n\tconst {\n\t\tselectedProcesses,\n\t\tsetSelectedProcesses,\n\t\tzone,\n\t\tsetLotFilterValue,\n\t\tsetSortMode,\n\t\tsortMode\n\t} = props\n\n\tconst selectedSortOption =  SORT_OPTIONS.find((currOption) => currOption.sortMode === sortMode)\n\n\tconst themeContext = useContext(ThemeContext)\n\n\tconst processes = useSelector(state => { return Object.values(state.processesReducer.processes) })\n\n\treturn (\n\t\t<styled.Container>\n\n\t\t\t{zone === \"summary\" &&\n\t\t\t<styled.ColumnContainer>\n\t\t\t\t<styled.Description>Selected Processes:</styled.Description>\n\t\t\t\t<DropDownSearch\n\t\t\t\t\tschema={\"lots\"}\n\t\t\t\t\tplaceholder='Select processes...'\n\t\t\t\t\tstyle={{background: themeContext.bg.tertiary, width: \"30rem\"}}\n\t\t\t\t\tonClearAll={()=>{\n\t\t\t\t\t\tsetSelectedProcesses([])\n\t\t\t\t\t}}\n\t\t\t\t\tmulti\n\t\t\t\t\tvalues={selectedProcesses}\n\t\t\t\t\toptions={processes}\n\t\t\t\t\tonChange={values => {\n\t\t\t\t\t\tsetSelectedProcesses(values)\n\t\t\t\t\t}}\n\t\t\t\t\tpattern={null}\n\t\t\t\t\tlabelField={'name'}\n\t\t\t\t\tvalueField={\"_id\"}\n\t\t\t\t\tonDropdownOpen={() => {\n\t\t\t\t\t}}\n\t\t\t\t\tonRemoveItem={(values)=> {\n\t\t\t\t\t\tsetSelectedProcesses(values)\n\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</styled.ColumnContainer>\n\t\t\t}\n\n\t\t\t<styled.ColumnContainer>\n\t\t\t\t<styled.Description>Sort By:</styled.Description>\n\t\t\t\t<DropDownSearch\n\t\t\t\t\tschema={\"lots\"}\n\t\t\t\t\tstyle={{background: themeContext.bg.tertiary, width: \"18rem\"}}\n\t\t\t\t\toptions={SORT_OPTIONS}\n\t\t\t\t\tonChange={(values) => {\n\t\t\t\t\t\tconst selectedOption = values[0]\n\t\t\t\t\t\tsetSortMode(selectedOption.sortMode)\n\t\t\t\t\t}}\n\t\t\t\t\tvalues={selectedSortOption ? [selectedSortOption] : []}\n\n\t\t\t\t\tlabelField={\"description\"}\n\t\t\t\t\tvalueField={\"sortMode\"}\n\t\t\t\t/>\n\t\t\t</styled.ColumnContainer>\n\n\t\t\t<styled.ColumnContainer>\n\t\t\t\t<styled.Description>Filter lots:</styled.Description>\n\t\t\t\t<Textbox\n\t\t\t\t\tplaceholder='Filter lots...'\n\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\tsetLotFilterValue(e.target.value)\n\t\t\t\t\t}}\n\t\t\t\t\tstyle={{ background: themeContext.bg.tertiary, height: \"100%\", width: \"15rem\" }}\n\t\t\t\t\ttextboxContainerStyle={{flex: 1, height: \"100%\" }}\n\t\t\t\t\tschema={\"lots\"}\n\t\t\t\t/>\n\t\t\t</styled.ColumnContainer>\n\t\t</styled.Container>\n\t)\n}\n\nexport default ZoneHeader\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n\toverflow: hidden;\n\tposition: relative;\n\theight: 100%;\n\tdisplay: flex;\n\tflex-direction: column;\n\twidth: 100%;\n\tflex: 1;\n\tmin-height: 100%;\n\tmax-height: 100%;\n\ttransition: all 2s ease;\n`\n\nexport const ProcessesContainer = styled.div`\n\toverflow: auto;\n\twidth: 100%;\n\theight: 100%;\n\tposition: relative;\n\ttransition: all 2s ease;\n`\n\nexport const ZoneContainer = styled.div`\n    display: flex;\n    align-items: center;\n    \n`\n\nexport const ProcessName = styled.h3`\n    padding: 0;\n    margin: 0;\n    margin: 0 2rem;\n    font-size: ${props => props.theme.fontSize.sz3};\n    color: white;\n    text-align: center;\n    width: 5rem;\n    min-width: 8rem;\n    \n    overflow: hidden;\n   text-overflow: ellipsis;\n   display: -webkit-box;\n   -webkit-line-clamp: 2; /* number of lines to show */\n   -webkit-box-orient: vertical;\n`","import React, { useState } from \"react\"\n\n// external functions\nimport {SortableContainer} from \"react-sortable-hoc\"\nimport { useSelector} from \"react-redux\"\nimport PropTypes from \"prop-types\"\n\n// internal components\nimport CardZone from \"../card_zone/card_zone\"\nimport ZoneHeader from \"../zone_header/zone_header\"\n\n// styles\nimport * as styled from \"./summary_zone.style\"\n\n/*\n* This component renders a CardZone for a list of processes\n* */\nconst SummaryZone = ((props) => {\n\n\t// extract props\n\tconst {\n\t\thandleCardClick,\n\t\tsetShowCardEditor,\n\t\tshowCardEditor,\n\t\tlotFilterValue,\n\t\tselectedProcesses,\n\t\tsortMode\n\t} = props\n\n\t/*\n   * This function renders a CardZone for each process in {selectedProcesses}\n   *\n   * For each process, the process's name and id are extracted\n   * a CardZone is rendered for each process, which is contained in a wrapping div for relative styling and additional elements (such as ProcessName)\n   *\n   * no params\n   * */\n\tconst renderSelectedProcesses = () => {\n\t\treturn (\n\t\t\t// map through {selectedProcesses}\n\t\t\tselectedProcesses.map((currProcess, processIndex) => {\n\n\t\t\t\t// extract process attributes\n\t\t\t\tconst {\n\t\t\t\t\tname: processName,\n\t\t\t\t\t_id: processId\n\t\t\t\t} = currProcess\n\n\t\t\t\t// return a CardZone wrapped with a styled container and any additional elements\n\t\t\t\treturn\t(\n\t\t\t\t\t<styled.ZoneContainer>\n\t\t\t\t\t\t<styled.ProcessName>{processName}</styled.ProcessName>\n\n\t\t\t\t\t\t<CardZone\n\t\t\t\t\t\t\tsortMode={sortMode}\n\t\t\t\t\t\t\tlotFilterValue={lotFilterValue}\n\t\t\t\t\t\t\tsetShowCardEditor={setShowCardEditor}\n\t\t\t\t\t\t\tshowCardEditor={showCardEditor}\n\t\t\t\t\t\t\tmaxHeight={\"30rem\"}\n\t\t\t\t\t\t\tprocessId={processId}\n\t\t\t\t\t\t\thandleCardClick={handleCardClick}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</styled.ZoneContainer>\n\t\t\t\t)\n\t\t\t})\n\t\t)\n\t}\n\n\treturn(\n\t\t<styled.Container >\n\t\t\t<styled.ProcessesContainer>\n\t\t\t\t{renderSelectedProcesses()}\n\t\t\t</styled.ProcessesContainer>\n\t\t</styled.Container>\n\t)\n})\n\n// Specifies propTypes\nSummaryZone.propTypes = {\n\thandleCardClick: PropTypes.func,\n\tsetShowCardEditor: PropTypes.func,\n\tshowCardEditor: PropTypes.bool,\n\tlotFilterValue: PropTypes.string\n}\n\n// Specifies the default values for props:\nSummaryZone.defaultProps = {\n\thandleCardClick: () => {},\n\tsetShowCardEditor: () => {},\n\tshowCardEditor: false,\n\tlotFilterValue: \"\"\n}\n\nexport default SummaryZone\n\n","import styled from 'styled-components'\nimport {Calendar} from \"react-calendar\";\n// import { TransformWrapper, TransformComponent } from \"react-zoom-pan-pinch\";\nimport '../../../../index.css';\nexport const Container = styled.div`\n    display: flex;\n    position: relative;\n    flex-direction: column;\n    flex: 1;\n    overflow:hidden;\n    font-style: ${props => props.theme.font.primary};\n`\n\n// HEADER\nexport const Header = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-around;\n\talign-items: center;\n\tpadding: 1rem;\n\tbackground: ${props => props.theme.bg.quinary};\n`\n\nexport const Body = styled.div`\n\tdisplay: flex;\n\tflex: 1;\n  //width: 100%;\n\t// max-width: 50%;\n\toverflow: hidden;\n\tposition: relative;\n\t\n\t\n\tbackground: ${props => props.theme.bg.tertiary};\n`\n\nexport const CardZoneContainer = styled.div`\n\t//overflow: hidden;\n  overflow: auto;\n  flex: 1;\n  //height: 40rem;\n  //height: 100%;\n  position: relative;\n  //padding: 1rem;\n\t//width: 100%;\n\t//height: 100%;\n`\n\nexport const MenuButton = styled.i`\n\tfont-size: 2rem;\n\tpadding: 0;\n\tmargin: 0;\n\tcolor: white;\n\t\n\ttext-shadow: 0.05rem 0.05rem 0.2rem #303030;\n    //transition: text-shadow 0.1s ease, filter 0.1s ease;\n    &:hover {\n        cursor: pointer;\n        filter: brightness(85%);\n    }\n\n    &:active{\n        filter: brightness(85%);\n        text-shadow: none;\n    }\n\n    background: none;\n    outline: none;\n    border: none;\n\n    &:focus {\n        outline: none;\n    }\n`\n\nexport const Title = styled.span`\n\tfont-size: ${props => props.theme.fontSize.sz2};\n\tcolor: white;\n\tfont-weight: ${props => props.theme.fontWeight.bold};\n  margin-bottom: .5rem;\n`\n\nexport const AddCardButton = styled.button`\n\n`\n\nexport const InvisibleItem = styled.div`\n    visibility: hidden;\n    height: 1rem;\n    width: 1rem;\n`\n\n// LIST\nexport const RoutesListContainer = styled.div`\n    background: green;\n    \n    width: 100%;\n    overflow: scroll;\n    \n    \n    display: flex;\n    flex-direction: row;\n    flex: 1;\n    justify-content: flex-start;\n    \n    padding: 1rem;\n    padding-right: 5rem;\n    padding-bottom: 5rem;\n`\n\n\n\n\n\n\n\n","import React, { useEffect, useState, useRef, useContext } from 'react';\n\n// external functions\nimport { useHistory } from 'react-router-dom'\nimport { useDispatch, useSelector } from \"react-redux\";\n\n// internal components\nimport CardEditor from \"./card_editor/card_editor\";\nimport CardMenu from \"./card_menu/card_menu\";\nimport CardZone from \"./card_zone/card_zone\";\nimport SummaryZone from \"./summary_zone/summary_zone\";\n\n// actions\nimport { showEditor } from '../../../../redux/actions/card_actions'\n\n// styles\nimport * as styled from './cards.style'\nimport Textbox from \"../../../basic/textbox/textbox\";\nimport { ThemeContext } from \"styled-components\";\nimport DropDownSearch from \"../../../basic/drop_down_search_v2/drop_down_search\";\nimport ZoneHeader from \"./zone_header/zone_header\";\nimport { SORT_MODES } from \"../../../../constants/common_contants\";\n\nconst Cards = (props) => {\n\n    // extract props\n    const {\n        id\n    } = props\n\n    // history\n    const history = useHistory()\n\n    // theme\n    const themeContext = useContext(ThemeContext)\n\n    //redux state\n    const processes = useSelector(state => { return state.processesReducer.processes })\n    const showCardEditor = useSelector(state => { return state.cardsReducer.showEditor })\n\n    // actions\n    const dispatch = useDispatch()\n    const onShowCardEditor = (bool) => dispatch(showEditor(bool))\n\n    // internal state\n    const [selectedCard, setSelectedCard] = useState(null)\n    const [title, setTitle] = useState(null)\n    const [currentProcess, setCurrentProcess] = useState(null)\n    const [isProcessView, setIsProcessView] = useState(false)\n    const [showMenu, setShowMenu] = useState(false)\n    const [zoneSize, setZoneSize] = useState({\n        width: undefined,\n        height: undefined,\n        offsetLeft: undefined,\n        offsetTop: undefined,\n    })\n    const [lotFilterValue, setLotFilterValue] = useState('')\n    const [sortMode, setSortMode] = useState(SORT_MODES.END_DESCENDING)\n    // internal component state\n    const [selectedProcesses, setSelectedProcesses] = useState(Object.values(processes)) // array of {process} objects - the list of selected processes\n\n    // refs\n    const zoneRef = useRef(null);\n\n    /*\n    * This effect monitors the div referenced by zoneRef and the window height\n    *\n    * When either of these changes, zoneSize is updated with the current width, height, top offset, and left offset of the div referenced by zoneRef\n    * This ensures that the size of zoneRef is updated when the window size changes\n    *\n    * zoneSize is used for setting the max height of lot columns in the CardZone and SummaryZone\n    *\n    * @param {ref} zoneRef - ref assigned to CardZone\n    * @param {int} window.innerHeight - window height\n    *\n    * */\n    useEffect(() => {\n\n        // if zoneRef is assigned\n        if (zoneRef.current) {\n\n            // extract dimensions of zoneRef\n            let height = zoneRef.current.offsetHeight;\n            let width = zoneRef.current.offsetWidth;\n            let offsetTop = zoneRef.current.offsetTop;\n            let offsetLeft = zoneRef.current.offsetLeft;\n\n            // set zoneSize\n            setZoneSize({\n                width: width,\n                height: height,\n                offsetTop: offsetTop,\n                offsetLeft: offsetLeft,\n            });\n        }\n\n    }, [zoneRef, window.innerHeight]);\n\n    /*\n    * This effect updates internal component state basted on the {id} props\n    *\n    * The value of {id} can take on 1 of 3 types of values, {\"summary\"}, {\"timeline\"}, or the id of a process\n    *\n    * The content of the page changes based on the value of id, and this useEffect updates internal component state in order to achieve this\n    *\n    * the value of {id} should produce the following content:\n    *   {\"summary\"} - render content for the summary zone\n    *   {\"timeline\"} - render content for timeline zone *** CURRENTLY DISABLED ***\n    *   a process id - render lot content for the corresponding process\n    *\n    * @param {id} string - id of content to display\n    *\n    * */\n    useEffect(() => {\n\n        // update internal state based on id\n        switch (id) {\n\n            // summary zone\n            case \"summary\":\n                setTitle(\"Lots Summary\")\n                setIsProcessView(false)\n                break\n\n            // timeline zone\n            case \"timeline\":\n                setTitle(\"Timeline Zone\")\n                setIsProcessView(false)\n                break\n\n            // otherwise assume id is the id of a specific process\n            default:\n                setIsProcessView(true)\n                setCurrentProcess(processes[id])\n                setTitle(processes[id]?.name)\n                break\n        }\n    }, [id]);\n\n\n    /*\n   * This function handles the logic for when a lot is clicked\n   *\n   * Clicking a lot should open the lot editor for the clicked lot\n   * In order to do this, the function sets showCardEditor to true and sets selectedCard to the values passed in as arguments to this function\n   *\n   * @param {cardId} string - id of card clicked\n   * @param {processId} string - id of clicked card's process\n   * @param {binId)} string - id of clicked card's bin\n   *\n   * */\n    const handleCardClick = (cardId, processId, binId) => {\n        onShowCardEditor(true)\n        setSelectedCard({ cardId, processId, binId })\n    }\n\n    return (\n        <styled.Container>\n            {showCardEditor &&\n                <CardEditor\n                    isOpen={showCardEditor}\n                    onAfterOpen={null}\n                    cardId={selectedCard ? selectedCard.cardId : null}\n                    processId={selectedCard ? selectedCard.processId : null}\n                    binId={selectedCard ? selectedCard.binId : null}\n                    close={() => {\n                        onShowCardEditor(false)\n                        setSelectedCard(null)\n                    }}\n                />\n            }\n            <styled.Header>\n                {isProcessView ?\n                    <styled.MenuButton\n                        style={{ marginRight: \"auto\" }}\n                        className=\"fas fa-chevron-left\"\n                        aria-hidden=\"true\"\n                        onClick={() => {\n                            history.replace('/processes')\n                        }\n                        }\n                    />\n                    :\n                    <styled.InvisibleItem style={{ marginRight: \"auto\" }} /> // used for spacing\n                }\n                <div style={{ flex: 1, flexDirection: \"column\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n                    <styled.Title>{title ? title : \"untitled\"}</styled.Title>\n                </div>\n                <styled.InvisibleItem\n                    style={{ marginLeft: \"auto\" }}\n                />\n            </styled.Header>\n            <ZoneHeader\n                sortMode={sortMode}\n                setSortMode={setSortMode}\n                setLotFilterValue={setLotFilterValue}\n                selectedProcesses={selectedProcesses}\n                setSelectedProcesses={setSelectedProcesses}\n                zone={id}\n            />\n\n            <styled.Body id={\"cards-body\"}>\n                {showMenu &&\n                    <CardMenu\n                        currentProcess={currentProcess}\n                        close={() => setShowMenu(false)}\n                    />\n                }\n\n                {\n                    {\n                        'summary':\n                            <SummaryZone\n                                sortMode={sortMode}\n                                selectedProcesses={selectedProcesses}\n                                lotFilterValue={lotFilterValue}\n                                handleCardClick={handleCardClick}\n                                setShowCardEditor={onShowCardEditor}\n                                showCardEditor={showCardEditor}\n                            />,\n                        'timeline':\n                            <div\n                                handleCardClick={handleCardClick}\n                                initialProcesses={[currentProcess]}\n                            />\n                    }[id] ||\n                    <styled.CardZoneContainer ref={zoneRef}>\n                        <CardZone\n                            maxHeight={(zoneSize.height - 75) + \"px\"} // maxHeight is set equal to size of parent div with some value subtracted as padding. NOTE: setting height to 100% doesn't currently work for this\n                            setShowCardEditor={onShowCardEditor}\n                            showCardEditor={showCardEditor}\n                            handleCardClick={handleCardClick}\n                            processId={id}\n                            lotFilterValue={lotFilterValue}\n                            sortMode={sortMode}\n                        />\n                    </styled.CardZoneContainer>\n                }\n            </styled.Body>\n        </styled.Container>\n    )\n}\n\nexport default Cards\n","import {\n  WIDGET_PAGE_LOADED,\n  WIDGET_XY_COORDINATES,\n  WIDGET_LOADED,\n  HOVER_STATION_INFO,\n\n} from '../types/widget_types'\n\nexport const widgetPageLoaded = (state) => {\n    return { type: WIDGET_PAGE_LOADED, payload: state}\n}\n\nexport const widgetXYCoordinates = (state) => {\n    return { type: WIDGET_XY_COORDINATES, payload: state}\n}\n\nexport const widgetLoaded = (state) => {\n    return { type: WIDGET_LOADED, payload: state}\n}\n\nexport const hoverStationInfo = (info) => {\n    return { type: HOVER_STATION_INFO, payload: { info } }\n}\n","import React, { useState, useMemo, useRef, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useLocation, useParams } from 'react-router-dom'\nimport { useHistory } from 'react-router-dom'\n\n// Import Styles\nimport * as styled from './side_bar.style'\n\n// Import Components\nimport { DraggableCore } from \"react-draggable\";\nimport SideBarSwitcher from '../../components/side_bar/side_bar_switcher/side_bar_switcher'\nimport LocationsContent from '../../components/side_bar/content/locations/locations_content'\nimport ObjectsContent from '../../components/side_bar/content/objects/objects_content'\nimport TasksContent from '../../components/side_bar/content/tasks/tasks_content'\nimport DevicesContent from '../../components/side_bar/content/devices/devices_content'\nimport SchedulerContent from '../../components/side_bar/content/scheduler/scheduler_content'\nimport ProcessesContent from '../../components/side_bar/content/processes/processes_content'\nimport Settings from '../../components/side_bar/content/settings/settings'\nimport ConfirmDeleteModal from '../../components/basic/modals/confirm_delete_modal/confirm_delete_modal'\nimport PageErrorBoundary from '../../containers/page_error_boundary/page_error_boundary'\nimport Cards from \"../../components/side_bar/content/cards/cards\";\n\n// Import Actions\nimport { setEditingStation, setSelectedStation } from '../../redux/actions/stations_actions'\nimport { setEditingPosition, setSelectedPosition } from '../../redux/actions/positions_actions'\nimport { hoverStationInfo } from '../../redux/actions/widget_actions'\nimport { editingTask } from '../../redux/actions/tasks_actions'\nimport { editingProcess } from '../../redux/actions/processes_actions'\nimport { setWidth, setMode } from \"../../redux/actions/sidebar_actions\";\nimport * as sidebarActions from \"../../redux/actions/sidebar_actions\"\nimport * as taskActions from '../../redux/actions/tasks_actions'\n\nconst SideBar = (props) => {\n\n    const {\n        showSideBar,\n        setShowSideBar\n    } = props\n\n    let params = useParams()\n    const {\n        page,\n        subpage,\n        id\n    } = params\n\n    const dispatch = useDispatch()\n    const dispatchHoverStationInfo = (info) => dispatch(hoverStationInfo(info))\n    const dispatchEditingStation = (bool) => dispatch(setEditingStation(bool))\n    const dispatchEditingPosition = (bool) => dispatch(setEditingPosition(bool))\n    const onSetOpen = (sideBarOpen) => dispatch(sidebarActions.setOpen(sideBarOpen))\n    const onSetWidth = (width) => dispatch(sidebarActions.setWidth(width))\n    const onDeselectTask = () => dispatch(taskActions.deselectTask())\n    const dispatchEditingTask = (bool) => dispatch(editingTask(bool))\n    const dispatchEditingProcess = (bool) => dispatch(editingProcess(bool))\n    const dispatchSetSelectedStation = (station) => dispatch(setSelectedStation(station))\n    const dispatchSetSelectedPosition = (station) => dispatch(setSelectedPosition(station))\n\n    const [width, setWidth] = useState(450)\n    const [prevWidth, setPrevWidth] = useState(width)\n    const [buttonActive, setButtonActive] = useState(false)\n    const [prevParams, setPrevParams] = useState(params)\n    const [confirmDeleteModal, setConfirmDeleteModal] = useState(false);\n\n    const mode = useSelector(state => state.sidebarReducer.mode)\n    const widgetPageLoaded = useSelector(state => { return state.widgetReducer.widgetPageLoaded })\n    const editingStation = useSelector(state => state.stationsReducer.editingStation)\n    const editingPosition = useSelector(state => state.positionsReducer.editingPosition)\n\n    const taskEditing = useSelector(state => state.tasksReducer.editingTask)\n    const processEditing = useSelector(state => state.processesReducer.editingProcess)\n    const sideBarOpen = useSelector(state => state.sidebarReducer.open)\n\n    const history = useHistory()\n    const url = useLocation().pathname\n\n    const locationEditing = !!editingStation ? editingStation : editingPosition\n\n    const boundToWindowSize = () => {\n        const newWidth = Math.min(window.innerWidth, Math.max(360, width))\n        setWidth(newWidth)\n        onSetWidth(newWidth)\n    }\n    useEffect(() => {\n        window.addEventListener('resize', boundToWindowSize, { passive: true })\n\n        return () => {\n            window.removeEventListener('resize', boundToWindowSize, { passive: true })\n        }\n    }, [])\n\n\n    useEffect(() => {\n        onSetOpen(sideBarOpen)\n    })\n\n\n    // sets width to full screen if card subpage is open in processes\n    useEffect(() => {\n        const {\n\n        } = prevParams\n\n        const prevPage = prevParams.page\n        const prevSubpage = prevParams.subpage\n        const prevId = prevParams.id\n\n\n        const time = Date.now()\n        if ((page === \"processes\" || page === \"lots\") && ((subpage === \"lots\")) || (id === \"timeline\") || (id === \"summary\")) {\n\n            if (!prevWidth) setPrevWidth(width) // store previous width to restore when card page is left\n            setWidth(window.innerWidth)\n            onSetWidth(window.innerWidth)\n\n        }\n        else if ((((prevSubpage === \"lots\") || (prevId === \"timeline\") || (prevId === \"summary\")) && (prevPage === \"processes\" || prevPage === \"lots\")) && ((subpage !== \"lots\") || (id === \"timeline\") || (id === \"summary\"))) {\n            setWidth(prevWidth)\n            onSetWidth(prevWidth)\n            setPrevWidth(null)\n        }\n\n        setPrevParams(params)\n\n        if (!showSideBar) {\n            setWidth(450)\n            onSetWidth(450)\n        }\n\n        return () => { }\n\n    }, [page, subpage, id, width, showSideBar])\n\n    /**\n     * Handles the hamburger icon transformation\n     */\n    const handleSideBarOpenCloseButtonClick = () => {\n\n        if(!!showSideBar){\n            dispatchSetSelectedStation(null)\n            dispatchSetSelectedPosition(null)\n            dispatchEditingTask(false)\n            dispatchEditingProcess(false)\n        }\n\n        if (!widgetPageLoaded || widgetPageLoaded && !sideBarOpen) {\n            const hamburger = document.querySelector('.hamburger')\n            hamburger.classList.toggle('is-active')\n        }\n\n        if (!showSideBar && url == '/') {\n            history.push(`/locations`)\n        }\n\n        // If widget page is active, the toggle the widget page, else toggle the side bar\n        if (widgetPageLoaded) {\n            history.push('/locations')\n            dispatchSetSelectedStation(null)\n            dispatchSetSelectedPosition(null)\n            dispatchHoverStationInfo(null)\n        } else {\n            const newSideBarState = !showSideBar\n            setShowSideBar(newSideBarState)\n            onSetOpen(newSideBarState)\n        }\n\n    }\n\n    /**\n     * Handles when widget pages are open\n     * If open and button is not active, then activate the button\n     * Else if the button is active and widget pages aren't open and side bar isnt open then disable\n     */\n    const handleActiveButton = () => {\n\n        // Try catch is here because an error is thrown when the side bar is not mounted due to a full screen dashboard\n        // Ugly way of handling this, but it works at the moment. The error happens becasue no elements have a class hamburger when function runs\n        try {\n            if (!buttonActive && widgetPageLoaded) {\n                setButtonActive(true)\n                const hamburger = document.querySelector('.hamburger')\n                hamburger.classList.toggle('is-active')\n\n            } else if (buttonActive && !widgetPageLoaded && !showSideBar) {\n                setButtonActive(false)\n            }\n        } catch (error) {\n            setTimeout(() => handleActiveButton(), 100)\n        }\n\n    }\n\n    function handleDrag(e, ui) {\n        const newWidth = Math.min(window.innerWidth, Math.max(360, width + ui.deltaX))\n        setWidth(newWidth)\n        onSetWidth(newWidth)\n    }\n\n    let content\n    switch (page) {\n        case 'locations':\n            content = <LocationsContent />\n            break\n\n        // Commented out for now\n        // case '/objects':\n        //     content = <ObjectsContent />\n        //     break\n\n        case 'processes':\n            if (subpage === \"lots\") {\n                content = <Cards id={id} />\n            }\n            else {\n                content = <ProcessesContent subpage={subpage} id={id} />\n            }\n\n            break\n\n        case 'lots':\n            if ((id === \"summary\") || (id === \"timeline\")) {\n                content = <Cards id={id} />\n            }\n            break\n\n        case 'tasks':\n            content = <TasksContent />\n            break\n\n        case 'scheduler':\n            content = <SchedulerContent />\n            break\n\n        case 'devices':\n            content = <DevicesContent />\n            break\n\n        case 'settings':\n            content = <Settings />\n            break\n\n        default:\n            content = null\n            if (showSideBar) {\n                handleSideBarOpenCloseButtonClick()\n            }\n            break\n    }\n\n\n\n    return (\n        <>\n            <ConfirmDeleteModal\n                isOpen={!!confirmDeleteModal}\n                title={\"Are you sure you want to leave this page? Any changes will not be saved\"}\n                button_1_text={\"Yes\"}\n                button_2_text={\"No\"}\n                handleClose={() => setConfirmDeleteModal(null)}\n                handleOnClick1={() => {\n                    handleSideBarOpenCloseButtonClick()\n                    setConfirmDeleteModal(null)\n                }}\n                handleOnClick2={() => {\n                    setConfirmDeleteModal(null)\n                }}\n            />\n\n            <styled.SideBarOpenCloseButton\n                className=\"hamburger hamburger--slider\"\n                type='button'\n                id='sideBarButton'\n                onClick={() => {\n                    if (locationEditing || taskEditing || processEditing) {\n                        setConfirmDeleteModal(true)\n                    }\n                    else { handleSideBarOpenCloseButtonClick() }\n                }}\n            // showSideBar={showSideBar}\n            >\n                <span className='hamburger-box' id='sideBarButton' style={{ display: 'flex', justifyContent: 'center', width: 'auto' }}>\n                    <span className='hamburger-inner' id='sideBarButton' />\n                </span>\n            </styled.SideBarOpenCloseButton>\n\n            {showSideBar &&\n                <styled.SidebarWrapper mode={mode} style={{ width: showSideBar == true ? width : 0, display: \"flex\", }} open={showSideBar}>\n\n                    <SideBarSwitcher\n                        handleClickOutside={handleSideBarOpenCloseButtonClick}\n                        showSideBar={showSideBar}\n                    />\n\n                    <styled.SidebarContent\n                        key=\"sidebar-content\"\n                        style={{}}\n                    >\n                        {content}\n\n                        <DraggableCore key=\"handle\" onDrag={handleDrag} >\n                            <styled.ResizeBar>\n                                <styled.ResizeHandle content={mode}></styled.ResizeHandle>\n                            </styled.ResizeBar>\n                        </DraggableCore>\n                    </styled.SidebarContent>\n                </styled.SidebarWrapper>\n            }\n\n\n            {handleActiveButton()}\n        </>\n    )\n\n\n}\n\nexport default SideBar\n","import axios from 'axios';\n// import * as log from 'loglevel';\n\nimport logger from '../logger'\n\nimport { apiIPAddress } from '../settings/settings'\nconst operator = 'report_events'\nconst log = logger.getLogger('Api')\n\nexport async function getReportEvents() {\n    try {\n        const response = await axios({\n            method: 'get',\n            url: apiIPAddress() + operator, \n            headers: {\n                'X-API-Key': '123456',\n            },\n        });\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n\n}\n\nexport async function deleteReportEvent(ID) {\n    try {\n        const response = await axios({\n            method: 'DELETE',\n            url: apiIPAddress() + operator + '/' + ID,\n            headers: {\n                'Accept': 'application/json',\n                'X-API-Key': '123456',\n            },\n        });\n\n        // Success 🎉\n        // log.debug('response',response);\n        // const data = response.data;\n        // const dataJson = JSON.parse(data)\n        return response;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}\n\nexport async function postReportEvent(reportEvent) {\n    console.log(\"postReportEvent reportEvent\",reportEvent)\n    try {\n        const response = await axios({\n            method: 'POST',\n            url: apiIPAddress() + operator,\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'application/json'\n            },\n            data: reportEvent\n        });\n\n        // Success 🎉\n        // log.debug('response',response);\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        // log.debug('response data json',dataJson);\n\n\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n        // throw error\n    }\n}\n\nexport async function putReportEvent(reportEvent, ID) {\n    try {\n        const response = await axios({\n            method: 'PUT',\n            url: apiIPAddress() + operator + '/' + ID,\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'text/html'\n            },\n            data: reportEvent\n        });\n\n        // Success 🎉\n        // log.debug('response',response);\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}\n\nexport async function getReportAnalytics(stationId, timeSpan) {\n    try {\n        const response = await axios({\n            method: 'PUT',\n            url: apiIPAddress() + operator + '/' + stationId + '/stats',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'text/html'\n            },\n            // A timespan is {time_span: 'day', index: 0}\n            data: timeSpan\n        });\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        return dataJson;\n\n\n    } catch (error) {\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        throw error\n    }\n\n\n}\n","import { normalize } from 'normalizr';\n\n// import types\nimport {\n    GET,\n    POST,\n    DELETE,\n    PUT\n} from '../types/prefixes';\n\nimport {\n    REPORT_EVENTS,\n    REPORT_EVENT\n} from '../types/data_types';\n\nimport { api_action } from './index';\nimport * as api from '../../api/report_events_api'\n\n// import schema\n// import { scheduleSchema, schedulesSchema } from '../../normalizr/schedules_schema';\n\nimport log from \"../../logger\"\nimport {convertArrayToObject} from \"../../methods/utils/utils\";\n\nconst logger = log.getLogger(\"ReportEvents\", \"Redux\")\n\nexport const convertData = (array, key) => {\n    const initialValue = {\n        station_id: {},\n        report_button_id: {}\n    };\n    return array.reduce((obj, item) => {\n        let current = obj.station_id[item.station_id] ? obj.station_id[item.station_id] : []\n        let current1 = obj.report_button_id[item.report_button_id] ? obj.report_button_id[item.report_button_id] : []\n\n        return {\n            ...obj,\n            // [item[key]]: item,\n            _id: {\n                ...obj._id,\n                [item._id]: item\n            },\n            station_id: {\n                ...obj.station_id,\n                [item.station_id]: [...current, item._id]\n            },\n            report_button_id: {\n                ...obj.report_button_id,\n                [item.report_button_id]: [...current1, item._id]\n            }\n        };\n    }, initialValue);\n};\n\n\n// get\n// ******************************\nexport const getReportEvents = () =>  async (dispatch) => {\n\n    /*\n        Invoked in api_action()\n        Whatever is returned from this function is the payload\n        that will be dispatched to redux (if successful)\n    */\n    const callback = async () => {\n\n        // make request\n        const reportEvents = await api.getReportEvents();\n        const reportEventsObj = convertData(reportEvents, \"_id\")\n\n        // format response\n        // const normalizedSchedules = normalize(schedules, schedulesSchema);\n\n        // return payload for redux\n        return {\n            reportEventsObj\n        };\n    }\n\n    const actionName = GET + REPORT_EVENTS;\n\n    // payload is returned back\n    const payload = await api_action(actionName, callback, dispatch);\n\n    return payload;\n\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n\n// create\n// ******************************\nexport const postReportEvent = (reportEvent) =>  async dispatch => {\n\n    const callback = async () => {\n        const createdReportEvent = await api.postReportEvent(reportEvent);\n        console.log(\"createdReportEvent\",createdReportEvent)\n        // const normalizedSchedules = normalize(createdSchedule, scheduleSchema);\n\n        return {\n            createdReportEvent\n        };\n    }\n\n    const actionName = POST + REPORT_EVENT;\n\n    const payload = await api_action(actionName, callback, dispatch, reportEvent);\n\n    return payload\n\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// delete\n// ******************************\nexport const deleteReportEvent = (id) => async (dispatch) => {\n\n    const callback = async () => {\n        await api.deleteReportEvent(id);\n\n        return {\n            id\n        };\n    }\n\n    const actionName = DELETE + REPORT_EVENT;\n    const payload = await api_action(actionName, callback, dispatch, id);\n    return payload;\n\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// update\n// ******************************\nexport const putReportEvent = (id, reportEvent) => async dispatch => {\n\n\n    const callback = async () => {\n        const updatedReportEvent = await api.putReportEvent(reportEvent, id);\n\n        return {\n            updatedReportEvent\n        };\n    }\n\n    const actionName = PUT + REPORT_EVENT           ;\n    const payload = await api_action(actionName, callback, dispatch);\n    return payload;\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nexport const getReportAnalytics = async (stationId, timeSpan) => {\n    try {\n        const stationAnalytics = await api.getReportAnalytics(stationId, timeSpan);\n        return stationAnalytics\n    } catch (error) {\n    }\n};\n","import axios from 'axios';\n// import * as log from 'loglevel';\n\nimport logger from '../logger'\n\nimport { apiIPAddress } from '../settings/settings'\nconst operator = 'lots'\nconst log = logger.getLogger('Api')\n\nexport async function getLot(lotId) {\n    try {\n        const response = await axios({\n            method: 'get',\n            url: apiIPAddress() + operator + \"/\" + lotId,\n            headers: {\n                'X-API-Key': '123456',\n            }\n        });\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n\n}\n\nexport async function getLots() {\n    try {\n        const response = await axios({\n            method: 'get',\n            url: apiIPAddress() + operator, \n            headers: {\n                'X-API-Key': '123456',\n            },\n        });\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n\n}\n\n\nexport async function getProcessLots(processId) {\n    try {\n        const response = await axios({\n            method: 'get',\n            url: apiIPAddress() + \"processes/\" + processId + \"/lots\",\n        headers:{\n            'X-API-Key': '123456',\n        }\n        });\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n\n}\n\nexport async function deleteLot(ID) {\n    try {\n        const response = await axios({\n            method: 'DELETE',\n            url: apiIPAddress() + operator + '/' + ID,\n            headers: {\n                'Accept': 'application/json',\n                'X-API-Key': '123456',\n            },\n        });\n\n        // Success 🎉\n        // log.debug('response',response);\n        // const data = response.data;\n        // const dataJson = JSON.parse(data)\n        return response;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}\n\nexport async function postLot(lot) {\n    try {\n        const response = await axios({\n            method: 'POST',\n            url: apiIPAddress() + operator,\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'application/json'\n            },\n            data: lot\n        });\n\n        // Success 🎉\n        // log.debug('response',response);\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        // log.debug('response data json',dataJson);\n\n\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}\n\nexport async function putLot(lot, ID) {\n    try {\n        const response = await axios({\n            method: 'PUT',\n            url: apiIPAddress() + operator + '/' + ID,\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'text/html'\n            },\n            data: JSON.stringify(lot)\n        });\n\n        // Success 🎉\n        // log.debug('response',response);\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        console.log(\"cards_api putCard dataJson\",dataJson)\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}\n","import { normalize } from 'normalizr';\n\n// import types\nimport {\n    GET,\n    POST,\n    DELETE,\n    PUT\n} from '../types/prefixes';\n\nimport {\n    LOT,\n    LOTS\n} from '../types/data_types';\n\nimport { api_action } from './index';\n\n// import schema\nimport { scheduleSchema, schedulesSchema } from '../../normalizr/schedules_schema';\n\nimport log from \"../../logger\"\nimport {convertArrayToObject} from \"../../methods/utils/utils\";\nimport * as api from \"../../api/lots_api\";\n\nconst logger = log.getLogger(\"Lots\", \"Redux\")\nlogger.setLevel(\"debug\")\n// get\n// ******************************\nexport const getLot = (lotId) =>  async (dispatch) => {\n\n    /*\n        Invoked in api_action()\n        Whatever is returned from this function is the payload\n        that will be dispatched to redux (if successful)\n    */\n    const callback = async () => {\n\n        // make request\n        const lot = await api.getLot(lotId);\n\n        // const cardsObj = convertArrayToObject(cards, \"_id\")\n        // console.log(\"getCard cardsObj\",cardsObj)\n\n        // format response\n        // const normalizedSchedules = normalize(schedules, schedulesSchema);\n\n        // return payload for redux\n        return {\n            lot,\n        };\n    }\n\n    const actionName = GET + LOT;\n\n    // payload is returned back\n    const payload = await api_action(actionName, callback, dispatch);\n\n    return payload;\n\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// get\n// ******************************\nexport const getLots = () =>  async (dispatch) => {\n\n    /*\n        Invoked in api_action()\n        Whatever is returned from this function is the payload\n        that will be dispatched to redux (if successful)\n    */\n    const callback = async () => {\n\n        // make request\n        const lots = await api.getLots();\n\n        const lotsObj = convertArrayToObject(lots, \"_id\")\n\n        // format response\n        // const normalizedSchedules = normalize(schedules, schedulesSchema);\n\n        // return payload for redux\n        return {\n            lots: lotsObj,\n        };\n    }\n\n    const actionName = GET + LOTS;\n\n    // payload is returned back\n    const payload = await api_action(actionName, callback, dispatch);\n\n    return payload;\n\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// get\n// ******************************\n// export const getProcessCards = (processId) =>  async (dispatch) => {\n//\n//     /*\n//         Invoked in api_action()\n//         Whatever is returned from this function is the payload\n//         that will be dispatched to redux (if successful)\n//     */\n//     const callback = async () => {\n//\n//         // make request\n//         const cards = await api.getProcessCards(processId);\n//         console.log(\"getProcessCards cards\",cards)\n//\n//         const cardsObj = convertArrayToObject(cards, \"_id\")\n//         console.log(\"getProcessCards cardsObj\",cardsObj)\n//\n//         // return payload for redux\n//         return {\n//             cards: cardsObj,\n//             processId\n//         };\n//     }\n//\n//     const actionName = GET + PROCESS_CARDS;\n//\n//     // payload is returned back\n//     const payload = await api_action(actionName, callback, dispatch);\n//\n//     return payload;\n//\n// };\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n\n// create\n// ******************************\nexport const postLot = (lot) =>  async dispatch => {\n\n    const callback = async () => {\n        const createdLot = await api.postLot(lot);\n        // const normalizedSchedules = normalize(createdSchedule, scheduleSchema);\n\n        return {\n            lot: createdLot,\n            processId: lot.process_id\n        };\n    }\n    //\n    const actionName = POST + LOT;\n\n    const payload = await api_action(actionName, callback, dispatch, lot);\n\n    return payload.lot\n\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// delete\n// ******************************\nexport const deleteLot = (lotId, processId) => async (dispatch) => {\n\n    const callback = async () => {\n        await api.deleteLot(lotId);\n\n        return {\n            lotId,\n            processId\n        };\n    }\n    //\n    const actionName = DELETE + LOT;\n    const payload = await api_action(actionName, callback, dispatch, lotId);\n    return payload;\n\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// update\n// ******************************\nexport const putLot = (lot, lotId) => async dispatch => {\n\n    const callback = async () => {\n        const response = await api.putLot(lot, lotId);\n        // const normalizedSchedule = normalize(response, scheduleSchema);\n        //\n        return {\n            lot: response,\n            processId: lot.process_id\n        };\n    }\n\n    const actionName = PUT + LOT;\n    const payload = await api_action(actionName, callback, dispatch, { lot});\n    return lot;\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n","// import external dependencies\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from \"react-router-dom\";\n\n// Import Actions\nimport { getMaps } from '../../redux/actions/map_actions'\nimport { getTaskQueue, deleteTaskQueueItem } from '../../redux/actions/task_queue_actions'\nimport { getObjects } from '../../redux/actions/objects_actions'\nimport { getTasks, deleteTask, putTask } from '../../redux/actions/tasks_actions'\nimport { getDashboards, deleteDashboard, postDashboard } from '../../redux/actions/dashboards_actions'\nimport { getSounds } from '../../redux/actions/sounds_actions'\nimport { getProcesses, putProcesses } from '../../redux/actions/processes_actions'\nimport { getTasksAnalysis } from '../../redux/actions/task_analysis_actions'\nimport { getDataStream } from '../../redux/actions/data_stream_actions'\n\nimport { getSchedules } from '../../redux/actions/schedule_actions';\nimport { getDevices, putDevices } from '../../redux/actions/devices_actions'\nimport { getStatus } from '../../redux/actions/status_actions'\n\nimport { getSettings, postSettings } from '../../redux/actions/settings_actions'\nimport { getLocalSettings } from '../../redux/actions/local_actions'\nimport { getLoggers } from '../../redux/actions/local_actions';\nimport { getRefreshToken } from '../../redux/actions/authentication_actions'\n\nimport { getPositions, deletePosition, putPosition } from '../../redux/actions/positions_actions'\nimport { getStations, putStation, deleteStation } from '../../redux/actions/stations_actions'\n\nimport { postLocalSettings } from '../../redux/actions/local_actions'\nimport * as localActions from '../../redux/actions/local_actions'\n\n// Import components\nimport Textbox from '../../components/basic/textbox/textbox'\nimport Button from '../../components/basic/button/button'\nimport Switch from 'react-ios-switch'\nimport SplashScreen from \"../../components/misc/splash_screen/splash_screen\";\n\n// import utils\nimport { getPageNameFromPath } from \"../../methods/utils/router_utils\";\nimport { isEquivalent, deepCopy } from '../../methods/utils/utils'\n\n// import logger\nimport logger from '../../logger.js';\nimport { getMap } from '../../api/map_api';\nimport SideBar from '../side_bar/side_bar';\nimport localReducer from \"../../redux/reducers/local_reducer\";\nimport { getCards, getProcessCards } from \"../../redux/actions/card_actions\";\nimport apiReducer from \"../../redux/reducers/api_reducer\";\nimport { getReportEvents } from \"../../redux/actions/report_event_actions\";\nimport { getLots } from \"../../redux/actions/lot_actions\";\n\nconst ApiContainer = (props) => {\n\n    // Dispatches\n    const dispatch = useDispatch()\n    const onGetMaps = async () => await dispatch(getMaps())\n    const onGetStations = () => dispatch(getStations())\n    const onGetPositions = () => dispatch(getPositions())\n    const onGetDashboards = () => dispatch(getDashboards())\n    const onGetObjects = () => dispatch(getObjects())\n    const onGetTasks = () => dispatch(getTasks())\n    const onGetSounds = (api) => dispatch(getSounds(api))\n    const onGetTaskQueue = () => dispatch(getTaskQueue())\n\n    const dispatchGetDataStream = () => dispatch(getDataStream())\n\n    const onGetProcessCards = (processId) => dispatch(getProcessCards(processId))\n    // const dispatchGetLots = () => dispatch(getLots())\n    const onGetCards = () => dispatch(getCards())\n\n    const onGetProcesses = () => dispatch(getProcesses());\n    const onGetReportEvents = () => dispatch(getReportEvents());\n\n    const onGetSchedules = () => dispatch(getSchedules())\n    const onGetDevices = async () => await dispatch(getDevices())\n    const onGetStatus = () => dispatch(getStatus())\n\n    const onGetSettings = () => dispatch(getSettings())\n    const onGetLocalSettings = () => dispatch(getLocalSettings())\n    const onPostLocalSettings = (settings) => dispatch(postLocalSettings(settings))\n\n    const onGetLoggers = () => dispatch(getLoggers())\n    const onGetRefreshToken = () => dispatch(getRefreshToken())\n\n    const onDeleteTask = (ID) => dispatch(deleteTask(ID))\n    const onDeleteDashboard = (ID) => dispatch(deleteDashboard(ID))\n    const onDeletePosition = (position, ID) => dispatch(deletePosition(position))\n    const onDeleteStation = async (ID) => await dispatch(deleteStation(ID))\n    const onDeleteTaskQItem = async (ID) => await dispatch(deleteTaskQueueItem(ID))\n\n    const onPutDevice = async (device, ID) => await dispatch(putDevices(device, ID))\n    const onPutPosition = (position, ID) => dispatch(putPosition(position, ID))\n    const onPutProcess = (process) => dispatch(putProcesses(process))\n    const onPutStation = async (station, ID) => await dispatch(putStation(station, ID))\n    const dispatchPutTask = async (task, ID) => await dispatch(putTask(task, ID))\n\n    const onPostDashoard = (dashboard) => dispatch(postDashboard(dashboard))\n    const dispatchStopAPICalls = (bool) => dispatch(localActions.stopAPICalls(bool))\n\n\n    // Selectors\n    const schedulerReducer = useSelector(state => state.schedulerReducer)\n    const devices = Object.values(useSelector(state => { return state.devicesReducer })?.devices || {})\n    const localReducer = useSelector(state => state.localReducer)\n    const MiRMapEnabled = localReducer?.localSettings?.MiRMapEnabled\n    const apiPage = useSelector(state => state.apiReducer.page)\n    const stopAPICalls = useSelector(state => state.localReducer.stopAPICalls)\n    const mapViewEnabled = useSelector(state => state.localReducer.localSettings.mapViewEnabled)\n\n    // States\n    const [currentPage, setCurrentPage] = useState('')\n    const [apiIpAddress, setApiIpAddress] = useState('')\n    const [apiError, setApiError] = useState(false)\n    const [pageDataInterval, setPageDataInterval] = useState(null)\n    const [criticalDataInterval, setCriticalDataInterval] = useState(null)\n    const [mapDataInterval, setMapDataInterval] = useState(null)\n\n    const params = useParams()\n\n    useEffect(() => {\n        loadInitialData() // initial call to load data when app opens\n\n        // this interval is always on\n        // loads essential info used on every page such as status and taskQueue\n        setCriticalDataInterval(setInterval(() => loadCriticalData(), 500));\n        setMapDataInterval(setInterval(() => loadMapData(), 1000));\n\n\n        return () => {\n            // clear intervals\n            clearInterval(pageDataInterval);\n            clearInterval(criticalDataInterval);\n            //clearInterval(mapDataInterval)\n        }\n    }, [])\n\n    useEffect(() => {\n        if (stopAPICalls === true) {\n            clearInterval(criticalDataInterval);\n            clearInterval(pageDataInterval);\n            clearInterval(mapDataInterval);\n            //dispatchStopAPICalls(false)\n        }\n    }, [stopAPICalls])\n\n\n    useEffect(() => {\n\n\n        // once MiR map is enabled, it's always enabled, so only need to do check if it isn't enabled\n        if (!MiRMapEnabled) {\n            let containsMirCart = false\n            // check each device\n            // in order for MiR mode to be enabled, there must be at least one device of MiR type\n            Object.values(devices).forEach((currDevice, index) => {\n                const device_model = currDevice?.device_model ? currDevice?.device_model : \"\"\n                // const x = currDevice?.position?.x\n                // const y = currDevice?.position?.y\n                if (\n                    device_model === \"MiR100\"\n                ) containsMirCart = true\n            })\n\n            // only update if MiRMapEnabled isn't currently set or MiRMapEnabled needs to be updated because it isn't equal to containsMirCart\n            if ((MiRMapEnabled === undefined) || (MiRMapEnabled !== containsMirCart)) onPostLocalSettings({\n                ...localReducer.localSettings,\n                MiRMapEnabled: containsMirCart,\n            })\n        }\n\n    }, [devices, MiRMapEnabled])\n\n    useEffect(() => {\n\n        if (stopAPICalls !== true) {\n            updateCurrentPage();\n        }\n\n    })\n\n    const updateCurrentPage = () => {\n\n        // let pathname = this.props.location.pathname;\n\n        const currentPageRouter = params\n        // const currentPageRouter = getPageNameFromPath(pathname);\n        // this.logger.debug(\"api_container currentPage\", currentPage);\n        // this.logger.debug(\"api_container currentPageRouter\", currentPageRouter);\n\n\n        // If the current page state and actual current page are different, then the page has changed so the data interval should change\n        if (!isEquivalent(currentPageRouter, currentPage)) {\n            // page changed\n\n            // update state\n            setCurrentPage(currentPageRouter)\n\n            // update data interval to get data for new currentPage\n            setDataInterval(currentPageRouter);\n        }\n\n\n    }\n\n\n    /**\n     * Handles data interval based on page\n     */\n\n    const setDataInterval = (pageParams) => {\n        let pageName = ''\n        const {\n            data1,\n            data2\n        } = pageParams\n\n        if (Object.keys(pageParams)[0] === 'sidebar') {\n            pageName = pageParams.sidebar\n\n\n        } else if (Object.keys(pageParams)[0] === 'stationID') {\n\n            // Not the best way to do this, but if the params have a locationId and it's undefined\n            // then it's url is just locations and not a widget page\n            // This happens in app.js file in the route path.\n            if (pageParams.widgetPage === undefined) {\n                pageName = 'locations'\n\n            } else {\n                pageName = pageParams.widgetPage\n\n            }\n\n        }\n\n        // clear current interval\n        clearInterval(pageDataInterval);\n\n        // set new interval for specific page\n        switch (pageName) {\n\n            case 'objects':\n                setPageDataInterval(setInterval(() => loadObjectsData(), 10000))\n                break;\n\n            case 'scheduler':\n                setPageDataInterval(setInterval(() => loadSchedulerData(), 1000000))\n                break;\n\n            case 'dashboards':\n                setPageDataInterval(setInterval(() => loadDashboardsData(), 3000))\n                break;\n\n            case 'tasks':\n                setPageDataInterval(setInterval(() => loadTasksData(), 4000))\n                break;\n\n            case 'settings':\n                setPageDataInterval(setInterval(() => loadSettingsData(), 10000))\n                break;\n\n            case 'lots':\n                setPageDataInterval(setInterval(() => loadCardsData(), 1000))\n                break\n\n            case 'processes':\n                if (data2 === \"lots\") {\n                    loadCardsData(data1) // initial call\n                    setPageDataInterval(setInterval(() => loadCardsData(data1), 1000))\n                }\n                else if (data1 === \"timeline\") {\n                    loadCardsData() // initial call\n                    setPageDataInterval(setInterval(() => loadCardsData(), 1000))\n                }\n                else if (data1 === \"summary\") {\n                    loadCardsData() // initial call\n                    setPageDataInterval(setInterval(() => loadCardsData(), 10000))\n                }\n                else {\n                    setPageDataInterval(setInterval(() => loadTasksData(), 5000))\n                }\n\n                break\n\n            case 'more':\n                setPageDataInterval(setInterval(() => loadMoreData(), 10000))\n                // pageDataInterval = ;\n                break;\n\n            default:\n                break;\n        }\n\n    }\n\n    const loadInitialData = async () => {\n        // Local Settings must stay on top of initial data so that the correct API address is seleceted\n        const localSettings = await onGetLocalSettings()\n        const settings = await onGetSettings();\n        await postSettings(settings)\n        // const refreshToken = await onGetRefreshToken()\n        const devices = await onGetDevices()\n        const maps = await onGetMaps()\n\n        if (maps.length === undefined) {\n            props.onLoad()\n            setApiError(true)\n            return\n        }\n\n        const stations = await onGetStations()\n        const positions = await onGetPositions()\n        const dashboards = await onGetDashboards()\n        const objects = await onGetObjects()\n        const sounds = await onGetSounds()\n        const tasks = await onGetTasks()\n        const taskQueue = await onGetTaskQueue()\n        const processes = await onGetProcesses()\n        const cards = onGetCards()\n\n        const status = await onGetStatus()\n        const getSchedules = await onGetSchedules()\n\n        const loggers = await onGetLoggers()\n\n        // Data Update Functions\n        // const dataUpdate = await onUpdateTaskData(tasks)\n\n        // Cleaner Functions\n        if (!!mapViewEnabled) {\n\n            // const funtion = await handleDeviceWithoutADashboard(devices, dashboards)\n            // const funtion1 = await handleTasksWithBrokenPositions(tasks, stations, positions)\n            // const funtion2 = await handlePositionsWithBrokenParents(stations, positions)\n            // const funtion3 = await handleDevicesWithBrokenStations(devices, stations)\n            // const funtion4 = await handleStationsWithBrokenDevices(devices, stations)\n            // const funtion5 = await handleDashboardsWithBrokenStations(dashboards, stations)\n            // const funtion6 = await handleStationsWithBrokenChildren(stations, positions)\n            // const funtion7 = await handleTasksWithBrokenProcess(processes, tasks)\n            // const funtion8 = await handleProcessesWithBrokenRoutes(processes, tasks)\n        }\n\n        // Commented out for now. Was causing an issue when sending a cart to a location using simple move. Since its just a one off task, the task is never added to the backend so if the page was refreshed, the task q item would be deleted\n        // const funtion9 = await handleTaskQueueWithBrokenTasks(taskQueue, tasks)\n\n        props.apiLoaded()\n        props.onLoad()\n\n    }\n\n    //  DATA LOADERS SECTION BEGIN\n    //  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n    /*\n        Loads critical data used on every page\n\n        required data:\n        status, taskQueue, devices\n    */\n\n    const loadCriticalData = async () => {\n        const dataStream = dispatchGetDataStream()\n    }\n\n\n\n    /*\n        Loads data pertinent to Objects page\n\n        required data:\n        objects, poses, models\n    */\n    const loadObjectsData = async () => {\n        const objects = await onGetObjects();\n        // const poses = await this.props.getPoses();\n        // const models = await this.props.getModels();\n    }\n\n    /*\n        Loads data pertinent to Tasks page\n\n        required data:\n        tasks\n    */\n    const loadTasksData = async () => {\n        const tasks = await onGetTasks()\n        const processes = await onGetProcesses()\n        const objects = await onGetObjects()\n    }\n\n    /*\n        Loads data pertinent to Scheduler page\n\n        required data:\n        schedules, tasks\n    */\n    const loadSchedulerData = async () => {\n        const schedules = await onGetSchedules();\n        const tasks = await onGetTasks();\n\n    }\n\n    /*\n        Loads data pertinent to Dashboards page\n\n        required data:\n        dashboards\n    */\n    const loadDashboardsData = async () => {\n        const dashboards = await onGetDashboards();\n        await onGetCards()\n        await onGetTasks()\n        await onGetProcesses()\n\n    }\n\n    /*\n      Loads data pertinent to Objects page\n\n      required data:\n      tasks, skills, objects, locations, dashboards, sounds\n    */\n    const loadMapData = async () => {\n        const stations = await onGetStations();\n        const positions = await onGetPositions();\n    }\n\n    /*\n        Loads data pertinent to Settings page\n\n        required data:\n        settings, loggers\n    */\n    const loadSettingsData = async () => {\n        const settings = await onGetSettings();\n        const localSettings = await onGetLocalSettings()\n        const loggers = await onGetLoggers();\n\n    }\n\n    /*\n        Loads data pertinent to process card view\n\n        required data:\n        cards\n    */\n    const loadCardsData = async (processId) => {\n        if (processId) {\n            await onGetProcessCards(processId)\n\n        } else {\n            onGetCards()\n        }\n\n        onGetProcesses()\n        onGetTasks()\n    }\n\n    /*\n        Loads data pertinent to More page\n    */\n    const loadMoreData = async () => {\n\n    }\n\n    //  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    //  DATA LOADERS SECTION END\n\n\n    //  DATA CONVERSION\n    //  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n    const onUpdateTaskData = async (tasks) => {\n        Object.values(tasks).map(async (task) => {\n            console.log('QQQQ Task', task)\n        })\n\n    }\n\n\n    //  API DATA CLEAN UP (Ideally these functions should not exist... but it's not an ideal world...)\n    //  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n    /**\n     * Not the best place but it should still work\n     * This will either make a dashboard for the device or replace a lost dashboard\n     */\n    const handleDeviceWithoutADashboard = async (devices, dashboards) => {\n        Object.values(devices).map(async (device) => {\n            // if the device does not have a dashboard, add one\n            if (!device.dashboards || device.dashboards.length === 0) {\n\n                console.log('QQQQ Device does not have a dashboard', deepCopy(device))\n                alert('Device does not have a dashboard')\n\n                const newDeviceDashboard = {\n                    name: `${device.device_name} Dashboard`,\n                    buttons: [],\n                    device: device._id,\n                }\n\n                const newDashboard = onPostDashoard(newDeviceDashboard)\n\n                return newDashboard.then(async (dashPromise) => {\n                    console.log(dashPromise)\n                    device.dashboards = [dashPromise._id.$oid]\n                    await onPutDevice(device, device._id)\n                })\n\n\n            }\n\n            device.dashboards.map((dashboard) => {\n                if (!dashboards[dashboard]) {\n                    console.log('QQQQ Dashboard has dissapeared for some reason', dashboard)\n                    alert('Devices dashboard has been deleted, recreating')\n\n                    const newDeviceDashboard = {\n                        name: `${device.device_name} Dashboard`,\n                        buttons: [],\n                        device: device._id,\n                    }\n\n                    const newDashboard = onPostDashoard(newDeviceDashboard)\n\n                    return newDashboard.then(async (dashPromise) => {\n                        if (dashPromise._id !== undefined){\n                        // Add new dashboard\n                        device.dashboards.push(dashPromise._id.$oid)\n\n                        // Delete old dashboard\n                        const index = device.dashboards.indexOf(dashboard)\n                        device.dashboards.splice(index, 1)\n                        }\n\n                        await onPutDevice(device, device._id)\n                    })\n\n\n                }\n            })\n        })\n    }\n\n    /**\n     * The dashboard is tied to a device that does not exist anymore, so delete the dashboard\n     * @param {*} devices\n     * @param {*} dashboards\n     */\n    const handleDashboardsWithBrokenDevice = (devices, dashboards) => {\n\n    }\n\n\n    /**\n     * This deletes tasks that have broken positions/stations\n     * A broken position/station can be:\n     * a deleted position/station\n     * a position thats parent station has been deleted\n     *  */\n    const handleTasksWithBrokenPositions = async (tasks, stations, positions) => {\n\n        if (tasks === undefined || stations === undefined || positions === undefined) return\n\n        Object.values(tasks).map(async (task) => {\n            // console.log('QQQQ Task', positions[task.load.position], positions[task.unload.position])\n\n            // Deletes the task if the load/unload position/station has been deleted from the positon list\n            if ((!positions[task.load.position] && !stations[task.load.position]) || (!positions[task.unload.position]) && !stations[task.unload.position]) {\n                console.log('QQQQ Position doesnt exist in positions, DELETE TASK', task._id)\n                alert('Position doesnt exist in positions, DELETE TASK')\n                await onDeleteTask(task._id)\n                return\n            }\n\n            // Deletes the task if the load/unload position has a change_key 'deleted'. This means the back end has not deleted the position yet\n            if ((!!positions[task.load.position] && !!positions[task.load.position].change_key && positions[task.load.position].change_key === 'deleted') ||\n                (!!positions[task.unload.position] && !!positions[task.unload.position].change_key && positions[task.unload.position].change_key === 'deleted')) {\n                console.log('QQQQ Position is deleted, waiting on back end, DELETE TASK')\n                alert('Position is deleted, waiting on back end, DELETE TASK')\n                await onDeleteTask(task._id)\n                return\n            }\n\n            // Commented out for the AMR demo\n            // Deletes the task if the load/unload position has a parent, but that parent does not exist in stations (parent has been deleted)\n            // Also should delete the position as well\n            // if ((!!positions[task.load.position].parent && !Object.keys(stations).includes(positions[task.load.position].parent)) ||\n            //     (!!positions[task.unload.position].parent && !Object.keys(stations).includes(positions[task.load.position].parent))) {\n            //     console.log('QQQQ Position parent has been deleted, DELETE TASK AND POSITION')\n            //     await onDeleteTask(task._id)\n            //     return\n            // }\n        })\n    }\n\n    /**\n     * This deletes positions that have parents that are broken\n     * A broken parent is a parent that has been deleted\n     * @param {*} locations\n     */\n    const handlePositionsWithBrokenParents = async (stations, positions) => {\n\n        if (stations === undefined || positions === undefined) return\n\n        Object.values(positions).map(async (position) => {\n\n            if (!!position.parent && !Object.keys(stations).includes(position.parent && position.change_key !== 'deleted')) {\n                console.log('QQQQ This position should be deleted', position)\n                alert('This position should be deleted')\n                onDeletePosition(position)\n            }\n\n        })\n    }\n\n    /**\n     * 1) This finds positions that have become disassociated with their parent stations and reassociates them\n     * 2) Also finds stations that have children positions that have been deleted. Deletes those positions from the stations\n     * This happens because it happens... I have no idea why this happens....\n     * @param {*} locations\n     */\n    const handleStationsWithBrokenChildren = (stations, positions) => {\n\n        if (stations === undefined || positions === undefined) return\n\n        Object.values(stations).map((station) => {\n\n            // if(station.children === undefined) onDeleteStation(station._id)\n\n            station.children.map(async (position, ind) => {\n                if (!!positions[position] && positions[position].parent === null) {\n\n                    const brokenPosition = positions[position]\n                    console.log('QQQQ Stations with broken position', brokenPosition)\n                    alert('Stations with broken position')\n\n                    brokenPosition.parent = station._id\n\n                    onPutPosition(brokenPosition, brokenPosition._id)\n\n                }\n\n                else if (!positions[position]) {\n                    let brokenStation = deepCopy(station)\n                    console.log('QQQQ Stations with deleted position', deepCopy(brokenStation), deepCopy(positions))\n                    alert('Stations with deleted position')\n\n                    brokenStation.children.splice(ind, 1)\n                    await onPutStation(brokenStation, brokenStation._id)\n                }\n            })\n        })\n\n    }\n\n    /**\n     * This deletes device station if the station is broken\n     * A broken station would happen when a station has been deleted\n     * @param {*} devices\n     * @param {*} locations\n     */\n    const handleDevicesWithBrokenStations = async (devices, stations) => {\n\n        if (devices === undefined || stations === undefined) return\n\n        Object.values(devices).map(async (device) => {\n            if (!!device.station_id && !Object.keys(stations).includes(device.station_id)) {\n                console.log('QQQQ Device has a station ID that needs to be deleted', device)\n                alert('Device has a station ID that needs to be deleted')\n                delete device.station_id\n                onPutDevice(device, device._id)\n            }\n        })\n\n    }\n\n    /**\n     * This adds station to device if the station has a device ID and the device does not have a station ID\n     * Why this happens is unkown atm, but this fixes when a device comes back without a station ID but should have one\n     *\n     * It also deletes stations that should be associated with a device, but the device either does not exist or ID has changed\n     *\n     * @param {*} devices\n     * @param {*} locations\n     */\n    const handleStationsWithBrokenDevices = (devices, stations) => {\n\n        if (devices === undefined || stations === undefined) return\n\n        Object.values(stations).map((station) => {\n\n            // Delete station\n            if (!!station.device_id && devices[station.device_id] === undefined) {\n                console.log('QQQQ Station has a device that is deleted')\n                alert('Station has a device that is deleted')\n\n                onDeleteStation(station._id)\n            }\n\n            // Add station to device\n            else if (!!station.device_id && !devices[station.device_id].station_id) {\n                console.log('QQQQ Station has a broken device')\n                alert('Station has a broken device')\n\n                const device = devices[station.device_id]\n                device.station_id = station._id\n                onPutDevice(device, device._id)\n\n            }\n        })\n\n    }\n\n    /**\n     * This deletes dashboards that belong to stations that don't exist\n     * @param {*} dashboards\n     * @param {*} locations\n     */\n    const handleDashboardsWithBrokenStations = (dashboards, stations) => {\n\n        if (dashboards === undefined || stations === undefined) return\n\n        Object.values(dashboards).map((dashboard) => {\n            if (!!dashboard.location && !dashboard.device && !stations[dashboard.location]) {\n                console.log('QQQQ dashboard belongs to a station that does not exist', dashboard)\n                alert('Dashboard belongs to a station that does not exist')\n                onDeleteDashboard(dashboard._id.$oid)\n            }\n        })\n\n\n    }\n\n    /**\n     * This handles broken Processes\n     * 1) A broken process would happen if a route/task that has been deleted but the process has not been updated\n     * 2) Also, a route could have been added to a process, but the process was never added to the route\n     * @param {*} processes\n     * @param {*} tasks\n     */\n    const handleProcessesWithBrokenRoutes = async (processes, tasks) => {\n        if (processes === undefined || tasks === undefined) return\n\n        Object.values(processes).map((process) => {\n\n            // Object.keys(process.routes).map(async (station) => {\n\n            process.routes.map(async (route) => {\n\n                // If the route does not exist anymore in tasks then delete the route from the process\n                if (!tasks[route]) {\n                    // Removes the task from the array of routes\n                    let processRoutes = deepCopy(process.routes)\n                    const index = processRoutes.indexOf(route)\n                    processRoutes.splice(index, 1)\n                    const updatedProcess = {\n                        ...process,\n                        routes: [...processRoutes]\n                    }\n                    console.log('QQQQ route does not exist in anymore, delete from process', deepCopy(updatedProcess))\n                    alert('Route does not exist in anymore, delete from process')\n\n                    await onPutProcess(updatedProcess)\n                }\n\n                // Else the task does exist, see if the task contains the process\n                // else {\n                //     if (!tasks[route].processes.includes(process._id)) {\n                //         console.log('QQQQ Process containes a route, but the route does not contain the process, adding process to route', tasks[route])\n                //         alert('Process containes a route, but the route does not contain the process, adding process to route')\n                //\n                //         let taskCopy = deepCopy(tasks[route])\n                //         taskCopy.processes.push(process._id)\n                //         dispatchPutTask(taskCopy, taskCopy._id)\n                //\n                //     }\n                // }\n            })\n        })\n\n        // })\n    }\n\n    /**\n     * This handles tasks that belong to broken process\n     * 1) the process has been deleted and the task have not\n     * 2) The task was created but the process was never saved\n     * 3) The task has a new tag\n     * @param {*} processes\n     * @param {*} tasks\n     */\n    const handleTasksWithBrokenProcess = async (processes, tasks) => {\n        if (processes === undefined || tasks === undefined) return\n\n        Object.values(tasks).map(async (task) => {\n\n            if (!!task.new) {\n                console.log('QQQQ Task still has a new tag', deepCopy(task))\n                alert('Task still has a new tag, deleting task')\n                onDeleteTask(task._id)\n            }\n\n            if (task.processes.length > 0) {\n                task.processes.map((process) => {\n\n                    // If processes does no contain the process, then the process was deleted so remove it from the task\n                    if (!processes[process]) {\n                        const index = task.processes.indexOf(process)\n                        task.processes.splice(index, 1)\n\n                        console.log('QQQQ Process does not exist anymore, removing from task', task)\n                        alert('Process does not exist anymore, removing from task')\n                        dispatchPutTask(task, task._id)\n\n                    }\n\n                    else if (!processes[process].routes.includes(task._id)) {\n                        console.log('QQQQ Task is associated with a process that is not associated with the task anymore', task, process)\n                        alert('Task is associated with a process that is not associated with the task anymore, adding back to process')\n\n                        const index = task.processes.indexOf(process)\n                        task.processes.splice(index, 1)\n                        dispatchPutTask(task, task._id)\n\n                    }\n\n                })\n            }\n\n        })\n\n    }\n\n    /**\n     * This handles task queue items that belong to a broken task\n     * A task would be broken because it has been deleted\n     * @param {*} taskQueue\n     * @param {*} tasks\n     */\n    const handleTaskQueueWithBrokenTasks = async (taskQueue, tasks) => {\n        if (taskQueue === undefined) return\n\n        Object.values(taskQueue).map(async (Q, i) => {\n            if (tasks[Q.task_id] === undefined) {\n                console.log('QQQQ TaskQ associated task has been deleted')\n                alert('TaskQ associated task has been deleted')\n                await onDeleteTaskQItem(Q._id)\n            }\n        })\n    }\n\n    //  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    //  API DATA CLEAN UP\n\n\n    //  API LOGIN\n    //  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n    return (\n        <SplashScreen\n            isApiLoaded={props.isApiLoaded}\n            apiError={apiError}\n        />\n    )\n}\n\nexport default ApiContainer;\n","import { normalize, schema } from 'normalizr';\n\nimport {\n    GET_DEVICES_SUCCESS,\n    GET_DEVICES_FAILURE\n} from '../types/devices_types'\n\nimport {\n    GET_STATUS_SUCCESS,\n    GET_STATUS_FAILURE\n} from '../types/status_types';\n\nimport {\n    GET_TASK_QUEUE_SUCCESS,\n    GET_TASK_QUEUE_FAILURE,\n    INCREMENT_GET_DATA_FAILURE_COUNT\n} from '../types/task_queue_types';\n\nimport * as api from '../../api/data_stream_api'\nimport { devicesSchema } from '../../normalizr/schema';\nimport { statusesSchema } from '../../normalizr/status_schema'\nimport { taskQueueSchema } from '../../normalizr/task_queue_schema'\n\n\nexport const getDataStream = () => {\n    return async dispatch => {\n\n        function handleDevicesSuccess(response) {\n            dispatch({ type: GET_DEVICES_SUCCESS, payload: response });\n            return response;\n        }\n        function handleDevicesError(error) {\n            dispatch({ type: GET_DEVICES_FAILURE, payload: error });\n            return error;\n        }\n\n        function handleStatusSuccess(response) {\n            dispatch({ type: GET_STATUS_SUCCESS, payload: response });\n            return response;\n        }\n        function handleStatusError(error) {\n            dispatch({ type: GET_STATUS_FAILURE, payload: error });\n            return error;\n        }\n\n        function handleTaskQueueSuccess(response) {\n            dispatch({ type: GET_TASK_QUEUE_SUCCESS, payload: response });\n            return response;\n        }\n        function handleTaskQueueError(error) {\n            dispatch({ type: GET_TASK_QUEUE_FAILURE, payload: error });\n            dispatch({ type: INCREMENT_GET_DATA_FAILURE_COUNT, payload: null })\n            return error;\n        }\n\n        try {\n\n            const dataStream = await api.getDataStream();\n\n            // Devices\n            try {\n                let devices = dataStream.devices\n                devices.forEach((device, ind) => {\n                    if (!(device.position === undefined)) {\n                        devices[ind].position.pos_x = device.position.x\n                        devices[ind].position.pos_y = device.position.y\n                    }\n                })\n\n                const normalizedDevices = normalize(devices, devicesSchema);\n                handleDevicesSuccess(normalizedDevices.entities.devices)\n            } catch (error) {\n                handleDevicesError(error)\n            }\n\n\n            // Status\n            try {\n                let status = dataStream.status\n                handleStatusSuccess(status);\n            } catch (error) {\n                handleStatusError(error)\n            }\n\n\n            // Task Queue\n            try {\n                const taskQueue = dataStream.task_queue\n                const normalizedTaskQueue = normalize(taskQueue, taskQueueSchema);\n                return handleTaskQueueSuccess(normalizedTaskQueue.entities.taskQueue);\n            } catch (error) {\n                return handleTaskQueueError(error)\n            }\n\n\n\n        } catch (error) {\n        }\n    }\n}\n","import styled from 'styled-components';\n\nimport { hexToRGBA } from '../../methods/utils/color_utils'\n\nexport const NotificationsContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n\n    position: absolute;\n    top: 4rem;\n    right: 0;\n\n    padding: 0.5rem;\n    padding-top: 0rem;\n\n    align-items: center;\n\n    width: ${props => props.overlaping ?  '13.75rem' : '20rem'} ;\n    height: auto;\n    max-height: ${props => props.windowHeight};\n    /* max-height: 10rem; */\n\n    box-shadow: -6px 6px 6px 0px rgba(0,0,0,0.3);\n\n    background: ${props => hexToRGBA(props.theme.bg.septenary, 0.97)};\n\n    border-radius: 0 0 0 1rem;\n\n    z-index: 1;\n\n    overflow-y: scroll;\n\n    ::-webkit-scrollbar{\n        display: none;\n    }\n\n`\n\nexport const ClearText = styled.p`\n    color: ${props => props.theme.bg.quaternary};\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz3};\n    margin-bottom: 0rem;\n    user-select: none; /* Standard */\n    &:hover {\n        cursor: pointer;\n    }\n`\n\nexport const NotificationTypeTitle = styled.p`\n    color: ${props => props.theme.bg.senary};\n    font-weight: 600;\n    font-size: 1.3rem;\n    font-family: ${props => props.theme.font.primary};\n    user-select: none; /* Standard */\n\n`\n\nexport const NotificationTypeContainer = styled.div`\n    width: 100%;\n    padding-left: 1rem;\n    position: relative;\n`\n\nexport const NotificationMinimizeIcon = styled.i`\n    position: absolute;\n    right: 1rem;\n    top: 0rem;\n    color: ${props => props.theme.bg.octonary};\n\n    &:hover {\n        cursor: pointer;\n    }\n`\n\nexport const NotificationDisplayContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n`\n\nexport const NewNotificationContainer = styled.div`\n    display: flex;\n    position: absolute;\n    top: 5rem;\n    right: .5rem;\n`\n\nexport const ToggleContainer =styled.div`\n    display: flex;\n    width: 100%;\n    justify-content: center;\n\n    margin: .5rem .5rem;\n`\n\nexport const ToggleButton = styled.div`\n    width: 50%;\n    display: flex;\n    justify-content: center;\n    color: ${props => props.theme.fg.primary};\n    font-size: 1rem;\n\n    user-select: none; /* Standard */\n    background-color: ${props => props.selected == props.type ? props.theme.bg.senary : props.theme.bg.septenary};\n    color: ${props => props.selected == props.type ? props.theme.bg.septenary : props.theme.bg.quaternary};\n\n    height: 1.8rem;\n    line-height: 1.9rem;\n\n    &:hover{\n        cursor: pointer;\n    }\n`\n\nexport const Title = styled.h1`\n    margin-top: 1rem;\n    font-size: ${props => props.theme.fontSize.sz3};\n    font-family: ${props => props.theme.font.primary};\n`\n","import styled, { css } from 'styled-components'\nimport { getDebugStyle } from \"../../../methods/utils/style_utils\";\nimport * as commonCss from \"../../../common_css/common_css\";\n\n\n// shared styles\n// ******************************\nexport const textStyle = css`\n\tfont-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz3};\n    color: ${props => props.warning ? props.theme.okay : props.theme.fg.primary};\n`\n// ******************************\n\nexport const Container = styled.div`\n    width: 100%;\n\n    padding-left: .5rem;\n    padding-right: .5rem;\n    padding-top: .5rem;\n    padding-bottom: .5rem;\n\n    position: relative;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n\n    border-radius: 0.5rem;\n    border: thin solid ${props => props.theme.bg.primary};\n    background-color: transparent;\n    /* // optional overwrite styles passed as css in props */\n    ${props => props.css};\n\n    /* // uncomment to show debug styles */\n    /* // ${getDebugStyle()}; */\n\n    ${props => props.selectable && (props.isSelected ? selectedCss : notSelectedCss)};\n    \n    \n\n`\n\nconst selectedCss = css`\n\n`\n\nconst notSelectedCss = css`\n  filter: contrast(70%);\n    &:hover {\n        filter: contrast(100%);\n    }\n`\n\n\n\n\nexport const Title = styled.span`\n    // align-self: flex-start;\n    // ${textStyle};\n\t\toverflow-wrap: break-word;\n\n    display: inline-flex;\n  \talign-items: center;\n\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz4};\n    font-weight: 500;\n    color: ${props => props.theme.bg.primary};\n\n    /* // optional overwrite styles passed as css in props */\n    ${props => props.css};\n\n    /* // uncomment to show debug styles */\n    // ${getDebugStyle()};\n`\n\nexport const Status = styled.span`\n\n    display: inline-flex;\n  \talign-items: center;\n\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz4};\n    font-weight: 500;\n\t\tcolor: ${props => props.theme.bg.quaternary};\n`\n\nexport const LeftContentContainer = styled.div`\n\t/* // overwrite styles passed as css in props */\n    ${props => props.css};\n\t\toverflow-wrap: break-word;\n`\n\nexport const ContentContainer = styled.div`\n\tflex: 1;\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\n\n\t// optional overwrite styles passed as css in props\n    ${props => props.css};\n\n    // uncomment to show debug styles\n    // ${getDebugStyle()};\n\n`\n\nexport const RightContentContainer = styled.div`\n\t// overwrite styles passed as css in props\n    ${props => props.css};\n`\n\n\nexport const Description = styled.span`\n    align-self: flex-start;\n\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz4};\n    color: ${props => props.theme.bg.senary};\n    cursor: pointer;\n    white-space: pre-line;\n\n    // optional overwrite styles passed as css in props\n    ${props => props.css};\n\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport * as style from './basic_list_item.style'\n\nfunction BasicListItem(props) {\n\n\t// extract props\n\tconst {\n\t\tLeftContentContainer,\n\t\tleftContentContainerCss,\n\t\tleftContentContainerProps,\n\t\tleftContent,\n\t\tRightContentContainer,\n\t\trightContentContainerCss,\n\t\trightContentContainerProps,\n\t\trightContent,\n\t\tContentContainer,\n\t\tcontentContainerCss,\n\t\tcontentContainerProps,\n\t\tContainer,\n\t\tcontainerCss,\n\t\t containerProps,\n\t\ttitle,\n\t\tTitle,\n\t\ttitleCss,\n\t\ttitleProps,\n\t\tonClick,\n\t\tonMouseEnter,\n\t\tonMouseLeave,\n\t\tStatus,\n\t\tstatus,\n\t\tisSelected,\n\t\tselectable\n\t} = props\n\n\treturn (\n\t\t<Container\n\t\t\tisSelected={isSelected}\n\t\t\tselectable={selectable}\n\t\t\t{...containerProps}\n            css={containerCss}\n\t\t>\n\t\t\t<LeftContentContainer css={leftContentContainerCss} {...leftContentContainerProps}>\n\t\t\t\t{leftContent && leftContent}\n\t\t\t</LeftContentContainer>\n\n\t\t\t<ContentContainer\n\t\t\t\t{...contentContainerProps}\n\t\t\t\tcss={contentContainerCss}\n\t\t\t\tonClick={onClick}\n\t\t\t\tonMouseEnter = {onMouseEnter}\n\t\t\t\tonMouseLeave = {onMouseLeave}\n\t\t\t>\n\t\t\t\t<Title css={titleCss}{...titleProps}>\n\t\t\t\t\t{title}\n\t\t\t\t</Title>\n\n                <Status>\n                    {status}\n                </Status>\n\t\t\t</ContentContainer>\n\n\t\t\t<RightContentContainer css={rightContentContainerCss} {...rightContentContainerProps}>\n\t\t\t\t{rightContent && rightContent}\n\t\t\t</RightContentContainer>\n\t\t</Container>\n\t)\n}\n\nBasicListItem.propTypes = {\n\tContainer: PropTypes.elementType,\n\tLeftContentContainer: PropTypes.elementType,\n\tRightContentContainer: PropTypes.elementType,\n\tContentContainer: PropTypes.elementType,\n    Title: PropTypes.elementType,\n    Status: PropTypes.elementType,\n\ttitle: PropTypes.string,\n\tcontainerCss: PropTypes.object,\n\tleftContentContainerCss: PropTypes.object,\n\trightContentContainerCss: PropTypes.object,\n\ttitleCss: PropTypes.object,\n\tcontentContainerCss: PropTypes.object,\n\tisSelected: PropTypes.bool,\n\tselectable: PropTypes.bool,\n}\n\nBasicListItem.defaultProps = {\n\tContainer: style.Container,\n\tLeftContentContainer: style.LeftContentContainer,\n\tRightContentContainer: style.RightContentContainer,\n\tContentContainer: style.ContentContainer,\n    Title: style.Title,\n    Status: style.Status,\n\ttitle: \"\",\n\tcontainerCss: {},\n\ttitleCss: {},\n\tleftContentContainerCss: {},\n\trightContentContainerCss: {},\n\tcontentContainerCss: {},\n\tisSelected: false,\n\tselectable: false,\n}\n\nexport default BasicListItem\n","import styled, {css} from \"styled-components\";\n\nimport RemoveIcon from '@material-ui/icons/Remove';\n\nexport const containerCss = css`\n\tbackground-color: #FFFFFF;\n\tborder-color: transparent;\n\tborder-width: 2px;\n\tcolor: transparent;\n    height: 4.5rem;\n    width: 100%;\n    padding: .25rem;\n\n\t\t&:hover{\n\t\t\t\tborder-color: #798fd9;\n\n\t\t}\n\n`\n\nexport const titleCss = css`\n    color: #000000;\n    margin-right: .5rem;\n\t\twidth:100%;\n\t\tword-break: break-word;\n\n\n`\n\nexport const contentContainerCss = css`\n    flex-direction: row;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    /* white-space: nowrap; */\n\n    /* justify-content: flex-start; */\n`\n\nexport const rightContentContainerCss = css`\n\twidth: auto;\n\tmargin-left: .5rem;\n\tmargin-right: .25rem;\n\tdisplay: flex;\n\talign-items: center;\n`\n\n\nexport const StyledRemoveIcon = styled(RemoveIcon)`\n\tpadding: 0;\n\tmargin: 0;\n`\n\nexport const Spacer = styled.div`\n\theight: 0.4rem;\n\twidth: 100%;\n`\n\nexport const ItemDiv = styled.div`\n    &:hover{\n        cursor: pointer;\n    }\n`\n","import styled, {css} from 'styled-components'\nimport {hexToRGBA, RGB_Linear_Shade} from \"../../../methods/utils/color_utils\";\n\nconst activeContainerStyle = css`\n\tcolor:  ${props => RGB_Linear_Shade(-0.1, hexToRGBA(props.color))};\n`\n\nconst hoverContainerStyle = css`\n\tcolor:  ${props => RGB_Linear_Shade(0.5, hexToRGBA(props.color))};\n`\n\nconst focusContainerStyle = css`\n\toutline: none;\n`\n\nconst disabledContainerStyle = css`\n\tpointer-events: none;\n`\n\n\n\nexport const Container = styled.button`\n\twidth: ${props => props.width};\n\theight: ${props => props.height};\n\tcolor: ${props => props.color};\n\t\n\t// flex layout\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\t\n\tborder: none;\n\ttransition: all 0.2s ease 0s;\n\tcursor: pointer;\n\toutline: none;\n\tbackground-color: transparent;\n\tmargin: 0;\n\tpadding: 0;\n\t\n\t&:focus {\n\t\t${focusContainerStyle};\n\t}\n\t\n\t&:hover {\n\t\t${props => props.hoverable && hoverContainerStyle};\n\t}\n\t// also allow enabling hover style via props\n\t${props=> props.isHovering && hoverContainerStyle};\n\t\n\t&:active {\n\t\t${props => props.clickable && activeContainerStyle};\n\t}\n\t// also allow enabling active style via props\n\t${props=> props.isActive && activeContainerStyle};\n\t\n\t// disabled style\n\t${props => props.disabled && disabledContainerStyle};\n\t\n`\n","import React, {useEffect, useRef, useState} from 'react'\nimport PropTypes from 'prop-types'\n\n// Import Styles\nimport * as style from './icon_button.style'\nimport useOnClickOutside from \"../../../hooks/useOnClickOutside\";\n\nconst IconButton = (props => {\n\n    const {\n        color,\n        children,\n        onClick,\n        disabled,\n        width,\n        height,\n        clickable,\n        hoverable,\n        containerStyle,\n        Component,\n        backgroundColor,\n        isActive,\n        isHovering,\n        onClickOutside\n    } = props\n\n    const ref = useRef() // ref for useOnClickOutside\n    useOnClickOutside(ref, onClickOutside) // calls onClickOutside when click outside of element\n\n    return(\n        <style.Container\n            disabled={disabled}\n            width={width}\n            height={height}\n            onClick={onClick}\n            clickable={clickable}\n            hoverable={hoverable}\n            color={color}\n            backgroundColor={backgroundColor}\n            style={containerStyle}\n            isActive={isActive}\n            isHovering={isHovering}\n            ref={ref}\n        >\n            { children}\n        </style.Container>\n    )\n\n})\n\n\n// Specifies propTypes\nIconButton.propTypes = {\n    clickable: PropTypes.bool,\n    hoverable: PropTypes.bool,\n    isActive: PropTypes.bool,\n    isHovering: PropTypes.bool,\n    onClick: PropTypes.func,\n    onClickOutside: PropTypes.func,\n    disabled: PropTypes.bool\n}\n\n// Specifies the default values for props:\nIconButton.defaultProps = {\n    clickable: true,\n    hoverable: true,\n    onClick: () => {},\n    onClickOutside: () => {},\n    disabled: false,\n    width: \"auto\",\n    height: \"auto\",\n    color: \"#123456\",\n    backgroundColor: \"#FFFFFF\",\n    isActive: false,\n    isHovering: false,\n\n}\n\nexport default IconButton\n","import React, {useContext, useEffect, useState} from 'react';\n\nimport BasicListItem from \"../../basic/basic_list_item/basic_list_item\";\nimport BounceButton from \"../../basic/bounce_button/bounce_button\";\n\nimport * as style from \"./task_queue_item.style\"\nimport { deleteTaskQueueItem } from \"../../../redux/actions/task_queue_actions\";\nimport { getStatus } from \"../../../redux/actions/status_actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport log from \"../../../logger\"\nimport IconButton from \"../../basic/icon_button/icon_button\";\nimport { ThemeContext } from \"styled-components\";\nimport { type } from 'jquery';\n\nimport * as taskActions from '../../../redux/actions/tasks_actions'\n\nconst logger = log.getLogger(\"TaskQueueListItem\")\n\nconst TaskQueueListItem = (props) => {\n\n    // extract props\n    const {\n        id,\n        item,\n        task,\n        onClick,\n        type,\n        ...rest\n    } = props\n\n    // dispatch\n    const dispatch = useDispatch()\n    // theme\n    const themeContext = useContext(ThemeContext);\n\n    const tasks = useSelector(state => { return state.tasksReducer.tasks })\n    const editingTask = useSelector(state => state.tasksReducer.editingTask)\n    const selectedTask = useSelector(state => state.tasksReducer.selectedTask) || {}\n    const {\n        _id: selectedTaskId\n    } = selectedTask\n\n    const {\n        _id: taskId\n    } = task || {}\n\n    const [isSelected, setIsSelected] = useState(false)\n\n    // update isSelected based on if current items task id matches the selectedTask's id\n    useEffect(() => {\n        if(!isSelected && (selectedTaskId === taskId)) {\n            setIsSelected(true)\n        }\n        else if(selectedTask && (selectedTaskId !== taskId)) {\n            setIsSelected(false)\n        }\n    }, [id, selectedTaskId])\n\n    const handleClick = async () => {\n        await dispatch(deleteTaskQueueItem(id))\n        dispatch(getStatus(props.statusApi))\n    }\n\n    /**\n     * This is probably being used to display HILs\n     */\n    const handleTaskItemClicked = () => {\n        if(item.task_id !== 'custom_task'){\n            dispatch({ type: 'TASK_QUEUE_ITEM_CLICKED', payload: id })\n        }\n    }\n\n    const handleMouseEnter = async () => {\n        if (!editingTask && !!tasks[item.task_id]) {\n            await dispatch(taskActions.selectTask(item.task_id))\n        }\n    }\n\n    const handleMouseLeave = async () => {\n        // only deselect if not currently editing\n        if(!editingTask) {\n            await dispatch(taskActions.deselectTask())\n        }\n    }\n\n    return (\n        <style.ItemDiv>\n            <BasicListItem\n                selectable={editingTask}\n                isSelected={isSelected}\n                {...rest}\n                onClick={handleTaskItemClicked}\n                onMouseEnter={handleMouseEnter}\n                onMouseLeave={handleMouseLeave}\n\n                titleCss={style.titleCss}\n                containerCss={style.containerCss}\n                rightContentContainerCss={style.rightContentContainerCss}\n                contentContainerCss={style.contentContainerCss}\n                rightContent={\n                    <>\n                        <IconButton\n                            color={themeContext.fg.primary}\n                        >\n                            {type == 'human' ?\n                                <i className=\"fas fa-user\"></i>\n                                :\n                                <i className=\"fas fa-robot\"></i>\n                            }\n                        </IconButton>\n\n                        <IconButton\n                            color={themeContext.fg.primary}\n                            onClick={handleClick}\n                        >\n                            <style.StyledRemoveIcon\n                                fontSize={\"large\"}\n                            />\n                        </IconButton>\n                    </>\n\n                }\n            />\n            {/*CANT USE MARGIN FOR SPACING ITEMS IN REACT LIST - IT CAUSES A WEIRD FLICKERING ISSUE AND PREVENTS REACT-LIST METHODS FROM WORKING CORRECTLY*/}\n            {/*USER EMPTY DIV INSTEAD FOR NOW*/}\n            <style.Spacer />\n        </style.ItemDiv>\n    )\n}\n\nexport default TaskQueueListItem\n","import styled, {css} from 'styled-components';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  overflow: hidden;\n  width: 100%;\n// `\n\nexport const Header = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\twidth: 100%;\n\t/* box-shadow: 2px 2px 10px black; */\n\tpadding: 1rem;\n\tpadding-top: 1.5rem;\n\t/* background-color: ${props => props.theme.bg.quinary}; */\n    justify-content: space-between;\n`\n\nexport const Title = styled.h1`\n    font-family: ${props => props.theme.font.primary};\n    font-size: 2rem;\n    font-weight: 500;\n    color: ${props => props.theme.schema[props.schema].solid};\n`\n\nexport const ClearIcon = styled(DeleteForeverIcon)`\n\n`\n\nexport const ListContainer = styled.div`\n\twidth: 100%;\n\tflex: 1;\n\n    padding: .1rem;\n    padding-top: 1.5rem;\n\n\toverflow: auto;\n\n\t// optionally style scroll bar\n\t::-webkit-scrollbar {\n\t}\n\t::-webkit-scrollbar-thumb {\n\t}\n`\n","import React, { useEffect, useRef, useState } from 'react';\n\n// external functions\nimport { useDispatch, useSelector } from 'react-redux';\n\n// external components\nimport ReactList from 'react-list';\n\n// import utils\nimport { clone_object } from '../../methods/utils/utils';\n\n// import actions\nimport { deleteTaskQueueAll } from '../../redux/actions/task_queue_actions';\nimport { getStatus } from '../../redux/actions/status_actions';\nimport { getTasks, setSelectedTask } from \"../../redux/actions/tasks_actions\";\n\n\n// components\nimport TaskQueueItem from \"./task_queue_item/task_queue_item\"\n\n// styles\nimport * as style from './task_queue.style'\n\n// logging\nimport log from '../../logger.js';\n\nconst logger = log.getLogger(\"TaskQueueMenu\");\n\nconst TaskQueueMenu = (props) => {\n\n    const tasks = useSelector(state => { return state.tasksReducer.tasks })\n    const selectedTask = useSelector(state => state.tasksReducer.selectedTask)\n\n    const onDeleteTaskQueueAll = () => dispatch(deleteTaskQueueAll()) // Clear Task Q\n    const onGetStatus = (props) => dispatch(getStatus(props))\t// fetch update to status\n\n\n\n    const taskQueue = useSelector(state => {\n\n        const taskQueue = state.taskQueueReducer.taskQueue\n\n        var taskQueueClone = [];\n        if (taskQueue) {\n            Object.values(taskQueue).forEach((queueItem, index) => {\n                let queueItemClone = clone_object(queueItem);\n                // Sees if task is a custom task\n                let task = {}\n                if (queueItem.task_id == 'custom_task') {\n                    task = {\n                        name: 'Simple Move',\n                        mission_status: 'Austin, Please Add Mission Status',\n                    }\n                } else {\n                    task = tasks ? tasks[queueItem.task_id] : {}\n\n                }\n\n                // skip if associated task isn't found\n                if (task) {\n\n                    // If task is a handoff, don't show in task q\n                    if (task.handoff === true) return\n\n                    queueItemClone.task = task;\n                    queueItemClone.name = task.name;\n                    taskQueueClone.push(queueItemClone);\n                } else {\n                    // no matching task found, log warning\n                    // logger.warn(\"Queue item found without corresponding task\", {queueItem})\n                }\n            })\n        }\n\n        return taskQueueClone\n    })\n\n\n    // dispatch\n    const dispatch = useDispatch()\n\n    const itemRenderer = (index, key) => {\n\n\n        // get item from task queue based on index\n        const item = taskQueue[index]\n        const type = item.device_type\n        // extract properties\n        const { name } = item\n        const id = item?._id\n        const status = item.mission_status\n        const task = tasks[item.task_id]\n\n        // return the component with the items properties as props\n        return (\n            <TaskQueueItem\n                title={name}\n                status={status}\n                id={id}\n                key={key}\n                type={type}\n                item={item}\n                task={task}\n            />\n        )\n    }\n\n    const clearTaskQueue = async () => {\n        onDeleteTaskQueueAll()\n        onGetStatus(props.statusApi)\n    }\n\n    return (\n        <style.Container>\n\n            <style.ListContainer>\n\n                <ReactList\n                    itemRenderer={itemRenderer}\n                    length={taskQueue.length}\n                    type='uniform'\n                    style={{ width: '100%' }}\n                />\n            </style.ListContainer>\n        </style.Container>\n    );\n}\n\nexport default TaskQueueMenu;\n","import styled from \"styled-components\";\n\nimport { LightenDarkenColor } from '../../../methods/utils/color_utils'\n\nexport const NotificationContainer = styled.div`\n    width: 19rem;\n    background: ${props => LightenDarkenColor(props.theme.bg.senary, 45)};\n    margin-bottom: 1rem;\n    border-radius: 0.35rem;\n    \n    position: relative;\n    display: flex;\n    flex-direction: column;\n\n    &:hover {\n        cursor: pointer;\n    }\n`;\n\nexport const NotificationHeader = styled.div`\n    height: 1.4rem;\n    width: 100%;\n\n    display: flex;\n    flex-direction: row;\n\n    background: ${props => LightenDarkenColor(props.theme.bg.senary,25)};\n\n    border-radius: 0.35rem 0.35rem 0 0;\n`\n\nexport const NotificationTypeText = styled.h3`\n    color: ${props => props.theme.bg.quaternary};\n    font-weight: 600;\n    font-size: ${props => props.theme.fontSize.sz5};\n    font-family: ${props => props.theme.font.primary};\n    user-select: none; /* Standard */\n\n    line-height: 1.4rem;\n    padding-left: 0.5rem;\n\n    flex-grow: 1;\n`\n\nexport const NotificationDateTime = styled.h4`\n    color: ${props => props.theme.bg.quaternary};\n    font-weight: 400;\n    font-size: ${props => props.theme.fontSize.sz5};\n    font-family: ${props => props.theme.font.primary};\n\n    line-height: 1.4rem;\n    padding-right: 0.5rem;\n`\n\nexport const NotificationBody = styled.div`\n    flex-grow: 1;\n    padding: 0.5rem;\n`\n\nexport const NotificationLabel = styled.h4`\n    color: ${props => props.theme.bg.tertiary};\n    font-weight: 550;\n    font-size: ${props => props.theme.fontSize.sz5};\n    font-family: ${props => props.theme.font.primary};\n    user-select: none; /* Standard */\n`\n\nexport const NotificationMessage = styled.h5`\n    color: ${props => props.theme.bg.quaternary};\n    font-size: ${props => props.theme.fontSize.sz6};\n    font-family: ${props => props.theme.font.primary};\n    user-select: none; /* Standard */\n`\n\nexport const ClearNotification = styled.i`\n    /* position: absolute; */\n    right: 0.5rem;\n    top: 1.5rem;\n    font-size: ${(props) => props.theme.fontSize.sz2};\n\n    display: flex;\n    flex-grow: 1;\n\n    &:hover {\n        cursor: pointer;\n    }\n`;","import React, { useState, useMemo, useRef, useEffect } from \"react\";\n\nimport { useHistory } from 'react-router-dom'\n\nimport * as styled from \"./notification.style\";\nimport { timeFormat } from 'd3-time-format'\nimport { timeDay } from 'd3-time'\n\nconst Notification = (props) => {\n    // const { message, type, ind, id } = props;\n\n    const history = useHistory()\n\n    const dayDelta = timeDay.count(props.notification.dateTime, new Date)\n    let dateTimeFormatter\n    if (dayDelta < 1) {\n        dateTimeFormatter = timeFormat(\"%I:%M %p\")\n    } else if (dayDelta < 7) {\n        dateTimeFormatter = timeFormat(\"%A %I:%M %p\")\n    } else {\n        dateTimeFormatter = timeFormat(\"%b %d\")\n    }\n\n    // const handleNotificationClicked = () => {\n    //     // history.push('/locations/' + id )\n    // }\n\n    const { notification, ind } = props\n\n    const handleType = () => {\n        switch (notification.type) {\n            case \"station_alert\":\n                return \"STATION\"\n            case \"device_alert\":\n                return \"DEVICE\"\n        }\n    }\n\n    return (\n        <styled.NotificationContainer key={ind}>\n            <styled.NotificationHeader>\n                <styled.NotificationTypeText>{handleType()}</styled.NotificationTypeText>\n                <styled.NotificationDateTime>{dateTimeFormatter(props.notification.dateTime)}</styled.NotificationDateTime>\n            </styled.NotificationHeader>\n            \n            <styled.NotificationBody>\n                <styled.NotificationLabel>{notification.label}</styled.NotificationLabel>\n                <styled.NotificationMessage>{notification.message}</styled.NotificationMessage>\n            </styled.NotificationBody>\n        </styled.NotificationContainer>\n    );\n};\n\nexport default Notification;\n","import React, { useState, useMemo, useRef, useEffect } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport * as styled from './notifications.style'\n\nimport Notification from './notification/notification'\n\nconst Notifications = () => {\n    const notifications = useSelector(state => state.notificationsReducer.notifications)\n\n    const handleNotifications = () => {\n        return (\n            <>{\n                notifications.sort((a, b) => b.dateTime - a.dateTime).map((notification, ind) =>\n                    <Notification\n                        key={`notification-${ind}`}\n                        ind={ind}\n                        notification={notification}\n                    />\n                )\n            }</>\n        )\n    }\n\n    return (\n        <>\n            {handleNotifications()}\n        </>\n    )\n}\n\nexport default Notifications","import React, { useState, useMemo, useRef, useEffect } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport * as styled from \"./right_menu.style\";\n\n// Import Components\nimport TaskQueue from '../../components/task_queue/task_queue'\nimport Notifications from \"../../components/notifications/notifications\";\nimport Notification from \"../../components/notifications/notification/notification\";\n\n// Import actions\nimport { deleteTaskQueueAll } from '../../redux/actions/task_queue_actions'\nimport { toggleNotificationTaskQueue } from '../../redux/actions/notifications_actions'\n\nimport useWindowSize from \"../../hooks/useWindowSize\";\n\n\nimport {\n    deepCopy,\n    upperCaseFirstLetterInString,\n} from \"../../methods/utils/utils\";\n\nconst RightMenu = (props) => {\n\n    // This values are defined in Status Header\n    const { showRightMenu, newNotification, overlapStatus } = props;\n\n    const size = useWindowSize();\n\n    const dispatch = useDispatch()\n    const onHideNotifications = (displayType) => dispatch({ type: 'HIDDEN_NOTIFICATIONS', payload: displayType })\n    const onDeleteTaskQueueAll = () => dispatch(deleteTaskQueueAll())\n    const setToggle = (toggle) => dispatch(toggleNotificationTaskQueue(toggle))\n\n\n    const displayType = useSelector(state => state.notificationsReducer.hiddenNotifications)\n    const toggle = useSelector(state => state.notificationsReducer.toggleNotificationTaskQueue)\n\n    const [types, setTypes] = useState({});\n\n    /**\n     * When a new notification comes in, overlay on the map\n     */\n    const handleNewNotification = () => {\n        const notification = {\n            message: \"Station 69 takt time is 420s slower then normal\",\n            type: \"station_alert\",\n            id: \"1234\",\n        };\n\n        return (\n            <styled.NewNotificationContainer>\n                <Notification\n                    message={notification.message}\n                    type={notification.type}\n                    id={notification.id}\n                    onClick={() => {\n                        console.log(\"QQQQ Clicked ID\");\n                    }}\n                />\n            </styled.NewNotificationContainer>\n        );\n    };\n\n    /**\n     * This handles clearing of either the task q or notifications\n     */\n    const handleClear = () => {\n        if (toggle === 'taskQueue') {\n            onDeleteTaskQueueAll()\n        } else if (toggle === 'notifications'){\n            console.log('Clearing Notifications')\n        }\n    }\n\n    return (\n        <>\n            {showRightMenu && (\n\n                <styled.NotificationsContainer\n                    windowHeight={size.height + \"px\"}\n                    overlaping = {overlapStatus}\n                >\n\n                    {/* Commented out for the time being. As of Aug 31 2020 notifications have not been impleneted */}\n                    {/* <styled.ToggleContainer>\n                        <styled.ToggleButton selected={toggle} type={'notifications'} onClick={() => setToggle('notifications')} style={{ borderTopLeftRadius: '0.25rem', borderBottomLeftRadius: '0.25rem' }}>Notifications</styled.ToggleButton>\n                        <styled.ToggleButton selected={toggle} type={'taskQueue'} onClick={() => setToggle('taskQueue')} style={{ borderTopRightRadius: '0.25rem', borderBottomRightRadius: '0.25rem' }}>Task Queue</styled.ToggleButton>\n                    </styled.ToggleContainer> */}\n\n                    <styled.Title>Task Queue</styled.Title>\n\n                    <styled.ClearText\n                        onClick={() => {\n                            handleClear();\n                        }}\n                    >\n                        Clear All\n                    </styled.ClearText>\n                    {toggle === 'notifications' &&\n                        <Notifications />\n                    }\n\n                    {toggle === 'taskQueue' &&\n                        <TaskQueue />\n                    }\n                </styled.NotificationsContainer>\n            )}\n\n            {newNotification && handleNewNotification()}\n        </>\n    );\n};\n\nexport default RightMenu;\n","import styled from 'styled-components';\n\nimport { globStyle } from '../../global_style';\nimport { hexToRGBA, LightenDarkenColor, RGB_Linear_Shade } from '../../methods/utils/color_utils';\n\nexport const StatusHeader = styled.div`\n    position: fixed;\n    width: 100%;\n    height: 4rem;\n\n    display: flex;\n    flex-direction: row;\n    pointer-events: none;\n\n    z-index: 2;\n`\n\nexport const LeftContentContainer = styled.div`\n    flex-grow: 1;\n    z-index: 2;\n    margin-left: 4.5rem;\n    pointer-events: auto;\n\n    display: flex;\n\n`\n\nexport const RightContentContainer = styled.div`\n    flex-grow: 1;\n    z-index: 2;\n    pointer-events: auto;\n\n    display: flex;\n    align-items: right;\n    justify-content: flex-end;\n\n`\n\n\n// logo\n// ************************************\n// ************************************\nexport const Logo = styled.div`\n    display: flex;\n    align-items: center;\n    margin-left: ${props => props.windowWidth > props.widthBreakPoint ? '1rem' : '.4rem'};\n`;\n\nexport const LogoIcon = styled.i`\n    font-size: 2.5rem;\n    margin-top: -.5rem;\n    margin-right: .1rem;\n    color: ${props => props.theme.fg.secondary};\n`\n\nexport const LogoSubtitle = styled.h2`\n    color: ${props => props.theme.bg.senary};\n    font-family: 'Montserrat';\n    font-size: ${props => props.theme.fontSize.sz4};\n    font-weight: 600;\n    margin: 0;\n    margin-bottom: -2rem;\n    padding: 0;\n`;\n\n\n// ************************************\n// ************************************\n\n// play button\n// ************************************\n// ************************************\nexport const PlayButton = styled.button`\n    //color:  ${props => props.play ? props.theme.good : props.theme.bad};\n    background: transparent;\n    // border: 0.2rem solid ${props => props.play ? props.theme.good : props.theme.bad};\n    border: none;\n    border-radius: 0.3rem;\n    height: 4rem;\n    padding: .25rem;\n    outline: none !important;\n    outlineOffset: none !important;\n    &:hover {\n        color: ${props => props.play ? RGB_Linear_Shade(.3, props.theme.good) : RGB_Linear_Shade(.3, props.theme.bad)};\n        border-color: ${props => props.play ? RGB_Linear_Shade(.3, props.theme.good) : RGB_Linear_Shade(.3, props.theme.bad)};\n    }\n\n    margin-right: 1.5rem;\n    margin-left: 0;\n\n    @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n        margin-right: 1rem;\n    }\n\n\n`;\n\nexport const PlayButtonIcon = styled.i`\n  color:  ${props => props.play ? props.theme.good : props.theme.bad};\n  font-size: 2rem;\n  // outline: 'none !important',\n  // outlineOffset: 'none !important',\n  line-height: 1.7rem;\n  text-align: center;\n  &:hover {\n    color: ${props => props.play ? RGB_Linear_Shade(.3, props.theme.good) : RGB_Linear_Shade(.3, props.theme.bad)};\n  }\n`;\n\n// ************************************\n// ************************************\n\n// Notifications\n// ************************************\n// ************************************\n\nexport const NotificationIcon = styled.i`\n    font-size: 2.2rem;\n    /* font-size: ${props => props.theme.fontSize.sz3}; */\n    color: ${props => props.theme.fg.primary};\n    margin-left: .2rem;\n    margin-right: .2rem;\n    margin-bottom: 0.4rem;\n`\n\nexport const RightMenuContainer = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    width: 3.6rem;\n    height: 3.2rem;\n    margin-top: 0.4rem;\n\n    border-radius: .5rem;\n    // border: .2em solid;\n    // border-color: ${props => props.theme.fg.primary};\n\n\n    &:hover {\n        cursor: pointer;\n    }\n\n\n    ${props => props.checked && `\n        box-shadow: inset 2px 2px 4px 0px rgba(0, 0, 0, 0.25), inset -2px -2px 3px 0px rgba(255, 255, 255, 0.6);\n        background: rgba(0,0,0,0.01);\n    `}\n\n    margin-left: 0;\n    margin-right: 2rem;\n\n    @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n        margin-right: 1rem;\n    }\n\n`\n\nexport const NotificationText = styled.p`\n    height: 1.4rem;\n    width: 1.4rem;\n    user-select: none;\n\n    position: absolute;\n    transform: translate(0.9rem, 0.6rem);\n\n    background-color: ${props => props.theme.bg.septenary};\n    border: 0.1rem solid ${props => props.theme.fg.primary};\n    border-radius: 0.7rem;\n\n    font-size: 1rem;\n    font-weight: 600;\n    color: ${props => props.theme.fg.primary};\n    margin: 0;\n    padding: 0;\n\n    line-height: 1.4rem;\n    text-align: center\n`\n","// import external dependencies\nimport React, { useState, useMemo, useRef, useEffect, useContext } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams, useHistory } from 'react-router-dom'\n\n// import methods\nimport { getBatteryClassName } from '../../methods/utils/class_name_utils';\nimport { uuidv4, deepCopy } from '../../methods/utils/utils';\nimport { parseCondition } from '../../methods/utils/skills_utils.js'\nimport { hexToRGBA, LightenDarkenColor, RGB_Linear_Shade } from '../../methods/utils/color_utils';\n\n// import actions\nimport { postStatus } from '../../redux/actions/status_actions'\nimport * as taskQueueActions from '../../redux/actions/task_queue_actions'\nimport { setWidth, setOpen} from \"../../redux/actions/sidebar_actions\";\n\n// import components\nimport RightMenu from '../right_menu/right_menu'\n\n// import hooks\nimport useWindowSize from '../../hooks/useWindowSize'\n\n// import logger\nimport log, { disableAll } from '../../logger.js';\n\n// import styles\nimport * as styled from './status_header.style'\nimport { render } from '@testing-library/react';\nimport { ThemeContext } from 'styled-components'\n\n\nconst StatusHeader = (props) => {\n\n    // this.logger = log.getLogger(this.constructor.name);\n\n    //const [showRightMenu, setShowRightMenu] = useState(false)\n    const [newNotification, setNewNotification] = useState(false)\n\n    const status = useSelector(state => state.statusReducer.status)\n    const displayType = useSelector(state => state.notificationsReducer.hiddenNotifications)\n    const notifications = useSelector(state => state.notificationsReducer.notifications)\n\n    const sideBarWidth = useSelector(state => state.sidebarReducer.width)\n    const toggle = useSelector(state => state.notificationsReducer.toggleNotificationTaskQueue)\n    const isSideBarOpen = useSelector(state => state.sidebarReducer.open)\n    const taskQueueOpen = useSelector(state => state.taskQueueReducer.taskQueueOpen)\n\n    const MiRMapEnabled = useSelector(state => state.localReducer.localSettings.MiRMapEnabled)\n    const serverSettings = useSelector(state => state.settingsReducer.settings)\n    const deviceEnabled = serverSettings.deviceEnabled\n    const [initialRender, setInitialRender] = useState (null)\n    const [statusBarPath, setStatusBarPath] = useState(``)\n    const [rightCurvePoint, setRightCurvePoint] = useState(``)\n    const [overlapStatus, setOverlapStatus] = useState('')\n\n    const prevNotificationRef = useRef()\n\n\n    let params = useParams()\n    const widgetPage = params.widgetPage\n\n\n    const theme = useContext(ThemeContext)\n    const widthBreakPoint = 1025\n\n    const dispatch = useDispatch()\n    const onHideNotifications = (displayType) => dispatch({ type: 'HIDDEN_NOTIFICATIONS', payload: displayType })\n    const onTaskQueueOpen = (props) => dispatch(taskQueueActions.taskQueueOpen(props))\n    const onSetWidth = (props) => dispatch (setWidth(props))\n    const onSetOpen = (props) => dispatch (setOpen(props))\n\n\n\n\n    // Used for determining break point of header\n    const size = useWindowSize()\n    const windowWidth = size.width\n\n\n    const generatePath = () => {\n\n        const pageWidth = window.innerWidth\n        const windowWidth = size.width\n\n        if (windowWidth < 800 && isSideBarOpen && taskQueueOpen) {\n            setRightCurvePoint(220)\n            setOverlapStatus(true)\n        }\n        else {\n            setRightCurvePoint(320)\n            setOverlapStatus(false)\n        }\n\n\n        let x, mergeHeight\n        let leftMargin = 200\n\n        let rightMargin = 200\n        if (window.innerWidth < widthBreakPoint) {\n            x = 60\n            mergeHeight = 2\n            leftMargin = 80\n            rightMargin = !!params.widgetPage ? 80 : 160\n        } else if (!taskQueueOpen && sideBarWidth + 120 > pageWidth - 320) { // No notifications, overlaping containers\n            x = (pageWidth - sideBarWidth - 200) / 2\n            mergeHeight = 5 + (sideBarWidth - pageWidth + 440) * 35 / 120\n        } else if (taskQueueOpen && sideBarWidth + 120 > pageWidth - 440) { // W/ notifications, overlapping containers\n            x = (pageWidth - sideBarWidth - 320) / 2\n            mergeHeight = 5 + (sideBarWidth - pageWidth + 560) * 35 / 220\n        } else {\n            x = 120\n            mergeHeight = 5\n        }\n\n        const path = `\n                M0,0\n                L0,40\n                L${isSideBarOpen && !widgetPage ? sideBarWidth : leftMargin},40\n                C${isSideBarOpen && !widgetPage ? sideBarWidth + x / 2 : leftMargin + x / 2},40 ${isSideBarOpen && !widgetPage ? sideBarWidth + x / 2 : leftMargin + x / 2},${mergeHeight} ${isSideBarOpen && !widgetPage ? sideBarWidth + x : leftMargin + x},${mergeHeight}\n                L${pageWidth - (taskQueueOpen ? rightCurvePoint : rightMargin) - x},${mergeHeight}\n                C${pageWidth - (taskQueueOpen ? rightCurvePoint : rightMargin) - x / 2},${mergeHeight} ${taskQueueOpen ? `${pageWidth - rightCurvePoint},${mergeHeight}` : `${pageWidth - rightMargin - x / 2},40`} ${pageWidth - (taskQueueOpen ? rightCurvePoint : rightMargin)},40\n                L${pageWidth},40\n                L${pageWidth},0\n                Z\n            `\n\n\n        setStatusBarPath(path)\n\n    }\n\n    /**\n     * This handles new notifications\n     * Sets the prev notification state to prevNotificationRef which is used to see if there's any new notifications\n     */\n\n    useEffect(() => {\n        prevNotificationRef.current = notifications\n        handleNotifications()\n    })\n\n\n    // useeffect is used like componentdidmount\n    useEffect(() => {\n        /**\n         * This maps through all the notifications and groups them into types.\n         * Grouping into types allows the ability to give notification type titles and be\n         * able to sort notifications by their types\n         *\n         * Also use displayType to minimize those type groups\n         */\n\n        let types = {}\n        notifications.map((notification) => {\n            // If notification types does not include the specific notification type than add it to types\n            if (types[notification.type] === undefined) {\n                const type = notification.type;\n\n                displayType[type] = true;\n\n                onHideNotifications(displayType)\n\n                types[notification.type] = [notification];\n\n            }\n        });\n        window.addEventListener('resize', generatePath)\n\n        return () => {\n            window.removeEventListener('resize', generatePath)\n        }\n    }, []);\n\n    useEffect(() => {\n        generatePath()\n    })\n    //This should work but the header path isn't updating on windowResize with these conditions...\n    // [sideBarWidth, isSideBarOpen, taskQueueOpen, window.onresize, window.innerWidth, params.widgetPage, windowWidth, sidebarOpenPath]\n\n    // Handles the play pause button\n    const handleTogglePlayPause = async () => {\n\n        //Flip the status to the opposite of the current value when the button is pressed\n        var status_clone = deepCopy(status);\n        const pause_status = !status_clone.pause_status;\n\n        //Post the status to the API\n        await dispatch(postStatus({ pause_status: pause_status }));\n    }\n\n\n    // Renders the left side of the header\n    const renderLeftHeader = useMemo(() => {\n\n        return (\n            <styled.LeftContentContainer\n                windowWidth={windowWidth}\n                widthBreakPoint={widthBreakPoint}\n            >\n                {/* <Link to='/Dashboards' style={{textDecoration:'none'}}> */}\n\n                {/* Hides the logo on mobile mode */}\n\n\n\n            </styled.LeftContentContainer>\n        )\n\n    }, [windowWidth])\n\n    /**\n     * Renders the right side of the header which contains:\n     *\n     * Play Pause Button: Used to start or stop the task queue\n     * Notifications: Used for to display notifications such as device issues, HILs, etc...\n     *\n     */\n    const renderRightContent = () => {\n        let pause_status = ''\n\n        // If there's no status available then set to blank object.\n        try {\n            pause_status = status.pause_status;\n        } catch (e) {\n            pause_status = false;\n        }\n\n        // Handles the icon type being displayed based on the pause_status in status\n        var playButtonClassName = \"fas fa-\";\n        pause_status ? playButtonClassName += 'play' : playButtonClassName += 'pause';\n\n        return (\n            <styled.RightContentContainer>\n\n                {/* Hide play pause button if it's not MirMapEnabled */}\n                {deviceEnabled &&\n                    <styled.PlayButton\n                        play={pause_status}\n                        windowWidth={windowWidth}\n                        widthBreakPoint={widthBreakPoint}\n                    >\n                        <styled.PlayButtonIcon play={pause_status} className={playButtonClassName} onClick={handleTogglePlayPause}></styled.PlayButtonIcon>\n                    </styled.PlayButton>\n                }\n\n                {/* This hides the right menu container if the screen size is below a set point and widgets are open (params.widgetPage) */}\n                {(windowWidth < widthBreakPoint && !params.widgetPage) &&\n                    <>\n                        <styled.RightMenuContainer checked={taskQueueOpen} onClick={() => {\n                            onTaskQueueOpen(!taskQueueOpen)\n                        }}>\n\n                            {toggle === 'notifications' ?\n                                <>\n                                    <styled.NotificationText>2</styled.NotificationText>\n                                    <styled.NotificationIcon className='far fa-bell' />\n                                </>\n                                :\n                                <styled.NotificationIcon className='fa fa-tasks' style={{ marginBottom: '0rem' }} />\n\n                            }\n\n\n                        </styled.RightMenuContainer>\n\n                        {(taskQueueOpen || newNotification) &&\n                            <>\n                                <RightMenu showRightMenu={taskQueueOpen} newNotification={newNotification} overlapStatus={overlapStatus} />\n                            </>\n                        }\n                    </>\n\n                }\n\n                {/* Always renders if page is greater then break point */}\n                {windowWidth > widthBreakPoint &&\n                    <>\n                        <styled.RightMenuContainer checked={taskQueueOpen} onClick={() =>\n                            onTaskQueueOpen(!taskQueueOpen)\n                        }>\n\n                            {toggle === 'notifications' ?\n                                <>\n                                    <styled.NotificationText>2</styled.NotificationText>\n                                    <styled.NotificationIcon className='far fa-bell' />\n                                </>\n                                :\n                                <styled.NotificationIcon className='fa fa-tasks' style={{ marginBottom: '0rem' }} />\n\n                            }\n\n                        </styled.RightMenuContainer>\n\n                        {(taskQueueOpen || newNotification) &&\n                            <>\n                                <RightMenu showRightMenu={taskQueueOpen} newNotification={newNotification} />\n                            </>\n                        }\n                    </>\n                }\n\n            </styled.RightContentContainer>\n        )\n    }\n\n    /**\n     * Handles New Notifications as well as hidding new notifications pop up when the notification panel is open\n     */\n    const handleNotifications = () => {\n\n        const prevNotifications = prevNotificationRef.current\n\n        // If prev state of notifications doesnt match the current state of notifications then a new notification must have been added\n        if (prevNotifications != notifications) {\n\n            setNewNotification(true)\n\n            setTimeout(() => {\n                setNewNotification(false)\n            }, 3000);\n\n        }\n        // If newNotification is true and showRightMenu is clicked, hide the new notifcation pop up\n        else if (taskQueueOpen && newNotification) {\n            setNewNotification(false)\n        }\n    }\n\n    return (\n\n        <styled.StatusHeader>\n            <div\n                style={{\n                    position: 'absolute',\n                    left: '0',\n                    top: '0',\n                    right: '0',\n                    height: '4rem',\n                    zIndex: '1',\n                }}>\n                <svg\n                    fill={hexToRGBA(theme.bg.septenary, 0.97)}\n                    viewBox={`0 0 ${window.innerWidth} 40`}\n                    width='100%' height='100%' preserveAspectRatio=\"none\"\n                >\n                    <path style={{ backdropFilter: 'blur(3px)' }} d={statusBarPath} />\n                </svg>\n\n            </div>\n\n            <styled.LeftContentContainer>\n                {windowWidth > widthBreakPoint &&\n                    <styled.Logo\n                        windowWidth={windowWidth}\n                        widthBreakPoint={widthBreakPoint}\n                    >\n                        <styled.LogoIcon className='icon-rmLogo' />\n                        <styled.LogoSubtitle> Studio</styled.LogoSubtitle>\n                    </styled.Logo>\n                }\n            </styled.LeftContentContainer>\n\n            {renderRightContent()}\n        </styled.StatusHeader>\n\n\n    );\n}\n\nexport default StatusHeader;\n","/*\nREAD-ME\n\nDO ALL CONTROLLING OF LOG LEVELS IN THIS CONTAINER, NEVER ANYWHERE ELSE\n\nInstructions of creating a new logger:\n=====================================\n\n1. import logger from src/logger.js'\n\n2. create a new logger\n    this.logger = logger.getLogger(~ENTER LOGGER NAME HERE~)\n\n3. use logger\n    this.logger.info('Here is a message', hereIsAVariable);\n\n*/\n\n// import external dependencies\nimport React, {Component} from 'react';\nimport { connect } from 'react-redux';\n\n// import actions\nimport { getLoggers, postLoggers } from '../../redux/actions/local_actions';\n\n// import methods\nimport { deepCopy, arraysEqual } from '../../methods/utils/utils'\n\n// import logger\nimport log from '../../logger.js';\n\nclass LoggerContainer extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n          //loggers: log.getLoggers(),\n          disableAll: false,\n          enableAll: false,\n        }\n\n        this.logger = log.getLogger(this.constructor.name);\n\n    }\n\n    componentDidMount() {\n        // initial call to check for loggers\n        this.checkForLoggers();\n\n        // check for new loggers on interval\n        // doesn't appear to be necessary at the moment\n        // this.checkLoggersInterval = setInterval(() => this.checkForLoggers(), 10000);\n\n    }\n\n    componentWillUnmount() {\n        // clearInterval(this.checkLoggersInterval);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        // const currentReduxLoggers = this.props.loggers;\n        // const prevReduxLoggers = prevProps.loggers;\n\n        const currentReduxLoggerNames = Object.keys(this.props.loggers);\n        const prevReduxLoggerNames = Object.keys(prevProps.loggers);\n\n        const loggersChanged = !arraysEqual(currentReduxLoggerNames, prevReduxLoggerNames);\n\n        if(loggersChanged) {\n            // this.checkForLoggers();\n        }\n\n\n\n    }\n\n\n    /*\n        This function disables all loggers\n    */\n    disableAll = () => {\n      this.logger.trace('disableAll called')\n      //Object.values(log.getLoggers()).forEach((logger, index) => {\n      //  logger.setLevel(5);\n      //})\n\n      Object.values(this.props.loggers).forEach((redux_logger, index) => {\n\n          let logger = log.getLogger(redux_logger.name);\n          logger.setLevel(5);\n\n      })\n\n      log.disableAll();\n      this.setState({disableAll: true, enableAll: false});\n    }\n\n    /*\n        This function enables all loggers\n    */\n    enableAll = () => {\n      //Object.values(log.getLoggers()).forEach((logger, index) => {\n      //  logger.setLevel(0);\n      //})\n\n      Object.values(this.props.loggers).forEach((redux_logger, index) => {\n          let logger = log.getLogger(redux_logger.name);\n          logger.setLevel(0);\n      })\n      log.enableAll();\n      this.setState({enableAll: true, disableAll: false});\n    }\n\n\n\n    /*\n        This function updates the actual logger settings to match the config in redux\n    */\n    updateLoggers = () => {\n\n        const existingLoggerNames = Object.values(log.getLoggers()).map((logger, index) => logger.name);\n\n        //If disableAll all is true\n        if(this.props.disableAll && !this.state.disableAll){\n          this.disableAll();\n        }\n\n        if(!this.props.disableAll && this.state.disableAll){\n          this.setState({disableAll: false});\n        }\n\n        //If mute all is false\n        if(this.props.enableAll && !this.state.enableAll){\n          this.enableAll();\n        }\n\n        if(!this.props.enableAll && this.state.enableAll){\n          this.setState({enableAll: false});\n        }\n\n        // only perform the logger updates if neither disableAll nor enableAll are true\n        if(!this.props.disableAll && !this.props.enableAll) {\n\n          // for each logger in redux:\n          //    get the actual logger\n          //    set the level to match the redux config\n          Object.values(this.props.loggers).forEach((redux_logger, index) => {\n\n            if(existingLoggerNames.includes(redux_logger.name)) {\n                let logger = log.getLogger(redux_logger.name);\n\n                let level = redux_logger.level;\n                let enabled = redux_logger.enabled;\n\n                // if logger isn't enabled and isn't already set to silent,\n                // set it to silent\n                if(!enabled && (logger.getLevel() !== 5)) {\n                  logger.setLevel(5);\n                }\n\n                // if the logger is enabled, and the actual level doesn't\n                // match the level config in redux, update it\n                if(enabled && (logger.getLevel() !== level)) {\n                  logger.setLevel(level);\n                }\n            }\n\n          });\n        }\n\n    }\n\n\n\n\n    /*\n        This function checks if any loggers exist that do not exist in the redux store\n        If a logger is found that isn't in the store, it will add a new logger object to the store\n    */\n    checkForLoggers = async () => {\n        // true if the redux store has read the logger config\n        // false otherwise\n        const { loaded } = this.props;\n\n        // only perform the check if the saved settings have been loaded\n        if(true) {\n\n          // get all loggers\n          const loggers = Object.values(log.getLoggers());\n          const loggerNames = loggers.map((logger) => logger.name);\n\n          // get name of loggers in redux\n          const reduxLoggerNames = Object.values(this.props.loggers).map((logger, index) => {\n            return logger.name;\n          });\n\n          // for each logger\n          //    check if the redux store contains a logger with the same name\n          //    if a logger isn't found, create a new one\n          let newLoggers = [];\n          loggers.forEach( async (logger, index) => {\n\n              let name = logger.name;\n              let level = logger.getLevel();\n\n              // if level is equal to 5 (silent), enabled is false, and true otherwise\n              let enabled = level === 5 ? false : true;\n\n              if(!reduxLoggerNames.includes(name)) {\n\n                  let newLogger = {\n                    name,\n                    level,\n                    enabled\n                  };\n\n                  this.logger.info('Adding new logger', newLogger)\n\n                  newLoggers.push(newLogger);\n              }\n          });\n\n          await this.addLoggers(newLoggers);\n\n\n          // this block will remove loggers from redux that don't actually exist\n          // this will be necessary for loggers that have been deleted from code\n          // but still have local saved settings\n\n          /*\n          let removeLoggers = [];\n          // delete\n          reduxLoggerNames.forEach( (reduxLoggerName, index) => {\n              if(!loggerNames.includes(reduxLoggerName)) {\n                this.logger.info(\"Adding logger to list to be removed\", reduxLoggerName);\n                removeLoggers.push(reduxLoggerName);\n              }\n          });\n\n          this.logger.info('About to remove loggers', removeLoggers)\n          if(removeLoggers.length > 0) {\n              //  await this.removeLogger(removeLoggers);\n\n          }\n          */\n\n\n        }\n    }\n\n    /*\n        This function adds a new logger to the redux store\n    */\n    addLoggers = async (newLoggers) => {\n        const { loggers, enableAll, disableAll, loaded } = this.props;\n\n        // copy loggers (don't directly modify state)\n        let loggersCopy = deepCopy(loggers);\n\n        newLoggers.forEach((newLogger, index) => {\n            // add newLogger to loggers copy\n            loggersCopy[newLogger.name] = newLogger;\n        })\n\n\n        // create logger config\n        var loggerConfig = {};\n        loggerConfig['loggers'] = loggersCopy;\n        loggerConfig['enableAll'] = enableAll;\n        loggerConfig['disableAll'] = disableAll;\n\n        await this.props.postLoggers(loggerConfig, loaded);\n    }\n\n    /*\n        This function removes logger from the redux store\n    */\n    removeLogger = async (loggerNames) => {\n        const { loggers, enableAll, disableAll } = this.props;\n\n        this.logger.debug(\"removeLogger: loggerNames\", loggerNames);\n        this.logger.debug(\"removeLogger: loggers\", loggers)\n\n        // copy loggers (don't directly modify state)\n        let loggersCopy = deepCopy(loggers);\n\n        loggerNames.forEach((name, index) => {\n          // delete logger\n          delete loggersCopy[name];\n        })\n\n\n        this.logger.debug(\"removeLogger: loggersCopy after removal\", loggersCopy)\n\n        // create logger config\n        var loggerConfig = {};\n        loggerConfig['loggers'] = loggersCopy;\n        loggerConfig['enableAll'] = enableAll;\n        loggerConfig['disableAll'] = disableAll;\n\n        await this.props.postLoggers(loggerConfig);\n    }\n\n    /*\n    printLoggers = () => {\n      let loggers = Object.values(log.getLoggers());\n      console.log('printLoggers')\n\n      loggers.forEach((logger, index) => {\n\n        console.log(logger.name)\n        console.log(logger.getLevel())\n        console.log(logger)\n      })\n\n\n    }\n    */\n\n    /*\n    printReduxLoggers = () => {\n      let loggers = Object.values(this.props.loggers);\n      console.log('printReduxLoggers')\n\n      loggers.forEach((logger, index) => {\n\n        console.log(logger.name)\n        console.log(logger.level)\n        console.log(logger.enabled)\n      })\n\n\n    }\n    */\n\n    render(){\n\n      this.updateLoggers();\n\n      //this.printLoggers()\n      //this.printReduxLoggers()\n\n\n      return(\n        <>\n        </>\n      );\n    }\n}\n\nconst mapStateToProps = function(state) {\n  return {\n    loggers: state.localReducer.loggers,\n    enableAll: state.localReducer.enableAll,\n    disableAll: state.localReducer.disableAll,\n    loaded: state.localReducer.loaded,\n  };\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    postLoggers: (loggerConfig) => dispatch(postLoggers(loggerConfig))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoggerContainer);\n","import styled from 'styled-components'\n\nexport const MapContainer = styled.div`\n    height: 100%;\n    width: 100%;\n    flex: 1;\n    background: ${props => props.theme.bg.secondary};\n    user-select: none;\n\n    cursor: move; /* fallback if grab cursor is unsupported */\n    cursor: grab;\n    cursor: -moz-grab;\n    cursor: -webkit-grab;\n\n    &:active {\n        cursor: grabbing;\n        cursor: -moz-grabbing;\n        cursor: -webkit-grabbing;\n    }\n\n    background-size: cover;\n    overflow: visible;\n`\n\nexport const MapGroup = styled.g`\n`\n\nexport const MapImage = styled.img`\n    height: 100%;\n    width: auto;\n\n    // ${props => props.tall && `\n    //     height: auto;\n    //     width: 100%;\n    // `}\n    \n`","import React, { useState, useEffect, useRef } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\n// Import Actions\nimport { setTaskAttributes } from '../../../redux/actions/tasks_actions'\nimport {getLoadPositionId, getUnloadPositionId} from \"../../../methods/utils/route_utils\";\n\nexport default function TaskPaths(props) {\n\n    const {\n        route,\n    } = props\n\n    const selectedTaskReducer = useSelector(state => state.tasksReducer.selectedTask)\n    const positions = useSelector(state => state.positionsReducer.positions)\n    const stations = useSelector(state => state.stationsReducer.stations)\n    const dispatch = useDispatch()\n\n    let selectedTask = null\n\n    // This sets the selected task to either whats in the reducer or whats being passed in through props\n    // It would be using props because this task path is part of a process\n    if (!!route) {\n        selectedTask = route\n    } else {\n        selectedTask = selectedTaskReducer\n    }\n\n\n    const stateRef = useRef()\n    stateRef.current = selectedTask\n\n    const loadPositionId = getLoadPositionId(selectedTask)\n    const unloadPositionId = getUnloadPositionId(selectedTask)\n\n    const [mousePos] = useState({ x: 0, y: 0 })\n\n    const [x1, setX1] = useState(0)\n    const [y1, setY1] = useState(0)\n    const [x2, setX2] = useState(0)\n    const [y2, setY2] = useState(0)\n\n    // To be able to remove the event listener, we need to reference the same function.\n    // Therefore we save the function in the state\n    const [lockToMouse] = useState(() => e => {\n        setX2(e.clientX)\n        setY2(e.clientY)\n    })\n\n    // A callback that will set the load position to null when you press escape\n    const [exitTaskPath] = useState(() => e => {\n        if (e.key == 'Escape') {\n            let load = stateRef.current.load\n            load.position = null\n            load.station = null\n            dispatch(setTaskAttributes(stateRef.current._id, { load }))\n        }\n    })\n\n    // Set the start and end position if they exist\n    useEffect(() => {\n        const loadPositionId = getLoadPositionId(selectedTask)\n        const unloadPositionId = getUnloadPositionId(selectedTask)\n\n        if (selectedTask !== null) {\n            if (loadPositionId !== null) {\n                // Check to see if its a station or position\n                const startPos = !!positions[loadPositionId] ? positions[loadPositionId] : stations[loadPositionId]\n                if(startPos) {\n                    setX1(startPos.x)\n                    setY1(startPos.y)\n                }\n            }\n            if (unloadPositionId !== null) {\n                // Check to see if its a station or position\n                const endPos = !!positions[unloadPositionId] ? positions[unloadPositionId] : stations[unloadPositionId]\n                if(endPos) {\n                    setX2(endPos.x)\n                    setY2(endPos.y)\n                }\n            }\n        }\n    })\n\n    // If there is a load position but not an unload, set a listener to set the endpoint to the mouse position\n    useEffect(() => {\n        const loadPositionId = getLoadPositionId(selectedTask)\n        const unloadPositionId = getUnloadPositionId(selectedTask)\n\n        if (selectedTask !== null && loadPositionId !== null && unloadPositionId === null) {\n            setX2(x1)\n            setY2(y1)\n            window.addEventListener('mousemove', lockToMouse, false)\n            window.addEventListener('keydown', exitTaskPath)\n        } else {\n            window.removeEventListener('mousemove', lockToMouse, false)\n            window.removeEventListener('keydown', exitTaskPath)\n        }\n\n        return () => {\n            window.removeEventListener('mousemove', lockToMouse, false)\n            window.removeEventListener('keydown', exitTaskPath)\n        }\n    }, [selectedTask])\n\n    if (selectedTask !== null && loadPositionId != null) {\n        const startPos = positions[loadPositionId]\n\n        let endPos\n        if (unloadPositionId !== null) { // The task has a start AND end position\n            endPos = positions[unloadPositionId]\n        } else { // Task has a start position but no end position (instead snap to mouse position)\n            endPos = mousePos\n        }\n\n        const lineLen = Math.sqrt(Math.pow((x2 - x1), 2) + Math.pow((y2 - y1), 2))\n        const lineRot = Math.atan2((y2 - y1), (x2 - x1))\n        const arrowRot = lineRot * 180 / Math.PI\n\n        const dashes = [...Array(Math.ceil(lineLen / (10 * props.d3.scale))).keys()]\n\n        // Changes the color based on whether it's a selected task or part of a process\n        const primaryColor = !route ? 'rgba(56, 235, 135, 0.95)' : 'rgba(255, 182, 46, 0.95)'\n        const secondaryColor = !route ? 'rgba(184, 255, 215, 0.7)' : 'rgba(255, 236, 201, 0.7)'\n        const dashColor = !route ? 'rgba(56, 235, 135, 0.95)' : 'rgba(255, 182, 47, 0.95)'\n        return (\n            <>\n                <g>\n                    <defs>\n\n                        {/* a transparent glow that takes on the colour of the object it's applied to */}\n                        <filter id=\"glow\">\n                            <feGaussianBlur stdDeviation=\"1\" result=\"coloredBlur\" />\n                            <feMerge>\n                                <feMergeNode in=\"coloredBlur\" />\n                                <feMergeNode in=\"SourceGraphic\" />\n                            </feMerge>\n                        </filter>\n\n                    </defs>\n\n                    <line x1={`${x1}`} y1={`${y1}`}\n                        x2={`${x2}`} y2={`${y2}`}\n                        strokeWidth={`${props.d3.scale * 8}`} stroke={primaryColor}\n                        strokeLinecap=\"round\"\n                    />\n                    <line x1={`${x1}`} y1={`${y1}`}\n                        x2={`${x2}`} y2={`${y2}`}\n                        strokeWidth={`${props.d3.scale * 6}`} stroke={secondaryColor}\n                        strokeLinecap=\"round\"\n                    />\n\n                    {dashes.map(delta =>\n                        <g key={`arrow-${delta}`}\n                            transform={`translate(${x1 + delta * props.d3.scale * 10 * Math.cos(lineRot)} ${y1 + delta * props.d3.scale * 10 * Math.sin(lineRot)})`}>\n                            <g viewBox=\"-50 -50 50 50\" transform={`rotate(${arrowRot}) scale(${0.05 * props.d3.scale})`}>\n                                <polygon points=\"-40,-50 -40,50 40,0\" fill={dashColor} />\n                            </g>\n                        </g>\n                    )}\n                </g>\n            </>\n        )\n    }\n\n    return (null)\n}\n","import React, { useState, useEffect, useRef } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport TaskPaths from '../task_paths/task_paths'\nimport {isObject} from \"../../../methods/utils/object_utils\";\n\nconst ProcessPaths = (props) => {\n    const {\n        d3\n    } = props\n\n    const selectedProcess = useSelector(state => state.processesReducer.selectedProcess)\n    const tasks = useSelector(state => state.tasksReducer.tasks)\n\n    // Maps through all the associated routes with the process and displays them\n    const handleTaskPaths = () => {\n        // return Object.keys(selectedProcess.routes).map((station, ind) => {\n        return selectedProcess.routes.map((route, ind) => {\n            if( isObject(route) ) {\n                return (\n                    <TaskPaths d3={d3} route={route} key={route._id} />\n                )\n            }\n            else {\n                return (\n                    <TaskPaths d3={d3} route={tasks[route]} key={route} />\n                )\n            }\n        })\n\n        // })\n    }\n\n    return (\n        <>\n            {handleTaskPaths()}\n        </>\n    )\n\n}\n\nexport default ProcessPaths","import React from 'react'\n\nimport { DeviceTypes } from '../../../../constants/device_constants'\n\nconst MiR100 = (props) => {\n\n    const {\n        device,\n        d3\n    } = props\n\n    const shouldGlow = false\n\n\n    let type = 'cart'\n\n    if (device['shelf_attached'] > 0) {\n        type = 'shelf'\n    }\n\n    let color = DeviceTypes[type].primaryColor\n\n    if (device.state_text === 'EmergencyStop') {\n        color = 'red'\n    }\n\n\n\n    return (\n        <g\n            style={{ fill: color, stroke: color, strokeWidth: '0', opacity: '0.8' }}\n            transform={`translate(${device.position.x},${device.position.y}) rotate(${360 - device.position.orientation - 90}) scale(${d3.scale / d3.imgResolution},${-d3.scale / d3.imgResolution})`}\n        >\n\n            <svg x=\"-10\" y=\"-10\" width=\"20\" height=\"20\" viewBox=\"0 0 400 400\">\n\n                {DeviceTypes[type].svgPath}\n\n            </svg>\n\n\n        </g>\n    )\n\n}\n\nexport default MiR100","import styled from 'styled-components'\n\n\nexport const MenuContainer = styled.div`\n    position: absolute;\n    width: 12rem;\n    height: auto;\n    z-index: 10000;\n\n    background: white;\n\n    box-shadow: 0 0.1rem 0.2rem 0rem #303030;\n    border-radius: 1rem;\n\n    backdrop-filter: blur(10px);\n    background-color: rgba(255, 255, 255, 0.6);\n    padding: .1rem 0rem;\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    overflow: hidden;\n`\n\nexport const MenuButton = styled.button`\n    border: none;\n    text-align: center;\n    width: 100%;\n    height: 2rem;\n    outline:none;\n\n    margin: .1rem;\n\n    background-color: transparent;\n\n    &:hover{\n        background-color: ${props => props.theme.bg.septenary};\n    }\n\n    &:focus{\n        outline: 0 !important\n    }\n\n    &:active{\n        box-shadow: none;\n    }\n`;","import React, { useState, useEffect } from 'react'\nimport { useHistory, useLocation } from 'react-router-dom'\n\n\nimport { useSelector, useDispatch } from 'react-redux'\n\n// Import actions\nimport { addStation, setSelectedStation, setEditingStation } from '../../../redux/actions/stations_actions'\nimport { addPosition, setSelectedPosition, setEditingPosition } from '../../../redux/actions/positions_actions'\nimport { setOpen } from \"../../../redux/actions/sidebar_actions\"\n\n\n\n// Import utils\nimport { convertD3ToReal } from '../../../methods/utils/map_utils'\nimport { deepCopy } from '../../../methods/utils/utils'\n\n// Import Constants\nimport { PositionTypes } from '../../../constants/position_constants'\n\n// import styling\nimport * as styled from './right_click_menu.style'\n\nimport uuid from 'uuid'\n\n/**\n * This is the menu that opens on right click\n * It does some funky things that will be explained here\n *\n * Send cart to location\n * Makes a temp position with a schema of 'temporary_position'\n * That schema is used in locations, widgets, map view and positions to tell if its a right click menu\n * If it is a right click menu position then the widgets should always be displayed for send or cancel, and not disappear on mouse leave. (see map_view and widgets)\n *\n * The widget buttons have custom actions, and those actions can be found inside of widget_button is widgets\n * @param {*} props\n */\nconst RightClickMenu = (props) => {\n\n    const {\n        coords,\n        buttonClicked,\n        d3,\n    } = props\n\n    const dispatch = useDispatch()\n\n    const dispatchAddPositions = (position) => dispatch(addPosition(position))\n    const dispatchSetSelectedPosition = (position) => dispatch(setSelectedPosition(position))\n    const dispatchEditingPosition = (bool) => dispatch(setEditingPosition(bool))\n\n    const dispatchAddStation = (station) => dispatch(addStation(station))\n    const dispatchSetSelectedStation = (station) => dispatch(setSelectedStation(station))\n    const dispatchEditingStation = (bool) => dispatch(setEditingStation(bool))\n\n    const dispatchShowSideBar = (bool) => dispatch(setOpen(bool))\n\n    const currentMap = useSelector(state => state.mapReducer.currentMap)\n    const showSideBar = useSelector(state => state.sidebarReducer.open)\n    const MiRMapEnabled = useSelector(state => state.localReducer.localSettings.MiRMapEnabled)\n    const selectedStation = useSelector(state => state.stationsReducer.selectedStation)\n    const history = useHistory()\n\n\n    const disbaleStation = !!selectedStation ? true : false\n\n    const onSendCartToPosition = async () => {\n        const pos = convertD3ToReal([coords.x, coords.y], d3)\n\n        const tempSelectedPosition = {\n            name: '',\n            schema: 'temporary_position',\n            type: 'cart_position',\n            map_id: currentMap._id,\n            pos_x: pos[0],\n            pos_y: pos[1],\n            rotation: 0,\n            x: coords.x,\n            y: coords.y,\n            _id: uuid.v4()\n        }\n\n        await Object.assign(tempSelectedPosition, { ...PositionTypes['temporary_cart_position'].attributes, temp: true })\n        await dispatchAddPositions(tempSelectedPosition)\n        await dispatchSetSelectedPosition(tempSelectedPosition)\n\n        buttonClicked()\n    }\n\n    const onAddStation = async () => {\n\n        const pos = convertD3ToReal([coords.x, coords.y], d3)\n\n        const tempSelectedStation = {\n            new: true,\n            name: '',\n            schema: 'station',\n            type: 'human',\n            pos_x: pos[0],\n            pos_y: pos[1],\n            rotation: 0,\n            x: coords.x,\n            y: coords.y,\n            _id: uuid.v4(),\n            map_id: currentMap._id,\n            children: [],\n            dashboards: []\n        }\n        dispatchEditingStation(true)\n        dispatchAddStation(tempSelectedStation)\n        dispatchSetSelectedStation(tempSelectedStation)\n\n        history.push('/locations')\n\n        if (!showSideBar) {\n            const hamburger = document.querySelector('.hamburger')\n            hamburger.classList.toggle('is-active')\n        }\n        dispatchShowSideBar(true)\n\n\n        buttonClicked()\n    }\n\n    return (\n        <styled.MenuContainer style={{ top: coords.y, left: coords.x }}>\n            {MiRMapEnabled ?\n                <>\n                    <styled.MenuButton disabled={disbaleStation} onClick={() => !disbaleStation && onAddStation()}>Add Station</styled.MenuButton>\n                    <styled.MenuButton onClick={onSendCartToPosition}>Send Cart to Position</styled.MenuButton>\n                </>\n                :\n                <styled.MenuButton onClick={onAddStation}>Add Station</styled.MenuButton>\n\n            }\n\n        </styled.MenuContainer>\n    )\n}\n\nexport default RightClickMenu\n","import styled from 'styled-components'\n\n\nexport const TaskStatisticsContainer = styled.div`\n    position: absolute;\n    display: flex;\n\n    flex-direction: column;\n    align-items: center;\n\n    top: ${props => props.yPosition};\n    left: ${props => props.xPosition};\n\n    max-height: 6.5rem;\n    width: 10rem;\n    padding: .5rem;\n\n    background: red;\n    border-radius: 1rem;\n    box-shadow: 0 0.1rem 0.2rem 0rem #303030;\n    background-color: rgba(255, 255, 255, 0.9);\n\n    overflow: hidden;\n\n`\n\nexport const TaskNameText = styled.span`\n    margin-bottom: 0rem;\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz3};\n    font-weight: bold;\n\n    overflow-wrap: break-word;\n    align-items: center;\n    box-align: center;\n    width: 100%;\n    height: 100%;\n    word-break: break-word;\n\n`\n\nexport const TaskNameContainer = styled.div`\n\tflex: 1;\n\tdisplay: flex;\n\tjustify-content: first baseline;\n    flex-direction: column;\n    overflow: hidden;\n    text-overflow: ellipsis;\n\n    max-height: 4rem;\n\n\n`\n\nexport const TaskText = styled.p`\n    align-self: auto;\n    margin-left: .25rem;\n    margin-top: auto;\n    margin-bottom: auto;\n    font-family: ${props => props.theme.font.primary};\n\n`\n\nexport const TaskIcon = styled.i`\n    margin-bottom: .2rem;\n`\n\nexport const RowContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n`","import React, { useState, useEffect, useRef } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\n// Import Styles\nimport * as styled from './task_statistics.style'\nimport taskAnalysisReducer from \"../../../redux/reducers/task_analysis_reducer\";\nimport {getTasksAnalysis} from \"../../../redux/actions/task_analysis_actions\";\n\nconst TaskStatistics = (props) => {\n\n    const {\n        // selectedTask,\n        // positions,\n        d3,\n    } = props\n\n    const dispatch = useDispatch()\n    const onGetTasksAnalysis = () => dispatch(getTasksAnalysis())\n\n    const selectedTask = useSelector(state => state.tasksReducer.selectedTask)\n    const selectedProcess = useSelector(state => state.processesReducer.selectedProcess)\n    const tasks = useSelector(state => state.tasksReducer.tasks)\n    const positions = useSelector(state => state.positionsReducer.positions)\n    const tasksAnalysis = useSelector(state => state.taskAnalysisReducer.tasksAnalysis) || {}\n\n    useEffect(() => {\n        onGetTasksAnalysis()\n    }, [])\n\n    const handleSingleTask = (task) => {\n        if (task === undefined) return null\n        const selectedTaskAnalysis = tasksAnalysis[task._id]\n        if (selectedTaskAnalysis === undefined) return null\n\n        const startPos = positions[task.load.position]\n        const endPos = positions[task.unload.position]\n\n        if (task === null || positions === null || startPos === undefined || endPos === undefined) return null\n\n        // const xPosition = (startPos.x + endPos.x) / 2 + 10 * d3.scale + 'px'\n        // const yPosition = (startPos.y + endPos.y) / 2 - 30 + 'px'\n\n        // const xPosition = (startPos.x + endPos.x) / 2 + 'px'\n        // const yPosition = (startPos.y + endPos.y) / 2 - 30 + 'px'\n\n        // Some fancy calculation to find a common offset from a task path\n        // Doesnt work because it doesnt\n\n        const x1 = startPos.x\n        const y1 = startPos.y\n        const x2 = endPos.x\n        const y2 = endPos.y\n\n        const midX = (x1 + x2) / 2\n        const midY = (y1 + y2) / 2\n\n        const difY = (y2 - y1)\n\n        // const height = (25*Math.pow(difY,1/4))/Math.pow(d3.scale/5.8,1/4)\n\n        const height = () => {\n            if ((150 / difY) > 50) {\n                return 50\n            } else {\n                return 100 - 150 / difY\n            }\n        }\n\n        // const height = 100\n\n        const numerator = Math.abs(y2 - (midY))\n\n        // const denominator = Math.sqrt(Math.pow(x2 - (midX), 2) + Math.pow(y2 - (midY), 2))\n        const denominator = Math.abs(x2 - (midX))\n\n        const theta = Math.atan(numerator / denominator)\n\n        // const xPosition = (midX - height() * Math.sin(theta)) - 80 + 'px'\n        // const yPosition = (midY + height() * Math.cos(theta)) - 40 + 'px'\n\n        const xPosition = midX -80 + 'px'\n        const yPosition = midY + 'px'\n\n        return (\n            <styled.TaskStatisticsContainer xPosition={xPosition} yPosition={yPosition}>\n\n                <styled.TaskNameContainer>\n                    <styled.TaskNameText>{task.name}</styled.TaskNameText>\n                </styled.TaskNameContainer>\n\n                <styled.RowContainer style={{ justifyContent: 'space-between', width: '100%', marginTop: '.25rem' }}>\n                    <styled.RowContainer>\n                        <styled.TaskIcon className='far fa-clock' />\n                        <styled.TaskText>{`${selectedTaskAnalysis.avg_run_time}s`}</styled.TaskText>\n                    </styled.RowContainer>\n\n                    <styled.RowContainer>\n                        <styled.TaskIcon className='far fa-check-circle' />\n                        <styled.TaskText>{selectedTaskAnalysis.successes}</styled.TaskText>\n                    </styled.RowContainer>\n\n                    <styled.RowContainer>\n                        <styled.TaskIcon className='far fa-times-circle' />\n                        <styled.TaskText>{selectedTaskAnalysis.failures}</styled.TaskText>\n                    </styled.RowContainer>\n\n                </styled.RowContainer>\n            </styled.TaskStatisticsContainer>\n        )\n    }\n\n    const handleProcessTasks = () => {\n\n        if (!!selectedTask) {\n            return handleSingleTask(selectedTask)\n        }\n\n        // return Object.keys(selectedProcess.routes).map((station) => {\n        return selectedProcess.routes.map((route) => {\n            return handleSingleTask(tasks[route])\n\n        })\n        // })\n    }\n\n\n    return (\n\n        !!selectedProcess ?\n            handleProcessTasks()\n            :\n            handleSingleTask(selectedTask)\n\n\n    )\n\n}\n\nexport default TaskStatistics","import styled, { css } from 'styled-components'\n\nimport { hexToRGBA } from '../../../methods/utils/color_utils'\n\n\nexport const Container = styled.div`\n    position: absolute;\n    padding: inherit;\n    z-index: 1;\n\n    top: 5rem;\n    bottom: 1rem;\n    left: 1rem;\n    right: ${props => !!props.taskQueueOpen ? '21rem' : '1rem'};\n\n\n    display: flex;\n    /* background-color: ${props => hexToRGBA(props.theme.bg.tertiary, !!props.showWidgetPage ? 0.97 : 0)}; */\n    flex-direction: column;\n\n    /* // styles when showWidgetPage is true */;\n    visibility: ${props => !!props.showWidgetPage ? 'visible' : 'hidden'};\n\n    opacity: ${props => !!props.showWidgetPage ? '100%' : '0%'};\n    transition-delay: .2s;\n    transition-property: opacity;\n    transition-duration: .25s;\n    transition-timing-function: ease;\n\n\n    @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n        top: 5rem;\n        bottom: .5rem;\n        left: .5rem;\n        right: .5rem;\n    }\n\n`\n\nexport const WidgetPageContainer = styled.div`\n    height: 100%;\n    width: 100%;\n    z-index: 3;\n    position: relative;\n\n    border-radius: 1rem;\n    box-shadow: 0 0.2rem 0.4rem 0rem #303030;\n    // background-color: transparent;\n    background-color: ${props => props.theme.bg.primary};\n\n    overflow: hidden;\n\n    cursor: default;\n    /* transition: all 2s ease; */\n`\n\nexport const WidgetsContainer = styled.div`\n    position: relative;\n    display: flex;\n\n    margin: .5rem 0;\n\n    @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n        margin: 0;\n    }\n`\n","import styled from 'styled-components'\n\n\nexport const HeaderContainer = styled.div`\n    width: 100%;\n    display: flex;\n    justify-content: center;\n`\n\nexport const HeaderText = styled.h1`\n    display: flex;\n`\n\nexport const HeaderStation = styled.h1`\n    display: flex;\n`","import styled from \"styled-components\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport AssignmentOutlinedIcon from \"@material-ui/icons/AssignmentOutlined\";\n\nexport const Header = styled.div`\n    flex-grow: 1;\n    display: flex;\n\n    flex-direction: row;\n    // align-items: center;\n    justify-content: flex-start;\n\n    margin: 0rem 5rem 0rem 5rem;\n\n    height: 6rem;\n    max-height: 6rem;\n    min-height: 6rem;\n    line-height: 6rem;\n\n`\n\nexport const Title = styled.h2`\n    color: ${props => props.theme.bg.octonary};\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz1};\n\n    flex-grow: 1;\n\n    text-align: center;\n    line-height: 6rem;\n\n    // tablet style\n    @media only screen and (max-width: ${props => props.theme.widthBreakpoint.tablet}) {\n        font-size: ${props => props.theme.fontSize.sz2};\n    }\n    user-select: none;\n\n    pointer-events: none;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n`\n\nexport const LotsTitle = styled.h2`\n    color: ${props => props.theme.bg.octonary};\n    font-family: ${props => props.theme.font.primary};\n    font-size: 1rem;\n    padding-right:1rem;\n    padding-top:0.4rem;\n\n`\n\nexport const SidebarButton = styled(AssignmentOutlinedIcon)`\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz1};\n\n    border:none;\n    padding:0;\n    margin:0;\n    outline: none;\n    background: transparent;\n`\n\n\nexport const RowContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: flex-start;\n\n    margin-left:2rem;\n    padding-top:1rem;\n    padding-right:2rem;\n    padding-bottom: 1rem;\n    width: 100%;\n    height: 3rem;\n    overflow:hidden;\n    flex-wrap: wrap;\n\n\n\n    @media only screen and (max-width: ${props => props.theme.widthBreakpoint.tablet}) {\n        margin-left: 2rem;\n        margin-right: 2rem;\n    }\n`\n\nexport const ColumnContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n\n`\nexport const Dots = styled.div`\n    align-items: center;\n    justify-content: flex-start;\n    height: 1.7rem;\n    color: white;\n    width:15rem;\n\n    white-space: nowrap;\n    text-overflow: ellipsis;\n\n    padding-top: .2rem;\n\n\n`\n\nexport const LotItem = styled.div`\n    align-items: center;\n    justify-content: center;\n    height: 1.7rem;\n    color: white;\n\n    white-space: nowrap;\n\n    width: auto;\n    background: transparent;\n\n    padding-right:.5rem;\n    padding-left:.5rem;\n    margin-right:.5rem;\n\n    border-radius: 0.5rem;\n    border: 0.1rem solid;\n    border-color: ${props => props.error ? 'red' : 'white'};\n\n\n`\n","import styled from 'styled-components'\nimport {RGB_Linear_Shade, hexToRGBA, LightenDarkenColor} from \"../../../../../methods/utils/color_utils\";\nimport * as pageStyle from '../dashboards_header/dashboards_header.style';\nimport SmallButton from \"../../../../basic/small_button/small_button\";\n\nexport const AddButton = styled.button`\n    flex-grow: 8;\n    background-color: #BCBCBC;\n`\n\nexport const Container = styled.div`\n    \n    // flex layout\n    display: flex;\n    flex-direction: column;\n    \n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n    \n    background: ${props => props.theme.bg.quaternary};\n    \n`\n\nexport const AddContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: flex-end;\n    padding-top: .2rem;\n    justify-content: center;\n    padding-bottom: .2rem;\n`\n\nexport const HeaderContentContainer = styled.div`\n    width: 100%;\n    height: 100%;\n    \n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    \n`\n\nexport const Title = styled(pageStyle.Title)`\n    padding: 0;\n    margin: 0;\n    margin-left: 4rem;\n`\n\n\nexport const CreateNewText = styled.span`\n    // font-weight: bold;\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz3};\n`\n\n\nexport const DashboardContainer = styled.div`\n    \n    width: 100%;\n    max-width: 100%;\n    max-height: 100%;\n    height: 100%;\n    \n    overflow: auto;\n    overflow-x: hidden;\n    \n    padding: 2rem;\n    \n    // hide scroll bar\n    ::-webkit-scrollbar {\n        width: 0px;  /* Remove scrollbar space */\n        background: transparent;  /* Optional: just make scrollbar invisible */\n    }\n    ::-webkit-scrollbar-thumb {\n        background: transparent;\n    }\n    \n`\n\nexport const DashboardList = styled.div`\n    \n    width: 100%;\n    max-width: 100%;\n    max-height: 100%;\n    height: 100%;\n    \n    // flex layout\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    align-items:center;\n    justify-content: center;\n    \n`\n\nexport const MenuButton = styled.div`\n    display: flex;\n    flex-grow: 1;\n    justify-content: center;\n\n    &:hover {\n        cursor: pointer;\n    }\n`\nexport const AddButtonContainer = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`\n\nexport const AddHeadContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n    padding-top: 2rem;\n    padding-bottom: 1rem;\n    position: relative;\n    \n    background-image: linear-gradient(${props => props.theme.bg.tertiary}, ${props => props.theme.bg.primary});\n    // background: ${props => props.theme.bg.secondary};\n    border-bottom: thin solid ${props => props.theme.bg.tertiary};\n    box-shadow: 0px 0px 15px black;\n    \n    z-index: 1;\n    \n    height: 5rem;\n    max-height: 5rem;\n`\nexport const AddHeader = styled.h2`\n    display: flex;\n    margin: auto auto;\n    font-weight: bold;\n    color: #FF4B4B;\n    font-family: ${props => props.theme.font.primary};\n    \n\n`\n\nexport const HeaderButtonLeft = styled.button`\n    display: flex;\n    position: absolute;\n    left: .5rem;\n    top: 0.5rem;\n    background: ${props => props.theme.fg.primary};\n    height: 2rem;\n    text-align: center;\n    color: ${props => props.theme.bg.primary};\n    margin-top: 2rem;\n\n    @media (max-width: 1000px) {\n        top: -1.5rem;\n\n    }\n\n\n    &:hover {\n        color: ${props => props.theme.bg.primary};\n    }\n`\nexport const HeaderButtonLabel = styled.span`\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz4};\n    font-weight: 400;\n    color: ${props => props.theme.bg.primary};\n`;\n\nexport const HeaderButtonRight = styled.button`\n    display: flex;\n    position: absolute;\n    right: 1rem;\n    background: ${props => props.theme.fg.primary};\n    height: 2.5rem;\n    text-align: center;\n    color: ${props => props.theme.bg.primary};\n\n    &:hover {\n        color: ${props => props.theme.bg.primary};\n    }\n`\n\nexport const DashboardHeaderStatus = styled.p`\n`\n\nexport const UnstyledList = styled.ul`\n    list-style: none;\n    list-style-type: none;\n    margin-top: 2rem;\n    padding-inline-start: 0rem;\n`\n\nexport const TitleTextbox = styled.input`\n    background-color: ${props => props.theme.bg.secondary};\n    border-color: ${props => props.theme.bg.primary};\n    font-size: ${props => props.theme.fontSize.sz2};\n    font-family: ${props => props.theme.font.primary};\n    display: flex;\n    flex-grow: 1;\n\n    &:focus {\n        border: 1px solid ${props => props.theme.fg.primary};\n        color: ${props => props.theme.bg.septenary};\n        box-shadow: none;\n        background-color: ${props => props.theme.bg.secondary};\n    }\n\n    &::placeholder {\n        font-size: ${props => props.theme.fontSize.sz2};\n        font-family: ${props => props.theme.font.secondary};\n        color: ${props => props.theme.bg.quaternary};\n    }\n    margin: 0;\n    padding: 0;\n`;\n\nexport const NewDashboard = styled.button`\n\tposition: relative;\n\t\n\t// default font\n\tfont-family: ${props => props.theme.font.primary};\n\tfont-size: ${props => props.theme.fontSize.sz3};\n\t\n\t// remove default button padding and margin\n\tpadding: 0;\n\tmargin: 0;\n    width: 26rem;\n    min-width: 26rem;\n    max-width: 26rem;\n\t\n    margin-bottom: 1rem;\n\tmargin-left: 0.5rem;\n\tmargin-right: 0.5rem;\n\t\n\t// border related styling\n\tborder: 0.3rem solid ${props => props.theme.bg.senary};\n\tborder-radius: 0.5rem;\n\tbox-shadow: 5px 5px 10px ${props => props.theme.bg.quaternary};\n\t\n\tbackground: transparent;\n\t\n\t// flex layout\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: space-between;\n\t\n\tmax-height: 15rem;\n\theight: 15rem;\n\toverflow: hidden;\n\t\n\toutline: none;\n\t&:focus {\n\t\toutline: none;\n\t}\n\t\n\t&:active {\n\t\tbox-shadow: 0px 0px 0px white;\n\t}\n`\n\nexport const AddDashboardContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 0rem;\n\n    flex-grow: 1;\n\n    background: none;\n    justify-content: center;\n`\n\nexport const AddDashboardButtonText = styled.p`\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz2};\n    font-weight: 600;\n    color: ${props => props.theme.bg.senary};\n`\n\nexport const PlusButton = styled.i`\n    color: ${props => props.theme.bg.senary};\n    font-size: 2rem;\n`\n","import styled from 'styled-components'\nimport * as style from '../DashboardsList.style'\nimport SmallButton from \"../../../../../basic/small_button/small_button\";\n\nimport { LightenDarkenColor } from '../../../../../../methods/utils/color_utils'\n\nexport const AddContainer = styled(style.AddContainer)`\n\tpadding-bottom: 1rem;\n\talign-content: center;\n\twidth: 45%;\n`\n\nexport const Container = styled.button`\n\tposition: relative;\n\t\n\t// default font\n\tfont-family: ${props => props.theme.font.primary};\n\tfont-size: ${props => props.theme.fontSize.sz3};\n\t\n\t// remove default button padding and margin\n\tpadding: 0;\n\tmargin: 0;\n\t\n\t// // large screen style\n\t// @media (min-width: ${props => props.theme.widthBreakpoint.mobileL}){\n\t//   width: 100%;\n\t//   max-width: 100%;\n\t// }\n\t\n\t// // small screen style\n\t// @media (min-width: ${props => props.theme.widthBreakpoint.tablet}){\n\t// \twidth: 45%;\n\t// \tmargin-left: .5rem;\n\t// \tmargin-right: .5rem;\n\t// }\n\tmin-width: 26rem;\n\twidth: 26rem;\n\tmax-width: 26rem;\n\t\n\tmargin-bottom: 1rem;\n\tmargin-left: 0.5rem;\n\tmargin-right: 0.5rem;\n\t\n\t// border related styling\n\tborder: 0.3rem solid ${props => props.theme.bg.septenary};\n\tborder-radius: 0.5rem;\n\tbox-shadow: 5px 5px 10px ${props => props.theme.bg.quaternary};\n\t\n\tbackground: transparent;\n\t\n\t// flex layout\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\t// justify-content: space-between;\n\t\n\tmax-height: 15rem;\n\theight: 15rem;\n\toverflow: visible;\n\t\n\toutline: none;\n\t&:focus {\n\t\toutline: none;\n\t}\n\t\n\t&:active {\n\t\tbox-shadow: 0px 0px 0px white;\n\t}\n`\n\nexport const HeaderContainer = styled.div`\n\twidth: 100%;\n\tpadding-top: 0.75rem;\n\tpadding-bottom: 0.5rem;\n   \t\n\tz-index: 1;\n\t\n\t// flex layout\n\tflex-grow: 0;\n\theight: 3rem;\n\tdisplay: flex;\n\tjustify-content: center;\n\n\n\t// background-color: ${props => props.theme.bg.septenary};\n`\n\nexport const Title = styled.h3`\n\tpadding: 0;\n\tmargin: 0;\n\tcolor: ${props => props.theme.bg.septenary};\n\t\n\tfont-family: ${props => props.theme.font.primary};\n\tfont-size: ${props => props.theme.fontSize.sz2};\n\tfont-weight: bold;\n\t\n\twhite-space: nowrap;\n\toverflow: hidden;\n\twidth: 100%;\n\t\n\ttext-overflow: ellipsis;\n\t\n`\n\nexport const NoGoals = styled.div`\n\talign-self: center;\n\tcolor: ${props => LightenDarkenColor(props.theme.bg.senary, -40)};\n`\n\nexport const List = styled.div`\n\twidth: 24rem;\n\tmax-width: 100%;\n\tmin-width: 100%;\n\toverflow-y: scroll;\n\toverflow-x: hidden;\n\n\tflex-grow: 1;\n\tmax-height: 100%;\n\theight: 11.4rem;\n\n\ttext-align: center;\n\t\n\tpadding: 1rem;\n\tpadding-top: 0;\n\t\n\t// hide scroll bar\n\t::-webkit-scrollbar {\n\t\twidth: 0px;  /* Remove scrollbar space */\n\t\t// background: transparent;  /* Optional: just make scrollbar invisible */\n\t}\n\t::-webkit-scrollbar-thumb {\n\t\tbackground: transparent;\n\t}\n\t\n`\n\nexport const ListContainer = styled.div`\n\twidth: 100%;\n\tmax-height: 100%;\n\n\ttext-align: center;\n`\n\nexport const TaskButton = styled.li`\n\tcolor: ${props => props.theme.bg.quaternary};\n\tbackground: ${props => `linear-gradient(180deg, rgba(255,255,255,0.4) 0%, rgba(255,255,255,0.4) 100%), ${LightenDarkenColor(props.color, -60)}`};\n\tfont-size: ${props => props.theme.fontSize.sz3};\n\tfont: ${props => props.theme.font.primary};\n\ttext-align: center;\n\n\tuser-select: none;\n\n\tmargin-bottom: 0.15rem;\n\tpadding: 0 1.2rem 0 1.2rem;\n\tborder-radius: 0.3rem;\n\t\n\t// hide long names\n\twhite-space: nowrap;\n\toverflow: hidden;\n\ttext-overflow: ellipsis;\n\n\tlist-style-type: none;\n\twidth: 100%;\n\tflex-grow: 1;\n\t\n`\n\nexport const DashboardButtonTitle = styled.h2`\n\tmin-width: 0;\n\twhite-space: nowrap;\n\toverflow: hidden;\n\ttext-overflow: ellipsis;\n\n\tfont-family: ${props => props.theme.font.primary};\n\tfont-size: ${props => props.theme.fontSize.sz2};\n\tpadding: 1rem 4rem 0 0;\n\tfont-weight: bold;\n\tcolor: ${props => props.theme.bg.senary};\n\twidth: 100%;\n`\n\n\n\n\nexport const ButtonsContainer = styled.div`\n\twidth: 100%;\n\tdisplay: flex;\n\tz-index: 1;\n`\n\nexport const Button = styled(SmallButton)`\n\tflex: 1;\n\tmargin: 0;\n\tpadding: 0;\n\t\n\t&:hover {\n\t\tcursor: pointer;\n\t}\n\tbackground: transparent;\n\tz-index: 2;\n`\n\nexport const DashboardButtonRowConatiner = styled.div`\n\tdisplay: flex;\n\tflex-direction: row;\n\talign-content:center;\n`\n\nexport const DashboardButtonIcon = styled.a`\n\tdisplay: flex;\n\tposition: absolute;\n\tright: 1.5rem;\n\ttop: 1.5rem;\n\t/* z-index: 2; */\n\tpadding: 1rem;\n\tmargin: -1rem;\n\t&:hover {\n\t\tcursor: pointer;\n\t}\n`\n\n\nexport const Icon = styled.i`\n\tdisplay: flex;\n\tcolor: ${props => props.theme.fg.primary};\n\tfont-size: 2rem;\n\tmargin-left: 0.75rem;\n\tmargin-right: 0.75rem;\n\t&:hover {\n\t\tcursor: pointer;\n\t}\n`\nexport const HILStatus = styled.i`\n\tbottom: 2.55rem;\n\tright: 2rem;\n\tdisplay: flex;\n\tposition: absolute;\n\tcolor: ${props => props.theme.good};\n`\n\nexport const HILTimer = styled.p`\n\tbottom: 1.2rem;\n\tright: 3.5rem;\n\tdisplay: flex;\n\tposition: absolute;\n\tcolor: ${props => props.theme.good};\n\tfont-family: ${props => props.theme.font.primary};\n\tfont-weight: bold;\n`\n\nexport const WarningIcon = styled.i`\n\tmargin-right: 2rem;\n\tcolor: ${props => props.theme.bad};\n\tz-index: 10;\n\tfont-size: 1.2rem;\n`\n\n// export const AddNewDashboardContainer = styled.div`\n// \tdisplay: flex;\n// \tborder: 0.25rem solid ${props => props.theme.bg.quaternary};\n// \tbackground: none;\n// \theight: 10rem;\n// \tborder-radius: 0.5rem;\n// \tjustify-content: center;\n// \talign-items:center;\n// `\n\n// export const AddDashboardButton = styled.button`\n//\n//\n// `\n","import styled from 'styled-components'\n\nimport { LightenDarkenColor } from '../../../../../../methods/utils/color_utils'\n\nexport const Container = styled.div`\n\n    \n    width: 100%;\n    display: flex;\n    justify-content: center;\n    \n    margin-bottom: 0.4rem;\n    \n    &:focus {\n        outline: none;\n    }\n    \n    border: 0;\n`\n\nexport const Button = styled.button`\n    border-radius: .5rem;\n    \n    height: 5rem;\n    \n    &:focus {\n        outline: none;\n    }\n    width: 80%;\n    max-width: 80%;\n    \n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n`\n\nexport const Title = styled.span`\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz3};\n    font-weight: bold;\n    \n    // white-space: nowrap;\n    // overflow: hidden;\n    //   max-width: 10%;\n    //   width: 20%;\n    // word-break: break-word;\n    //\n    // text-overflow: ellipsis;\n    \n\n`","import React, { useEffect } from 'react';\nimport { Draggable } from 'react-smooth-dnd';\n\nimport DashboardButton from \"../../dashboard_buttons/dashboard_button/dashboard_button\";\n\nimport * as style from \"./dashboard_sidebar_button.style\"\n\nimport log from '../../../../../../logger'\nimport { randomHash } from \"../../../../../../methods/utils/utils\";\n\nconst logger = log.getLogger(\"Dashboards\")\n\nconst DashboardSidebarButton = (props) => {\n    const { name, color, id, task_id, clickable, onTaskClick, disabled  } = props;\n\n\n    logger.log(\"DashboardSidebarButton: name: \", name)\n    logger.log(\"DashboardSidebarButton: props: \", props)\n\n    if (!clickable) {\n        return(\n            <Draggable key={id}>\n                <style.Container>\n                        <DashboardButton\n                            title={name}\n                            width={\"80%\"}\n                            clickable={clickable}\n                            color={color}\n                            onClick={() => onTaskClick(task_id)}\n                            disabled={disabled}\n                        />\n                </style.Container>\n            </Draggable>\n        )\n    } else {\n        return(\n            <style.Container>\n                    <DashboardButton\n                        title={name}\n                        width={\"80%\"}\n                        clickable={clickable}\n                        color={color}\n                        onClick={() => onTaskClick(task_id, name)}\n                        disabled={disabled}\n                    />\n            </style.Container>\n        )\n    }\n    \n}\n\nexport default DashboardSidebarButton","import React, { useRef, useEffect } from 'react';\nimport PropTypes from \"prop-types\";\n\n// import external functions\nimport { useDrag, useDrop } from \"react-dnd\";\n\n// import external components\nimport ReactList from 'react-list';\nimport ReactTooltip from \"react-tooltip\";\n\n// import internal components\nimport DashboardButton from \"../../dashboard_buttons/dashboard_button/dashboard_button\";\n\n// Import styles\nimport * as style from './dashboard.style';\n\n// import logging\nimport log from \"../../../../../../logger\"\nimport DashboardSidebarButton from \"../../dashboards_sidebar/dashboard_sidebar_button/dashboard_sidebar_button\";\nimport { randomHash } from \"../../../../../../methods/utils/utils\";\nconst logger = log.getLogger(\"Dashboards\")\n\nconst Dashboard = React.memo(props => {\n    logger.log(\"DashboardContainers: props\", props)\n    // extract props\n    const {\n        onDrop,\n        deleted,\n        HILTimer,\n        editingclicked,\n        onDeleteClick,\n        setSelectedDashboard,\n        openDashboard,\n        id,\n        key,\n        title,\n        buttons\n    } = props\n\n    logger.log(\"Dashboard: props\", props)\n    logger.log(\"Dashboard: taskButtons\", buttons)\n\n    // handle drop items\n    const [{ opacity }, dropRef] = useDrop({\n        accept: \"DashboardSidebarButton\",\n        drop: (item, monitor) => {\n            onDrop(item, id)\n            return item\n        },\n        hover: (item, monitor) => {\n            const isOver = monitor.isOver({ shallow: true })\n            logger.log(\"isOver\", isOver)\n\n        },\n        // collect: (monitor) => ({\n        // \topacity: monitor.isOver({ shallow: true }) ? 0.5 : 1\n        // })\n    })\n\n    const listRef = useRef(null);\n    const itemRenderer = (index, key) => {\n        const button = buttons[index]\n\n        logger.log(\"itemRenderer currentButton\", button)\n\n        return <style.TaskButton key={'task-button-' + index} color={button.color} onDragOver={() => console.log('hey')}>{button.name}</style.TaskButton>\n\n    }\n\n    React.useEffect(() => {\n        listRef.current &&\n            listRef.current.scrollTo(buttons.length);\n    }, [buttons.length]);\n\n    return (\n        <style.Container\n            ref={dropRef}\n            onClick={props.openDashboard}\n        >\n            <style.HeaderContainer>\n                <style.Title>{props.title ? props.title : \"Untitled\"}</style.Title>\n            </style.HeaderContainer>\n\n            <style.List>\n                {(buttons && (buttons.length > 0)) ?\n                    <ReactList\n                        ref={listRef}\n                        itemRenderer={itemRenderer}\n                        length={buttons.length}\n                        type='uniform'\n                        itemsRenderer={(items, ref) => {\n                            return (\n                                <style.ListContainer ref={ref}>\n                                    {items}\n                                </style.ListContainer>\n\n                            )\n                        }}\n                    />\n\n                    :\n                    <style.NoGoals>Dashboard is empty...</style.NoGoals>\n                }\n\n            </style.List>\n\n        </style.Container>\n\n\n\n    )\n})\n\n\n// Specifies propTypes\nDashboard.propTypes = {\n    onDrop: PropTypes.func,\n};\n\n// Specifies the default values for props:\nDashboard.defaultProps = {\n    onDrop: () => { logger.log(\"onDrop Called\") },\n};\n\n\n\nexport default Dashboard\n","import React, { useContext, useEffect, useState, useMemo } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useParams, useHistory } from 'react-router-dom'\n\n// import components\nimport BounceButton from \"../../../../basic/bounce_button/bounce_button\";\nimport BackButton from '../../../../basic/back_button/back_button'\nimport Button from '../../../../basic/button/button'\n\n// Import hooks\nimport useWindowSize from '../../../../../hooks/useWindowSize'\n\n// import external funcations\nimport { ThemeContext } from \"styled-components\";\nimport { withRouter } from \"react-router-dom\";\nimport { getCards } from \"../../../../../redux/actions/card_actions\";\n\n\n// import constants\nimport { PAGES } from \"../../../../../constants/dashboard_contants\";\n\nimport * as style from \"./dashboards_header.style\";\n\nconst widthBreakPoint = 1000;\n\nconst DashboardsHeader = (props) => {\n\n    const {\n        children,\n        showTitle,\n        showBackButton,\n        showEditButton,\n        showSaveButton,\n        showSidebar,\n        setShowSidebar,\n        setEditingDashboard,\n        page,\n\n        saveDisabled,\n        onBack,\n        onDelete\n    } = props\n\n    const themeContext = useContext(ThemeContext);\n\n    // extract url params\n    const { stationID, dashboardID, editing } = props.match.params\n    const dispatch = useDispatch()\n    const onGetCards = () => dispatch(getCards())\n\n    const cards = useSelector(state => state.cardsReducer.cards)\n    const stations = useSelector(state => state.stationsReducer.stations)\n    const positions = useSelector(state => state.positionsReducer.positions)\n\n    const locations = {\n        ...positions,\n        ...stations\n    }\n\n    const location = locations[stationID]\n\n    const [slice, setSlice] = useState(null)\n    const size = useWindowSize()\n    const windowWidth = size.width\n    const mobileMode = windowWidth < widthBreakPoint;\n\n\n    // goes to main dashboards page\n    const goToMainPage = () => {\n        props.history.push(`/locations/${stationID}/dashboards`)\n    }\n\n    /**\n     * Renders Lots that are are the station\n     */\n    const renderLotsTitle = useMemo(() => {\n\n        //  If there is a location then see if it has lots. There wouldnt be a location because its a Mir dashboard\n        if (location === undefined) return\n\n        let hasLot = false\n\n        for (let i = 0; i < Object.values(cards).length; i++) {\n            if (!!Object.values(cards)[i].bins[location._id]) {\n                hasLot = true\n                break\n            }\n        }\n\n        if (!!hasLot) {\n            return (\n                <style.RowContainer windowWidth={windowWidth}>\n                    <style.LotsTitle>Lots:</style.LotsTitle>\n                    {Object.values(cards).map((card, ind) =>\n                        <>\n                            {!!card.bins[location._id] &&\n\n                                <style.LotItem>{card.name + ' (' + card.bins[location._id].count + ')'}</style.LotItem>\n                            }\n                        </>\n\n                    )}\n                </style.RowContainer>\n            )\n        }\n\n        else {\n            return (\n                <style.RowContainer>\n                    <style.LotsTitle>No Lots</style.LotsTitle>\n                </style.RowContainer>\n            )\n        }\n    }, [cards])\n\n    return (\n        <style.ColumnContainer>\n\n            {renderLotsTitle}\n\n            <style.Header>\n\n                {showBackButton &&\n                    <BackButton style={{ order: '1' }} containerStyle={{ marginTop: '1.8rem' }}\n                        onClick={onBack}\n                    />\n                }\n\n                {showTitle &&\n                    <style.Title style={{ order: '2' }}>{page}</style.Title>\n                }\n\n                {showEditButton && !mobileMode &&\n                    <Button style={{ order: '3', marginTop: '1.8rem' }}\n                        onClick={setEditingDashboard}\n                    >\n                        Edit\n  \t\t\t\t</Button>\n                }\n\n                {showSaveButton &&\n                    <>\n                        <Button style={{ order: '3', marginTop: '1.8rem' }}\n                            type=\"submit\"\n                            disabled={saveDisabled}\n                        >\n                            Save\n  \t\t\t\t</Button>\n\n                        {/* Comment out for now since locations only have one dashboard, so you should not be able to delete the only dashboard */}\n                        {/* <Button\n                          schema={'delete'}\n                          style={{ order: '4', marginTop: '1.8rem', marginLeft: '2rem' }}\n                          onClick={onDelete}\n                      >\n                          Delete\n                      </Button> */}\n                    </>\n                }\n\n                {children}\n            </style.Header>\n        </style.ColumnContainer>\n\n    )\n}\n\nexport default withRouter(DashboardsHeader)\n","import React, { useState, useRef, useContext, useEffect } from 'react';\n\n// external functions\nimport { ThemeContext } from \"styled-components\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useParams, useHistory } from 'react-router-dom'\n\n// import external components\nimport ReactList from \"react-list\";\nimport { useDrop } from 'react-dnd'\n\n// Import Components\nimport Dashboard from './dashboard/dashboard'\nimport { ConfirmDeleteModal } from '../../../../basic/modals/modals'\nimport DashboardsHeader from \"../dashboards_header/dashboards_header\";\nimport BounceButton from \"../../../../basic/bounce_button/bounce_button\";\n\n// Import Actions\nimport * as dashboardActions from '../../../../../redux/actions/dashboards_actions'\nimport * as stationActions from '../../../../../redux/actions/stations_actions'\nimport * as taskActions from '../../../../../redux/actions/tasks_actions'\n\n// import utils\nimport { deepCopy } from \"../../../../../methods/utils/utils\";\n\n// import constants\nimport { PAGES } from \"../../../../../constants/dashboard_contants\";\n\n// Import Styles\nimport * as style from './DashboardsList.style';\n\n// import logging\nimport log from \"../../../../../logger\";\n\nconst logger = log.getLogger(\"DashboardsPage\");\n\n\nconst DashboardsList = (props) => {\n\n    const {\n        setSelectedDashboard,\n        setEditingDashboard,\n        showSidebar,\n        setShowSidebar,\n        stationID\n    } = props\n\n    // theme\n    const themeContext = useContext(ThemeContext);\n\n    // component state\n    const [dashboardToDelete, setDashboardToDelete] = useState(false);\n\n    // ref for react list\n    const listRef = useRef(null);\n\n    // dispatch\n    const dispatch = useDispatch()\n\n    const params = useParams()\n    const history = useHistory()\n\n    // Drop reference for new dashboard\n    const [{ }, newDashDropRef] = useDrop({\n        accept: \"DashboardSidebarButton\",\n        drop: (item, monitor) => {\n            handleNew(item)\n        },\n    })\n\n    // redux state\n    const dashboards = useSelector(state => state.dashboardsReducer.dashboards)\n    const stations = useSelector(state => state.stationsReducer.stations)\n    const tasks = useSelector(state => state.tasksReducer.tasks)\n    const devices = useSelector(state => state.devicesReducer.devices)\n    const dashboardOpen = useSelector(state => state.dashboardsReducer.dashboardOpen)\n\n    const onPutDashboard = (dashboard, copy, id) => dispatch(dashboardActions.putDashboard(dashboard, copy, id))\n    const onPostDashboard = (dashboard) => dispatch(dashboardActions.postDashboard(dashboard))\n    const onPutStation = (station, id) => dispatch(stationActions.putStation(station, id))\n    const onDeleteDashboard = (dashboard) => dispatch(dashboardActions.deleteDashboard(dashboard))\n\n\n\n    const station = stations[stationID]\n    const device = devices[stationID]\n\n    const selectedDashboardType = !!station ? station : device\n\n\n\n    // logger.log(\"DashboardsList dashboards\", dashboards)\n    // logger.log(\"DashboardsList dashboardsArray\", dashboardsArray)\n\n    useEffect(() => {\n        if (dashboards[params.dashboardID] === undefined && !dashboardOpen) {\n            history.push('/locations/')\n        }\n        return () => {\n\n        }\n    }, [])\n\n\n    // Hopefully fixes a bug when there is no dashboards for this type\n    const dashboardsArray = !!selectedDashboardType ? !!selectedDashboardType.dashboards ? selectedDashboardType.dashboards.map(dashboardID => dashboards[dashboardID]) : [] : []\n\n\n    // handles event of button drag-and-drop onto a dashboard\n    // adds the dropped button to the dashboard target\n    const handleDrop = async (button, id) => {\n        // get dashboard that button was dropped in\n        const targetDashboard = dashboards[id]\n        logger.log(\"DashboardsList: handleDrop: targetDashboard\", targetDashboard)\n\n        let targetDashboardCopy = deepCopy(targetDashboard)// clone dashboard\n        targetDashboardCopy.buttons.push(button) // add new button\n\n        // dispatch action to update api and redux\n        onPutDashboard(targetDashboardCopy, targetDashboardCopy._id.$oid)\n    }\n\n    const handleNew = (button) => {\n        // This block iterates through 'i' to find 'Untitled Dashboard i' that\n        // that does not exists at this station\n        var i = 0\n        var exists = true\n        while (exists) {\n            exists = false\n            i++\n            selectedDashboardType.dashboards.forEach(dashboardID => {\n                if (dashboards[dashboardID].name == 'Untitled Dashboard ' + i) {\n                    exists = true\n                }\n            })\n        }\n\n        // Post the new dashboard and wait for the returned ID\n        let newDash = {\n            name: 'Untitled Dashboard ' + i,\n            station: stationID,\n            buttons: [],\n        }\n        if (!!button) {\n            newDash.buttons.push(button)\n        }\n        const postDashboardPromise = onPostDashboard(newDash)\n\n        // Add this new dashboard to the station\n        postDashboardPromise.then(async postedDashboard => {\n\n            let stationDashboards = selectedDashboardType.dashboards\n            stationDashboards.push(postedDashboard._id.$oid)\n            await dispatch(stationActions.setStationAttributes(station._id, { dashboards: stationDashboards }))\n            const stationID = station._id\n            delete station._id\n            await onPutStation(station, stationID)\n\n            if (button == null) { // Drop not click\n                // Go into the new dashboard\n                setSelectedDashboard(postedDashboard._id.$oid)\n            }\n        })\n    }\n\n    // renders a single dashboard based on the index in the dashboards array\n    const itemRenderer = (index, key) => {\n        if (index >= dashboardsArray.length) {\n\n            // Extra dashboard which will be the 'New Dashboard' dashboard\n            return (\n                <style.NewDashboard ref={newDashDropRef} onClick={() => handleNew(null)} key={key}>\n                    <style.AddDashboardContainer>\n                        <style.AddDashboardButtonText>New Dashboard</style.AddDashboardButtonText>\n                        <style.PlusButton className='far fa-plus-square'></style.PlusButton>\n                    </style.AddDashboardContainer>\n                </style.NewDashboard>\n            )\n        } else {\n            const currDashboard = dashboardsArray[index]\n            if (currDashboard === undefined) {\n                return null\n            }\n\n            // get dashboard properties\n            let name = currDashboard.name\n            let ID = currDashboard._id.$oid\n            let buttons = currDashboard.buttons\n            let deleted = false\n\n            logger.log(\"rednering dashboard\")\n            return (\n                <Dashboard\n                    listRef={listRef}\n                    title={name}\n                    buttons={buttons}\n                    key={index}\n                    id={ID}\n                    openDashboard={() => {\n                        setSelectedDashboard(ID)\n                    }}\n                    onDeleteClick={() => {\n                        // opens confirm delete modal\n                        setDashboardToDelete(ID)\n                    }}\n                    editingclicked={() => {\n                        setEditingDashboard(ID)\n                    }}\n                    deleted={deleted}\n                    onDrop={handleDrop}\n                />\n            )\n        }\n    }\n\n    return (\n        <style.Container>\n\n            <style.DashboardContainer\n            >\n                <ReactList\n                    style={{ width: \"100%\" }}\n                    ref={listRef}\n                    minSize={10}\n                    itemRenderer={itemRenderer}\n                    length={dashboardsArray.length + 1}\n                    type='uniform'\n                    itemsRenderer={(items, ref) => {\n                        return (\n                            <style.DashboardList ref={ref}\n                                onScroll={() => logger.log(\"DashboardList scroll\")}\n                            >\n                                {items}\n                            </style.DashboardList>\n\n                        )\n                    }}\n                />\n            </style.DashboardContainer>\n\n            {/* Confimation modal before deleting a dashboard */}\n            <ConfirmDeleteModal\n                isOpen={dashboardToDelete}\n                title={'Confirm Delete'}\n                textMain={dashboards[dashboardToDelete] && 'Are you sure you want to delete \"' + dashboards[dashboardToDelete].name + '\"'}\n                caption={''}\n                onCancelClick={() => setDashboardToDelete(null)}\n                onDeleteClick={() => {\n                    onDeleteDashboard(dashboardToDelete)\n                    setDashboardToDelete(null)// reset dashboardToDelete\n                }}\n            />\n        </style.Container>\n    )\n}\n\nexport default DashboardsList\n","import styled from \"styled-components\";\nimport {css} from 'styled-components'\n\nexport const Container = styled.ul`\n\t// fill entire container\n\twidth: 90%;\n\tmax-width: 90%;\n\tmax-height: 100%;\n\theight: 100%;\n\tz-index: 15;\n\talign-self: center;\n\talign-items: center;\n\tmargin: 0;\n\tpadding: 0;\n\n\t// allow scroll\n\toverflow: auto;\n\n\t// hide scroll bar\n\t::-webkit-scrollbar {\n\t\twidth: 0px;  /* Remove scrollbar space */\n\t\tbackground: transparent;  /* Optional: just make scrollbar invisible */\n\t}\n\t::-webkit-scrollbar-thumb {\n\t\tbackground: #FF0000;\n\t}\n\n`\n\nexport const ListContainer = styled.div`\n\t// full entire container\n    width: 100%;\n\tmax-height: calc(100% - 8rem);\n\n\n\t// flex layout\n\tdisplay: flex;\n\tflex-direction: row;\n\tflex-wrap: wrap;\n\talign-items:center;\n\tjustify-content: center;\n`\n\n\n// overwrite dashboard button container style\nexport  const ButtonContainerCss = css`\n\t// large screen style\n\n\t@media (min-width: ${props => props.theme.widthBreakpoint.mobileL}){\n\t\twidth: 100%;\n\t\tmax-width: 100%;\n    }\n\n    @media (min-width: ${props => props.theme.widthBreakpoint.tablet}){\n\t\twidth: 45%;\n\t\tmargin-left: .5rem;\n\t\tmargin-right: .5rem;\n    }\n\n`\n","import styled from 'styled-components'\nimport CloseOutlinedIcon from '@material-ui/icons/CloseOutlined';\nimport {RGB_Linear_Shade, hexToRGBA, LightenDarkenColor} from \"../../../../../methods/utils/color_utils\";\nimport * as pageStyle from \"../dashboards_header/dashboards_header.style\"\n\n\nexport const FooterContainer = styled.div`\n\twidth: 100%;\n\tdisplay: flex;\n\toverflow-x: scroll;\n\toverflow-y: hidden;\n\tpadding: 1rem;\n\tborder-top: 1px solid ${props => props.theme.bg.quaternary};\n\tbackground: ${props => props.theme.bg.tertiary + \"B1\"};\n`\n\n// export const\n\nexport const Title = styled(pageStyle.Title)`\n    margin: 0;\n    padding: 0;\n    \n    font-size: ${props => props.isSmall && props.theme.fontSize.sz2};\n    \n    \n`\nexport const Header = styled(pageStyle.Header)`\n    justify-content: center;\n`\n\nexport const Container = styled.div`\n    width: 100%;\n    min-width: ${props => props.width};\n    height: 100%;\n    display: flex;\n    \n    flex-direction: column;\n    // justify-content: flex-start;\n    align-items: center;\n    z-index: 1;\n\n    flex: 1;\n    background: ${props => LightenDarkenColor(props.theme.bg.quaternary, 20)};\n    \n`\n\n\n\nexport const CloseButton = styled(CloseOutlinedIcon)`\n\tz-index: 5;\n`\n\nexport const ListContainer = styled.div`\n    width: 100%;\n    height: 100%;\n    max-height: 100%;\n    padding-top: 3rem;\n\n    padding-left: 2rem;\n    padding-right: 2rem;\n    \n    \n    display: flex;\n    flex-direction: column;\n    // align-items: center;\n    // align-self: center;\n    \n    overflow-y: auto;\n    overflow-x: hidden;\n    z-index: 1;\n    \n    background: ${props => LightenDarkenColor(props.theme.bg.quaternary, 20)};\n    \n    \n    // hide scroll bar\n    ::-webkit-scrollbar {\n        width: 0px;  /* Remove scrollbar space */\n        background: transparent;  /* Optional: just make scrollbar invisible */\n    }\n    ::-webkit-scrollbar-thumb {\n        background: transparent;\n    }\n    \n`\n\n// adds padding to handle to make it easier to click\nexport const HandleContainer = styled.div`\n    padding: .75rem;\n    position: absolute;\n    right: -2rem;\n    top: 50%;\n    transform: translateY(-50%);\n  \n    &:hover {\n        cursor: grab;\n    }\n    z-index:3;\n`\n\nexport const HandleIcon = styled.div`\n    width: 10px;\n    background: ${props => props.theme.bg.septenary};\n    height: 3rem;\n     border-radius: .25rem;\n`\n\n// NEW SIDEBAR STUFF\nexport const SidebarWrapper = styled.div`\n    height: 100%;\n    position: relative;\n\n    display: flex;\n    align-items: stretch;\n    flex-flow: row nowrap;\n    flex-direction: row;\n    width: 100%;\n    flex-grow: 0;\n    z-index: 1;\n\n    background: white;\n    overflow: hidden;\n\n    // box-shadow: 2px 0px 6px 2px rgba(0,0,0,0.4);\n`\n\nexport const SidebarContent = styled.div`\n    display: flex;\n    align-self: stretch;\n    flex-grow: 1;\n\n    // background: ${props => props.theme.bg.primary};\n    z-index: 1;\n\n    border-right: 8px solid ${props => LightenDarkenColor(props.theme.bg.quinary,20)};\n    \n`\n\nexport const ResizeBar = styled.div`\n    cursor: ew-resize;\n    width: 8px;\n    margin-right: -8px;\n    background: transparent;\n    display: flex;\n    z-index: 20;\n    align-items: center ;\n    align-content: center ;\n    justify-content: center;\n`\n\nexport const ResizeHandle = styled.div`\n    cursor: ew-resize;\n    width: 4px;\n    height: 30px;\n    background: ${props => props.theme.bg.octonary};\n    border-radius: 8px;\n    text-align: center;\n    z-index: 2;\n    overflow: hidden;\n    display: flex;\n    align-items: center ;\n\n`","import styled from \"styled-components\";\n\nexport const WidgetText = styled.span`\n\tfont-size: ${props => props.labelSize ? props.labelSize : props.theme.fontSize.sz6};\n\tfont-family: ${props => props.theme.font.primary};\n\t\n\ttext-align: center;\n\talign-self:center;\n\t\n\tcolor: ${props => props.selected ? props.theme.bg.octonary : props.theme.bg.primary};\n\t\n\twhite-space: nowrap;\n\toverflow: hidden;\n\ttext-overflow: ellipsis;\n`;\n\n\nexport const WidgetIcon = styled.i`\n    font-size: 2.2rem;\n    color: ${props =>  props.color };\n\n    @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n        font-size: 2rem;\n    }\n    \n    font-size: 2.2rem;\n    margin-bottom:0.3rem;\n    align-self:center;\n\n    @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n        font-size: 2rem;\n    }\n`\n\nexport const WidgetButton = styled.button`\n\tdisplay:flex;\n\tposition: relative;\n    flex-direction: column;\n    justify-content: center;\n    \n    border: none;\n    border-radius: 1rem;\n    text-align: center;\n    width: 4rem;\n    min-width: 4rem;\n    height: 4rem;\n    max-height: 4rem;\n    min-height: 4rem;\n    outline:none;\n    overflow: hidden;\n    \n    padding-top:.5rem;\n\n    box-shadow: 0 0.1rem 0.2rem 0rem #303030;\n\n    background-color: ${props => props.selected ? props.theme.bg.quaternary : props.theme.bg.septenary};\n\n    transition: background-color 0.25s ease, box-shadow 0.1s ease;\n\n    &:hover{\n        background-color: ${props => props.theme.bg.senary};\n    }\n\n    &:focus{\n        outline: 0 !important\n    }\n\n    &:active{\n        box-shadow: none;\n    }\n\n    @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n        width: 3.5rem;\n        height: 3.5rem;\n        border-radius: .5rem;\n        \n    }\n`;","import React from 'react';\n\n\nimport * as styled from './widget_button.style';\n\n\nconst WidgetButton = props => {\n\n\t// extract props\n\tconst {\n\t\tlabel,\n\t\tcolor,\n\t\ticonClassName,\n\t\tselected,\n\t\tonClick,\n\t\tcontainerStyle,\n\t\tchildren,\n\t\tlabelSize\n\t} = props\n\n\treturn(\n\t\t<styled.WidgetButton\n\t\t\ttype={\"button\"}\n\t\t\tonClick={onClick}\n\t\t\tselected={selected}\n\t\t\tstyle={containerStyle}\n\t\t>\n\t\t\t{children && children}\n\t\t\t<styled.WidgetIcon selected={selected} color={color} className={iconClassName}/>\n\t\t\t{label &&\n\t\t\t\t<styled.WidgetText selected={selected} labelSize={labelSize}>{label}</styled.WidgetText>\n\t\t\t}\n\t\t</styled.WidgetButton>\n\n\t)\n}\n\nexport default WidgetButton\n","import React, { useContext, useEffect, useRef, useState } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { DraggableCore } from \"react-draggable\";\nimport { Container } from 'react-smooth-dnd'\n\nimport * as style from \"./dashboards_sidebar.style\"\nimport { ThemeContext } from \"styled-components\";\n\n// components\nimport DashboardSidebarButton from \"./dashboard_sidebar_button/dashboard_sidebar_button\";\nimport TaskAddedAlert from \"../dashboard_screen/task_added_alert/task_added_alert\";\n\n// Helpers\nimport { handleAvailableTasks } from \"../../../../../methods/utils/dashboards_utils\";\n\n// Import Utils\nimport {ADD_TASK_ALERT_TYPE, DASHBOARD_BUTTON_COLORS} from \"../../../../../constants/dashboard_contants\";\nimport uuid from 'uuid'\n\n// Import Actions\nimport { postTaskQueue } from '../../../../../redux/actions/task_queue_actions'\n\nimport log from '../../../../../logger'\nimport WidgetButton from \"../../../../basic/widget_button/widget_button\";\n\nconst logger = log.getLogger(\"Dashboards\")\n\n\n\nexport const OPERATION_TYPES = {\n    REPORT: {\n        schema: \"error\",\n        name: \"Report\",\n        key: \"REPORT\",\n        _id: 0\n    },\n    KICK_OFF: {\n        schema: \"kick_off\",\n        key: \"KICK_OFF\",\n        name: \"Kick off\",\n        _id: 1\n    },\n    FINISH: {\n        schema: \"finish\",\n        key: \"FINISH\",\n        name: \"Finish\",\n        _id: 2\n    }\n}\n\nexport const TYPES = {\n    // ALL: {\n    //     name: \"ALL\",\n    //     iconName: \"fal fa-globe\"\n    // },\n    ROUTES: {\n        name: \"Routes\",\n        iconName: \"fas fa-route\",\n        key: \"ROUTES\"\n    },\n    OPERATIONS: {\n        name: \"Operations\",\n        iconName: \"fas fa-sticky-note\",\n        key: \"OPERATIONS\"\n    }\n}\n\nconst DashboardsSidebar = (props) => {\n\n    const {\n        width,\n        setWidth,\n        minWidth,\n        showSideBar,\n        stationID,\n        clickable,\n        dashboardId\n    } = props\n\n\n    /*\n    * Tests sidebar width to  determine if styling should be for small or large width\n    * Returns true if width is less than breakpoint, and false otherwise\n    * */\n    const testSize = (width) => {\n        return width < 500\n    }\n\n    /*\n    * ref for scrollable list containing buttons\n    * */\n    const listRef = useRef(null);\n\n    // theme\n    const themeContext = useContext(ThemeContext);\n\n    /*\n    * boolean value for storing width state\n    * isSmall is true if width is less than breakpoint and false otherwise\n    * */\n    const [isSmall, setSmall] = useState(testSize(width)); // used for tracking sidebar dimensions\n\n    const [type, setType] = useState(TYPES.ROUTES.key); // used for tracking sidebar dimensions\n\n    // redux state\n    const dispatch = useDispatch()\n    const tasks = useSelector(state => state.tasksReducer.tasks)\n    const stations = useSelector(state => state.stationsReducer.stations)\n    const code409 = useSelector(state => { return state.taskQueueReducer.error })\n\n    const kickOffEnabledInfo = useSelector(state => { return state.dashboardsReducer.kickOffEnabledDashboards[dashboardId] })\n    const kickOffEnabled = kickOffEnabledInfo && Array.isArray(kickOffEnabledInfo) && kickOffEnabledInfo.length > 0\n\n    const finishEnabledProcesses = useSelector(state => { return state.dashboardsReducer.finishEnabledDashboards[dashboardId] })\n    const finsihedEnabled = finishEnabledProcesses && Array.isArray(finishEnabledProcesses) && finishEnabledProcesses.length > 0\n\n    // self contained state\n    const [addTaskAlert, setAddTaskAlert] = useState(null)\n\n    const handleTaskClick = (Id) => {\n        const clickedTask = tasks[Id]\n        const name = clickedTask?.name\n\n        // add alert to notify task has been added\n        setAddTaskAlert({\n            type: ADD_TASK_ALERT_TYPE.ADDING,\n            message: \"Adding to Queue...\"\n        })\n\n        // dispatch action to add task to queue\n        const postPromise = dispatch(postTaskQueue({ _id: uuid.v4(),\"task_id\": Id }))\n        postPromise.then(() => {\n            try {\n                // code409 is returned if task is already in the queue\n                if (code409.response.data.status === 409) {\n                    // display alert notifying user that task is already in queue\n                    setAddTaskAlert({\n                        type: ADD_TASK_ALERT_TYPE.TASK_EXISTS,\n                        label: \"Alert! Task Already in Queue\",\n                        message: \"'\" + name + \"' not added\"\n                    })\n                }\n\n            } catch {\n                // display alert notifying user that task was successfully added\n                setAddTaskAlert({\n                    type: ADD_TASK_ALERT_TYPE.TASK_ADDED,\n                    label: \"Task Added to Queue\",\n                    message: name\n                })\n            }\n\n            // clear alert after timeout\n            setTimeout(() => setAddTaskAlert(null), 1800)\n        })\n\n\n    }\n\n    const handleReportClick = (Id) => {\n\n    }\n\n    const station = stations[stationID]\n\n    var availableTasks = []\n    try {\n        availableTasks = handleAvailableTasks(tasks, station)\n    }\n    catch (e) {\n        logger.log(\"availableTasks availableTasks\", availableTasks)\n        logger.log(\"availableTasks e\", e)\n    }\n\n    const getRouteButtons = () => {\n        return availableTasks\n            .map((task, index) => {\n            return {\n                name: task.name,\n                color: DASHBOARD_BUTTON_COLORS[index % DASHBOARD_BUTTON_COLORS.length].hex,\n                type: TYPES.ROUTES.key,\n                task_id: task._id,\n                id: task._id,\n            }\n        })\n    }\n\n    const getReportButtons = () => {\n        return Object.entries(OPERATION_TYPES).filter((currEntry, ind) => {\n            const currKey = currEntry[0]\n\n            if(currKey === null) return true // allows old routes that were created without a type to still be rendered\n\n            if(currKey === null) return true // allows old routes that were created without a type to still be rendered\n\n            if(currKey === OPERATION_TYPES.REPORT.key) return true\n\n            if((currKey === OPERATION_TYPES.KICK_OFF.key) && kickOffEnabled) return true\n\n            if((currKey === OPERATION_TYPES.FINISH.key) && finsihedEnabled) return true\n\n        }).map((currEntry, ind) => {\n\n            const currValue = currEntry[1]\n            const currKey = currEntry[0]\n\n            return {\n                name: currValue.name,\n                color: DASHBOARD_BUTTON_COLORS[ind % DASHBOARD_BUTTON_COLORS.length].hex,\n                // themeContext.schema[currValue.schema].solid,\n                id: currValue._id,\n                type: currKey,\n            }\n        })\n    }\n\n    var availableButtons = []\n    var availableReportButtons = []\n\n    switch(type) {\n        case TYPES.ROUTES.key:\n            availableButtons = getRouteButtons()\n            break\n        case TYPES.OPERATIONS.key:\n            availableReportButtons = getReportButtons()\n            break\n\n        // case TYPES.ALL.name:\n        //     availableButtons = getRouteButtons()\n        //     availableReportButtons = getReportButtons()\n        //     break\n\n        default:\n            break\n    }\n\n    function handleDrag(e, ui) {\n        setWidth(Math.max(minWidth, width + ui.deltaX))\n        setSmall(testSize(Math.max(minWidth, width + ui.deltaX)))  // check if width is less than styling breakpoint and update isSmall\n    }\n\n    const renderTypeButtons = () => {\n        return(\n            Object.entries(TYPES).map((currEntry, index) => {\n                const currKey = currEntry[0]\n                const currValue = currEntry[1]\n                return (\n                    <WidgetButton\n                        containerStyle={{marginRight: \"1rem\"}}\n                        label={currValue.name}\n                        color={themeContext.schema[currKey.toLocaleLowerCase()].solid}\n                        iconClassName={currValue.iconName}\n                        selected={type === currKey}\n                        onClick={()=>setType(currKey)}\n                        labelSize={\"0.5rem\"}\n\n                    />\n                )\n            })\n        )\n    }\n\n    return (\n        <style.SidebarWrapper onClick={() => setAddTaskAlert(null)}>\n            <style.SidebarContent\n                key=\"sidebar-content\"\n                style={{ width: width }}\n            >\n                <style.Container>\n                    <style.ListContainer>\n                        <Container\n                            groupName=\"dashboard-buttons\"\n                            getChildPayload={index =>\n                                availableButtons[index]\n                            }\n                        >\n                            {availableButtons.map((button, index) => {\n\n                                return (\n                                    <DashboardSidebarButton\n                                        key={`dashboard-sidebar-button-${button.id}`}\n                                        name={button.name}\n                                        color={button.color}\n                                        task_id={button.task_id}\n                                        id={button.id}\n                                        clickable={clickable}\n                                        onTaskClick={handleTaskClick}\n                                        disabled={!!addTaskAlert}\n                                    />\n                                )\n                            })}\n                        </Container>\n                        <Container\n                            groupName=\"dashboard-buttons\"\n                            getChildPayload={index =>\n                                availableReportButtons[index]\n                            }\n                        >\n                            {availableReportButtons.map((button, index) => {\n                                return (\n                                    <DashboardSidebarButton\n                                        key={`dashboard-sidebar-button-${button.id}`}\n                                        name={button.name}\n                                        color={button.color}\n                                        id={button.id}\n                                        clickable={clickable}\n                                        onTaskClick={handleReportClick}\n                                        disabled={!!addTaskAlert}\n                                    />\n                                )\n                            })}\n                        </Container>\n                    </style.ListContainer>\n\n                    <style.FooterContainer>\n                        {renderTypeButtons()}\n                    </style.FooterContainer>\n                </style.Container>\n\n                <DraggableCore key=\"handle\" onDrag={handleDrag} >\n                    <style.ResizeBar>\n                        <style.ResizeHandle></style.ResizeHandle>\n                    </style.ResizeBar>\n                </DraggableCore>\n            </style.SidebarContent>\n\n            <TaskAddedAlert\n                {...addTaskAlert}\n                visible={!!addTaskAlert}\n            />\n        </style.SidebarWrapper>\n    )\n}\n\nexport default DashboardsSidebar\n","export const postToDashboards = (dashboardName) => {\n    // Requires: buttonID, param, type, buttonName, dashboardName\n    const newDashboard = {\n        \"buttons\": [\n        ],\n        \"name\": dashboardName,\n        \"saved\": false,\n    }\n    return newDashboard     \n}\n\nexport const findDashboardByID = (availableDashboards, ID) => {\n    const dashboardNameIndex = Object.values(availableDashboards).findIndex(d => {\n        return d._id.$oid === ID;\n    })\n    return dashboardNameIndex\n}\n\nexport const handleAvailableTasks = (tasks, station) => {\n    let availableTasks = []\n    Object.values(tasks).forEach(task => {\n        if ((task.type == 'push' || task.type == 'both') && task.load.station == station._id) {\n            availableTasks.push(task)\n        } else if ((task.type == 'pull' || task.type == 'both') && task.unload.station == station._id) {\n            availableTasks.push(task)\n        }\n    })\n    return availableTasks\n}\n\nexport const handleCurrentDashboard = (dashboards, dashboardID) => {\n    let availableDash = []\n    Object.assign(availableDash, dashboards)\n\n    availableDash = Object.values(availableDash)\n\n    const dashboardNameIndex = Object.values(availableDash).findIndex(d => {\n        return d._id.$oid === dashboardID;\n    })\n\n    return availableDash[dashboardNameIndex]\n}","import styled, { css } from 'styled-components'\n\nimport { hexToRGBA, RGB_Linear_Shade, LightenDarkenColor } from '../../../../../../methods/utils/color_utils';\nimport { borderGlowCss, ContainerCss, conditionTextCss } from \"../dashboard_buttons.style\"\n\n\nconst ButtonStyle = css`\n    height: 100%;\n    outline: none;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    &:focus {\n      outline: none;\n    }\n    padding: 0;\n    margin: 0;\n    letter-spacing: 1.5px;\n    border: none;\n    transition: all 0.1s ease 0s;\n    cursor: pointer;\n    outline: none;\n    \n    ${props => props.clickable && !props.disabled &&\n        `&:active {\n            background: ${`linear-gradient(180deg, \n                ${LightenDarkenColor(props.background, -20)} 0%, \n                ${props.background} 50%, \n                ${LightenDarkenColor(props.background, 20)} 100%)`\n            }\n        }`\n    }\n    \n    ${props => props.disabled &&\n        {\n            color: props.theme.bg.quaternary,\n            background: `linear-gradient(180deg, rgba(255,255,255,0.4) 0%, rgba(255,255,255,0.4) 100%), ${LightenDarkenColor(props.background, -60)}`,\n            pointerEvents: \"none\",\n        }\n    }\n    \n`\n\nexport const Header = styled.div`\n    margin: 0;\n    padding: 0;\n    width: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 1.5rem;\n`\n\nexport const ContentContainer = styled.div`\n    display: flex;\n    flex: 2;\n    width: 100%;\n    overflow: hidden;\n`\n\nexport const RobotButton = styled.div`\n    flex: 3;\n    ${ButtonStyle};\n    justify-content: space-around;\n    align-items: center;\n    background: rgba(0,0,0,0);\n    display: flex;\n    flex-direction: column;\n\n`\n\nexport const HumanButton = styled.button`\n    ${ButtonStyle};\n    flex: 1;\n    border-left: 1px solid ${props => props.theme.bg.tertiary};\n    background: ${props => `linear-gradient(180deg, \n                            ${LightenDarkenColor(props.background, -40)} 0%, \n                            ${LightenDarkenColor(props.background, -50)} 50%, \n                            ${LightenDarkenColor(props.background, -60)} 100%)`};\n`\n\nexport const Container = styled.button`\n  ${ContainerCss};\n  \n  // flex layout\n  flex-direction: row;\n\t\n  // padding\n  padding: 0;\n  \n\n`\n\nexport const ConditionText = styled.span`\n    ${conditionTextCss};\n    \n    height: fit-content;\n    display: inline-flex;\n    align-items:center;\n    padding: 0;\n    margin: 0;\n    height: 1.25rem;\n`","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\n// import components\nimport ErrorTooltip from \"../../../../../basic/form/error_tooltip/error_tooltip\";\nimport {SchemaIcon} from \"../../dashboard_editor/button_fields/button_fields.style\";\n\n// Import Styles\nimport * as style from './dashboard_split_button.style'\nimport * as dashboard_buttons_style from '../dashboard_buttons.style'\n\n// import logging\nimport log from '../../../../../../logger'\nimport {DEVICE_CONSTANTS} from \"../../../../../../constants/device_constants\";\n\nconst logger = log.getLogger(\"Dashboards\", \"EditDashboard\");\n\nconst DashboardSplitButton = (props => {\n\n    const {\n        color,\n        title,\n        children,\n        onClick,\n        taskID,\n        disabled,\n        width,\n        height,\n        clickable,\n        hoverable,\n        containerStyle,\n        containerCss,\n        error,\n        iconColor,\n    } = props\n\n    return (\n        <style.Container\n            type={\"button\"}\n            disabled={disabled}\n            width={width}\n            height={height}\n            background={color}\n            borderGlow={taskID === 'hil_success'}\n            style={containerStyle}\n            css={containerCss}\n        >\n            <style.RobotButton\n                background={color}\n                clickable={clickable}\n                onClick={clickable ? () => onClick(taskID, DEVICE_CONSTANTS.MIR_100) : null}\n\n            >\n                <style.ConditionText style={null}>{title}</style.ConditionText>\n\n                <SchemaIcon className={\"icon-cart\"} style={{fontSize: \"1rem\"}} color={iconColor}></SchemaIcon>\n            </style.RobotButton>\n\n            <style.HumanButton\n                clickable={clickable}\n                background={color}\n                onClick={clickable ? () => onClick(taskID, DEVICE_CONSTANTS.HUMAN) : null}\n            >\n                <SchemaIcon className={\"fas fa-user\"} color={iconColor}></SchemaIcon>\n            </style.HumanButton>\n\n            {children && children}\n            <ErrorTooltip\n                visible={error}\n                text={error}\n                ContainerComponent={dashboard_buttons_style.ErrorContainerComponent}\n            />\n        </style.Container>\n    )\n})\n\n// Specifies propTypes\nDashboardSplitButton.propTypes = {\n    clickable: PropTypes.bool,\n    hoverable: PropTypes.bool,\n    title: PropTypes.string,\n    taskID: PropTypes.string,\n    onClick: PropTypes.func,\n    disabled: PropTypes.bool\n};\n\n// Specifies the default values for props:\nDashboardSplitButton.defaultProps = {\n    clickable: true,\n    hoverable: true,\n    title: \"\",\n    taskID: \"\",\n    onClick: () => { },\n    disabled: false\n\n};\n\nexport default (DashboardSplitButton)\n","import React, { useRef, useEffect, useState } from 'react';\n\n// import external components\nimport ReactList from 'react-list';\n\n// import internal components\nimport DashboardButton from \"../../dashboard_buttons/dashboard_button/dashboard_button\";\n\n// style\nimport * as style from \"./dashboard_button_list.style\"\n\n// redux\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getTasks } from '../../../../../../redux/actions/tasks_actions'\n\n// logging\nimport log from \"../../../../../../logger\"\nimport { deepCopy } from \"../../../../../../methods/utils/utils\";\nimport { OPERATION_TYPES, TYPES } from \"../../dashboards_sidebar/dashboards_sidebar\";\nimport { theme } from \"../../../../../../theme\";\nimport DashboardSplitButton from \"../../dashboard_buttons/dashboard_split_button/dashboard_split_button\";\nconst logger = log.getLogger(\"Dashboards\")\n\n\n/*\n*  Renders list of buttons for a Dashboard\n* */\nconst DashboardButtonList = ((props) => {\n\n    const dispatch = useDispatch()\n\n    const dispatchGetTasks = () => dispatch(getTasks())\n\n    const { buttons, addedTaskAlert, onTaskClick } = props\n\n    // ref for list of buttons\n    const listRef = useRef(null);\n\n    // redux state\n    const tasks = useSelector(state => state.tasksReducer.tasks)\n\n    useEffect(() => {\n        dispatchGetTasks()\n    }, [])\n\n    // renders individuals buttons for list\n    const itemRenderer = (index, key) => {\n\n        const currentButton = buttons[index]\n\n        let broken = false\n        let name = currentButton.name\n        const type = currentButton?.type\n        let taskID = currentButton.task_id\n        const task = tasks[taskID]\n        // const associatedTaskId = task?.associated_task\n        const deviceTypes = task?.device_types || []\n\n        // If the task is in tasks or it's a custom task or hil success, then it exists\n        const taskExists = !!tasks[taskID] ? true : taskID === 'custom_task' ? true : taskID === 'hil_success' ? true : false\n\n        var disabled\n        var error\n        var onClick\n\n        const handleRouteClick = () => {\n            disabled = addedTaskAlert || currentButton.deleted || broken || !taskExists\n            error = !taskExists ? \"This buttons task has been deleted.\" : null\n            onClick = (associatedTaskIdArg, deviceType) => {\n                if (taskID === 'custom_task' || taskID === 'hil_success') {\n                    onTaskClick(TYPES.ROUTES.key, associatedTaskIdArg, name, currentButton.custom_task, !!deviceType ? deviceType : currentButton.deviceType)\n                } else {\n                    onTaskClick(TYPES.ROUTES.key, associatedTaskIdArg, name, null, deviceType)\n                }\n            }\n        }\n        switch (type) {\n            case TYPES.ROUTES.key:\n                handleRouteClick()\n                break\n\n            case OPERATION_TYPES.REPORT.key:\n                disabled = addedTaskAlert || currentButton.deleted || broken\n                error = null\n                onClick = () => {\n                    onTaskClick(OPERATION_TYPES.REPORT.key, currentButton.key)\n                }\n                break\n\n            case OPERATION_TYPES.FINISH.key:\n                disabled = addedTaskAlert || currentButton.deleted || broken\n                error = null\n                onClick = () => {\n                    onTaskClick(OPERATION_TYPES.FINISH.key, currentButton.key)\n                }\n                break\n\n            case OPERATION_TYPES.KICK_OFF.key:\n                error = null\n                onClick = () => {\n                    onTaskClick(type)\n                }\n                break\n\n            default:\n                handleRouteClick()\n                break\n        }\n\n        var schema\n        var iconClassName = \"\"\n        var iconColor\n\n        if (type && (typeof type === 'string' || type instanceof String)) {\n            schema = theme.main.schema[type.toLowerCase()]\n            iconClassName = schema?.iconName\n            iconColor = schema?.solid\n        }\n\n        if (deviceTypes.length > 1) return (\n            <DashboardSplitButton\n                title={name}\n                iconColor={\"black\"}\n                iconClassName={iconClassName}\n                key={index}\n                type={type}\n                onClick={onClick}\n                containerStyle={{ height: '4rem', lineHeight: '3rem', marginBottom: '0.5rem', minWidth: '80%' }}\n                hoverable={false}\n                taskID={taskID}\n                color={currentButton.color}\n                disabled={disabled}\n                containerCss={style.ButtonContainerCss}\n                error={error}\n            >\n            </DashboardSplitButton>\n        )\n\n        return (\n            <DashboardButton\n                deviceType={deviceTypes[0]}\n                title={name}\n                iconColor={iconColor}\n                iconClassName={iconClassName}\n                key={index}\n                type={type}\n                onClick={onClick}\n                containerStyle={{ height: '4rem', lineHeight: '3rem', marginBottom: '0.5rem', minWidth: '80%' }}\n                hoverable={false}\n                taskID={taskID}\n                color={currentButton.color}\n                disabled={disabled}\n                containerCss={style.ButtonContainerCss}\n                error={error}\n            />\n        )\n    }\n\n    return (\n        <style.Container>\n            <ReactList\n                ref={listRef}\n                itemRenderer={itemRenderer}\n                length={buttons.length}\n                type='uniform'\n                itemsRenderer={(items, ref) => {\n                    return (\n                        <style.ListContainer ref={ref}>\n                            {items}\n                        </style.ListContainer>\n\n                    )\n                }}\n            />\n        </style.Container>\n    )\n})\n\nexport default DashboardButtonList\n","import styled from \"styled-components\";\n\nexport const ExpandContainer = styled.div`\n    position: absolute;\n    right: ${props => !!props.showTaskQ ? '20rem' : '0rem'};\n    top: 0rem;\n    bottom: 0rem;\n    margin: auto;\n    height: 15rem;\n    width: 10rem;\n    /* z-index: ${props => props.showTaskQ ? 20 : 10}; */\n    z-index: 15;\n    /* border-radius: 1rem 0rem 0rem 1rem; */\n\n    display: flex;\n    align-items: center;\n\n    /* background-color: ${props => props.theme.bg.quinary}; */\n\n\n`\n\nexport const ExpandIcon = styled.i`\n    z-index: 1;\n    position: absolute;\n    right: .5rem;\n    font-size: 2rem;\n\n    &:hover{\n        cursor: pointer;\n    }\n`\n\nexport const ExpandSVG = styled.svg`\n    position: absolute;\n    top: 0rem;\n\n\n    height: 100%;\n    width: 100%;\n`\n\nexport const ExpandPath = styled.path`\n    background-color: ${props => props.theme.bg.quinary};\n\n    &:hover{\n        cursor: pointer;\n    }\n`\n\nexport const TaskQContatiner = styled.div`\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding-top: 1rem;\n    z-index: ${props => props.showTaskQ ? 20 : 10};\n\n    position: absolute;\n    top: 0rem;\n    bottom: 0rem;\n    right: 0rem;\n\n    /* width: 20rem; */\n    width: 100%;\n\n    background-color: ${props => props.theme.bg.quinary};\n\n`\n\nexport const Title = styled.h1`\n    font-family: ${props => props.theme.font.primary};\n    font-size: 2rem;\n    font-weight: 500;\n    color: ${props => props.theme.schema[props.schema].solid};\n`\n\nexport const CloseButton = styled.i`\n    position: absolute;\n    top: 0rem;\n    right: 1rem;\n    font-size: 2.5rem;\n    margin: 1rem;\n`","import React, { Component, useState, useRef } from 'react';\nimport * as styled from './dashboard_task_queue.style'\n\nimport useOnClickOutside from '../../../../../../hooks/useOnClickOutside'\n\nimport theme from '../../../../../../theme'\n\nimport TaskQueue from '../../../../../task_queue/task_queue'\n\nconst DashboardTaskQueue = () => {\n\n    // Ref for click outside\n    const ref = useRef()\n\n    const [showTaskQ, setShowTaskQ] = useState(false)\n\n    useOnClickOutside(ref, () => setShowTaskQ(false))\n\n    const path = `\n        M 1000 0 \n        Q 1000 80 910 140 \n        Q 450 500 910 860 \n        Q 1000 920 1000 1000 \n    `\n    return (\n        <>\n            {!showTaskQ ?\n\n                <styled.ExpandContainer showTaskQ={showTaskQ}>\n                    <styled.ExpandIcon className={'fa fa-tasks'} onClick={() => { setShowTaskQ(!showTaskQ) }} />\n\n                    <styled.ExpandSVG viewBox='0 0 1000 1000'>\n                        <styled.ExpandPath d={path} fill={theme.main.bg.quinary} onClick={() => { setShowTaskQ(!showTaskQ) }} />\n                    </styled.ExpandSVG>\n\n\n\n                    {/* <styled.ExpandIcon className={'fas fa-chevron-' + (!!showTaskQ ? 'right' : 'left')} /> */}\n\n                </styled.ExpandContainer>\n\n                :\n\n                <styled.TaskQContatiner showTaskQ={showTaskQ} ref={ref}>\n                    <styled.Title schema={'taskQueue'}>Task Queue</styled.Title>\n                    <styled.CloseButton\n                        className={'fas fa-times'}\n                        onClick={() => { setShowTaskQ(!showTaskQ) }}\n                    />\n\n\n                    <TaskQueue />\n                </styled.TaskQContatiner>\n            }\n        </>\n    )\n}\n\nexport default DashboardTaskQueue","import styled from \"styled-components\";\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport {RGB_Linear_Shade, hexToRGBA} from \"../../../../../methods/utils/color_utils\";\n\nexport const Container = styled.div`\n    \n    // flex layout\n    display: flex;\n    flex-direction: column;\n    \n    width: 100%;\n    height: 100%;\n    max-height: 100%;\n    // overflow: hidden;\n    \n    background: ${props => props.theme.bg.quaternary};\n    \n`\n\nexport const ButtonContainer = styled.div`\n\n\n`\n\n\nexport const GoBackButton = styled(ArrowBackIosIcon)`\n    color: ${props => props.theme.fg.primary};\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz1};\n    \n    transition: all .25s;\n    &:hover {\n        color: ${props => RGB_Linear_Shade(props.theme.hoverHighlightPer, hexToRGBA(props.theme.fg.primary))};\n        cursor: grab;\n    }\n    margin-left: 1rem;\n    \n`","import styled from 'styled-components';\nimport {TwitterPicker} from \"react-color\";\n// import \"./color_field.css\"\n\nexport const DefaultContainer = styled.div`\n\tposition: absolute;\n\tz-index: 0;\n`\n\n// ===== Color Selector ===== //\nexport const ColorPicker = styled.div`\n    display: flex;\n\tflex-grow: 1;\n\t\n\tposition: absolute;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translate(-50%, -50%);\n\n`\n\nexport const StyledTwitterPicker = styled.div`\n\t&& .twitter-picker {\n\t\tbackground: ${props => props.theme.bg.quinary} !important;\n\t\tborder-radius: 1rem;\n\t}\n\t\n\t.twitter-picker span {\n\t}\n\t\n\t.twitter-picker div {\n\t\tborder-radius: .5rem;\n\t}\n\t\n\tdiv {\n\t\tborder-radius: .5rem;\n\t}\n\t\n\ttwitter-picker {\n\t}\n`\n\n\nexport const ColorButton = styled.button`\n    color: black;\n\tbackground: white;\n\n`\n\nexport const DropdownMenu = styled.div`\n`\n\nexport const ColorOption = styled.button`\n    &:hover {\n      background: ${props => props.color};\n\t}\n\n`\n","import React from \"react\";\n\n// external functions\nimport PropTypes from 'prop-types';\nimport { useField, useFormikContext } from \"formik\";\n// external components\nimport { TwitterPicker } from 'react-color'\n\n// internal components\nimport ErrorTooltip from '../error_tooltip/error_tooltip';\n\n// styles\nimport * as styled from './color_field.style'\n\nconst ColorField = (props) => {\n\n\tconst {\n\t\tContainer,\n\t\ttype,\n\t\tmode,\n\t\tcolors,\n\t\t...rest\n\t} = props\n\n\t// formik related\n\tconst { setFieldValue, setFieldTouched, validateOnChange, validateOnBlur, validateField, validateForm, ...context } = useFormikContext();\n\tconst [field, meta] = useField(props);\n\tconst hasError = meta.touched && meta.error;\n\n\n\treturn (\n\t\t<Container>\n\n\t\t\t{mode === \"twitter\" ?\n\t\t\t\t<styled.StyledTwitterPicker>\n\t\t\t\t<TwitterPicker\n\t\t\t\t\tcolor={ field.value }\n\t\t\t\t\tonChangeComplete={(color)=>{\n\t\t\t\t\t\tsetFieldValue(field.name, color.hex);\n\t\t\t\t\t\tconsole.log(\"ColorField: onChangeComplete: color\",color)\n\t\t\t\t\t}}\n\t\t\t\t\tonChange={(color)=>{\n\t\t\t\t\t\tconsole.log(\"ColorField: onChange: color\",color)\n\t\t\t\t\t\t// setFieldValue(field.name, color.hex);\n\t\t\t\t\t}}\n\t\t\t\t\tstyle={{zIndex: 10}}\n\t\t\t\t\tcolors={colors.map(currColor => currColor.hex)}\n\t\t\t\t\t{...rest}\n\t\t\t\t\ttriangle={\"hide\"}\n\t\t\t\t/>\n\t\t\t\t</styled.StyledTwitterPicker>\n\n\t\t\t\t:\n\t\t\t\t<styled.ColorPicker>\n\t\t\t\t\t<div className=\"dropdown show\" style={{zIndex: '1'}}>\n\t\t\t\t\t\t<styled.ColorButton className=\"btn dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n\t\t\t\t\t\t\tColor\n\t\t\t\t\t\t</styled.ColorButton>\n\n\t\t\t\t\t\t<styled.DropdownMenu className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n\t\t\t\t\t\t\t{colors.map((currColor) => {\n\t\t\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\t\t\thex,\n\t\t\t\t\t\t\t\t\tlabel\n\t\t\t\t\t\t\t\t} = currColor\n\n\t\t\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t\t\t<styled.ColorOption type={type} className=\"dropdown-item\" color={hex} onClick={() => setFieldValue(field.name, hex)}>{label}</styled.ColorOption>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</styled.DropdownMenu>\n\t\t\t\t\t</div>\n\t\t\t\t</styled.ColorPicker>\n\n\t\t\t}\n\n\n\n\n\t\t\t\n\t\t</Container>\n\t);\n};\n\n\n// Specifies propTypes\nColorField.propTypes = {\n\tContainer: PropTypes.elementType,\n\tmode: PropTypes.string,\n\tcolors: PropTypes.arrayOf(PropTypes.string),\n};\n\n// Specifies the default values for props:\nColorField.defaultProps = {\n\tContainer: styled.DefaultContainer,\n\tmode: null,\n\tcolors: [\n\t\t{\n\t\t\thex: '#FF4B4B',\n\t\t\tlabel: \"Red\"\n\t\t},\n\t\t{\n\t\t\thex: '#56d5f5',\n\t\t\tlabel: \"Blue\"\n\t\t},\n\t\t{\n\t\t\thex: '#50de76',\n\t\t\tlabel: \"Green\"\n\t\t},\n\t\t{\n\t\t\thex: '#f2ae41',\n\t\t\tlabel: \"Orange\"\n\t\t},\n\t\t{\n\t\t\thex: '#c7a0fa',\n\t\t\tlabel: \"Purple\"\n\t\t}\n\t]\n};\n\nexport default ColorField;\n","import styled, {css} from 'styled-components'\nimport Modal from 'react-modal';\nimport {Form} from \"formik\";\nimport {LightenDarkenColor} from \"../../../../../../methods/utils/color_utils\";\n\n\nconst borderGlowCss = css`\n    --border-width: .1rem;\n    background: none;\n\n    @keyframes moveGradient {\n        50% {\n          background-position: 100% 50%;\n        }\n      }\n\n    border-radius: var(--border-width);\n\n    &::after {\n    position: absolute;\n    content: \"\";\n    top: calc(-1 * var(--border-width));\n    left: calc(-1 * var(--border-width));\n    z-index: -1;\n    width: calc(100% + var(--border-width) * 2);\n    height: calc(100% + var(--border-width) * 2);\n    background: linear-gradient(\n        60deg,\n        /* hsl(224, 85%, 66%), */\n        /* hsl(269, 85%, 66%), */\n        /* hsl(314, 85%, 66%), */\n        /* hsl(359, 85%, 66%), */\n        hsl(44, 85%, 66%),\n        hsl(89, 85%, 66%),\n        hsl(134, 85%, 66%),\n        hsl(179, 85%, 66%)\n    );\n    background-size: 300% 300%;\n    background-position: 0 50%;\n    border-radius: calc(2 * var(--border-width));\n    animation: moveGradient 4s alternate infinite;\n}\n`\n\nexport const TextboxDiv = styled.div`\n    background-color: ${props => props.theme.bg.quinary};\n    border: none;\n    font-size: ${props => props.theme.fontSize.sz4};\n    font-family: ${props => props.theme.font.primary};\n    font-weight: 500;\n    min-height: 2rem;\n    display: flex;\n    flex-grow: 1;\n    color: ${props => props.theme.bg.octonary};\n    padding: .5rem;\n    border-radius: .5rem;\n\n    box-shadow: 0 0.1rem 0.2rem 0rem rgba(0,0,0,0.1) !important;\n    border-bottom: 2px solid ${props => props.theme.bg.quinary};\n\n    &:focus {\n        background-color: ${props => LightenDarkenColor(props.theme.bg.quinary, 10)};\n        border-bottom: 2px solid ${props => !!props.schema ? props.theme.schema[props.schema].solid : props.theme.fg.primary};\n        color: ${props => props.theme.bg.octonary};\n        outline: none !important;\n    }\n\n    &::placeholder {\n        font-family: ${props => props.theme.font.secondary};\n        color: ${props => props.theme.bg.senary};\n    }\n`;\n\nexport const Container = styled(Modal)`\n\toutline: none !important;\n\toutline-offset: none !important;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translate(-50%, -50%);\n\tright: auto;\n\tbottom: auto;\n\t\n\tposition: absolute;\n\t\n\tz-index: 50;\n\t\n\tmin-width: 95%;\n\tmax-width: 95%;\n\tmax-height: 95%;\n\t// height: 95%;\n\t\n\tcolor: ${props => props.theme.bg.octonary};\n\t\n\tdisplay: flex;\n\tflex-direction: column;\n\t\n\tcolor: ${props => props.theme.bg.octonary};\n\tborder-radius: 1rem;\n\toverflow: hidden;\n`;\n\nexport const HeaderContainer = styled.div`\n\twidth: 100%;\n\tdisplay: flex;\n\tflex-direction: column;\n\tborder-width: 0;\n\tborder-bottom-width: thin;\n\tborder-color: black;\n\tborder-style: solid;\n\tmargin-bottom: 2rem;\n`;\n\nexport const Header = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\tpadding: 0;\n\tmargin: 0;\n\theight: 3rem;\n\tbackground: ${props => props.theme.bg.quinary};\n\t\n`\nexport const Label = styled.span`\n\tpadding-left: 1rem;\n\tfont-size: ${props => props.theme.fontSize.sz3};\n\tmargin-bottom: .25rem;\n`\n\nexport const StyledForm = styled(Form)`\n    display: flex;\n    flex: 1;\n    flex-direction: column;\n    width: 100%;\n    max-width: 100%;\n    position: relative;\n    overflow: scroll;\n`;\n\nexport const Title = styled.h2`\n\tflex: 2;\n\theight: 100%;\n\tmin-height: 100%;\n\tmargin: 0;\n\tpadding: 0;\n\ttext-align: center;\n\tdisplay: inline-flex;\n\tjustify-content: center;\n\talign-items: center;\n\t\n\tfont-size: ${props => props.theme.fontSize.sz2};\n\tfont-weight: ${props => props.theme.fontWeight.bold};\n`;\n\nexport const TextContainer = styled.div`\n\twidth: 100%;\n\tdisplay: flex;\n\tflex-direction: column;\n\tmargin-bottom: 1.5rem;\n`;\n\nexport const BodyContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tpadding: 1rem;\n\tflex: 1;\n\tjustify-content: space-between;\n\toverflow: hidden;\n\t\n\tbackground: ${props => props.theme.bg.quaternary};\n`\n\nexport const ButtonForm = styled.div`\n\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: center;\n\tmin-height: fit-content;\n`;\n\nexport const IconSelectorContainer = styled.div`\n\tbackground: ${props => props.theme.bg.quinary};\n\toverflow: auto;\n\tmin-height: 2rem;\n\twidth: 100%;\n\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tflex-wrap: wrap;\n\tborder-radius: .5rem;\n`\n\nexport const ContentContainer = styled.div`\n\tbackground: ${props => props.theme.bg.quinary};\n\tborder-radius: 1rem;\n\tdisplay: flex;\n\tflex-direction: column;\n\toverflow: hidden;\n\tmargin-bottom: 1rem;\n\talign-items: center;\n`\nexport const ReportButtonsContainer = styled.div`\n\tdisplay: flex;\n\t\n\tflex-direction: column;\n\talign-items: center;\n\t// justify-content: center;\n\tflex-wrap: nowrap;\n\toverflow: auto;\n\tmin-height: 5rem;\n\twidth: 100%;\n`\n\nexport const ConditionText = styled.span`\n\tfont: ${props => props.theme.font.primary};\n\tfont-size: ${props => props.theme.fontSize.sz3};\n\tmax-width: 100 %;\n\toverflow: hidden;\n\ttext-overflow: ellipsis;\n`\n\nexport const RightContentContainer = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: ${props => props.theme.bg.senary};\n    width: 4rem;\n    border-left: 1px solid ${props => props.theme.bg.tertiary};\n    height: 100%;\n    // background-color: ${props => props.theme.bg.septenary};\n    \n    // padding-left: 1rem;\n    // border-top-right-radius: 0.6rem;\n    // border-bottom-right-radius: 0.6rem;\n    \n    \n`\n\nexport const ButtonContainer = styled.button`\n  position: relative;\n  user-select: none;\n  \n  // flex layout\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  // flex-grow: 1;\n  width: 90%;\n  overflow: hidden;\n  height: 4rem;\n  min-height: 4rem;\n  line-height: 3rem;\n  min-width: 80%;\n\t\n  background: ${props => `linear-gradient(180deg, \n                            ${LightenDarkenColor(props.background, 20)} 0%, \n                            ${props.background} 50%, \n                            ${LightenDarkenColor(props.background, -20)} 100%)`};\n  border-radius: 0.6rem;\n  padding: 0;\n\t\n\t\n  // margins\n  margin: .5rem 0 .5rem 0;\n\t\n  // padding\n  // padding: 0.5rem 1rem 0.5rem 1rem;\n  \n  outline: none;\n  &:focus {\n    outline: none;\n  }\n\n  letter-spacing: 1.5px;\n  border: none;\n  box-shadow: ${props => props.clickable ? 'none' : `2px 2px 2px rgba(0, 0, 0, 0.5)`};\n  transition: all 0.1s ease 0s;\n  cursor: pointer;\n  outline: none;\n    \n  &:hover {\n    ${props => props.hoverable && !props.clickable &&\n\t{\n\t\tboxShadow: \"3px 3px 3px rgba(0, 0, 0, 0.5)\",\n\t\ttransform: \"translateY(-1px)\",\n\t}\n}\n  }\n\n  ${props => props.clickable && !props.disabled &&\n\t`&:active {\n      background: ${`linear-gradient(180deg, \n          ${LightenDarkenColor(props.background, -20)} 0%, \n          ${props.background} 50%, \n          ${LightenDarkenColor(props.background, 20)} 100%)`\n\t}\n    }`\n}\n  \n  ${props => props.disabled &&\n\t{\n\t\tcolor: props.theme.bg.quaternary,\n\t\tbackground: `linear-gradient(180deg, rgba(255,255,255,0.4) 0%, rgba(255,255,255,0.4) 100%), ${LightenDarkenColor(props.background, -60)}`,\n\t\tpointerEvents: \"none\",\n\t}\n}\n\n    // --border-width: 3px;\n    ${props => props.borderGlow &&\n\tborderGlowCss\n}\n\n${props => props.css};\n\n`\n\nexport const AddNewButtonContainer = styled.div`\n\tdisplay: flex;\n\tjustify-content: center;\n\twidth: 100%;\n\tborder-bottom:  ${props => props.showBorder && `1px solid` + props.theme.bg.tertiary};\n`\n\nexport const ColorFieldContainer = styled.div`\n\tposition: relative;\n\t\n`\n\n\nexport const Icon = styled.i`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin: auto auto;\n    color: green;\n    fill: green;\n    font-size: 7rem;\n    width: 14rem;\n    &:hover {\n        cursor: pointer;\n    }\n\n    &:active{\n        filter: brightness(85%)\n    }\n`","import styled from 'styled-components';\n\nexport const DefaultViewComponent = styled.div`\n    // background: purple;\n    width: 5rem;\n`\n\n","import React from \"react\";\n\nimport PropTypes from 'prop-types';\nimport { useField, useFormikContext } from \"formik\";\n\nimport MinusButton from \"../../minus_button/minus_button\";\n\n// import styles\nimport * as style from './delete_field_button.style'\n\nconst DeleteFieldButton = ({\n\tContentContainer,\n\tstyle,\n\tButtonComponent,\n\tindex,\n\tViewComponent,\n\t\t\t\t\t\t\t   viewProps,\n\t...props }) => {\n\n\tconst { setValues, values, setFieldValue, setFieldTouched, validateOnChange, validateOnBlur, validateField, validateForm, ...context } = useFormikContext();\n\tconst [field, meta] = useField(props);\n\n\treturn (\n\t\t<ButtonComponent\n\t\t\t{...props}\n\t\t\tonClick={()=>{\n\t\t\t\tconsole.log(\"DeleteFieldButton: values before\",values)\n\t\t\t\tconsole.log(\"DeleteFieldButton: values[field.name]\",values[field.name])\n\t\t\t\tvalues[field.name].splice(index, 1)\n\t\t\t\tvalidateForm()\n\t\t\t}}\n\t\t>\n\t\t\t<ViewComponent\n\t\t\t\t{...viewProps}\n\t\t\t/>\n\t\t</ButtonComponent>\n\t);\n};\n\n// Specifies propTypes\nDeleteFieldButton.propTypes = {\n};\n\n// Specifies the default values for props:\nDeleteFieldButton.defaultProps = {\n\tButtonComponent: MinusButton,\n\tViewComponent: style.DefaultViewComponent\n};\n\nexport default DeleteFieldButton;\n","import React, {useEffect, useState} from \"react\";\nimport Modal from 'react-modal';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport uuid from 'uuid'\n\n// external components\nimport {Formik} from \"formik\";\n\n// internal components\nimport ColorField from \"../../../../../basic/form/color_field/color_field\";\nimport WidgetButton from \"../../../../../basic/widget_button/widget_button\";\nimport Button from \"../../../../../basic/button/button\";\nimport Textbox from \"../../../../../basic/textbox/textbox\";\nimport TextField from \"../../../../../basic/form/text_field/text_field\";\n\n// utils\nimport {faClassNames} from \"../../../../../../methods/utils/class_name_utils\";\nimport {FORM_MODES} from \"../../../../../../constants/scheduler_constants\";\n\n// actions\nimport {putDashboard} from \"../../../../../../redux/actions/dashboards_actions\";\n\n// styles\nimport * as styled from './report_modal.style'\nimport * as style from \"../../dashboard_buttons/dashboard_button/dashboard_button.style\";\nimport * as buttonFieldStyles from \"../../dashboard_editor/button_fields/button_fields.style\";\nimport DeleteFieldButton from \"../../../../../basic/form/delete_field_button/delete_field_button\";\nimport DashboardButton from \"../../dashboard_buttons/dashboard_button/dashboard_button\";\nimport {postReportEvent, putReportEvent} from \"../../../../../../redux/actions/report_event_actions\";\nimport {reportEventSchema, scheduleSchema} from \"../../../../../../methods/utils/form_schemas\";\nimport {DASHBOARD_BUTTON_COLORS} from \"../../../../../../constants/dashboard_contants\";\n\nModal.setAppElement('body');\n\nconst NewButtonForm = (props) => {\n\n    const {\n        cancel,\n        dashboard,\n        buttonId,\n        editing\n    } = props\n\n    const report_buttons = dashboard?.report_buttons || []\n\n\n    const dispatch = useDispatch()\n    const onPutDashboard = (dashboardCopy, dashboardId) =>dispatch(putDashboard(dashboardCopy, dashboardId))\n\n    const editingButton = report_buttons.find((currButton) => currButton._id === buttonId)\n    const _id = editingButton?._id\n    const description = editingButton?.description\n    const iconClassName = editingButton?.iconClassName\n    const color  = editingButton?.color\n    const label  = editingButton?.label\n\n    const formMode = _id ? FORM_MODES.UPDATE : FORM_MODES.CREATE\n\n    const handleSubmit = (values, formMode) => {\n        // extract values and default values\n        const description = values?.description || \"\"\n        const iconClassName = values?.iconClassName\n        const color = values?.color || \"red\"\n        const label = values?.label || \"\"\n        const old_report_buttons = dashboard?.report_buttons || []\n\n        // handle logic for editing buttons\n        if(editing) {\n\n            // update existing button\n            if(formMode === FORM_MODES.UPDATE ) {\n\n                const updatedDashboard = {\n                    ...dashboard,\n                    report_buttons: old_report_buttons.map((currButton) => {\n\n                        // if this is the button being updating, update values\n                        if(currButton._id === _id) {\n                            return {\n                                ...currButton,\n                                description,\n                                iconClassName,\n                                color,\n                                label\n                            }\n                        }\n\n                        // if not current button being editing, return original\n                        return currButton\n                    })\n                }\n\n                // update dashboard\n                onPutDashboard(updatedDashboard, dashboard._id.$oid)\n            }\n\n            // create new button\n            else if(formMode === FORM_MODES.CREATE) {\n                const updatedDashboard = {\n                    ...dashboard,\n                    report_buttons: [\n                        // spread original buttons and add new one with form values\n                        ...old_report_buttons,\n                        {\n                            _id: uuid.v4(),\n                            description,\n                            iconClassName,\n                            color,\n                            label\n                        }\n                    ]\n\n                }\n\n                // update dashboard\n                onPutDashboard(updatedDashboard, dashboard._id.$oid)\n            }\n\n            // close form\n            cancel()\n        }\n\n        // handle submit logic for sending report\n        else {\n\n        }\n    }\n\n    return(\n        <Formik\n            initialValues={{\n                label: label ? label : \"\",\n                description:  description ? description : \"\",\n                iconClassName: iconClassName ? iconClassName : null,\n                color: color ? color : \"red\"\n            }}\n\n            // validation control\n            validationSchema={reportEventSchema}\n            validateOnChange={true}\n            validateOnMount={false} // leave false, if set to true it will generate a form error when new data is fetched\n            validateOnBlur={true}\n            enableReinitialize={true} // leave false, otherwise values will be reset when new data is fetched for editing an existing item\n            onSubmit={async (values, { setSubmitting, setTouched, resetForm }) => {\n                // set submitting to true, handle submit, then set submitting to false\n                // the submitting property is useful for eg. displaying a loading indicator\n                setSubmitting(true)\n                await handleSubmit(values, formMode)\n                setTouched({}) // after submitting, set touched to empty to reflect that there are currently no new changes to save\n                setSubmitting(false)\n                resetForm()\n            }}\n        >\n            {formikProps => {\n                const {\n                    values,\n                    setFieldValue\n                } = formikProps\n\n                const {\n                    color,\n                    label,\n                    iconClassName\n                } = values\n\n                return(\n                    <styled.StyledForm>\n                        {/*uncomment for widget style instead of big rectangles*/}\n                        {/*<WidgetButton*/}\n                        {/*    containerStyle={{alignSelf: \"center\"}}*/}\n                        {/*    label={label}*/}\n                        {/*    color={color}*/}\n                        {/*    iconClassName={iconClassName}*/}\n                        {/*    selected={false}*/}\n                        {/*/>*/}\n                        {editing &&\n                        <DashboardButton\n                            title={label}\n                            type={\"button\"}\n                            iconClassName={iconClassName}\n                            iconColor={color}\n                            containerStyle={{height: '4rem', minHeight: \"4rem\", lineHeight: '3rem', width: '80%', alignSelf: \"center\", marginBottom: \"1rem\"}}\n                            hoverable={false}\n                            color = {color}\n                            disabled = {false}\n                        />\n                        }\n\n                        <div style={{marginBottom: \"1rem\"}}>\n                            <styled.Label>Label</styled.Label>\n                            {editing &&\n                                <TextField\n                                    name=\"label\"\n                                    type=\"text\"\n                                    placeholder=\"Label...\"\n                                    InputComponent={Textbox}\n                                    lines={1}\n                                    style={{borderRadius: \".5rem\"}}\n                                />\n                                // :\n                                // <styled.TextboxDiv\n                                //     name=\"label\"\n                                //     type=\"text\"\n                                //     placeholder=\"Label...\"\n                                //     // value={label}\n                                //     lines={1}\n                                //     style={{marginBottom: \"1rem\"}}\n                                //     readonly\n                                // >\n                                //     {label}\n                                // </styled.TextboxDiv>\n                            }\n                        </div>\n\n                        {editing ?\n                            <div\n                                style={{\n                                    marginBottom: \"1rem\"\n                                }}\n                            >\n                                <styled.Label>Description</styled.Label>\n                                <TextField\n                                    name=\"description\"\n                                    type=\"text\"\n                                    placeholder=\"Description...\"\n                                    InputComponent={Textbox}\n                                    lines={2}\n                                    style={{borderRadius: \"0.5rem\"}}\n                                />\n                            </div>\n                            :\n                            description ?\n                                <div\n                                    style={{\n                                        marginBottom: \"1rem\"\n                                    }}\n                                >\n                                    <styled.Label>Description</styled.Label>\n                                    <styled.TextboxDiv\n                                        name=\"description\"\n                                        type=\"text\"\n                                        placeholder=\"Description...\"\n                                        readonly\n                                    >\n                                        {description}\n                                    </styled.TextboxDiv>\n                                </div>\n                                :\n                                null\n                        }\n\n                        {/*{!editing &&*/}\n                        {/*<div>*/}\n                        {/*    <styled.Label>Comments</styled.Label>*/}\n                        {/*    <TextField*/}\n                        {/*        name=\"comments\"*/}\n                        {/*        type=\"text\"*/}\n                        {/*        placeholder=\"enter additonal comments...\"*/}\n                        {/*        InputComponent={Textbox}*/}\n                        {/*        lines={5}*/}\n                        {/*        style={{marginBottom: \"1rem\", borderRadius: \".5rem\"}}*/}\n                        {/*    />*/}\n                        {/*</div>*/}\n                        {/*}*/}\n\n                        {editing &&\n                        <div\n                            style={{\n                                marginBottom: \"1rem\"\n                            }}\n                        >\n                            <styled.Label>Color</styled.Label>\n                            <ColorField\n                                name={\"color\"}\n                                Container={styled.ColorFieldContainer}\n                                type={\"button\"}\n                                mode={\"twitter\"}\n                                colors={DASHBOARD_BUTTON_COLORS}\n                            />\n                        </div>\n                        }\n\n                        {/*{editing &&*/}\n                        {/*<div style={{overflow: \"hidden\", marginBottom: \"1rem\", display: \"flex\", flexDirection: \"column\"}}>*/}\n                        {/*    <styled.Label>Icon</styled.Label>*/}\n                        {/*    <styled.IconSelectorContainer>*/}\n                        {/*        {faClassNames.map((currClassName, index) => {*/}\n                        {/*            currClassName = \"fas fa-\" + currClassName*/}\n                        {/*            const selected = currClassName === values.iconClassName*/}\n\n                        {/*            return(*/}\n                        {/*                <WidgetButton*/}\n                        {/*                    key={currClassName}*/}\n                        {/*                    containerStyle={{*/}\n                        {/*                        margin: \"1rem\",*/}\n                        {/*                    }}*/}\n                        {/*                    color={color}*/}\n                        {/*                    iconClassName={currClassName}*/}\n                        {/*                    selected={selected}*/}\n                        {/*                    onClick={()=>{*/}\n                        {/*                        setFieldValue(\"iconClassName\", currClassName)*/}\n                        {/*                    }}*/}\n                        {/*                />*/}\n                        {/*            )*/}\n                        {/*        })}*/}\n                        {/*    </styled.IconSelectorContainer>*/}\n                        {/*</div>*/}\n                        {/*}*/}\n\n                        <styled.ButtonForm>\n                            <Button\n                                tertiary\n                                schema={\"dashboards\"}\n                                onClick={cancel}\n                                label={\"Cancel\"}\n                                type=\"button\"\n                            />\n\n                            <Button\n                                primary\n                                schema={\"dashboards\"}\n                                label={editing ? \"Save\" : \"Send\"}\n                                type=\"submit\"\n                            />\n                        </styled.ButtonForm>\n                    </styled.StyledForm>\n                )\n            }}\n        </Formik>\n    )\n}\n\nconst ReportModal = (props) => {\n\n    const {\n        isOpen,\n        title,\n        close,\n        dashboard,\n        onSubmit\n    } = props\n\n    // get current buttons, default to empty array\n    const report_buttons = dashboard?.report_buttons || []\n\n    const dispatch = useDispatch()\n    const onPutDashboard = (dashboardCopy, dashboardId) =>dispatch(putDashboard(dashboardCopy, dashboardId))\n    const onPostReportEvent = (reportEvent) =>dispatch(postReportEvent(reportEvent))\n    const onPutReportEvent = (id, reportEvent) =>dispatch(putReportEvent(id, reportEvent))\n\n    // boolean - true if no buttons, false otherwise\n    const noButtons = report_buttons.length === 0\n\n    const [addingNew, setAddingNew] = useState(false) // edit button form\n    const [editing, setEditing] = useState(noButtons)  // default editing to true if there are currently no buttons\n    const [sending, setSending] = useState(false) // sending report\n    const [buttonId, setButtonId] = useState(null) // button being edited\n    const [submitting, setSubmitting] = useState(false)\n\n    const reportEvents = useSelector(state => { return state.reportEventsReducer.reportEvents })\n\n    const sendReport = async (button) => {\n        setSubmitting(true)\n        const {\n            _id,\n            iconClassName,\n            color,\n            ...rest\n        } = button\n\n        const reportEvent = {\n            // save identifying info\n            dashboard_id: dashboard._id.$oid,\n            station_id: dashboard.station,\n            report_button_id: _id,\n            date: new Date().getTime(),\n\n            // spread rest of buttons data - commented out for now, get remaining data from actual report button when its needed\n            // ...rest\n        }\n\n        // post reportEvent\n        const result = await onPostReportEvent(reportEvent)\n\n        // handle request failed\n        if(result instanceof Error) {\n\n            onSubmit(button.label, false)\n        }\n\n        // handle request success\n        else {\n            onSubmit(button.label, true)\n        }\n        setSubmitting(false)\n        close()\n    }\n\n    return (\n        <styled.Container\n            isOpen={isOpen}\n            contentLabel=\"Confirm Delete Modal\"\n            onRequestClose={close}\n            style={{\n                overlay: {\n                    zIndex: 500\n                },\n                content: {\n\n                }\n            }}\n        >\n            <styled.Header>\n                <styled.Title>{title}</styled.Title>\n\n                <Button\n                    onClick={close}\n                    schema={'dashboards'}\n                >\n                    <i className=\"fa fa-times\" aria-hidden=\"true\"/>\n                </Button>\n            </styled.Header>\n\n            <styled.BodyContainer>\n                {(addingNew || sending) ?\n                    <NewButtonForm\n                        cancel={()=>{\n                            setAddingNew(false)\n                            setSending(false)\n                            setButtonId(null)\n                        }}\n                        dashboard={dashboard}\n                        buttonId={buttonId}\n                        editing={editing}\n                    />\n                    :\n                    <div style={{display: \"flex\", flexDirection: \"column\", overflow: \"hidden\"}}>\n                        <styled.ContentContainer>\n                            {editing &&\n                            <styled.AddNewButtonContainer\n                                showBorder={!noButtons}\n                            >\n                                <Button\n                                    style={{margin: \"1rem 0rem\"}}\n                                    primary\n                                    schema={\"dashboards\"}\n                                    onClick={()=>setAddingNew(true)}\n                                    label={\"+\"}\n                                    type=\"button\"\n                                />\n                            </styled.AddNewButtonContainer>\n                            }\n\n                            {!noButtons &&\n                            <styled.ReportButtonsContainer>\n\n                                {report_buttons.map((currReportButton, ind) => {\n\n                                    const description = currReportButton?.description || \"\"\n                                    const label = currReportButton?.label\n                                    const iconClassName = currReportButton?.iconClassName || \"\"\n                                    const color = currReportButton?.color || \"red\"\n                                    const _id = currReportButton?._id\n                                    return(\n                                        <DashboardButton\n                                            title={label}\n                                            key={_id}\n                                            type={null}\n                                            iconClassName={iconClassName}\n                                            iconColor={color}\n                                            onClick={()=>{\n                                                if(editing) {\n                                                    setAddingNew(true)\n                                                    setButtonId(_id)\n                                                }\n                                                else {\n                                                    // setSending(true)\n                                                    // setButtonId(_id)\n                                                    sendReport(currReportButton)\n                                                }\n                                            }}\n                                            containerStyle={{height: '4rem', minHeight: \"4rem\", lineHeight: '3rem', margin: '0.5rem 0', width: '80%'}}\n                                            hoverable={false}\n                                            taskID = {null}\n                                            color = {color}\n                                            disabled = {false}\n                                        >\n                                            {editing &&\n                                                <div\n                                                    style={{zIndex: 500}}\n                                                    onClick={(event)=>{\n                                                        // remove button\n                                                        event.preventDefault()\n                                                        event.stopPropagation()\n\n\n                                                        const updatedDashboard = {\n                                                            ...dashboard,\n                                                            // filter through buttons, keep all but one with matching id of current button\n                                                            report_buttons: report_buttons.filter((currOldButton) => currOldButton._id !== _id)\n                                                        }\n\n                                                        // update dashboard\n                                                        onPutDashboard(updatedDashboard, dashboard._id.$oid)\n                                                    }}\n                                                >\n                                                    <i\n                                                        style={{color: \"red\", position: \"absolute\", fontSize: \"1.5rem\", top: 5, right: 5}}\n                                                        className=\"fas fa-times-circle\"\n\n                                                    />\n                                                </div>\n\n                                            }\n                                        </DashboardButton>\n                                    )\n\n                                    // uncomment for widget style instead of big rectangles\n                                    // return(\n                                    //     <styled.ButtonContainer\n                                    //         background={color}\n                                    //         onClick={()=>{\n                                    //             if(editing) {\n                                    //               setAddingNew(true)\n                                    //                 setButtonId(_id)\n                                    //             }\n                                    //             else {\n                                    //                 setSending(true)\n                                    //                 setButtonId(_id)\n                                    //             }\n                                    //\n                                    //         }}\n                                    //\n                                    //     >\n                                    //         <div style={{flex: 1}}></div>\n                                    //\n                                    //         <div style={{flex: 1, display: \"flex\", justifyContent: \"center\"}}>\n                                    //             <styled.ConditionText>{label}</styled.ConditionText>\n                                    //         </div>\n                                    //\n                                    //         <div style={{flex: 1, display: \"flex\", justifyContent: \"flex-end\", height: \"100%\"}}>\n                                    //             {iconClassName &&\n                                    //             <styled.RightContentContainer>\n                                    //\n                                    //                 <buttonFieldStyles.SchemaIcon className={iconClassName}\n                                    //                                               color={color}></buttonFieldStyles.SchemaIcon>\n                                    //             </styled.RightContentContainer>\n                                    //             }\n                                    //\n                                    //         </div>\n                                    //\n                                    //         {editing &&\n                                    //             <i\n                                    //                 style={{color: \"red\", position: \"absolute\", top: 5, right: 5}}\n                                    //                 className=\"fas fa-times-circle\"\n                                    //                 onClick={(event)=>{\n                                    //                     // remove button\n                                    //                     event.preventDefault()\n                                    //                     event.stopPropagation()\n                                    //\n                                    //\n                                    //                     const updatedDashboard = {\n                                    //                         ...dashboard,\n                                    //                         // filter through buttons, keep all but one with matching id of current button\n                                    //                         report_buttons: report_buttons.filter((currOldButton) => currOldButton._id !== _id)\n                                    //                     }\n                                    //\n                                    //                     // update dashboard\n                                    //                     onPutDashboard(updatedDashboard, dashboard._id.$oid)\n                                    //                 }}\n                                    //             />\n                                    //         }\n                                    //             {/*<WidgetButton*/}\n                                    //             {/*    key={iconClassName}*/}\n                                    //             {/*    containerStyle={{*/}\n                                    //             {/*        // margin: \"1rem\",*/}\n                                    //             {/*    }}*/}\n                                    //             {/*    color={color}*/}\n                                    //             {/*    iconClassName={iconClassName}*/}\n                                    //             {/*    label={label}*/}\n                                    //             {/*    onClick={()=>{*/}\n                                    //             {/*        if(editing) {*/}\n                                    //             {/*            setAddingNew(true)*/}\n                                    //             {/*            setButtonId(_id)*/}\n                                    //             {/*        }*/}\n                                    //             {/*        else {*/}\n                                    //             {/*            setSending(true)*/}\n                                    //             {/*            setButtonId(_id)*/}\n                                    //             {/*        }*/}\n                                    //\n                                    //             {/*    }}*/}\n                                    //             {/*>*/}\n                                    //             {/*    {editing &&*/}\n                                    //             {/*    <i*/}\n                                    //             {/*        style={{color: \"red\", position: \"absolute\", top: 5, right: 5}}*/}\n                                    //             {/*        className=\"fas fa-times-circle\"*/}\n                                    //             {/*        onClick={(event)=>{*/}\n                                    //             {/*            // remove button*/}\n                                    //\n                                    //             {/*            event.preventDefault()*/}\n                                    //             {/*            event.stopPropagation()*/}\n                                    //\n                                    //\n                                    //             {/*            const updatedDashboard = {*/}\n                                    //             {/*                ...dashboard,*/}\n                                    //             {/*                // filter through buttons, keep all but one with matching id of current button*/}\n                                    //             {/*                report_buttons: report_buttons.filter((currOldButton) => currOldButton._id !== _id)*/}\n                                    //             {/*            }*/}\n                                    //\n                                    //             {/*            // update dashboard*/}\n                                    //             {/*            onPutDashboard(updatedDashboard, dashboard._id.$oid)*/}\n                                    //             {/*        }}*/}\n                                    //             {/*    />*/}\n                                    //             {/*    }*/}\n                                    //             {/*</WidgetButton>*/}\n                                    //\n                                    //         {/*</div>*/}\n                                    //\n                                    //\n                                    //     </styled.ButtonContainer>\n                                    //\n                                    // )\n                                })}\n                            </styled.ReportButtonsContainer>\n                            }\n                        </styled.ContentContainer>\n\n                        <styled.ButtonForm>\n                            <Button\n                                tertiary\n                                schema={\"dashboards\"}\n                                onClick={close}\n                                label={\"Close\"}\n                                type=\"button\"\n                            />\n                            <Button\n                                primary\n                                schema={\"dashboards\"}\n                                onClick={()=>setEditing(!editing)}\n                                label={editing ? \"Done\" : \"Edit\"}\n                                type=\"button\"\n                            />\n                        </styled.ButtonForm>\n                    </div>\n                }\n            </styled.BodyContainer>\n        </styled.Container>\n    );\n};\n\nexport default ReportModal\n","import styled, {css} from 'styled-components'\nimport Modal from 'react-modal';\n\nexport const Container = styled(Modal)`\n\toutline: none !important;\n\toutline-offset: none !important;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translate(-50%, -50%);\n\tright: auto;\n\tbottom: auto;\n\tposition: absolute;\n\tz-index: 50;\n\tmin-width: 95%;\n\tmax-width: 95%;\n\tmax-height: 95%;\n\tcolor: ${props => props.theme.bg.octonary};\n\tdisplay: flex;\n\tflex-direction: column;\n\tcolor: ${props => props.theme.bg.octonary};\n\tborder-radius: 1rem;\n\toverflow: hidden;\n`\n\nexport const HeaderMainContentContainer = styled.div`\n\tdisplay: flex;\n  \tflex-direction: column;\n\tjustify-content: center;\n  align-items: center;\n  flex: 1;\n`\n\nexport const Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0;\n  margin: 0;\n  //height: 5rem;\n  padding: .5rem 1rem;\n  background: ${props => props.theme.bg.quinary};\n`\n\nexport const Title = styled.h2`\n  height: 100%;\n  min-height: 100%;\n  margin: 0;\n  padding: 0;\n  text-align: center;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  font-size: ${props => props.theme.fontSize.sz2};\n  font-weight: ${props => props.theme.fontWeight.bold};\n  margin-bottom: 1rem;\n`;\n\nexport const BodyContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tpadding: 1rem;\n\tflex: 1;\n\tjustify-content: space-between;\n\toverflow: hidden;\n\tbackground: ${props => props.theme.bg.quaternary};\n`\n\nexport const ButtonsContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: center;\n\tmin-height: fit-content;\n`;\n\n\nexport const ContentContainer = styled.div`\n\tbackground: ${props => props.theme.bg.quinary};\n\tborder-radius: 1rem;\n\tdisplay: flex;\n\tflex-direction: column;\n\toverflow: hidden;\n\tmargin-bottom: 1rem;\n\talign-items: center;\n  justify-content: center;\n`\n\nexport const NoButtonsText = styled.span`\n\tfont: ${props => props.theme.font.primary};\n\tfont-size: ${props => props.theme.fontSize.sz3};\n`\n\nexport const FadeLoaderCSS = css`\n \n`;\n\nexport const ReportButtonsContainer = styled.div`\n\talign-items: center;\n\toverflow: auto;\n\tmin-height: 5rem;\n\twidth: 100%;\n  \n  ${props => props.isButtons ? buttonsCss : noButtonsCss }\n`\n\nconst buttonsCss = css`\n`\n\nconst noButtonsCss = css`\n  overflow: auto;\n\tdisplay: flex;\n  flex-drection: column;\n  justify-content: center;\n`\n\n\n\n","import React, {useEffect, useState} from \"react\";\n\n// external components\nimport Modal from 'react-modal';\nimport {useDispatch, useSelector} from \"react-redux\";\n\n// internal components\nimport Button from \"../../../../../basic/button/button\";\nimport DashboardButton from \"../../dashboard_buttons/dashboard_button/dashboard_button\";\n\n// actions\nimport {getCards, getProcessCards, putCard} from \"../../../../../../redux/actions/card_actions\";\n\n// styles\nimport * as styled from './kick_off_modal.style'\nimport {useTheme} from \"styled-components\";\nimport {getProcesses} from \"../../../../../../redux/actions/processes_actions\";\nimport FadeLoader from \"react-spinners/FadeLoader\";\nimport CardEditor from \"../../../../../side_bar/content/cards/card_editor/card_editor\";\nimport Textbox from \"../../../../../basic/textbox/textbox\";\nimport {SORT_MODES} from \"../../../../../../constants/common_contants\";\nimport {sortBy} from \"../../../../../../methods/utils/card_utils\";\nimport Card from \"../../../../../side_bar/content/cards/card/card\";\n\nModal.setAppElement('body');\n\nconst KickOffModal = (props) => {\n\n    const {\n        isOpen,\n        title,\n        close,\n        dashboard,\n        onSubmit\n    } = props\n\n    // get current buttons, default to empty array\n    const dashboardId = dashboard?._id?.$oid\n\n    const theme = useTheme()\n\n    const dispatch = useDispatch()\n    // const onGetProcessCards = (processId) => dispatch(getProcessCards(processId))\n    const dispatchGetCards = () => dispatch(getCards())\n    const dispatchGetProcesses = () => dispatch(getProcesses());\n    const onPutCard = async (card, ID) => await dispatch(putCard(card, ID))\n\n    const kickOffEnabledInfo = useSelector(state => { return state.dashboardsReducer.kickOffEnabledDashboards[dashboardId] })\n    const processCards = useSelector(state => { return state.cardsReducer.processCards })\n    const processes = useSelector(state => { return state.processesReducer.processes }) || {}\n    const routes = useSelector(state => { return state.tasksReducer.tasks }) || {}\n\n    const [lotFilterValue, setLotFilterValue] = useState('')\n    const [shouldFocusLotFilter, setShouldFocusLotFilter] = useState(false)\n    const [submitting, setSubmitting] = useState(false)\n    const [showLotEditor, setShowLotEditor] = useState(false)\n    const [didLoadData, setDidLoadData] = useState(false)\n    const [availableKickOffCards, setAvailableKickOffCards] = useState([])\n    const [sortMode, setSortMode] = useState(SORT_MODES.END_DESCENDING)\n    const isButtons = availableKickOffCards.length > 0\n    const stationId = dashboard.station\n\n    /*\n    * handles the logic for when a kick-off button is pressed\n    *\n    * When a kick-off button is pressed, the card is to be moved from the queue of the current process it resides in\n    * to the first station in the process\n    *\n    * This is done by updating the cards station_id and route_id to those of the first station in the first route\n    * */\n    const onButtonClick = async (card) => {\n\n        // extract card attributes\n        const {\n            bins,\n            name: cardName,\n            process_id,\n            _id: cardId,\n        } = card\n\n        // get process of card\n        const cardProcess = processes[process_id]\n\n        // get routes of process\n        const processRoutes = cardProcess.routes\n\n        // get id of first route\n        var firstRouteId = null\n        if(processRoutes && Array.isArray(processRoutes)) firstRouteId = processRoutes[0]\n\n        // get first route\n        const firstRoute = routes[firstRouteId]\n\n        // extract route attributes\n        const {\n            load: {\n                station: loadStation\n            }\n        } = firstRoute || {}\n\n        // update card\n        if(firstRouteId && firstRoute && loadStation) {\n\n            // extract first station's bin and queue bin from bins\n            const {\n                [loadStation]: firstStationBin,\n                [\"QUEUE\"]: queueBin,\n               ...unalteredBins\n            } = bins || {}\n\n            const queueBinCount = queueBin?.count ? queueBin.count : 0\n            const firstStationCount = firstStationBin?.count ? firstStationBin.count : 0\n\n            // udpated card will maintain all of the cards previous attributes with the station_id and route_id updated\n            const updatedCard = {\n                ...card,                                // spread unaltered attributes\n                bins: {\n                    ...unalteredBins,                   // spread unaltered bins\n                    [loadStation]: {\n                        ...firstStationBin,              // spread unaltered attributes of station bin if it exists\n                        count: parseInt(queueBinCount) + parseInt(firstStationCount)    // increment first station's count by the count of the queue\n                    }\n                },\n            }\n\n            // send update action\n            const result = await onPutCard(updatedCard, cardId)\n\n            var requestSuccessStatus = false\n\n            // check if request was successful\n            if(!(result instanceof Error)) {\n                requestSuccessStatus = true\n            }\n\n            onSubmit(cardName, requestSuccessStatus)\n            setSubmitting(false)\n            close()\n        }\n    }\n\n\n    /*\n    * renders an array of buttons for each kick off lot\n    * */\n    const renderKickOffButtons = () => {\n        return availableKickOffCards\n            .filter((currLot) => {\n                const {\n                    name: currLotName,\n                } = currLot || {}\n\n                if(\n                    currLotName\n                        .toLowerCase()\n                        .includes(lotFilterValue.toLowerCase())\n                ) {\n                    return true\n                }\n                else {\n                    return false\n                }\n            })\n            .map((currCard, cardIndex) => {\n                const {\n                    _id: lotId,\n                    name,\n                    start_date,\n                    end_date,\n                    bins = {}\n                } = currCard\n\n                const count = bins[\"QUEUE\"]?.count || 0\n\n                return(\n                        <Card\n                            name={name}\n                            start_date={start_date}\n                            end_date={end_date}\n                            // objectName={objectName}\n                            count={count}\n                            id={lotId}\n                            index={cardIndex}\n                            onClick={()=>{\n                                onButtonClick(currCard)\n                            }}\n                            containerStyle={{marginBottom: \"0.5rem\", width: \"80%\", margin: '.5rem auto .5rem auto'}}\n                        />\n                )\n        })\n    }\n\n    const loadData = async () => {\n        const cardsResult = await dispatchGetCards()\n        const processesResult = await dispatchGetProcesses()\n\n        if(!(cardsResult instanceof Error) && !(processesResult instanceof Error)) {\n            setDidLoadData(true)\n        }\n    }\n\n    /**\n     * When modal is opened, get all cards associated with the processes\n     *\n     *\n     */\n    useEffect(() => {\n        loadData()\n    }, [])\n\n    /**\n     * Get the cards actually available for kick off\n     *\n     * For a card to be available for kick off, it must have at least 1 item in the 'queue' bin\n     *\n     * This function creates a temporary array for storing kick off cards as it checks each card of each process associated with the station\n     *\n     * This function loops through every card belonging to a process that the current station is the first station of\n     * Each card's bins attribute is checked to see if it contains any items in the \"QUEUE\" bin\n     *\n     * if a card is found to have items in the \"QUEUE\" bin, it is added to the list of kick off cards\n     *\n     * finally, local state variable availableKickOffCards is set to the list of kick off cards for later use\n     *\n     */\n    useEffect(() => {\n        var tempAvailableCards = []\n\n        if(kickOffEnabledInfo && Array.isArray(kickOffEnabledInfo)) kickOffEnabledInfo.forEach((currProcessId) => {\n            const currProcessCards = processCards[currProcessId]\n\n            var filteredCards = []\n            if(currProcessCards) filteredCards = Object.values(currProcessCards).filter((currCard) => {\n                // currCard.station_id === \"QUEUE\"\n                if(currCard.bins && currCard.bins[\"QUEUE\"]) return true\n            })\n            tempAvailableCards = tempAvailableCards.concat(filteredCards)\n        })\n\n\n        if(sortMode) {\n            sortBy(tempAvailableCards, sortMode)\n        }\n        setAvailableKickOffCards(tempAvailableCards)\n\n    }, [processCards])\n\n    // if number of available lots >= 5, auto focus lot filter text box\n    useEffect(() => {\n        if(availableKickOffCards.length >= 5 ) {\n            setShouldFocusLotFilter(true)\n        }\n    }, [availableKickOffCards.length])\n\n    return (\n        <styled.Container\n            isOpen={isOpen}\n            contentLabel=\"Kick Off Modal\"\n            onRequestClose={close}\n            style={{\n                overlay: {\n                    zIndex: 500\n                },\n                content: {\n\n                }\n            }}\n        >\n            {showLotEditor &&\n            <CardEditor\n                isOpen={true}\n                onAfterOpen={null}\n                processOptions={kickOffEnabledInfo}\n                showProcessSelector={true}\n                cardId={null}\n                processId={null}\n                // binId={null}\n                close={()=>{\n                    setShowLotEditor(false)\n                    // setSelectedCard(null)\n                }}\n            />\n            }\n            <styled.Header>\n                <styled.HeaderMainContentContainer>\n                    <styled.Title>{title}</styled.Title>\n\n                    <div style={{display: \"flex\", alignItems: \"center\", justifyContent: \"center\", width: \"40rem\", minWidth: \"10rem\", maxWidth: \"50%\"}}>\n                        <Textbox\n                            focus={shouldFocusLotFilter}\n                            placeholder='Filter lots...'\n                            onChange={(e) => {\n                                setLotFilterValue(e.target.value)\n                            }}\n                            style={{background: theme.bg.quaternary }}\n                            textboxContainerStyle={{flex: 1}}\n                        />\n                    </div>\n                </styled.HeaderMainContentContainer>\n\n                <Button\n                    onClick={close}\n                    schema={'dashboards'}\n                >\n                    <i className=\"fa fa-times\" aria-hidden=\"true\"/>\n                </Button>\n            </styled.Header>\n\n            <styled.BodyContainer>\n                    <div style={{display: \"flex\", flexDirection: \"column\", overflow: \"hidden\"}}>\n                        <styled.ContentContainer>\n                            <styled.ReportButtonsContainer isButtons={isButtons}>\n                                {isButtons ?\n                                    renderKickOffButtons()\n                                    :\n                                    didLoadData ?\n                                    <styled.NoButtonsText>There are currently no lots in the queue available for kick off.</styled.NoButtonsText>\n                                        :\n                                        <FadeLoader\n                                            css={styled.FadeLoaderCSS}\n                                            height={5}\n                                            width={3}\n                                            loading={true}\n                                        />\n                                }\n\n                            </styled.ReportButtonsContainer>\n                        </styled.ContentContainer>\n\n                        <styled.ButtonsContainer>\n                            <Button\n                                tertiary\n                                schema={\"dashboards\"}\n                                onClick={close}\n                                label={\"Close\"}\n                                type=\"button\"\n                            />\n                            <Button\n                                // tertiary\n                                // secondary\n                                schema={\"dashboards\"}\n                                // onClick={close}\n                                onClick={()=>setShowLotEditor(true)}\n                                label={\"Add Lot\"}\n                                type=\"button\"\n                            />\n                        </styled.ButtonsContainer>\n                    </div>\n            </styled.BodyContainer>\n        </styled.Container>\n    );\n};\n\nexport default KickOffModal\n","import styled, {css} from 'styled-components'\nimport Modal from 'react-modal';\n\nexport const Container = styled(Modal)`\n\toutline: none !important;\n\toutline-offset: none !important;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translate(-50%, -50%);\n\tright: auto;\n\tbottom: auto;\n\tposition: absolute;\n\tz-index: 50;\n\tmin-width: 95%;\n\tmax-width: 95%;\n\tmax-height: 95%;\n\tcolor: ${props => props.theme.bg.octonary};\n\tdisplay: flex;\n\tflex-direction: column;\n\tcolor: ${props => props.theme.bg.octonary};\n\tborder-radius: 1rem;\n\toverflow: hidden;\n`\n\nexport const Header = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\tpadding: 0;\n\tmargin: 0;\n\t//height: 5rem;\n  padding: .5rem 1rem;\n\tbackground: ${props => props.theme.bg.quinary};\n`\n\nexport const HeaderMainContentContainer = styled.div`\n\tdisplay: flex;\n  \tflex-direction: column;\n\tjustify-content: center;\n  align-items: center;\n  flex: 1;\n`\nexport const Title = styled.h2`\n\t//flex: 2;\n  \t\n\theight: 100%;\n\tmin-height: 100%;\n\tmargin: 0;\n\tpadding: 0;\n\ttext-align: center;\n\tdisplay: inline-flex;\n\tjustify-content: center;\n\talign-items: center;\n\tfont-size: ${props => props.theme.fontSize.sz2};\n\tfont-weight: ${props => props.theme.fontWeight.bold};\n  margin-bottom: 1rem;\n`;\n\nexport const BodyContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tpadding: 1rem;\n\tflex: 1;\n\tjustify-content: space-between;\n\toverflow: hidden;\n\tbackground: ${props => props.theme.bg.quaternary};\n`\n\nexport const ButtonsContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: center;\n\tmin-height: fit-content;\n`;\n\n\nexport const ContentContainer = styled.div`\n\tbackground: ${props => props.theme.bg.quinary};\n\tborder-radius: 1rem;\n\tdisplay: flex;\n\tflex-direction: column;\n\toverflow: hidden;\n\tmargin-bottom: 1rem;\n\talign-items: center;\n`\n\nexport const NoButtonsText = styled.span`\n\tfont: ${props => props.theme.font.primary};\n\tfont-size: ${props => props.theme.fontSize.sz3};\n`\nconst buttonsCss = css`\n`\n\nconst noButtonsCss = css`\n  overflow: auto;\n\tdisplay: flex;\n  flex-drection: column;\n  justify-content: center;\n`\n\nexport const ReportButtonsContainer = styled.div`\n  align-items: center;\n  overflow: auto;\n  min-height: 5rem;\n  width: 100%;\n\n  ${props => props.isButtons ? buttonsCss : noButtonsCss }\n`\n\n\n\n\n\n","import React, {useEffect, useState} from \"react\";\n\n// external components\nimport Modal from 'react-modal';\nimport {useDispatch, useSelector} from \"react-redux\";\n\n// internal components\nimport Button from \"../../../../../basic/button/button\";\nimport DashboardButton from \"../../dashboard_buttons/dashboard_button/dashboard_button\";\n\n// actions\nimport {getCards, getProcessCards, putCard} from \"../../../../../../redux/actions/card_actions\";\n\n// styles\nimport * as styled from './finish_modal.style'\nimport {useTheme} from \"styled-components\";\nimport {getProcesses} from \"../../../../../../redux/actions/processes_actions\";\nimport Textbox from \"../../../../../basic/textbox/textbox\";\nimport {SORT_MODES} from \"../../../../../../constants/common_contants\";\nimport {sortBy} from \"../../../../../../methods/utils/card_utils\";\nimport Card from \"../../../../../side_bar/content/cards/card/card\";\n\nModal.setAppElement('body');\n\nconst FinishModal = (props) => {\n\n    const {\n        isOpen,\n        title,\n        close,\n        dashboard,\n        onSubmit\n    } = props\n\n    // get current buttons, default to empty array\n    const dashboardId = dashboard?._id?.$oid\n\n    const theme = useTheme()\n\n    const dispatch = useDispatch()\n    // const onGetProcessCards = (processId) => dispatch(getProcessCards(processId))\n    const dispatchGetCards = () => dispatch(getCards())\n    const dispatchGetProcesses = () => dispatch(getProcesses())\n    const onPutCard = async (card, ID) => await dispatch(putCard(card, ID))\n\n    const finishEnabledDashboard = useSelector(state => { return state.dashboardsReducer.finishEnabledDashboards[dashboardId] })\n    const processCards = useSelector(state => { return state.cardsReducer.processCards })\n    const processes = useSelector(state => { return state.processesReducer.processes }) || {}\n    const routes = useSelector(state => { return state.tasksReducer.tasks }) || {}\n\n    const [lotFilterValue, setLotFilterValue] = useState('')\n    const [shouldFocusLotFilter, setShouldFocusLotFilter] = useState(false)\n    const [submitting, setSubmitting] = useState(false)\n    const [availableKickOffCards, setAvailableKickOffCards] = useState([])\n    const [sortMode, setSortMode] = useState(SORT_MODES.END_DESCENDING)\n\n    const isButtons = availableKickOffCards.length > 0\n\n    const stationId = dashboard.station\n\n    /*\n    * handles the logic for when a kick-off button is pressed\n    *\n    * When a kick-off button is pressed, the card is to be moved from the queue of the current process it resides in\n    * to the first station in the process\n    *\n    * This is done by updating the cards station_id and route_id to those of the first station in the first route\n    * */\n    const onButtonClick = async (card) => {\n\n        // extract card attributes\n        const {\n            bins,\n            name: cardName,\n            process_id,\n            _id: cardId,\n        } = card\n\n        // update card\n        if(true) {\n\n            // extract first station's bin and queue bin from bins\n            const {\n                [stationId]: currentStationBin,\n                [\"FINISH\"]: finishBin,\n               ...unalteredBins\n            } = bins || {}\n\n            const queueBinCount = finishBin?.count ? finishBin.count : 0\n            const currentStationBinCount = currentStationBin?.count ? currentStationBin.count : 0\n\n            // udpated card will maintain all of the cards previous attributes with the station_id and route_id updated\n            const updatedCard = {\n                ...card,                                // spread unaltered attributes\n                bins: {\n                    ...unalteredBins,                   // spread unaltered bins\n                    [\"FINISH\"]: {\n                        ...finishBin,              // spread unaltered attributes of station bin if it exists\n                        count: parseInt(queueBinCount) + parseInt(currentStationBinCount)    // increment first station's count by the count of the queue\n                    }\n                },\n            }\n\n            // send update action\n            const result = await onPutCard(updatedCard, cardId)\n\n            var requestSuccessStatus = false\n\n            // check if request was successful\n            if(!(result instanceof Error)) {\n                requestSuccessStatus = true\n            }\n\n            onSubmit(cardName, requestSuccessStatus)\n            setSubmitting(false)\n            close()\n        }\n    }\n\n\n    /*\n    * renders an array of buttons for each kick off lot\n    * */\n    const renderKickOffButtons = () => {\n        return availableKickOffCards\n            .filter((currLot) => {\n                const {\n                    name: currLotName,\n                } = currLot || {}\n\n                if(\n                    currLotName\n                        .toLowerCase()\n                        .includes(lotFilterValue.toLowerCase())\n                ) {\n                    return true\n                }\n                else {\n                    return false\n                }\n            })\n            .map((currCard, cardIndex) => {\n                const {\n                    _id: lotId,\n                    // count = 0,\n                    name,\n                    start_date,\n                    end_date,\n                    bins = {}\n                } = currCard\n\n                const count = bins[stationId]?.count\n\n                return(\n                    <Card\n                        name={name}\n                        start_date={start_date}\n                        end_date={end_date}\n                        // objectName={objectName}\n                        count={count}\n                        id={lotId}\n                        index={cardIndex}\n                        onClick={()=>{\n                            onButtonClick(currCard)\n                        }}\n                        containerStyle={{marginBottom: \"0.5rem\", width: \"80%\", margin: '.5rem auto .5rem auto'}}\n                    />\n                )\n        })\n    }\n\n    /**\n     * When modal is opened, get all cards associated with the processes\n     *\n     *\n     */\n    useEffect(() => {\n        dispatchGetCards()\n        dispatchGetProcesses()\n    }, [])\n\n    /**\n     * Get the cards actually available for kick off\n     *\n     * For a card to be available for kick off, it must have at least 1 item in the 'queue' bin\n     *\n     * This function creates a temporary array for storing kick off cards as it checks each card of each process associated with the station\n     *\n     * This function loops through every card belonging to a process that the current station is the first station of\n     * Each card's bins attribute is checked to see if it contains any items in the \"QUEUE\" bin\n     *\n     * if a card is found to have items in the \"QUEUE\" bin, it is added to the list of kick off cards\n     *\n     * finally, local state variable availableKickOffCards is set to the list of kick off cards for later use\n     *\n     */\n    useEffect(() => {\n        var tempAvailableCards = []\n\n        if(finishEnabledDashboard && Array.isArray(finishEnabledDashboard)) finishEnabledDashboard.forEach((currProcessId) => {\n            const currProcessCards = processCards[currProcessId]\n\n            var filteredCards = []\n            if(currProcessCards) filteredCards = Object.values(currProcessCards).filter((currCard) => {\n                // currCard.station_id === \"QUEUE\"\n                if(currCard.bins && currCard.bins[stationId]) return true\n            })\n            tempAvailableCards = tempAvailableCards.concat(filteredCards)\n        })\n\n        if(sortMode) {\n            sortBy(tempAvailableCards, sortMode)\n        }\n        setAvailableKickOffCards(tempAvailableCards)\n\n    }, [processCards])\n\n    // if number of available lots >= 5, auto focus lot filter text box\n    useEffect(() => {\n        if(availableKickOffCards.length >= 5 ) {\n            setShouldFocusLotFilter(true)\n        }\n    }, [availableKickOffCards.length])\n\n    return (\n        <styled.Container\n            isOpen={isOpen}\n            contentLabel=\"Kick Off Modal\"\n            onRequestClose={close}\n            style={{\n                overlay: {\n                    zIndex: 500\n                },\n                content: {\n\n                }\n            }}\n        >\n            <styled.Header>\n                <styled.HeaderMainContentContainer>\n                <styled.Title>{title}</styled.Title>\n\n                    <div style={{display: \"flex\", alignItems: \"center\", justifyContent: \"center\", width: \"40rem\", minWidth: \"10rem\", maxWidth: \"50%\"}}>\n                        <Textbox\n                            focus={shouldFocusLotFilter}\n                            placeholder='Filter lots...'\n                            onChange={(e) => {\n                                setLotFilterValue(e.target.value)\n                            }}\n                            style={{flex: 1, background: theme.bg.quaternary }}\n                        />\n                    </div>\n                </styled.HeaderMainContentContainer>\n\n                <Button\n                    onClick={close}\n                    schema={'dashboards'}\n                >\n                    <i className=\"fa fa-times\" aria-hidden=\"true\"/>\n                </Button>\n            </styled.Header>\n\n            <styled.BodyContainer>\n                    <div style={{display: \"flex\", flexDirection: \"column\", overflow: \"hidden\"}}>\n                        <styled.ContentContainer>\n                            <styled.ReportButtonsContainer isButtons={isButtons}>\n                                {isButtons ?\n                                    renderKickOffButtons()\n                                    :\n                                    <styled.NoButtonsText>No available lots.</styled.NoButtonsText>\n                                }\n\n                            </styled.ReportButtonsContainer>\n                        </styled.ContentContainer>\n\n                        <styled.ButtonsContainer>\n                            <Button\n                                tertiary\n                                schema={\"dashboards\"}\n                                onClick={close}\n                                label={\"Close\"}\n                                type=\"button\"\n                            />\n                        </styled.ButtonsContainer>\n                    </div>\n            </styled.BodyContainer>\n        </styled.Container>\n    );\n};\n\nexport default FinishModal\n","import React, { Component, useState, useEffect } from 'react';\n\nimport { useHistory, useParams } from 'react-router-dom'\n\n// import external functions\nimport { connect, useDispatch, useSelector } from 'react-redux';\n\n// Import components\nimport DashboardButtonList from \"./dashboard_button_list/dashboard_button_list\";\nimport TaskAddedAlert from \"./task_added_alert/task_added_alert\";\nimport DashboardTaskQueue from './dashboard_task_queue/dashboard_task_queue'\n\n// Import Utils\nimport { ADD_TASK_ALERT_TYPE, PAGES } from \"../../../../../constants/dashboard_contants\";\nimport { deepCopy } from '../../../../../methods/utils/utils'\nimport uuid from 'uuid';\n\n// Import Hooks\nimport useWindowSize from '../../../../../hooks/useWindowSize'\n\n// Import API\nimport { postStatus } from '../../../../../api/status_api'\n\n// Import Actions\nimport { handlePostTaskQueue, postTaskQueue, putTaskQueue } from '../../../../../redux/actions/task_queue_actions'\nimport { dashboardOpen, setDashboardKickOffProcesses } from '../../../../../redux/actions/dashboards_actions'\n\nimport * as localActions from '../../../../../redux/actions/local_actions'\n\n// Import styles\nimport * as pageStyle from '../dashboards_header/dashboards_header.style'\nimport * as style from './dashboard_screen.style'\n\nimport DashboardsHeader from \"../dashboards_header/dashboards_header\";\n\n// import logging\nimport log from \"../../../../../logger\";\nimport { OPERATION_TYPES, TYPES } from \"../dashboards_sidebar/dashboards_sidebar\";\nimport ReportModal from \"./report_modal/report_modal\";\nimport KickOffModal from \"./kick_off_modal/kick_off_modal\";\nimport FinishModal from \"./finish_modal/finish_modal\";\nimport { getProcesses } from \"../../../../../redux/actions/processes_actions\";\nimport { isEmpty } from \"../../../../../methods/utils/object_utils\";\n\n\n\nconst logger = log.getLogger(\"DashboardsPage\");\n\nconst widthBreakPoint = 1026;\n\n\nconst DashboardScreen = (props) => {\n\n    const {\n        dashboardId,\n        setShowSidebar,\n        showSidebar,\n        setEditingDashboard,\n    } = props\n\n    // redux state\n    const status = useSelector(state => { return state.statusReducer.status })\n    const currentDashboard = useSelector(state => { return state.dashboardsReducer.dashboards[dashboardId] })\n    const taskQueue = useSelector(state => state.taskQueueReducer.taskQueue)\n    const devices = useSelector(state => state.devicesReducer.devices)\n    const positions = useSelector(state => state.positionsReducer.positions)\n    const tasks = useSelector(state => state.tasksReducer.tasks)\n    const hilResponse = useSelector(state => state.taskQueueReducer.hilResponse)\n    const stopAPICalls = useSelector(state => state.localReducer.stopAPICalls)\n\n    //actions\n    const dispatchGetProcesses = () => dispatch(getProcesses())\n\n    // self contained state\n    const [addTaskAlert, setAddTaskAlert] = useState(null);\n    const [reportModal, setReportModal] = useState(null);\n    const [allowKickOff, setAllowKickOff] = useState(false);\n\n    // actions\n    const dispatch = useDispatch()\n    const onDashboardOpen = (bol) => dispatch(dashboardOpen(bol))\n    const onHandlePostTaskQueue = (props) => dispatch(handlePostTaskQueue(props))\n    const onHILResponse = (response) => dispatch({ type: 'HIL_RESPONSE', payload: response })\n    const onLocalHumanTask = (bol) => dispatch({ type: 'LOCAL_HUMAN_TASK', payload: bol })\n    const onPutTaskQueue = async (item, id) => await dispatch(putTaskQueue(item, id))\n    const dispatchStopAPICalls = (bool) => dispatch(localActions.stopAPICalls(bool))\n\n    const history = useHistory()\n    const params = useParams()\n\n    const stationID = params.stationID\n    const dashboardID = params.dashboardID\n    const widgetPage = params.widgetPage\n    const size = useWindowSize()\n    const windowWidth = size.width\n\n    const mobileMode = windowWidth < widthBreakPoint;\n\n\n    /**\n     * When a dashboard screen is loaded, tell redux that its open\n     * On unmount tell redux that its not loaded\n     *\n     * Used in app.js and widget pages to make dashboard screen full size in mobile mode\n     */\n    useEffect(() => {\n        onDashboardOpen(true)\n        dispatchGetProcesses()\n        return () => {\n            onDashboardOpen(false)\n        }\n    }, [])\n\n\n    // If current dashboard is undefined, it probably has been deleted. So go back to locations just incase the station has been deleted too\n    if (currentDashboard === undefined) {\n        history.push(`/locations`)\n        return (\n            <>\n            </>\n        )\n    }\n\n    /**\n     * Handles buttons associated with selected dashboard\n     *\n     * If it's a AMR device dashboard, add a extra buttons\n     * The extra buttons are:\n     * 'Send to charge location'\n     * 'Send to Idle Location'\n     *\n     * If there's a human task in the human task Q (see human_task_queue_actions for more details)\n     * and if the the tasks unload location is the dashboards station, then show a unload button\n     */\n    const handleDashboardButtons = () => {\n        let { buttons } = currentDashboard\t// extract buttons from dashboard\n\n        // filter out buttons with missing task\n        buttons = buttons.filter((currButton) => {\n            const {\n                task_id,\n                type\n            } = currButton\n\n            if (task_id && !(tasks[task_id])) {\n                // console.error('Task does not exist! Hiding button from dashboard')\n                return false\n            }\n            return true\n        })\n\n        // If this dashboard belongs to a device and the device is a cart, add some unique buttons\n        if (!!devices[stationID] && devices[stationID].device_model === 'MiR100') {\n            const device = devices[stationID]\n\n            // If the device has an idle location, add a button for it\n            if (!!device.idle_location) {\n                buttons = [\n                    ...buttons,\n                    {\n                        'name': 'Send to Idle Location',\n                        'color': '#FF4B4B',\n                        'task_id': 'custom_task',\n                        'custom_task': {\n                            'type': 'position_move',\n                            'position': device.idle_location,\n                            'device_type': 'MiR_100',\n                        },\n                        'deviceType': 'MiR_100',\n                        'id': 'custom_task_idle'\n                    }\n                ]\n            }\n\n            // Map through positions and add a button if it's a charge position\n            Object.values(positions).map((position, ind) => {\n                if (position.type === 'charger_position') {\n                    buttons = [\n                        ...buttons,\n                        {\n                            'name': position.name,\n                            'color': '#FFFF4B',\n                            'task_id': 'custom_task',\n                            'custom_task': {\n                                'type': 'position_move',\n                                'position': position._id,\n                                'device_type': 'MiR_100',\n                            },\n                            'deviceType': 'MiR_100',\n                            'id': `custom_task_charge_${ind}`\n                        }\n                    ]\n                }\n            })\n\n        }\n        // Else if the task q contains a human task that is unloading, show an unload button\n        else if (Object.values(taskQueue).length > 0) {\n\n            // Map through each item and see if it's showing a station, station Id is matching the current station and a human task\n            Object.values(taskQueue).map((item, ind) => {\n                // If it is matching, add a button the the dashboard for unloading\n                if (!!item.hil_station_id && item.hil_station_id === stationID && hilResponse !== item._id && item?.device_type === 'human') {\n                    buttons = [\n                        ...buttons,\n                        {\n                            'name': item.hil_message,\n                            'color': '#90eaa8',\n                            'task_id': 'hil_success',\n                            'custom_task': {\n                                ...item\n                            },\n                            'id': `custom_task_charge_${ind}`\n                        }\n                    ]\n                }\n            })\n        }\n\n        return buttons\n    }\n\n    const handleRouteClick = async (Id, name, custom, deviceType) => {\n\n        // If a custom task then add custom task key to task q\n        if (Id === 'custom_task') {\n            setAddTaskAlert({\n                type: ADD_TASK_ALERT_TYPE.TASK_ADDED,\n                label: \"Task Added to Queue\",\n                message: name\n            })\n\n            // clear alert after timeout\n            return setTimeout(() => setAddTaskAlert(null), 1800)\n        }\n\n        // Else if its a hil success, execute the HIL success function\n        else if (Id === 'hil_success') {\n            return handleHilSuccess(custom)\n        }\n\n        let inQueue = false\n        Object.values(taskQueue).map((item) => {\n            // If its in the Q and not a handoff, then alert the user saying its already there\n            if (item.task_id === Id && !tasks[item.task_id].handoff) inQueue = true\n        })\n\n        // add alert to notify task has been added\n        if (inQueue) {\n            // display alert notifying user that task is already in queue\n            setAddTaskAlert({\n                type: ADD_TASK_ALERT_TYPE.TASK_EXISTS,\n                label: \"Alert! Task Already in Queue\",\n                message: `'${name}' not added`,\n            })\n\n            // clear alert after timeout\n            return setTimeout(() => setAddTaskAlert(null), 1800)\n        }\n        else {\n            if (deviceType !== 'human') {\n                setAddTaskAlert({\n                    type: ADD_TASK_ALERT_TYPE.TASK_ADDED,\n                    label: \"Task Added to Queue\",\n                    message: name\n                })\n\n                // clear alert after timeout\n                return setTimeout(() => setAddTaskAlert(null), 1800)\n            }\n        }\n    }\n\n    /**\n     * Handles event of task click\n     *\n     * Currently there are 3 types of tasks that can be clicked on a dashboard\n     *\n     * 1) Custom task\n     * This task is used to send the cart to a position that does not belong to a station (You cant make a route to a non-station position)\n     * It takes in the custom value, which is the position info, and sends the cart to that position from it's current location\n     *\n     * 2) HIL Success\n     * This is a button that shows up on dashboard when a human tasks unload location is the current dashboard\n     * Instead of showing a HIL modal, it shows an unload button\n     * The reason why is that humans locations are not known so a HIL modal would have to be on the screen the whole time instead of when a autonomous cart arives\n     *\n     * 3) Basic Routes\n     * This is the standard button for a dashboard that just executes the route\n     * If the task is already in the q, then show a warning label and dont add it\n     *\n     *\n     * @param {*} Id\n     * @param {*} name\n     * @param {*} custom\n     */\n    const handleTaskClick = async (type, Id, name, custom, deviceType) => {\n        switch (type.toUpperCase()) {\n            case TYPES.ROUTES.key:\n                if (!(Id === 'hil_success')) {\n                    onHandlePostTaskQueue({ dashboardID, tasks, deviceType, taskQueue, Id, name, custom })\n                }\n                handleRouteClick(Id, name, custom, deviceType)\n                break\n            case TYPES.OPERATIONS.key:\n                handleOperationClick()\n                break\n            case OPERATION_TYPES.REPORT.key:\n                setReportModal(OPERATION_TYPES.REPORT.key)\n                break\n            case OPERATION_TYPES.KICK_OFF.key:\n                setReportModal(OPERATION_TYPES.KICK_OFF.key)\n                break\n            case OPERATION_TYPES.FINISH.key:\n                setReportModal(OPERATION_TYPES.FINISH.key)\n                break\n            default:\n                break\n        }\n\n\n    }\n\n    const handleOperationClick = () => {\n        // setReportModal()\n    }\n\n    const handleReportClick = () => {\n    }\n\n\n    // Posts HIL Success to API\n    const handleHilSuccess = async (item) => {\n\n        let newItem = {\n            ...item,\n            hil_response: true,\n            // quantity: quantity,\n        }\n\n        const ID = deepCopy(item._id)\n\n        delete newItem._id\n        delete newItem.dashboard\n\n        // This is used to make the tap of the HIL button respond quickly\n        // TODO: This may not be necessary here\n        onHILResponse(ID)\n        setTimeout(() => onHILResponse(''), 2000)\n\n        await onPutTaskQueue(newItem, ID)\n\n    }\n\n    return (\n        <style.Container\n        // clear alert\n        // convenient to be able to clear the alert instead of having to wait for the timeout to clear it automatically\n        // onClick={() => setAddTaskAlert(null)}\n        >\n            {(reportModal === OPERATION_TYPES.REPORT.key) &&\n                <ReportModal\n                    isOpen={!!reportModal}\n                    title={\"Send Report\"}\n                    close={() => setReportModal(null)}\n                    dashboard={currentDashboard}\n                    onSubmit={(name, success) => {\n\n                        // set alert\n                        setAddTaskAlert({\n                            type: success ? ADD_TASK_ALERT_TYPE.REPORT_SEND_SUCCESS : ADD_TASK_ALERT_TYPE.REPORT_SEND_FAILURE,\n                            label: success ? \"Report Sent\" : \"Failed to Send Report\",\n                            message: name ? `\"` + name + `\"` : null\n                        })\n\n                        // clear alert\n                        setTimeout(() => setAddTaskAlert(null), 1800)\n                    }}\n                />\n            }\n\n            {(reportModal === OPERATION_TYPES.KICK_OFF.key) &&\n                <KickOffModal\n                    isOpen={true}\n                    stationId={stationID}\n                    title={\"Kick Off\"}\n                    close={() => setReportModal(null)}\n                    dashboard={currentDashboard}\n                    onSubmit={(name, success) => {\n                        // set alert\n                        setAddTaskAlert({\n                            type: success ? ADD_TASK_ALERT_TYPE.KICK_OFF_SUCCESS : ADD_TASK_ALERT_TYPE.KICK_OFF_FAILURE,\n                            label: success ? \"Lot Kick Off Successful\" : \"Lot Kick Off Failed\",\n                            message: name ? `\"` + name + `\"` : null\n                        })\n\n                        // clear alert\n                        setTimeout(() => setAddTaskAlert(null), 1800)\n                    }}\n                />\n            }\n            {(reportModal === OPERATION_TYPES.FINISH.key) &&\n                <FinishModal\n                    isOpen={true}\n                    stationId={stationID}\n                    title={\"Finish\"}\n                    close={() => setReportModal(null)}\n                    dashboard={currentDashboard}\n                    onSubmit={(name, success) => {\n                        // set alert\n                        setAddTaskAlert({\n                            type: success ? ADD_TASK_ALERT_TYPE.FINISH_SUCCESS : ADD_TASK_ALERT_TYPE.FINISH_FAILURE,\n                            label: success ? \"Finish Successful\" : \"Finish Failed\",\n                            message: name ? `\"` + name + `\"` : null\n                        })\n\n                        // clear alert\n                        setTimeout(() => setAddTaskAlert(null), 1800)\n                    }}\n                />\n            }\n            <DashboardsHeader\n                showTitle={false}\n                showBackButton={false}\n                showEditButton={true}\n                showSidebar={showSidebar}\n                setShowSidebar={setShowSidebar}\n                page={PAGES.DASHBOARD}\n                setEditingDashboard={() => setEditingDashboard(dashboardId)}\n\n                onBack={() => { setEditingDashboard(false) }}\n            >\n                <pageStyle.Title>{currentDashboard.name}</pageStyle.Title>\n            </DashboardsHeader>\n\n            <DashboardButtonList\n                buttons={handleDashboardButtons()}\n                addedTaskAlert={addTaskAlert}\n                onTaskClick={handleTaskClick}\n            />\n\n            <TaskAddedAlert\n                {...addTaskAlert}\n                visible={!!addTaskAlert}\n            />\n\n            {mobileMode &&\n                <DashboardTaskQueue />\n            }\n\n        </style.Container>\n    )\n}\n\nexport default DashboardScreen;\n","import styled from 'styled-components'\nimport * as style from '../../dashboard_list/DashboardsList.style'\n\nexport const AvailableTaskList = styled.a`\n    display: flex;\n`\nexport const DropdownButton = styled(style.AddButton)`\n\n`\nexport const DropdownButtonContainer = styled(style.AddButtonContainer)`\n`\n\nexport const AddTaskDropdownContainer = styled(style.AddContainer)`\n    margin-top: 1rem;\n`\n\nexport const FlexDiv = styled.div`\n    display: flex;\n    flex-direction: row;\n    flex-grow: 1;\n`","import styled, { css } from 'styled-components'\n\nimport { hexToRGBA, RGB_Linear_Shade, LightenDarkenColor } from '../../../../../../../methods/utils/color_utils';\n\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport ColorLensIcon from '@material-ui/icons/ColorLens';\nimport Textbox from \"../../../../../../basic/textbox/textbox\";\n\nexport const TransparentTextBox = styled(Textbox)`\n    background: rgba(0 ,0 ,0 , 0.2);\n    border-bottom: 2px solid rgba(0 ,0 ,0 , 0.1);\n\n    &:focus {\n        background-color: rgba(0 ,0 ,0 , 0.3);\n        border-bottom: 2px solid white;\n        outline: none !important;\n    }\n\n    text-align: center;\n`\n\nexport const DashboardEditButton = styled.div`\n    height: 6rem;\n\n    display: flex;\n    flex-direction: row;\n        \n    background: ${props => `linear-gradient(180deg, \n                                ${LightenDarkenColor(props.color, 20)} 0%, \n                                ${props.color} 50%, \n                                ${LightenDarkenColor(props.color, -20)} 100%)`};\n    border-radius: 0.6rem;\n    overflow: visible;\n        \n    // margins\n    margin: 0 2rem 0.5rem 2rem;\n        \n    // padding\n    padding: 0.5rem 1rem 0.5rem 1rem;\n    \n    outline: none;\n    &:focus {\n        outline: none;\n    }\n\n    letter-spacing: 1.5px;\n    box-shadow: 2px 2px 2px rgba(0, 0, 0, 0.5);\n    \n    outline: none;\n    user-select: none;\n\n    transition: transform 0.2s ease;\n\n    cursor: grab;\n    &:active {\n        box-shadow: 2px 2px 2px rgba(0,0,0,0.5);\n        transform: translateY(-2px);\n        cursor: grabbing;\n    }\n\n}\n`\n\nexport const CenterContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    flex-grow: 1;\n    align-items: center;\n    justify-content: center;\n`\n\nexport const TaskName = styled.span`\n\n  font: ${props => props.theme.font.primary};\n  font-size: ${props => props.theme.fontSize.sz3};\n\n  color: ${props => props.theme.bg.tertiary};\n\n`\n\n// ===== Delete Button ===== //\nexport const DeleteButtonIcon = styled(DeleteForeverIcon)`\n    color: white;\n\n    &:hover {\n        color: ${LightenDarkenColor('#FFFFFF', -20)};\n    }\n\n    width: 5rem;\n    height: 5rem;\n  \n`\n\nexport const DeleteButton = styled.button`\n    margin: 0;\n    padding: 0;\n    background: transparent;\n    border: transparent;\n    outline: none;\n    z-index: 7;\n    color: white;\n    \n    &:focus {\n        outline: none;\n    }\n\n    width: 3rem;\n    margin-left: 1rem;\n\n   \n`\n\nexport const ColorDropdownInnerContainer = styled.div`\n    height: 100%;\n    line-height: 100%;\n\n    position: relative;\n    width: 8rem;\n    margin-right: 1rem;\n`","import React, {useContext, useState} from 'react';\nimport { useSelector } from 'react-redux'\n\n// Import  Components\nimport TextField from \"../../../../../../basic/form/text_field/text_field\";\nimport DeleteFieldButton from \"../../../../../../basic/form/delete_field_button/delete_field_button\";\nimport ColorField from \"../../../../../../basic/form/color_field/color_field\";\n\n// Import Styles\nimport * as styled from './dashboard_route_field.style';\nimport * as buttonFieldStyles from \"../button_fields.style\";\nimport {ThemeContext} from \"styled-components\";\n\n// import logging\nimport log from '../../../../../../../logger'\nimport {DASHBOARD_BUTTON_COLORS} from \"../../../../../../../constants/dashboard_contants\";\nconst logger = log.getLogger(\"Dashboards\", \"EditDashboard\");\n\n\nconst DashboardRouteField = props => {\n\n\t// extract props\n\tconst {\n\t\tbutton,\n\t\tind,\n\t} = props\n\n\tconst themeContext = useContext(ThemeContext);\n\n\tconst tasks = useSelector(state => state.tasksReducer.tasks)\n\tconst taskName = tasks[button.task_id]?.name || \"TASK NOT FOUND\"\n\n\tconst schema = themeContext.schema.routes\n\tconst iconClassName = schema.iconName\n\n\n\treturn(\n\t\t// set zindex to make sure the dropdown from buttons above display on top of the buttons below it\n\t\t<buttonFieldStyles.Container style={{position: 'relative', zIndex: `${100-ind}`}}>\n\t\t\t<buttonFieldStyles.DashboardEditButton color={button.color} >\n\n\t\t\t\t<ColorField\n\t\t\t\t\tname={`buttons[${ind}].color`}\n\t\t\t\t\tContainer={buttonFieldStyles.ColorDropdownInnerContainer}\n\t\t\t\t\ttype={\"button\"}\n\t\t\t\t\tcolors={DASHBOARD_BUTTON_COLORS}\n\t\t\t\t/>\n\n\t\t\t\t<buttonFieldStyles.CenterContainer>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tname={`buttons[${ind}].name`}\n\t\t\t\t\t\tInputComponent={buttonFieldStyles.TransparentTextBox}\n\t\t\t\t\t\tstyled={{textAlign: 'center'}}\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tlabel={null}\n\t\t\t\t\t/>\n\t\t\t\t\t<buttonFieldStyles.TaskName>{taskName}</buttonFieldStyles.TaskName>\n\t\t\t\t</buttonFieldStyles.CenterContainer>\n\n\t\t\t</buttonFieldStyles.DashboardEditButton>\n\n\t\t\t<buttonFieldStyles.RightContentContainer>\n\t\t\t\t<buttonFieldStyles.SchemaIcon className={iconClassName} color={schema.solid}></buttonFieldStyles.SchemaIcon>\n\n\t\t\t\t<DeleteFieldButton\n\t\t\t\t\tname={`buttons`}\n\t\t\t\t\tindex={ind}\n\t\t\t\t\ttype={\"button\"}\n\t\t\t\t\tButtonComponent={buttonFieldStyles.DeleteButton}\n\t\t\t\t\tViewComponent={buttonFieldStyles.DeleteButtonIcon}\n\t\t\t\t\tfontSize={\"large\"}\n\t\t\t\t/>\n\t\t\t</buttonFieldStyles.RightContentContainer>\n\t\t</buttonFieldStyles.Container>\n\n\t)\n\n}\n\nexport default (DashboardRouteField)\n","import React, {useContext, useState} from 'react';\n\n// Components\nimport TextField from \"../../../../../../basic/form/text_field/text_field\";\nimport DeleteFieldButton from \"../../../../../../basic/form/delete_field_button/delete_field_button\";\nimport ColorField from \"../../../../../../basic/form/color_field/color_field\";\n\n// constants\nimport {OPERATION_TYPES} from \"../../../dashboards_sidebar/dashboards_sidebar\";\nimport {DASHBOARD_BUTTON_COLORS} from \"../../../../../../../constants/dashboard_contants\";\n\n// styles\nimport * as styled from './dashboard_report_field.style';\nimport * as buttonFieldStyles from \"../button_fields.style\";\nimport {theme} from \"../../../../../../../theme\";\n\n// logging\nimport log from '../../../../../../../logger'\n\nconst logger = log.getLogger(\"Dashboards\", \"EditDashboard\");\n\nconst DashboardReportField = props => {\n\n\t// extract props\n\tconst {\n\t\tbutton,\n\t\tind,\n\t} = props\n\n\tconst taskName = OPERATION_TYPES[button.type].name\n\n\tconst schema = theme.main.schema[button.type.toLowerCase()]\n\tconst iconClassName = schema.iconName\n\n\treturn(\n\t\t// set zindex to make sure the dropdown from buttons above display on top of the buttons below it\n\t\t<buttonFieldStyles.Container style={{position: 'relative', zIndex: `${100-ind}`}}>\n\t\t\t<buttonFieldStyles.DashboardEditButton color={button.color}>\n\n\t\t\t\t<ColorField\n\t\t\t\t\tname={`buttons[${ind}].color`}\n\t\t\t\t\tContainer={buttonFieldStyles.ColorDropdownInnerContainer}\n\t\t\t\t\ttype={\"button\"}\n\t\t\t\t\tcolors={DASHBOARD_BUTTON_COLORS}\n\t\t\t\t/>\n\n\t\t\t\t<buttonFieldStyles.CenterContainer>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tname={`buttons[${ind}].name`}\n\t\t\t\t\t\tInputComponent={buttonFieldStyles.TransparentTextBox}\n\t\t\t\t\t\tstyled={{textAlign: 'center'}}\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tlabel={null}\n\t\t\t\t\t/>\n\t\t\t\t\t<buttonFieldStyles.TaskName>{taskName}</buttonFieldStyles.TaskName>\n\t\t\t\t</buttonFieldStyles.CenterContainer>\n\n\n\t\t\t</buttonFieldStyles.DashboardEditButton>\n\n\t\t\t<buttonFieldStyles.RightContentContainer>\n\t\t\t\t<buttonFieldStyles.SchemaIcon className={iconClassName} color={button.color ? button.color : schema.color} ></buttonFieldStyles.SchemaIcon>\n\n\t\t\t\t<DeleteFieldButton\n\t\t\t\t\tname={`buttons`}\n\t\t\t\t\tindex={ind}\n\t\t\t\t\ttype={\"button\"}\n\t\t\t\t\tButtonComponent={buttonFieldStyles.DeleteButton}\n\t\t\t\t\tViewComponent={buttonFieldStyles.DeleteButtonIcon}\n\t\t\t\t\tfontSize={\"large\"}\n\t\t\t\t/>\n\t\t\t</buttonFieldStyles.RightContentContainer>\n\t\t</buttonFieldStyles.Container>\n\n\t)\n\n}\n\nexport default (DashboardReportField)\n","import React, { useRef, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux'\n\nimport { SortableContainer } from \"react-sortable-hoc\";\nimport DashboardEditTasksField from \"../button_fields/dashboard_route_field/dashboard_route_field\";\n\nimport ReactList from 'react-list';\n\nimport * as style from \"./dashboard_editor_button_renderer.style\"\nimport { Container, Draggable } from 'react-smooth-dnd';\n\nimport log from \"../../../../../../logger\"\nimport {OPERATION_TYPES, TYPES} from \"../../dashboards_sidebar/dashboards_sidebar\";\nimport DashboardReportField from \"../button_fields/dashboard_report_field/dashboard_report_field\";\n\nconst logger = log.getLogger(\"Dashboards\")\n\nconst DashboardEditorButtonRenderer = SortableContainer((props) => {\n\n    const tasks = useSelector(state => state.tasksReducer.tasks)\n\n    const {\n        buttons,\n        onDrop,\n    } = props\n\n    return (\n        <Container\n            onDrop={onDrop}\n            groupName=\"dashboard-buttons\"\n            getChildPayload={() => null}\n            style={{ width: '100%', height: '100%' }}\n        >\n            {buttons.map((button, ind) =>\n                <Draggable key={button.id} index={ind} style={{ overflow: 'visible' }}>\n                    {/*{(button.type === OPERATION_TYPES.REPORT.key || button.type === OPERATION_TYPES.KICK_OFF.key) ?*/}\n                    {(button.type === OPERATION_TYPES.REPORT.key) ?\n                        <DashboardReportField\n                            button={button}\n                            ind={ind}\n                            {...props}\n                        />\n                        :\n                        ((button.type === TYPES.ROUTES.key) || (!button.type)) &&\n                        <DashboardEditTasksField\n                            button={button}\n                            ind={ind}\n                            {...props}\n                        />\n                    }\n                    { (button.type === OPERATION_TYPES.KICK_OFF.key) &&\n                        <DashboardReportField\n                            button={button}\n                            ind={ind}\n                            {...props}\n                        />\n                    }\n                    { (button.type === OPERATION_TYPES.FINISH.key) &&\n                    <DashboardReportField\n                        button={button}\n                        ind={ind}\n                        {...props}\n                    />\n                    }\n                </Draggable>\n            )}\n        </Container>\n    )\n})\n\nexport default DashboardEditorButtonRenderer\n","import styled from \"styled-components\";\nimport {Form, Formik} from \"formik\";\nimport SmallButton from \"../../../../basic/small_button/small_button\";\nimport * as pageStyle from \"../dashboards_header/dashboards_header.style\"\n\nexport const Header = styled(pageStyle.Header)`\n    // align-items: center;\n`\n\nexport const Title = styled(pageStyle.Title)`\n    margin-right: 1rem;\n`\n\nexport const FooterContainer = styled.div`\n    z-index: 0;\n    width: 100%;\n    margin:0;\n    \n    display: flex;\n    justify-content: center;\n    \n    background-image: linear-gradient(to top, ${props => props.theme.bg.tertiary}, ${props => props.theme.bg.primary});\n    border-top: thin solid ${props => props.theme.bg.tertiary};\n    box-shadow: 0px 0px 15px black;\n    \n    padding: 1rem;\n`\n\nexport const StyledForm = styled(Form)`\n\n    display: flex;\n    flex-direction: column;\n    \n    width: 100%;\n    height: 100%;\n    max-height: 100%;\n\n    background: ${props => props.theme.bg.quaternary};\n    \n`\n\nexport const BodyContainer = styled.div`\n    width: 100%;\n    height: 100%;\n    max-height: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    overflow: scroll;\n    \n    margin: 0;\n    padding: 0;\n\n    // hide scroll bar\n\t::-webkit-scrollbar {\n\t\twidth: 0px;  /* Remove scrollbar space */\n\t\t// background: transparent;  /* Optional: just make scrollbar invisible */\n\t}\n\t::-webkit-scrollbar-thumb {\n\t\tbackground: transparent;\n\t}\n    \n`\n\nexport const Button = styled(SmallButton)`\n    margin-left: 1rem;\n    margin-right: 1rem;\n    \n    padding-left: 1rem;\n    padding-right: 1rem;\n    padding-top: .5rem;\n    padding-bottom: .5rem;\n    \n`\n\nexport const TitleTextbox = styled.input`\n\n    font-size: ${props => props.theme.fontSize.sz2};\n\n    &::placeholder {\n        font-size: ${props => props.theme.fontSize.sz2};\n    }\n\n`;","import styled from 'styled-components';\nimport AssignmentOutlinedIcon from '@material-ui/icons/AssignmentOutlined';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\n\nimport {RGB_Linear_Shade, hexToRGBA} from \"../../../../methods/utils/color_utils\";\n\nexport const PageContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    height: 100%;\n    max-height: 100%;\n    overflow: hidden;\n    max-width: 100%;\n    width: 100%;\n    \n    background: ${props => props.theme.bg.octonary};\n    \n    flex: 1;\n    \n`\n\nexport const Container = styled.div`\n    display: flex;\n    flex-grow: 1;\n    flex-direction: column;\n    \n    width: 100%;\n    max-width: 100%;\n    overflow: hidden;\n    height: 100%;\n    max-height: 100%;\n`\n\n\n\n\n\n\n","import styled from 'styled-components'\nimport AddBoxIcon from '@material-ui/icons/AddBox';\n\nexport const Container = styled.button`\n\n    width: 80%;\n    height: 5rem;\n    min-height: 5rem;\n    background: ${props => props.theme.bg.primary};\n    border-radius: 1rem;\n    \n    border: 3px solid ${props => props.theme.bg.secondary};\n    color: ${props => props.theme.bg.secondary};\n    \n    \n    &:focus {\n        outline: none;\n    }\n`\n\nexport const StyledAddBoxIcon = styled(AddBoxIcon)`\n    // font-size: ${props => props.theme.font.fontSize.sz1};\n    font-size: 2rem;\n    height: 2rem;\n`","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport AddBoxIcon from '@material-ui/icons/AddBox';\n\nimport * as style from \"./dashboard_add_button.style\"\n\nimport log from '../../../../../../logger'\nimport {useDrag, useDrop} from \"react-dnd\";\n\nconst logger = log.getLogger(\"Dashboards\")\n\nconst DashboardAddButton = (props) => {\n    const { onDrop } = props\n\n    const [{opacity}, drop] = useDrop({\n        accept:  \"DashboardSidebarButton\",\n        drop: (item, monitor) => {\n            // console.log(\"drop item\",item)\n            onDrop(item)\n            return item\n        },\n        hover: (item, monitor) => {\n            const isOver = monitor.isOver({ shallow: true })\n            // logger.log(\"isOver\",isOver)\n\n        },\n        // collect: (monitor) => ({\n        //     opacity: monitor.isOver({ shallow: true }) ? 0.5 : 1\n        // })\n    })\n\n    // logger.log(\"DashboardAddButton: opacity\", opacity)\n\n    return(\n        <style.Container\n            ref={drop}\n            // opacity={opacity}\n        >\n            <AddBoxIcon/>\n        </style.Container>\n    )\n}\n\nexport default DashboardAddButton","import React, { useEffect, useState } from 'react';\n\n// import external functions\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom'\nimport { Formik } from \"formik\";\nimport { HTML5Backend } from 'react-dnd-html5-backend'\nimport { DndProvider } from 'react-dnd'\nimport { createSelector } from 'reselect'\nimport { isEmpty } from \"ramda\"\n\nimport { SortableContainer } from 'react-sortable-hoc';\nimport arrayMove from 'array-move';\n\n// Import components\nimport DashboardAddTask from './dashboard_add_task/dashboard_add_task'\nimport DashboardRenderer from \"./dashboard_editor_button_renderer/dashboard_editor_button_renderer\";\nimport DashboardsHeader from \"../dashboards_header/dashboards_header\";\n\n// Import basic components\nimport SmallButton from '../../../../basic/small_button/small_button'\nimport TextField from \"../../../../basic/form/text_field/text_field\";\nimport Textbox from '../../../../basic/textbox/textbox'\n\n// Import Utils\nimport { deepCopy } from '../../../../../methods/utils/utils'\nimport { handleAvailableTasks, handleCurrentDashboard } from '../../../../../methods/utils/dashboards_utils'\nimport { randomHash } from \"../../../../../methods/utils/utils\";\n\n// Import Actions\nimport { putDashboard, deleteDashboard, postDashboard } from '../../../../../redux/actions/dashboards_actions'\nimport { postTaskQueue } from '../../../../../redux/actions/task_queue_actions'\nimport { putStation } from '../../../../../redux/actions/stations_actions'\n\nimport { dashboardSchema } from \"../../../../../methods/utils/form_schemas\";\n\n// Import styles\nimport * as style from './dashboard_editor.style'\nimport * as pageStyle from '../dashboards_page.style'\n\n// Import logger\nimport log from '../../../../../logger.js';\nimport DashboardAddButton from \"./dashboard_add_button/dashboard_add_button\";\nimport { useChange } from \"../../../../basic/form/useChange\";\nimport { PAGES } from \"../../../../../constants/dashboard_contants\";\n\nconst logger = log.getLogger(\"Dashboards\", \"EditDashboard\");\n\nconst DashboardEditor = (props) => {\n    let {\n        dashboard,\n        setShowSidebar,\n        showSidebar,\n    } = props\n\n    const history = useHistory()\n    const dispatch = useDispatch()\n    const params = useParams()\n\n\n    const onDeleteDashboard = async (ID) => await dispatch(deleteDashboard(ID))\n    const onPutStation = async (station, ID) => await dispatch(putStation(station, ID))\n    const onPutDashboard = (dashboard, id) => dispatch(putDashboard(dashboard, id))\n    const onPostDashboard = (dashboard) => dispatch(postDashboard(dashboard))\n\n\n    const stations = useSelector(state => state.stationsReducer.stations)\n\n    /*\n    * Returns initialValues object for Formik\n    */\n    const getInitialValues = () => {\n        let initialValues = {\n            name: \"\",\n            buttons: []\n        }\n\n        try {\n            const buttons = dashboard.buttons   // get buttons\n\n            let initialButtons = [];\n            buttons.map((value, index) => {\n                initialButtons.push(value)\n            })\n\n            initialValues = {\n                name: dashboard.name,\n                buttons: initialButtons\n            }\n        } catch (e) {\n\n        }\n\n        return initialValues\n    }\n\n    /*\n    * Returns initialErrors object for Formik\n    */\n    const getInitialErrors = () => {\n        let initialErrors = {} // initialize error object to empty\n\n        // check name\n        if (!dashboard.name) initialErrors.name = \"Please enter a name.\"\n\n        // check button errors\n        let buttonErrors = [] // stores button errors\n        try { // try / catch in case dashboard is null or doesn't have buttons\n            const buttons = dashboard.buttons // get buttons\n\n            for (const button of buttons) {\n                let buttonError = {} // errors for current button - initialize to empty\n                if (!button.name) buttonError.name = \"Please enter name.\" // button must have name\n                if (!isEmpty(buttonError)) buttonErrors.push(buttonError) // only add the error if it isn't empty\n            }\n        }\n        catch (e) { }\n        if (buttonErrors.length > 0) initialErrors.buttons = buttonErrors // only add to error object if errors were found\n\n\n        return initialErrors\n    }\n\n    /* handles for submission, updates redux and api\n    * requirements\n    *   name can't be empty\n    *   dashboard names must be unique\n    *   button names can't be empty\n    * */\n    const handleSubmit = async (values) => {\n        logger.log(\"DashboardEditor: handleSubmit: values\", values)\n\n        // destructure values\n        const { name, buttons } = values\n\n        // clone dashboard\n        const dashboardCopy = deepCopy(dashboard)\n        logger.log(\"DashboardEditor: handleSubmit: dashboardCopy\", dashboardCopy)\n\n        // save id then delete (api doesn't want id in object)\n        // get dashboard id\n        let dashboardId = null\n\n        // use try catch block to prevent error in the case that a dashboard doesn't have _id key\n        try {\n            dashboardId = dashboardCopy._id.$oid\n            delete dashboardCopy._id\n        }\n        catch (e) { }\n\n        logger.log(\"DashboardEditor: handleSubmit: dashboardId\", dashboardId)\n\n        // update dashboard objects properties with submit values\n        dashboardCopy.buttons = buttons\n        dashboardCopy.name = name\n        console.log(buttons)\n\n        // if dashboard has id, it must already exist, so update with put\n        if (dashboardId) {\n            // update\n            onPutDashboard(dashboardCopy, dashboardId)\n        }\n        // otherwise, dashboard is new, so create with post\n        else {\n            // create\n            onPostDashboard(dashboardCopy)\n        }\n\n        history.push(`/locations/${params.stationID}/dashboards/${params.dashboardID}/`)\n\n\n    }\n\n    return (\n        <Formik\n            initialValues={getInitialValues()}\n            initialTouched={{\n                name: false,\n                buttons: [false]\n            }}\n            initialErrors={getInitialErrors()}\n            enableReinitialize={false}\n            validateOnChange={true}\n            validateOnMount={true}\n            validateOnBlur={true}\n            validationSchema={dashboardSchema}\n            onSubmit={async (values, { setSubmitting }) => {\n                logger.log(\"onSubmit called\")\n                setSubmitting(true);    // set submitting to true on start\n                await handleSubmit(values)        // perform submission logic\n                setSubmitting(false);   // set submitting to false after completion\n            }}\n        >\n            {(formikProps) => {\n                const { errors, values, touched, initialValues } = formikProps; // extract formik props\n\n                // disabled submission if there are any errors or not all fields have been touched\n                const allTouched = Object.values(touched).every((val) => val === true)\n                const submitDisabled = !(Object.values(errors).length === 0)\n\n                // adds a button to buttons key in Formik values\n                const handleDrop = (dropResult) => {\n                    const { removedIndex, addedIndex, payload, element } = dropResult;\n                    console.log(removedIndex, addedIndex, payload, element)\n                    const buttonsCopy = (values.buttons)\n\n                    if (payload === null) { //  No new button, only reorder\n                        const shiftedButtonsCopy = arrayMove(buttonsCopy, removedIndex, addedIndex)\n                        formikProps.setFieldValue(\"buttons\", shiftedButtonsCopy)\n                    } else { // New button\n                        if (addedIndex !== null) {\n                            payload.id = randomHash()\n                            buttonsCopy.splice(addedIndex, 0, payload)\n                            formikProps.setFieldValue(\"buttons\", buttonsCopy)\n                        }\n\n                    }\n\n                }\n\n                const handleChangeButton = (id, attr) => {\n                    const buttonsCopy = (values.buttons)\n                    const buttonIndex = buttonsCopy.findIndex(b => b.id == id)\n\n                    Object.assign(buttonsCopy[buttonIndex], attr)\n                    formikProps.setFieldValue(\"buttons\", buttonsCopy)\n                }\n\n                const handleDeleteButton = (id) => {\n                    const buttonsCopy = (values.buttons)\n                    const buttonIndex = buttonsCopy.findIndex(b => b.id == id)\n\n                    buttonsCopy.splice(buttonIndex, 1)\n                    formikProps.setFieldValue(\"buttons\", buttonsCopy)\n                }\n\n                const handleDeleteDashboard = async () => {\n\n                    const stationCopy = deepCopy(stations[params.stationID])\n\n                    const deleteDashboardIndex = stationCopy.dashboards.indexOf(params.dashboardID)\n\n                    stationCopy.dashboards.splice(deleteDashboardIndex, 1)\n\n                    history.push(`/locations/${params.stationID}/dashboards`)\n                    await onPutStation(stationCopy, stationCopy._id)\n                    await onDeleteDashboard(params.dashboardID)\n\n                }\n\n                return (\n                    <style.StyledForm>\n                        <DashboardsHeader\n                            showTitle={false}\n                            showSidebar={showSidebar}\n                            showBackButton={true}\n                            showSaveButton={true}\n                            setShowSidebar={setShowSidebar}\n                            page={PAGES.EDITING}\n                            onDelete={() => {\n                                handleDeleteDashboard()\n                            }}\n                            saveDisabled={submitDisabled}\n                            onBack={() => history.push(`/locations/${params.stationID}/dashboards/${params.dashboardID}/`)}\n                        >\n                            <TextField\n                                name={\"name\"}\n                                disabled={dashboard.name === 'Robot Screen'}\n                                textStyle={{ fontWeight: 'Bold' }}\n                                placeholder='Enter Dashboard Name'\n                                type='text'\n                                InputComponent={Textbox}\n                                inputProps={{\n                                    style: {\n                                        fontSize: '1.2rem',\n                                        fontWeight: '600',\n                                        textAlign: 'center',\n                                        padding: '0 2rem 0 4rem',\n                                        marginTop: '0'\n                                    }\n                                }}\n                            />\n                        </DashboardsHeader>\n                        <style.BodyContainer>\n                            <DashboardRenderer\n                                buttons={values.buttons}\n                                onDrop={handleDrop}\n\n                                handleChangeButton={handleChangeButton}\n                                handleDeleteButton={handleDeleteButton}\n                            />\n                        </style.BodyContainer>\n                    </style.StyledForm>\n\n                )\n            }\n            }\n        </Formik>\n\n    )\n}\nexport default DashboardEditor;\n","import React, { useEffect, useState } from 'react';\n\n// external functions\nimport { useSelector, useDispatch } from 'react-redux'\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport { DndProvider } from \"react-dnd\";\nimport { Container } from 'react-smooth-dnd'\nimport { withRouter } from \"react-router-dom\";\n\n// Import Components\nimport DashboardsList from './dashboard_list/DashboardsList'\nimport DashboardScreen from './dashboard_screen/dashboard_screen'\nimport DashboardEditor from './dashboard_editor/dashboard_editor'\nimport DashboardsSidebar from \"./dashboards_sidebar/dashboards_sidebar.jsx\"\n\nimport { PAGES } from \"../../../../constants/dashboard_contants\";\n\nimport {getDashboards, setDashboardKickOffProcesses, setDashboardFinishProcesses} from '../../../../redux/actions/dashboards_actions'\nimport { getTasks } from '../../../../redux/actions/tasks_actions'\n\n// Import Styles\nimport * as style from './dashboards_page.style'\n\n// logging\nimport log from \"../../../../logger\";\n\nconst logger = log.getLogger(\"DashboardsPage\");\n\nconst DashboardsPage = (props) => {\n\n    // redux state\n    const dispatch = useDispatch()\n    const dispatchSetDashboardKickOffProcesses = async (dashboardId, kickOffEnabled) => await dispatch(setDashboardKickOffProcesses(dashboardId, kickOffEnabled))\n    const dispatchSetDashboardFinishProcesses = async (dashboardId, finishEnabled) => await dispatch(setDashboardFinishProcesses(dashboardId, finishEnabled))\n    const dispatchGetTasks = () => dispatch(getTasks())\n\n    const dashboards = useSelector(state => state.dashboardsReducer.dashboards)\n    const stations = useSelector(state => state.stationsReducer.stations)\n    const devices = useSelector(state => state.devicesReducer.devices)\n    const processes = useSelector(state => { return state.processesReducer.processes })\n    const routes = useSelector(state => { return state.tasksReducer.tasks })\n\n    // self contained state\n    const [selectedDashboard, setSelectedDashboard] = useState(null);\n    const [editingDashboard, setEditingDashboard] = useState(null);\n\n    const [showSidebar, setShowSidebar] = useState(true);\n    const [sidebarWidth, setSidebarWidth] = useState(window.innerWidth < 2000 ? 400 : 700)\n\n    // extract url params\n    const { stationID, dashboardID, editing } = props.match.params\n\n    /**\n     * This useEffect checks whether the current dashboard is kick off enabled\n     *\n     * In order to be kick off enabled, the dashboard's station must be the first station in a process\n     *\n     * To check if the dashboard's station is the first station in a process,\n     * it checks the load station of the first route in each process.\n     * For any process where the first station's id matches the current dashboard's station id, the process id is added to list.\n     * This list is then dispatched to redux with the key being the dashboard's ID and value is the list\n     *\n     * This information is used for determining whether or not to enable the KICK OFF button for a given dashboard\n     */\n    useEffect(() => {\n\n        // list of all processes that the station is the first station of the process\n        var firstStationProcesses = []\n        var lastStationProcesses = []\n\n        // loop through processes and check if the load station of the first route of any process matches the current dashboards station\n        Object.values(processes).forEach((currProcess) => {\n            if(currProcess && currProcess.routes && Array.isArray(currProcess.routes)) {\n                // get first routes id, default to null\n                const firstRouteId = currProcess.routes[0]\n\n                // get route from route id, default to null\n                const currRoute = firstRouteId ? routes[firstRouteId] : null\n\n                // get station id from load key of route\n                const loadStationId = currRoute?.load?.station\n\n                // if the loadStationId matches the current dashboard's stationId, add the process's id to the list\n                if(loadStationId === stationID) firstStationProcesses.push(currProcess._id)\n\n                // now check if station is last route of any process\n                // get last routes id\n                const lastRouteId = currProcess.routes[currProcess.routes.length - 1]\n\n                // get route from route id, default to null\n                const lastRoute = lastRouteId ? routes[lastRouteId] : null\n\n                // get station id from unload key of route\n                const unloadStationId = lastRoute?.unload?.station\n\n                // if the unloadStationId matches the current dashboard's stationId, add the process's id to the list of last stations\n                if(unloadStationId === stationID) lastStationProcesses.push(currProcess._id)\n\n\n            }\n        })\n\n        if(firstStationProcesses.length > 0 ) {\n            dispatchSetDashboardKickOffProcesses(dashboardID, firstStationProcesses)\n        }\n\n        if(lastStationProcesses.length > 0) {\n            dispatchSetDashboardFinishProcesses(dashboardID, lastStationProcesses)\n        }\n\n    }, [processes])\n\n    // On page load, load the first and only dashboard with this station\n    // Leaving the rest of the code in for adding dashboards and dashboard list view because we may need it in the future\n    useEffect(() => {\n        try {\n            const dashboardType = !!stations[stationID] ? stations[stationID] : devices[stationID]\n            const dashID = dashboardType.dashboards[0]\n            props.history.push(`/locations/${stationID}/dashboards/${dashID}`)\n        } catch (error) {\n            \n        }\n\n        return () => {\n\n        }\n    }, [])\n\n    // checks url params and updates editingDashboard / selectedDashboard accordingly\n    useEffect(() => {\n\n        // COMMENT OUT FOR NOW: All station should just have one dashboard. Currently no need to add dashboards.\n        // // if dashboard id is 'new', go to dashboard editor with new dashboard template\n        // if(dashboardID === \"new\") {\n        //     const dashboardTemplate  = {\n        //         name: \"\",\n        //         buttons: [],\n        //         station: stationID\n        //     }\n\n        //     setSelectedDashboard(null)   // only selected OR editing should be set\n        //     setEditingDashboard(dashboardTemplate)   // set editing to empty template\n        // }\n\n        // else {\n        // get dashboard from dashboardID url param\n\n\n        const dashboard = dashboards[dashboardID]\n\n        // if a dashboard was found, then update either selected or editing\n        if (dashboard) {\n\n\n            // if url does not contain editing param, set selected dashboard\n            if (!editing) {\n                setSelectedDashboard(dashboardID)   // set selected\n                setEditingDashboard(null)   // only selected OR editing should be set\n                logger.log(\"useEffect dashboards[dashboardID]\", dashboards[dashboardID])\n            }\n            // url contains editing param, so set dashboard to editing\n            else {\n                setEditingDashboard(dashboard)  // set editing\n                setSelectedDashboard(null)  // only selected OR editing should be set\n            }\n        }\n\n        // if no matching dashboard was found, set editing and selected to null\n        else {\n            setEditingDashboard(null)\n            setSelectedDashboard(null)\n        }\n        // }\n    }, [dashboardID, dashboards, editing])\n\n\n    // sets url to main dashboards page for current station - used in other pages to go back\n    function goToMainPage() {\n        props.history.push(`/locations/${stationID}/dashboards`);\n    }\n\n    // returns string of current page name based on current state\n    const getPage = () => {\n        let page = \"\"\n\n        // if neither a dashboard is selected nor being edited, show main page\n        if (!(selectedDashboard || editingDashboard)) {\n            page = PAGES.DASHBOARDS\n        }\n        // if editing, show editing page\n        else if (editingDashboard) {\n            page = PAGES.EDITING\n        }\n        // only other option is dashboard is selected\n        else {\n            page = PAGES.DASHBOARD\n        }\n        return page\n    }\n    const page = getPage()\n\n    // sets showSidebar to false if on dashboard page, effectively hiding the sidebar\n    // sidebar is never used in a dashboard\n    useEffect(() => {\n        if (page === PAGES.DASHBOARD) setShowSidebar(false)\n        else if (page === PAGES.EDITING || page === PAGES.DASHBOARDS) setShowSidebar(true)\n    }, [page])\n\n\n    return (\n        <style.PageContainer>\n            <DndProvider backend={HTML5Backend}>\n\n                <div style={{ width: showSidebar && window.innerWidth > 1000 ? sidebarWidth : 0 }}>\n                    <DashboardsSidebar\n                        dashboardId={dashboardID}\n                        stationID={stationID}\n                        width={showSidebar ? sidebarWidth : 0}\n                        setWidth={setSidebarWidth}\n                        minWidth={300}\n\n                        clickable={page === PAGES.DASHBOARDS}\n                    />\n                </div>\n\n                <style.Container style={{ flexGrow: '1' }}>\n                    {/* If the length of ID is not 0, then a dashboard must have been clicked */}\n                    {page === PAGES.DASHBOARDS ?\n                        <DashboardsList\n                            stationID={stationID}\n                            setSelectedDashboard={(dashID) => {\n                                props.history.push(`/locations/${stationID}/dashboards/${dashID}`)\n                            }}\n                            setEditingDashboard={(dashID) => {\n                                props.history.push(`/locations/${stationID}/dashboards/${dashID}/editing`)\n                            }}\n                            setShowSidebar={setShowSidebar}\n                            showSidebar={showSidebar}\n                        />\n                        :\n                        (page === PAGES.EDITING) ?\n                            <DashboardEditor\n                                dashboard={editingDashboard}\n                                onCancelClicked={goToMainPage}\n                                setShowSidebar={setShowSidebar}\n                                showSidebar={showSidebar}\n                            />\n                            :\n                            <DashboardScreen\n                                dashboardId={selectedDashboard}\n                                setSelectedDashboard={setSelectedDashboard}\n                                goBack={() => setSelectedDashboard(null)}\n                                setShowSidebar={setShowSidebar}\n                                showSidebar={showSidebar}\n                                setEditingDashboard={(dashID) => {\n                                    props.history.push(`/locations/${stationID}/dashboards/${dashID}/editing`)\n                                }}\n                            />\n                    }\n                </style.Container>\n            </DndProvider>\n        </style.PageContainer>\n    )\n}\n\nexport default withRouter(DashboardsPage)\n","import styled from 'styled-components'\n\nexport const PageContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    max-height: 100%;\n    overflow: hidden;\n    max-width: 100%;\n    width: 100%;\n    align-items: center;\n    position: relative;\n\n    background: ${props => props.theme.bg.octonary};\n    \n    flex: 1;\n    \n`","import styled from 'styled-components'\nimport  * as styleO from '../objects_page.style'\n\nexport const LeftColumn = styled.div`\n    position: absolute;\n    height: 100%;\n    width: 15rem;\n    left: 0;\n    /* background: lightcoral; */\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`\n\nexport const RightColumn = styled.div`\n    position: absolute;\n    height: 100%;\n    width: 15rem;\n    right: 0;\n    /* background: lightskyblue; */\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`\n\nexport const ColumnLabel = styled.h1`\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz2};\n    font-weight: bold;\n    margin-top: 2rem;\n    margin-bottom: 2rem;\n`\n\nexport const ObjectContainer = styled.div`\n    width: 13rem;\n    height: 3rem;\n    \n    border-radius: 1rem;\n\n    border: .2rem solid red;\n\n    display: flex;\n    justify-content: center;\n\n    margin: .5rem;\n`\n\nexport const ObjectName = styled.p`\n    margin: auto;\n`\n\nexport const PageContinaer = styled(styleO.PageContainer)`\n\n`","import React, { useState, useEffect } from 'react'\n\n\nconst ObjectLink = (props) => {\n    const {\n        objectLinks\n    } = props\n\n    // console.log('QQQQ Object Link Props', objectLinks)\n\n    const [x1, setX1] = useState(0)\n    const [y1, setY1] = useState(0)\n    const [x2, setX2] = useState(0)\n    const [y2, setY2] = useState(0)\n\n    useEffect(() => {\n\n        // If startPos is not null but endPos is, then set the end pos\n        if (objectLinks.startPos.x !== null && objectLinks.endPos.x === null) {\n            setX1(objectLinks.startPos.x)\n            setY1(objectLinks.startPos.y)\n            setX2(objectLinks.startPos.x)\n            setY2(objectLinks.startPos.y)\n            window.addEventListener('mousemove', lockToMouse, false)\n        }\n        // If the opposite is true, then set the start pos\n        else if (objectLinks.endPos.x !== null && objectLinks.startPos.x === null) {\n            setX1(objectLinks.endPos.x)\n            setY1(objectLinks.endPos.y)\n            setX2(objectLinks.endPos.x)\n            setY2(objectLinks.endPos.y)\n            window.addEventListener('mousemove', lockToMouse, false)\n        }\n\n        // Else both are defined so that's good, I guess...\n        else {\n            setX1(objectLinks.startPos.x)\n            setY1(objectLinks.startPos.y)\n            setX2(objectLinks.endPos.x)\n            setY2(objectLinks.endPos.y)\n            window.removeEventListener('mousemove', lockToMouse, false)\n\n        }\n\n        return () => {\n            window.removeEventListener('mousemove', lockToMouse, false)\n\n        }\n\n\n    }, [objectLinks])\n\n    /**\n     * Locks line to cursor\n     * @param {*} e\n     */\n    const lockToMouse = (e) => {\n\n        // Have to get the widget page bounding box to get correct location of mouse\n        // Since the widget page is not 100% of the page, the cursor position is offset by the margins\n        const rect = document.getElementById('widgetPage').getBoundingClientRect()\n\n        setX2(e.clientX - rect.left)\n        setY2(e.clientY - rect.top)\n    }\n\n    // console.log('QQQQ Y2 and X2', x2, y2)\n\n    return (\n        <>\n            <g>\n                <line\n                    x1={`${x1}`} y1={`${y1}`}\n                    x2={`${x2}`} y2={`${y2}`}\n                    strokeWidth={'1rem'} stroke='rgba(95,166,236, 0.95)'\n                    strokeLinecap=\"round\"\n                />\n            </g>\n        </>\n    )\n}\n\nexport default ObjectLink\n","import React, { useState, useMemo, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useParams, useHistory } from 'react-router-dom'\n\nimport * as styled from './object_columns.style'\n\nimport ObjectLink from '../object_link/object_link'\n\n\nconst ObjectColumns = (props) => {\n\n    const {\n        parsedObjects\n    } = props\n\n    const [objectLinks, setObjectLinks] = useState({})\n    const [link, setLink] = useState({\n        startPos: {\n            id: null,\n            x: null,\n            y: null,\n        },\n        endPos: {\n            id: null,\n            x: null,\n            y: null,\n        }\n    })\n\n    const locations = useSelector(state => { return state.locationsReducer.locations })\n    const objects = useSelector(state => state.objectsReducer.objects)\n\n    // const [parsedObjects, setParsedObjects] = useState({parsedObjectsProps})\n    if (Object.keys(parsedObjects).length === 0) return null\n\n    /**\n     * Handles all the objects arriving at the stating (unloaded objects). These objects will appear in the left column\n     */\n    const handleUnloadObjects = () => {\n\n        // A list of all the unload objects ids\n        const unloadObjects = Object.values(parsedObjects.unload)\n        \n        return unloadObjects.map((object, ind) => {\n            if(object === undefined) return\n\n            const currentObject = objects[object]\n\n            const currentObjectName = currentObject.name\n\n            return (\n                <styled.ObjectContainer\n                    key={`unload-${ind}`}\n                    id={`unload-${ind}`}\n\n                    onClick={() => {\n                        const el = document.getElementById(`unload-${ind}`).getBoundingClientRect()\n\n                        console.log('QQQQ X and Y', el)\n\n                        // Have to get the widget page bounding box to get correct location of mouse\n                        // Since the widget page is not 100% of the page, the cursor position is offset by the margins\n                        const rect = document.getElementById('widgetPage').getBoundingClientRect()\n\n                        const x = el.x - rect.left + el.width\n                        const y = el.y - rect.top + el.height/2\n\n                        handleObjectLinkPoints({\n                            unload: true,\n                            id: currentObject._id.$oid,\n                            x: x,\n                            y: y,\n                        })\n\n                    }}\n                >\n                    <styled.ObjectName>{currentObjectName}</styled.ObjectName>\n                </styled.ObjectContainer>\n            )\n        })\n    }\n\n    /**\n     * Handles all the objects leaving the station (load objects). These objects will appear in the right column\n     */\n    const handleLoadObjects = () => {\n\n        // A list of all the unload objects ids\n        const loadObjects = Object.values(parsedObjects.load)\n\n        return loadObjects.map((object, ind) => {\n            if(object === undefined) return\n            const currentObject = objects[object]\n\n            const currentObjectName = currentObject.name\n\n            return (\n                <styled.ObjectContainer\n                    key={`load-${ind}`}\n                    id={`load-${ind}`}\n                    onClick={() => {\n                        const el = document.getElementById(`load-${ind}`).getBoundingClientRect()\n\n                        console.log('QQQQ X and Y', el)\n\n                        // Have to get the widget page bounding box to get correct location of mouse\n                        // Since the widget page is not 100% of the page, the cursor position is offset by the margins\n                        const rect = document.getElementById('widgetPage').getBoundingClientRect()\n\n                        const x = el.x - rect.left\n                        const y = el.y - rect.top + el.height/2\n\n                        handleObjectLinkPoints({\n                            unload: false,\n                            id: currentObject._id.$oid,\n                            x: x,\n                            y: y,\n                        })\n                    }}\n                >\n                    <styled.ObjectName>{currentObjectName}</styled.ObjectName>\n                </styled.ObjectContainer>\n            )\n        })\n    }\n\n    const handleObjectLinks = () => {\n        \n    }\n\n    /**\n     * This handles link points.\n     * If the selected object is loading from the station, then its an end point (on the right side of the screen)\n     * If the selected object is unloading to the station, then its a start point (on the left side of the screen)\n     * @param {*} point \n     */\n    const handleObjectLinkPoints = (point) => {\n\n        let editedLink = {\n            ...link\n        }\n\n        if (point.unload) {\n            editedLink = {\n                ...link,\n                startPos: {\n                    id: point.id,\n                    x: point.x,\n                    y: point.y\n                }\n            }\n            setLink(editedLink)\n        } else {\n            editedLink = {\n                ...link,\n                endPos: {\n                    id: point.id,\n                    x: point.x,\n                    y: point.y\n                }\n            }\n            setLink(editedLink)\n        }\n\n        setObjectLinks(\n            // ...objectLinks,\n            // [link.startPos.id]: link,\n            editedLink\n        )\n\n    }\n\n    // const handleMouseMove = (event) => {\n    //     console.log('QQQQ Event', event)\n    // }\n\n    // document.onmousemove = handleMouseMove;\n\n    return (\n        <>\n            <svg width=\"100%\" height=\"100%\">\n                {Object.keys(objectLinks).length > 0 &&\n                    <ObjectLink objectLinks={objectLinks} />\n\n                }\n            </svg>\n\n            <styled.LeftColumn>\n                <styled.ColumnLabel>Incoming</styled.ColumnLabel>\n                {handleUnloadObjects()}\n            </styled.LeftColumn>\n\n            <styled.RightColumn>\n                <styled.ColumnLabel>Outgoing</styled.ColumnLabel>\n                {handleLoadObjects()}\n            </styled.RightColumn>\n\n\n        </>\n    )\n}\n\nexport default ObjectColumns","import React, { useState, useMemo, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useParams, useHistory } from 'react-router-dom'\n\nimport * as styled from './objects_page.style'\n\n// Import Components\nimport ObjectColumns from './object_columns/object_columns'\n\n// Import utils\nimport { handleParseTaskBasedOnLoadUnload } from '../../../../methods/utils/object_utils'\n\n\nconst ObjectsPage = () => {\n\n    const params = useParams()\n    const stationID = params.stationID\n    const tasks = useSelector(state => state.tasksReducer.tasks)\n\n    const [parsedObjects, setParsedObjects] = useState({})\n\n\n    /**\n     * Handle associated objects on page mount\n     */\n    useEffect(() => {\n        handleAssociatedObjects()\n    }, [])\n\n    /**\n     * Finds all asociated objects for the location\n     */\n    const handleAssociatedObjects = () => {\n        const parsedObjectsReturned = handleParseTaskBasedOnLoadUnload(tasks, stationID)\n\n        setParsedObjects(parsedObjectsReturned)\n    }\n\n    \n\n    return (\n\n        <styled.PageContainer>\n            <ObjectColumns parsedObjects={parsedObjects}/>\n            <p>This'll Be the Objects Page</p>\n        </styled.PageContainer>\n    )\n}\n\nexport default ObjectsPage","import styled from 'styled-components'\n\nexport const StatisticsContainer = styled.div`\n    height: 100%;\n    width: 100%;\n\n    background: ${props => props.theme.bg.quaternary};\n`\n\nexport const StatisticsSectionsContainer = styled.div`\n    display: flex;\n    position: absolute;\n    text-align: center;\n    justify-content: center;\n    left: 0;\n    right: 0;\n    top: .5rem;\n    margin-left: auto;\n    margin-right: auto;\n    margin-top: 0.5rem;\n    width: 15rem;\n    /* background-color: red; */\n`\n\nexport const StatisticsSectionsButton = styled.button`\n    font-size: 1.5rem;\n    width: 10rem;\n    border: none;\n    font-family: ${props => props.theme.font.primary};\n\n    box-shadow: ${props => props.selected ? 'none' : '0 0.1rem 0.2rem 0rem #303030'};\n\n    z-index: ${props => props.selected ? '0' : '1'};\n\n    transition: background-color 0.25s ease, box-shadow 0.1s ease;\n\n    &:focus{\n        outline: 0 !important\n    }\n\n    &:active{\n        box-shadow: none;\n    }\n\n    &:hover{\n        background-color: ${props => props.theme.bg.secondary};\n    }\n`\n\nexport const StatisticsDownloadButton = styled.button`\n    display: auto;\n    position: absolute;\n    right: 1rem;\n    top: 1rem;\n    border: none;\n    border-radius: .5rem;\n    width: 10rem;\n    height: 3rem;\n    font-family: ${props => props.theme.font.primary};\n\n    box-shadow: 0 0.1rem 0.2rem 0rem #303030;\n\n    transition: background-color 0.25s ease, box-shadow 0.1s ease;\n\n\n    &:focus{\n        outline: 0 !important\n    }\n\n    &:active{\n        box-shadow: none;\n    }\n\n    &:hover{\n        background-color: ${props => props.theme.bg.secondary};\n    }\n\n    @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n        display: none;\n    }\n`\n","import styled from 'styled-components'\n\nimport { LightenDarkenColor } from '../../../../../methods/utils/color_utils'\n\nexport const OverviewContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    text-align: center;\n    width: 100%;\n    height: 100%;\n    flex: 1;\n    border-radius: 1rem;\n\n    align-items: center;\n    justify-content: start;\n\n    //padding-top: 1rem;\n    // padding: .5rem;\n\n`\n\nexport const StationName = styled.h1`\n    color: ${props => props.theme.bg.septenary};\n    font-family: ${props => props.theme.font.primary};\n`\n\nexport const Header = styled.div`\n\tbackground: ${props => props.theme.bg.quinary};\n  \tborder-bottom: 1px solid black;\n  \twidth: 100%;\n  \tpadding: 1rem;\n`\n\n\n\n\n\nexport const PlotsContainer = styled.div`\n  \t//align-items: center;\n  \tposition: relative;\n    //display: flex;\n    //flex-direction: row;\n    //flex: 1;\n    width: 100%;\n    // background: red;\n    overflow: auto;\n    padding: 1rem 1rem 0rem 1rem;\n  \n    \n    // @media (max-width: ${props => props.theme.widthBreakpoint.laptopL}){\n    //     flex-direction: column;\n    // }\n\n    // display: flex;\n    // flex-direction: column;\n    // flex: 1;\n    // align-items: center;\n\n\t/* @media (min-width: ${props => props.theme.widthBreakpoint.laptopL}){\n      display: flex;\n      flex-direction: row;\n      flex: 1;\n\t} */\n`\n\nexport const PlotHeader = styled.div`\n\t//height: 30rem;\n\t//min-height: 30rem;\n`\n\nexport const SinglePlotContainer = styled.div`\n\tposition: relative;\n\tdisplay: flex;\n\tflex-direction: column;\n\tbackground: ${props => props.theme.bg.tertiary};\n\tborder-radius: 1.5rem;\n\tpadding: 1rem;\n\tmin-width: 60rem;\n\toverflow: hidden;\n\t\n\n    width: 100%;\n    // max-width: 60%;\n    margin-bottom: 1rem;\n    // min-height: ${props => (props.minHeight && props.minHeight > 25) ? props.minHeight.toString() + \"rem\" : \"30rem\"};\n    height: fit-content;\n    min-height: fit-content;\n  \n  \t// /* // row layout\n\t// @media (min-width: ${props => props.theme.widthBreakpoint.laptopL}){\n\t// \t//flex: 1;\n\t// \twidth: 100%;\n\t// \tmargin: 0 5rem;\n\t// \theight: fit-content;\n\t// \tmin-height: fit-content;\n\t// }\n    //\n  \t// // column layout\n\t// @media (max-width: ${props => props.theme.widthBreakpoint.laptopL}){\n\t// \twidth: 100%;\n\t// \tmargin-bottom: 1rem;\n\t// \t// min-height: ${props => (props.minHeight && props.minHeight > 25) ? props.minHeight.toString() + \"rem\" : \"30rem\"};\n\t// \theight: fit-content;\n\t// \tmin-height: fit-content;\n\t// } */\n`\n\nexport const PlotContainer = styled.div`\n\tposition: relative;\n\t\n\tmax-height: ${props => (props.minHeight && props.minHeight > 25) ? props.minHeight.toString() + \"rem\" : \"25rem\"};\n\tmin-height: ${props => (props.minHeight && props.minHeight > 25) ? props.minHeight.toString() + \"rem\" : \"25rem\"};\n\theight: ${props => (props.minHeight && props.minHeight > 25) ? props.minHeight.toString() + \"rem\" : \"25rem\"};\n  \n  \t//height: 100rem;\n  \t//min-height: 100rem;\n  \t//max-height: 100rem;\n  \n\tmin-width: 60rem;\n  \n\toverflow: hidden;\n`\n\nexport const NoDataText = styled.span`\n\tposition: absolute;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translate(-50%, -50%);\n\tfont-size: ${props => props.theme.fontSize.sz2};\n\tfont-family: ${props => props.theme.font.primary};\n\tfont-weight: ${props => props.theme.fontWeight.bold};\n\tcolor: ${props => props.theme.bg.septenary};\n`\n\n// ========== Statistics Container ========== //\nexport const StatsSection = styled.div`\n    /* background: ${props => LightenDarkenColor(props.theme.bg.quaternary, -10)}; */\n    border-radius: 0.5rem;\n\n    /* margin-bottom: 1rem; */\n\n    max-width: 60rem;\n    width: 100%;\n\n    height: 12rem;\n\n    display: flex;\n    flex-direction: row;\n\n    align-items: center;\n    justify-content: center;\n\n    padding: 0rem 4rem 0 4rem;\n`\nexport const StatTitle = styled.h2`\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 4rem;\n    \n    text-align: center;\n\n    font-size: ${props => props.theme.fontSize.sz2};\n    font-family: ${props => props.theme.font.primary};\n    color: white;\n`\n\nexport const Col = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n`\n\nexport const Stat = styled.div`\n    display: flex;\n    flex-direction: row;\n\n    align-items: center;\n    justify-content: center;\n\n`\n\nexport const StatLabel = styled.h3`\n    font-size: ${props => props.theme.fontSize.sz2};\n    font-family: ${props => props.theme.font.primary};\n    color: ${props => props.theme.fg.primary};\n\n    margin-right: 1rem;\n`\n\nexport const StatValue = styled.h4`\n    font-size: ${props => props.theme.fontSize.sz3};\n    font-family: ${props => props.theme.font.primary};\n    color: white;\n`\n\nexport const RowContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n\n    // width: 100%;\n    min-width: 15rem;\n    max-width: 45rem;\n`\n\nexport const DateSelectorIcon = styled.i`\n    font-size: 1.5rem;\n    margin-right: 1rem;\n    margin-left: 1rem;\n    color: ${props => props.theme.bg.septenary};\n\n    &:hover{\n        cursor:pointer;\n    }\n`\n\nexport const PlotTitle = styled.h2`\n  font-size: ${props => props.theme.fontSize.sz2};\n  font-family: ${props => props.theme.font.primary};\n  color: ${props => props.theme.bg.septenary};\n\n  margin: 0rem .5rem 1rem .5rem;\n`\n\nexport const DateSelectorTitle = styled.h1`\n    font-size: ${props => props.theme.fontSize.sz2};\n    font-family: ${props => props.theme.font.primary};\n    color: ${props => props.theme.bg.septenary};\n\n    margin: 0rem .5rem;\n\n`\n\nexport const LoadingIcon = styled.i`\n    font-size: 1.5rem;\n`","import styled from 'styled-components'\n\nexport const Container = styled.div`\n    /* position: absolute; */\n    /* left: 12rem; */\n    /* bottom: 3rem; */\n    /* right: 12rem; */\n    /* border-bottom: 0.02rem solid white; */\n    z-index: 1;\n    margin-bottom: 1rem;\n\n\n`;\n\nexport const TimespanButton = styled.button`\n    background: none;\n    border: none;\n    position: relative;\n\n    display: inline-block;\n    width: 5rem;\n    height: 2rem;\n    margin: 0rem .25rem;\n    \n    color: ${props => props.selected ? props.color : \"white\"};\n    line-height: 2rem;\n    text-align: center;\n    font-size: 1rem;\n    font-weight: 600;\n    font-family: ${props => props.thcolor};\n\n    border-bottom: ${props => props.selected ? '0.14rem' : '0.02rem'} solid ${props => props.selected ? props.color : \"white\"};\n    box-sizing: border-box;\n\n    cursor: pointer;\n    z-index: 2;\n    &:focus {outline:0;}\n    &:hover {\n        color: ${props => props.color};\n    }\n`;","import React from 'react';\n\nimport * as styled from './timespans.style'\n\nconst TimeSpans = (props) => {\n\n    const {\n        timeSpan,\n        setTimeSpan,\n        color\n    } = props\n\n    return (\n        <styled.Container>\n            {/* <styled.TimespanButton color={color} selected={timeSpan == 'live'} onClick={() => setTimeSpan('live')}>Live</styled.TimespanButton> */}\n            <styled.TimespanButton color={color} selected={timeSpan == 'day'} onClick={() => setTimeSpan('day')}>Day</styled.TimespanButton>\n            <styled.TimespanButton color={color} selected={timeSpan == 'week'} onClick={() => setTimeSpan('week')}>Week</styled.TimespanButton>\n            <styled.TimespanButton color={color} selected={timeSpan == 'month'} onClick={() => setTimeSpan('month')}>6 weeks</styled.TimespanButton>\n            <styled.TimespanButton color={color} selected={timeSpan == 'year'} onClick={() => setTimeSpan('year')}>Year</styled.TimespanButton>\n            {/* <styled.TimespanButton color={color} selected={timeSpan == 'all'} onClick={() => setTimeSpan('all')}>ALL</styled.TimespanButton> */}\n        </styled.Container>\n    )\n}\n\nexport default TimeSpans","import styled from 'styled-components'\n\nimport { LightenDarkenColor } from '../../../../../../methods/utils/color_utils'\n\nexport const ButtonGroupContainer = styled.div`\n    width: 60rem;\n    max-width: 60rem;\n    height: 2.5rem;\n\n    display: flex;\n    flex-directin: row;\n`\n\nexport const SelectorButton = styled.button`\n    flex-grow: 1;\n    border: none;\n\n    color: ${props => props.selected ? props.theme.fg.primary : props.theme.bg.senary};\n    background: ${props => LightenDarkenColor(props.theme.bg.quaternary, props.selected ? -10 : -15)};\n\n    &:focus {\n        outline: none;\n    }\n`","import React, {useContext} from 'react';\n\n// Import component\nimport { ResponsiveBar } from '@nivo/bar'\n\n// Import utils\nimport { } from '../../../../../../methods/utils/utils'\nimport PropTypes from \"prop-types\";\nimport DashboardButton from \"../../../dashboards_page/dashboard_buttons/dashboard_button/dashboard_button\";\nimport {ThemeContext} from \"styled-components\";\n\n\n\nconst BarChart = (props) => {\n\n    const {\n        data,\n        selector,\n        mainTheme,\n        timeSpan,\n        axisBottom,\n        axisLeft,\n        horizontal,\n        layout,\n        enableGridX,\n        enableGridY,\n        ...rest\n    } = props\n\n    const themeContext = useContext(ThemeContext);\n\n\n    const theme = {\n        background: 'transparent',\n        // background: 'red',\n        fontFamily: 'sans-serif',\n        fontSize: 11,\n        textColor: 'white',\n        whiteSpace: \"nowrap\",\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        axis: {\n            domain: {\n                line: {\n                    stroke: themeContext.bg.quinary,\n                    strokeWidth: 2\n                }\n            },\n            ticks: {\n                line: {\n                    stroke: themeContext.bg.septenary,\n                    strokeWidth: 1\n                },\n                text: {\n\n                }\n            },\n            legend: {\n                text: {\n                    fontSize: 12,\n                }\n            }\n        },\n        grid: {\n            line: {\n                stroke: themeContext.bg.senary,\n                strokeWidth: 1\n            }\n        },\n        legends: {\n            text: {\n                fill: '#333333'\n            }\n        },\n        labels: {\n            text: {}\n        },\n        markers: {\n            lineColor: '#000000',\n            lineStrokeWidth: 1,\n            text: {}\n        },\n        dots: {\n            text: {}\n        },\n        tooltip: {\n            container: {\n                background: 'white',\n                color: 'inherit',\n                fontSize: 'inherit',\n                borderRadius: '2px',\n                boxShadow: '0 1px 2px rgba(0, 0, 0, 0.25)',\n                padding: '5px 9px'\n            },\n            basic: {\n                whiteSpace: 'pre',\n                display: 'flex',\n                alignItems: 'center'\n            },\n            table: {},\n            tableCell: {\n                padding: '3px 5px'\n            }\n        },\n        crosshair: {\n            line: {\n                stroke: '#000000',\n                strokeWidth: 1,\n                strokeOpacity: 0.75,\n                strokeDasharray: '6 6'\n            }\n        },\n        annotations: {\n            text: {\n                fontSize: 13,\n                outlineWidth: 2,\n                outlineColor: '#ffffff'\n            },\n            link: {\n                stroke: '#000000',\n                strokeWidth: 1,\n                outlineWidth: 2,\n                outlineColor: '#ffffff'\n            },\n            outline: {\n                fill: 'none',\n                stroke: '#000000',\n                strokeWidth: 2,\n                outlineWidth: 2,\n                outlineColor: '#ffffff'\n            },\n            symbol: {\n                fill: '#000000',\n                outlineWidth: 2,\n                outlineColor: '#ffffff'\n            }\n        }\n    }\n\n\n    // if (data === null || data === undefined) { return null }\n    return (\n        <ResponsiveBar\n            data={selector ? data[selector] : data}\n            keys={['y']}\n            // borderColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\n            indexBy='x'\n            // indexScale={{ type: 'band', round: true }}\n            animate={false}\n            colors={{ scheme: 'nivo' }}\n            colorBy={\"index\"}\n            // colors={['#d177ed', \"#eed312\"]}\n            // color={['#d177ed', \"#eed312\"]}\n            borderColor={{ from: 'color' }}\n            // borderColor='#d177ed'\n            // xScale={{ type: 'time', format: '%Y-%m-%d %H:%M:%S', useUTC: false, precision: 'second', }}\n            // xFormat={'time:' + format}\n            // xFormat=\"time:%Y-%m-%d\"\n            // yScale={{ type: 'linear', min: 'auto', max: 'auto', stacked: false, reverse: false }}\n            margin={{ top: 20, left: 80, right: 80, bottom: 75 }}\n            // padding={{ top: 5, left: 5, right: 5, bottom: 5 }}\n            layout={layout}\n\n            axisTop={null}\n            axisRight={null}\n            axisBottom={{\n                tickSize: 5,\n                // tickPadding: layout === \"horizontal\" ? 10 : -40,\n                // translateY: -25\n                legendOffset: 50,\n                tickRotation: 0,\n                legend: 'Time',\n                fontSize: \"8rem\",\n                legendPosition: 'middle',\n                // legendOffset: 50,\n                ...axisBottom\n\n\n                // format: (value) => {\n                //     console.log('QQQQ val', value.split(' ')[1])\n                //     // value.split(' ')[1]\n                // },\n            }}\n            axisLeft={{\n                tickSize: 5,\n                zIndex: 200,\n                // anchor: \"right\",\n                // tickPadding: layout === \"horizontal\" ? 40 : 4,\n                tickRotation: 0,\n                legend: 'Units',\n                legendPosition: 'middle',\n                legendOffset: -70,\n                ...axisLeft\n            }}\n\n            // enableGridX={false}\n            // enableGridY={false}\n            theme={theme}\n            enableGridY={enableGridY}\n            enableGridX={enableGridX}\n            {...rest}\n\n        // legends={[{\n        //     fontSize: '1rem'\n        // }]}\n\n        />\n    )\n}\n\n// Specifies propTypes\nBarChart.propTypes = {\n};\n\n// Specifies the default values for props:\nBarChart.defaultProps = {\n    layout: \"vertical\",\n    enableGridX: false,\n    enableGridY: false,\n};\n\nexport default BarChart","import React, { useState, useEffect, useContext, useRef, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useParams, useHistory } from 'react-router-dom'\n\n// Import styles\nimport * as styled from './statistics_overview.style'\nimport { ThemeContext } from 'styled-components';\n\n// Import Components\nimport TimeSpans from './timespans/timespans'\nimport DataSelector from './data_selector/data_selector.js'\nimport ApexGaugeChart from './apex_gauge_chart'\nimport BarChart from '../statistics_charts/statistics_charts_types/bar_chart'\n\nimport { ResponsiveLine } from '@nivo/line'\n\n// Import Actions\nimport { getStationAnalytics } from '../../../../../redux/actions/stations_actions'\n\n\nimport { ResponsiveBar } from '@nivo/bar';\n\n// Import Utils\nimport { getDateName, getDateFromString, convertArrayToObject } from '../../../../../methods/utils/utils'\nimport {getReportAnalytics, getReportEvents} from \"../../../../../redux/actions/report_event_actions\";\n\nconst tempColors = ['#FF4B4B', '#56d5f5', '#50de76', '#f2ae41', '#c7a0fa']\n\n// TODO: Commented out charts for the time being (See comments that start with TEMP)\nconst StatisticsOverview = (props) => {\n\n    const themeContext = useContext(ThemeContext);\n\n    const params = useParams()\n    const stationID = params.stationID\n    let plotRef = useRef()\n\n    const dispatch = useDispatch()\n    const onGetReportEvents = () => dispatch(getReportEvents());\n\n    const [delayChartRender, setDelayChartRender] = useState('none')\n    const widgetPageLoaded = useSelector(state => { return state.widgetReducer.widgetPageLoaded })\n    const stations = useSelector(state => state.stationsReducer.stations)\n    const devices = useSelector(state => state.devicesReducer.devices)\n    const reportEvents = useSelector(state => { return state.reportEventsReducer.reportEvents }) || {}\n    const dashboards = useSelector(state => { return state.dashboardsReducer.dashboards }) || {}\n\n    const [throughputData, setThroughputData] = useState(null)\n    const [reportData, setReportData] = useState(null)\n\n    const [timeSpan, setTimeSpan] = useState('day')\n    const [dateIndex, setDateIndex] = useState(0)\n    const [format, setFormat] = useState('%m-%d %H:%M')\n    const [selector, setSelector] = useState('throughPut')\n    const [slice, setSlice] = useState(null)\n    const [defaultTicks, setDefaultTicks] = useState([])\n    const [isThroughputLoading, setIsThroughputLoading] = useState(false)\n    const [isReportsLoading, setIsReportsLoading] = useState(false)\n\n    const [isDevice, setIsDevice] = useState(false)\n    const [locationName, setLocationName] = useState(\"\")\n    const [reportButtons, setReportButtons] = useState([])\n\n    // update location properties\n    useEffect(() => {\n\n        const location = stations[stationID]\n        setLocationName(location.name)\n\n        // get report buttons\n        const dashboardId = location.dashboards && Array.isArray(location.dashboards) && location.dashboards[0]\n        const dashboard = dashboards[dashboardId] ? dashboards[dashboardId] : {}\n        const currReportButtons = dashboard.report_buttons ? dashboard.report_buttons : []\n\n        // store as object of ids to prevent excessive looping\n        setReportButtons(convertArrayToObject(currReportButtons, \"_id\"))\n\n    }, [stationID, dashboards, stations])\n\n\n    const colors = {\n        taktTime: '#42e395',\n        pYield: '#59dbff',\n        throughPut: '#d177ed'\n    }\n\n    // On page load, load in the data for today\n    useEffect(() => {\n        onGetReportEvents() // load report events\n\n\n        if (stations[params.stationID].device_id !== undefined) {\n            setIsDevice(true)\n        }\n\n        // TEMP\n        // If the page has been loaded in (see widget pages) then don't delay chart load, \n        // else delay chart load because it slows down the widget page opening animation.\n        if (widgetPageLoaded) {\n            setDelayChartRender('flex')\n        } else {\n            setTimeout(() => {\n                setDelayChartRender('flex')\n            }, 300);\n        }\n\n        // TEMP\n        const body = { timespan: timeSpan, index: dateIndex }\n        const dataPromise = getStationAnalytics(stationID, body)\n        dataPromise.then(response => {\n            if (response === undefined) return\n            setThroughputData(response)\n\n        })\n\n        getReportData(body)\n    }, [])\n\n    const getReportData = async (body) => {\n        const reportAnalyticsResponse = await getReportAnalytics(stationID, body)\n\n        if(reportAnalyticsResponse && !(reportAnalyticsResponse instanceof Error)) {\n            setReportData(reportAnalyticsResponse)\n            setIsReportsLoading(false)\n        }\n    }\n\n    const handleDeviceStatistics = () => {\n\n        const device = devices[stations[params.stationID].device_id]\n        if (device === undefined) return\n        return (\n\n            <>\n                {/* <p>{Object.keys(device.real_data)}</p> */}\n                <styled.StatLabel>{device.real_data}</styled.StatLabel>\n            </>\n        )\n    }\n\n    // TEMP\n    // useEffect(() => {\n    //     if (data !== null) {\n    //         const N = Math.round(Math.max(data[selector].length, 80) / 6)\n    //         const ticks = everyN(data[selector], N).map(datapoint => datapoint.x)\n    //         setDefaultTicks(ticks)\n    //     }\n    // }, [data])\n\n    const findSlice = e => {\n        // console.log(e.clientX, plotRef.getBoundingClientRect())\n    }\n\n    const everyN = (array, N) => {\n        return array.filter(function (value, index) {\n            return index % N == 0 || index == array.length - 1;\n        });\n    }\n\n    const pickN = (array, N) => {\n        const linspace = Math.round(array.length / N)\n        return everyN(array, linspace)\n    }\n\n    const ToolTipCallback = (props) => {\n        setSlice(props.slice.points[0].data)\n        return null\n    }\n\n    /**\n     * Gets the new data based on the selected time span and dateIndex\n     * \n     * TimeSpan:\n     * Can be either Day, Week, Month or Year\n     * \n     * DateIndex:\n     * The current date (today) index is 0, if you want to go back to the past date, the index would be 1 \n     * \n     * @param {*} newTimeSpan \n     * @param {*} newDateIndex \n     */\n    const handleTimeSpan = async (newTimeSpan, newDateIndex) => {\n\n        setTimeSpan(newTimeSpan)\n        setDateIndex(newDateIndex)\n\n        setIsThroughputLoading(true)\n        setIsReportsLoading(true)\n\n        const body = { timespan: newTimeSpan, index: newDateIndex }\n        const dataPromise = getStationAnalytics(stationID, body)\n        const reportAnalyticsResponse = await getReportAnalytics(stationID, body)\n\n        if(reportAnalyticsResponse && !(reportAnalyticsResponse instanceof Error)) {\n            setReportData(reportAnalyticsResponse)\n            setIsReportsLoading(false)\n        }\n\n        dataPromise.then(response => {\n\n            if (response === undefined) return setIsThroughputLoading(false)\n\n            setThroughputData(response)\n            setIsThroughputLoading(false)\n        })\n\n        // Usses a regex to take all characters before a '['\n        // switch (timeSpan(/^(.*?)(?=\\[|$)/)) {\n        switch (newTimeSpan) {\n            case 'live':\n                setFormat('%I:%M:%S %p')\n                setTimeSpan('live')\n                break\n            case 'day':\n                setFormat('%I:%M %p')\n                setTimeSpan('day')\n                break\n            case 'week':\n                setFormat('%m-%d %I:%M %p')\n                setTimeSpan('week')\n                break\n            case 'month':\n                setFormat('%m-%d')\n                setTimeSpan('month')\n                break\n            case 'year':\n                setFormat('%Y-%m-%d')\n                setTimeSpan('year')\n                break\n            case 'all':\n                setFormat('%Y-%m-%d')\n                setTimeSpan('all')\n                break\n        }\n    }\n\n    const renderHeader = () => {\n        return (\n            <div style={{ marginBottom: '1rem', alignItems: \"center\", display: \"flex\", flexDirection: \"column\" }}>\n                {\n                    <>\n                        <TimeSpans color={colors[selector]} setTimeSpan={(timeSpan) => handleTimeSpan(timeSpan, 0)} timeSpan={timeSpan}></TimeSpans>\n\n                        {/* Commented out for now, only need through put bar chart */}\n                        {/* {handleGaugeCharts()} */}\n                    </>\n                }\n                {renderDateSelector()}\n            </div>\n        )\n    }\n\n    const renderReportChart = () => {\n        // get array of report buttons for current station\n        const reportButtonsArr = Object.values(reportButtons)\n\n        // get just the names of the buttons as an array\n        const reportButtonNames = (reportButtonsArr && Array.isArray(reportButtonsArr)) ? reportButtonsArr.map((currButton) => currButton.label) : []\n\n        // data comes from back end with the key of the button as the key and the value as the count, but we want the name of the button\n        // therefore, must map through each item and replace the button's id with its name\n        const filteredData = (reportData && reportData.reports && Array.isArray(reportData.reports))  ?\n            reportData.reports.map((currReport) => {\n\n                const {\n                    lable, // extract label\n                    ...currReportEntries // this contains the button keys followed by their count as the value\n                } = currReport\n\n                // create object for storing new key value paies (buttonName: count)\n                var updatedReport = {\n                    lable\n                }\n\n                const currReportButtonIds = Object.keys(currReportEntries)\n\n                currReportButtonIds.forEach((currButtonId) => {\n\n                    // if there is a button with the corresponding id\n                    if(reportButtons[currButtonId]) {\n                        // get the label from the actual button, and get the count from the entry, then add it to the updated report\n                        updatedReport[reportButtons[currButtonId].label] =  currReportEntries[currButtonId] ? currReportEntries[currButtonId] : 0\n                    }\n                })\n\n                return updatedReport\n            })\n            :\n            []\n\n        // set min height based on number of entries so chart won't squeeze rows too close together\n        const minHeight = (filteredData && Array.isArray(filteredData)) ?  filteredData.length * 2 : 0\n\n        return (\n            <styled.SinglePlotContainer\n                minHeight={minHeight}\n            >\n                <styled.PlotHeader>\n                    <styled.PlotTitle>Reports</styled.PlotTitle>\n                </styled.PlotHeader>\n\n                {isThroughputLoading ?\n                    <styled.PlotContainer>\n                        <styled.LoadingIcon className=\"fas fa-circle-notch fa-spin\" style={{ fontSize: '3rem', marginTop: '5rem' }} />\n                    </styled.PlotContainer>\n                    :\n                    <styled.PlotContainer\n                        minHeight={minHeight}\n                    >\n                        <BarChart\n                            data={filteredData ? filteredData : []}\n                            keys={reportButtonNames}\n                            indexBy={'lable'}\n                            colorBy={\"id\"}\n                            mainTheme={themeContext}\n                            timeSpan={timeSpan}\n                            layout={true ? \"horizontal\" : \"vertical\"}\n                            enableGridX={true ? true : false}\n                            enableGridY={!true ? true : false}\n                            axisBottom={{\n                                legend: 'Count',\n                            }}\n                            axisLeft={{\n                                legend: 'Time'\n                            }}\n                        />\n\n                        {!throughputData &&\n                        <styled.NoDataText>No Data</styled.NoDataText>\n                        }\n                    </styled.PlotContainer>\n                }\n\n            </styled.SinglePlotContainer>\n        )\n    }\n\n    const renderThroughputChart = () => {\n\n        const filteredData = throughputData?.throughPut\n\n        const minHeight = 0\n\n        const isData = (filteredData && Array.isArray(filteredData) && filteredData.length > 0)\n\n        return (\n            <styled.SinglePlotContainer\n                minHeight={minHeight}\n            >\n                <styled.PlotHeader>\n                    <styled.PlotTitle>Throughput</styled.PlotTitle>\n                </styled.PlotHeader>\n\n                {isThroughputLoading ?\n                    <styled.PlotContainer>\n                        <styled.LoadingIcon className=\"fas fa-circle-notch fa-spin\" style={{ fontSize: '3rem', marginTop: '5rem' }} />\n                    </styled.PlotContainer>\n                    :\n\n                    <styled.PlotContainer\n                        minHeight={minHeight}\n                    >\n                        <BarChart\n                            data={filteredData ? filteredData : []}\n                            enableGridY={isData ? true : false}\n                            mainTheme={themeContext}\n                            timeSpan={timeSpan}\n                            axisBottom={{\n                                tickRotation: -90,\n                            }}\n                            axisLeft={{\n                                enable: true,\n                            }}\n                        />\n\n                        {!throughputData &&\n                            <styled.NoDataText>No Data</styled.NoDataText>\n                        }\n                    </styled.PlotContainer>\n                }\n\n            </styled.SinglePlotContainer>\n        )\n    }\n\n    // Handles the date selector at the top of the charts\n    const renderDateSelector = () => {\n\n        if (throughputData === null) return null\n\n        const throughPut = throughputData.throughPut\n\n        let dateSelectorTitle = ''\n        let date\n        const today = new Date()\n\n        switch (timeSpan) {\n            case 'day':\n                // date = getDateFromString(Object.values(throughPut)[0].x)\n                dateSelectorTitle = today.toDateString()\n                break;\n\n            case 'week':\n                const firstDate = getDateFromString(Object.values(throughPut)[0].x)\n                const lastDate = getDateFromString(Object.values(throughPut)[Object.values(throughPut).length - 1].x)\n                dateSelectorTitle = `${firstDate.toDateString()} - ${lastDate.toDateString()}`\n                break;\n\n            case 'month':\n                date = getDateFromString(Object.values(throughPut)[0].x)\n                const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n                dateSelectorTitle = `${months[date.getMonth()]} ${date.getFullYear()}`\n                break;\n\n            case 'year':\n                date = getDateFromString(Object.values(throughPut)[0].x)\n                dateSelectorTitle = `${date.getFullYear()}`\n                break;\n\n            default:\n                break;\n        }\n\n\n        return (\n            <styled.RowContainer>\n                <styled.DateSelectorIcon\n                    className='fas fa-chevron-left'\n                    onClick={() => {\n                        const index = dateIndex + 1\n                        handleTimeSpan(timeSpan, index)\n                    }}\n                />\n                {isThroughputLoading ?\n                    <styled.LoadingIcon className=\"fas fa-circle-notch fa-spin\" />\n                    :\n                    <styled.DateSelectorTitle>{throughputData.date_title}</styled.DateSelectorTitle>\n\n                }\n\n                {/* If the current dateIndex is 0, then have a blank icon that does nothing. Can't go to the future now can we dummy */}\n                {dateIndex !== 0 ?\n                    <styled.DateSelectorIcon\n                        className='fas fa-chevron-right'\n                        onClick={() => {\n                            const index = dateIndex - 1\n                            handleTimeSpan(timeSpan, index)\n                        }}\n                    />\n                    :\n                    <styled.DateSelectorIcon />\n\n                }\n            </styled.RowContainer>\n        )\n\n    }\n\n    const handleGaugeCharts = () => {\n        return (\n            <styled.StatsSection>\n                <ApexGaugeChart max={Math.min(...throughputData.taktTime.map(point => point.y))} min={Math.max(...throughputData.taktTime.map(point => point.y))} value={throughputData.taktTime[throughputData.taktTime.length - 1].y}\n                    formatValue={() => {\n                        // const val = data.taktTime[data.taktTime.length - 1].y\n                        // return String(Math.floor(val)) + ':' + String(Math.round((val % 1) * 60))\n                        return '1:23'\n                    }}\n                    name='Takt Time' color={colors.taktTime} onClick={() => setSelector('taktTime')} selected={selector == 'taktTime'} />\n                <ApexGaugeChart min={Math.min(...throughputData.pYield.map(point => point.y))} max={Math.max(...throughputData.pYield.map(point => point.y))} value={throughputData.pYield[throughputData.pYield.length - 1].y}\n                    formatValue={() =>\n                        Math.round(10 * throughputData.pYield[throughputData.pYield.length - 1].y) / 10\n                    }\n                    name='Quality' color={colors.pYield} onClick={() => setSelector('pYield')} selected={selector == 'pYield'} />\n                <ApexGaugeChart min={Math.min(...throughputData.throughPut.map(point => point.y))} max={Math.max(...throughputData.throughPut.map(point => point.y))} value={throughputData.throughPut[throughputData.throughPut.length - 1].y}\n                    formatValue={() =>\n                        throughputData.throughPut[throughputData.throughPut.length - 1].y\n                    }\n                    name='Throughput' color={colors.throughPut} onClick={() => setSelector('throughPut')} selected={selector == 'throughPut'} />\n            </styled.StatsSection>\n        )\n    }\n\n\n\n    return (\n\n        <styled.OverviewContainer>\n            <styled.Header>\n                <styled.StationName>{locationName}</styled.StationName>\n            </styled.Header>\n\n            {/* {isDevice &&\n                handleDeviceStatistics()\n            } */}\n\n\n            {/* Commented out for now, only need through put bar chart */}\n            {/* <DataSelector selector={selector} setSelector={setSelector} /> */}\n\n            <styled.PlotsContainer\n                ref={pc => plotRef = pc}\n                // onMouseMove={findSlice}\n                onMouseLeave={() => { setSlice(null) }}\n            >\n                {renderHeader()}\n                {renderThroughputChart()}\n                {renderReportChart()}\n            </styled.PlotsContainer>\n\n        </styled.OverviewContainer>\n    )\n}\n\nexport default StatisticsOverview","import styled from 'styled-components'\n\nexport const ChartContainer = styled.div`\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    width: 90%;\n    height: 80rem;\n`\n\nexport const StatisticsIcon = styled.i`\n    font-size: 5rem;\n\n`","import React, { useState, useEffect } from 'react';\n\nimport * as styled from './statistics_page.style'\n\n// Import Components\nimport StatisticsOverview from './statistics_overview/statistics_overview'\nimport StatisticsCharts from './statistics_charts/statistics_charts'\n\n// Import Actions\nimport moduleName from '../../../../redux/actions/'\n\nconst StatisticsPage = () => {\n\n    useEffect(() => {\n        \n        return () => {\n            \n        }\n    }, [])\n\n    return (\n        <styled.StatisticsContainer>\n\n            {/* <styled.StatisticsDownloadButton>\n                Download CSV\n            </styled.StatisticsDownloadButton> */}\n\n            {/* <styled.StatisticsSectionsContainer>\n                <styled.StatisticsSectionsButton \n                    style={{borderRadius:'.5rem 0rem 0rem .5rem'}} \n                    onClick={() => {\n                        setShowCharts(false)\n                        setShowOverview(true)\n                    }}\n                    selected={showOverview}\n                >\n                    Overview\n                </styled.StatisticsSectionsButton>\n                \n                <styled.StatisticsSectionsButton \n                    style={{borderRadius:'0rem .5rem .5rem 0rem'}}\n                    onClick={() => {\n                        setShowCharts(true)\n                        setShowOverview(false)\n                    }}\n                    selected={showCharts}\n\n                >\n                    Charts\n                </styled.StatisticsSectionsButton>\n\n            </styled.StatisticsSectionsContainer> */}\n\n            <StatisticsOverview/>\n            \n            {/* \n\n            {showOverview &&\n                <div style={{display:'flex', width:'100%', justifyContent:'center', alignItems:'center', marginTop:'5rem', flexDirection:'column'}}>\n                    <StatisticsOverview/>\n                </div>\n            }\n\n\n            {showCharts &&\n                <div style={{display:'flex', width:'100%', justifyContent:'center', alignItems:'center', marginTop:'5rem', flexDirection:'column'}}>\n                    <StatisticsCharts/>\n                </div>\n            } */}\n\n        </styled.StatisticsContainer>\n    )\n}\n\nexport default StatisticsPage","import React from 'react';\n\n\nconst TasksPage = (props) => {\n\n\n\treturn (\n\t\t<div style={{width: \"100%\", height: \"100%\"}}>\n\t\t\tTasks page coming soon...\n\t\t</div>\n\n\t)\n}\n\nexport default TasksPage","import styled from 'styled-components';\n\nexport const PageContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    max-height: 100%;\n    overflow: hidden;\n    max-width: 100%;\n    width: 100%;\n    align-items: center;\n    position: relative;\n\n\n    flex: 1;\n`\n\nexport const ConnectContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 1rem;\n    width: 100%;\n`\n\nexport const DeviceName = styled.p`\n    max-width: 100%;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    margin: 0;\n`\n\nexport const LiveText = styled.span`\n    max-width: 100%;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    margin: 0;\n    color: red;\n\n    position: absolute;\n    right: 1rem;\n`\n\nexport const Icon = styled.i`\n\tmargin: 1rem;\n\tcolor: black;\n\tfont-size: 1.5rem;\n`\n\nexport const TitleContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  margin: 0;\n  padding: 0;\n  padding-top: .2rem;\n  padding-bottom: .2rem;\n`\n","import styled, { css } from 'styled-components';\n\n\nexport const VideoContainer = styled.video`\n    z-index: 500;\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    top: 0;\n    left: 0;\n`\n\nexport const PlayerWrapper = styled.div`\nz-index:500;\n  position: relative;\n  width: 100%;\n  height: 100%;\n  background: grey;\n   /* Player ratio: 100 / (1280 / 720) */\n  //padding-top: 56.25%;\n  //max-height: 20rem;\n\n\n`\n\nexport const TextContainer = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  z-index: 500;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n\n`\n\nexport const loaderCss = css`\n  z-index: 2000;\n  display: block;\n  margin: 0 auto;\n  //color: pink;\n  //border-color: red;\n\n\n`\n\nconst textStyle = css`\n\n  //color: red;\n\n`\n\n\nexport const ErrorText = styled.div`\n  ${textStyle};\n  color: red;\n\n`\n\nexport const StatusText = styled.div`\n  ${textStyle};\n  color: white;\n\n`\n","import React, { useEffect } from 'react';\n\nimport ClipLoader from \"react-spinners/ClipLoader\"\n\nimport * as styled from './stream_container.style'\n\nconst StreamContainer = (props) => {\n    const {\n        status,\n        error,\n        myPeerId,\n        loading, streams\n    } = props\n\n\n    const getVideoElement = () => {\n        return document.getElementById(\"stream\");\n    }\n\n    const resetVideo = () => {\n        console.log(\"resetVideo called\")\n        // Reset the video element and stop showing the last received frame\n        var videoElement = getVideoElement();\n        if(videoElement) {\n            videoElement.pause();\n            videoElement.src = \"\";\n            videoElement.load();\n        }\n\n    }\n\n    useEffect(() => {\n        const vidEle = getVideoElement()\n        if(streams && Array.isArray(streams)) {\n            if (vidEle.srcObject !== streams[0]) {\n\n                // clean up old stream\n                let oldStream = vidEle.srcObject;\n\n                if(oldStream) {\n                    let tracks = oldStream.getTracks();\n                    tracks.forEach(function(track) {\n                        track.stop();\n                        track = null\n                    });\n                    oldStream = null\n                }\n\n\n                // streams.forEach((stream, ind) => {\n                //     logger.log(\"closing stream\", stream)\n                //     if (stream != undefined) {\n                //         if (stream.active) {\n                //             stream.getTracks().forEach(function (track) {\n                //                 logger.log(\"closing track\", track)\n                //\n                //                 track.stop();\n                //             });\n                //             stream = null;\n                //         }\n                //     }\n                // })\n\n                // set new stream\n                getVideoElement().srcObject = streams[0];\n            }\n        } else {\n\n\n            getVideoElement().srcObject = null\n        }\n    }, [streams])\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            let vidEle = getVideoElement()\n            if(vidEle.getVideoPlaybackQuality().droppedVideoFrames > 0) resetVideo()\n        }, 1000);\n\n        return () => clearInterval(interval);\n    }, []);\n\n\n    return (\n        <styled.PlayerWrapper>\n            <styled.TextContainer>\n                <ClipLoader\n                    css={styled.loaderCss}\n                    color={'white'}\n                    size={50}\n                    loading={loading}\n                />\n                {status &&\n                <styled.StatusText>{status}</styled.StatusText>\n                }\n\n                {error &&\n                <styled.ErrorText>{error}</styled.ErrorText>\n                }\n            </styled.TextContainer>\n\n            <styled.VideoContainer\n                id=\"stream\"\n                autoPlay\n                playsInline\n                muted\n\n            >\n                Your browser doesn't support video\n            </styled.VideoContainer>\n        </styled.PlayerWrapper>\n    );\n}\n\nexport default StreamContainer;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n\tborder: 1px solid black;\n\twidth: 100%;\n\tpadding: .5rem 1rem .5rem 1rem;\n`\n\nexport const Item = styled.div`\n\n`","import React, { useState, useEffect } from 'react';\nimport * as styled from \"./stream_info.style\"\n\nconst StreamInfo = (props) => {\n\n\tconst {\n\t\tloading,\n\t\tstatus,\n\t\terror,\n\t\toutID,\n\t\tpeerID,\n\t\tstreams\n\t} = props\n\n\treturn(\n\t\t<styled.Container>\n\t\t\t<styled.Item>loading: {loading}</styled.Item>\n\t\t\t<styled.Item>status: {status}</styled.Item>\n\t\t\t<styled.Item>error: {error}</styled.Item>\n\t\t\t<styled.Item>my ID: {outID}</styled.Item>\n\t\t\t<styled.Item>peer ID: {peerID}</styled.Item>\n\t\t</styled.Container>\n\n\t)\n}\n\nexport default StreamInfo","import log from 'loglevel';\n\nconst logger = log.getLogger(\"reconnectingWebRTCSocket\")\n\nlogger.setLevel(\"silent\")\n// RTCPeerConnection = window.RTCPeerConnection || window.webkitRTCPeerConnection\nconst googleSTUN = \"stun:stun.l.google.com:19302\"\nconst mozillaSTUN = \"stun:stun.services.mozilla.com\"\n\n// RTCPeerConnection = window.RTCPeerConnection || window.webkitRTCPeerConnection;\n\nRTCSessionDescription = window.RTCSessionDescription || window.RTCSessionDescription\nRTCIceCandidate = window.RTCIceCandidate || window.RTCIceCandidate\n\nvar default_rtc_configuration = {\n    iceServers: [\n        {\n            urls: mozillaSTUN\n        },\n        {\n            urls: googleSTUN\n        }\n    ],\n    iceCandidatePoolSize: 10,\n\t\tasdasdsa: 2322\n};\n\n\n\nexport default function reconnectingWebRTCSocket(URL, our_id, peer_id, rtc_config) {\n    let client;\n    let isConnected = false;\n    let reconnectOnClose = true;\n    let messageListeners = [];\n    let stateChangeListeners = [];\n    var peer_connection;\n    var send_channel;\n    var remoteTrackListeners = [];\n    var errorListeners = [];\n    var statusListeners = [];\n    var status = null;\n    var error = null;\n    var roomReconnectInterval;\n    var peerReconnectInterval;\n    var helloInterval;\n    var rtc_configuration = rtc_config || default_rtc_configuration\n    var streams = []\n\n    function addMessageListener(fn) {\n\n        messageListeners.push(fn);\n    }\n\n    function removeMessageListener(fn) {\n        messageListeners = messageListeners.filter(l => l !== fn);\n    }\n\n    function addErrorListener(fn) {\n\n        errorListeners.push(fn);\n        return () => {\n            errorListeners = errorListeners.filter(l => l !== fn);\n        };\n    }\n\n    const setError = (message) => {\n        logger.error(\"setError: measssadasdsasagee\",message)\n        error = message;\n        errorListeners.forEach(fn => fn(message));\n    }\n\n    function addStatusListener(fn) {\n        statusListeners.push(fn);\n        return () => {\n            statusListeners = statusListeners.filter(l => l !== fn);\n        };\n    }\n\n    const setStatus = (message) => {\n        status = message;\n        statusListeners.forEach(fn => fn(message));\n    }\n\n    function onStateChange(fn) {\n        stateChangeListeners.push(fn);\n        return () => {\n            stateChangeListeners = stateChangeListeners.filter(l => l !== fn);\n        };\n    }\n\n    function start() {\n        client = new WebSocket(URL);\n\n        client.onopen = () => {\n            isConnected = true;\n            stateChangeListeners.forEach(fn => fn(true));\n\n            setHelloInterval()\n        }\n\n        const close = client.close;\n\n        // Close without reconnecting;\n        client.close = () => {\n            reconnectOnClose = false;\n            close.call(client);\n        }\n\n        client.onmessage = (event) => {\n            logger.log(\"onmessage event.dataa\", event.data)\n\n            messageListeners.forEach(fn => fn(event));\n            let msg;\n\n            switch (event.data) {\n                case \"HELLO\":\n                    setStatus(\"Registered with server.\");\n                    clearHelloInterval()\n                    setRoomReconnectInterval()\n                    return;\n\n                case \"SESSION_OK\":\n                    // successfully connected, clear interval\n                    clearRoomReconnectInterval()\n\n                    setStatus(\"Successfuly started session with \" + peer_id);\n                    return\n\n                default:\n                    if (event.data.startsWith(\"ERROR\")) {\n                        setError(event.data);\n                        return;\n                    }\n                    else if (event.data.startsWith(\"SESSION_PEER_LEFT\")) {\n                        // reconnectToPeer()\n                    }\n                    else if (event.data.startsWith(\"ROOM_OK\")) {\n                        clearRoomReconnectInterval()\n                        setStatus(\"Successfuly joined room \" + peer_id);\n                        setPeerReconnectInterval(5000)\n                        return\n                    }\n                    else if (event.data.startsWith(\"ROOM_PEER_LEFT\")) {\n                        logger.log(\"ROOM_PEEsaR_LEFT\")\n                        return\n                    }\n                    else if (event.data.startsWith(\"ROOM_PEER_MSG\")) {\n                        logger.log(\"ROOM_PEEsR_MSG ROOM_PEER_MSG ROOM_PEER_MSG\")\n                        var splitted = event.data.split(\" \");\n                        logger.log(\"splitted\",splitted)\n\n                        return\n                    }\n                    else if (event.data.startsWith(\"ping\")) {\n                        return\n                    }\n                    if (event.data.startsWith(\"OFFER_REQUEST\")) {\n                        // The peer wants us to set up and then send an offer\n                        if (!peer_connection)\n                            createCall(null).then (generateOffer);\n                    }\n                    else {\n                        // Handle incoming JSON SDP and ICE messages\n                        try {\n                            msg = JSON.parse(event.data);\n                        } catch (e) {\n                            if (e instanceof SyntaxError) {\n                                setError(\"Error parsing incoming JSON: \" + event.data)\n                            } else {\n                                setError(\"Unknown error parsing response: \" + event.data)\n                            }\n                            return;\n                        }\n\n                        // Incoming JSON signals the beginning of a call\n                        msg = msg.content\n                        if (!peer_connection) {\n                            createCall(msg);\n                        }\n\n                        if (msg.sdp != null) {\n                            onIncomingSDP(msg.sdp);\n                        } else if (msg.ice != null) {\n                            onIncomingICE(msg.ice);\n                        }  else if (msg === \"PIPELINE_STOPPED\") {\n                            reconnectToPeer(100)\n                            // closePeerConnection()\n                            logger.log(\"PIPELINE_STOPPED\")\n\n                        }\n                        else {\n                            setError(\"Unknown incoming JSON: \" + msg);\n                        }\n                    }\n            }\n        }\n\n        client.onerror = (e) => logger.error(e);\n\n        client.onclose = () => {\n            logger.log(\"client.onclose\")\n\n            isConnected = false;\n            stateChangeListeners.forEach(fn => fn(false));\n\n            closePeerConnection()\n\n            clearPeerReconnectInterval()\n            clearRoomReconnectInterval()\n            clearHelloInterval()\n\n            if (!reconnectOnClose) {\n                logger.log('ws closed by app');\n                return;\n            }\n\n            logger.log('ws closed by server');\n\n            // attempt reconnect\n            setTimeout(start, 3000);\n\n\n            setStatus('Disconnected from server');\n\n\n\n        }\n    }\n\n\n\n\n    function createCall(msg) {\n        logger.warn(\"*** createCall ***\");\n        logger.log(\"createCall: msg\", msg)\n        // Reset connection attempts because we connected successfully\n        // connect_attempts = 0;\n\n        logger.log('Creating RTCPeerConnection');\n\n\n        peer_connection = new RTCPeerConnection(rtc_configuration);\n        // peer_connection = new RTCPeerConnection();\n\n        // send_channel = peer_connection.createDataChannel('label', null);\n        // send_channel.onopen = handleDataChannelOpen;\n        // send_channel.onmessage = handleDataChannelMessageReceived;\n        // send_channel.onerror = handleDataChannelError;\n        // send_channel.onclose = handleDataChannelClose;\n        peer_connection.ondatachannel = onDataChannel;\n        peer_connection.ontrack = onRemoteTrack;\n\n\n\n        peer_connection.onicecandidateerror = (event)=>{\n\n            logger.log(\"onicecandidateerror event\", event)\n            if (event.errorCode >= 300 && event.errorCode <= 699) {\n                // STUN errors are in the range 300-699. See RFC 5389, section 15.6\n                // for a list of codes. TURN adds a few more error codes; see\n                // RFC 5766, section 15 for details.\n            } else if (event.errorCode >= 700 && event.errorCode <= 799) {\n                // Server could not be reached; a specific error number is\n                // provided but these are not yet specified.\n            }\n        };\n\n        peer_connection.onremovestream = (event)=>{\n            logger.log(\"onremovestream event\", event)\n        };\n\n\n\n        peer_connection.onsignalingstatechange = (event)=>{\n            logger.log(\"onsignalingstatechange event\", event)\n            logger.log(\"onsignalingstatechange peer_connection.signalingState\", peer_connection.signalingState)\n\n        };\n\n        peer_connection.onicegatheringstatechange = (event)=>{\n            logger.log(\"onicegatheringstatechange event\", event)\n            logger.log(\"peer_connection.iceGatheringState\", peer_connection.iceGatheringState)\n        };\n\n        peer_connection.oniceconnectionstatechange = (event)=>{\n            logger.log(\"oniceconnectionstatechange event\", event)\n            logger.log(\"oniceconnectionstatechange pc.iceConnectionState\", peer_connection.iceConnectionState)\n\n        };\n\n        peer_connection.onconnectionstatechange = (event)=>{\n            logger.log(\"peer_connection onconnectionstatechange event\", event)\n            logger.log(\"peer_connection onconnectionstatechange peer_connection\", peer_connection)\n            logger.log(\"peer_connection onconnectionstatechange peer_connection.connectionState\", peer_connection.connectionState)\n\n            switch(peer_connection.connectionState) {\n                case \"connected\":\n                    // The connection has become fully connected\n                    break;\n                case \"disconnected\":\n                    reconnectToPeer()\n\n                    break;\n                case \"failed\":\n                    // One or more transports has terminated unexpectedly or in an error\n                    break;\n                case \"closed\":\n                    // The connection has been closed\n                    break;\n                default:\n                    break\n            }\n        };\n\n        if (msg != null && !msg.sdp) {\n            logger.log(\"WARNING: First message wasn't an SDP message!?\");\n        }\n\n        peer_connection.onicecandidate = (event) => {\n            logger.warn(\"*** onicecandidate *** - sending candidate\", event)\n            // We have a candidate, send it to the remote party with the\n            // same uuid\n            if (event.candidate == null) {\n                logger.log(\"ICE Candidate was null, done\");\n                return;\n            }\n\n\n            client.send(JSON.stringify({\n                type: \"ROOM_PEER_MSG\",\n                to: peer_id.toString(),\n                content: {'ice': event.candidate}\n            }));\n        };\n\n        if (msg != null)\n            setStatus(\"Created peer connection for call, waiting for SDP\");\n\n    }\n\n    // SDP offer received from peer, set remote description and create an answer\n    const onIncomingSDP = (sdp) => {\n        logger.warn(\"*** onIncomingSDP ***\", sdp)\n        peer_connection.setRemoteDescription(sdp).then(() => {\n            setStatus(\"Remote SDP set\");\n            if (sdp.type !== \"offer\")\n                return;\n            setStatus(\"Got SDP offer\");\n            peer_connection.createAnswer()\n                .then(onLocalDescription).catch(setError);\n        }).catch(setError);\n    }\n\n    // Local description was set, send it to peer\n    const onLocalDescription = (desc) => {\n        logger.warn(\"*** onLocalDescription ***\");\n        logger.log(\"Got local description: \", JSON.stringify(desc));\n        logger.log(\"Got local description: \", desc);\n\n        peer_connection.setLocalDescription(desc).then(function() {\n            setStatus(\"Sending SDP \" + desc.type);\n            let sdp = {\n                content: {'sdp': peer_connection.localDescription},\n                type: \"ROOM_PEER_MSG\",\n                to: peer_id.toString()\n            }\n            client.send(JSON.stringify(sdp));\n        });\n    }\n\n    const generateOffer = () => {\n        logger.warn(\"*** generateOffer ***\");\n        peer_connection.createOffer().then(onLocalDescription).catch(setError);\n    }\n\n    // ICE candidate received from peer, add it to the peer connection\n    const onIncomingICE = (ice) => {\n\n        var candidate = new RTCIceCandidate(ice);\n        logger.warn(\"*** onIncomingICE ***\", candidate);\n        peer_connection.addIceCandidate(candidate).catch(setError);\n    }\n\n    function addRemoteTrackListener(fn) {\n        logger.warn(\"*** addRemoteTrackListener ***\");\n        remoteTrackListeners.push(fn);\n        return () => {\n            remoteTrackListeners = remoteTrackListeners.filter(l => l !== fn);\n        };\n    }\n\n    const closePeerConnection = () => {\n        logger.warn(\"*** closePeerConnection ***\");\n\n        if(peer_connection) {\n            // peer_connection.restartIce()\n            peer_connection.close()\n        }\n        peer_connection = null\n    }\n\n    const onRemoteTrack = (event) => {\n\n        logger.warn(\"*** onRemoteTrack *** event\", event)\n        var identity = peer_connection.peerIdentity\n        logger.log(\"identity\",identity)\n        setError(null)\n        setStatus(\"Received track.\")\n\n        // streams = streams.concat(event.streams)\n        logger.log(\"onRemoteTrack streams\", streams)\n\n        remoteTrackListeners.forEach(fn => fn(event.streams));\n    }\n\n    const handleDataChannelOpen = (event) =>{\n        logger.warn(\"*** handleDataChannelOpen ***\", event);\n    };\n\n    const handleDataChannelMessageReceived = (event) =>{\n        logger.warn(\"*** handleDataChannelMessageReceived ***\");\n        logger.log(\"dataChannel.OnMessage:\", event, event.data.type);\n\n        setStatus(\"Received data channel message\");\n        if (typeof event.data === 'string' || event.data instanceof String) {\n            logger.log('Incoming string message: ' + event.data);\n            let textarea = document.getElementById(\"text\")\n            textarea.value = textarea.value + '\\n' + event.data\n        } else {\n            logger.log('Incoming data message');\n        }\n        send_channel.send(\"Hi! (from browser)\");\n    };\n\n    const handleDataChannelError = (error) =>{\n        logger.warn(\"*** handleDataChannelError ***\");\n        logger.log(\"dataCh\" +\n            \"annel.OnError:\", error);\n    };\n\n    const handleDataChannelClose = (event) =>{\n        logger.warn(\"*** handleDataChannelClose ***\");\n        logger.log(\"dataChannel.OnClose\", event);\n    };\n\n    function onDataChannel(event) {\n        logger.warn(\"*** onDataChannel ***\");\n        setStatus(\"Data channel created\");\n        let receiveChannel = event.channel;\n        receiveChannel.onopen = handleDataChannelOpen;\n        receiveChannel.onmessage = handleDataChannelMessageReceived;\n        receiveChannel.onerror = handleDataChannelError;\n        receiveChannel.onclose = handleDataChannelClose;\n    }\n\n    const reconnectToPeer = (interval) => {\n        logger.warn(\"*** reconnectToPeer ***: interval\", interval);\n        if(peer_connection) peer_connection.restartIce()\n\n        if(isConnected) {\n            logger.log(\"reconnectToPeer peer_connection\", peer_connection)\n            // close current connection\n            closePeerConnection()\n            peer_connection = null;\n            setPeerReconnectInterval(3000)\n        }\n    }\n\n    const clearPeerReconnectInterval = () => {\n        clearInterval(peerReconnectInterval)\n        peerReconnectInterval = null\n    }\n\n    const setPeerReconnectInterval = (interval) => {\n\n        logger.warn(\"*** setPeerReconnectInterval a***\");\n\n        if(isConnected) {\n            setStatus(`Attempting to connect to peer ${peer_id}.`);\n\n            let msg = 'CONNECT ' + peer_id\n\n            client.send(msg)\n            if(!peerReconnectInterval) {\n                peerReconnectInterval = setInterval(() => {\n                    if(peer_connection) {\n                        clearPeerReconnectInterval()\n                    }\n\n                    logger.log(`sending msg: ${msg}`)\n                    client.send(msg)\n                }, interval);\n            }\n        }\n    }\n\n\n    const clearRoomReconnectInterval = () => {\n        logger.warn(\"*** clearRoomReconnectInterval ***\");\n        clearInterval(roomReconnectInterval)\n        roomReconnectInterval = null\n    }\n\n    const setRoomReconnectInterval = (interval) => {\n\n        logger.warn(\"*** setRoomReconnectInterval ***\");\n\n        if(isConnected) {\n            setStatus(`Attempting to connect to peer ${peer_id}.`);\n\n            let msg = 'ROOM ' + peer_id\n\n            client.send(msg)\n            if(!roomReconnectInterval) {\n                roomReconnectInterval = setInterval(() => {\n\n                    logger.log(`sending msg: ${msg}`)\n                    client.send(msg)\n                }, interval);\n            }\n        }\n    }\n\n    const clearHelloInterval = () => {\n        logger.warn(\"*** clearHelloInterval ***\");\n        clearInterval(helloInterval)\n        helloInterval = null\n    }\n\n    const setHelloInterval = () => {\n        logger.warn(\"*** setHelloInterval ***\");\n        if(isConnected) {\n            client.send('HELLO ' + our_id);\n            if(!helloInterval) {\n                helloInterval = setInterval(() => {\n                    client.send('HELLO ' + our_id);\n                }, 3000);\n            }\n        }\n    }\n\n    start();\n\n    return {\n        addMessageListener,\n        removeMessageListener,\n        onStateChange,\n        close: () => client.close(),\n        start: () => start(),\n        send: (args) => client.send(args),\n        getClient: () => client,\n        isConnected: () => isConnected,\n        addRemoteTrackListener,\n        addErrorListener,\n        addStatusListener,\n        getError: () => error,\n        getStatus: () => status\n    };\n\n}\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n\tborder: 1px solid black;\n\twidth: 100%;\n\tpadding: .5rem 1rem .5rem 1rem;\n`","import React, { useState, useEffect } from 'react';\nimport * as styled from './viewer_page.style'\nimport StreamContainer from './stream_container/stream_container'\nimport StreamInfo from \"./stream_info/stream_info\";\nimport log from 'loglevel';\nimport reconnectingWebRTCSocket from \"../../../../methods/utils/websocket_utils\"\nimport TestButtons from \"./test_buttons/test_buttons\";\nconst logger = log.getLogger(\"ViewerPage\")\n\nlogger.setLevel(\"silent\")\n\n// some hard coded values for now\n// Set this to use a specific peer id instead of a random one\nvar our_default_id;\nvar our_id;\nvar peer_id = 5555\nvar ws_server = \"10.1.10.6\";\nvar ws_port;\n\nconst getOurId = () => {\n    return Math.floor(Math.random() * (9000 - 10) + 10).toString();\n}\n\n// Fetch the peer id to use\nour_id = our_default_id || getOurId()\n\nws_port = ws_port || '8443';\n\nconst ws_url = 'ws://' + ws_server + ':' + ws_port\n\nvar client;\n\nconst ViewerPage = () => {\n\n\n    const [streamConnected, setStreamConnected] = useState(false)\n    const [myPeerId, setMyPeerId] = useState(null);\n    const [error, setError] = useState(null);\n    const [status, setStatus] = useState(null);\n    const [streams, setStreams] = useState(null)\n    const [isConnected, setIsConnected] = useState(false)\n    const [showStreamInfo, setShowStreamInfo] = useState(false)\n    const [showTestButtons, setShowTestButtons] = useState(false)\n\n    useEffect(() => {\n        startConnection()\n\n        return () => {\n            // Disconnect Stream on unmount\n            closeConnection()\n        }\n    }, []);\n\n    const startConnection = () => {\n        client = reconnectingWebRTCSocket(ws_url, getOurId(), peer_id)\n        client.addRemoteTrackListener(setStreams);\n        client.onStateChange(setIsConnected);\n        client.addErrorListener(setError);\n        client.addStatusListener(setStatus);\n    }\n\n    const closeConnection = () => {\n        client.close()\n        setStreams(null)\n    }\n\n\n    const device = {\n        device_name: \"RM Vision\"\n    }\n\n    const getVideoElement = () => {\n        return document.getElementById(\"stream\");\n    }\n\n    const resetVideo = () => {\n        // Reset the video element and stop showing the last received frame\n        var videoElement = getVideoElement();\n        if(videoElement) {\n            videoElement.pause();\n            videoElement.src = \"\";\n            videoElement.load();\n        }\n\n    }\n\n    return (\n        <styled.PageContainer>\n            <styled.TitleContainer>\n                <div\n                    style={{\n                        position: \"absolute\",\n                        left: \"1rem\"\n                    }}\n                >\n                    <styled.Icon\n                        className='fa fa-retweet'\n                        onClick={() => {\n                            resetVideo()\n                        }}\n                    />\n\n                    <styled.Icon\n                        className='fa fa-info-circle'\n                        onClick={()=>setShowStreamInfo(!showStreamInfo)}\n                    />\n\n                    <styled.Icon\n                        className='fa fa-check-circle'\n                        onClick={()=>setShowTestButtons(!showTestButtons)}\n                    />\n                </div>\n\n                <styled.DeviceName>{!!device ? `${device.device_name}` : 'Connect to Stream'}</styled.DeviceName>\n\n                <styled.LiveText>Live Stream</styled.LiveText>\n            </styled.TitleContainer>\n\n\n\n            {showStreamInfo &&\n                <StreamInfo\n                    status={status}\n                    error={error}\n                    outID={our_id}\n                    peerID={peer_id}\n                    loading={!streamConnected}\n                    streams={streams}\n                />\n            }\n\n            {showTestButtons &&\n                <TestButtons\n                    onStartClick={startConnection}\n                    onCloseClick={closeConnection}\n                />\n            }\n\n\n            <StreamContainer\n                status={status}\n                error={error}\n                myPeerId={myPeerId}\n                loading={!streamConnected}\n                streams={streams}\n            />\n            <styled.ConnectContainer>\n            </styled.ConnectContainer>\n        </styled.PageContainer>\n    )\n}\n\nexport default ViewerPage\n","import React, { useState, useEffect } from 'react';\nimport * as styled from \"./test_buttons.style\"\nimport reconnectingWebRTCSocket from \"../../../../../methods/utils/websocket_utils\";\n\nconst TestButtons = (props) => {\n\n\tconst {\n\t\tonStartClick,\n\t\tonCloseClick\n\t} = props\n\n\treturn(\n\t\t<styled.Container>\n\t\t\t<button\n\t\t\t\tonClick={()=>{\n\t\t\t\t\tonCloseClick()\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tTEST CLOSE SOCKET\n\t\t\t</button>\n\t\t\t<button\n\t\t\t\tonClick={()=>{\n\t\t\t\t\tonStartClick()\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tTEST OPEN SOCKET\n\t\t\t</button>\n\t\t</styled.Container>\n\n\t)\n}\n\nexport default TestButtons","import styled from 'styled-components'\n\nexport const HeaderContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    text-align: center;\n    width: 100%;\n    border-radius: 1rem;\n    align-items: center;\n`\n\nexport const LotsContainer = styled.div`\n    width: 100%;\n    height: 100%;\n    justify-content: center;\n    padding-bottom:1rem;\n\n    background: ${props => props.theme.bg.quaternary};\n\n    overflow: auto;\n\n    // optionally style scroll bar\n    ::-webkit-scrollbar {\n    }\n    ::-webkit-scrollbar-thumb {\n    }\n\n`\n\nexport const ListItemRect = styled.div`\n    height: 5rem;\n    border-radius: 0.5rem;\n    margin-left:1rem;\n    margin-right:2rem;\n    margin-top:0.5rem;\n\n    border: 0.1rem solid white;\n    box-sizing: border-box;\n\n    &:hover {\n      //border-color: #798fd9;\n      //background-color: white;\n\n    }\n`\n\nexport const ListSubtitle = styled.div`\n    text-align: flex-start;\n    width: 100%;\n    height:100%;\n\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz3};\n    font-weight: 500;\n    color: ${props => props.theme.bg.senary};\n\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n\n`\n\nexport const ListContent = styled.div`\n    text-align: flex-start;\n    height:100%;\n\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz3};\n    font-weight: 500;\n    color: ${props => props.theme.bg.octonary};\n\n    padding-left:1rem;\n\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n`\n\nexport const StationName = styled.h1`\n    color: ${props => props.theme.bg.septenary};\n    font-family: ${props => props.theme.font.primary};\n`\n\nexport const Header = styled.div`\n\t  background: ${props => props.theme.bg.quinary};\n  \tborder-bottom: 1px solid black;\n  \twidth: 100%;\n  \tpadding: 1rem;\n`\n\nexport const Subtitle = styled.h1`\n    color: ${props => props.theme.bg.septenary};\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz2};\n    position: flex-end;\n\n`\n\nexport const SubtitleContainer = styled.div`\n    display:flex;\n    justify-content:space-between;\n    flex-direction: row;\n    padding-left: 1rem;\n    padding-top: 1rem;\n    padding-right:1.5rem;\n    padding-bottom:.5rem;\n    position: relative;\n`\n\n\nexport const RowContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    width: 100%;\n    padding-top:.5rem;\n`\n\nexport const ColumnContainer1 = styled.div`\n    display: flex;\n    flex: 4;\n    flex-direction: column;\n    justify-content: flex-start;\n    height: 100%;\n    padding-left: 1rem;\n\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n\n    @media only screen and (max-width: ${props => props.theme.widthBreakpoint.tablet}) {\n      flex:1;\n    }\n`\n\nexport const ColumnContainer2 = styled.div`\n    display: flex;\n    flex:1;\n    flex-direction: column;\n    height: 100%;\n`\n\nexport const ListItemIcon = styled.i`\n    font-size: 1.8rem;\n    color: #ffb62e;\n    padding-top: .9rem;\n    padding-right:1rem;\n\n\n\n    &:hover {\n        cursor: pointer;\n        color:yellow;\n    }\n`\n","import React, { useState, useEffect, useContext, useRef, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useParams, useHistory } from 'react-router-dom'\n\n\nimport ReactList from 'react-list';\nimport CardEditor from \"../../../side_bar/content/cards/card_editor/card_editor\";\n\n// Import styles\nimport * as styled from './lots_page.style'\nimport { ThemeContext } from 'styled-components';\nimport Button from '../../../../components/basic/button/button'\n\nimport {widgetLoaded, hoverStationInfo} from '../../../../redux/actions/widget_actions'\nimport * as sidebarActions from \"../../../../redux/actions/sidebar_actions\"\nimport {showEditor} from '../../../../redux/actions/card_actions'\n\n\n// Import Actions\n\n\n// TODO: Commented out charts for the time being (See comments that start with TEMP)\nconst LotsPage = (props) => {\n\n    const params = useParams()\n    const stationID = params.stationID\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    const onWidgetLoaded = (bool) => dispatch(widgetLoaded(bool))\n    const onShowSideBar = (bool) => dispatch(sidebarActions.setOpen(bool))\n    const onHoverStationInfo = (info) => dispatch(hoverStationInfo(info))\n    const onShowCardEditor = (bool) => dispatch(showEditor(bool))\n\n    const widgetPageLoaded = useSelector(state => { return state.widgetReducer.widgetPageLoaded })\n    const stations = useSelector(state => state.stationsReducer.stations)\n    const cards = useSelector(state=>state.cardsReducer.cards)\n    const showCardEditor = useSelector(state=>state.cardsReducer.showEditor)\n    const [locationName, setLocationName] = useState(\"\")\n    const [selectedCard, setSelectedCard] = useState(null)\n    const [lotsPresent, setLotsPresent] = useState(false)\n\n    const location = stations[stationID]\n\n    // update location properties\n    useEffect(() => {\n        const location = stations[stationID]\n        setLocationName(location.name)\n    }, [stationID, stations])\n\n    useEffect(() => {\n        for (let i = 0; i < Object.values(cards).length; i++) {\n            if (!!Object.values(cards)[i].bins[location._id]) {\n                setLotsPresent(true)\n                break\n            }\n        }\n      },[])\n\n    const goToCardPage = () => {\n        onWidgetLoaded(false)\n        onShowSideBar(true)\n        onHoverStationInfo(null)\n        const currentPath = history.location.pathname\n        history.push('/lots/summary')\n    }\n\n    const openEditor = (cardId, processId, binId) => {\n      onShowCardEditor(true)\n      setSelectedCard({cardId, processId, binId})\n    }\n\n    return (\n\n      <styled.LotsContainer>\n\n        {showCardEditor &&\n        <CardEditor\n            isOpen={showCardEditor}\n            onAfterOpen={null}\n            cardId={selectedCard ? selectedCard.cardId : null}\n            processId={selectedCard ? selectedCard.processId : null}\n            binId={selectedCard ? selectedCard.binId : null}\n            close={()=>{\n                onShowCardEditor(false)\n                setSelectedCard(null)\n            }}\n        />\n        }\n\n        <styled.HeaderContainer>\n            <styled.Header>\n                <styled.StationName>{locationName}</styled.StationName>\n            </styled.Header>\n        </styled.HeaderContainer>\n\n          <styled.SubtitleContainer>\n          {!!lotsPresent ?\n            <styled.Subtitle>Lots at {locationName}:</styled.Subtitle>\n            :\n            <styled.Subtitle>No Lots</styled.Subtitle>\n          }\n            <Button\n                schema={'devices'}\n                onClick = {goToCardPage}\n                style = {{position: 'absolute', right:'1.6rem'}}\n            >\n                Go To Card View\n            </Button>\n          </styled.SubtitleContainer>\n\n       {Object.values(cards).map((card, ind) =>\n         <>\n          {!!card.bins[location._id] &&\n              <styled.ListItemRect>\n                    <styled.RowContainer>\n                      <styled.ColumnContainer1>\n                      <styled.ListSubtitle>Lot Name:</styled.ListSubtitle>\n                      <styled.ListContent>{card.name}</styled.ListContent>\n                    </styled.ColumnContainer1>\n\n                    <styled.ColumnContainer2>\n                      <styled.ListSubtitle>Quantity:</styled.ListSubtitle>\n                      <styled.ListContent>{card.bins[location._id].count}</styled.ListContent>\n                    </styled.ColumnContainer2>\n\n\n                      <styled.ColumnContainer2>\n                        <styled.ListSubtitle>End Date:</styled.ListSubtitle>\n                        {!!card.end_date &&\n                          <styled.ListContent>{card.end_date.month+1 + '/' + card.end_date.day +'/' + card.end_date.year}</styled.ListContent>\n                        }\n                      </styled.ColumnContainer2>\n\n\n                  <styled.ListItemIcon\n                      className={'fas fa-edit'}\n                      onClick = {()=>{\n                        openEditor(card._id, card.process_id, location._id)\n\n                      }}\n                      />\n                  </styled.RowContainer>\n              </styled.ListItemRect>\n        }\n           </>\n        )}\n\n      </styled.LotsContainer>\n    )\n  }\n\nexport default LotsPage\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useHistory, withRouter, Route } from 'react-router-dom'\n\nimport * as styled from './widget_pages.style'\n\nimport WidgetPageHeader from './widget_page_header/widget_page_header'\n\nimport useWindowSize from '../../../hooks/useWindowSize'\n\nimport DashboardsPage from './dashboards_page/dashboards_page'\nimport ObjectsPage from './objects_page/objects_page'\nimport StatisticsPage from './statistics_page/statistics_page'\nimport TasksPage from './tasks_page/tasks_page'\nimport ViewerPage from './viewer_page/viewer_page'\nimport LotsPage from './lots_page/lots_page'\n\nimport log from \"../../../logger\"\nimport {widgetPageLoaded} from '../../../redux/actions/widget_actions'\n\nconst logger = log.getLogger(\"WidgetPages\")\n\nconst WidgetPages = (props) => {\n\n    // Constructor\n    const history = useHistory()\n    const dispatch = useDispatch()\n\n    const size = useWindowSize()\n    const windowWidth = size.width\n    const widthBreakPoint = 1000;\n    const mobileMode = windowWidth < widthBreakPoint;\n\n    const dashboardOpen = useSelector(state => state.dashboardsReducer.dashboardOpen)\n    const taskQueueOpen = useSelector(state => state.taskQueueReducer.taskQueueOpen)\n\n    const { locationID, widgetPage } = props.match.params\n    const showWidgetPage = widgetPage\n\n    // Tells the reducer if widget page has been loaded\n    const onWidgetPageLoaded = (props) => dispatch(widgetPageLoaded(props));\n\n\n    useEffect(() => {\n        // On intitial widget page load, set a delay to tell redux that the widget pages have loaded\n        // This happens because the statistic page on load needs to load charts which can be cumbersome on widget animation.\n        // So the chart loads after the widget animation, but if widget page is already open and then a statistic page is selected,\n        // there should not be a delayed chart opening. See statistics_page/statistics_overview/statistics_overview.js\n        // setTimeout(() => {\n        onWidgetPageLoaded(true)\n        // }, 300);\n\n        // On Unmount tell the reducer the widget pages aren't loaded anymore\n        return () => {\n            onWidgetPageLoaded(false)\n\n        }\n    }, [])\n\n\n    return (\n        <styled.Container taskQueueOpen = {taskQueueOpen} showWidgetPage={showWidgetPage} dashboardOpen={dashboardOpen} mobileMode={mobileMode} id={'widgetPage'}>\n\n            <styled.WidgetPageContainer\n                showWidgetPage={showWidgetPage}\n            >\n                <Route\n                    path=\"/locations/:stationID/dashboards/:dashboardID?/:editing?\"\n                    component={DashboardsPage}\n                />\n                <Route\n                    path=\"/locations/:stationID/objects/:objectID?/:editing?\"\n                    component={ObjectsPage}\n                />\n                <Route\n                    path=\"/locations/:stationID/statistics\"\n                    component={StatisticsPage}\n                />\n                <Route\n                    path=\"/locations/:stationID/lots\"\n                    component={LotsPage}\n                />\n                <Route\n                    path=\"/locations/:stationID/tasks\"\n                    component={TasksPage}\n                />\n                <Route\n                    path=\"/locations/:stationID/view\"\n                    component={ViewerPage}\n                />\n            </styled.WidgetPageContainer>\n        </styled.Container>\n\n\n    )\n\n}\n\nexport default withRouter(WidgetPages)\n","import styled from 'styled-components'\n\nexport const WidgetButtonButton = styled.button`\n    display:flex;\n    align-self:center;\n    flex-direction: column;\n    border: none;\n    border-radius: 1rem;\n    text-align: center;\n    width: 6rem;\n    height: 4rem;\n    outline:none;\n    margin: 0rem .3rem;\n    padding-top:.5rem;\n\n    /* margin-top: 0.5rem; */\n\n    box-shadow: 0 0.1rem 0.2rem 0rem #303030;\n\n    background-color: ${props => props.pageID === props.currentPage ? props.theme.bg.quaternary : props.theme.bg.septenary};\n\n    transition: background-color 0.25s ease, box-shadow 0.1s ease;\n\n    &:hover{\n        background-color: ${props => props.theme.bg.senary};\n    }\n\n    &:focus{\n        outline: 0 !important\n    }\n\n    &:active{\n        box-shadow: none;\n    }\n\n    @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n        width: 6rem;\n        height: 4rem;\n\n    }\n`;\n\nexport const WidgetButtonLabel = styled.label`\n    display: inline-block;\n    width: 12.5rem;\n    height: 6rem;\n    text-align: center;\n`;\n\nexport const WidgetButtonText = styled.h4`\n    font-size: ${props => props.theme.fontSize.sz6};\n    font-family: ${props => props.theme.font.primary};\n\n    text-align: center;\n    align-self:center;\n\n    @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n\n    }\n`;\n\nexport const WidgetStationName = styled.h4`\n    font-size: ${props => props.theme.fontSize.sz4};\n    font-family: ${props => props.theme.font.primary};\n\n    text-align: center;\n    align-self:center;\n\n    @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n      font-size: ${props => props.theme.fontSize.sz6};\n\n    }\n`;\n\nexport const WidgetButtonIcon = styled.i`\n    font-size: 2.2rem;\n    margin-bottom:0.3rem;\n    align-self:center;\n    color: ${props => props.pageID === props.currentPage ? props.theme.fg.primary : props.theme.bg.primary};\n\n    @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n        font-size: 2rem;\n\n\n    }\n`\n\nexport const WidgetButtonBlock = styled.div`\n    align-self:center;\n    width: 12.5rem;\n    height: 4rem;\n    display: inline-block;\n    margin-top: 1.5rem;\n    margin-bottom: 1rem;\n    padding-right: 3rem;\n`;\n\nexport const WidgetButtonContainer = styled.div`\n    width: 25%;\n    display: flex;\n    justify-content: space-between;\n`\n\nexport const ButtonText = styled.p`\n    position: absolute;\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz3};\n`\n","import React, { useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport * as styled from './widget_button.style'\n\n// Import utils\nimport uuid from 'uuid'\n\n// Import Actions\nimport { postTaskQueue } from '../../../redux/actions/task_queue_actions'\nimport { putStation, setSelectedStationChildrenCopy } from '../../../redux/actions/stations_actions'\nimport { removePosition, setSelectedPosition } from '../../../redux/actions/positions_actions'\nimport { widgetLoaded, hoverStationInfo } from '../../../redux/actions/widget_actions'\nimport { postDashboard, dashboardOpen } from '../../../redux/actions/dashboards_actions'\n\nimport { deepCopy } from '../../../methods/utils/utils'\nimport { handlePostTaskQueue } from \"../../../redux/actions/task_queue_actions\";\n\n\n\nconst WidgetButton = (props) => {\n\n    const {\n        type,\n        currentPage,\n        id,\n        coordinateMove,\n        label,\n        toggle,\n    } = props\n\n    const history = useHistory()\n    const params = useParams()\n    const widgetPage = params.widgetPage\n\n    const dispatch = useDispatch()\n    const dispatchHandlePostTaskQueue = (props) => dispatch(handlePostTaskQueue(props))\n    const dispatchWidgetLoaded = (bol) => dispatch(widgetLoaded(bol))\n    const dispatchHoverStationInfo = (info) => dispatch(hoverStationInfo(info))\n    const dispatchDashboardOpen = (props) => dispatch(dashboardOpen(props))\n    const dispatchPostDashboard = (dashboard) => dispatch(postDashboard(dashboard))\n    const dispatchPutStation = (station, ID) => dispatch(putStation(station, ID))\n    const dispatchRemovePosition = (id) => dispatch(removePosition(id))\n    const dispatchSetSelectedPosition = (position) => dispatch(setSelectedPosition(position))\n\n    const selectedStation = useSelector(state => state.stationsReducer.selectedStation)\n    const selectedPosition = useSelector(state => state.positionsReducer.selectedPosition)\n    const showSideBar = useSelector(state => state.sidebarReducer.open)\n    const stations = useSelector(state => state.stationsReducer.stations)\n\n    const dashboardID = params.dashboardID\n\n    const selectedLocation = !!selectedStation ? selectedStation : selectedPosition\n\n    const handleOnClick = () => {\n        switch (props.type) {\n            case 'cart':\n                onCartButtonClick()\n                break;\n\n            case 'cancel':\n                onCancelClick()\n                break;\n\n            case 'dashboards':\n                onDashboardClick()\n                break;\n\n            default:\n                history.push('/locations/' + id + '/' + type)\n                break;\n        }\n    }\n\n    // Handles  if the widget button clicked was a cart\n    const onCartButtonClick = () => {\n        // If the button is for cart, then see if its a coord move or a simple task move\n        // Coord move is for right click send cart to pos\n        if (!!coordinateMove) {\n            dispatchHandlePostTaskQueue({\n                Id: 'custom_task',\n                custom: {\n                    type: 'coordinate_move',\n                    coordinate: {\n                        pos_x: selectedLocation.pos_x,\n                        pos_y: selectedLocation.pos_y,\n                        rotation: selectedLocation.rotation,\n                    },\n                },\n                deviceType: 'MiR_100',\n            })\n            dispatchWidgetLoaded(false)\n            dispatchHoverStationInfo(null)\n            dispatchRemovePosition(selectedPosition._id)\n            dispatchSetSelectedPosition(null)\n        }\n        else {\n            dispatchHandlePostTaskQueue({\n                Id: 'custom_task',\n                custom: {\n                    type: 'position_move',\n                    position: id,\n\n                },\n                deviceType: 'MiR_100',\n            })\n        }\n    }\n\n    // Handles if the widget button clicked was cancel\n    const onCancelClick = () => {\n        dispatchWidgetLoaded(false)\n        dispatchHoverStationInfo(null)\n        dispatchRemovePosition(selectedPosition._id)\n        dispatchSetSelectedPosition(null)\n    }\n\n    // Handles if a dashboard is clicked\n    const onDashboardClick = async () => {\n        let dashboardID\n\n        // If there's no selected station, then see if theres a station in the url, if so, use that, else do nothing\n        if (!selectedLocation) {\n            if (!!params.stationID) {\n                dashboardID = stations[params.stationID].dashboards[0]\n            } else {\n                return null\n            }\n        } else {\n            dashboardID = selectedLocation.dashboards[0]\n        }\n\n        //let dashboardID = selectedLocation ? selectedLocation.dashboards[0] : null\n\n        // If the dashboard is undefined, that means the location must not have a dashboard yet, so add one\n        if (dashboardID === undefined) {\n            console.log('QQQQ No dashboard ADDING!')\n\n            // dashboardInfo\n            let defaultDashboard = {\n                name: selectedLocation.name + ' Dashboard',\n                buttons: [],\n                station: selectedLocation._id\n            }\n\n            //// Now post the dashboard, and on return tie that dashboard to location.dashboards and put the location\n            const postDashboardPromise = dispatchPostDashboard(defaultDashboard)\n\n            postDashboardPromise.then(async postedDashboard => {\n\n                selectedLocation.dashboards = [postedDashboard._id.$oid]\n\n                await dispatchPutStation(selectedLocation, selectedLocation._id)\n\n                history.push('/locations/' + id + '/' + type + '/' + dashboardID)\n\n            })\n        }\n        else {\n            history.push('/locations/' + id + '/' + type + '/' + dashboardID)\n        }\n\n        dispatchDashboardOpen(true)\n    }\n\n\n    return (\n        <styled.WidgetButtonButton\n            onClick={() => {\n                if (showSideBar && !widgetPage) {\n                    const hamburger = document.querySelector('.hamburger')\n                    hamburger.classList.toggle('is-active')\n                }\n\n                handleOnClick()\n\n            }}\n            pageID={type}\n            currentPage={currentPage}\n        >\n            {type === 'view' ?\n                <styled.WidgetButtonIcon className=\"far fa-eye\" pageID={type} currentPage={currentPage} />\n                :\n                type === 'cancel' ?\n                    <>\n                        <styled.WidgetButtonIcon className=\"fas fa-times\" pageID={type} currentPage={currentPage} />\n                        <styled.WidgetButtonText>{\"Cancel\"}</styled.WidgetButtonText>\n                    </>\n                    :\n                    type === 'lots' ?\n                        <>\n                            <styled.WidgetButtonIcon className=\"far fa-clone\" pageID={type} currentPage={currentPage} />\n                            <styled.WidgetButtonText>{label}</styled.WidgetButtonText>\n                        </>\n                        :\n                        <>\n                            <styled.WidgetButtonIcon style={{ fontSize: type === 'cart' && '1.2rem', paddingTop: type === 'cart' && '.8rem' }} className={\"icon-\" + type} pageID={type} currentPage={currentPage} />\n                            <styled.WidgetButtonText>{label}</styled.WidgetButtonText>\n                        </>\n            }\n            {/* <styled.ButtonText>{props.type}</styled.ButtonText> */}\n\n        </styled.WidgetButtonButton>\n    )\n}\n\nexport default WidgetButton\n","import styled from 'styled-components'\n\n\n// export const Container = styled.div`\n//     display: flex;\n//     justify-content: ${props => !!props.widgetPage ? 'center' : ''};\n//     transition: all 0.3s ease;\n// `\n\nexport const WidgetLocationContainer = styled.div`\n    position: absolute;\n\n    top: ${props => !!props.widgetPage ? '0' : props => props.yPosition};\n    left: ${props => !!props.widgetPage ? '0' : props => props.xPosition};\n    right: ${props => !!props.widgetPage && '0'};\n    transform: scale(${props => !!props.widgetPage ? '100%' : props => props.scale});\n\n    width: ${props => !!props.widgetPage && '35rem'};\n\n    margin: ${props => !!props.widgetPage && 'auto'};\n    margin-top: ${props => !!props.widgetPage && '.2rem'};\n\n    transition: ${props => !!props.widgetPage ? 'top 0.25s ease, margin 0.25s ease' : 'none'};\n\n    pointer-events: auto;\n\n    z-index: 10;\n\n    @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n        width: ${props => !!props.widgetPage && '25rem'};\n        margin-top: ${props => !!props.widgetPage && '.205rem'};\n    }\n\n`\n\nexport const WidgetContainer = styled.div`\n    justify-content:center;\n    margin: ${props => !!props.widgetPage ? '.25rem auto' : 'auto'};\n    padding-top:.3rem;\n    padding-bottom:.3rem;\n\n    display: ${props => !!props.widgetPage ? 'flex' : ''};\n\n\n    /* width: ${props => !!props.widgetPage ? '32rem' : '30rem'}; */\n    width: ${props => !!props.widgetPage ? '20rem' : 'fit-content'};\n    max-width: ${props => props.type == 'cart_position' || props.type == 'shelf_position' ? '13rem' : '30rem'};\n\n    height: ${props => !!props.widgetPage ? 'auto' : '6rem'};\n\n    box-shadow: ${props => !!props.widgetPage ? 'none' : '0 0.1rem 0.2rem 0rem #303030'};\n\n    border-radius: 1rem;\n\n    z-index: 1000;\n\n    backdrop-filter: ${props => !!props.widgetPage ? '' : 'blur(10px)'};\n    background-color: ${props => !!props.widgetPage ? 'none' : 'rgba(255, 255, 255, 0.6)'};\n\n    /* transition: transform 0.25s ease, margin-left 0.25s ease, margin-right 0.25s ease, height 0.25s ease; */\n    /* transition: all 0.25s ease; */\n\n    @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n        /* width: ${props => !!props.widgetPage ? '22rem' : '20rem'}; */\n        width: ${props => !!props.widgetPage ? '15rem' : 'fit-content'};\n\n        height: ${props => !!props.widgetPage ? 'auto' : '6rem'};\n\n        /* padding: .5rem .5rem .5rem .5rem; */\n        margin-top: ${props => !!props.widgetPage && '0rem'};\n        /*padding: ${props => !!props.widgetPage ? '' : '1rem'};*/\n\n    }\n\n    &:hover{\n        cursor:pointer;\n    }\n\n    pointer-events: auto;\n\n`\n\nexport const WidgetStationName = styled.h4`\n    font-size: ${props => props.theme.fontSize.sz4};\n    font-family: ${props => props.theme.font.primary};\n    font-weight: 500;\n    flex:10;\n    justify-content: center;\n    text-align: center;\n    padding-left: 2rem;\n\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n\n`\n\nexport const WidgetPositionName = styled.h4`\n    font-size: ${props => props.theme.fontSize.sz4};\n    font-family: ${props => props.theme.font.primary};\n    font-weight: 500;\n    justify-content: center;\n    text-align: center;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n`\n\nexport const WidgetHoverArea = styled.div`\n    margin-top: -12.7rem;\n    width: 3rem;\n    height:1.5rem;\n    /* z-index: -1; */\n    /* background: red; */\n    /* stroke: 1rem solid red; */\n\n    margin: 0rem auto;\n\n    transform: scale(${props => props.hoverScale});\n\n    &:hover{\n        cursor:pointer;\n    }\n\n`\n\nexport const WidgetPageButtonContainer = styled.div`\n    width: 30rem;\n    border-radius: 1rem;\n    /* z-index: 1; */\n    margin-top: .5rem;\n\n    @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n        width: 20rem;\n    }\n\n`\n\nexport const WidgetButtonContainer = styled.div`\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-content:center;\n\n`\n\nexport const WidgetBlurContainer = styled.div`\n    position: absolute;\n    top: 0rem;\n    width: 100%;\n    height: 100%;\n    /* z-index: -1; */\n    backdrop-filter: blur(10px);\n\n    /* opacity: ${props => !!props.showWidgetPage ? '100%' : '0%'};\n\n    transition: all 0.25s ease; */\n`\n\n\nexport const WidgetStatisticsBlock = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 2rem;\n`;\n\nexport const RowContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    padding-right: .7rem;\n    justify-content: center;\n\n`;\n\nexport const EditIcon = styled.i`\n    font-size: 1rem;\n    text-align: right;\n    flex:1;\n    margin-left:0.5rem;\n    &:hover {\n      color: #798fd9;\n    }\n\n`;\n\nexport const WidgetStatisticsContainer = styled.div`\n    display: flex;\n\n    width: 100%;\n    height: 3rem;\n\n    /* padding: 0rem 3rem; */\n    padding: 0rem 1rem;\n    margin-top: .5rem;\n\n    justify-content: space-between;\n\n    @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n        padding: 0rem 1rem;\n\n    }\n`;\n\nexport const WidgetStatisticsGraphic = styled.svg`\n    overflow: visible;\n    text-align: center;\n    width: 2rem;\n    height: 2rem;\n    background-color: blue;\n    /* transform: translateY(-0.3rem); */\n`;\n\nexport const WidgetStatisticsIcon = styled.i`\n    /* font-size: 1.5rem; */\n`\n\nexport const WidgetStatisticsText = styled.p`\n    align-self: auto;\n    margin-left: .5rem;\n    margin-top: auto;\n    margin-bottom: auto;\n`\n\n// export const CloseButton = styled.span`\n//     border: none;\n//     background: none;\n//     color: ${props => props.theme.fg.primary};\n//     font-size: 8rem;\n//     font-weight: 200;\n//     text-align: center;\n//     position: absolute;\n//     z-index: 4;\n//     line-height: 4rem;\n\n//     font-family: ${props => props.theme.font.primary};\n\n//     cursor: pointer;\n//     top: 1rem;\n//     right: 1rem;\n//     &:focus {outline:0;}\n\n//     @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n//         font-size: 3rem;\n//         right: 1rem;\n//         top: .5rem;\n//     }\n\n// `;\n\nexport const CloseButton = styled.i`\n    border: none;\n    background: none;\n    color: ${props => props.theme.fg.red};\n    text-align: center;\n\n    font-size: 4rem;\n    z-index: 4;\n    margin-left: 1rem;\n\n    position: absolute;\n    cursor: pointer;\n    left: .5rem;\n    &:focus {outline:0;}\n\n    @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n        font-size: 3rem;\n    }\n\n    z-index: 10000;\n\n`;\n","import React, { useState, useMemo, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useParams, useHistory } from 'react-router-dom'\n\n// import components\nimport WidgetPages from './widget_pages/widget_pages'\nimport WidgetButton from './widget_button/widget_button'\n\n// import hooks\nimport useWindowSize from '../../hooks/useWindowSize'\n\n// Import Actions\nimport { setSelectedStation, setEditingStation } from '../../redux/actions/stations_actions'\nimport { setSelectedPosition, setSelectedStationChildrenCopy, setEditingPosition } from '../../redux/actions/positions_actions'\nimport { widgetLoaded, hoverStationInfo } from '../../redux/actions/widget_actions'\n\nimport { setOpen } from \"../../redux/actions/sidebar_actions\"\n\nimport { deepCopy } from '../../methods/utils/utils'\n\n\n\n// Import Utils\nimport { DeviceItemTypes } from '../../methods/utils/device_utils'\n\nimport * as styled from './widgets.style'\n\nconst Widgets = (props) => {\n    const size = useWindowSize()\n    const windowWidth = size.width\n    const widthBreakPoint = 1000;\n    const mobileMode = windowWidth < widthBreakPoint;\n\n    let params = useParams()\n    const history = useHistory()\n\n    // Grabs what widget page is in the URL\n    const widgetPage = params.widgetPage\n    const dashboardOpen = useSelector(state => state.dashboardsReducer.dashboardOpen)\n\n    const stations = useSelector(state => state.stationsReducer.stations)\n    const selectedStation = useSelector(state => state.stationsReducer.selectedStation)\n    const editingStation = useSelector(state => state.stationsReducer.editingStation)\n\n    const positions = useSelector(state => state.positionsReducer.positions)\n    const selectedPosition = useSelector(state => state.positionsReducer.selectedPosition)\n    const editingPosition = useSelector(state => state.positionsReducer.editingPosition)\n\n    const devices = useSelector(state => state.devicesReducer.devices)\n    const showSideBar = useSelector(state => state.sidebarReducer.open)\n\n    // Info passed from workstations/device_locations via redux\n    const hoveringInfo = useSelector(state => state.widgetReducer.hoverStationInfo)\n\n    const dispatch = useDispatch()\n    const dispatchHoverStationInfo = (info) => dispatch(hoverStationInfo(info))\n    const dispatchWidgetLoaded = (bool) => dispatch(widgetLoaded(bool))\n    const dispatchSetSelectedStation = (station) => dispatch(setSelectedStation(station))\n    const dispatchSetEditingStation = (bool) => dispatch(setEditingStation(bool))\n    const dispatchSetSelectedPosition = (position) => dispatch(setSelectedPosition(position))\n    const dispatchSetEditingPosition = (bool) => dispatch(setEditingPosition(bool))\n    const dispatchSetSelectedStationChildrenCopy = (locationChildren) => dispatch(setSelectedStationChildrenCopy(locationChildren))\n    const dispatchShowSideBar = (bool) => dispatch(setOpen(bool))\n\n    // Location ID passed down through workstations via redux\n    const stationID = hoveringInfo.id\n\n    const editing = editingStation ? editingStation : editingPosition\n    const selectedLocation = !!selectedStation ? selectedStation : selectedPosition\n\n    // This tells redux that the widget has mounted. Used in map view to handle if widget is still open but shoulnt be\n    // This happens when moving the mouse too fast over a location causing a widget to load, but not fast enough for the onmouselave to execute\n    useEffect(() => {\n\n        // setTimeout(() => dispatchWidgetLoaded(true), 100)\n        dispatchWidgetLoaded(true)\n        return () => {\n            onWidgetClose()\n        }\n    }, [])\n\n\n    /**\n     * Closes the widget\n     * If editing, then dont set the selected location to null\n     * @param {*} edit\n     */\n    const onWidgetClose = (edit) => {\n        \n        dispatchHoverStationInfo(null)\n        dispatchWidgetLoaded(false)\n\n    }\n\n    // If widgetPage exists in URL params, then the widget pages are open\n    const HandleWidgetPageOpen = () => {\n        if (!!widgetPage && (!!editingStation || !!editingPosition)) {\n            dispatchHoverStationInfo(hoveringInfo)\n            dispatchSetSelectedStation(null)\n            dispatchSetSelectedPosition(null)\n        }\n    }\n\n    const onClickLocation = async () => {\n\n\n        history.push('/locations')\n\n        if (!showSideBar) {\n            const hamburger = document.querySelector('.hamburger')\n            hamburger.classList.toggle('is-active')\n        }\n\n        dispatchShowSideBar(true)\n\n        onWidgetClose(true)\n        dispatchHoverStationInfo(null)\n\n        if (!!selectedStation) {\n            dispatchSetEditingStation(true)\n            let copy = {}\n            selectedStation.children.forEach(child => {\n                copy[child] = positions[child]\n            })\n            dispatchSetSelectedStationChildrenCopy(copy)\n            dispatchSetSelectedStation(selectedStation)\n        }\n        else if (!!selectedPosition) {\n            dispatchSetEditingPosition(true)\n            dispatchSetSelectedPosition(selectedPosition)\n\n        }\n\n\n    }\n\n\n    // Renders the buttons under the location. useMemo is passed a blank array because the buttons only need to be rendered once\n    const handleWidgetButtons = useMemo(() => {\n        const location = !!stations[hoveringInfo.id] ? stations[hoveringInfo.id] : positions[hoveringInfo.id]\n\n        // If the schema is a station then show these buttons, else it's a position\n        if (location.schema === 'station') {\n            // If location has a device, then see what type of widget buttons need to be displayed, else just show statistics and dashboards\n            if (!!location.device_id) {\n                const device = devices[location.device_id]\n                let deviceType = DeviceItemTypes['generic']\n\n                if (!!DeviceItemTypes[device.device_model]) deviceType = DeviceItemTypes[device.device_model]\n\n                return deviceType.widgetPages.map((page, ind) => {\n                    switch (page) {\n                        case 'statistics':\n                            return (\n                                <WidgetButton\n                                    key={ind}\n                                    id={stationID}\n                                    type={'statistics'}\n                                    label={'Statistics'}\n                                    currentPage={widgetPage}\n\n                                />\n                            )\n                        case 'dashboards':\n                            return (\n                                <WidgetButton\n                                    key={ind}\n                                    id={stationID}\n                                    type={'dashboards'}\n                                    label={'Dashboards'}\n                                    currentPage={widgetPage}\n\n                                />\n                            )\n                        case 'view':\n                            return (\n                                <WidgetButton\n                                    key={ind}\n                                    id={stationID}\n                                    type={'view'}\n                                    label={'View'}\n                                    currentPage={widgetPage}\n\n                                />\n                            )\n\n                        default:\n                            break;\n                    }\n\n                })\n\n            }\n            else {\n                return (\n                    <>\n                        <WidgetButton\n                            id={stationID}\n                            type={'statistics'}\n                            label={'Statistics'}\n                            currentPage={widgetPage}\n\n                        />\n\n                        <WidgetButton\n                            id={stationID}\n                            type={'dashboards'}\n                            label={'Dashboards'}\n                            currentPage={widgetPage}\n\n                        />\n\n                        <WidgetButton\n                            id={stationID}\n                            type={'lots'}\n                            label={'Lots'}\n                            currentPage={widgetPage}\n\n                        />\n\n                        {/* Commented out for now, these widgets aren't working as of Sept. 1 2020. Once re-implemented make sure to update CSS */}\n                        {/* <WidgetButton\n                    id={stationID}\n                    type={'tasks'}\n                    currentPage={widgetPage}\n                /> */}\n\n                        {/* <WidgetButton\n                            id={stationID}\n                            type={'objects'}\n                            currentPage={widgetPage}\n                        /> */}\n\n                        {/* <WidgetButton\n                    id={stationID}\n                    type={'view'}\n                    currentPage={widgetPage}\n                /> */}\n                    </>\n\n                )\n            }\n        }\n        // If right menu position, have send cart and cancel (times)\n        else if (selectedPosition.schema === 'temporary_position') {\n            return (\n                <>\n                    <WidgetButton\n                        id={stationID}\n                        type={'cart'}\n                        coordinateMove={true}\n                        currentPage={widgetPage}\n                        label={'Send Cart Here'}\n\n                    />\n                    <WidgetButton\n                        id={stationID}\n                        type={'cancel'}\n                        currentPage={widgetPage}\n\n                    />\n                </>\n            )\n        }\n\n        else {\n            return (\n                <WidgetButton\n                    id={stationID}\n                    type={'cart'}\n                    label={'Send Cart Here'}\n                    currentPage={widgetPage}\n\n                />\n            )\n        }\n    }, [widgetPage])\n\n    const statistics = useMemo(() => {\n        // TODO: Write code that grabs the statistics for the current location\n\n        return (\n            <styled.WidgetStatisticsContainer>\n\n                <styled.WidgetStatisticsBlock>\n                    <styled.WidgetStatisticsIcon className=\"far fa-clock\" />\n                    <styled.WidgetStatisticsText>\n                        30s\n                    </styled.WidgetStatisticsText>\n                </styled.WidgetStatisticsBlock>\n\n                <styled.WidgetStatisticsBlock>\n                    <styled.WidgetStatisticsIcon className=\"fas fa-arrow-right\" />\n                    <styled.WidgetStatisticsText>\n                        25 Units\n                    </styled.WidgetStatisticsText>\n                </styled.WidgetStatisticsBlock>\n\n                <styled.WidgetStatisticsBlock>\n                    <styled.WidgetStatisticsIcon className=\"fas fa-percent\" />\n                    <styled.WidgetStatisticsText>\n                        98%\n                    </styled.WidgetStatisticsText>\n                </styled.WidgetStatisticsBlock>\n\n            </styled.WidgetStatisticsContainer>\n        )\n    }, [stations, positions])\n\n    /**\n     * This handles the x and y position of the widget.\n     * It centers the x and y position to the middle of the widget by using the element height and width\n     * This takes care issue with widgets that are different sizes\n     * @param {} coord\n     */\n    // Left outside of function so that otherplaces can access it\n    const element = document.getElementById(hoveringInfo.id)\n\n    const handleWidgetPosition = (coord) => {\n\n        // When first hovering over, the widget has not mounted so the element is null, but once its mounted, you can use the bounding box\n        if (element === null) {\n            if (coord === 'x') {\n                return hoveringInfo.xPosition + 'px'\n            } else {\n\n                return hoveringInfo.yPosition + 'px'\n            }\n        }\n\n        const elementHeight = element.getBoundingClientRect().height\n        const elementWidth = element.getBoundingClientRect().width\n\n\n        let widgetPosition = {}\n\n        // Handles the x, use location x if right click menu so it can also move\n        if (!!selectedPosition && selectedPosition.schema === 'temporary_position') {\n            widgetPosition.x = selectedPosition.x - elementWidth / 2 + 30 + 'px'\n        }\n        else {\n            widgetPosition.x = hoveringInfo.xPosition - elementWidth / 2 + 'px'\n        }\n\n        // Handles the y, use location y if right click menu so it can also move\n        if (!!selectedPosition && selectedPosition.schema === 'temporary_position') {\n            widgetPosition.y = selectedPosition.y + elementHeight / 2 + 20 + 'px'\n        }\n        else {\n            widgetPosition.y = hoveringInfo.yPosition + elementHeight / 2 + 'px'\n        }\n\n        if (coord === 'x') {\n            return widgetPosition.x\n\n        } else {\n            return widgetPosition.y\n        }\n\n    }\n\n    return (\n        <>\n            {!!widgetPage &&\n                <styled.WidgetBlurContainer />\n            }\n            {/* WidgetLocationContainer is an absolute div used for locating the widget over the hovered location */}\n            <styled.WidgetLocationContainer\n                id={hoveringInfo.id}\n                onMouseEnter={() => {\n                    dispatchHoverStationInfo(hoveringInfo)\n                    handleWidgetPosition()\n                }}\n\n                onMouseLeave={() => {\n                    if (!widgetPage && !!selectedLocation && selectedLocation.schema !== 'temporary_position' && !editing) {\n                        onWidgetClose()\n                        dispatchSetSelectedStation(null)\n                        dispatchSetSelectedPosition(null)\n                    }\n                }}\n\n                // xPosition={hoveringInfo.xPosition + 'px'}\n                xPosition={handleWidgetPosition('x')}\n                yPosition={handleWidgetPosition('y')}\n                scale={hoveringInfo.scale}\n                widgetPage={widgetPage}\n\n                // This sets the opacity to 0 if the element has not been mounted yet. Eliminates the 'snapping'\n                style={{ opacity: !widgetPage && element === null ? '0' : '1' }}\n            >\n                {/* If not widget page and not a right click widget then add an invisable hover area */}\n                {!widgetPage && !!selectedLocation && selectedLocation.schema !== 'temporary_position' &&\n                    <styled.WidgetHoverArea\n                        hoverScale={hoveringInfo.realScale}\n                        onMouseEnter={() => {\n                            dispatchHoverStationInfo(hoveringInfo)\n                        }}\n\n                    />\n                }\n                <styled.WidgetContainer widgetPage={widgetPage} type={!!selectedLocation && selectedLocation.type} >\n                    {!widgetPage && !!selectedLocation &&\n                        <>\n                            {selectedLocation.schema == \"temporary_position\" ?\n                                <styled.WidgetStationName>{\"Send Cart To Location\"}</styled.WidgetStationName>\n                                :\n                                <>\n                                    {!!selectedLocation.parent ?\n                                        <styled.WidgetPositionName>{selectedLocation.name}</styled.WidgetPositionName>\n                                        :\n                                        <styled.RowContainer>\n                                            <styled.WidgetStationName>{selectedLocation.name}</styled.WidgetStationName>\n                                            <styled.EditIcon\n                                                className='fas fa-edit'\n                                                styled={{ color: '#ff1818' }}\n                                                onClick={() => onClickLocation()}\n                                            />\n                                        </styled.RowContainer>\n\n                                    }\n                                </>\n                            }\n                        </>\n                    }\n\n\n\n                    <styled.WidgetButtonContainer widgetPage={widgetPage}>\n                        {handleWidgetButtons}\n                    </styled.WidgetButtonContainer>\n\n\n                    {/* Commented out for the time being, statistics have not been implemented as of Sept 1 */}\n                    {/* {!widgetPage &&\n                        statistics\n                    } */}\n\n                    {HandleWidgetPageOpen()}\n                </styled.WidgetContainer>\n\n\n\n            </styled.WidgetLocationContainer>\n\n            {!!widgetPage &&\n                <>\n                    <WidgetPages />\n                </>\n            }\n\n        </>\n\n    )\n}\n\nexport default Widgets\n","import styled from 'styled-components'\n\n\nexport const WidgetForeignObject = styled.foreignObject`\n    transition: ${props => props.width === '100%' ? 'all 0.25s ease' : 'none'};\n    overflow: visible;\n    z-index: 1;\n`\n\nexport const WidgetHoverArea = styled.div`\n    margin-top: -12.7rem;\n    width: 30rem;\n    height: 10rem;\n    z-index: 5000;\n`\n\nexport const WorkstationGroup = styled.g`\n    stroke-width: 0;\n    opacity: 0.8;\n`","import React from 'react'\n\nimport { useDispatch, useSelector } from 'react-redux'\n\n// Import utils\nimport { deepCopy } from './utils'\n\n// Import Actions\nimport { putDevices, postDevices, getDevices, deleteDevices } from '../../redux/actions/devices_actions'\nimport * as locationActions from '../../redux/actions/locations_actions'\nimport * as positionActions from '../../redux/actions/positions_actions'\nimport * as dashboardActions from '../../redux/actions/dashboards_actions'\nimport * as stationActions from '../../redux/actions/stations_actions'\nimport * as taskActions from '../../redux/actions/tasks_actions'\nimport * as deviceActions from '../../redux/actions/devices_actions'\n\n/**\n * All of these coordinates have been calc by adjusting them on map with chrome dev tools\n * @param {*} location\n * @param {*} rd3tClassName\n * @param {*} d3\n */\n\nexport const handleWidgetHoverCoord = (location, rd3tClassName, d3) => {\n\n    let widgetInfo = {}\n    widgetInfo.id = location._id\n\n    widgetInfo.heightWidth = '1'\n\n    // Initial Ratios\n    widgetInfo.yPosition = location.y - 66 * d3.scale\n    widgetInfo.xPosition = location.x - 2\n    widgetInfo.scale = d3.scale\n\n    // Sets real scale to be used with the widget hover area\n    widgetInfo.realScale = d3.scale\n\n    // If type is a device\n    if (location.type === 'device') {\n        // Gets the height of the device\n        const el = document.getElementById(`${rd3tClassName}-device`)\n        let bBox = null\n\n\n        // Try catch for when page refreshses when in a widget. When refreshing in a widget, the elements is unmounted and cant get the bounding because of an unmounted element\n        try {\n            bBox = el.getBoundingClientRect()\n        } catch (error) {\n            return widgetInfo\n        }\n\n        // Stops the widget from getting to0 small and keeping the widget relative to the location size\n        if (d3.scale < .8) {\n            widgetInfo.scale = .8\n            widgetInfo.yPosition = location.y + bBox.height / 2 - 71\n            widgetInfo.xPosition = location.x - 12\n\n\n        }\n\n        // Stops the widget from getting to0 large and keeping the widget relative to the location size\n        else if (d3.scale > 1.3) {\n            widgetInfo.scale = 1.3\n            widgetInfo.yPosition = location.y + bBox.height / 2 - 86\n            widgetInfo.xPosition = location.x + 30\n\n        }\n    }\n\n    // Else its a postion/station\n    else {\n        // Gets the element based on whether its a station or not\n        const el = location.schema === 'station' ? document.getElementById(`${rd3tClassName}-station`) : document.getElementById(`${rd3tClassName}-position`)\n        let bBox = null\n\n        // Try catch for when page refreshses when in a widget. When refreshing in a widget, the elements is unmounted and cant get the bounding because of an unmounted element\n        try {\n            bBox = el.getBoundingClientRect()\n        } catch (error) {\n            return widgetInfo\n        }\n\n        widgetInfo.scale = 1.3\n        widgetInfo.yPosition = location.y + bBox.height / 2 - 75\n        widgetInfo.xPosition = location.schema === 'station' ? location.x + 45 : location.x + 12\n\n        // Stops the widget from getting to small and keeping the widget relative to the location size\n        if (d3.scale < .8) {\n            widgetInfo.scale = .8\n            widgetInfo.yPosition = location.y + bBox.height / 2 - 68\n            widgetInfo.xPosition = location.x - 15\n        }\n\n        // Stops the widget from getting to large and keeping the widget relatice to the location size\n        else if (d3.scale > 1.3) {\n            widgetInfo.scale = 1.3\n            widgetInfo.yPosition = location.y + bBox.height / 2 - 75\n            widgetInfo.xPosition = location.schema === 'station' ? location.x + 45 : location.x + 12\n\n        }\n    }\n\n    return widgetInfo\n\n}\n","import styled from 'styled-components'\n\nexport const WorkstationGroup = styled.g`\n    stroke-width: 0;\n    opacity: 0.8;\n`","import React from 'react'\n\nimport * as styled from './location_svg.style'\n\n// Import Constants\nimport { StationTypes } from '../../../../constants/station_constants'\nimport { PositionTypes } from '../../../../constants/position_constants'\n\nconst LocationSvg = (props) => {\n\n    const {\n        location,\n        rd3tClassName,\n        color,\n        d3,\n        isSelected,\n        hovering,\n        rotating,\n        hoveringInfo,\n        shouldGlow,\n\n        handleMouseEnter,\n        handleMouseLeave,\n        handleMouseDown,\n        handleTranslating,\n        handleRotating,\n\n\n    } = props\n\n    const schema = location.schema\n    const locationTypes = {\n        ...StationTypes,\n        ...PositionTypes\n    }\n\n    return (\n        <styled.WorkstationGroup\n            id={rd3tClassName}\n            className={rd3tClassName}\n            style={{ fill: color, stroke: color }}\n            onMouseEnter={() => {\n                handleMouseEnter()\n            }}\n            onMouseDown={() => {\n                handleMouseDown()\n            }}\n            onMouseLeave={() => {\n                handleMouseLeave()\n            }}\n            transform={`translate(${location.x},${location.y}) rotate(${location.rotation}) scale(${d3.scale / d3.imgResolution})`}\n        >\n            <defs>\n\n                {/* a transparent glow that takes on the colour of the object it's applied to */}\n                <filter id=\"glow\">\n                    <feGaussianBlur stdDeviation=\"1\" result=\"coloredBlur\" />\n                    <feMerge>\n                        <feMergeNode in=\"coloredBlur\" />\n                        <feMergeNode in=\"SourceGraphic\" />\n                    </feMerge>\n                </filter>\n\n                <filter id=\"glow2\" height=\"300%\" width=\"300%\" x=\"-75%\" y=\"-75%\">\n                    <feMorphology operator=\"dilate\" radius=\"1\" in=\"SourceAlpha\" result=\"thicken\" />\n                    <feGaussianBlur in=\"thicken\" stdDeviation=\"2\" result=\"blurred\" />\n                    <feFlood floodColor={color} result=\"glowColor\" />\n                    <feComposite in=\"glowColor\" in2=\"blurred\" operator=\"in\" result=\"softGlow_colored\" />\n                    <feMerge>\n                        <feMergeNode in=\"softGlow_colored\" />\n                        <feMergeNode in=\"SourceGraphic\" />\n                    </feMerge>\n                </filter>\n\n            </defs>\n\n            <g\n                className={`${rd3tClassName}-rot`}\n                onMouseLeave={() => {\n                    handleMouseLeave()\n                }}\n\n            >\n                <circle x=\"-20\" y=\"-20\" r=\"20\" strokeWidth=\"0\" fill=\"transparent\" style={{ cursor: rotating ? \"pointer\" : \"grab\" }}\n                />\n                {isSelected && (hovering || rotating) && hoveringInfo === null &&\n                    <>\n                        <circle x=\"-20\" y=\"-20\" r=\"18\" fill=\"none\" strokeWidth=\"4\" stroke=\"transparent\" style={{ cursor: \"pointer\" }}\n                            onMouseDown={() => handleRotating(true)}\n                            onMouseUp={() => handleRotating(false)}\n\n                        />\n                        <circle x=\"-18\" y=\"-18\" r=\"18\" fill=\"none\" strokeWidth=\"0.8\" style={{ filter: \"url(#glow)\", cursor: \"pointer\" }}\n                        />\n                    </>\n                }\n            </g>\n\n            <g\n                className={`${rd3tClassName}-trans`}\n                style={{ cursor: \"pointer\" }}\n                onMouseEnter={() => {\n                    handleMouseEnter()\n                }}\n                onMouseDown={() => handleTranslating(true)}\n                onMouseUp={() => handleTranslating(false)}\n\n                transform={location.type === 'device' && 'scale(.07) translate(-180,-140)'}\n            >\n\n                <svg id={`${rd3tClassName}-${schema}`} x=\"-10\" y=\"-10\" width=\"20\" height=\"20\" viewBox=\"0 0 400 400\" style={{ filter: shouldGlow ? 'url(#glow2)' : 'none' }}>\n                    {locationTypes[location.type].svgPath}\n                </svg>\n\n\n            </g>\n\n\n        </styled.WorkstationGroup>\n    )\n}\n\nexport default LocationSvg","import React, { useState, useEffect, useMemo } from 'react'\nimport * as d3 from 'd3'\n\n\nconst DragEntityProto = (props) => {\n    const {\n        isSelected,\n        location,\n        handleRotate,\n        handleTranslate,\n        handleDisableDrag,\n        handleEnableDrag,\n        handleTranslateEnd,\n        rd3tClassName,\n        // d3\n    } = props\n\n    const [rotating, setRotating] = useState(false)\n    const [translating, setTranslating] = useState(false)\n\n    useEffect(() => {\n        bindDragListener()\n    })\n\n    let rotateStart = null          // Inital rotation angle\n    let originalRotation = null     // Original rotation of location\n    let deltaRotation = null        // Change in rotation (current angle - start angle)\n\n    let translateStart = null       // Initial coordinates of translate\n    let originalTranslation = []    // Original coordinates of location\n    let deltaTranslation = []       // Change in coordinates (over course of the drag event)\n\n    /** Callback on continuous rotate event */\n    const rotate = (event, element) => {\n\n        // Cant rotate if this location is not selected\n        if (!isSelected) { return }\n        if (!rotating) { setRotating(true) }\n\n        // The angle is calculated between the current cursor location and the center of the location\n        // NOTE: Im not sure why the 160 offset is neccessary. I think it might have to do with the way the menu/status bar\n        // is layered.\n        let angle\n        if (event.sourceEvent.type == \"mousemove\") {    // Computer\n            angle = Math.atan2(event.sourceEvent.clientY - location.y, event.sourceEvent.clientX - location.x) * 180 / Math.PI\n        } else if (event.sourceEvent.type == \"touchmove\") { // Tablet\n            angle = Math.atan2(event.sourceEvent.touches[0].clientY - location.y, event.sourceEvent.touches[0].clientX - location.x) * 180 / Math.PI\n        }\n\n        // Keep track of BOTH the initial rotation of the position, and the start angle of the drag\n        if (rotateStart == null) {\n            originalRotation = location.rotation\n            rotateStart = angle\n        }\n        // The delta is the current angle - the start angle (round to nearest 5th degree or nearest 45 degree)\n        deltaRotation = angle - rotateStart\n        if (Math.abs(deltaRotation % 45) < 5) {\n            deltaRotation = Math.round(deltaRotation / 45) * 45\n        } else {\n            deltaRotation = Math.round(deltaRotation / 10) * 10\n        }\n\n        // Callback passed from props to set the appropriate location atttribute\n        handleRotate(originalRotation + deltaRotation)\n    }\n\n    const rotateEnd = () => {\n        // Effectivly clears the rotate event\n        rotateStart = null\n    }\n\n    const translate = (event, element) => {\n\n        // Cant move location if the location isnt selected\n        if (!isSelected) { return }\n        if (!translating) { setTranslating(true) }\n\n        // Set the translation based on the event\n        let translation = []\n        if (event.sourceEvent.type == \"mousemove\") {    // Computer\n            translation = [event.sourceEvent.clientX, event.sourceEvent.clientY]\n        } else if (event.sourceEvent.type == \"touchmove\") { // Tablet\n            translation = [event.sourceEvent.touches[0].clientX, event.sourceEvent.touches[0].clientY]\n        }\n\n        // Keep track of the initial positon coords and the start coords of the event\n        if (translateStart == null) {\n            translateStart = translation\n            originalTranslation = [location.x, location.y]\n        }\n        // Calculate the change in translation relative to the start coordinates (round to nearest 5th pixel)\n        deltaTranslation[0] = Math.round((translation[0] - translateStart[0]) / 5) * 5\n        deltaTranslation[1] = Math.round((translation[1] - translateStart[1]) / 5) * 5\n\n        // Callback to set the appropriate location attributes\n        handleTranslate({ x: originalTranslation[0] + deltaTranslation[0], y: originalTranslation[1] + deltaTranslation[1] })\n    }\n\n    const translateEnd = () => {\n        translateStart = null\n    }\n\n    /* translateStart = nullconvertRealToD3\n     * Bind the listener that will listen for events that are made directly to this element\n     */\n    const bindDragListener = () => {\n\n        const mainElement = d3.select(`.${rd3tClassName}`)\n        const ringElement = d3.select(`.${rd3tClassName}-rot`)\n        const rectElement = d3.select(`.${rd3tClassName}-trans`)\n\n        // Define drag callbacks for dragging the ring (which rotates the location)\n        ringElement.call(\n            d3.behavior.drag()\n                .on(\"dragstart\", () => {\n                    if (isSelected) {\n                        handleDisableDrag()\n                    }\n                })\n                .on(\"drag\", function (d, i) {\n                    if (isSelected) {\n                        rotate(d3.event, mainElement)\n                    }\n                })\n                .on(\"dragend\", () => {\n                    if (isSelected) {\n                        rotateEnd()\n                        handleEnableDrag()\n                        setRotating(false)\n                    }\n                })\n        )\n\n        // Define drag callbacks for the element itself (which translates location)\n        rectElement.call(\n            d3.behavior.drag()\n                .on(\"dragstart\", () => {\n                    if (isSelected) {\n                        handleDisableDrag()\n                    }\n                })\n                .on(\"drag\", function (d, i) {\n                    if (isSelected) {\n                        translate(d3.event, mainElement)\n                    }\n                })\n                .on(\"dragend\", async () => {\n                    if (isSelected) {\n                        handleTranslateEnd({ x: originalTranslation[0] + deltaTranslation[0], y: originalTranslation[1] + deltaTranslation[1] })\n                        translateEnd()\n                        handleEnableDrag()\n                        setTranslating(false)\n                    }\n                })\n        )\n    }\n\n    return (null)\n}\n\nexport default DragEntityProto","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useParams } from 'react-router-dom'\n\nimport * as styled from './station.style'\n\n// Import actions\nimport { hoverStationInfo } from '../../../../redux/actions/widget_actions'\nimport { setSelectedStation, setStationAttributes } from '../../../../redux/actions/stations_actions'\nimport { setTaskAttributes } from '../../../../redux/actions/tasks_actions'\n\n// Import Utils\nimport { handleWidgetHoverCoord } from '../../../../methods/utils/widget_utils'\nimport { deepCopy } from '../../../../methods/utils/utils'\nimport { convertD3ToReal } from '../../../../methods/utils/map_utils'\nimport { editing } from '../../../../methods/utils/locations_utils'\n\n// Import Constants\nimport { StationTypes } from '../../../../constants/station_constants'\n\n// Import Components\nimport LocationSvg from '../location_svg/location_svg'\nimport DragEntityProto from '../drag_entity_proto'\nimport {getPreviousRoute} from \"../../../../methods/utils/processes_utils\";\nimport {\n    getRouteEnd,\n    getRouteIndexInRoutes, getRouteStart,\n    getUnloadStationId,\n    isNextRouteViable, isPositionAtLoadStation, isPositionInRoutes,\n    isStationInRoutes,\n    isStationLoadStation, isStationUnloadStation\n} from \"../../../../methods/utils/route_utils\";\n\nfunction Station(props) {\n\n\n    const {\n        station,\n        rd3tClassName,\n        d3,\n        handleEnableDrag,\n        handleDisableDrag,\n    } = props\n\n\n    const [hovering, setHovering] = useState(false)\n    const [rotating, setRotating] = useState(false)\n    const [translating, setTranslating] = useState(false)\n\n    const selectedStation = useSelector(state => state.stationsReducer.selectedStation)\n    const editingStation = useSelector(state => state.stationsReducer.editingStation)\n    const selectedPosition = useSelector(state => state.positionsReducer.selectedPosition)\n    const selectedTask = useSelector(state => state.tasksReducer.selectedTask)\n    const selectedProcess = useSelector(state => state.processesReducer.selectedProcess)\n    const hoveringInfo = useSelector(state => state.widgetReducer.hoverStationInfo)\n    const tasks = useSelector(state => state.tasksReducer.tasks)\n    const fixingProcess = useSelector(state => state.processesReducer.fixingProcess)\n\n    const dispatch = useDispatch()\n    const dispatchHoverStationInfo = (info) => dispatch(hoverStationInfo(info))\n    const dispatchSetSelectedStation = (station) => dispatch(setSelectedStation(station))\n    const dispatchSetStationAttributes = (id, attr) => dispatch(setStationAttributes(id, attr))\n    const dispatchSetTaskAttributes = (id, load) => dispatch(setTaskAttributes(id, load))\n\n\n    // ======================================== //\n    //                                          //\n    //        Station Characteristics           //\n    //                                          //\n    // ======================================== //\n\n    const routeStart = getRouteStart(selectedTask)\n    const routeEnd = getRouteEnd(selectedTask)\n\n    // Used to allow translating/rotation\n    let isSelected = false\n    // Set selected if there is a selected postion that is this position and no selected task\n    if (!!selectedStation && selectedStation._id === station._id && !selectedTask && !!editingStation) isSelected = true\n\n    let disabled = false\n    // Disable if the selected station is not this station\n    if (!!selectedStation && selectedStation._id !== station._id) disabled = true\n    // Disable if theres a selected position and the station's children dont contain that position\n    else if (!!selectedPosition && !station.children.includes(selectedPosition._id)) disabled = true\n\n    // This filters out stations when fixing a process\n    // If the process is broken, then you can only start the task at the route before break's unload location\n    else if (!!selectedTask && !!selectedProcess && !!fixingProcess) {\n\n        // setting load\n        if(!routeStart || (routeStart && routeEnd)) {\n\n            // must start at unload station of route before the break\n            const routeBeforeBreak = selectedProcess.routes[selectedProcess.broken - 1]\n            if(!isStationUnloadStation(routeBeforeBreak, station._id)) disabled = true\n        }\n\n        // setting unload\n        else if(!routeEnd) {\n\n            // can't pick same station for load and unload\n            if(isStationLoadStation(selectedTask, station._id)) disabled = true\n\n            // disable stations already in process\n            if(isStationInRoutes(selectedProcess.routes, station._id)) disabled = true\n\n            // always allow picking load station of route after the break, as this would fix the break\n            const routeAfterBreak = selectedProcess.routes[selectedProcess.broken] || {}\n            if(isStationLoadStation(routeAfterBreak, station._id)) disabled = false\n        }\n    }\n\n    // This filters stations when making a process\n    // If the process has routes, and you're adding a new route, you should only be able to add a route starting at the last station\n    // This eliminates process with gaps between stations\n    else if (!!selectedProcess && !!selectedTask  ) {\n        const {\n            temp\n        } = selectedTask || {}\n        const {\n            insertIndex\n        } = temp || {}\n\n        if(selectedProcess.routes.length > 0) {\n            const routeIndex = getRouteIndexInRoutes(selectedProcess.routes.map((currProcess) => currProcess._id), selectedTask?._id)\n\n            // setting load station\n            if(!routeStart || (routeStart && routeEnd)) {\n\n                // adding to beginning\n                if(insertIndex === 0 ) {\n                    // disable is station is already in process\n                    if(isStationInRoutes(selectedProcess.routes, station._id)) disabled = true\n                }\n\n\n                else if(routeIndex === 0) {\n                    if(isStationInRoutes(selectedProcess.routes, station._id)) disabled = true\n                    if(isStationLoadStation(selectedTask, station._id)) disabled = false\n                }\n\n                else {\n                    // must select unload station of previous route\n                    const previousRoute = getPreviousRoute(selectedProcess.routes, selectedTask._id)\n                    if(!isStationUnloadStation(previousRoute, station._id)) disabled = true\n                }\n            }\n\n            else if(!routeEnd) {\n\n                // adding to beginning of process\n                if(insertIndex === 0 ) {\n\n                    // disable stations already in process\n                    if(isStationInRoutes(selectedProcess.routes, station._id)) disabled = true\n\n                    // don't allow selecting same station for load and unload\n                    if(isStationLoadStation(selectedTask, station._id)) disabled = true\n\n                    // always allow selecting load station of first route, as we are adding to the beginning of the process\n                    const firstRoute = selectedProcess.routes[0]\n                    if(isStationLoadStation(firstRoute, station._id)) disabled = false\n                }\n\n                else if(routeIndex === 0) {\n                    // disable stations already in process\n                    if(isStationInRoutes(selectedProcess.routes, station._id)) disabled = true\n\n                    const nextRoute = selectedProcess.routes[1]\n                    if(isStationLoadStation(nextRoute, station._id)) disabled = false\n                }\n\n                else {\n                    // disable stations already in process\n                    if(isStationInRoutes(selectedProcess.routes, station._id)) disabled = true\n\n                    const nextRoute = selectedProcess.routes[routeIndex + 1]\n                    if(isStationLoadStation(nextRoute, station._id)) disabled = false\n                }\n            }\n        }\n\n        // editing first route\n        else {\n            if((selectedTask.load.station && selectedTask.unload.station === null)) {\n                // don't allow selecting same station for load and unload\n                if(isStationLoadStation(selectedTask, station._id)) disabled = true\n            }\n        }\n    }\n\n    const shouldGlow = false\n\n    let highlight = false\n    // Set selected to true if the selected task inculdes the station\n    if (!!selectedTask && (selectedTask.load.station === station._id || selectedTask.unload.station === station._id)) highlight = true\n\n    // Set Color\n    let color = StationTypes[station.type].color\n    if (!isSelected && disabled) color = '#afb5c9' // Grey\n    else if (highlight) color = '#38eb87' // Green\n\n    // ======================================== //\n    //                                          //\n    //            Station Functions             //\n    //                                          //\n    // ======================================== //\n\n    // Used to see if a widget Page is opened\n    let params = useParams()\n    useEffect(() => {\n        window.addEventListener(\"mouseup\", () => { setRotating(false); setTranslating(false) })\n        return () => {\n            window.removeEventListener(\"mouseup\", () => { setRotating(false); setTranslating(false) })\n        }\n\n    }, [])\n\n\n    /**\n    * This runs on page load (thats mean station are mounted) and shows a widget page if it returns true.\n    * If there is a station ID in the params (URL) and it matches this station,\n    * and the URL (params) container a widget page then the widget page should be showing\n    */\n    useEffect(() => {\n        if (params.stationID !== undefined && params.stationID === props.station._id && !!params.widgetPage) {\n            dispatchHoverStationInfo(handleWidgetHover())\n        }\n    }, [])\n\n    /**\n     * Passes the X, Y, scale and ID of station to redux which is then used in widgets\n     */\n    const handleWidgetHover = () => {\n        return handleWidgetHoverCoord(station, rd3tClassName, d3)\n\n    }\n\n    // Handles if URL has widget page open\n    const onWidgetPageOpen = () => {\n        // If widget page is open, hovering is false and the open widget page stations id matches the station ID, set it to true so\n        // that the widget page doesn't disappear when mouse goes out of page\n        if (!!params.widgetPage && !hovering && params.stationID === station._id) {\n            setHovering(true)\n            dispatchHoverStationInfo(handleWidgetHover())\n\n        }\n\n        // If hovering is true but there's no hoverInfo in the reducer (see widgets for when hoverInfo is set to null), set hovering to false\n        else if (!isSelected && hovering && hoveringInfo === null) {\n            setHovering(false)\n        }\n    }\n\n    /**\n     * This handles when a station is selected for a task\n     * Can only add a station to a task if the station is a warehouse or a human\n     * \n     * For a warehouse, the thing to remember is that you push to a warehouse and pull from a warehouse\n     */\n    const onSetStationTask = () => {\n\n        // Make sure there is a selected task and that its a station type you can assign a task too\n        if (selectedTask !== null && (station.type === 'human' || station.type === 'warehouse')) {\n\n            // Commented out for now\n            // // If there's a selected process and the process has routes and the station is not selected, then disable it from being selected\n            // if (!!selectedProcess && selectedProcess.routes.length > 0 && !isSelected) return\n\n            // If the load station has been defined but the unload position hasnt, assign the unload position\n            if (selectedTask.load.position !== null && selectedTask.unload.position === null) {\n                let unload = deepCopy(selectedTask.unload)\n                let type = selectedTask.type\n\n                // If it's a station then set hadnoff to true\n                let handoff = selectedTask.handoff\n                handoff = true\n\n                // Since it's a station, set both the position and station to the station ID\n                unload.position = station._id\n                unload.station = station._id\n\n                // If it's a warehouse and the load station has been selected, then the task type has to be a push\n                // You can only push to a ware house\n                type = station.type === 'warehouse' ? 'push' : type\n\n                // if (station.parent !== null) {\n                //     unload.station = station._id\n                // } else {\n                //     type = 'push'\n                // }\n                dispatchSetTaskAttributes(selectedTask._id, { unload, type, handoff })\n            }\n\n            // Otherwise assign the load position and clear the unload position (to define a new unload)\n            else {\n                let load = deepCopy(selectedTask.load)\n                let unload = deepCopy(selectedTask.unload)\n                let type = selectedTask.type\n\n                // If it's a station then set hadnoff to true\n                let handoff = selectedTask.handoff\n                handoff = true\n\n                // Since it's a station, set both the position and station to the station ID\n                load.position = station._id\n                load.station = station._id\n\n                // If it's a warehouse and the load position has not been selected then the task type is a pull\n                // You can only pull from a ware house\n                type = station.type === 'warehouse' ? 'pull' : type\n\n                // if (station.parent !== null) {\n                //     load.station = station._id\n                // } else {\n                //     type = 'pull'\n                // }\n                unload.position = null\n                unload.station = null\n                dispatchSetTaskAttributes(selectedTask._id, { load, unload, type, handoff })\n            }\n        }\n    }\n\n    const onMouseEnter = () => {\n        // Only allow hovering if there is no selected task\n        if (!hoveringInfo && selectedTask === null && !station.temp) {\n            setHovering(true)\n\n            if (!editing() && !rotating && !translating && !selectedStation && !selectedTask) {\n                dispatchHoverStationInfo(handleWidgetHover())\n                dispatchSetSelectedStation(station)\n            }\n        }\n    }\n\n    const onMouseDown = () => {\n        if (!disabled) onSetStationTask()\n    }\n\n    const onTranslating = (bool) => {\n        setTranslating(bool)\n    }\n\n    const onRotating = (bool) => {\n        setRotating(bool)\n    }\n\n    const onMouseLeave = () => {\n        setHovering(false)\n\n    }\n\n\n    return (\n        <React.Fragment key={`frag-loc-${station._id}`}>\n            <LocationSvg\n                location={station}\n                rd3tClassName={rd3tClassName}\n                color={color}\n                d3={d3}\n                isSelected={isSelected}\n                hovering={hovering}\n                rotating={rotating}\n                hoveringInfo={hoveringInfo}\n                shouldGlow={shouldGlow}\n\n                handleMouseEnter={onMouseEnter}\n                handleMouseLeave={onMouseLeave}\n                handleMouseDown={onMouseDown}\n                handleTranslating={onTranslating}\n                handleRotating={onRotating}\n\n            />\n\n            <DragEntityProto\n                isSelected={isSelected}\n                location={station}\n                rd3tClassName={rd3tClassName}\n                d3={() => d3()}\n\n                handleRotate={(rotation) => { dispatchSetStationAttributes(station._id, { rotation }) }}\n                handleTranslate={({ x, y }) => dispatchSetStationAttributes(station._id, { x, y })}\n                handleTranslateEnd={({ x, y }) => {\n                    const pos = convertD3ToReal([x, y], props.d3)\n                    dispatchSetStationAttributes(station._id, { pos_x: pos[0], pos_y: pos[1] })\n                }}\n\n                handleEnableDrag={() => {\n                    handleEnableDrag()\n\n                }}\n                handleDisableDrag={() => {\n                    handleDisableDrag()\n                }}\n\n\n            />\n            {onWidgetPageOpen()}\n        </React.Fragment>\n    )\n}\n\nexport default Station\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useParams } from 'react-router-dom'\n\n// Import Utils\nimport { deepCopy } from '../../../../methods/utils/utils'\nimport { handleWidgetHoverCoord } from '../../../../methods/utils/widget_utils'\nimport { convertD3ToReal } from '../../../../methods/utils/map_utils'\nimport { editing } from '../../../../methods/utils/locations_utils'\n\n// Import Constants\nimport { PositionTypes } from '../../../../constants/position_constants'\n\n// Import Actions\nimport { setTaskAttributes } from '../../../../redux/actions/tasks_actions'\nimport { setSelectedPosition, setPositionAttributes } from '../../../../redux/actions/positions_actions'\nimport { hoverStationInfo } from '../../../../redux/actions/widget_actions'\n\n// Import Components\nimport LocationSvg from '../location_svg/location_svg'\nimport DragEntityProto from '../drag_entity_proto'\nimport {getPreviousRoute} from \"../../../../methods/utils/processes_utils\";\nimport {\n    getLoadStationId, getRouteEnd, getRouteIndexInRoutes, getRouteStart,\n    isPositionAtLoadStation, isPositionAtUnloadStation,\n    isPositionInRoutes,\n    isStationInRoutes, isStationLoadStation\n} from \"../../../../methods/utils/route_utils\";\n\nfunction Position(props) {\n\n    const {\n        d3,\n        position,\n        rd3tClassName,\n        handleEnableDrag,\n        handleDisableDrag,\n    } = props\n\n    const {\n        _id: positionId\n    } = position\n\n    const [hovering, setHovering] = useState(false)\n    const [rotating, setRotating] = useState(false)\n    const [translating, setTranslating] = useState(false)\n\n    const dispatch = useDispatch()\n    const dispatchSetTaskAttributes = (id, load) => dispatch(setTaskAttributes(id, load))\n    const dispatchHoverStationInfo = (info) => dispatch(hoverStationInfo(info))\n    const dispatchSetSelectedPosition = (position) => dispatch(setSelectedPosition(position))\n    const dispatchSetPositionAttributes = (id, attr) => dispatch(setPositionAttributes(id, attr))\n\n    const selectedTask = useSelector(state => state.tasksReducer.selectedTask)\n    const selectedProcess = useSelector(state => state.processesReducer.selectedProcess)\n    const selectedPosition = useSelector(state => state.positionsReducer.selectedPosition)\n    const selectedStation = useSelector(state => state.stationsReducer.selectedStation)\n    const hoveringID = useSelector(state => state.widgetReducer.hoverLocationID)\n    const hoveringInfo = useSelector(state => state.widgetReducer.hoverStationInfo)\n    const stations = useSelector(state => state.stationsReducer.stations)\n    const tasks = useSelector(state => state.tasksReducer.tasks)\n    const selectedStationChildrenCopy = useSelector(state => state.positionsReducer.selectedStationChildrenCopy)\n    const fixingProcess = useSelector(state => state.processesReducer.fixingProcess)\n\n    // ======================================== //\n    //                                          //\n    //       Position Characteristics           //\n    //                                          //\n    // ======================================== //\n    const routeStart = getRouteStart(selectedTask)\n    const routeEnd = getRouteEnd(selectedTask)\n    // Used to allow translating/rotation\n    let isSelected = false\n    // Set selected if the positon is part of a stations children copy and no selected task\n    if (!!selectedStationChildrenCopy && (positionId in selectedStationChildrenCopy) && !selectedTask) isSelected = true\n    // Set selected if there is a selected postion that is this position and no selected task\n    else if (!!selectedPosition && selectedPosition._id === positionId && !selectedTask) isSelected = true\n    // Set selected if the position is a temp right click\n    else if(position.schema === 'temporary_position') isSelected = true\n\n    // Used to disable the ability to add position as a task\n    let disabled = false\n    // Disable if the selectedPosition is not this position\n    if (!!selectedPosition && selectedPosition._id !== positionId) disabled = true\n    // Disable if the position does not belong to the children copy\n    else if (!!selectedStationChildrenCopy && !(positionId in selectedStationChildrenCopy)) disabled = true\n    // Disbale if the selected stations children does not include this station\n    else if (!!selectedStation && !selectedStation.children.includes(positionId)) disabled = true\n\n    // This filters out positions when fixing a process\n    // If the process is broken, then you can only start the task at the route before break's unload location\n    else if (!!selectedTask && !!selectedProcess && !!fixingProcess) {\n        if (!position.parent) {\n            disabled = true\n        }\n        else {\n            // setting load (or both are set, in which case logic is the same, as click another position would be setting the load\n            if( (!routeStart) || (routeStart && routeEnd)) {\n                // disable all positions except those at unload station of the route before the break\n                const routeBeforeBreak = selectedProcess.routes[selectedProcess.broken - 1]\n                disabled = !isPositionAtUnloadStation(routeBeforeBreak, positionId)\n            }\n\n            // setting unload\n            else if(!routeEnd) {\n\n                // don't allow selecting positions at stations already in process\n                disabled = isPositionInRoutes(selectedProcess.routes, positionId)\n\n                // if position is at station load station after the break, it should be enabled\n                const routeAfterBreak = selectedProcess.routes[selectedProcess.broken]\n                if(isPositionAtLoadStation(routeAfterBreak, positionId)) disabled = false\n            }\n        }\n    }\n    // This filters positions when making a process\n    // If the process has routes, and you're adding a new route, you should only be able to add a route starting at the last station\n    // This eliminates process with gaps between stations\n    else if (!!selectedProcess && !!selectedTask) {\n        if (!position.parent) {\n            disabled = true\n        }\n        else {\n            // extract insertIndex for adding new routes to beginning of a process\n            const {\n                temp\n            } = selectedTask || {}\n            const {\n                insertIndex\n            } = temp || {}\n\n            // not first route\n            if(selectedProcess.routes.length > 0) {\n                const routeIndex = getRouteIndexInRoutes(selectedProcess.routes.map((currProcess) => currProcess._id), selectedTask?._id)\n\n                // setting load (or both have been set)\n                if( !routeStart || (routeStart && routeEnd)) {\n\n                    // adding to beginning of process\n                    if(insertIndex === 0) {\n                        // disable all positions already in the process\n                        disabled = isPositionInRoutes(selectedProcess.routes, positionId)\n                    }\n\n                    else if(routeIndex === 0) {\n                        if(isPositionInRoutes(selectedProcess.routes, positionId)) disabled = true\n                        if(isPositionAtLoadStation(selectedTask, positionId)) disabled = false\n                    }\n\n                    else {\n                        // must start at position at unload station of previous route\n                        const previousRoute = getPreviousRoute(selectedProcess.routes, selectedTask._id)\n                        disabled = !isPositionAtUnloadStation(previousRoute, positionId)\n                    }\n                }\n\n                // setting unload\n                else if(!routeEnd) {\n\n                    // adding new to beginning of process\n                    if(insertIndex === 0) {\n                        // disable positions already used\n                        disabled = isPositionInRoutes(selectedProcess.routes, positionId)\n\n                        // enable positions at first route since inserting at beginning\n                        const firstRoute = selectedProcess.routes[0]\n                        if(isPositionAtLoadStation(firstRoute, positionId)) disabled = false\n\n                        // disable positions at load station of current route, as unload and load shouldn't be at same route\n                        if(isPositionAtLoadStation(selectedTask, positionId)) disabled = true\n                    }\n\n                    else if(routeIndex === 0) {\n                        if(isPositionInRoutes(selectedProcess.routes, positionId)) disabled = true\n\n                        const nextRoute = selectedProcess.routes[1]\n                        if(isPositionAtLoadStation(nextRoute, positionId)) disabled = false\n                    }\n\n                    else {\n                        // disable positions already used\n                        if(isPositionInRoutes(selectedProcess.routes, positionId)) disabled = true\n\n                        // disable positions at load station of current route, as unload and load shouldn't be at same route\n                        if(isPositionAtLoadStation(selectedTask, positionId)) disabled = true\n\n                        const nextRoute = selectedProcess.routes[routeIndex + 1]\n                        if(isPositionAtLoadStation(nextRoute, positionId)) disabled = false\n                    }\n                }\n            }\n\n            // first route\n            else {\n                // setting load\n                if(!routeStart || (routeStart && routeEnd)) {\n                    // all positions are available for load position of first route\n                }\n\n                // setting unload\n                else if(!routeEnd) {\n                    // disable positions at load station of current route, as unload and load shouldn't be at same route\n                    if(isPositionAtLoadStation(selectedTask, positionId)) disabled = true\n                }\n            }\n        }\n    }\n\n    // This filters out positions that aren't apart of a station when making a task\n    // Should not be able to make a task for a random position\n    else if (!!selectedTask && !position.parent) {\n        disabled = true\n    }\n\n    // Tells the position to glow\n    const shouldGlow = selectedTask !== null &&\n        ((selectedTask.load.position == positionId && selectedTask.type == 'push') ||\n            (selectedTask.unload.position == positionId && selectedTask.type == 'pull') ||\n            (selectedTask.load.position == positionId && selectedTask.type == 'both') ||\n            (selectedTask.unload.position == positionId && selectedTask.type == 'both'))\n\n\n    // Used to highlight position if the position is part of the selected task\n    let highlight = false\n    if (!!selectedTask && (selectedTask.load.position === positionId || selectedTask.unload.position === positionId)) highlight = true\n\n\n    // Set Color\n    let color = PositionTypes[position.type].color\n    if (!isSelected && disabled) color = '#afb5c9' // Grey\n    else if (highlight) color = '#38eb87' // Green\n\n    // ======================================== //\n    //                                          //\n    //           Position Functions             //\n    //                                          //\n    // ======================================== //\n\n    useEffect(() => {\n        window.addEventListener(\"mouseup\", () => { setRotating(false); setTranslating(false) })\n        return () => {\n            window.removeEventListener(\"mouseup\", () => { setRotating(false); setTranslating(false) })\n        }\n    }, [])\n\n    // Automatically opens widget pages and sets hovering to true in the position is a temp right click\n    useEffect(() => {\n        if (position !== null && position.schema === 'temporary_position') {\n            setHovering(true)\n            dispatchHoverStationInfo(handleWidgetHover())\n            dispatchSetSelectedPosition(position)\n        }\n    }, [])\n\n\n    /**\n    * Passes the X, Y, scale and ID of position to redux which is then used in widgets\n    */\n    const handleWidgetHover = () => {\n\n        return handleWidgetHoverCoord(position, rd3tClassName, d3)\n\n    }\n\n    const onSetPositionTask = () => {\n\n        // Commented out for now\n        // If there's a selected process and the process has routes and the station is not selected, then disable it from being selected\n        // if (!!selectedProcess && selectedProcess.routes.length > 0 && !isSelected) return\n\n\n        if (selectedTask !== null) {\n            // If the load position has been defined but the unload position hasnt, assign the unload position\n            if (selectedTask.load.position !== null && selectedTask.unload.position === null) {\n                let unload = deepCopy(selectedTask.unload)\n                let type = selectedTask.type\n                unload.position = positionId\n                if (position.parent !== null) {\n                    unload.station = position.parent\n                } else {\n                    type = 'push'\n                }\n                dispatchSetTaskAttributes(selectedTask._id, { unload, type })\n            } else { // Otherwise assign the load position and clear the unload position (to define a new unload)\n                let load = deepCopy(selectedTask.load)\n                let unload = deepCopy(selectedTask.unload)\n                let type = selectedTask.type\n                load.position = positionId\n                if (position.parent !== null) {\n                    load.station = position.parent\n                } else {\n                    type = 'pull'\n                }\n                unload.position = null\n                unload.station = null\n                dispatchSetTaskAttributes(selectedTask._id, { load, unload, type })\n            }\n        }\n    }\n\n    const onMouseEnter = () => {\n        // Only hover if there is no selected task\n        if (!hoveringInfo && selectedTask === null && !position.temp) {\n            setHovering(true)\n            if (!editing() && !rotating && !translating && !selectedPosition && !selectedStation && !selectedTask) {\n                dispatchHoverStationInfo(handleWidgetHover())\n                dispatchSetSelectedPosition(position)\n\n            }\n        }\n\n    }\n\n    const renderParentLine = () => {\n\n        const parent = ((!!selectedStationChildrenCopy && positionId in selectedStationChildrenCopy) && !!selectedStation) ? selectedStation : stations[position.parent]\n        // TODO: Temp fix\n        if (!parent) return \n        return (\n            <line x1={`${position.x}`} y1={`${position.y}`}\n                x2={`${parent.x}`} y2={`${parent.y}`}\n                stroke={color} strokeWidth=\"1.4\" shapeRendering=\"geometricPrecision\" style={{ opacity: '0.3', }}\n            />\n        )\n    }\n\n    const onMouseDown = () => {\n        if (!disabled) onSetPositionTask()\n    }\n\n    const onTranslating = (bool) => {\n        if (!isSelected) {\n            setTranslating(bool)\n        }\n    }\n\n    const onRotating = (bool) => {\n        setRotating(bool)\n        if (!bool) {\n            setHovering(false)\n        }\n    }\n\n    const onMouseLeave = () => {\n        position.schema !== 'temporary_position' && setHovering(false)\n    }\n\n    return (\n        <React.Fragment key={`frag-loc-${positionId}`}>\n            {!!position.parent && renderParentLine()}\n            <LocationSvg\n                location={position}\n                rd3tClassName={rd3tClassName}\n                color={color}\n                d3={d3}\n                isSelected={isSelected}\n                hovering={hovering}\n                rotating={rotating}\n                hoveringInfo={position.schema !== 'temporary_position' ? hoveringInfo : null}\n                shouldGlow={shouldGlow}\n\n                handleMouseEnter={onMouseEnter}\n                handleMouseLeave={onMouseLeave}\n                handleMouseDown={onMouseDown}\n                handleTranslating={onTranslating}\n                handleRotating={onRotating}\n\n            />\n\n            <DragEntityProto\n                isSelected={isSelected}\n                location={position}\n                rd3tClassName={rd3tClassName}\n                d3={() => d3()}\n\n                handleRotate={(rotation) => { dispatchSetPositionAttributes(positionId, { rotation }) }}\n                handleTranslate={({ x, y }) => dispatchSetPositionAttributes(positionId, { x, y })}\n                handleTranslateEnd={({ x, y }) => {\n                    const pos = convertD3ToReal([x, y], props.d3)\n                    dispatchSetPositionAttributes(positionId, { pos_x: pos[0], pos_y: pos[1] })\n                }}\n\n                handleEnableDrag={() => {\n                    handleEnableDrag()\n                }}\n                handleDisableDrag={() => {\n                    handleDisableDrag()\n                }}\n\n\n            />\n        </React.Fragment>\n    )\n}\n\nexport default Position\n","import React, { Component, useState } from 'react'\nimport { ReactDOM, Route } from 'react-dom'\nimport { connect } from 'react-redux';\nimport moduleName from 'react'\nimport { withRouter } from \"react-router-dom\";\n\nimport * as styled from './map_view.style'\n\nimport uuid from 'uuid';\nimport * as d3 from 'd3'\n\n// Import Utils\nimport { convertD3ToReal, convertRealToD3, getRelativeOffset } from '../../methods/utils/map_utils'\nimport { isEquivalent, } from '../../methods/utils/utils.js'\n\n// Import Actions\nimport { getMap } from '../../redux/actions/map_actions'\nimport { updateStations, setStationAttributes, setSelectedStation } from '../../redux/actions/stations_actions'\nimport { updatePositions, postPosition, setPositionAttributes, setSelectedPosition } from '../../redux/actions/positions_actions'\nimport * as deviceActions from '../../redux/actions/devices_actions'\n\nimport { widgetLoaded, hoverStationInfo } from '../../redux/actions/widget_actions'\n\n// Import Components\nimport TaskPaths from '../../components/map/task_paths/task_paths.js'\nimport ProcessPaths from '../../components/map/process_paths/process_paths'\nimport MiR100 from '../../components/map/amrs/mir100/mir100.js'\nimport Zones from '../../components/map/zones/zones'\nimport RightClickMenu from '../../components/map/right_click_menu/right_click_menu'\nimport TaskStatistics from '../../components/map/task_statistics/task_statistics'\nimport Widgets from '../../components/widgets/widgets'\n\nimport Station from '../../components/map/locations/station/station'\nimport Position from '../../components/map/locations/position/position'\n\n// logging\nimport log from \"../../logger\"\nimport { setCurrentMap } from \"../../redux/actions/map_actions\";\nimport { getPreviousRoute } from \"../../methods/utils/processes_utils\";\nimport { isObject } from \"../../methods/utils/object_utils\";\n\nconst logger = log.getLogger(\"MapView\")\n\nexport class MapView extends Component {\n    constructor(props) {\n        super(props)\n\n        this.mobileMode = this.props.mobileMode\n        this.onClick = this.props.onClick\n\n        this.state = {\n            showRightClickMenu: {},\n        }\n\n        this.rd3tSvgClassName = `__SVG`     // Gives uniqe className to map components to reference for d3 events\n        this.rd3tMapClassName = `__MAP`\n        this.rd3tLocClassName = '__LOC'\n        this.rd3tStationClassName = `__STATION`\n        this.rd3tPosClassName = '__POS'\n\n        this.lastEvent = null   // Save the latest event\n\n        this.initialRender = true   // Keeps track of where the D3 SVG has been zoomed or dragged\n        this.draggable = true   // Dragging is disabled when another event occurs (ex: moving a location)\n        this.widgetDraggable = true   // Dragging is disabled when widget page is open (ex: moving a location)\n\n        this.d3 = {\n            translate: [0, 0],\n            scale: 1,\n            naturalScale: 1,\n            boundingClientHeight: 0\n        }\n\n        this.naturalImageDimensions = {\n            width: 100,\n            heigh: 100\n        }\n\n        this.mouseDown = false\n    }\n\n    componentDidMount() {\n        // Refresh the map on initial mount. This will only likely give you back the list of\n        // maps, but componentDidUpdate will catch that and set the current map to the first map\n        // in the returned list (which will be the active map)\n        // this.refreshMap()\n\n        this.checkForMapLoad()\n        window.addEventListener('mousedown', () => this.mouseDown = true, { passive: false })\n        window.addEventListener('mouseup', () => { this.mouseDown = false; this.validateNewEntity() }, { passive: false })\n        window.addEventListener(\"click\", () => {this.setState({showRightClickMenu:{}})});\n\n        // Event listener that will recalculate the map geometry when the screen size changes\n        window.addEventListener('resize', () => {\n            //this.calculateD3Geometry()\n            this.bindZoomListener()\n        }, { passive: false })\n\n    }\n\n    checkForMapLoad = () => {\n        var defaultMap = this.props.maps.find((map) => map._id === this.props.currentMapId)\n\n        if (this.props.currentMapId && this.props.currentMap && this.props.currentMap._id && defaultMap) {\n            if (this.props.currentMapId !== this.props.currentMap._id) {\n                this.props.dispatchSetCurrentMap(defaultMap)\n            }\n\n        } else if (this.props.currentMapId && defaultMap) {\n            this.props.dispatchSetCurrentMap(defaultMap)\n\n        } else if (this.props.currentMap && this.props.currentMap._id) {\n            // do nothing\n        } else {\n\n            // default to first map found\n            this.props.dispatchSetCurrentMap(this.props.maps[0])\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n\n        // If new maps are available, refresh current map\n        // NOTE: will be useless once we have a method to select map\n        // if (prevProps.maps.length != this.props.maps.length) {\n        //     this.refreshMap()\n        // }\n        this.checkForMapLoad() //test\n\n\n        // If the map has been changed, recalculate the geometry and bind the zoom\n        // listener to default to the correct translation\n        if (!isEquivalent(prevProps.currentMap, this.props.currentMap)) {\n            //this.calculateD3Geometry(this.mapContainer)\n            this.bindZoomListener()\n        }\n\n        // If the map has been changed, recalculate the geometry and bind the zoom\n        // listener to default to the correct translation\n        // if (!isEquivalent(prevProps.locations, this.props.locations)) {\n        //     this.calculateD3Geometry()\n        //     this.bindZoomListener()\n        // }\n\n\n        // if a widget page is open, disable window event listeners so events work normally within the widget page\n        const { widgetPage } = this.props.match.params    // contains url params from route.\n        if (widgetPage) {\n            document.removeEventListener(\"dragend\", this.validateNewLocation)\n        } else {\n            // reattach event listeners if necessary\n            document.addEventListener('dragend', this.validateNewLocation, { capture: false, passive: true });\n        }\n\n        // if (this.props.currentMap != null && !isEquivalent(prevProps.locations, this.props.locations)) {\n        //     let locations = this.props.locations\n        //     locations.forEach((location, ind) => {\n        //         locations[ind].x = this.d3.translate[0] + this.d3.scale*(location.pos_x/this.props.currentMap.resolution)\n        //         locations[ind].y = this.d3.translate[1] + this.d3.scale*(this.d3.boundingClientHeight - location.pos_y/this.props.currentMap.resolution)\n        //     })\n        //     this.props.onUpdateLocations(locations)\n        // }\n    }\n\n\n    /* ========== Map Functions ========== */\n\n    /***\n     * Refreshes the map and all map entities\n     */\n    refreshMap = () => {\n        if (!!this.props.maps[0]) {\n            this.props.dispatchGetMap(this.props.maps[0].guid)\n        }\n    }\n\n    openLocation = () => {\n        return <Route path={[\"/locations\"]} />\n    }\n\n\n\n    // ---------- Functionality for adding new location ---------- //\n\n    /**\n     * Handles Draging new locations onto the map\n     *\n     * @param {*} e\n     */\n    dragNewEntity = e => {\n\n        if (!this.mouseDown) return\n\n        // Handle Stations\n        if (!!this.props.selectedStation && this.props.selectedStation.temp === true) {\n            this.props.dispatchSetStationAttributes(this.props.selectedStation._id, {\n                x: e.clientX,\n                y: e.clientY\n            })\n        }\n\n        // Handle Positions\n        else if (!!this.props.selectedPosition && this.props.selectedPosition.temp === true && this.props.selectedPosition.schema !== \"temporary_position\") {\n            this.props.dispatchSetPositionAttributes(this.props.selectedPosition._id, {\n                x: e.clientX,\n                y: e.clientY\n            })\n        }\n\n        // Else it's a stations child position\n        else if (!!this.props.selectedStationChildrenCopy) {\n            const draggingChild = Object.values(this.props.selectedStationChildrenCopy).find(position => position.temp === true)\n            if (!!draggingChild && !this.props.selectedPosition) {\n                this.props.dispatchSetPositionAttributes(draggingChild._id, {\n                    x: e.clientX,\n                    y: e.clientY\n                })\n            }\n\n        }\n\n    }\n\n    /**\n     * This runs on mouse up\n     * Handles adding pos_x and pos_y to new locations\n     * pos_x and pos_y are the real x and y relations of the location to the map\n     */\n    validateNewEntity = () => {\n\n        // Handle Stations\n        if (!!this.props.selectedStation && this.props.selectedStation.temp === true) {\n            const pos = convertD3ToReal([this.props.selectedStation.x, this.props.selectedStation.y], this.d3)\n            this.props.dispatchSetStationAttributes(this.props.selectedStation._id, {\n                pos_x: pos[0],\n                pos_y: pos[1],\n                temp: false\n            })\n        }\n\n        // Handle Posiitions\n        else if (!!this.props.selectedPosition && this.props.selectedPosition.temp === true && this.props.selectedPosition.schema !== \"temporary_position\") {\n            const pos = convertD3ToReal([this.props.selectedPosition.x, this.props.selectedPosition.y], this.d3)\n            this.props.dispatchSetPositionAttributes(this.props.selectedPosition._id, {\n                pos_x: pos[0],\n                pos_y: pos[1],\n                temp: false\n            })\n        }\n\n        // Handle child positions of stations\n        else if (!!this.props.selectedStationChildrenCopy) {\n            let newChildEntity = Object.values(this.props.selectedStationChildrenCopy).find(position => position.temp == true)\n            if (!!newChildEntity) {\n\n                // Update the new entity to the edited child copy\n                // Uses copy instead of the naked state in case you dont want to keep changes\n                newChildEntity = this.props.selectedStationChildrenCopy[newChildEntity._id]\n\n                const pos = convertD3ToReal([newChildEntity.x, newChildEntity.y], this.d3)\n                this.props.dispatchSetPositionAttributes(newChildEntity._id, {\n                    pos_x: pos[0],\n                    pos_y: pos[1],\n                    temp: false\n                })\n            }\n        }\n    }\n\n    /* ========== D3 Functions ========== */\n\n    /***\n     * Binds the d3 listener that listens for zoom events. Conveniently it also listens to\n     * drag events, so this will take care of both\n     */\n    bindZoomListener = () => {\n        const { scaleExtent } = this.props\n        const { resolution } = this.props.currentMap\n        const { translate, scale } = this.d3\n\n        const svg = d3.select(`.${this.rd3tSvgClassName}`)\n        const map = d3.selectAll(`.${this.rd3tMapClassName}`)\n\n        let x, y\n        svg.call(\n            d3.behavior\n                .zoom()\n                .scaleExtent([-100, 100])\n                // .scaleExtent([scaleExtent.min, scaleExtent.max])\n                .on('zoom', () => {\n\n                    // Disables the ability to hover over location on mouse drag when a loction is selected that is not new or a right click\n                    if ((!!this.props.selectedStation || (!!this.props.selectedPosition && this.props.selectedPosition.schema !== 'temporary_position')) && (!this.props.editingStation || !this.props.editingPosition)) {\n                        this.props.dispatchHoverStationInfo(null)\n                    }\n\n                    //// Saving the last event is usefull for saving d3 state when draggable is toggled (when moving locations)\n                    this.lastEvent = d3.event\n                    let { stations, positions, devices } = this.props\n\n\n                    //// Apply the event translation to image\n                    map.attr('transform', `translate(${d3.event.translate}) scale(${d3.event.scale})`)\n                    this.d3 = {\n                        ...this.d3,\n                        translate: d3.event.translate,\n                        scale: d3.event.scale\n                    }\n\n                    //// Apply the event translation to each station\n                    Object.values(stations).forEach(station => {\n\n                        [x, y] = convertRealToD3([station.pos_x, station.pos_y], this.d3)\n                        station = {\n                            ...station,\n                            x: x,\n                            y: y,\n                        }\n                        stations[station._id] = station\n\n                    })\n\n                    // Apply the event translation to selectedStation if there is one\n                    let updatedSelectedStation = null\n                    if (!!this.props.selectedStation) {\n                        [x, y] = convertRealToD3([this.props.selectedStation.pos_x, this.props.selectedStation.pos_y], this.d3)\n                        updatedSelectedStation = this.props.selectedStation\n                        updatedSelectedStation = {\n                            ...updatedSelectedStation,\n                            x: x,\n                            y: y,\n                        }\n\n                    }\n\n                    this.props.dispatchUpdateStations(stations, updatedSelectedStation, this.d3) // Bulk Update\n\n                    //// Apply the event translation to each position\n                    Object.values(positions).forEach(position => {\n\n                        [x, y] = convertRealToD3([position.pos_x, position.pos_y], this.d3)\n                        position = {\n                            ...position,\n                            x: x,\n                            y: y,\n                        }\n\n                        positions[position._id] = position\n\n                    })\n\n                    // Apply the event translation to selectedPosition if there is one\n                    let updatedSelectedPosition = null\n                    if (!!this.props.selectedPosition) {\n                        [x, y] = convertRealToD3([this.props.selectedPosition.pos_x, this.props.selectedPosition.pos_y], this.d3)\n                        updatedSelectedPosition = this.props.selectedPosition\n                        updatedSelectedPosition = {\n                            ...updatedSelectedPosition,\n                            x: x,\n                            y: y,\n                        }\n                    }\n\n                    // Apple the event translation to Children Copy if need be\n                    let updatedChildrenPositions = null\n                    if (!!this.props.selectedStationChildrenCopy) {\n                        updatedChildrenPositions = {}\n                        Object.values(this.props.selectedStationChildrenCopy).forEach(position => {\n                            [x, y] = convertRealToD3([position.pos_x, position.pos_y], this.d3)\n\n                            position = {\n                                ...position,\n                                x: x,\n                                y: y,\n                            }\n                            updatedChildrenPositions[position._id] = position\n\n                        })\n                    }\n\n                    this.props.dispatchUpdatePositions(positions, updatedSelectedPosition, updatedChildrenPositions, this.d3) // Bulk Update\n\n                    //// Apply the event translation to each mobile device\n                    Object.values(devices).filter(device => device.device_model == 'MiR100').map(device => {\n                        [x, y] = convertRealToD3([device.position.pos_x, device.position.pos_y], this.d3)\n\n                        device.position = {\n                            ...device.position,\n                            x: x,\n                            y: y,\n                        }\n                        devices[device._id] = device\n                    })\n                    this.props.dispatchUpdateDevices(devices, this.d3) // Bulk Update\n\n                    // Once zoomed or dragged, stop initializing locations with transforms, instead now let the listener handle that. Otherwise zoom gets jumpy\n                    if (this.initialRender) { this.initialRender = false }\n                })\n                .on('zoomend', () => {\n\n                })\n                // Offset so that first pan and zoom does not jump back to [0,0] coords\n                .scale(scale)\n                .translate(translate),\n        );\n    }\n\n    /**\n     * Overwrite the listener we described above /\\ to be null\n     * (basically dont listen to drag/zoom events)\n     */\n    unbindZoomListener = () => {\n        const { rd3tSvgClassName } = this\n\n        const svg = d3.select(`.${rd3tSvgClassName}`);\n        svg.call(d3.behavior.zoom().on('zoom', null))\n    }\n\n    onDisableDrag = () => {\n        if (this.draggable) {\n            this.draggable = false\n            this.unbindZoomListener()\n        }\n    }\n\n    onEnableDrag = () => {\n        if (!this.draggable) {\n            this.draggable = true\n            this.bindZoomListener()\n        }\n    }\n\n    onWidgetDisableDrag = () => {\n        if (this.widgetDraggable) {\n            this.widgetDraggable = false\n            this.unbindZoomListener()\n        }\n    }\n\n    onWidgetEnableDrag = () => {\n        if (!this.widgetDraggable) {\n            this.widgetDraggable = true\n            this.bindZoomListener()\n        }\n    }\n\n    /**\n     * x: 0,\n     * y: 0property, instead of going\n     * through D3's scaling mechanism, which would have picked up both properties.\n     *\n     * @return {object} {translate: {x: number, y: number}, zoom: number}\n     */\n    calculateD3Geometry = () => {\n        let { locations } = this.props\n        let { resolution } = this.props.currentMap\n\n        let scale\n        if (this.props.zoom > this.props.scaleExtent.max) {\n            scale = this.props.scaleExtent.max;\n        } else if (this.props.zoom < this.props.scaleExtent.min) {\n            scale = this.props.scaleExtent.min;\n        } else {\n            scale = this.props.zoom;\n        }\n\n        let translate\n        if (!!this.mapContainer && !!this.mapImage) {\n\n            const cHeight = this.mapContainer.getBoundingClientRect().height\n            const cWidth = this.mapContainer.getBoundingClientRect().width\n\n            const iHeight = this.mapImage.getBoundingClientRect().height\n            const iWidth = this.mapImage.getBoundingClientRect().width\n\n            const iNatHeight = this.naturalImageDimensions.height\n            const iNatWidth = this.naturalImageDimensions.width\n\n\n\n            // Apply translations to map.\n            // The map is translated by half the container dims, and then back by\n            // half the image dims. This leaves it in the middle of the screen\n            translate = {\n                x: this.props.translate.x + cWidth / 2 - iWidth / 2,\n                y: this.props.translate.y + cHeight / 2 - iHeight / 2,\n            }\n\n            // Save necessary variables\n            this.d3 = {\n                translate: [translate.x, translate.y],\n                scale: scale,\n                mapResolution: resolution,\n                // imgResolution: iNatWidth / iWidth,\n                imgResolution: 1,\n                actualDims: {\n                    height: iHeight,\n                    width: iWidth\n                },\n                naturalDims: {\n                    height: iNatHeight,\n                    width: iNatWidth\n                },\n            }\n\n\n            let x, y\n            let { stations, positions, devices } = this.props\n            //// Apply the event translation to each station\n            Object.values(stations).forEach(station => {\n                [x, y] = convertRealToD3([station.pos_x, station.pos_y], this.d3)\n                station = {\n                    ...station,\n                    x: x,\n                    y: y,\n                }\n                stations[station._id] = station\n            })\n            this.props.dispatchUpdateStations(stations) // Bulk Update\n\n            //// Apply the event translation to each position\n            Object.values(positions).forEach(position => {\n                [x, y] = convertRealToD3([position.pos_x, position.pos_y], this.d3)\n                position = {\n                    ...position,\n                    x: x,\n                    y: y,\n                }\n                // TODO: Delete\n                // Object.assign(position, { x, y })\n                positions[position._id] = position\n            })\n            this.props.dispatchUpdatePositions(positions) // Bulk Update\n\n            //// Apply the event translation to each mobile device\n            Object.values(devices).filter(device => device.device_model == 'MiR100').map(device => {\n                [x, y] = convertRealToD3([device.position.pos_x, device.position.pos_y], this.d3)\n                device.position = {\n                    ...device.position,\n                    x: x,\n                    y: y,\n                }\n                devices[device._id] = device\n            })\n            this.props.dispatchUpdateDevices(devices, this.d3) // Bulk Update\n\n        } else {\n            translate = this.props.translate\n        }\n\n        // Set the initial map translation\n        const map = d3.selectAll(`.${this.rd3tMapClassName}`)\n        map.attr('transform', `translate(${translate.x},${translate.y}) scale(${scale})`)\n\n    }\n\n    // This handles the event when an onContextMenu is triggered in the svg containing the map\n    // It prevents the defaul menu for appearing and sets the state for the custom menu to appear\n    // Passes along x and y for the cusotm menu\n    // Go to right_click_menu to follow how the click logic works\n    handleRightClickMenu = (e) => {\n        e.preventDefault()\n        this.setState({ showRightClickMenu: { x: e.clientX, y: e.clientY } });\n    }\n\n\n    render() {\n        let { stations, positions, devices, selectedStation, selectedPosition, selectedStationChildrenCopy } = this.props\n        if (this.props.currentMap == null) { return (<></>) }\n        const { translate, scale } = this.d3;\n\n        return (\n            <div style={{ width: '100%', height: '100%' }} onMouseMove={this.dragNewEntity} onMouseUp={this.validateNewLocation} >\n                <styled.MapContainer ref={mc => (this.mapContainer = mc)} style={{ pointerEvents: this.widgetDraggable ? 'default' : 'none' }}>\n\n                    {/* Commented out for now */}\n                    {/* <Zones/> */}\n\n                    {/* Right menu */}\n                    {Object.keys(this.state.showRightClickMenu).length > 0 &&\n                        <RightClickMenu coords={this.state.showRightClickMenu} buttonClicked={() => { this.setState({ showRightClickMenu: {} }) }} d3={this.d3} />\n                    }\n\n                    {/* SVG element is the container for the whole view. This allows the view to be moved as one */}\n                    <svg\n                        className={this.rd3tSvgClassName}\n                        width=\"100%\"\n                        height=\"100%\"\n\n                        // onClick only registers on left click so this works as a way to hide the menu\n                        onClick={() => { this.setState({ showRightClickMenu: {} }) }}\n                        onContextMenu={(e) => { this.handleRightClickMenu(e) }}\n\n                        // These 2 mouse events are used to remove the issue when moving the mouse too fast over a location causing a widget to load, but not fast enough for the onmouselave to execute\n                        onMouseEnter={() => {\n                            if (!!this.props.widgetLoaded) {\n                                // If there is a selected location and its not the right click menu location then hide\n                                // should always show widget if its the right click menu\n                                if ((!!this.props.selectedStation || (!!this.props.selectedPosition && this.props.selectedPosition.schema !== 'temporary_position')) && (!this.props.editingStation || !this.props.editingPosition)) {\n                                    this.props.dispatchHoverStationInfo(null)\n                                    this.props.dispatchSetSelectedStation(null)\n                                    this.props.dispatchSetSelectedPosition(null)\n                                }\n                            }\n                        }}\n                        onMouseOver={() => {\n                            if (!!this.props.widgetLoaded) {\n                                // If there is a selected location and its not the right click menu location then hide\n                                // should always show widget if its the right click menu\n                                if ((!!this.props.selectedStation || (!!this.props.selectedPosition && this.props.selectedPosition.schema !== 'temporary_position'))) {\n                                    this.props.dispatchHoverStationInfo(null)\n\n                                    if (!this.props.editingStation || !this.props.editingPosition) {\n                                        this.props.dispatchSetSelectedStation(null)\n                                        this.props.dispatchSetSelectedPosition(null)\n                                    }\n                                }\n                            }\n                        }}\n\n                    > {/* Clears any unfinished drag events (ex: moving location) */}\n                        <styled.MapGroup\n                            className={this.rd3tMapClassName}\n\n                        >\n                            {/* Foreign object allows an image to be put in the SVG container */}\n                            <foreignObject width='200%' height='200%' >\n                                {!!this.props.currentMap &&\n                                    <styled.MapImage ref={mi => (this.mapImage = mi)}\n                                        tall={!!this.mapContainer && // Fixes the map sizing - cutoff issue\n                                            this.mapContainer.getBoundingClientRect().height / this.naturalImageDimensions.height\n                                            >\n                                            this.mapContainer.getBoundingClientRect().width / this.naturalImageDimensions.width}\n\n                                        src={'data:image/png;base64, ' + this.props.currentMap.map}\n                                        onLoad={() => {\n\n                                            this.naturalImageDimensions = {\n                                                height: this.mapImage.naturalHeight,\n                                                width: this.mapImage.naturalWidth\n                                            }\n                                            // Geometry changes once the image finishes loading, so the geometry needs to be reclaculated\n                                            // and the zoom listener needs to be re-bound to the new translations\n                                            this.calculateD3Geometry()\n                                            this.setState({\n                                                resolution: this.props.currentMap.resolution\n                                            }, () => this.bindZoomListener())\n                                        }}\n                                    >\n                                    </styled.MapImage>\n                                }\n                            </foreignObject>\n                        </styled.MapGroup>\n\n                        {!!this.props.selectedTask &&\n                            <TaskPaths d3={this.d3} />\n                        }\n\n                        {!!this.props.selectedProcess &&\n                            <ProcessPaths d3={this.d3} />\n                        }\n\n                        <defs>\n                            {/* a transparent glow that takes on the colour of the object it's applied to */}\n                            <filter id=\"glow\">\n                                <feGaussianBlur stdDeviation=\"1\" result=\"coloredBlur\" />\n                                <feMerge>\n                                    <feMergeNode in=\"coloredBlur\" />\n                                    <feMergeNode in=\"SourceGraphic\" />\n                                </feMerge>\n                            </filter>\n                        </defs>\n\n                        {!!this.state.resolution && !!this.mapImage &&\n                            <>\n                                <>{\n                                    //// Render Locations\n                                    Object.values(stations)\n                                        .filter(station => (station.map_id === this.props.currentMap._id))\n                                        .map((station, ind) =>\n\n                                            <Station\n                                                key={`loc-${ind}`}\n                                                // If there is a selected station, then render the selected station vs station in redux\n                                                // Selected station could contain local edits that are not on the backend (naked redux) yet\n                                                station={(!!selectedStation && station._id === selectedStation._id) ? selectedStation : station}\n                                                // station={station}\n                                                rd3tClassName={`${this.rd3tStationClassName}_${ind}`}\n                                                d3={this.d3}\n                                                handleEnableDrag={this.onEnableDrag}\n                                                handleDisableDrag={this.onDisableDrag}\n                                            />\n                                        )\n                                }</>\n\n                                <>{\n                                    //// Render children positions if appropriate\n                                    Object.values(positions)\n                                        .filter(position => (position.map_id === this.props.currentMap._id))\n                                        .map((position, ind) =>\n                                            <Position\n                                                key={`pos-${ind}`}\n                                                position={\n                                                    (!!selectedPosition && position._id === selectedPosition._id) ?\n                                                        // If there is a selected station, then render the selected station vs station in redux\n                                                        // Selected station could contain local edits that are not on the backend (naked redux) yet\n                                                        selectedPosition\n                                                        :\n                                                        // If the positions parent is currently being edited\n                                                        (!!selectedStationChildrenCopy && position._id in selectedStationChildrenCopy) ?\n                                                            selectedStationChildrenCopy[position._id]\n                                                            :\n                                                            position\n                                                }\n                                                rd3tClassName={`${this.rd3tPosClassName}_${ind}`}\n                                                d3={this.d3}\n                                                handleEnableDrag={this.onEnableDrag}\n                                                handleDisableDrag={this.onDisableDrag}\n                                            />\n\n                                        )\n                                }</>\n\n                                <>{\n                                    //// Render mobile devices\n                                    devices === undefined ?\n                                        <></>\n                                        :\n                                        Object.values(devices).filter(device => device.device_model == 'MiR100').map((device, ind) =>\n                                            <MiR100 key={device._id}\n                                                device={device}\n                                                d3={this.d3}\n                                            />\n                                        )\n                                }</>\n                            </>\n                        }\n                    </svg>\n\n                    {(!!this.props.selectedProcess || !!this.props.selectedTask) &&\n                        <TaskStatistics d3={this.d3} />\n                    }\n\n                    {/* Widgets are here when not in mobile mode. If mobile mode, then they are in App.js.\n                    The reasoning is that the map unmounts when in a widget while in mobile mode (for performance reasons). */}\n                    {this.props.hoveringInfo !== null && !this.mobileMode &&\n                        <Widgets />\n                    }\n\n\n                </styled.MapContainer>\n\n            </div >\n        )\n    }\n}\n\nMapView.defaultProps = {\n    scaleExtent: { min: 0, max: 6 },\n    zoomable: true,\n    zoom: 1,\n    translate: { x: 0, y: 0 },\n\n}\n\nconst mapStateToProps = function (state) {\n    return {\n        maps: state.mapReducer.maps,\n        currentMapId: state.localReducer.localSettings.currentMapId,\n        currentMap: state.mapReducer.currentMap,\n\n        devices: state.devicesReducer.devices,\n        positions: state.positionsReducer.positions,\n        stations: state.stationsReducer.stations,\n        tasks: state.tasksReducer.tasks,\n\n        selectedStation: state.stationsReducer.selectedStation,\n        selectedStationChildrenCopy: state.positionsReducer.selectedStationChildrenCopy,\n        selectedPosition: state.positionsReducer.selectedPosition,\n        editingStation: state.stationsReducer.editingStation,\n        editingPosition: state.positionsReducer.editingPosition,\n\n        selectedTask: state.tasksReducer.selectedTask,\n        selectedProcess: state.processesReducer.selectedProcess,\n        fixingProcess: state.processesReducer.fixingProcess,\n\n        hoveringInfo: state.widgetReducer.hoverStationInfo,\n        widgetLoaded: state.widgetReducer.widgetLoaded,\n\n    };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        dispatchGetMap: (map_id) => dispatch(getMap(map_id)),\n        dispatchSetCurrentMap: (map) => dispatch(setCurrentMap(map)),\n\n        dispatchUpdateStations: (stations, selectedStation, d3) => dispatch(updateStations(stations, selectedStation, d3)),\n        dispatchUpdatePositions: (positions, selectedPosition, childrenPositions, d3) => dispatch(updatePositions(positions, selectedPosition, childrenPositions, d3)),\n        dispatchUpdateDevices: (devices, d3) => dispatch(deviceActions.updateDevices(devices, d3)),\n\n        dispatchPostPosition: (position) => dispatch(postPosition(position)),\n        dispatchSetStationAttributes: (id, attr) => dispatch(setStationAttributes(id, attr)),\n        dispatchSetPositionAttributes: (id, attr) => dispatch(setPositionAttributes(id, attr)),\n        dispatchSetSelectedStation: (station) => dispatch(setSelectedStation(station)),\n        dispatchSetSelectedPosition: (position) => dispatch(setSelectedPosition(position)),\n\n        dispatchHoverStationInfo: (info) => dispatch(hoverStationInfo(info)),\n        dispatchWidgetLoaded: (bool) => dispatch(widgetLoaded(bool)),\n\n\n    };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(MapView))\n","import React, { useState, useMemo, useRef, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useParams, useHistory } from 'react-router-dom'\n\n// Import Components\nimport HILModals from '../../components/hil_modals/hil_modals'\nimport HILSuccess from '../../components/hil_modals/hil_modals_content/hil_success'\n\nconst HILModal = () => {\n\n    const params = useParams()\n    const dispatch = useDispatch()\n\n    // Adds HIL timer to taskQueueReducer so it can be used in other areas such as status_header\n    const onSetHilTimers = (timers) => dispatch({ type: 'HIL_TIMERS', payload: timers })\n    const onSetActiveHilDashboards = (active) => dispatch({ type: 'ACTIVE_HIL_DASHBOARDS', payload: active })\n\n    let status = useSelector(state => { return state.statusReducer.status })\n    const dashboards = useSelector(state => { return state.dashboardsReducer.dashboards })\n    const taskQueue = useSelector(state => state.taskQueueReducer.taskQueue)\n    const taskQueueItemClicked = useSelector(state => state.taskQueueReducer.taskQueueItemClicked)\n    const stations = useSelector(state => state.stationsReducer.stations)\n    const hilTimers = useSelector(state => state.taskQueueReducer.hilTimers)\n    const tasks = useSelector(state => state.tasksReducer.tasks)\n    const hilResponse = useSelector(state => state.taskQueueReducer.hilResponse)\n    const activeHilDashboards = useSelector(state => state.taskQueueReducer.activeHilDashboards)\n    const devices = useSelector(state => state.devicesReducer.devices)\n    let selectedTask = useSelector(state => state.tasksReducer.selectedTask)\n    const localHumanTask = useSelector(state => state.taskQueueReducer.localHumanTask)\n    const [statusTimerIntervals, setStatusTimerIntervals] = useState({})\n\n    const dashboardID = params.dashboardID\n    const stationID = params.stationID\n\n    const deviceDashboard = !!devices ? !!devices[stationID] : false\n    /**\n     * Handles any task that should be displaying a HIL\n     * useMemo for performance reasons, should only rerender if taskQueue changes and dashbaordID params\n     */\n    const handleHilsInTaskQueue = useMemo(() => {\n\n        // Handles if a task queue item was clicked and displays that item\n        if (!!taskQueueItemClicked && taskQueue[taskQueueItemClicked] && !!taskQueue[taskQueueItemClicked].hil_station_id) {\n\n            const item = taskQueue[taskQueueItemClicked]\n            const hilType = tasks[item.task_id].type\n\n            return <HILModals hilMessage={item.hil_message} hilType={hilType} taskQuantity={item.quantity} taskQueueID={taskQueueItemClicked} item={item} />\n        }\n\n        else {\n            if (!!taskQueueItemClicked && !!taskQueue[taskQueueItemClicked]) {\n\n                const item = taskQueue[taskQueueItemClicked]\n                const type = item.device_type\n                const hilType = tasks[item.task_id].type\n\n                // Sets the HIL Message, the reason why it would undefined is that its a human load task\n                // Since a human load task needs to immediatly show, its immediatly put into the task Q vs telling the backend to put it into the task Q\n                // since it doesnt come from the backend, there's no hil message in the task Q Item\n                let hilMessage = item.hil_message\n                if (!hilMessage) {\n                    hilMessage = tasks[item.task_id].load.instructions\n                }\n\n                if (type === 'human') {\n\n                    return <HILModals hilMessage={hilMessage} hilType={hilType} taskQuantity={item.quantity} taskQueueID={taskQueueItemClicked} item={item} />\n                }\n            }\n        }\n\n        // Used to hide the HIL if success was clicked. (See HIL_Modals)\n        if (hilResponse === 'load') {\n            return <HILSuccess />\n        }\n        if (hilResponse === 'unload') return \n\n        return Object.values(taskQueue).map((item) => {\n\n            const id = item._id\n\n            // If the task queue item has a HIL and it's corresponding dashboard id is not in the activeHILDasbaords list then display HIL.\n            // Dashboards can only have 1 HIL at a time, if the task queue has 2 HILS for the same dashboards, then only read the\n            // most recent in the list\n            //\n            // Do not display HIL if the tasks device type is human, if it's a human, and unload button will appear on the dashboard\n            if (!!item.hil_station_id && !!tasks[item.task_id] && item.device_type !== 'human') {\n\n                // Loops through all ascociated dashboards at that location\n                stations[item.hil_station_id].dashboards.forEach((dashboard) => {\n\n                    // if the list of active hil dashboards does not include the dashboard then add\n                    if (!Object.keys(activeHilDashboards).includes(dashboard)) {\n                        // activeHilDashboards.push(dashboard)\n                        onSetActiveHilDashboards({\n                            ...activeHilDashboards,\n                            [dashboard]: id,\n                        })\n                    }\n\n                })\n\n                // If active hils matches the dashboard selected (found in params) then display hil\n                // if (dashboardID === item.hil_station_id && !dashboards[dashboardID].unsubcribedHILS.includes(item.hil.taskID)) {\n                if (Object.keys(activeHilDashboards).includes(dashboardID)) {\n                    const hilType = tasks[item.task_id].type\n\n                    return <HILModals hilMessage={item.hil_message} hilType={hilType} taskQuantity={item.quantity} taskQueueID={id} item={item} key={id} />\n                }\n\n                // If a device dashboard, then show all associated HILs\n                else if (deviceDashboard) {\n                    const hilType = tasks[item.task_id].type\n                    return <HILModals hilMessage={item.hil_message} hilType={hilType} taskQuantity={item.quantity} taskQueueID={id} item={item} />\n                }\n                else {\n                    return null\n                }\n            }\n\n            // Else if the task q item has a dashboardID and the dashboardID matches current dashboard, then show that dashboard\n            // The reason this happens is that it's a human task and the person hit a dashboard button (see dashboard_screen).\n            // The HIL modal needs to immediatly show because the backend will be too slow to respond to show that dashboard after button click\n            else if (!!item.dashboard && item.dashboard === dashboardID && localHumanTask === item._id) {\n\n                let hilMessage = item.hil_message\n                if (!hilMessage) {\n                    hilMessage = tasks[item.task_id].load.instructions\n                }\n                if (item.hil_response !== false) {\n                    return <HILModals hilMessage={hilMessage} hilType={'push'} taskQuantity={item.quantity} taskQueueID={id} item={item} />\n                }\n\n\n            }\n\n        })\n\n    }, [taskQueue, dashboardID, taskQueueItemClicked, hilResponse, localHumanTask])\n\n\n    /**\n     * Handles HIL timers and adds them to Redux\n     *\n     * Logic in this function is a little confusing at first.\n     *\n     * What this does is map through each item in the task Q and give that Item an interval based on the times sent from the back end\n     * But, if this item already has an interval, don't add a new one to it.\n     * If the interval is running, but the Task Q item does not have a station ID, then a HIL should not be displaying so remove the current interval\n     *\n     * After the first maping loop there's an if statement to make sure that the interval's task Q item is still in the task Q, if it's not, then remove the interval\n     */\n    const handleHILTimers = useMemo(() => {\n\n        Object.keys(taskQueue).map((id, ind) => {\n\n            const item = taskQueue[id]\n\n            // If the item in task queue has an ascociated station_id, a hil must be displaying\n            if (!!item.hil_station_id) {\n\n                // If the state of timers running includes the task queue id, that means the timer is still running\n                if (!!statusTimerIntervals[id]) {\n                }\n\n                // If the state doesnt include the task queue id, then the timer hasn't started yet on the front end\n                else if (!statusTimerIntervals[id]) {\n\n                    // Add the timer to the state, so multiple timers are not started\n                    setStatusTimerIntervals({\n                        ...statusTimerIntervals,\n                        [id]: true,\n                    })\n\n                    let startTime = item.hil_start_time\n                    let timer = item.hil_timeout\n\n                    //Get the time since Epoch\n                    const frontEndTime = Date.now() / 1000\n\n                    //Find the difference between the time of the front end vs the backend and set timer\n                    const biasedTime = frontEndTime - startTime\n                    let biasedTimer = timer - biasedTime\n\n                    //Timer interval in seconds\n                    const timerInterval = 1\n\n                    //Set the timer in state\n                    setStatusTimerIntervals({\n                        ...statusTimerIntervals,\n                        [id]: setInterval(() => {\n\n                            // Can change the timer interval\n                            biasedTimer = biasedTimer - timerInterval\n\n                            // Add the timer to redux\n                            onSetHilTimers({\n                                ...hilTimers,\n                                [item._id]: biasedTimer.toFixed(0),\n                            })\n                            //If the timer goes to Zero then stop the timer\n                            if (biasedTimer <= 0) {\n                                onSetHilTimers({\n                                    ...hilTimers,\n                                    [item._id]: 0,\n                                })\n\n                                // Update redux\n                                delete hilTimers[item._id]\n                                onSetHilTimers({\n                                    ...hilTimers,\n                                })\n\n                                //  Delete the timer in the state\n                                if (!!statusTimerIntervals[id]) {\n                                    clearInterval(statusTimerIntervals[id])\n                                    delete statusTimerIntervals[id]\n                                    setStatusTimerIntervals({\n                                        ...statusTimerIntervals,\n                                    })\n                                }\n\n                            }\n\n                        }, timerInterval * 1000)\n                    })\n                }\n\n            }\n\n            // If the task queue item does not have a station id but has a timer running, that means the timer should stop\n            else if (!item.hil_station_id && !!statusTimerIntervals[id]) {\n                if (!!statusTimerIntervals[id]) {\n\n                    // Deletes the dashboard id from active list for the hil that has been responded too\n                    onSetActiveHilDashboards(delete (activeHilDashboards[item.hil_station_id]))\n\n                    // Clear the interval which is stored in state and delete that ID from state\n                    clearInterval(statusTimerIntervals[id])\n                    delete statusTimerIntervals[id]\n                    setStatusTimerIntervals({\n                        ...statusTimerIntervals,\n                    })\n\n                    // Update redux\n                    delete hilTimers[item._id]\n                    onSetHilTimers({\n                        ...hilTimers,\n                    })\n                }\n\n            }\n\n        })\n\n        // If the length of intervals is greater then 0 check to make sure the ascoiated task q item is still in task q\n        if (Object.keys(statusTimerIntervals).length > 0) {\n\n            Object.keys(statusTimerIntervals).map((id, ind) => {\n\n                // If Item is not in task q, end the interval\n                if (!taskQueue[id]) {\n                    clearInterval(statusTimerIntervals[id])\n                    delete statusTimerIntervals[id]\n                    setStatusTimerIntervals({\n                        ...statusTimerIntervals,\n                    })\n                }\n            })\n        }\n\n    }, [taskQueue, hilTimers])\n\n    const handleActiveHilDashboardRemoved = () => {\n\n        let hilRemoved = true\n\n        Object.keys(taskQueue).map((id, ind) => {\n            const item = taskQueue[id]\n\n        })\n\n    }\n\n    return (\n        <>\n            {/* <HILModals status={status.hil}/> */}\n            {handleHilsInTaskQueue}\n            {handleHILTimers}\n        </>\n    )\n}\n\nexport default HILModal\n","import styled from 'styled-components'\n\nexport const Container = styled.div`\n    height: 40%;\n    width: 35%;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%,-60%);\n    border-radius: 10px;\n`\n\nexport const LogoContainer = styled.div`\n    width: 100%;\n    height: auto;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    position: relative;\n    margin-bottom: 5%;\n    margin-top: 5%;\n`\n\nexport const LogoIcon = styled.i`\n    font-size: 10rem;\n    margin-top: -.5rem;\n    margin-right: .1rem;\n    color: ${props => props.theme.fg.secondary};\n`\n\nexport const LogoSubtitle = styled.h2`\n    color: ${props => props.theme.bg.senary};\n    font-family: 'Montserrat';\n    font-size: 2rem;\n    font-weight: 600;\n    margin: 0;\n    margin-bottom: -10rem;\n    padding: 0;\n`;\n\nexport const LogoWelcome = styled.h1`\n    color: ${props => props.theme.bg.senary};\n    font-family: 'Montserrat';\n    font-size: 2rem;\n    font-weight: 600;\n    margin: 0;\n    padding: 0;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    height: auto;\n    display: flex;\n    position: relative;\n    margin-bottom: 2%;\n    margin-top: 5%;\n`;\n\nexport const SignInUpContainer = styled.div`\n    \n`\n\nexport const CheckBoxWrapper = styled.div`\n    position: relative;\n    display: flex;\n    justify-content: center;\n`;\n\nexport const Button = styled.button`\n    cursor: 'pointer';\n    width: 10rem;\n    border-radius: 0.5rem;\n    display: flex;\n    background-color: #FF4B4B;\n    color: white;\n    border-color: white;\n    align-self: center;\n    justify-content: center;\n    padding: 0.5rem;\n    margin: 0.5rem;\n`","import styled from 'styled-components'\n\nexport const Container = styled.div`\ndisplay:flex;\nflex-direction:column;\ngrid-template-columns: 1fr;\ngrid-gap: 0.1rem;\nalign-content: center;\n`\n\n\nexport const Input = styled.input`\n    width: 40rem;\n    border-radius: 15px;\n    font-size: 1.3rem;\n    font-weight: 400;\n    padding: 1rem;\n    margin: 1rem;\n    align-self: center;\n`\n\nexport const Button = styled.button`\n    cursor: 'pointer';\n    width: 10rem;\n    border-radius: 0.5rem;\n    background-color: #FF4B4B;\n    color: white;\n    display: flex;\n    align-self: center;\n    justify-content: center;\n    padding: 0.5rem;\n    margin: 0.5rem;\n`","import React, { useState, useEffect } from 'react'\n\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { CognitoUserPool, AuthenticationDetails, CognitoUser } from 'amazon-cognito-identity-js'\n\nimport { Formik, Form } from 'formik'\n\n// Import Utils\nimport { signInSchema, signUpSchema } from '../../methods/utils/form_schemas'\n\n// Import Components\nimport TextField from '../basic/form/text_field/text_field'\nimport Textbox from '../basic/textbox/textbox'\n\n// Import actions\nimport { postRefreshToken } from '../../redux/actions/authentication_actions'\n\nimport * as styled from './sign_in_up_page.style'\n\n// Import actions\nimport { postLocalSettings } from '../../redux/actions/local_actions'\nimport { getLocalSettings } from '../../redux/actions/local_actions'\n\n\n// Import API DELETE THIS ONCE FINISHED\n// import { getRefreshToken } from '../../api/authentication_api'\n\n/**\n * This page handles both sign in and sign up for RMStudio\n * @param {signIn} props\n */\nconst SignInUpPage = (props) => {\n\n    // signIn prop is passed from authentication container to tell this page to show sign in or sign up components\n    const {\n        signIn\n    } = props\n\n    const dispatch = useDispatch()\n    const dispatchPostLocalSettings = (settings) => dispatch(postLocalSettings(settings))\n    const localReducer = useSelector(state => state.localReducer.localSettings)\n\n    // refresh token\n    // const onRefreshToken = (token, expiration) => dispatch(postRefreshToken(token, expiration))\n    // const refreshToken = useSelector(state => state.authenticationReducer.refreshToken)\n\n    // const onGetLocalSettings = () => dispatch(getLocalSettings())\n\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n\n    function handleSignInChange(event) {\n        // Here, we invoke the callback with the new value\n        props.onChange(event);\n    }\n\n    const handleSubmit = (values) => {\n\n        const {\n            email,\n            password,\n            confirmPassword\n        } = values\n\n        console.log(email, password)\n\n        // User pool data for AWS Cognito\n        const poolData = {\n            UserPoolId: 'us-east-2_YFnCIb6qJ',\n            ClientId: '5bkenhii8f4mqv36k0trq6hgc7',\n        }\n\n        const userPool = new CognitoUserPool(poolData)\n\n        // If the request is a sign in then run these functions\n        if (signIn) {\n\n            // This is setting up the header for the sign in request\n            const authenticationData = {\n                Username: email,\n                Password: password,\n            };\n\n            const authenticationDetails = new AuthenticationDetails(authenticationData)\n\n            const userData = {\n                Username: email,\n                Pool: userPool,\n            }\n\n            const cognitoUser = new CognitoUser(userData);\n\n            let serverIP = '18.223.113.55'\n\n            cognitoUser.authenticateUser(authenticationDetails, {\n\n                onSuccess: function (result) {\n                    dispatchPostLocalSettings({\n                        ...localReducer,\n                        authenticated: result.accessToken.payload.username,\n                        non_local_api_ip: serverIP,\n                        non_local_api: true,\n                        refreshToken: result.getRefreshToken().getToken()\n                    })\n\n                    // onRefreshToken(result.getRefreshToken().getToken())\n\n                    console.log('QQQQ Success', typeof(result), result.accessToken.payload, localReducer)\n\n                },\n\n                onFailure: function (err) {\n                    console.log('QQQQ Error', err)\n                    alert(err.message)\n                },\n\n            });\n        }else{\n            if(password === confirmPassword){\n                userPool.signUp(email, password, [], null, (err, data) => {\n                    if (err){\n                        console.log('QQQQ Error', err)\n                        alert(err.message)\n                    }else {\n                        console.log('QQQQ Success', data)\n                        alert('You have sucessfully signed up. Please check your email for a verification link.')\n                        handleSignInChange(true)\n                    }\n                });\n            }else{\n                alert('Passwords must match!')\n            }\n\n            \n        }\n    }\n\n\n    return (\n        <Formik\n            initialValues={{\n                email: email,\n                password: password,\n                confirmPassword: confirmPassword,\n            }}\n            initialTouched={{\n                email: true,\n                password: true,\n                confirmPassword: true,\n            }}\n\n            validateOnBlur={false}\n            validateOnChange={false}\n\n            // Chooses what schema to use based on whether it's a sign in or sign up\n            // TODO: The schemas are not 100% working as of 9/14/2020. Need to figure out regex for passwords\n            validationSchema={signIn ? signInSchema : signUpSchema}\n\n            onSubmit={async (values, { setSubmitting }) => {\n\n                console.log('QQQQ Submiting', values)\n                \n                setSubmitting(true)\n\n                await handleSubmit(values)\n\n                setSubmitting(false)\n\n            }}\n\n        >\n            {(formikProps) => {\n\n                return (\n                    <Form>\n                        <TextField\n                            name={\"email\"}\n                            placeholder='Enter Email'\n                            type='text'\n                            InputComponent={Textbox}\n                            style={{\n                                margin: '1rem',\n                                height:'3rem'\n                            }}\n                        />\n\n                        <TextField\n                            name={\"password\"}\n                            placeholder='Enter Password'\n                            type='password'\n                            InputComponent={Textbox}\n                            style={{\n                                margin: '1rem',\n                                height:'3rem'\n                            }}\n                        />\n\n                        {/* If sign in hasn't been selected show a confirm password for sign up */}\n                        {!signIn &&\n                            <TextField\n                                name={\"confirmPassword\"}\n                                placeholder='Enter Password'\n                                type='password'\n                                InputComponent={Textbox}\n                                style={{\n                                    margin: '1rem',\n                                    height:'3rem'\n                                }}\n                            />\n\n\n                        }\n\n                        <styled.Container>\n                            <styled.Button type=\"submit\">{signIn ? 'Sign In' : 'Sign Up'}</styled.Button>\n                        </styled.Container>\n                    </Form>\n                )\n            }}\n\n        </Formik>\n    )\n}\n\nexport default SignInUpPage\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { CognitoUser, CognitoUserPool, CognitoRefreshToken, CognitoUserSession } from 'amazon-cognito-identity-js'\n\nimport * as styled from './authentication.style'\n\n// Import components\nimport SignInUpPage from '../../components/sign_in_up_page/sign_in_up_page'\n\nimport { postCognitoUserSession } from '../../redux/actions/authentication_actions'\n\n// import 'cross-fetch/polyfill';\nimport * as AmazonCognitoIdentity from 'amazon-cognito-identity-js';\n\nimport * as AWS from 'aws-sdk/global';\n\n// Import actions\nimport { postLocalSettings } from '../../redux/actions/local_actions'\nimport { getLocalSettings } from '../../redux/actions/local_actions'\n\n/**\n * After the APIs have been loaded in the api_container this container is loaded\n * It checks to see if the user has already signed in based on whether or not a refresh token exists in cookies\n * If there is a token, it uses that to get a new JWT and uses that to make sure the session is valid, no reason to sign in if there's a valid session. \n * If the refresh token is expired, you have to sign in again\n * If there is no token, the user either has to sign in or sign up \n * Authenticated props is used for telling APP.js the user is authenticated\n * \n * TODO: Should show loading when there is a refresh token and its being used to get new JWT credntials\n * TODO: Styling updates\n * TODO: Forgot password\n * TODO: Add HTTPS connection to server which allows for the use of a secure cookie. Increases security a lot \n * @param {authenticated} props \n */\nconst Authentication = (props) => {\n\n    const {\n        authenticated\n    } = props\n\n    const dispatch = useDispatch()\n    const onCognitoUserSession = (JWT) => dispatch(postCognitoUserSession(JWT))\n\n    const refreshToken = useSelector(state => state.authenticationReducer.refreshToken)\n    const cognitoUserSession = useSelector(state => state.authenticationReducer.cognitoUserSession)\n\n    const [signIn, setSignIn] = useState(true)\n\n    const dispatchPostLocalSettings = (settings) => dispatch(postLocalSettings(settings))\n    const localReducer = useSelector(state => state.localReducer.localSettings)\n\n    const handleSignInChange = (value) => {\n        setSignIn(value)\n    }\n\n    const handleInitialLoad = () => {\n\n        var poolData = {\n            UserPoolId: 'us-east-2_YFnCIb6qJ',\n            ClientId: '5bkenhii8f4mqv36k0trq6hgc7',\n        };\n\n        var userPool = new AmazonCognitoIdentity.CognitoUserPool(poolData);\n        var cognitoUser = userPool.getCurrentUser();\n        \n        if (cognitoUser != null) {\n            cognitoUser.getSession(function(err, session) {\n                if (err) {\n                    alert(err.message || JSON.stringify(err));\n                    return;\n                }\n                console.log('session validity: ' + session.isValid());\n\n                if(session.isValid()){\n                    dispatchPostLocalSettings({\n                        ...localReducer,\n                        authenticated: true,\n                        non_local_api_ip: '18.223.113.55',\n                        non_local_api: true,\n                    })\n                }\n            });\n        }\n\n        return (\n            <styled.Container>\n\n                <styled.LogoContainer>\n                    <styled.LogoIcon className='icon-rmLogo' />\n                    <styled.LogoSubtitle> Studio</styled.LogoSubtitle>\n                </styled.LogoContainer>\n\n                <styled.LogoWelcome> Wecome Back </styled.LogoWelcome>\n\n                <styled.CheckBoxWrapper>\n                    <styled.Button onClick={() => setSignIn(true)} style={{\n                        backgroundColor: signIn ? '#FF4B4B' : 'black'\n                    }}>Sign In</styled.Button>\n\n                    <styled.Button onClick={() => setSignIn(false)} style={{\n                        backgroundColor: !signIn ? '#FF4B4B' : 'black'\n                    }}>Sign Up</styled.Button>\n                </styled.CheckBoxWrapper>\n\n                <styled.SignInUpContainer>\n\n                    <SignInUpPage \n                        signIn={signIn}\n                        onChange={handleSignInChange} />\n\n                </styled.SignInUpContainer>\n            </styled.Container>\n        )\n    }\n\n    return (\n        handleInitialLoad()\n    )\n\n}\n\nexport default Authentication","import styled from 'styled-components'\nimport * as stylesh from '../../containers/status_header/status_header.style'\nimport {LightenDarkenColor} from \"../../methods/utils/color_utils\";\n\nexport const Container = styled.div`\n    background: ${props => props.theme.bg.quaternary};\n    display: flex;\n    flex: 1;\n    flex-direction: column;\n    max-height: 100%;\n    \n    // padding-top: 4rem;\n`\n\nexport const Icon = styled.i`\n\tpadding: 0;\n\tmargin: 0;\n\tfont-size: 1.5rem;\n\tposition: absolute;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translate(-50%,-50%);\n`\n\n\nexport const Header = styled.div`\n\tbackground: ${props => props.theme.bg.septenary};\n\twidth: 100%;\n\tpadding: 1rem;\n\tborder-bottom: 1px solid black;\n\talign-items: center;\n\tdisplay: flex;\n`\n\nexport const Title = styled.span`\n    position: absolute;\n    left: 50%;\n    transform: translateX(-50%);\n    \n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz1};\n    font-weight: 500;\n    color: ${props => props.theme.schema[props.schema].solid};\n`\n\nexport const ListScrollContainer = styled.ul`\n    padding: 0;\n    margin: 0;\n    overflow-y: scroll;\n    flex: 1;\n    padding: 1rem;\n    \n`\nexport const ListItem = styled.div`\n    display: flex;\n    align-items: center;\n    width: auto;\n    height: 4rem;\n    background: transparent;\n    margin-bottom: 1rem;\n    \n`\n\nexport const ListItemRect = styled.div`\n    height: 100%;\n    width: 100%;\n    align-items: center;\n    display: flex;\n\n    border-radius: 0.5rem;\n    text-align: center;\n\n    cursor: pointer;\n    user-select: none;\n\n    border: 0.1rem solid white;\n    box-sizing: border-box;\n\n    &:hover {\n        background: ${props => props.theme.bg.octonary};\n    }\n\n`\n\nexport const ListItemTitle = styled.div`\n    height: 2rem;\n    line-height: 2rem;\n    box-sizing: border-box;\n    width: 100%;\n    margin-top: -0.1rem;\n    padding-left: 1rem;\n    padding-right: 1rem;\n\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz4};\n    font-weight: 500;\n    color: ${props => props.theme.bg.octonary};\n    \n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n\n    &:hover {\n        background: ${props => props.theme.schema[props.schema].gradient};\n        -webkit-text-fill-color: transparent;\n        -webkit-background-clip: text;\n        display:block;\n    }\n`\n\nexport const PlayButton = styled(stylesh.PlayButton)`\n    position: absolute;\n    right: 0;\n`\n\nexport const PlayButtonIcon = styled(stylesh.PlayButtonIcon)`\n`\n\nexport const StatusContainer = styled.div`\n    position: absolute;\n    left: 50%;\n    transform: translateX(-50%);\n\n    border-radius: 0rem 0rem 1rem 1rem;\n\n    height: 2.5rem;\n    max-width: 35rem;\n    min-width: 10rem;\n    \n    padding: 0rem 2rem;\n    padding-top: .5rem;\n\n\tbackground: ${props => props.theme.bg.septenary};\n    top: 5rem;\n\n    align-content: center;\n    align-items: center;\n    justify-content: center;\n    text-align: center;\n`","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from \"prop-types\";\n\nimport { locationsSortedAlphabetically } from '../../../methods/utils/locations_utils'\n\nimport * as styled from '../list_view.style'\n\n\nconst LocationList = (props) => {\n\n    const {\n        onMouseEnter,\n        onMouseLeave,\n        onLocationClick\n\n    } = props\n\n    LocationList.propTypes = {\n        onMouseEnter: PropTypes.func,\n        onMouseLeave: PropTypes.func,\n        onLocationClick: PropTypes.func,\n        onClick: PropTypes.func,\n        name: PropTypes.string,\n\n    }\n\n    LocationList.defaultProps = {\n        onMouseEnter: () => { },\n        onLocationClick: () => { },\n        onMouseLeave: () => { },\n        onClick: () => { },\n        name: \"\"\n    }\n\n    const locations = useSelector(state => state.stationsReducer.stations)\n    const devices = useSelector(state => state.devicesReducer.devices)\n\n    const locationsArr = locationsSortedAlphabetically(Object.values(locations))\n    const devicesArr = Object.values(devices)\n\n    const dashboardsArr = [...locationsArr, ...devicesArr]\n\n    return (\n        <styled.ListScrollContainer>\n            {dashboardsArr.length > 0 ?\n                dashboardsArr.map((item, index, arr) => {\n                    const {\n                        name,\n                        device_name,\n                    } = item\n\n                    return (\n                        <styled.ListItem\n                            key={`li-${index}`}\n                        // onMouseEnter={() => onMouseEnter(item)}\n                        // onMouseLeave={() => onMouseLeave(item)}\n                        >\n                            <styled.ListItemRect>\n                                <styled.ListItemTitle schema={\"locations\"} onClick={() => onLocationClick(item)}>{!!name ? name : device_name}</styled.ListItemTitle>\n                            </styled.ListItemRect>\n\n                        </styled.ListItem>\n                    );\n                })\n                :\n                <div></div>\n            }\n\n        </styled.ListScrollContainer>\n    )\n}\n\nexport default LocationList\n","// import external dependencies\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Route, useHistory, useParams } from 'react-router-dom'\n\n// components\nimport DashboardsPage from \"../widgets/widget_pages/dashboards_page/dashboards_page\";\nimport Settings from \"../side_bar/content/settings/settings\";\nimport LocationList from './location_list/location_list'\nimport BounceButton from \"../basic/bounce_button/bounce_button\";\n\n// Import hooks\nimport useWindowSize from '../../hooks/useWindowSize'\n\n// Import actions\nimport { postStatus } from '../../redux/actions/status_actions'\n\n// Import Utils\nimport { deepCopy } from '../../methods/utils/utils'\n\n// styles\nimport * as styled from \"./list_view.style\"\n\n// import logger\nimport log from '../../logger.js';\n\nconst logger = log.getLogger(\"ListView\")\n\nconst SCREENS = {\n    LOCATIONS: {\n        title: \"Locations\",\n        schema: \"locations\"\n    },\n    SETTINGS: {\n        title: \"Settings\",\n        schema: \"settings\"\n    },\n    DASHBOARDS: {\n        title: \"Dashboards\",\n        schema: \"locations\"\n    },\n}\n\nconst ListView = (props) => {\n    const {\n\n    } = props\n\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const params = useParams()\n    const { widgetPage } = props.match.params\n\n    const size = useWindowSize()\n    const windowWidth = size.width\n    const widthBreakPoint = 1025\n\n    const positions = useSelector(state => state.positionsReducer.positions)\n    const devices = useSelector(state => state.devicesReducer.devices)\n    const status = useSelector(state => state.statusReducer.status)\n    const taskQueue = useSelector(state => state.taskQueueReducer.taskQueue)\n\n    const onPostStatus = (status) => dispatch(postStatus(status))\n\n    const [showDashboards, setShowDashboards] = useState(false)\n    const [showSettings, setShowSettings] = useState(false)\n\n    const CURRENT_SCREEN = (showDashboards) ? SCREENS.DASHBOARDS :\n        showSettings ? SCREENS.SETTINGS : SCREENS.LOCATIONS\n\n    const title = CURRENT_SCREEN.title\n\n\n    let pause_status = ''\n\n    // If there's no status available then set to blank object.\n    try {\n        pause_status = status.pause_status;\n    } catch (e) {\n        pause_status = status.pause_status;\n    }\n\n    // Handles the icon type being displayed based on the pause_status in status\n    var playButtonClassName = \"fas fa-\";\n    pause_status ? playButtonClassName += 'play' : playButtonClassName += 'pause';\n\n    useEffect(() => {\n        // displays dashboards page if url is on widget page\n        if (widgetPage) {\n            setShowDashboards(true)\n        }\n\n        // hides dashboards page if url is NOT on widget page\n        else {\n            setShowDashboards(false)\n        }\n\n    }, [widgetPage])\n\n    const onLocationClick = (item) => {\n        history.push('/locations/' + item._id + '/' + \"dashboards\")\n        setShowDashboards(true)\n    }\n\n    // Handles the play pause button\n    const handleTogglePlayPause = async () => {\n\n        //Flip the status to the opposite of the current value when the button is pressed\n        var status_clone = deepCopy(status);\n        const pause_status = !status_clone.pause_status;\n\n        //Post the status to the API\n        await onPostStatus({ pause_status: pause_status });\n    }\n\n\n    const handleTaskQueueStatus = () => {\n\n        // return (\n        //     <styled.StatusContainer>\n        //         <p>Distance to Station 3 is 30m</p>\n        //     </styled.StatusContainer>\n        // )\n        return Object.values(taskQueue).map((item, ind) => {\n\n            // If the item has an owner that means that task is being executed\n            if (!!item.owner) {\n\n                // If the station is a device and the task q owner is that device then show the status\n                if (!!devices[params.stationID] && item.owner === devices[params.stationID]._id) {\n\n                    let locationName = ''\n\n                    if(!!item.custom_task){\n                        locationName = positions[item.custom_task.position].name\n                    }\n                    else if(!!item.next_position){\n                        locationName = positions[item.next_position].name\n                    }\n\n                    return (\n                        <styled.StatusContainer>\n                            <p>{`Distance to ${locationName} - ${Math.floor(devices[item.owner].distance_to_next_target)}m`}</p>\n                        </styled.StatusContainer>\n                    )\n\n                }\n            }\n        })\n    }\n\n\n    return (\n        <styled.Container>\n            <styled.Header>\n                {(showDashboards) ?\n                    <BounceButton\n                        color={\"black\"}\n                        onClick={() => {\n                            setShowDashboards(false)\n                            history.push('/locations')\n                        }}\n                        containerStyle={{\n                            width: \"3rem\",\n                            height: \"3rem\",\n                            position: \"relative\"\n                        }}\n                    >\n                        <styled.Icon\n                            className={\"fa fa-times\"}\n                        />\n                    </BounceButton>\n                    :\n                    <BounceButton\n                        color={\"black\"}\n                        onClick={() => {\n                            setShowSettings(!showSettings)\n                        }}\n                        active={showSettings}\n                        containerStyle={{\n                            width: \"3rem\",\n                            height: \"3rem\",\n                            position: \"relative\"\n                        }}\n                    >\n                        <styled.Icon\n                            className={!showSettings ? \"fa fa-cog\" : \"fa fa-times\"}\n                        />\n                    </BounceButton>\n                }\n                <styled.Title schema={CURRENT_SCREEN.schema}>{title}</styled.Title>\n                {handleTaskQueueStatus()}\n\n                <styled.PlayButton\n                    play={pause_status}\n                    windowWidth={windowWidth}\n                    widthBreakPoint={widthBreakPoint}\n                >\n                    <styled.PlayButtonIcon play={pause_status} className={playButtonClassName} onClick={handleTogglePlayPause}></styled.PlayButtonIcon>\n                </styled.PlayButton>\n\n            </styled.Header>\n\n\n            {(!showDashboards && !showSettings) &&\n                <LocationList\n                    onLocationClick={onLocationClick}\n                />\n            }\n\n            {(showDashboards && !showSettings) &&\n                // must be wrapped in route to give dashboards page the match params\n                <Route\n                    path=\"/locations/:stationID/dashboards/:dashboardID?/:editing?\"\n                    component={DashboardsPage}\n                />\n            }\n\n            {showSettings &&\n                <Settings />\n            }\n        </styled.Container>\n    )\n}\n\nexport default ListView;\n","import { normalize } from 'normalizr';\n\n// import types\nimport {\n    GET,\n    POST,\n    DELETE,\n    PUT\n} from '../types/prefixes';\n\nimport {\n    JUNK\n} from '../types/data_types';\n\nimport { api_action } from './index';\nimport * as api from '../../api/cards_api'\n\nimport log from \"../../logger\"\nimport {convertArrayToObject} from \"../../methods/utils/utils\";\n\nimport uuid from 'uuid'\nimport {SUCCESS} from \"../types/suffixes\";\n\nconst logger = log.getLogger(\"Junk\", \"Redux\")\nlogger.setLevel(\"debug\")\n\n// update\n// ******************************\nexport const putJunk = () => async dispatch => {\n\n    const junkData = {\n        _id: uuid.v4(),\n        text: \"alemfsefmseklfmsel\",\n        text1: \"alemfsefmseklfmsel\",\n        text2: \"alemfsefmseklfmsel\",\n        text3: \"alemfsefmseklfmsel\",\n        text4: \"alemfsefmseklfmsel\",\n        text5: \"alemfsefmseklfmsel\",\n        text6: \"alemfsefmseklfmsel\",\n        text7: \"alemfsefmseklfmsel\",\n        text8: \"alemfsefmseklfmsel\",\n    }\n    dispatch({ type: PUT + JUNK, payload: {junkData} });\n\n};","// import external dependencies\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from \"react-router-dom\";\n\n// Import Actions\nimport { getMaps } from '../../redux/actions/map_actions'\nimport { getTaskQueue } from '../../redux/actions/task_queue_actions'\nimport { getLocations } from '../../redux/actions/locations_actions'\nimport { getObjects } from '../../redux/actions/objects_actions'\nimport { getTasks, deleteTask } from '../../redux/actions/tasks_actions'\nimport { getDashboards, deleteDashboard } from '../../redux/actions/dashboards_actions'\nimport { getSounds } from '../../redux/actions/sounds_actions'\nimport { getProcesses, putProcesses } from '../../redux/actions/processes_actions'\n\nimport { getSchedules } from '../../redux/actions/schedule_actions';\nimport { getDevices, putDevices } from '../../redux/actions/devices_actions'\nimport { getStatus } from '../../redux/actions/status_actions'\n\nimport { getSettings } from '../../redux/actions/settings_actions'\nimport { getLocalSettings } from '../../redux/actions/local_actions'\nimport { getLoggers } from '../../redux/actions/local_actions';\nimport { getRefreshToken } from '../../redux/actions/authentication_actions'\n\nimport { deletePosition, putPosition } from '../../redux/actions/positions_actions'\nimport { putStation, deleteStation } from '../../redux/actions/stations_actions'\n\nimport { postLocalSettings } from '../../redux/actions/local_actions'\n\n// Import components\nimport Textbox from '../../components/basic/textbox/textbox'\nimport Button from '../../components/basic/button/button'\nimport Switch from 'react-ios-switch'\nimport SplashScreen from \"../../components/misc/splash_screen/splash_screen\";\n\n// import utils\nimport { getPageNameFromPath } from \"../../methods/utils/router_utils\";\nimport {isEquivalent, deepCopy, uuidv4} from '../../methods/utils/utils'\n\n// import logger\nimport logger from '../../logger.js';\nimport { getMap } from '../../api/map_api';\nimport SideBar from '../side_bar/side_bar';\nimport localReducer from \"../../redux/reducers/local_reducer\";\nimport {postCard} from \"../../redux/actions/card_actions\";\nimport {putJunk} from \"../../redux/actions/test_actions\";\nimport axios from \"axios\";\nimport {apiIPAddress} from \"../../settings/settings\";\n\n\nvar count = 0\n\nfunction getRandomInt(max) {\n    return Math.floor(Math.random() * Math.floor(max));\n}\n\nconst TestsContainer = (props) => {\n\n    const dispatch = useDispatch()\n\n    const foo_map = {\n        allowed_methods: [\n            \"PUT\",\n            \"GET\",\n            \"DELETE\"\n        ],\n        _id: \"blah-blah\",\n        created_by: \"/v2.0.0/users/mirconst-guid-0000-0004-users0000000\",\n        created_by_id: \"mirconst-guid-0000-0004-users0000000\",\n        created_by_name: \"Distributor\",\n        guid: \"51131f98-bfb5-11ea-a742-94c691a739e9\",\n        map: \"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\",\n        metadata: \"eyJiYXNlX21hcF9mbG9vciI6ImlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFoQUFBQUt5Q0FZQUFBQ0UxT2RzQUFBZ0FFbEVRVlI0WHUzZFRZNHNYWklXWUk4cWhKb0JJRUF3QUFsV3dCU0pGY0NNT1p0aEp3eVlzNEFlOVNLQURjQVlFSDhDSWFvRGVkV1hYMmRuWldUNCtURjNPMjRQVXF0RlZcL2h4czhmTzhYeXZSOTViajgzXC9JMENBQUFFQ0JBZzBDandhUCtcL2pCQWdRSUVDQUFJRk5nTEFKQ0JBZ1FJQUFnV1lCQWFLWnpBVUVDQkFnUUlDQUFHRVBFQ0JBZ0FBQkFzMENBa1F6bVFzSUVDQkFnQUFCQWNJZUlFQ0FBQUVDQkpvRkJJaG1NaGNRSUVDQUFBRUNBb1E5UUlBQUFRSUVDRFFMQ0JETlpDNGdRSUFBQVFJRUJBaDdnQUFCQWdRSUVHZ1dFQ0NheVZ4QWdBQUJBZ1FJQ0JEMkFBRUNCQWdRSU5Bc0lFQTBrN21BQUFFQ0JBZ1FFQ0RzQVFJRUNCQWdRS0JaUUlCb0puTUJBUUlFQ0JBZ0lFRFlBd1FJRUNCQWdFQ3pnQURSVE9ZQ0FnUUlFQ0JBUUlDd0J3Z1FJRUNBQUlGbUFRR2ltY3dGQkFnUUlFQ0FnQUJ4MHozd2ZENmZINjA5SGc5enZ1bWN0VVdBQUlHckJQeGdDWmJcLytFSCsrWWY0ZFwvKzMzakplQllYUFwvXC9ldmE3Y0VpbjJkN3o3XC8zZm9cL3JmdjE4eTAxOU5yTXZ1NlZ4ZXo3V0k4QUFRSXJDQWdRazZmMDlRZjZkejg0ZlwvcGhldVR6cjByKytLSDhVM2o0XC9GYml5T2RhUDdcL1hjSFRkZHlIaVZkRDZLWlR0OVI1ZDk5VWJtaU16bkx4dExFZUFBSUhsQkFTSVNTTTcra056MHUzS0xmUGRHNXhaQ0Qxckh3a3A3ejd6dFg1Zk84MmFxSFVJekJmd0J2S1BUVU1EeE9jXC9LYmI4Z0cxOThNN2ZLc2RYXC9OaFVMZjBkWDkwbkt3aDg5OWFtOVF4RWhvK1dyOXlPZnJVVldlXC9uUGZQVGZXWjh6ZmY1aDhxUlowRHJYQ3ZzXC93dzlIcG5kdXplXC8wWDE4UFlkSGFvN2VieUVCNGtoalI3Q2ptejlTdzArZm1kWG5hQjJ1djVcL0FUMTlIdFg1TmRHU2ZIdjM2cStkdHpaSHA5SnoxcjM4aVBOTG5rVnErZnVibzd3RDFyUDF4VFVcL1wvSVwvZHo3UjhFWnUyWk0rYlhVMnQwWGRNRFJFK1RQMjNtYUlDUmd6UzcxNUZhWEV0Z1JLQTFRTXpjKzcxbmZHWU43K3krMWhoeDcxNkhkN1ZIXC9lYzl2eXQwMU8wc2k2UDFIREY4VlwvUG9XN2VlV3RcL1ZkS1N2SDM4K2p5N3c5ZnFlSmdXSTJWT3dIb0hqQWtmRHcrY1wvTGM4ODU2MFB1Wm4zUHFva1FQeXhWRStBT1BxblwvdFk5Y1hTTzMzMXUxbjc2cWVaWDkyanBjNlRPbHZ1MFdLWlwvQTdFM0U5VjhDMVRreGh1dHdcL1VFUmdSNkFzVFJId1JINm1vOTN5TVAwaVAxZlBjWkFlSXZxN1RNb01ldWRVXC8wenZXTWZUempkMjFtMVRuYlZZQVkySGt0aDJqZ05pNGxFQ3JROGpzVm53UDlyUDNmK2xDYmRkK2pxR2Y4RHNUbnR6dEg2N3J5Y3kwejZQbTltZFk5MFd2UjBzZTdlXC9Uc2s1WStaOVRhY3I5M1wvZjcrV1hEa1F5MmZtZEhra1Q4QnROUVU4ZG1vUGlOcXRTYUJWd0t0Yng4K0I0Z1pmeXJxZWFDZGZmWjZcL2dUZHUrTjZQSHJ2MVh0ZHEzK0ZBQkhkWTZ2NVdUOURsd2tRWHg5Y0xadFwveDI4NW1OOE5xMmVEdE5Ub3N3U3VFR2g5K3hBUklONmR0Njh1TXg2bUxkWTlmN0pzV2ZcL09ieDgrNzVlV3ViVThyM3VzUDY1cHFlbW4rN1NlbzliK1p0VFplczhqcnJjUEVDMFBweGxET29MdU13UXlDUFM4ZmZndXlFZWRtNThlZUZIM3ZHb3VFUVwvM2lGNWEzWHYyMkprV3JmM01NbTNwY1ZhTkxmYzgydWRTQWVKclV6TWVNTjRzSE4wcVBrZmdEd0pudmRLZmNiNVhtbG5FQTM1MlwvNjBcL3pBU0k3eWZRTXV0VzgxY3piN25uMFgwelBVRHNONTdWOE5FbWZJNEFnZk1FTWdTSU96NW5JaDd3TTNkRnozTzk5ZFgrZHdGMVpnOWYxK3JwYVVZOUxiT2VVV1BMXC9WcjZFeUJhdEh5V1FIR0JWdytpR1ErNWxqZU1Bc1M1RzdGbnZ0bmZQbHkxaDFwK21QZTRld054N3Rsd053SUVEZ3FjOVF1RkxYOFNuZm1RUGNnUThyR1dIeXdoQmJ4WXRNZTM1ODFEeTh4bjlkXC9UVysrOWUrWTdzNzZlKzdcL3IxUnVJZDBMK2N3SUVmaFU0NncxRTY4TnU1b1AycW5HMzlueEduYjJ1MlFMRVQ3OU0zOXZqVWZcL2V1YzZ1cTdlT25cL29VSUk3dUFwOGpRT0RsdndvNzgySFg4NkNiZWY4TVkrNTVcL2RcL3pKXC9qUGJtZjlic3VQUDVBZWo4ZEhUVDJcL1JOdnlTXC9HOXhxMzc0MTBmR2Vwbzdlbmo4d0pFcjV6ckNCUVVlUGN3bkVIeTZrK3Y3NExGM1VMRURNdGZIXC9TUHg3ZlArdXhtdlc4eWp0cEZyMyswanVqUHZUczd2ZmNQQ1JCN01kazNaaStZNndoVUZ6anJhNHp2bk44OUNEMTNYdVwvT0RHOFlXczlPbFJcL3dyUzZ0bjM5M2JsclhDMzBESVVEMGpzTjFCUElMQ0JENVozU1hDZ1dJT1pOY0xrQjh0TzFQQkhNMmdGVUlaQkU0NDJ1TVY3MStcL0VENXJnYlBtaXc3UkIwWkJTSkNSTmhYR0o4QkhleU0yMGxOQlBvRXJub0RjZFl2bVwvV3B1SXBBYm9GbEE0UXdrWHRqcVk1QWk0QUEwYUxsc3dSeUNOd2lRUGhxSThkbVVnV0JYb0VyQWtUTFg4XC9yN2N0MUJPNHFFQkVlZHF0VHZzTDRiaWkrMXJqclZ0WFhuUVd1K3YySFRBSENMXC9iZGVZZmZzemNCNHA1ejFSV0JwUVN1K09YRmJIXC85VUlCWWFzc3E5cHZcL0J0MVpLSmU4Z2ZEMllkYjRyRVBnWElHekE4VFo5enVpS1VBY1VmS1pUQUszZWdNaFFHVGFXbW9oY0Z6Z2loXC9vM2tBY240OVBFdmhPUUlDd0x3Z1F1RnpncWhcL21mZ2ZpOHRFcllHR0JXd1dJZlE3ZVFpeThHNVZlVnVDcUFMR0QrM2NneW00N2pROEtDQkNEZ0M0blFHQmNRSUFZTjdRQ2diTUZCSWl6eGQyUEFJRTBBbGNHbHpRSUNpSFFLU0JBZE1LNWpBQ0I5UVd1K3ZjbjFwZlRBWUdcLytQcHZ0c1VsZjQxemI4THZRTXdlcGZVSXhBdGM5VmNZV1wvNEVGZjFzdWNvZ2ZycnVjRmVCbHZQVFlpQkF0R2o1TEFFQ3B3dDhcL2VYSnEzK0FYMzNcLzB3Zmdoa3NMUklXSEhVV0FXSHByS0o0QUFRSUVDTHdXRUNEc0RnSUVDQkFnUUtCTElDcEVYUElHSXZvN3lpNWhGeEVnUUlBQWdSc0tDQkEzSEtxV0NCQWdRSUJBdElBQUVTMXNmUUlFQ0JBZ2NFT0JXd1dJZlQ2K3hyamhMdFVTQVFJRUNLUVRFQ0RTalVSQkJBZ1FJRUFndjRBQWtYOUdLaVJBZ0FBQkF1a0VCSWgwSTFFUUFRSUVDQkJZUXlBaVJGenkxemo5RHNRYUcwNlZCQWdRSUhBUGdkc0VDTDlBZVk4TnFRc0NCQWdReUMwUUVSdytPajcxRFlUZ2tIdWpxWTRBQVFJRTdpVWdRTnhybnJvaFFJQUFBUUtuQ1VTRmlOUGVRSGo3Y05wZWNTTUNCQWdRSVBDcmdBQmhNeEFnUUlBQUFRSmRBaEVoNHJRM0VIdkgza0owemQxRkJBZ1FJRUJnU0VDQUdPSnpNUUVDQkFnUXFDVVFFUncrQkwyQnFMV1hkRXVBQUFFQ3hRU2lRa1JvZ1BDVlJiRmRxbDBDQkFnUVNDY2dRS1FiaVlJSUVDQkFnRUIrZ2VVQ2hMY1ArVGVWQ2drUUlFRGdcL2dKTEJRamg0ZjRiVW9jRUNCQWdrRjhnS2p6c25ZZjhEb1FBa1g5VHFaQUFBUUlFN2krd1ZJQVFIdTZcL0lYVklnQUFCQW1zSUNCQnJ6RW1WQkFnUUlFQWdsY0JTQVdLWDh4WWkxZjVSREFFQ0JBanMzOWtcL0hyOStiVlwvbDU1UUFZZXNUSUVDQUFBRUNYUUpSSVdMNkwxRldTWFZkVTNRUkFRSUVDQkE0V1VDQU9CbmM3UWdRSUVDQXdGMEVJa0tFTnhCMzJSMzZJRUNBQUFFQ0x3U1dDQkI3N2I3R3NJY0pFQ0JBZ0VBT2dZandzSGMyXC9RMkVBSkZqdzZpQ0FBRUNCQWo4XC9nZjlwNzk5TWxORWdKaXBhUzBDQkFnUUlKQklJQ284ZUFPUmFNaEtJVUNBQUFFQ3N3V1dDeEMreHBpOUJheEhnQUFCQWdUYUJaWUxFSDZKc24zSXJpQkFnQUFCQXJNRkJJalpvdFlqUUlBQUFRSUZCQVNJQWtQV0lnRUNCQWdRbUMwZ1FNd1d0UjRCQWdRSUVDZ2dJRUFVR0xJV0NSQWdRSURBYkFFQllyYW85UWdRSUVDQVFCR0JxQkRoSDVJcXNvRzBTWUFBQVFJMUJRU0ltblBYTlFFQ0JBZ1FHQkpZS2tEc25mcTNJSWJtN1dJQ0JBZ1FJREJGUUlDWXdtZ1JBZ1FJRUNCUVMyQzVBUEhkVzRpOUNXOG1hbTFjM1JJZ1FJREF0UUpMQm9pdlpNTER0WnZJM1FrUUlFQ2dwa0JFaUFqNVd4aXZ4aU5BMU55NHVpWkFnQUNCYXdVRWlHdjkzWjBBQVFJRUNDd25FQkVlZGdSdklKYmJDZ29tUUlBQUFRTEhCVzRSSVBaMmZZMXhmT2crU1lBQUFRSUVSZ1VFaUZGQjF4TWdRSUFBZ1dJQ1VlSGg5Szh3dklFb3RuTzFTNEFBQVFLWEN0d3FRQWdSbCs0bE55ZEFnQUNCUWdLM0N4QkNSS0hkcTFVQ0JBZ1F1RXhBZ0xpTTNvMEpFQ0JBZ01DNkFnTEV1ck5UT1FFQ0JBZ1F1RlFnS2tTYyt1OUFmQlgwVnpvdjNWTnVUb0FBQVFJRkJHNFhJSVNIQXJ0V2l3UUlFQ0J3dVlBQWNma0lGRUNBQUFFQ0JOWVVpQWdSbDMyRjRRM0VtcHRRMVFRSUVDQ3dub0FBc2Q3TVZFeUFBQUVDQkM0WEVDQXVINEVDQ0JBZ1FJREFlZ0lDeEhvelV6RUJBZ1FJRUxoY1FJQzRmQVFLYUJYNGJ0UDZcL1pkV1JaOG5RSURBbUlBQU1lYm42Z3NFdm01YTRlR0NJYmdsQVFMbEJXNFZJUFpwK21GeTd6M3Q3Y085NTZzN0FnVFdFSWdJRDN2bmxcLzAxVGdGaWpZMDNVcVVBTWFMbldnSUVDSXdMUklVSEFXSjhObFo0SWVDckMxdURBQUVDT1FTaVFzUmxieUI4ZlpGalkwVlc4WG5UUnN4N1h6OWkzVWdUYXhNZ1FPQnNBUUhpYkhIM1N5c1FIVXpTTnE0d0FnUUlkQWdJRUIxb0xybTNnRGNROTU2djdnZ1FtQ01nUU14eHRBb0JBZ1FJRUNnbElFQ1VHcmRtQ1JBZ1FJREFISUZiQlFpXC8rRFpuVTFpRkFBRUNCQWdjRlpnZEpFN1wvV3hqQ3c5RlIreHdCQWdRSUVKZ25zR1NBRUJybWJRQXJFU0JBZ0FDQkZvSFp3ZUhqM3FGdklBU0hsaEg3TEFFQ0JBZ1FtQ3NRRlI3MktzTUNoUEF3ZHhOWWpRQUJBZ1FJdEFvc0ZTQUVoOWJ4K2p3QkFnUUlFSWdSRUNCaVhLMUtnQUFCQWdSdUxiQlVnTmduNFMzRXJmZWo1Z2dRSUVCZ0VRRUJZcEZCS1pNQUFRSUVDR1FTRUNBeVRVTXRCQWdRSUVCZ0VRRUJZcEZCS1pNQUFRSUVDR1FTRUNBeVRVTXRCQWdRSUVCZ0lZR29FQkh5NzBENEpjcUZkcFpTQ1JBZ1FPRDJBaEVoUW9DNFwvYmJSSUFFQ0JBaFVGMWdtUU95RDhoYWkrbmJWUHdFQ0JBaGtFSWdJRDN0ZklXOGdCSWdNVzBZTkJBZ1FJRkJkSUNvOGhBVUlieCtxYjFuOUV5QkFnRUFHQVFFaXd4VFVRSUFBQVFJRUZoTVFJQllibUhJSkVDQkFnRUFHQVFFaXd4VFVRSUFBQVFJRUZoTVFJQllibUhJSkVDQkFnRUFHQVFFaXd4VFVRSUFBQVFJRUdnVDJIOTVYXC82VUNBYUpoWUQ1S2dBQUJBZ1N1RlBqNG9YMTFlTmdObGdvUUdjQ3UzRGp1VFlBQUFRSzFCUVNJenZrTEVKMXdMaU5BZ0FBQkFnRUNVVzhoUXY0bFNpRWlZQWRZa2dBQkFnUUlOQXBFaFlmZmZ6M1NXTXZoandzUmg2bDhrQUFCQWdRSWhBZ3NGeUNFaDVCOVlGRUNCQWdRSU5Bc0VCVWlRdDVBQ0JETjgzVUJBUUlFQ0JBSUVWZ21RQWdQSWZPM0tBRUNCQWdRNkJJUUlMcllYRVNBQUFFQ0JHb0xMQk1nOWpGNUMxRjdzK3FlQUFFQ0JISUlSSVdIdlR1XC9BNUZqeHFvZ1FJQUFBUUxUQlpZTEVONUNUTjhERmlSQWdBQUJBdDBDRVVGaStoc0lYMTkwejllRkJBZ1FJRUFnUkVDQUNHRzFLQUVDQkFnUXVMXC9BN0JBeFwvUTJFcnlcL3V2d2wxU0lBQUFRSnJDY3dPRDN2M0FzUmFlMEMxQkFnUUlFQ2dTU0FpUElRRUNMOEQwVFJYSHlaQWdBQUJBcUVDeXdRSVgyR0U3Z09MRXlCQWdBQ0Jab0dJRU9FcmpPWXh1SUFBQVFJRUNLd2xJRUNzTlNcL1ZFaUJBZ0FDQkZBSUNSSW94S0lJQUFRSUVDS3dsSUVDc05TXC9WRWlCQWdBQ0JGQUlDUklveEtJSUFBUUlFQ0t3bElFQ3NOU1wvVkVpQkFnQUNCRkFMTEJJaGR5NzhIa1dMUEtJSUFBUUlFQ0d3Q2hFMUFnQUFCQWdRSUhCYUlDQTRmTndcLzVkeUM4Z1RnOFd4OGtRSUFBQVFMaEFoRkJRb0FJSDVzYkVDQkFnQUNCYXdXV0NSQitcLytIYWplTHVCQWdRSUVEZzE2OGFIbytRbHdVaGl3b1FOaTRCQWdRSUVNZ2hFUEgyWWU5TWdNZ3hYMVVRSUVDQUFJRVFBUUVpaE5XaUJBZ1FJRURnM2dJQ3hMM25xenNDQkFnUUlCQW1FQkVpZklVUk5pNExFeUJBZ0FDQlBBS3pRMFJJZ05pNVwvQ0psbmsyakVnSUVDQkFnSUVEWUF3UUlFQ0JBZ0VDVHdPendzTlwvY0c0aW1FZmd3QVFJRUNCQllTeUFpUEFnUWErMEIxUklnUUlBQWdTNkJpQkRoRFVUWEtGeEVnQUFCQWdUV0VWZ21RUGdGeW5VMmxVb0pFQ0JBNE40Q0VlRWg3Q3NNQWVMZW0xRjNCQWdRSUxDT2dBQ3h6cXhVU29BQUFRSUUwZ2dJRUdsR29SQUNCQWdRSUxDZXdPd2dFZkpMbEw3Q1dHOWpxWmdBQVFJRTdpMGdRTng3dnJvalFJQUFBUUxUQldhSGg3MUFieUNtajhtQ0JBZ1FJRUFnajBCRWVBZ0xFUHZDdnNiSXMzbFVRb0FBQVFKMUJaWUpFSHR3MklzVklPcHVWcDBUSUVDQVFBNkJxUEFROGdaQ2NNaXhhVlJCNEFxQnIzOTRlUGZ3K3VsNTRROGlWMHpRUGU4bThPNE1qdlRyZHlCRzlGeExvTGhBNU1QSlY2SEZONWYycHdoRW5sRUJZc3FJTEVLZ3JrRGtBMHFJcUx1dmRENUhJUEo4Q2hCelptUVZBcVVGSWg5U3ZoWXR2YlUwUHlnUWVUWUZpTUhodUp3QWdUOElSRHlvaEFlN2k4Q1lRTVM1XC9LaElnQmliamFzSkVQaEZJUEpCOWU2cmpLXC8zXC9pNTR2S3B2NUxQdmVuNFhnRDVmXC8rNnp2ejYwXC9TMDNaKzZBd0x1OWVXQ0p0eDhSSU40UytRQUJBa2NFem5oZ0hhbWp3bWMrd3NhSCtkSHdVY0htVlkrdlwvbGJQaU9HUmE0K0UyNGk1bkhFZUJZaUl5Vm1UUUVHQk14NVlCVmtQdFN4QXZHYzZzalwvZlwvYlhpOTNjWis4U3IrN2ZXZnVUelk1WCs0V29CWW9haU5RZ1FDUGtkQ0t6SEJBU0k5MDVIZjZoZTlVTjg1TDd2dTRcLzVoQUFSNDJwVkF1VUVqajZneThHYzBMQUFjUXo1eUI0ZFwvVUgrOWZvejdubXMrXC9tZkVpRG1tMXFSUUVtQkl3XC9La2pEQlRRc1B4NEhmN2RFWlgySDBCSWk5ZzVaZjV2M2E4Y2RcL2hjUnhpVG1mREFrUXJ6RG1sR3dWQWdReUNyeDdPR2VzK1E0MUNSREhwdmpkXC92ejhnXC9lSTQzZVwvTlBudWI5SzhPeGZ2N3Z2cWx6OWZkZjN4K1hmM1BhYjI4NmRDQXNRN2tCbUZXNE1BZ1Z3Q1p6eXdjbldjcHhyUDNEeXorS21TSTM5clkzWW5rZWR5ZW9Dd2tXZVAzM29FOGd0RVBxVHlkMzk5aFo2NzE4OGdhd1dSWjNONmdQRDFSZFp0cEM0Q2NRS1JENm00cXUrenNnQnhuMW5PN2lUeWJFNFBFRGJ5N1BGYmowQitnY2lIVlA3dXI2XC9RY1wvZjZHV1N0SVBKc0NoQlpwNjR1QW9zSlJENm9GcU00dlZ3QjRuVHlaVzRZZVM0RmlHVzJnVUlKNUJhSWZGRGw3dno2NmdTSTYyZVF0WUxJY3prOVFPeUlOblBXcmFRdUFqRUNrUStwbUlydnRhcG43cjNtT2JPYnlMTXBRTXljbExVSUZCV0lmRWdWSlcxcVc0Qm80aXIxNGNpektVQ1Uya3FhSlJBakVQbVFpcW40ZnFzS0VmZWI2WXlPSXMrbUFERmpRdFk0WGFEMVgyYzd2Y0JDTjR4OFFCVmlIR3IxYzNoNDl5OGpEdDNJeGNzSlJKNVBBV0s1N2FEZ0tcLzQxTitxdkJTSWZVTnlQQ2J3S0VCOVhlenR4elBGdW40byttd0xFM1hiTXpmdjU3a0I0T0Y0NzlPaUgxTFhkM2VQdXpzZzk1dGphUmZUWm5CNGdiTlRXRWZ2OFVZR2ZEb045ZDFSeDd1ZWlIMUJ6cTYyN212TlJjXC9iUjUxT0FxTG12bHV2NnlFSHdrRHhcL3JFZm1jbjVWN3ZoVndObW91U2VpeitmMEFMR1B5V2F0dVZranV1NDVBUFpmeENTK1g3Tm5QdWRWNTA1K0I2THVIampqYkFvUWRmZFgrczU3RDRBQWNkNW9lMmQwWG9YdTVBOTE5OXdEWDMrWlwvSXF6S0VEY2MyXC9kb3F1UkF5RkVuTGNGUnVaMFhwVzE3K1E4M0d2K1djNmNBSEd2ZlhXYmJtWWRFQVwvTytDMHhhMWJ4bGRhOWczTndyOWxuT1hNQ3hMMzIxYTI2R1Rra0hwam5iSVdSR1oxVG9idjRQWWo3N1lFczUwNkF1TlwvZXVsMUhSdytMMEhEKzZJXC9PNXZ6SzNQR3JnUE54enoxeDVSa1VJTzY1cDI3WFZlK1wvQWJGZnR6ODRQXC83MzdXQXVidWpLaDlmRnJTOTNld0ZpdVpFZEt2aktNeWhBSEJxUkQyVVFhQWtCcnc2VmgramNTVjc1OEpyYnliMVhzK1wvdk85OHJ6NkFBY2Q5OVZhNnpvd2ZKdzNUZTFqaHFQdStPVnVvUnNPZDcxTmE0NXNvek9EMUEyS2hyYkxvN1ZkbDdnT3pWc1YzUTZ6NTJWMWYzQ05qclBXcnJYSFBWV1JRZzF0a2pLdjFHWVBUZ2VMQ09iYXRSXC83Rzd1XC9xendFXC9cL2paejJlWTI5Y3ZaNW5CNGc5akhackRVMmE3WXVldytQXC9kb1wveVY3elwvanU2OGpzQmU5aSsrQkE0ODB3S0VQYmRMUVJHRDQwSGNOODJHSFh2dTZ1cnZncll2XC9hRUFHRVBFT2dVbVBHRHpFTzRIWCtHZVwvdGRYU0ZBMkFPdkJNNDhrOTVBMklkTEM4dytMRUpFMjNhWTdkOTJkNVwvK0VMQnY3WVhQQW1lZFN3SEN2bHRhWVBaQjhTQnUydzZ6XC9kdnU3dE1DaEQzd25jQlo1MUtBc1ArV0ZvZzRLRUxFOFMwUjRYXC84N2o0cFFOZ0RBb1E5UUtCVElQSUhtQ0R4ZmlpUlwvdVwvdjdoT2ZCZXhYKytIc3J6RzhnYkRubGhVNDQ0ZVhoXC9MUDIrT01HU3k3UVU4dTNGNDlHZnppMisxbjc5WE16enFYQXNURm04RHQrd1RPT2lBZXl1XC9uYzlZczNsZFMreFAyYXEzNWYzZnVQdmJBV1dkeWVvQ3dpV3R0NHF1NlBlT0EyTXZ2cDN2R0hONVg0Uk83Z1AxYWF4OWtPSHNDUkswOXQzeTNaeDBhRCtOalcrV3NlUnlycHZhbjdObGE4ODl3OWdTSVdudHUyVzdQUEN3ZXhNZTN5Wmx6T1Y1VnpVXC9hdDdYbW51SHNDUkMxOXR5UzNaNXhVRHg4KzdiR0diUHBxNnplVmZad3ZabGZmZjZtQndqZnhkWGJ4R2QwSEhWUVBIVEhweGMxbVwvSEthcTFnTDllYTk5N3QxV2RQZ0tpMzU1YnJPT3FRZU9ETzJRcFI4NWxUWFoxVjdPYzZzXC83bzlPcXpKMERVMjNOTGRSeDFRRHhzNTIyRHFCbk5xN0RHU3ZaMGpUbG5DUStcL2Z3TVNRVzRqUjZqV1d6UHFCNVA5T1hjdlJjMXBicFgzWDgyK3Z2K01QM2VZNGR3SkVMWDIzRExkUmgwT0Q5bjVXeUJxVnZNcnZmZUs5dmE5NTVzdFBIZ0RVV2VcL0xkZHB4QThsRDlpWWJSQXhxNWhLNzd1cXZYM2YyYjdxTE1PNTh3YWkzcjVMM1wvR1JmNkwxM1FQejZ4cnZQcDhlSlhHQkdSNWtpWGxPS2MzK1BvVTUxVTB5bkx2cEFjSkdUclhIU2hmemNjRHN5Ymh0a09FaEZ0ZmRPaXZiNCt2TWFsYWxHYzZlQURGcm10WWhVRkFndzBPc0lQc2Z0U3hBMU5zRkdjN2U5QUN4ajlGbXJyZVpkVnhUSU1ORHJLYjhYKzdhTTdmZUxzaHc5Z1NJZXZ0T3h3U21DV1I0aUUxclp1R0ZCSWlGaDlkWmVvYXpKMEIwRHM5bEJBaGNcLzBcL3Btc0VmQkFTSWVqdEJnS2czY3gwVHVKMUFoZ2ZaN1ZBYkd4SWdHc0Z1OFBFTTU4NGJpQnRzSkMwUXVGSWd3NFBzeXY2ejNGdUl5REtKYytySWNPNEVpSE5tN1M0RWJpdVE0VUYyVzl5R3hnU0lCcXdiZkRURHVSTWdickNSdEVEZ1NvRU1EN0lyKzg5eWJ3RWl5eVRpNjhoeTVnU0krRm03QTRGYkMyUjVtTjBhK1UxendrT3Q2V2M1Y3dKRXJYMm5Xd0xUQmJJOHpLWTN0dENDQXNSQ3c1cFFhcFl6SjBCTUdLWWxDRlFWeVBJZ3ErclwvMGJjQVVXc0haRGwzQWtTdGZhZGJBbE1Gc2p6SXBqYTE0R0lDeElKREd5ZzV5N21iSGlCczVJRmQ0VklDaXdsa2VaQXR4amE5WE1cL2Q2YVNwRjh4eTdnU0kxTnRFY1FSeUMyUjVrT1ZXaXE5T2dJZzN6blNITE9kT2dNaTBLOVJDWURHQkxBK3l4ZGltbHl0QVRDZE52V0NXY3pjOVFPenFOblBxdmFjNEF0TUVzanpJcGpXMDZFS2V1WXNPcnJQc0xPZE9nT2djb01zSUVQQmZwcFZsRHdnUVdTWnhUaDBDeERuTzdrS0FRS0JBbGdkWllJdExMQzFBTERHbXFVVm1PSHZlUUV3ZHFjVUkxQlBJOENDcnBcLzZYT3hZZ2F1MkFMR2RPZ0tpMTczUkxZTHBBbG9mWjlNWVdXVkI0V0dSUUU4dk1jdVlFaUlsRHRSU0JpZ0paSG1ZVjdmZWVCWWg2azg5eTVnU0llbnRQeHdTbUNXUjVrRTFyYU1HRkJJZ0ZoelpZY3Baek56MUEyTXlETzhQbEJCWVN5UElnVzRoc2VxbWV1ZE5KMHkrWTVkd0pFT20zaWdJSjVCWEk4aURMS3hSZm1RQVJiNXp4RGhuT25nQ1JjV2VvaWNCQ0Foa2VaQXR4VFM5VmdKaE91c1NDR2M3ZDlBQ3h5OXZRUyt3XC9SUktZSXBEaFFUYWxrVVVYOGJ4ZGRIQ1R5cjd5XC9Ba1FrNFpvR1FKVkJhNThnRlUxXC85cTNFR0VuN0FKbm4wVUJ3cjRqUUdCSTRPeUgxbEN4TjcxWWdManBZQWZhT3VOY0NoQURBM0lwQVFMblwvNm1IK1I4TENCQjJ4VmNCQWNLZUlFQWd2Y0FaRDZyMENCY1hLRUJjUElDa3Q0OCttOTVBSkIyOHNnaXNJaEQ5a0ZyRjRhbzZoWWVyNVBQZk5cL3BzQ2hENTk0QUtDYVFXaUg1SXBXNCtRWEVDUklJaEpDMGgrbXdLRUVrSHJ5d0Nxd2hFUDZSV2NiaXFUZ0hpS3ZrMTdodDVQcWNIQ0p0NWpVMmxTZ0l6QkNJZlRqUHFxN0NHWjI2RktmZjNHSGxHQllqK3ViaVNRSG1CeUlkVGVkeURBQUxFUWFqQ0g0czZwd0pFNFUybDlUa0MrK0dzK2hDUGVqRE5tVXlOVmFydXZSclRuZGRseEZrVklPYk54MG9GQlQ0Znlvb1A4b2lIVXNGdE5OUnl4WDAzQkZiMDRvaXpPajFBN0xPeG9ZdnUwRUp0dnpxTTFmWit4RU9wMERhYTBtcTFQVGNGcmRnaVVlZFVnQ2kya2JRN0x2RFRZYXoyTUk5Nk1JMVBxZFlLMWZaZHJlbU9keHQxVGdXSThkbFlvYUNBRVBFWFE0OTZPQlhjVmlFdEN4Y2hyRXN0R25WR0JZaWx0b0ZpTXdsOGR5Z3JQcXlqSGs2WlpyMXlMUlgzNU1yemlxZzk2b3dLRUJIVHNtWVpnYThIcytMRE91cmhWR1lUQlRkYWNVOEdreTYzZk5RWkZTQ1cyd29LemliZ2IySThRcDRqMmVhOFdqMkN3Mm9UaTZ0WGdJaXp0VEtCSVFFQlFvQVkya0JCRndzUVFiQUxMaXRBTERnMEpkY1NxUG9QU2tVOW5HcnRudm5kQ2hEelRWZGNNZko4aHJ4NnRIRlgzR1pxSnRBbkVQbUE2cXZJVmJ1QTU3Qjk4Q0VRZFVZRkNIdU1BSUVoZ2FpSDAxQlJMaFlnN0lGZkJhTE9xQUJoa3hFZ01DUVE5WEFhS3NyRkFvUTlJRURZQXdRSTVCWVFJSExPeDFjWU9lZHlSVlZSWjlRYmlDdW02WjRFYmlRUTlYQzZFZEVsclFnUWw3Q252R25VR1JVZ1VvNWJVUVRXRVloNk9LMGprSzlTNFNIZlRLNnVLT0tjQ2hCWFQ5WDlDU3d1RVBGZ1dwemswdktGaDB2NVU5OTg5bGtWSUZLUFczRUV6aEVZK1Rjc1pqK1V6dW40Zm5jUkhPNDMwOWtkelQ2ckFzVHNDVm1QUURHQjJRK2xZbnhUMmhVZXBqRGVkcEdvTXlwQTNIYkxhSXpBT1FKUkQ2ZHpxbFwvXC9Mc0xEK2pPTTdDRHlmQW9Ra1pPek5vR2JDMFErbkc1T042MDlBV0lhNVMwWGlqeWpBc1NDVzJiaysrb0YyMVZ5WW9ISWgxUGl0bE9WSmtDa0drZTZZaUxQYUVpQTJBVnQ2cGg5RlBEZlwvUGluMjdiOTYyM2JcL3YyMmJmOTUyN2JcL3ZXM2JcL1wvdmxmNTVmdXZqTnRtMVwvYmR1MnY3OXQyOVwvKzVYXC9cL2kyM2JcL21WTXQ2OVhcL1hvb1h1MjM3dzZQdlRsbldwRVBwamtWV3VWRDRNaWVmXC9kc2VUWHZqN1dQN0lmUGRiejdcL0t3elwvZTVaOGZHZnZ6TjZWMisybjN0SDZoMDlJV0VCNHRYR2ZmZEFmOWYwMXlHM2ZuNnY2OTFCK0l6NjdyUHY3dDg2b0piRDJMTDJONGZqbjJ6YjloXC8yd1BCNFBMNEdoWmFsOTdDNEI0dWQ0bmZ2THR6ck9Hclc4ckI1ZDkrdlwvXC9tN2gwWERldjkyMjdZXC8yN2J0djI3Yjl0KzNiZnVmMjdiOXAyM2J2clA0ZTl1MjdmXC96TjdadCsxdmJ0djNkYmR2K1ZjTzkwbnowNkF6VEZLd1FBZ2NFUGo5XC9SNThcLzc2N1wvN2huME5jeThDamV2d3Q3WjV6SThRQnlZbVk4UVNDdndmRDdcL3pyWnRcLyt1WEF2XC92XC9uTHRseEE2RkxwZU5iem5xejJNYmR2Mmo3WnQrNmZidHYzemJkdit3Uzl2aWZhM1JmXC9sOFhqOGVRXC9ZTDJ0XC92WFFQZjh3RCs3Y0FBQlFGU1VSQlZIOWwyN1lcLytTWFU3UGY5Tjl1MlwvWGJidHJcLzY2WDgrXC92K1wvdlwvN3NCMVZQdjY0aE1DclE4Z2VlMFh1dGVMMEFzZUxVMUV6Z0FvRmZYaDZGQktjTDJuRkxBZ1FHQlFTSVFVQ1hFeUJBZ0FDQmlnSUNSTVdwNjVrQUFRSUVDQXdLQ0JDRGdDNG5RSUFBQVFJVkJRU0lpbFBYTXdFQ0JBZ1FHQlFRSUFZQlhVNkFBQUVDQkNvS0NCQVZwNjVuQWdRSUVDQXdLQ0JBREFLNm5BQUJBZ1FJVkJRUUlDcE9YYzhFQ0JBZ1FHQlFRSUFZQkhRNUFRSUVDQkNvS0NCQVZKeTZuZ2tRSUVDQXdLQ0FBREVJNkhJQ0JBZ1FJRkJSUUlDb09IVTlFeUJBZ0FDQlFRRUJZaERRNVFRSUVDQkFvS0tBQUZGeDZub21RSUFBQVFLREFnTEVJS0RMQ1JBZ1FJQkFSUUVCb3VMVTlVeUFBQUVDQkFZRkJJaEJRSmNUSUVDQUFJR0tBZ0pFeGFucm1RQUJBZ1FJREFvSUVJT0FMaWRBZ0FBQkFoVUZCSWlLVTljekFRSUVDQkFZRkJBZ0JnRmRUb0FBQVFJRUtnb0lFQlducm1jQ0JBZ1FJREFvSUVBTUFycWNBQUVDQkFoVUZCQWdLazVkendRSUVDQkFZRkJBZ0JnRWREa0JBZ1FJRUtnb0lFQlVuTHFlQ1JBZ1FJREFvSUFBTVFqb2NnSUVDQkFnVUZGQWdLZzRkVDBUSUVDQUFJRkJBUUZpRU5EbEJBZ1FJRUNnb29BQVVYSHFFM3ArUHArXC9lVHdlZno1aEtVc1FJRUNBd0lJQ0FzU0NROHRROHZQNVwvSnVQeCtPXC9aYWhGRFFRSUVDQnd2b0FBY2I3NUxlNzRmRDdcLzhlUHgrSGUzYUVZVEJBZ1FJTkFzSUVBMGs3bGdGM2crblwvXC9zOFhqOEtRMENCQWdRcUNrZ1FOU2N1NjRKRUNCQWdNQ1FnQUF4eE9kaUFnUUlFQ0JRVTBDQXFEbDNYUk1nUUlBQWdTRUJBV0tJejhVVkJKN1A1Mjhmajhmdkt2U3FSd0lFQ0J3VkVDQ09TdmxjV1FFQm91em9OVTZBd0E4Q0FvVHRRWUFBQVFJRUNEUUxDQkROWkM2b0pQQjhQdlwvNjRcL0g0SDVWNjFpc0JBZ1NPQ0FnUVI1UjhwcXpBOFwvbjhrOGZqOFhcL0tBbWljQUFFQ0x3UUVDRnVEd0F1QjVcL1A1ZUR3ZVQwQUVDQkFnOE1jQ0FvUmRRWUFBQVFJRUNEUUxDQkROWkM0Z1FJQUFBUUlFQkFoN2dBQUJBZ1FJRUdnV0VDQ2F5VnhBZ0FBQkFnUUlDQkQyQUFFQ0JBZ1FJTkFzSUVBMGs3bUFBQUVDQkFnUUVDRHNBUUlFQ0JBZ1FLQlpRSUJvSm5NQkFRSUVDQkFnSUVEWUF3UUlFQ0JBZ0VDemdBRFJUT1lDQWdRSUVDQkFRSUN3QndnUUlFQ0FBSUZtQVFHaW1jd0ZCQWdRSUVDQWdBQmhEeEFnUUlBQUFRTE5BZ0pFTTVrTENCQWdRSUFBQVFIQ0h1Z1c4RjkzM1UzblFnSUVDQ3d2SUVBc1A4THJHaEFncnJOM1p3SUVDRnd0SUVCY1BZR0Y3eTlBTER3OHBSTWdRR0JRUUlBWUJLeDgrZlA1XC9NM2o4Zmp6eWdaNkowQ0FRRlVCQWFMcTVDZjBMVUJNUUxRRUFRSUVGaFVRSUJZZFhJYXlmWVdSWVFwcUlFQ0F3RFVDQXNRMTdyZTRxd0J4aXpGcWdnQUJBbDBDQWtRWG00c0lFQ0JBZ0VCdEFRR2k5dngxVDRBQUFRSUV1Z1FFaUM0MkZ4RWdRSUFBZ2RvQ0FrVHQrZXVlQUFFQ0JBaDBDUWdRWFd3dUlrQ0FBQUVDdFFVRWlOcnoxejBCQWdRSUVPZ1NFQ0M2MkZ4RWdBQUJBZ1JxQ3dnUXRlZXZld0lFQ0JBZzBDVWdRSFN4dVlnQUFRSUVDTlFXRUNCcXoxXC8zQkFnUUlFQ2dTMENBNkdKekVRRUNCQWdRcUMwZ1FOU2V2KzRKRUNCQWdFQ1hnQURSeGVZaUFnUUlFQ0JRVzBDQXFEMVwvM1JNZ1FJQUFnUzRCQWFLTHpVVUVDQkFnUUtDMmdBQlJlXC82NkowQ0FBQUVDWFFJQ1JCZWJpd2dRSUVDQVFHMEJBYUwyXC9IVlBnQUFCQWdTNkJBU0lMallYRVNCQWdBQ0IyZ0lDUk8zNTY1NEFBUUlFQ0hRSkNCQmRiQzRpUUlBQUFRSzFCUVNJMnZQWFBRRUNCQWdRNkJJUUlMcllYRVNBQUFFQ0JHb0xDQkMxNTY5N0FnUUlFQ0RRSlNCQWRMRzVpQUFCQWdRSTFCWVFJR3JQWFwvY0VDQkFnUUtCTFFJRG9Zbk1SQVFJRUNCQ29MU0JBMUo2XC83Z2tRSUVDQVFKZUFBTkhGNWlJQ0JBZ1FJRkJiUUlDb1BYXC9kRXlCQWdBQ0JMZ0VCb292TlJRUUlFQ0JBb0xhQUFGRjdcL3JvblFJQUFBUUpkQWdKRUY1dUxDQkFnUUlCQWJRRUJvdmI4ZFUrQUFBRUNCTG9FQklndU5oY1JJRUNBQUlIYUFnSkU3Zm5ybmdBQkFnUUlkQWtJRUYxc0xpSkFnQUFCQXJVRkJJamE4OWM5QVFJRUNCRG9FaEFndXRoY1JJQUFBUUlFYWdzSUVMWG5yM3NDQkFnUUlOQWxJRUIwc2JtSUFBRUNCQWpVRmhBZ2FzOWY5d1FJRUNCQW9FdEFnT2hpY3hFQkFnUUlFS2d0SUVEVW5yXC91Q1JBZ1FJQkFsNEFBMGNYbUlnSUVDQkFnVUZ0QWdLZzlmOTBUSUVDQUFJRXVBUUdpaTgxRkJBZ1FJRUNndG9BQVVYdit1aWRBZ0FBQkFsMENBa1FYbTRzSUVDQkFnRUJ0QVFHaTl2eDFUNEFBQVFJRXVnUUVpQzQyRnhFZ1FJQUFnZG9DQWtUdCtldWVBQUVDQkFoMENRZ1FYV3d1SWtDQUFBRUN0UVVFaU5yejF6MEJBZ1FJRU9nU0VDQzYyRnhFZ0FBQkFnUnFDd2dRdGVldmV3SUVDQkFnMENVZ1FIU3h1WWdBQVFJRUNOUVdFQ0JxejFcLzNCQWdRSUVDZ1MwQ0E2R0p6RVFFQ0JBZ1FxQzBnUU5TZXYrNEpFQ0JBZ0VDWGdBRFJ4ZVlpQWdRSUVDQlFXMENBcUQxXC8zUk1nUUlBQWdTNEJBYUtMelVVRUNCQWdRS0MyZ0FCUmVcLzY2SjBDQUFBRUNYUUlDUkJlYml3Z1FJRUNBUUcwQkFhTDJcL0hWUGdBQUJBZ1M2QkFTSUxqWVhFU0JBZ0FDQjJnSUNSTzM1NjU0QUFRSUVDSFFKQ0JCZGJDNGlRSUFBQVFLMUJRU0kydlBYUFFFQ0JBZ1E2QklRSUxyWVhFU0FBQUVDQkdvTENCQzE1Njk3QWdRSUVDRFFKU0JBZExHNWlBQUJBZ1FJMUJZUUlHclBYXC9jZEFzXC9uOFwvRjRQSjRkbDdxRUFBRUN0eEVRSUc0elNvMFFJRUNBQUlIekJBU0k4NnpkaVFBQkFnUUkzRVpBZ0xqTktEVnlsb0N2TU02U2RoOENCRElMQ0JDWnA2TzJkQUxQNVwvTWZQaDZQXC81aXVNQVVSSUVEZ1pBRUI0bVJ3dDF0YjRQbDhcL3ZieGVQeHU3UzVVVDRBQWdYRUJBV0xjMEFvRUNCQWdRS0NjZ0FCUmJ1UWFKa0NBQUFFQzR3SUN4TGloRlFnUUlFQ0FRRGtCQWFMY3lEVk1nQUFCQWdUR0JRU0ljVU1yRUNCQWdBQ0JjZ0lDUkxtUmE1Z0FBUUlFQ0l3TENCRGpobFlnUUlBQUFRTGxCQVNJY2lQWE1BRUNCQWdRR0JjUUlNWU5yVUNBQUFFQ0JNb0pDQkRsUnE1aEFnUUlFQ0F3TGlCQWpCdGFnUUFCQWdRSWxCTVFJTXFOWE1NRUNCQWdRR0JjUUlBWU43UUNBUUlFQ0JBb0p5QkFsQnU1aGdrUUlFQ0F3TGlBQURGdWFBVUNCQWdRSUZCT1FJQW9OM0lORXlCQWdBQ0JjUUVCWXR6UUNnUUlFQ0JBb0p5QUFGRnU1Qm9tUUlBQUFRTGpBZ0xFdUtFVkNCQWdRSUJBT1FFQm90eklOVXlBQUFFQ0JNWUZCSWh4UXlzUUlFQ0FBSUZ5QWdKRXVaRnJtQUFCQWdRSWpBc0lFT09HVmlCQWdBQUJBdVVFQkloeUk5Y3dBUUlFQ0JBWUZ4QWd4ZzJ0UUlBQUFRSUV5Z2tJRU9WR3JtRUNCQWdRSURBdUlFQ01HMXFCQUFFQ0JBaVVFeEFneW8xY3d3UUlFQ0JBWUZ4QWdCZzN0QUlCQWdRSUVDZ25JRUNVRzdtR0NSQWdRSURBdUlBQU1XNW9CUUlFQ0JBZ1VFNUFnQ2czY2cwVElFQ0FBSUZ4QVFGaTNOQUtCQWdRSUVDZ25JQUFVVzdrR2laQWdBQUJBdU1DQXNTNG9SVUlFQ0JBZ0VBNUFRR2kzTWcxVElBQUFRSUV4Z1VFaUhGREt4QWdRSUFBZ1hJQ0FrUzVrV3VZQUFFQ0JBaU1Dd2dRNDRaV0lFQ0FBQUVDNVFRRWlISWoxekFCQWdRSUVCZ1hFQ0RHRGExQWdBQUJBZ1RLQ1FnUTVVYXVZUUlFQ0JBZ01DNGdRSXdiV29FQUFRSUVDSlFURUNES2pWekRCQWdRSUVCZ1hFQ0FHRGUwQWdFQ0JBZ1FLQ2NnUUpRYnVZWUpFQ0JBZ01DNGdBQXhibWdGQWdRSUVDQlFUa0NBS0RkeURSTWdRSUFBZ1hFQkFXTGMwQW9FQ0JBZ1FLQ2NnQUJSYnVRYUprQ0FBQUVDNHdJQ3hMaWhGUWdRSUVDQVFEa0JBYUxjeURWTWdBQUJBZ1RHQlFTSWNVTXJFQ0JBZ0FDQmNnSUNSTG1SYTVnQUFRSUVDSXdMQ0JEamhsWWdRSUFBQVFMbEJBU0ljaVBYTUFFQ0JBZ1FHQmNRSU1ZTnJVQ0FBQUVDQk1vSkNCRGxScTVoQWdRSUVDQXdMaUJBakJ0YWdRQUJBZ1FJbEJNUUlNcU5YTU1FQ0JBZ1FHQmNRSUFZTjdRQ0FRSUVDQkFvSnlCQWxCdTVoZ2tRSUVDQXdMaUFBREZ1YUFVQ0JBZ1FJRkJPUUlBb04zSU5FeUJBZ0FDQmNRRUJZdHpRQ2dRSUVDQkFvSnlBQUZGdTVCb21RSUFBQVFMakFnTEV1S0VWQ0JBZ1FJQkFPUUVCb3R6SU5VeUFBQUVDQk1ZRkJJaHhReXNRSUVDQUFJRnlBZ0pFdVpGcm1BQUJBZ1FJakFzSUVPT0dWaUJBZ0FBQkF1VUVCSWh5STljd0FRSUVDQkFZRnhBZ3hnMnRRSUFBQVFJRXlna0lFT1ZHcm1FQ0JBZ1FJREF1SUVDTUcxcUJBQUVDQkFpVUV4QWd5bzFjd3dRSUVDQkFZRnhBZ0JnM3RBSUJBZ1FJRUNnbklFQ1VHN21HQ1JBZ1FJREF1SUFBTVc1b0JRSUVDQkFnVUU1QWdDZzNjZzBUSUVDQUFJRnhBUUZpM05BS0JBZ1FJRUNnbklBQVVXN2tHaVpBZ0FBQkF1TUNBc1M0b1JVSUVDQkFnRUE1QVFHaTNNZzFUSUFBQVFJRXhnVUVpSEZES3hBZ1FJQUFnWElDQWtTNWtXdVlBQUVDQkFpTUN3Z1E0NFpXSUVDQUFBRUM1UVFFaUhJajF6QUJBZ1FJRUJnWEVDREdEYTFBZ0FBQkFnVEtDUWdRNVVhdVlRSUVDQkFnTUM0Z1FJd2JXb0VBQVFJRUNKUVRFQ0RLalZ6REJBZ1FJRUJnWEVDQUdEZTBBZ0VDQkFnUUtDY2dRSlFidVlZSkVDQkFnTUM0Z0FBeGJtZ0ZBZ1FJRUNCUVRrQ0FLRGR5RFJNZ1FJQUFnWEVCQVdMYzBBb0VDQkFnUUtDY2dBQlJidVFhSmtDQUFBRUM0d0lDeExpaEZRZ1FJRUNBUURrQkFhTGN5RFZNZ0FBQkFnVEdCUVNJY1VNckVDQkFnQUNCY2dJQ1JMbVJhNWdBQVFJRUNJd0xDQkRqaGxZZ1FJQUFBUUxsQkFTSWNpUFhNQUVDQkFnUUdCY1FJTVlOclVDQUFBRUNCTW9KQ0JEbFJxNWhBZ1FJRUNBd0xpQkFqQnRhZ1FBQkFnUUlsQk1RSU1xTlhNTUVDQkFnUUdCY1FJQVlON1FDQVFJRUNCQW9KeUJBbEJ1NWhna1FJRUNBd0xpQUFERnVhQVVDQkFnUUlGQk9RSUFvTjNJTkV5QkFnQUNCY1FFQll0elFDZ1FJRUNCQW9KeUFBRkZ1NUJvbVFJQUFBUUxqQWdMRXVLRVZDQkFnUUlCQU9RRUJvdHpJTlV5QUFBRUNCTVlGQkloeFF5c1FJRUNBQUlGeUFnSkV1WkZybUFBQkFnUUlqQXNJRU9PR1ZpQkFnQUFCQXVVRUJJaHlJOWN3QVFJRUNCQVlGeEFneGcydFFJQUFBUUlFeWdrSUVPVkdybUVDQkFnUUlEQXVJRUNNRzFxQkFBRUNCQWlVRXhBZ3lvMWN3d1FJRUNCQVlGeEFnQmczdEFJQkFnUUlFQ2duSUVDVUc3bUdDUkFnUUlEQXVJQUFNVzVvQlFJRUNCQWdVRTVBZ0NnMzh2czBcL0h3K0g0XC9INDNtZmpuUkNnQUNCZFFRRWlIVm1wVklDQkFnUUlKQkdRSUJJTXdxRkVDQkFnQUNCZFFRRWlIVm1wVklDQkFnUUlKQkdRSUJJTXdxRkVDQkFnQUNCZFFRRWlIVm1wVklDQkFnUUlKQkdRSUJJTXdxRkVDQkFnQUNCZFFRRWlIVm1wVklDQkFnUUlKQkdRSUJJTXdxRkVDQkFnQUNCZFFRRWlIVm1wVklDQkFnUUlKQkdRSUJJTXdxRkVDQkFnQUNCZFFRRWlIVm1wVklDQkFnUUlKQkdRSUJJTXdxRkVDQkFnQUNCZFFRRWlIVm1wVklDQkFnUUlKQkdRSUJJTXdxRkVDQkFnQUNCZFFRRWlIVm1wVklDQkFnUUlKQkdRSUJJTXdxRkVDQkFnQUNCZFFRRWlIVm1wVklDQkFnUUlKQkdRSUJJTXdxRkVDQkFnQUNCZFFRRWlIVm1wVklDQkFnUUlKQkdRSUJJTXdxRkVDQkFnQUNCZFFRRWlIVm1wVklDQkFnUUlKQkdRSUJJTXdxRkVDQkFnQUNCZFFRRWlIVm1wVklDQkFnUUlKQkdRSUJJTXdxRkVDQkFnQUNCZFFRRWlIVm1wVklDQkFnUUlKQkdRSUJJTXdxRkVDQkFnQUNCZFFRRWlIVm1wVklDQkFnUUlKQkdRSUJJTXdxRkVDQkFnQUNCZFFRRWlIVm1wVklDQkFnUUlKQkdRSUJJTXdxRkVDQkFnQUNCZFFRRWlIVm1wVklDQkFnUUlKQkdRSUJJTXdxRkVDQkFnQUNCZFFRRWlIVm1wVklDQkFnUUlKQkdRSUJJTXdxRkVDQkFnQUNCZFFRRWlIVm1wVklDQkFnUUlKQkdRSUJJTXdxRkVDQkFnQUNCZFFRRWlIVm1wVklDQkFnUUlKQkdRSUJJTXdxRkVDQkFnQUNCZFFRRWlIVm1wVklDQkFnUUlKQkdRSUJJTXdxRkVDQkFnQUNCZFFRRWlIVm1wVklDQkFnUUlKQkdRSUJJTXdxRkVDQkFnQUNCZFFRRWlIVm1wVklDQkFnUUlKQkdRSUJJTXdxRkVDQkFnQUNCZFFRRWlIVm1wVklDQkFnUUlKQkdRSUJJTXdxRkVDQkFnQUNCZFFRRWlIVm1wVklDQkFnUUlKQkdRSUJJTXdxRkVDQkFnQUNCZFFRRWlIVm1wVklDQkFnUUlKQkdRSUJJTXdxRkVDQkFnQUNCZFFRRWlIVm1wVklDQkFnUUlKQkdRSUJJTXdxRkVDQkFnQUNCZFFRRWlIVm1wVklDQkFnUUlKQkdRSUJJTXdxRkVDQkFnQUNCZFFRRWlIVm1wVklDQkFnUUlKQkdRSUJJTXdxRkVDQkFnQUNCZFFRRWlIVm1wVklDQkFnUUlKQkdRSUJJTXdxRkVDQkFnQUNCZFFRRWlIVm1wVklDQkFnUUlKQkdRSUJJTXdxRkVDQkFnQUNCZFFRRWlIVm1wVklDQkFnUUlKQkdRSUJJTXdxRkVDQkFnQUNCZFFRRWlIVm1wVklDQkFnUUlKQkdRSUJJTXdxRkVDQkFnQUNCZFFRRWlIVm1wVklDQkFnUUlKQkdRSUJJTXdxRkVDQkFnQUNCZFFRRWlIVm1wVklDQkFnUUlKQkdRSUJJTXdxRkVDQkFnQUNCZFFRRWlIVm1wVklDQkFnUUlKQkdRSUJJTXdxRkVDQkFnQUNCZFFRRWlIVm1wVklDQkFnUUlKQkdRSUJJTXdxRkVDQkFnQUNCZFFRRWlIVm1wVklDQkFnUUlKQkdRSUJJTXdxRkVDQkFnQUNCZFFRRWlIVm1wVklDQkFnUUlKQkdRSUJJTXdxRkVDQkFnQUNCZFFRRWlIVm1wVklDQkFnUUlKQkdRSUJJTXdxRkVDQkFnQUNCZFFRRWlIVm1wVklDQkFnUUlKQkdRSUJJTXdxRkVDQkFnQUNCZFFRRWlIVm1wVklDQkFnUUlKQkdRSUJJTXdxRkVDQkFnQUNCZFFRRWlIVm1wVklDQkFnUUlKQkdRSUJJTXdxRkVDQkFnQUNCZFFRRWlIVm1wVklDQkFnUUlKQkdRSUJJTXdxRkVDQkFnQUNCZFFRRWlIVm1wVklDQkFnUUlKQkdRSUJJTXdxRkVDQkFnQUNCZFFRRWlIVm1wVklDQkFnUUlKQkdRSUJJTXdxRkVDQkFnQUNCZFFRRWlIVm1wVklDQkFnUUlKQkdRSUJJTXdxRkVDQkFnQUNCZFFRRWlIVm1wVklDQkFnUUlKQkdRSUJJTXdxRkVDQkFnQUNCZFFRRWlIVm1wVklDQkFnUUlKQkdRSUJJTXdxRkVDQkFnQUNCZFFRRWlIVm1wVklDQkFnUUlKQkdRSUJJTXdxRkVDQkFnQUNCZFFRRWlIVm1wVklDQkFnUUlKQkdRSUJJTXdxRkVDQkFnQUNCZFFUK1AranFqMmNhcUwwK0FBQUFBRWxGVGtTdVFtQ0MiLCJiYXNlX21hcF93YWxscyI6ImlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFoQUFBQUt5Q0FZQUFBQ0UxT2RzQUFBZ0FFbEVRVlI0WHUzZHp3cnR6Sm9YNExUU1BiQVZSMHJia3g3bzNEXC8wQllqZ3hMa2dlQjNpMkR1UkJoRnhMRGdSdlFEeHo4ZzdFR21uRFlwbzI2enY3SFZPdm54SnF0Nmsza29sZVp6WTUreFVwZXFwTjFXXC9sYlgyUHI4MStYOEVDQkFnUUlBQWdhREFid1d2ZHprQkFnUUlFQ0JBWUJJZ0ZBRUJBZ1FJRUNBUUZoQWd3bVFhRUNCQWdBQUJBZ0tFR2lCQWdBQUJBZ1RDQWdKRW1Fd0RBZ1FJRUNCQVFJQlFBd1FJRUNCQWdFQllRSUFJazJsQWdBQUJBZ1FJQ0JCcWdBQUJBZ1FJRUFnTENCQmhNZzBJRUNCQWdBQUJBVUlORUNCQWdBQUJBbUVCQVNKTXBnRUJBZ1FJRUNBZ1FLZ0JBZ1FJRUNCQUlDd2dRSVRKTkNCQWdBQUJBZ1FFQ0RWQWdBQUJBZ1FJaEFVRWlEQ1pCZ1FJRUNCQWdJQUFvUVlJRUNCQWdBQ0JzSUFBRVNiVGdBQUJBZ1FJRUJBZzFBQUJBZ1FJRUNBUUZoQWd3bVFhRUNCQWdBQUJBZ0tFR2lCQWdBQUJBZ1RDQWdKRW1DemM0UFwvXC9hREczWHZ2dndoM1wvYVBEdDZcL01mdCs1eDVuNmZ0bXQxTXJcL3Y4dDVyYzRsZWY5UWpzOTJXUmVZOTlVMkFBSUVoQlFTSTlzdXlQS3pYRHM2YUEzMnRuODk2MVJ6RTg0TnU3XC9ybG55MDE1dmRidVwvZWFYdTExa2RDeHJOTzlVSGFtMys5OGxxR3N4cng5SmVtUkFBRUNBd3NJRU8wV3AzUVl6KzhVT1dUYmpmQmNUMWVQZWUzdHlya1pcL2FyMVZqalo2N3ZtdVRueXRtTHJiVktMZWVxREFJRnpBa2VlNlhOM0hMeDF6VVo0WmdyelQ0clJBXC9iTWZYdTJcL1JaVjZWTnJ6ekc1MTcwRVduMjlWZk5tNjRoTVpPTmNlODVMWDRGbDdrTjdvV3h2VDZvZDA5N2J2alhyMm42UHJKTTJ4d1VpNTlQeUxyM1d0UFIydTN1OVpVMzh6R0o4RWJMR2RyekVmdG15eFR4YmpxZFhYOSsxT1RMXC9yRGNKdmVhZWRaK3RldDg3a0d2OGE5OGMxYXpwa2JjMU5WNUhuXC9WbHNLbnhxQmxQelFIUjRsN2Z0VGs2XC95TnowZWJuQXEzV3NZZnJrYkdtMWxaRzUwY211WWVmTWNaV2k5MTZycTNHMWJLZjJnT281VDJQOUZVYlRHb095dm45YVwvczlNdWExKzJ3RmhxMVAwdEVhTEwzdEtQVVg5YXR4T2ZxTWw4WmFjK1wvUE5UVTFuaFdldG1xdGR1eFhYbGY2Ukx3WGlrdm1SMnNpNmxGYlE2WHhmdXVvZFA4emJ3blgzbmFYN3BmcW1OSDUya1pYKzFyemc3RzhObU9NSmZUYVA0XC9NNjl2bjNpdlY1WDJQWGxzcTVqTkZYTEpaZmlyY3UzNytRSlRXK1loMWFhekxlaXVOb2FhXC92WFhlMnF5V20xTnA0OTBhUjJrejNBcEQwVkJRTzk2MWVsN2JpS1B1cFhrdTc3c1hBdmVzOXc3M3ZUSHN6ZWRvdTBqdDlicDJ1VFwvVjd0MDFCMkcwSnM3TU9iSm5yVDNmM1wvK3Vac3lSUGIyMGQyN3Q4MWw3NVNcL0dVelBoNk1LY0JlbzIrZWpFVnE2XC8wMWdiVEZjWGpRUzJRdmJaNTdIMGlmQzc0V3h0OUh2Qjh1eHpmU1ljNzdYZE8rVFhsaXNTV3VjQnNcL1lOUk0wYTdnWEpSaVdXM2swcHhNMkQ0cHBkNlJOOWpXT3JTUjRKRUhzZkZHb0RmdVljdTV4TkdSTm9zZEhVSnRsV0JYU21uenVOOWN3OHRXMG4wS3RtU3B2OFwvQk5NelNhNkZ6Q2lPbWYyaWJOK3RmT29DVlRMdHplUlBmWHNQS0xtTGE4dmhhRFMrbTZGNk1pbitSYnpxYW43RnZlWmg5RWVjeXl0VDVNNVJZcTk5b2Fsd3FucDV3NFAxaDNHV0dQdG12NENMWjZSMmxHWFFzVDhBQ3p0QjdVSGI4M1l6dlIxcHUzOGsrUFIrYmE0XC85eW9aejNVckUzcG1yVkRkem1IclRtVjZySEg0YnEwTDlWQnlTUHk1MmRycHpid3JEazNuMmZ6RGhlXC9ZVGphZit2MFZJc2VlUzExdDRjK1V1U3V6Uk00dTRFY0hWbUxEYVhsMkpkOVJmck9lUGJXN3I4M3BzaDQ5OVlzWXk1SGE2Umx1eTJmNzE2OEZ6Zys0emg2ZGtUbkVEMGJvdjJ2QmNVemM2c2Q3XC9KNVAzUFB6VGxuZE5ycWdXaXg0UzFmRzVYbXUzWFBVbW91OVh1bTZMUjlsa0NyNXlPcXN2YzgxVzVLMytlcFJiM1BENWdqejNwa3pMVld5ejVMejMyTGc2NVZFS21kWThaMWUyN0xyM2krWm5zQm9rVjkxYzZ6cDNcL1BaMzhaMUZKTU16cHRuWHoySHVLOThSXC9kbEphRnRcL3d4MEpGK2E0dlpkYzhYNkxsaHJYMzYyUkt1M1F0YUhkdzlEdWV6MWRSampGZlZ3MW1iNkZ1VjB1Rlordk9zOGZiMjczR1wvcmJxdGZjYXJyWnQzK09QT0xZdWg1aUd1bm5EQ2hWbUdDVVBWNVFBQ1c4OUdaR09KSE9LMXo4ODNLR1wvVmMrbVpqb3hwK1did2JLakpYTmExZFNsWlJNYlRzcVwvSWZZOWNXMXJqclJvdWZhZ3NcL2ZtUnNkYTJpVHgzdFgyV3dsWDJtZEh0UTI3V1JGbytGTFViWUl2RlBkSkhsdUdSc1doekQ0R2VtMWJrK2FsNW81ZGQ3eTMzanF4cWFEbkdsbjFsemJlbTM3MURxeFFRZWo0UHk3bGNlZThhMXlQWFBPWU5STVwvTjVndGQ4d25xYzIzTlpqbGZ2T3k1SENrVWJlNHBrTDFwUlRiejByUHdGZDRiY1wvWjhSbHZsMG9FWUhlXC9vZmpWcnY1enpcL0t2ZnZUZE1yUzJmYUI4OWV3U0lhQlc0bnNETkJMSStlV1p0SHFWRHJ2UjZPM3Q1ZXQ2XC85YUZYc3MyMks3MXlYXC92enRSOUhMajl3N2IzOVdnc1kwWU15NnJMbDNMTjJqb3o1aUV2ckdsMGQ5NUdCMVFCa2JZNDE5M1lOZ1RzSVJMNWEySHNUdHR3VTk5NCtuSEVwSFhLbFB6OXo3MmpiN0FPaHRYSDBqZEdlUjNSUDM5dXJ6OVRva2JiTFVCSjlTN3oxTnEwVXFyUHFKZnBNckYwZjdXUDV4dkQ3bjZOMVVmWE1wWFRhNk4rQ3FKcUFpd2pjWE9ESVJsdWE4bndqYnZXTTEyeGtHUnR4OU1OSXpUaExmcVVcL0x4MUlwZmJMUDgrb2dlVTlhclwvYWpZNDllbjNOVnh1Uk54blIrNis1dEtqYnRUb3RyV3ZwT1QxVHk3ZCtBXC9GWnBOWXBcL1d5aGFFK0F3SEdCbW9PODlVWmNld2pPcjZzWjUzR0ZYN1ZzRlNEbVhxWEQ1dXlZMXo2ZDk3am44cjdSZTBZRHh4R25veUU3T3BmdjJHcnZKMEJzckdZdDRKRmkwSVlBZ2ZZQ1Z4N015MCtrZTdQTEhtZXI4TEQzRmlMNis0RGxuRXRqUEhyd0hhbXE1VjRmdlhkTmdKamZJOXJcL1dyQXF6VFBxZThWNWRcL3MzRU45RktHR1hGc3VmRXlCd25VRDBUZUtaVDAxYnMxdzdJTmMyNWVoWWo2aG1iY3dad2VmSVlSbzFxZmt4WlNrc2xjNktTSUNzSGZcL1pkV3p4dHExMnJFZXU2XC9Fc2RQMzN4dGNRcmtobVJ4WkRHd0p2RklpR1wvN09iY2lsQWxBNnI3RDFtSG81YUI2WFdcL1VVTzVlKzFhMjhMU3BcL3VTMjhZU2tHdjFINjVwcTNPakl6QU50SWU4YWdBTVlmTjJtUkdXanhqSWZBRWdhMVg0N1VcL3lHdTEyWDhzNTVcLzRhajladDd6XC9kd3daQjFyV1lWYmoxTnJvYk4zdmpibmxXTFBNejg2XC9SZnRvOEQ5OHo1WUxFaDFFVnVLT2pzUDFCQWlzQ3l5ZjBkSXoyK3ZEd2RZNFN1TTd1ODVabitxeXg3MzhBSGZsdmg5ZGc4eURQclB2NkR4Ylg5XC9sV2J5eWtIbytOSzBYUjM4RW5peXdkMER2N1JtdE42MnJnc0xXMm1aK2hmSGtlaHAxYmdMRXlaVVJJRTRDYWs3Z2dRTFJBTkU2T0N5XC9zbGdTWFwvWGhRNEI0WUxFXC9kRW9aeitRdnFLNEtFRmR0QUErdEZkTWkwRlJnNjVQWlwvSGNJeTlmaThcLzk4WmwrcCtWUjQxZjRoUURRdE01MGxDV1I5MVRaY2dQZ002TXhtaytTdld3S3ZGMWc3cEdzQ3hObm51V2J6MnhwSDVxSXRnMDFOME1rY2o3NEpsTDVxYXhYcU42WFBQdXhubHZDcVR4Rm54cXd0Z1RjTHJCM2NyVitWcmdXSTVRZU5Ld0xFWnd4cmJ5QjhDSHJ6RXpIbTNHdENlSk9SQ3hCTkdIVkM0QlVDcFFEUmVqXC9aQ2lkWGZmaW9DVGV2S0FTVEhGNmdkYkJmblhEckJ6NmlldFVtRUJtamF3a1ErSTFBendDeHR3SFc3QjAxMTBUV1ZuaUlhTG4yYWdFQjR1b1ZjSDhDQkg0bThBMFFQUTdUMGdiWU9pQ1VscnJIbkV0ajhPY0VhZ1ZLejA5dFA3dlhlUVBSaEZFbkJGNGhzSFdJZmlmZllqOVp2dVdvQ1FvOWZ1QW9RTHlpeEI4elNRSGlNVXRwSWdTZUliRDNCdUpzZU5qNllXUk5nRmpUUGRwdWE2VzJRc3JaZVQrak1zeGlKQUVcL29oeHBOWXlGQUlHZkJQYmVRQnc5U1BjTyt1V2ZiZjNuMHZJY0hkdThYd0dpcE96UFJ4SG84dmJoTTlrV0Q5WlJ0TmFmRUk2T1F6c0NCUFlGTXIrNk9Cb0tvbXZXWXFcL3I5c2t1T2puWEU1Z0pDQkRLZ1FDQllRUXkzanhzZmJyUG52VFJJT0UzRU5rcm9cLzlXQXQyQzd0R0g2ZXhFbDY4RHpcL2FuUFFFQ2VRSTlEc1wvU1c0N3Y3RDU3MXRGcnorNTM4OTlwZUlPYVYyOTZQaVwvUTVTM0UyUWZxNkRRRmlLTnkyaEY0cmtDWFRlKzVmR1pHNE5jQ1haNGxBVUxGRVNBd21zQmYrVEdnXC96bmF3SXlId0UwRUhoMGdQbXZnRmVCTkt0RXdDUkFnUU9CMkF1bHYrcTk2QXlGQTNLNFdEWmdBQVFJRWJpTGdEY1JORnNvd0NSQWdRSURBU0FMcGJ4OCtrXC9VR1lxUWxOeFlDQkFnUUlIQmV3QnVJODRaNklFQ0FBQUVDcnhQbzhtOUJYUFVHb2tzNmVsM0ptREFCQWdRSXZGMmcyXC9sNlJZRG9Ocm0zVjVINUV5QkFnTURyQkxxZHNiMERSSmZYS3E4ckZ4TW1RSUFBQVFLXC9FdWgyenZZTUVOMVNrU29pUUlBQUFRSXZGWGg4Z09nWlhGNWFRNlpOZ0FBQkFpOFU2UEdcL1hmTVRhKytEM0w4KytjSnFObVVDQkFnUTZDclE1UzJFQU5GMVRkMk1BQUVDQkFpa0N6enlINUx5QmlLOWJ0eUFBQUVDQkY0dTBPVTNoejNlUUhUN1B1YmxCV1A2QkFnUUlFRGdJXC9DSUFMRVZIcTc0XC9ZV3lJa0NBQUFFQ2J4QzRmWUFRSHQ1UXB1WklnQUFCQWlNS3BQOE9JdXNyakwzdzRPM0RpS1ZtVEFRSUVDRHdCSUV1Yng4eURcL0l1ZjRYa0NTdHREZ1FJRUNCQW9LSEE0d0pFMXB1T2h1YTZJa0NBQUFFQ3R4ZDRWSUFRSG01Zmp5WkFnQUFCQWpjU1NQXC85UTYrdk1BU0lHMVdkb1JJZ1FJREE3UVVFaU5zdm9Ra1FJRUNBQUlIK0FsMit4c2g0TzlCbDRQM1h3eDBKRUNCQWdNQXRCTHFjd3dMRUxXckJJQWtRSUVDQVFMVkFsNzhKS1VCVXI0Y0xieWJnZjNmbFpndG11QVFJTkJPNGJZRDRDSFI1ZmRLTVdrZFBFK2p5QTZLbm9aa1BBUUtQRWVoeUJtZThnUkFnSGxPRHQ1MUlsNGZudGpvR1RvREEwd1c2N0lFOUFrVFdQWjVlQU9aM1hNRFwvQXV4eE95MEpFTGkzUUpmdzhDSEtPdHk3VGVEZTYyejBpUUtsN3dEOVJpSVJYOWNFQ0Z3bTBPMzh6UW9RODY4eE11OXgyUXE1OGUwRWFnS0ZXcjNkc2hvd0FRSUxnZHNIQ0Q5aVU5T2pDZFFFaU15M2NxTjVHQThCQXM4VEtPMXpUV2VjOVlsTGdHaTZURHByTExDc1RcL1hhR0ZoM0JBaGNJdkNvQUpFVlVDNVpHVGQ5cklBQThkaWxOVEVDcnhUb3NxZGxIZkIrb1BiS21yM2xwTHM4YUxlVU1XZ0NCTzRxMEdWZnl3NFF2bE8rYVwvbTlZOXhkSHJKM1VKb2xBUUlEQ1hUWjJ3U0lnVmJjVUxvTGVGUFduZHdOQ1JEb0pKQWVJbm9GaU05RXN1N1ZhUzNjNW1FQzZRXC9Ydzd4TWh3Q0Ird2gwK2F1Y1dZZTZmd253UG9YMnhwRUtEMjljZFhNbThBNkJibjhUSXl0QWZKWnBLMFQ0WGNRN2luamtXUW9RSTYrT3NSRWdFQlhZTzJcL1R6dHlyQXNRWEpcL1ArMFFWd1wvVHNFaElkM3JMTlpFbmlMUUNrODNESkFmQmZQUDlyemxqSyt4eno5Y1BJZTYyU1VCQWpVQzF6eXhyXC8zRzRBdVAreW9OM2ZseXdTOGZYalpncHN1Z1pjSWxBSkV5bDlrdURKQTlMNzNTK3JJTkRjRWhBZWxRWURBVXdVRWlLZXVySGtOSVNCQURMRU1Ca0dBUUlMQTN0OThUSG43a1BiRGloMGNtM2hDNWVoeVU4Qlhab3FEQUlFM0NMd2lRSHdXMG9cL1kzbERPWTh4UmdCaGpIWXlDQUlGY2dkTGZ4RWo1eVVCS3B3V25idlwvSVJlNTY2ZjBHQXQ1NDNXQ1JESkVBZ2RNQ3BkOUFuTDdCV2dlakJJZ3J2azVKQWRYcE1BTEN3ekJMWVNBRUNDUUx2Q1pBekxcL0dtSnRlRVdhUzExVDNGd2tJRHhmQnV5MEJBcGNJdkNwQXJJVUlBZUtTdW52a1RRV0lSeTZyU1JFZ3NDSnd5ZThmcnY3YXdBXC9jUEF0WkFnSkVscXgrQ1JBWVVjQWJpQkZYeFpodUp5Q1kzbTdKREpnQWdjWUNYZmJCcTc4MjhFbXhjZFVNMXQwVmYyVlhUUTFXQklaRGdFQjNnY2NIQ0J0OTk1cnFmc01yMXJqTGc5TmQwZzBKRUNCUUw5Qmw3NzN5RFVTWENkWjd1N0t4d0JYZnlmazNSaG92b3U0SUVMaWxRSmNQVWdMRUxXdmpGb08rN0pmQk01MHJ2a0s1eGVJWUpBRUNqeFlRSUI2OXZNK2VYQ2s4ekdlZkhXTFhRc1Rudjh1Kzc3TlgyT3dJRUJoWlFJQVllWFdNYlZjZ0VpQytIV1VlNkw0dVU3QUVDTHhKb012WHVabWJkbW14Yk9vbG9YdisrWkh3OEpscGoxcmNxamx2Sk81WmEwWk5nTUM2Z0FDaE1tNHBVUFBxYkhtUTlcLzZ0Z3ZCNnk5SXlhQUlFQWdJMWUzR2d1MTllMnVOVDM5NEFiZVNubG1cL0l4cVdpM1hzTEVQazZvMFh0dE9oanlFVXdLQUlFWGkxUTJvZWI0QWdRVFJoMThrT2dwbWozRHUyYTlwOWJ0WHc5MTdJdmhVQ0FBSUVSQkxwOE9CSWdSbGpxNTR5aEpnQ1VDcnQwb0pmK1BLcTUxWlwvZlJVUWxYVStBd0NnQ3BYMjJ5VGdGaUNhTU9sbDVLN0Nzclpwd01ZZXNcL1RIbTJSb3UzZWRzXC80cURBQUVDdlFVZUh5QzZUTEQzcXIzOGZuc2g0ZWg2N3gzd1p3XC8zVW5qNEx1ZlorN3k4TEV5ZkFJSE9BdEVQYkllR2QrWEdlUFJBT1RSUmpib0tsQTdtYU4xbFBRdzFQK2ljaHdoZmEzUXRJemNqUU9DZ1FKZnpOYnFSSDV6TGFyTXVFMnc1WUgyRkJMWkN4TkdhYVwvbmJoOXErYXE4THdiaVlBQUVDeVFKWkg3cCtOdXlqbTNtTHVRc1FMUlRINzZQMU9yYzQxQ05qYWgyRXhsOHhJeVJBNE80Q0FzVGRWOUQ0VXdUT0h1aDc0V0h2SzRvdUQyU0ttRTRKRUhpYlFKZjk2cW8zRUYwbTk3YUtlZGw4ajd5SmlMeDUrSEF1QTBXMFwvY3VXeEhRSkVCaEU0TWorR0I3NkZRR2l5OFRDRWhyY1ZTQlNUNlVBVVByenI5SHlPait1dkd2MUdEZUJad3BFOXNYREFyMEN4TlpyNStcL0FlNDNqTUpTR3d3dVUzbXJWaElQYXIwZHFyeHNlelFBSkVIaWNRSmZ3OEZITFByaEx3VUdBZUZ6dFhqcWh2UkJ4SmtCOG41VnZIXC9Qbnh0dUlTNWZjelFrUVdCR28yZTlPdzJVR0NPSGg5UExvNEtEQTJxRWVEYXQ3OVZ2NlZ6WjdoUE9ETkpvUklQQUNnZHNHaU5yZ1lKTjlRUlZmUE1YUzF4cDd3eXZWOFZyNDd2TFFYbXpxOWdRSWpDXC9RWlNcL0tlQU94dFdsM21kRDQ2MnFFSFFYT0JJaTFZZGJVc0I5VWRseGd0eUpBWUZXZ1pxODZUWmNSSUQ2RDJocTh6Zlgwa3VrZ0lORGxJUXFNeDZVRUNCRG9JZEJsNytzZElIckF1UWVCTGc4UFpnSUVDQXdxMEdVUEZDQUdYWDNET2lYUTVlRTVOVUtOQ1JBZ2tDZlFaUThVSVBJV1VNXC9YQ0hSNWNLNlptcnNTSUVDZ1NxRExQaWhBVksyRmkyNGswT1hCdVpHSG9SSWc4RDZCTHZ0Z2p3RHhXYnFzKzd5dkxNeDRUNkQxMzdxZ1RZQUFnVHNLclAwMTlPYm5jUE1PZjBqYnlPOVljdmNlYzVmRWZXOGlveWRBNEFVQ1dcLytHVGZQenZubUhzOFd4b2IrZ1VnZWFvbm9iYURFTWhRQ0JTd1c2ZklnWElDNWRZemR2SkNBOE5JTFVEUUVDanhEb3NpZG1CWWd1NmVjUnkyd1NMUVM2UEN3dEJxb1BBZ1FJZEJEb3NpZjJDQkJaOStpd0JtNXhBNEV1RDhvTkhBeVJBQUVDWDRFdSsyTFc0ZDVsOEdxRndPeWZUYytxWmNnRUNCQzRtMENYTXpocjArMHkrTHV0cVBFMkZWQmpUVGwxUm9EQWd3UzY3SThDeElNcTVtVlQrVDRnV1RYOE1rN1RKVURnUVFJQ3hJTVcwMVRhQ25SNU9Ob09XVzhFQ0JEb0p0QmxqOHo2OU5abDhOMld3bzFHRXZBM2ZFWmFEV01oUUdCRWdTNW5zQUF4NHRJYjA1NUFsd2ZERWhBZ1FPRG1BdWxmOHdvUU42K1FsdzFmZUhqWmdwc3VBUUtIQmRMM3k2d0E4Wmx4K3VBUHMycDRWd0UxZGRlVk0yNENCSG9LZE5rckJZaWVTK3BlTFFRK0QwWm0zYllZb3o0SUVDQndwY0N0QTRRZnVsMVpPdTVOZ0FBQkFtOFc2SElHWjMyUzY1SiszbHdkNWs2QUFBRUNCRFlFYmhzZ3VneGMyUkFnUUlBQUFRS3JBbDNPNFl3M0VGMEdybWdJRUNCQWdBQ0Jad1dJejJ4OGhhR3FDUkFnUUlEQU5RSmR6dUNNTnhBQ3hEVUY0NjRFQ0JBZ1FLRGJHWndWSU9ZVHlMeUhVaUZBZ0FBQkFnUitMckQ4S2NIblQ1dWZ4YzA3WEh4OWtUSm9sVUtBQUFFQ0JBanNDcVRcL0hsR0FVSUVFQ0JBZ1FPQjVBdWx2SVRJQ1JMZnZYNTYzM21aRWdBQUJBZ1JPQzZTSGg4eXZGN3I4QXZRMHNRNElFQ0JBZ01EekJOS1wvdnNnS0VGMEdcL3J6MU5pTUNCQWdRSU5CRW9NczU3Q3VNSm11bEV3SUVDQkFnTUl5QXJ6Q0dXUW9ESVVDQUFBRUM5eEVRSU82elZrWktnQUFCQWdTR0VSQWdobGtLQXlGQWdBQUJBdmNSRUNEdXMxWkdTb0FBQVFJRWhoRVFJSVpaQ2dNaFFJQUFBUUwzRVJBZzdyTldSa3FBQUFFQ0JJWVNTUCtybkZsXC9qZk9qK0IxODVqMkdXaTJESVVDQUFBRUNnd2dJRUlNc2hHRVFJRUNBQUlHN0NIVDUxNkF6M3c1NEEzR1hVak5PQWdRSUVIaVNRUHJiaHcrV0FQR2trakVYQWdRSUVDRHdtNThRZkMxU3p2cVVUdjMrUWYwU0lFQ0FBSUhMQkc3OUJxTEw5eStYTFkwYkV5QkFnQUNCY1FVRWlISFh4c2dJRUNCQWdNQ3dBZ0xFc0V0allBUUlFQ0JBWUZ3QkFXTGN0VEV5QWdRSUVDQXdySUFBTWV6U0dCZ0JBZ1FJRUJoWDROYlwvbFBXSDFiOERNVzV4R1JrQkFnUUlQRmRBZ0hqdTJwb1pBUUlFQ0JCSUZValwvR2lQcjM0SHdCaUsxTG5ST2dBQUJBZ1EyQmRMRHcrZk9Bb1FLSkVDQUFBRUN6eElRSUo2MW5tWkRnQUFCQWdTNkNOdzZRUGlYS0x2VWlKc1FJRUNBQUlGZkNBZ1Fpb0lBQVFJRUNCQUlDd2dRWVRJTkNCQWdRSUFBQVFGQ0RSQWdRQ0FvOE5rNFdcLzQ0ZksrXC8wcDk5aHI0MkZ2OUdUbkJSWFI0V1dQdDNJTGJxTWR6NXQwSExCMjArQ0wrQk9Md2tHaElnOEVPZzFUNlNkZER2QllHamYyYnhDYlFRdVBVXC9KTlhxd1c4QnFROENCTm9MYkgzQzJmcHdzbmY5M3FmMCtjaVBmdUFwZmVMZkNoaG5Rc0RSZTdaZktUMitVVUNBZU9PcW16T0Jtd2lVQWtUR05FWUtFSlwvNWxkNXNiSTIzRkM0eTdQVDVMb0ZiXC93YmkrM0ExXC84N2xYVFZndGdTR0ZXZ1JJRDRIYktTZk13RmlyKzJaSUxBWEVnU0lZY3YzRlFOTFwveWJnNkFPNXBcLzk5R0tYc1Y5VG83U2JaK2tkMnR3Tm9OT0M5SDJrZERRVnJuNXBhYklLbE5UOFNJRXI3VzZsUEg2NGFGYUp1VmdWYVBEZEYycXdBMGVKN3krTGdYVURnZ0VEcE1EblE1U3ViTERlbytZRWEyYnkyK3ZrZXNKRyt0aGFpdE9hbHdcLzdJMzZRNDhcL3VKVnhhVVNUY1ZhUEhjRkFlVUVTRG1YMTlJMmNVbGNFRkhnUzRQVmNmNVhIV3JubzZ0N25Va0pNejNzcTBRY2VScml0TGJpNnZXMVgyZkk5RHF1ZGtWeVE0UVdmMFwvWjVuTnBKZkEydXZ4WHZkKzJuMTZXMFlPM0sxcmwxK3RMdGVrRkFUVzNxcnUzZXQ3XC9iemYwbGM3dFg4YnhRZXoyQk5WT2t5MzF1WG9ldFN1YyttNitUclhYTHYyMWk2MVZySU8rTktDeFpiZjFRVE9DZlErOE02TmR2eldhNXRaMWw2eWZLTTV2czYxSTh4Y2gydG5kdXp1dFFmdnNkNnZiVlg3SStTMG1zanFXSUM0dHJEY1wvZWNDQWtUN2l1Z1ZJcDU4QUxSZmxiYlwvQ21mRytIcjMrZmI2eVRyamYxckhyTTRGaU42UGlmdXRDYWpEM0xyb0hjejJEb1BsWGhZSk9HZXVMZTJoTFY2UFI3NE9LWTBudHlMRzZ2MXNlS2o5aERcL1dySDh6bXZSYXlMcUJqWHY3RTNDVythaEZmTlc0MUdBZmVjNTluRXQzc1E2XC9GRm9MdUh0aGNjMndGRUsrK1wvblpjRHNQaVorK2x1Rmw3VDZsZ0pOKzFtVGQ0TzNGXC9KM1wvZDRHWFA2VEtjaTl0TWlQXC8rZmVoYVRYR3Q5ZGdLOGRTUDV4TFFuMyszRHJVQllpYTFaanZSVmU0N2dXSXZmRjNIMnZXUWRaOUlqVlZjY0UxeXlDeDlpcnlnbUVOY2N2SXE5M29nTlZmVk96NDlheVAyN1ZzYVIzR0NSQXRQZ3pkWWowRmlKYVA4SHBmTmQrdnpvTkdcL29qR3UwUExoNlZsWCtOSmpUY2kzbU9zaVhXbzIzOXJ6cnl6YnlCYXJNVXR6b1FhekNPUFJ3dkFJXC9jZHRjMVdNU3pEUmRaNmpPcVNNYTViUEhnWkU3K29UOFwvNlJmQ3oyMXFEN1RVNHNzZTJEQkNma1IzWjE2UDdXSXUzSHVGS1BqS3gycHRFQVdyN2ZjcDFOVzhtN2pUWFN3cDRBYVRtK2xlTXc2dVwvK2ZLTzFxQXVRSlRPdXpYSFBkdTFcL2Vib3Z2N2RQK2ZcL1wvM2RXcFI5TExtZVwvOXR1N2xDb3RnUjY5cVlMZWx6dVNpbyt1Ulk5Mkk2ejNDR1BvWVQzYVBiaVBzU0xDYzkxWEdMV3J0ZnpoZTIyNzBuVjdmOTE0ZnZDdkJaRlMzMXRcL25uWE9IM3ExVXByRWFJZmpTQnZjMFhSYU1yXC95ejBkWTc1SFcrTXExNkgxdjdyM0Z5NSswMHc2TGNhWWFHc25SZ3pnclFKUUd2eGN3dHQ0MGZQNzd2YmNVYVRXUjFmRW9HOHRvQlwvWUloMjJwZ0tOXC92dldBbG1xclZZMjA2aWM2YjlkUEVcL3R4cXNBYmlQTnZJUGIyckpxdk1zNVV3OWE5SSt0NmRDOCtQTzdTSm4razQxRU95YjNrbVRIdmt0VW9McVZ4SHZuekkwSHQ3T0Z6dHYyUmVXcnpjd0ZyTUU1RlJBNmFjVWJkWnlRZm02MVA5bGxud2RvOVA3UHR0VTVkbnMwTXZCRU95cHJYVmhselgzc2NqaHl1ZlI2cjluZUpGdTNSaHlsNm5cL1l6MWVOWHdGcU1VUXRIbjZVeFJtOFVyUVc2UEpjWmg2Z0E4WnRTYUdteGxXaGJGOTdaXC9tcm5mRFJZMWZaXC9kaDdhMXdsMDJhanFodkxxcXdTSVZ5XC9cL0x5YmY1Ym5NQ0JEejF6U2ZcL3p2ckhxVnlLYjJGV1B2RmErdXh0bHpFdXdTSXlQb2ZDUkVDUktueStcLzY1ZzZ1djk5YmR0dmE3MW52YUdMTTFpcEpBeTdObjgxNVp4ZFZsOENYQjJmZE5GWmYrZEVrTGo5b0RiaFNqV3B2b2RhWDVIZG53anJTSmp0djE5UUtsTmE3dnlaVm5CVW9mbU9iOXQ5am56bzVYKzN5QjlIQ2ZWVWdqYlN4Ym4zS1BmUG90TFhsdGVJaDhTaVwvZGNcL1FcLzMzdHpzcXlUMm12WDVweFZ5NlA3WGpXK1NLMWZOY2EzM2JjMlJIaFczbEVaQWtTRGRhNE5DbWVcL0lvaUVwdVhDbnIxM0E2YlVMdGJtZDhScitTbktJWmE2Ykx1ZFI5YnZ1bEcrNTg1YjYxRzdcLzcxSDZoMHo3Zko4WmlYUjBUYjI3SWZveUdMTkQ5VTNCSWpQWTN1MDN2YnFhYlJhZThmMjVOK0FHRzJkUzU4MlMzOCsybnlNNTV4QWxcL1UrdXFHWHBqYmlwbDRhMDlGRFwvR3g0S0ZrKzVjK1BPQzJcLzZ0a0tJZGtCOFNscjBHb2VmN29JZzFuN1NLdng2cWZmdnpcL0FlZ3lCMndhSTBrRjlOV1wvcGU4TElacmpWVjZTUHF6MTYzejhTSkNLMUpFVGtyK1J2VDlQMGI2ZHArbnV6VzZuMWZQY1dkK2h5b0xRWXFENnFCZlkrOUhaWjc0eUhQN0xwVjBzMXZMQVVJR3BmdFpmNnliQnR5SEJaVjdVQjRrZ2RDUkg1eTNwa1hmSkg1UTRsZ2RybnJ0U1BQNzlXb1BaRDYyMER4UEsxODRnSDZkN2hYeHB2S1RoOHk2dlV6N1ZsZU8zZFM1dFo2YzlMb3hja1NrTG5cL3Z6cytweTd1OVpIQkt6WkViV3gycFRPbnUrXC9iZFR0RE1vNjVPNVFyTFZKN2h1SWxvdXpmRlBoazFuOFlWdldTU3ZEYUlEWWV4VVluOVh6Vzl6aCtYNytLc1JtYU0xaVhpTmV2YlVcL1hyWlwvQ1JBXC9MNU0xajlxZ0VUMjBSaXpRSzhaMDVtMVFhYng3bTZZTnRhUzNcL2VldGd0N3hFV2daRlZEdlViSHhyaDl1RGQ4Y0lMNXZGdVpsTXZlb0RRN3pOeFNsUHNjcnlYRkdsSFVvN2ZWN1dYSWZoXC8zUVNMTFc2dEJnTktvU0dPN3dxUnExaTVZQzMzWE1PcnRENGxtRHVFdXhscjVUV3NOY21uMFBvZmxoZEpmNWg0cWx3OFVaQjlQV202R2hIc1FPdGkxdm9iNWJhdmJyUzgzM3M4NjYwMUJyMkNOQWZDQ3o3dE5pa1NJaDR2czdpSzAzRmRcL1wvUHVNZ2JESFhPXC9TUjhWVlE1RzNTSFl5dUhxTUFjZlVLSEx2XC9VSWZQc1NtOHZsWEdcL25nWU5ldGd2OXNCV2hzaTF1cHBFQjBBQUI4WFNVUkJWSDVJK2NXZmg0dTd6Zjl3QVNVMmJHazRmMHUwSEhMV001QkljMG5YdnpkTjBcLytZM2RsaGRNa3luTHFwTlR2RmQzbmo0VDRJWlcyZUxUZlwvWHF0V0d5TDJEcUN0cnpGR2Z3dlR5emg2bjR3Nnl1Z3pPcTg3WHYrM3AybjZ6d0xFSFpmdXB6RUxEN2RkdWw4UFhJQVlmQTFyUThUOFRjVGExeHJmYVRxc3ppOTRodUZRcndIUEUxM1Nnd1BwRXZiRE43VmVoK21HYWZpS0FISDN6VGtTSW1vcUsrTUFyTG52azY3SitzN2QyaHlyRW9mUk1iY3JXMW16S1wvWGIzSHU0c3pYaks0d25iTXFsRUJGeGU0SkhtXC9JXC8xMHVXWTFhXC81Mlk3Zm1zSDBuaHJ0QmUwcmRkNDYzVmtSRnZyZU1uNlJnN0N5R1N6UGpGR3huRDIydm1DZkhcL2JjSFJlRHFtenFcL0h6XC9cL25vVDJcL0x2d2x6cHBhUHJ1djVXZDIzaDBzMnJQdHlwWSs4OUtIbk80QXp6MG42Sk55Z0tGQUtFTXU5c2RqaG1RdXlpdWtwR1wvSnlzWTdNYTdqdnJjNFV6TVZ0bFwvNUgxbU5yQ2kzN3VwaXB5KzBGaUM3TTFUZlplemJtbldUdCtkVURkZUVwQVFIaUZGXC9cL3h2TzNEXC9OXC81NkgyUVd3UlF2clBldXc3Wm4wWDZFMVJcL2JvTEVQVldQYTRVZ0hzb1gzOFBBZUw2TlFpTjRPaURXZk45Wk5mWFRhRlpqMzl4MWdGMmRMM0hGMnM3d2l6XC90cU44VDJcL0M3enZXZW0rZHUrOWR0WitpbzB2enBHS09MRXBrM2piZ2FGWDlcL1Bvc3Y2eTNHK2RtTzE3ckxQXC94Wm5xUEVVWDJubnZNeUNqWEJBU0lHOWJGV29qNGZyWHhuVTRrYUh6YTJJQ1BGMExVT25vbklhSXNwbjdMUnIydnlINHVlc1wvSFwvWDRwc0xjM2RWOVwvYnlEcVNyVG02NGdqbGpiaE92XC81VlQwXC9hZlc4VjF6aTJoWnE5MXJcLzBxZlRJXC92UmVETXlvdHE5NzVJUFBWbEY5c1NOZHl0RUxOOUVSRXErZTJLTURHN0FhNitvcXl2dU9TRDlMNFlrUUl5M1N0Wmt2RFZwT2FLdHZlaVM4UENabUFBUlc5NVdCXC83YWd1K3R4NW1RRXB2aHVGYzd5TWRhRzRmVldPdnhHWTAxR1c5TldvNm9aZ1wvc1dnTVpBZUt5Tk5SeXBYYjZhaEVpNW9FZ1VoU1pvYThUMzZIYlBMMm1EcUZjM0tqclJuWHhYTzl5ZTJ0eWw1VTZQczRXNThcL3h1eTlhOWdnUUdmZG9CbkNnbzR3RkxJV0kwcDhmbU1adG1yeDU3aU12a3NOcXZOV3hKdU90U2VzUlpad1wvaDhlWWNiZ1wvZWNQUFhMeXRUOWx2XC92U2Q2WDM0b2RId0p3R0gxWGlGWUUzR1c1UFdJeHBxVHhRZzFwZDM3VGNIUFJadTY3Y1JiXC96cW9vZDM2NGY3VGYwNXJNWmJiY1wvTWVHdlNla1JEZlVEUENCRHpUeWQzUGZpV0FhTG5nN2tWSXJMV3FuV0J0K2h2cUlla3hZUWUyRWZQWitLQmZDbFRFdXBTV0lmcWRLaTlNZXRRdXZ2bWN2WFhCbGZmXC8rb25acWlINUdxTVFlOVwvOTJkOFVOWlR3N0ltcFwvaHUwWGlvdmJGSGdMampXNGg1a2xcLzdPaU83MHQ0Y0lJWjZRTElYK3NiOU82ekdXenhyTXQ2YXRCN1JVR3Y4eGdCUldvQXJYd1ArempSTlwvMnVhcGorM1VuVlphOVc2d01cLzBKenljMGV2YnR2UWM5UjJOdXozaHEyT3JXQllZNnJuTE9wUkdQZ2oyZnFqNFhiNHNsM0o1VE5PXC9uS2JwSDcwd1FJeGNNelhyOXJacmh0ckkzb2FcL01WOXI4dXhDR0c1OXN3N0trUStEVW9ESU1xa3Q3WDh3VGRPXC8rWEh4ZHl4WGZJMVNPOTVXMTQxY002M20rS1IraHR2TW5vUjdZQzdXNHdEYXpab010MGRtSFpiRFRYUldLSHNCSXNzalVxZVwvTzAzVG55d0NSS1Q5M2E1dDhYdVBGbjNjemUzcThUcXdybDZCbjlcL2Zlb3kxSGhtakdlNWN6VGd3UjlcL010d0pFaGtWR0VUMnB6NjFhT2ZvN2xPRWVzQ2N0MWtZSTk5eU1zY2dDeEJqcmtEMktvZFk1NitFZmFwS0xGUjA5NEdRWDRFajlaNnpGeUxVM2t2M1pzUndOZVdmdnFcLzI2Z0xwXC9SMlVNdGM0Q1JON1wvSXVrN3lybk5MRnZcL3htT29oNndOMFhDOUNCQmpMWW1hSDJzOXNrWXoxRHFcL0xVQU1oWjlWWWZyOVNjQUJsMXNJZkhOOW83M2IyNkppOTd4K3FIVitXNEQ0SGl4Wjg3NW5TUm8xZ2JpQUFCRTN5MnpoOXorWnV1UDBcL2JvQThhRjNZSTlUZ0VaQ29JWEFVQnRaaXduZHZBOEI0dVlMV0RuOG9aNjdySU5kTVZkV2c4c0kzRlJncUkzc3BvYXRoMTNhZDF2XC8xcWoxK1BWWEZoanF1Uk1neWd2bUNnSUVmaWt3MUVabWdYNHRVQW9ScU80dE1OUnpKMERjdTVpTW5zQlZBa050WkZjaERIamZyUURoTnlzRExsWndTTU05Y3dKRWNBVmRUb0RBVHdMRGJXWXZYNWRsY1Bod1pPM3ZMNmUrYlByRFBYTlpCZVkxMm1VMTVzWUV1Z2dNdDVsMW1mVzROMWtMRVBQUmZ2YjZ6eldmXC82WGYwclhqenZMZEl4dnVtY3NLRUQ2aHZMdlF6ZjdaQXNOdFpNXC9tcnBwZGJTajQ3V21hXC9tOVZqeTRhVVdDb3I2S3lBb1FOWnNUU015WUNiUVE4MzIwY1dcL1pTRXlDeTl2dVc4OURYdm9BQW9VSUlFTGk5d0ZBYjJlMDF6MFwvZ3pRSGkrXC9YTWVjWHhleGpxdWN0SXBIN1wvTUg0UkdpR0Jzd0pEYldSbkpcL09BOW04T0VBOVl2dW9wRFBYY1pRU0lqNFJYbk5YMTRFSUN0eFFZYWlPN3BXRGJRUXNRYlQxSDdXMm81MDZBR0xWTWpJdkEyQUpEYldSalUzVVpuUURSaGZueW13ejEzQWtRbDllREFSQzRwY0JRRzlrdEJkc09laXRBekg4ZmtMWGZ0NTJKM3ZZRWhucnVzZ3JLVnhnZUFnTFBGaGhxSTNzMmRkWHN0dmJjcDZcL1RIMDdUOUIrcmhKNXgwVkRyS1VBOG82ak1na0J2Z2FFMnN0NlRIXC9CK2V3RWlhNThmZ2VGdlRkUDBYMFlZU0ljeERQZkJQS3V3XC9FMk1EdFhrRmdRdUZCaHVNN3ZRNHVwYnYza3RcL3VFMFRmXC82NmdYb2VQK2hncnNBMFhIbDNZckFnd1RlZkdpTnRveHZYZ3NCNHNKcUZDQXV4SGRyQWpjVmVQT0JOZUtTdlhrOVwvdVkwVGY5MXhFVkpHdFByM2tCa2haU2s5ZEV0QVFJVkFrTnRaQlhqZmZJbGJ3NFFmM1dhcGo5Kzh1SXU1amJVYzVkeHVQdjl3NHVxMlZSZkt6RFVSdmJhVmZqVnhOOGNJSDVcL21xYlwvXC9yTDFIK2JaeXdnUWJ5XC9vbDlXeTZiNVU0TTJIMW1oTGJpMUdXNUhjOFFnUXViNTZKMEFnV1dDWVRTeDVubmZwM25yY1phVWVORTV2SUI2MG1LWkNvS09BVDcwZHNTdHVKVUJVSUxta3JZQUEwZFpUYndUZUlpQkFqTFhTQXNSWTYzSGxhRDYxa0hXMlwvMnhlV1RleHVWeFpQdTVOSUZcL0FNNTV2SExtRDlZaG9QZnZhYm1GU2dIaDJJWmtkZ1N3QkIxYVc3TEYrcmNjeHQ2ZTI2aElpZWdTSXp3SmwzZWVwaTI5ZUJPNGcwR1dUdWdQRXhXTVVIaTVlZ0FGdjMrVnJqS3lEM2I4Rk1XQkZHUktCaGdJT3JZYVlKN3V5RmljQkg5aThTN2pQQ2hDZjlWRFVENnhLVXlLd2VMYTlZYnkrSk42KzFcLzdqYVpyK3hmWExNTlFJdXRSRVZvRG9NdmlobHN0Z0NMeEh3UE05MWxxXC9mVDMrN2pSTlwvMkdzSmJsOE5GMXFRb0M0ZkowTmdNRHRCTHBzVHJkVHVXN0FiMStQdnpoTjA1OWN4elwva25idlVSRWFBOFB1SElldkpvQWcwRStpeU9UVWI3Zk03c2g3UFgrUG9ETHVjd3hrQnd1OGZva3Z0ZWdMM0VuQmdqYlZleThOaWIzUlplXC81WUlrYXpWaFBOMTc1NWh6XC9XelFhamdBazhXNkRMcjd5ZlRkaHNkZ0pFTThwSGRaUitEZ3NRajZvWGt5SFFUVUNBNkVaZGRhUGFFSkcxNTFjTjBrVmRCUVNJcnR4dVJvQkFqVUQ2eGxRekNOZFVDMWl2YXFwSFhaaSs3bGxwTkgzZ2oxcG1reUZ3UHdIUCtIM1d6RnJkWjYxYWpqUjkzWHNFaUE5STFuMWFZdXVMQUlGNmdmVE5xWDRvcml3SVdLdjNsY2hqXC9oYUdBUEcrNGpYamR3ajRIY1E5MWxtQXVNYzZ0UnlsQU5GU1UxOEVDRFFWY0NnMTVVenJyTXRCa2paNkhSOFY2TEx1V1Y4dDJGeU9McnQyQk80aDRCbVwvM3pwNUczeVBOV3N4eWk3UHB3RFJZcW4wUWVCOUFsMDJxUGV4TnBcL3haNTArKzd5dm01clREdDFobCtkVGdCaTZCZ3lPd05BQ0RxV2hsK2NYb2VFYkpzWWV0ZEcxRVBBVlJndEZmUkFna0NZZ1FLVFJOdW5ZK2pSaHZHVW5Bc1F0bDgyZ0NieEh3QUUxOWxwYm43SFhKM04wdHc0UUh4akZtMU1lWFFvaloraVg5T3ExYlI2N1p6elB0bFhQNnIrVjVKajliSjBIWGM0SnY0RVlzeWpXUnJVc2lQazFXZXRZcTlQbEJ6dTFnNWxkNTRBN2dCWm93amVBNVZJQ0p3VDI5dithYmxQT2lKUk9aMjhmUGhQTHVrY04ybE91S1JYUDFjWmQwdTZCeFhUQUhVQUxOT0Vid0hJcGdZTUNwZjBcLzBtM1RzNkpwWnl1ZlwvTDdcL1ZkWjlJbkIzdm5hcmdFWnhGU0R1WEYzSHh5NUFITGZUOHJqQVg1aW02WDlQMFwvU254N3U0VmN1OVwvVDhhTHBxZUdVMDdFeURTaW5LK1VZOTJXRytOclhWdFJRK3JVYjlXU1N1U0N6cU9yc2tGUTNUTGhnS1p2NmVJUEtcL3phXC85b21xWlwvUGszVHY5K1o1KzlQMFwvUzcwelQ5cFdtYVwvbkNhcG44NlRkTmZiK3d5Nys2cXZhXC83MTl5dEpcL3BGSE8yUWExZ3JsM1UxOGx1STc4WVMyUVFpa0Z2OTF2ejNuXC91Y3FmUE1UVE5pY1BXMWF3NEN4TldyOHB2N0w5ZG5iYjg0K2h5VVB1WE8rODI2ZHV0czJUdTRTMk9wWGIzNVA4UlYyK2E3NzdSNFJtcjN1YTJ4SFYzMzRseXpPbzRjSkxYQU5YMUdINW9qUWFjMDN1Z1k1b3UwZFZqVlBBZzFEM0hHZXRlTUxaTE9sK3NjN2I5WTlEdUJvblN2cGQ5YndrWDNUelkxaStpYVh3dVU2aGJWbUFJMWUzYUxrV2ZzK3orTks2dGpCZDFpMmJmN09KcUkxM284V3dOdlgrdXpmcG1WOG5lbWFmcFBKMjlRV3QrUjUzOXk2cmRwWGxxajIwekVRRk1FMHA3UnRJNFhmeE1qUmVXbG5XYWwxcU8xOFBsQjAxWXcrWU5wbXY3ZE5FMlwvbDdCV2EyOERhZ05TZE1QOTNtdXJYZFJ1K1JacjcrMWE2WTNYY3M1SDNxcHRMVVwvSktUcnZoRExRWmFWQWRDMGpkUlI1RTFmekp2azdwY2p6Rm5sTHRqZTN5RDNYNlBlZTdjcWxhblpaK3ZPWmZvTWZRZUw3aVhucmZrZUxxbWI4a2E4VWpseGJNNFpJUlVRUGpOcStQXC8zK3QybWFcL3RWT2czOVcyMW1uNnlKMUVSMVNhVU9OOUZkVDE1SCtXbDViZXZiMk5zRzljYlN1KzVaejFoZUJvd0x6XC9mZnNcL2xOcXYzZmVsSUxJMWdlb3JzOWwxNXNkWFZIdENGd29jT1lUeVY3Yjc2ZTJyV3YrenpSTlwvMithcHM4Ym5qXC8rOFhcL1wvdGM0T2YzbWFwcjhcL1RkUGZtS2JwbjB6VDlPZW5hZnFkSDJQWWV2UFVlWWh1UnlCVklQSjJKWFVnSTNZdVFJeTRLc1kwb2tEV202SFBYTmMrOVhnMlI2d0NZeUpBNE5jQ05pbkZRT0JhZ2RKcnptdEg1KzRFQ0JEWUVCQWdsQVlCQWdRSUVDQVFGaEFnd21RYUVDQkFnQUFCQWdLRUdpQkFnQUFCQWdUQ0FnSkVtRXdEQWdRSUVDQkFRSUJRQXdRSUVDQkFnRUJZUUlBSWsybEFnQUFCQWdRSUNCQnFnQUFCQWdRSUVBZ0xDQkJoTWcwSUVDQkFnQUFCQVVJTkVDQkFnQUFCQW1FQkFTSk1wZ0VCQWdRSUVDQWdRS2dCQWdRSUVDQkFJQ3dnUUlUSk5DQkFnQUFCQWdRRUNEVkFnQUFCQWdRSWhBVUVpRENaQmdRSUVDQkFnSUFBb1FZSUVDQkFnQUNCc0lBQUVTYlRnQUFCQWdRSUVCQWcxQUFCQWdRSUVDQVFGaEFnd21RYUVDQkFnQUFCQWdLRUdpQkFnQUFCQWdUQ0FnSkVtRXdEQWdRSUVDQkFRSUJRQXdRSUVDQkFnRUJZUUlBSWsybEFnQUFCQWdRSUNCQnFnQUFCQWdRSUVBZ0xDQkJoTWcwSUVDQkFnQUFCQVVJTkVDQkFnQUFCQW1FQkFTSk1wZ0VCQWdRSUVDQWdRS2dCQWdRSUVDQkFJQ3dnUUlUSk5DQkFnQUFCQWdRRUNEVkFnQUFCQWdRSWhBVUVpRENaQmdRSUVDQkFnSUFBb1FZSUVDQkFnQUNCc0lBQUVTYlRnQUFCQWdRSUVCQWcxQUFCQWdRSUVDQVFGaEFnd21RYUVDQkFnQUFCQWdLRUdpQkFnQUFCQWdUQ0FnSkVtRXdEQWdRSUVDQkFRSUJRQXdRSUVDQkFnRUJZUUlBSWsybEFnQUFCQWdRSUNCQnFnQUFCQWdRSUVBZ0xDQkJoTWcwSUVDQkFnQUFCQVVJTkVDQkFnQUFCQW1FQkFTSk1wZ0VCQWdRSUVDQWdRS2dCQWdRSUVDQkFJQ3dnUUlUSk5DQkFnQUFCQWdRRUNEVkFnQUFCQWdRSWhBVUVpRENaQmdRSUVDQkFnSUFBb1FZSUVDQkFnQUNCc0lBQUVTYlRnQUFCQWdRSUVCQWcxQUFCQWdRSUVDQVFGaEFnd21RYUVDQkFnQUFCQWdLRUdpQkFnQUFCQWdUQ0FnSkVtRXdEQWdRSUVDQkFRSUJRQXdRSUVDQkFnRUJZUUlBSWsybEFnQUFCQWdRSUNCQnFnQUFCQWdRSUVBZ0xDQkJoTWcwSUVDQkFnQUFCQVVJTkVDQkFnQUFCQW1FQkFTSk1wZ0VCQWdRSUVDQWdRS2dCQWdRSUVDQkFJQ3dnUUlUSk5DQkFnQUFCQWdRRUNEVkFnQUFCQWdRSWhBVUVpRENaQmdRSUVDQkFnSUFBb1FZSUVDQkFnQUNCc0lBQUVTYlRnQUFCQWdRSUVCQWcxQUFCQWdRSUVDQVFGaEFnd21RYUVDQkFnQUFCQWdLRUdpQkFnQUFCQWdUQ0FnSkVtRXdEQWdRSUVDQkFRSUJRQXdRSUVDQkFnRUJZUUlBSWsybEFnQUFCQWdRSUNCQnFnQUFCQWdRSUVBZ0xDQkJoTWcwSUVDQkFnQUFCQVVJTkVDQkFnQUFCQW1FQkFTSk1wZ0VCQWdRSUVDQWdRS2dCQWdRSUVDQkFJQ3dnUUlUSk5DQkFnQUFCQWdRRUNEVkFnQUFCQWdRSWhBVUVpRENaQmdRSUVDQkFnSUFBb1FZSUVDQkFnQUNCc0lBQUVTYlRnQUFCQWdRSUVCQWcxQUFCQWdRSUVDQVFGaEFnd21RYUVDQkFnQUFCQWdLRUdpQkFnQUFCQWdUQ0FnSkVtRXdEQWdRSUVDQkFRSUJRQXdRSUVDQkFnRUJZUUlBSWsybEFnQUFCQWdRSUNCQnFnQUFCQWdRSUVBZ0xDQkJoTWcwSUVDQkFnQUFCQVVJTkVDQkFnQUFCQW1FQkFTSk1wZ0VCQWdRSUVDQWdRS2dCQWdRSUVDQkFJQ3dnUUlUSk5DQkFnQUFCQWdRRUNEVkFnQUFCQWdRSWhBVUVpRENaQmdRSUVDQkFnSUFBb1FZSUVDQkFnQUNCc0lBQUVTYlRnQUFCQWdRSUVCQWcxQUFCQWdRSUVDQVFGaEFnd21RYUVDQkFnQUFCQWdLRUdpQkFnQUFCQWdUQ0FnSkVtRXdEQWdRSUVDQkFRSUJRQXdRSUVDQkFnRUJZUUlBSWsybEFnQUFCQWdRSUNCQnFnQUFCQWdRSUVBZ0xDQkJoTWcwSUVDQkFnQUFCQVVJTkVDQkFnQUFCQW1FQkFTSk1wZ0VCQWdRSUVDQWdRS2dCQWdRSUVDQkFJQ3dnUUlUSk5DQkFnQUFCQWdRRUNEVkFnQUFCQWdRSWhBVUVpRENaQmdRSUVDQkFnSUFBb1FZSUVDQkFnQUNCc0lBQUVTYlRnQUFCQWdRSUVCQWcxQUFCQWdRSUVDQVFGaEFnd21RYUVDQkFnQUFCQWdLRUdpQkFnQUFCQWdUQ0FnSkVtRXdEQWdRSUVDQkFRSUJRQXdRSUVDQkFnRUJZUUlBSWsybEFnQUFCQWdRSUNCQnFnQUFCQWdRSUVBZ0xDQkJoTWcwSUVDQkFnQUFCQVVJTkVDQkFnQUFCQW1FQkFTSk1wZ0VCQWdRSUVDQWdRS2dCQWdRSUVDQkFJQ3dnUUlUSk5DQkFnQUFCQWdRRUNEVkFnQUFCQWdRSWhBVUVpRENaQmdRSUVDQkFnSUFBb1FZSUVDQkFnQUNCc0lBQUVTYlRnQUFCQWdRSUVCQWcxQUFCQWdRSUVDQVFGaEFnd21RYUVDQkFnQUFCQWdLRUdpQkFnQUFCQWdUQ0FnSkVtRXdEQWdRSUVDQkFRSUJRQXdRSUVDQkFnRUJZUUlBSWsybEFnQUFCQWdRSUNCQnFnQUFCQWdRSUVBZ0xDQkJoTWcwSUVDQkFnQUFCQVVJTkVDQkFnQUFCQW1FQkFTSk1wZ0VCQWdRSUVDQWdRS2dCQWdRSUVDQkFJQ3dnUUlUSk5DQkFnQUFCQWdRRUNEVkFnQUFCQWdRSWhBVUVpRENaQmdRSUVDQkFnSUFBb1FZSUVDQkFnQUNCc0lBQUVTYlRnQUFCQWdRSUVCQWcxQUFCQWdRSUVDQVFGaEFnd21RYUVDQkFnQUFCQWdLRUdpQkFnQUFCQWdUQ0FnSkVtRXdEQWdRSUVDQkFRSUJRQXdRSUVDQkFnRUJZUUlBSWsybEFnQUFCQWdRSUNCQnFnQUFCQWdRSUVBZ0xDQkJoTWcwSUVDQkFnQUFCQVVJTkVDQkFnQUFCQW1FQkFTSk1wZ0VCQWdRSUVDQWdRS2dCQWdRSUVDQkFJQ3dnUUlUSk5DQkFnQUFCQWdRRUNEVkFnQUFCQWdRSWhBVUVpRENaQmdRSUVDQkFnSUFBb1FZSUVDQkFnQUNCc0lBQUVTYlRnQUFCQWdRSUVCQWcxQUFCQWdRSUVDQVFGaEFnd21RYUVDQkFnQUFCQWdLRUdpQkFnQUFCQWdUQ0FnSkVtRXdEQWdRSUVDQkFRSUJRQXdRSUVDQkFnRUJZUUlBSWsybEFnQUFCQWdRSUNCQnFnQUFCQWdRSUVBZ0xDQkJoTWcwSUVDQkFnQUFCQVVJTkVDQkFnQUFCQW1FQkFTSk1wZ0VCQWdRSUVDQWdRS2dCQWdRSUVDQkFJQ3dnUUlUSk5DQkFnQUFCQWdRRUNEVkFnQUFCQWdRSWhBVUVpRENaQmdRSUVDQkFnSUFBb1FZSUVDQkFnQUNCc0lBQUVTYlRnQUFCQWdRSUVCQWcxQUFCQWdRSUVDQVFGaEFnd21RYUVDQkFnQUFCQWdLRUdpQkFnQUFCQWdUQ0FnSkVtRXdEQWdRSUVDQkFRSUJRQXdRSUVDQkFnRUJZUUlBSWsybEFnQUFCQWdRSUNCQnFnQUFCQWdRSUVBZ0xDQkJoTWcwSUVDQkFnQUFCQVVJTkVDQkFnQUFCQW1FQkFTSk1wZ0VCQWdRSUVDQWdRS2dCQWdRSUVDQkFJQ3dnUUlUSk5DQkFnQUFCQWdRRUNEVkFnQUFCQWdRSWhBVUVpRENaQmdRSUVDQkFnSUFBb1FZSUVDQkFnQUNCc0lBQUVTYlRnQUFCQWdRSUVCQWcxQUFCQWdRSUVDQVFGaEFnd21RYUVDQkFnQUFCQWdLRUdpQkFnQUFCQWdUQ0FnSkVtRXdEQWdRSUVDQkFRSUJRQXdRSUVDQkFnRUJZUUlBSWsybEFnQUFCQWdRSUNCQnFnQUFCQWdRSUVBZ0xDQkJoTWcwSUVDQkFnQUFCQVVJTkVDQkFnQUFCQW1FQkFTSk1wZ0VCQWdRSUVDQWdRS2dCQWdRSUVDQkFJQ3dnUUlUSk5DQkFnQUFCQWdRRUNEVkFnQUFCQWdRSWhBVUVpRENaQmdRSUVDQkFnSUFBb1FZSUVDQkFnQUNCc0lBQUVTYlRnQUFCQWdRSUVCQWcxQUFCQWdRSUVDQVFGaEFnd21RYUVDQkFnQUFCQWdLRUdpQkFnQUFCQWdUQ0FnSkVtRXdEQWdRSUVDQkFRSUJRQXdRSUVDQkFnRUJZUUlBSWsybEFnQUFCQWdRSUNCQnFnQUFCQWdRSUVBZ0xDQkJoTWcwSUVDQkFnQUFCQVVJTkVDQkFnQUFCQW1FQkFTSk1wZ0VCQWdRSUVDQWdRS2dCQWdRSUVDQkFJQ3dnUUlUSk5DQkFnQUFCQWdRRUNEVkFnQUFCQWdRSWhBVUVpRENaQmdRSUVDQkFnSUFBb1FZSUVDQkFnQUNCc0lBQUVTYlRnQUFCQWdRSUVCQWcxQUFCQWdRSUVDQVFGaEFnd21RYUVDQkFnQUFCQWdLRUdpQkFnQUFCQWdUQ0FnSkVtRXdEQWdRSUVDQkFRSUJRQXdRSUVDQkFnRUJZUUlBSWsybEFnQUFCQWdRSUNCQnFnQUFCQWdRSUVBZ0xDQkJoTWcwSUVDQkFnQUFCQVVJTkVDQkFnQUFCQW1FQkFTSk1wZ0VCQWdRSUVDQWdRS2dCQWdRSUVDQkFJQ3dnUUlUSk5DQkFnQUFCQWdRRUNEVkFnQUFCQWdRSWhBVUVpRENaQmdRSUVDQkFnSUFBb1FZSUVDQkFnQUNCc0lBQUVTYlRnQUFCQWdRSUVCQWcxQUFCQWdRSUVDQVFGaEFnd21RYUVDQkFnQUFCQWdLRUdpQkFnQUFCQWdUQ0FnSkVtRXdEQWdRSUVDQkFRSUJRQXdRSUVDQkFnRUJZUUlBSWsybEFnQUFCQWdRSUNCQnFnQUFCQWdRSUVBZ0xDQkJoTWcwSUVDQkFnQUFCQVVJTkVDQkFnQUFCQW1FQkFTSk1wZ0VCQWdRSUVDQWdRS2dCQWdRSUVDQkFJQ3dnUUlUSk5DQkFnQUFCQWdRRUNEVkFnQUFCQWdRSWhBVUVpRENaQmdRSUVDQkFnSUFBb1FZSUVDQkFnQUNCc0lBQUVTYlRnQUFCQWdRSUVCQWcxQUFCQWdRSUVDQVFGaEFnd21RYUVDQkFnQUFCQWdLRUdpQkFnQUFCQWdUQ0FnSkVtRXdEQWdRSUVDQkFRSUJRQXdRSUVDQkFnRUJZUUlBSWsybEFnQUFCQWdRSUNCQnFnQUFCQWdRSUVBZ0xDQkJoTWcwSUVDQkFnQUFCQVVJTkVDQkFnQUFCQW1FQkFTSk1wZ0VCQWdRSUVDQWdRS2dCQWdRSUVDQkFJQ3dnUUlUSk5DQkFnQUFCQWdRRUNEVkFnQUFCQWdRSWhBVUVpRENaQmdRSUVDQkFnSUFBb1FZSUVDQkFnQUNCc0lBQUVTYlRnQUFCQWdRSUVCQWcxQUFCQWdRSUVDQVFGaEFnd21RYUVDQkFnQUFCQWdLRUdpQkFnQUFCQWdUQ0FnSkVtRXdEQWdRSUVDQkFRSUJRQXdRSUVDQkFnRUJZUUlBSWsybEFnQUFCQWdRSUNCQnFnQUFCQWdRSUVBZ0xDQkJoTWcwSUVDQkFnQUFCQVVJTkVDQkFnQUFCQW1FQkFTSk1wZ0VCQWdRSUVDQWdRS2dCQWdRSUVDQkFJQ3dnUUlUSk5DQkFnQUFCQWdRRUNEVkFnQUFCQWdRSWhBVUVpRENaQmdRSUVDQkFnSUFBb1FZSUVDQkFnQUNCc0lBQUVTYlRnQUFCQWdRSUVCQWcxQUFCQWdRSUVDQVFGaEFnd21RYUVDQkFnQUFCQWdLRUdpQkFnQUFCQWdUQ0FnSkVtRXdEQWdRSUVDQkFRSUJRQXdRSUVDQkFnRUJZUUlBSWsybEFnQUFCQWdRSUNCQnFnQUFCQWdRSUVBZ0xDQkJoTWcwSUVDQkFnQUFCQVVJTkVDQkFnQUFCQW1FQkFTSk1wZ0VCQWdRSUVDQWdRS2dCQWdRSUVDQkFJQ3dnUUlUSk5DQkFnQUFCQWdRRUNEVkFnQUFCQWdRSWhBVUVpRENaQmdRSUVDQkFnSUFBb1FZSUVDQkFnQUNCc0lBQUVTYlRnQUFCQWdRSUVCQWcxQUFCQWdRSUVDQVFGaEFnd21RYUVDQkFnQUFCQWdLRUdpQkFnQUFCQWdUQ0FnSkVtRXdEQWdRSUVDQkFRSUJRQXdRSUVDQkFnRUJZUUlBSWsybEFnQUFCQWdRSUNCQnFnQUFCQWdRSUVBZ0xDQkJoTWcwSUVDQkFnQUFCQVVJTkVDQkFnQUFCQW1FQkFTSk1wZ0VCQWdRSUVDQWdRS2dCQWdRSUVDQkFJQ3dnUUlUSk5DQkFnQUFCQWdRRUNEVkFnQUFCQWdRSWhBVUVpRENaQmdRSUVDQkFnSUFBb1FZSUVDQkFnQUNCc0lBQUVTYlRnQUFCQWdRSUVCQWcxQUFCQWdRSUVDQVFGaEFnd21RYUVDQkFnQUFCQWdLRUdpQkFnQUFCQWdUQ0FnSkVtRXdEQWdRSUVDQkFRSUJRQXdRSUVDQkFnRUJZUUlBSWsybEFnQUFCQWdRSUNCQnFnQUFCQWdRSUVBZ0xDQkJoTWcwSUVDQkFnQUFCQVVJTkVDQkFnQUFCQW1FQkFTSk1wZ0VCQWdRSUVDQWdRS2dCQWdRSUVDQkFJQ3dnUUlUSk5DQkFnQUFCQWdRRUNEVkFnQUFCQWdRSWhBVUVpRENaQmdRSUVDQkFnSUFBb1FZSUVDQkFnQUNCc0lBQUVTYlRnQUFCQWdRSUVCQWcxQUFCQWdRSUVDQVFGaEFnd21RYUVDQkFnQUFCQWdLRUdpQkFnQUFCQWdUQ0FnSkVtRXdEQWdRSUVDQkFRSUJRQXdRSUVDQkFnRUJZUUlBSWsybEFnQUFCQWdRSUNCQnFnQUFCQWdRSUVBZ0xDQkJoTWcwSUVDQkFnQUFCQVVJTkVDQkFnQUFCQW1FQkFTSk1wZ0VCQWdRSUVDQWdRS2dCQWdRSUVDQkFJQ3dnUUlUSk5DQkFnQUFCQWdRRUNEVkFnQUFCQWdRSWhBVUVpRENaQmdRSUVDQkFnSUFBb1FZSUVDQkFnQUNCc0lBQUVTYlRnQUFCQWdRSUVCQWcxQUFCQWdRSUVDQVFGaEFnd21RYUVDQkFnQUFCQWdLRUdpQkFnQUFCQWdUQ0FnSkVtRXdEQWdRSUVDQkFRSUJRQXdRSUVDQkFnRUJZUUlBSWsybEFnQUFCQWdRSUNCQnFnQUFCQWdRSUVBZ0xDQkJoTWcwSUVDQkFnQUFCQVVJTkVDQkFnQUFCQW1FQkFTSk1wZ0VCQWdRSUVDQWdRS2dCQWdRSUVDQkFJQ3dnUUlUSk5DQkFnQUFCQWdRRUNEVkFnQUFCQWdRSWhBVUVpRENaQmdRSUVDQkFnSUFBb1FZSUVDQkFnQUNCc0lBQUVTYlRnQUFCQWdRSUVCQWcxQUFCQWdRSUVDQVFGdmd6NmRMeUhHVTRTRjBBQUFBQVNVVk9SSzVDWUlJPSIsIndpZHRoIjo1MjgsImhlaWdodCI6NjkwLCJuZXdfbWFwcGljdHVyZSI6ZmFsc2UsInJlbmRlcl9uYXZfbWFwcyI6ZmFsc2UsImxheWVycyI6eyJvbmV3YXkiOnsic2hhcGVzIjpbXX0sImFyZWFwcmVmc19wcmVmZXJyZWQiOnsic2hhcGVzIjpbXX0sImFyZWFwcmVmc191bnByZWZlcnJlZCI6eyJzaGFwZXMiOltdfSwiYXJlYXByZWZzX2ZvcmJpZGRlbiI6eyJzaGFwZXMiOlt7Im5hbWUiOiJGb3JiaWRkZW4gem9uZXMgKDEpIiwidHlwZSI6InNoYXBlIiwiY29sb3IiOiIjZmZjOGM4IiwicG9seWdvbiI6W3sieCI6NTMsInkiOjIwMH0seyJ4IjoyMDcsInkiOjIwMH0seyJ4IjoyMDgsInkiOjMxOX0seyJ4Ijo1MiwieSI6MzE3fV19LHsibmFtZSI6IkZvcmJpZGRlbiB6b25lcyAoMikiLCJ0eXBlIjoic2hhcGUiLCJjb2xvciI6IiNmZmM4YzgiLCJwb2x5Z29uIjpbeyJ4IjoxMzksInkiOjI2fSx7IngiOjEzNywieSI6MTYxfSx7IngiOjIyOSwieSI6MTYxfSx7IngiOjIzMCwieSI6MjZ9XX0seyJuYW1lIjoiRm9yYmlkZGVuIHpvbmVzICgzKSIsInR5cGUiOiJzaGFwZSIsImNvbG9yIjoiI2ZmYzhjOCIsInBvbHlnb24iOlt7IngiOjI2NywieSI6MjV9LHsieCI6MjY2LCJ5IjoxMTJ9LHsieCI6NDEzLCJ5IjoxMTN9LHsieCI6NDExLCJ5IjoyN31dfV19LCJhcmVhcHJlZnNfY3JpdGljYWwiOnsic2hhcGVzIjpbXX0sImFyZWFldmVudHNfc3BlZWQiOnsic2hhcGVzIjpbXX0sImFyZWFldmVudHNfYmxpbmsiOnsic2hhcGVzIjpbXX0sImFyZWFldmVudHNfc291bmQiOnsic2hhcGVzIjpbXX0sImFyZWFldmVudHNfZG9vciI6eyJzaGFwZXMiOltdfSwiYXJlYWV2ZW50c19kaXNhYmxlX2xvY2FsaXphdGlvbiI6eyJzaGFwZXMiOltdfSwiYXJlYWV2ZW50c19sb29rX2FoZWFkX2Rpc3RhbmNlIjp7InNoYXBlcyI6W119LCJibHVldG9vdGgiOnsic2hhcGVzIjpbXX0sImVtZXJnZW5jeV96b25lIjp7InNoYXBlcyI6W119LCJ3YWxscyI6eyJzaGFwZXMiOltdfSwicG9zaXRpb25zIjp7InNoYXBlcyI6W119LCJmbG9vciI6eyJzaGFwZXMiOlt7Im5hbWUiOiJGbG9vcnMgKDEpIiwidHlwZSI6InNoYXBlIiwiY29sb3IiOiIjRkZGRkZGIiwicG9seWdvbiI6W3sieCI6MTkzLCJ5IjoyODZ9LHsieCI6MTkzLCJ5IjozMDZ9LHsieCI6MjI2LCJ5IjozMDl9LHsieCI6MjI5LCJ5IjoyODN9XX0seyJuYW1lIjoiRmxvb3JzICgyKSIsInR5cGUiOiJzaGFwZSIsImNvbG9yIjoiI0ZGRkZGRiIsInBvbHlnb24iOlt7IngiOjQxNSwieSI6NzZ9LHsieCI6NDA4LCJ5IjoxODd9LHsieCI6NDkxLCJ5IjoxOTB9LHsieCI6NDg3LCJ5Ijo3MH1dfSx7Im5hbWUiOiJGbG9vcnMgKDMpIiwidHlwZSI6InNoYXBlIiwiY29sb3IiOiIjRkZGRkZGIiwicG9seWdvbiI6W3sieCI6NDE0LCJ5IjoyNjV9LHsieCI6NDE0LCJ5IjozMDB9LHsieCI6NDY0LCJ5IjozMDB9LHsieCI6NDUyLCJ5IjoyNTZ9XX1dfSwiYXJlYWV2ZW50c19zb3VuZF9hbmRfbGlnaHRfem9uZSI6eyJzaGFwZXMiOltdfSwiYXJlYWV2ZW50c19wbGFubmVyX3pvbmUiOnsic2hhcGVzIjpbXX0sImFyZWFldmVudHNfaW8iOnsic2hhcGVzIjpbXX0sImFyZWFldmVudHNfZmxlZXRfYW5kX2VtZXJnZW5jeSI6eyJzaGFwZXMiOltdfSwiYXJlYWV2ZW50c19ldmFjdWF0aW9uIjp7InNoYXBlcyI6W119fX0=\",\n        name: \"Robotic Materials\",\n        one_way_map: \"iVBORw0KGgoAAAANSUhEUgAAAhAAAAKyAQAAAACsr9rBAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAAnRSTlMAAHaTzTgAAAACYktHRAAB3YoTpAAAAAlwSFlzAAAOxAAADsQBlSsOGwAAAAd0SU1FB+QHBhQ5JYjlIqkAAABESURBVHja7cExAQAAAMKg9U9tBn+gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAzwC0lgABJg+sEgAAACV0RVh0ZGF0ZTpjcmVhdGUAMjAyMC0wNy0wNlQyMjo1NzozNyswMjowMOars2YAAAAldEVYdGRhdGU6bW9kaWZ5ADIwMjAtMDctMDZUMjI6NTc6MzcrMDI6MDCX9gvaAAAAAElFTkSuQmCC\",\n        origin_theta: 0,\n        origin_x: 0,\n        origin_y: 0,\n        path_guides: \"/v2.0.0/maps/51131f98-bfb5-11ea-a742-94c691a739e9/path_guides\",\n        paths: \"/v2.0.0/maps/51131f98-bfb5-11ea-a742-94c691a739e9/paths\",\n        positions: \"/v2.0.0/maps/51131f98-bfb5-11ea-a742-94c691a739e9/positions\",\n        resolution: 0.05,\n        session_id: \"d469ada1-7e3c-11e9-9d34-94c691a739e9\",\n        d3: {\n            scale: 1,\n            translate: [0,0],\n            boundingClientHeight: null\n        }\n    }\n\n\n    const postLot = async() => {\n        try {\n            const response = await axios({\n                method: 'POST',\n                url: apiIPAddress() + \"site_maps\",\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                },\n                data: foo_map\n            });\n\n            // Success 🎉\n            // log.debug('response',response);\n            const data = response.data;\n            const dataJson = JSON.parse(data)\n            // log.debug('response data json',dataJson);\n\n\n            return dataJson;\n\n\n        } catch (error) {\n\n            console.error('error', error);\n        }\n    }\n\n\n\n    return (\n        <button\n            onClick={postLot}\n        >\n            CREATE MAP\n        </button>\n    )\n}\n\nexport default TestsContainer;\n","import React, { useState } from 'react';\nimport { BrowserRouter, Route, IndexRoute, Link, Switch, useHistory } from 'react-router-dom';\nimport { connect, useSelector, useDispatch } from 'react-redux'\n\nimport { ThemeProvider } from \"styled-components\";\nimport theme from './theme';\nimport './App.css';\n\n// Import Hooks\nimport useWindowSize from './hooks/useWindowSize'\n\n// import logger\nimport logger, { disableAll } from './logger.js';\n\nimport * as styled from './App.style'\n\n// Import API\nimport { deleteLocalSettings } from './api/local_api'\n//import * as localActions from './redux/actions/local_actions'\nimport { stopAPICalls } from './redux/actions/local_actions'\n\n\n// import containers\nimport ApiContainer from './containers/api_container/api_container';\nimport StatusHeader from './containers/status_header/status_header';\nimport PageErrorBoundary from './containers/page_error_boundary/page_error_boundary';\nimport Logger from './containers/logger/logger';\nimport SideBar from './containers/side_bar/side_bar'\nimport MapView from './containers/map_view/map_view'\nimport HILModal from './containers/hil_modal/hil_modal'\nimport Authentication from './containers/authentication/authentication'\nimport Widgets from './components/widgets/widgets'\nimport ListView from \"./components/list_view/list_view\";\nimport TestsContainer from \"./containers/api_container/tests_container\";\nimport HILModals from \"./components/hil_modals/hil_modals\";\nimport ConfirmDeleteModal from './components/basic/modals/confirm_delete_modal/confirm_delete_modal'\n\nconst widthBreakPoint = 1000;\n\n// class App extends Component {\n\nconst App = (props) => {\n\n    const widgetPageLoaded = useSelector(state => { return state.widgetReducer.widgetPageLoaded })\n    const hoveringInfo = useSelector(state => state.widgetReducer.hoverStationInfo)\n    const selectedTask = useSelector(state => state.tasksReducer.selectedTask)\n    const maps = useSelector(state => state.mapReducer.maps)\n    const dashboardOpen = useSelector(state => state.dashboardsReducer.dashboardOpen)\n    const sideBarOpen = useSelector(state => state.sidebarReducer.open)\n    const mapViewEnabled = useSelector(state => state.localReducer.localSettings.mapViewEnabled)\n    const getFailureCount = useSelector(state => state.taskQueueReducer.getFailureCount)\n\n    const dispatch = useDispatch()\n    const dispatchStopAPICalls = (bool) => dispatch(stopAPICalls(bool))\n\n    // Set to true for the time being, authentication is not 100% complete as of 09/14/2020\n    // const [authenticated, setAuthenticated] = useState(false)\n\n    const authenticated = useSelector(state => state.localReducer.localSettings.authenticated)\n\n    const [loaded, setLoaded] = useState(false)\n    const [apiLoaded, setApiLoaded] = useState(false)\n    const [stateTheme, setStateTheme] = useState('main')\n\n    const [showSideBar, setShowSideBar] = useState(false)\n    const [showStopAPIModal, setShowStopAPIModal] = useState(true)\n    const size = useWindowSize()\n    const windowWidth = size.width\n\n    const history = useHistory()\n\n    const mobileMode = windowWidth < widthBreakPoint;\n\n    /**\n     * This handles Map view in mobile mode\n     * Unmounts the map if widget pages is open\n     */\n    const handleMobileMapView = () => {\n\n        if (!widgetPageLoaded) {\n            return (\n                <Route\n                    path={[\"/locations/:stationID?/:widgetPage?\", '/']}>\n                    <MapView mobileMode={mobileMode} />\n                </Route>\n            )\n        }\n\n        else {\n            return null\n        }\n\n    }\n\n\n    // Used to clear local settings just in case the page cant be loaded anymore\n    const handleClearLocalSettings = () => {\n        deleteLocalSettings()\n        return (\n            <>\n            </>\n        )\n    }\n\n    return (\n          <>\n              <Logger />\n\n              {/*<TestsContainer/>*/}\n\n              {/* <ThemeProvider theme={theme[this.state.theme]}> */}\n              <ThemeProvider theme={theme[stateTheme]}>\n\n                  <styled.Container>\n                    <ConfirmDeleteModal\n                          isOpen={getFailureCount<10 || showStopAPIModal===false ? false: true}\n                          title={\"Oops! It looks like the server is diconnected. Would you like to turn off updates from the backend?\"}\n                          button_1_text={\"Yes\"}\n                          handleOnClick1={() => {\n                            dispatchStopAPICalls(true)\n                            setShowStopAPIModal(false)\n                          }}\n                          button_2_text={\"No\"}\n                          handleOnClick2={() => {\n                            setShowStopAPIModal(false)\n                          }}\n                          handleClose={() => {\n                            setShowStopAPIModal(false)\n                          }}\n                      />\n                      <BrowserRouter>\n                          {/* <Route\n                              exact path=\"/clear_local\"\n                          >\n                              {\n                                  handleClearLocalSettings()\n                              }\n                          </Route> */}\n\n\n                          <Route\n                              path={[\"/locations/:stationID?/:widgetPage?\", '/:sidebar?/:data1?/:data2?', '/',]}\n                          >\n                              {authenticated && <ApiContainer styleMode={null} apiMode={null} mode={null} logMode={\"DEV\"} onLoad={() => setLoaded(true)} apiLoaded={() => setApiLoaded(true)} isApiLoaded={apiLoaded} />}\n                          </Route>\n\n                          {/* If all the API's have been loaded, but the user has not been authenticate then show the Authentication Screen */}\n                          {authenticated === null &&\n                              <Authentication authenticated={authenticated}/>\n                          }\n\n\n                          {loaded && authenticated && apiLoaded &&\n                              <styled.ContentContainer>\n\n                                  <styled.HeaderContainer>\n                                      {mapViewEnabled ?\n                                          <Route\n                                              path={[\"/locations/:stationID?/:widgetPage?\", '/']}\n                                              component={StatusHeader}\n                                          />\n                                          :\n                                          <> </>\n                                      }\n                                  </styled.HeaderContainer>\n\n\n\n                                  <styled.BodyContainer>\n                                      {/* Hides Side bar when in a dashboard in mobile mode */}\n                                      {mapViewEnabled ?\n                                          // mobileMode ?\n                                          // dashboardOpen ?\n                                          //     <></>\n                                          //     :\n\n                                          <Route\n                                              path={[\"/:page?/:id?/:subpage?\", '/']}\n                                          >\n                                              <SideBar\n                                                  showSideBar={sideBarOpen}\n                                                  setShowSideBar={setShowSideBar}\n                                              />\n                                          </Route>\n                                          // :\n                                          //     <Route\n                                          //         path={[\"/:page?/:id?/:subpage?\", '/']}\n                                          //     >\n                                          //         <SideBar\n                                          //             showSideBar={sideBarOpen}\n                                          //             setShowSideBar={setShowSideBar}\n                                          //         />\n                                          //     </Route>\n                                          :\n                                          <></>\n                                      }\n\n                                      <Route\n                                          path={[\"/locations/:stationID/dashboards/:dashboardID?\", '/']}\n                                          component={HILModal}\n                                      />\n\n                                      {/* If there are no maps, then dont render mapview (Could cause an issue when there is no MIR map)\n                                          And if the device is mobile, then unmount if widgets are open\n                                      */}\n                                      {maps.length > 0 &&\n                                          <>\n                                              {mapViewEnabled ?\n\n                                                  (mobileMode ?\n                                                      <Route\n                                                          path={[\"/locations/:stationID?/:widgetPage?\", '/']}\n                                                      >\n                                                          {handleMobileMapView()}\n                                                      </Route>\n                                                      :\n                                                      <Route\n                                                          path={[\"/locations/:stationID?/:widgetPage?\", '/']}\n                                                          component={MapView}\n                                                      />)\n\n                                                  :\n\n                                                  <Route\n                                                      path={[\"/locations/:stationID?/:widgetPage?\", '/']}\n                                                      component={ListView}\n                                                  />\n\n\n                                              }\n                                          </>\n                                      }\n\n                                      {/* <Route\n                                          path=\"/locations/:locationID?/:widgetPage?\"\n                                          component={WidgetPages}\n                                      /> */}\n\n                                      {/* Widgets are here in mobile mode. If not in mobile mode, then they are in map_view.\n                                      The reasoning is that the map unmounts when in a widget while in mobile mode (for performance reasons).\n                                      So they need to be here. */}\n                                      {hoveringInfo !== null && mobileMode &&\n                                          <Route\n                                              path={[\"/locations/:stationID?/:widgetPage?\", '/']}\n                                              component={Widgets}\n                                          />\n                                      }\n\n                                  </styled.BodyContainer>\n\n                              </styled.ContentContainer>\n                          }\n\n                      </BrowserRouter>\n                  </styled.Container>\n              </ThemeProvider>\n              </>\n    );\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport $ from \"jquery\";\nimport 'bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './methods/css/montserrat.css';\nimport './methods/css/iwawa.css';\nimport './methods/css/all.css';\nimport * as popper from 'popper.js'\nimport 'xmlrpc'\nimport { Provider } from 'react-redux'\nimport store from './redux/store/index.js'\nimport './methods/css/fontawesome.min.css'\nimport './graphics/icons/style.css'\nimport 'nivo'\n// import { AppContainer } from 'react-hot-loader';\n// require('react-hot-loader/patch')\n\n/* uncomment to disable default logger\nconsole.log = () => {};\nconsole.error = () => {};\nconsole.fatal = () => {};\nconsole.warn = () => {};\n*/\n//\n\nif(module.hot){\n    module.hot.accept()\n}\n\n// if(module.hot){\n//     console.log(\"module hot\")\n//\n//     module.hot.accept('./App', () => {\n//         console.log(\"inside callback\")\n//\n//         const NextApp = require('./App');\n//\n//         ReactDOM.render(\n//             <Provider store={store}>\n//                 <App />\n//             </Provider>,\n//             document.getElementById('root')\n//         );\n//\n//     });\n// }\n// else {\n    const rootElement = document.getElementById('root')\n    ReactDOM.render(\n        // <AppContainer>\n        <Provider store={store}>\n            <App />\n        </Provider>,\n            // </AppContainer>,\n        rootElement\n    )\n// }\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\nserviceWorker.register();\n","import axios from 'axios';\n// import * as log from 'loglevel';\n\nimport logger from '../logger'\n\nimport { apiIPAddress } from '../settings/settings'\nconst operator = 'events'\nconst log = logger.getLogger('Api')\n\nexport async function getEvents() {\n    try {\n        const response = await axios({\n            method: 'get',\n            url: apiIPAddress() + operator, \n            headers: {\n                'X-API-Key': '123456',\n            },\n        });\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n\n}\n\nexport async function deleteEvents(ID) {\n    try {\n        const response = await axios({\n            method: 'DELETE',\n            url: apiIPAddress() + operator + '/' + ID,\n            headers: {\n                'Accept': 'application/json',\n                'X-API-Key': '123456',\n            },\n        });\n\n        // Success 🎉\n        // log.debug('response',response);\n        // const data = response.data;\n        // const dataJson = JSON.parse(data)\n        return response;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}\n\nexport async function postEvents(events) {\n    try {\n        const response = await axios({\n            method: 'POST',\n            url: apiIPAddress() + operator,\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'application/json'\n            },\n            data: events\n        });\n\n        // Success 🎉\n        // log.debug('response',response);\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        // log.debug('response data json',dataJson);\n\n\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}\n\nexport async function putEvents(event, ID) {\n\n    try {\n        const response = await axios({\n            method: 'PUT',\n            url: apiIPAddress() + operator + '/' + ID,\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'text/html'\n            },\n            data: event\n        });\n\n        // Success 🎉\n        // log.debug('response',response);\n        // const data = response.data;\n        // const dataJson = JSON.parse(data)\n        return response;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}\n","import {SORT_MODES} from \"../../constants/common_contants\";\nimport {convertCardDate} from \"./card_utils\";\nimport {deepCopy} from \"./utils\";\n\n\nexport const isArray = (arr) => {\n\treturn ((typeof arr !== 'undefined') && Array.isArray(arr))\n}\n\nexport const removeArrayIndices = (arr, indices) => {\n\tlet arrCopy = [...arr]\n\n\tfor (var i = indices.length - 1; i >= 0; i--)\n\t\tarrCopy.splice(indices[i],1);\n\n\treturn arrCopy\n}\n","import styled, {css} from 'styled-components'\n\nexport const glow = (color) => css`\n\tbox-shadow: 0 0 5px ${color} ;\n\tborder: 1px solid ${color};\n`\n\nexport const errorGlow = css`\n  ${props => glow(props.theme.bad)};\n`;\n\nexport const newGlow = css`\n  ${props => glow(props.theme.warn)};\n`;\n\nexport const goodGlow = css`\n  ${props => glow(props.theme.good)};\n`;","import React from \"react\";\nimport { ThemeProvider } from \"styled-components\";\nimport { hexToRGBA, LightenDarkenColor, RGB_Linear_Blend, RGB_Linear_Shade, RGB_Log_Blend, RGB_Log_Shade } from './methods/utils/color_utils';\nimport objectsReducer from \"./redux/reducers/objects_reducer\";\n\nexport const size = {\n    tiny: '0px',\n    mobileS: '320px',\n    mobileM: '375px',\n    mobileL: '425px',\n    tablet: '768px',\n    laptop: '1024px',\n    laptopL: '1440px',\n    desktop: '2560px'\n}\n\nconst dark = {\n    primary: '#000000',  // Black\n    secondary: '#27272b',\n    tertiary: '#313236',\n    // quaternary: '#4f5063',\n    quaternary: '#5a5a63',\n    quinary: '#6c6e78',\n    senary: '#a6a7ba',\n    septenary: '#e9e9f2',\n    octonary: '#FFFFFF',  // White\n}\n\nconst light = {\n    primary: '#FFFFFF',  // White\n    secondary: '#E6E6E6',\n    tertiary: '#C8C8C8',\n    quaternary: '#A8A8A8',  // light light grey\n    quinary: '#808080',   // light grey\n    senary: '#7e7e7e',    // charcoal\n    septenary: '#545454', //dark dark grey\n    octonary: '#000000',  // Black\n}\n\nexport const theme = {\n    main: {\n        bg: dark,\n        fg: {\n            primary: '#798fd9',\n            secondary: '#FF4B4B', // RM RED\n            tertiary: '',\n            quaternary: '',\n            quinary: '',\n            senary: '',\n            septenary: '',\n            octonary: '',\n            nonary: '',\n            denary: '',\n            red: '#FF4B4B',   // RM RED\n\n        },\n        error: {\n            borderColor: '#FF4B4B',\n        },\n        good: '#52B853',\n        okay: '#ffa200',\n        bad: '#FF4B4B',\n        warn: '#ffe62b',\n        disabled: '#808080',           // light grey\n        radioButton: {\n            active: '#FF4B4B',          // RM RED\n            inactive: '#808080',        // light grey\n            hover: RGB_Linear_Shade(.2, hexToRGBA('#FF4B4B')),    // lighter RM RED\n            textColor: \"#FFFFFF\",        // white\n            fontWeight: 500,\n            borderColor: '#A8A8A8',      // light light grey\n        },\n        hoverHighlightPer: 0.4,\n        basicButton: {\n            backgroundColor: {\n                active: '#FF4B4B',             // RM RED\n                disabled: '#808080',           // light grey\n            },\n            textColor: {\n                active: \"#FFFFFF\",\n            }\n        },\n\n        font: {\n            primary: 'Montserrat'\n        },\n        fontSize: {\n\n            sz6: \"0.65rem\",\n            sz5: \"0.75rem\",\n            sz4: \"0.85rem\",\n            sz3: \"1.2rem\",\n            sz2: \"1.5rem\",\n            sz7: \"2.0rem\",\n            sz1: \"2.5rem\",\n            sz8: \"1.4rem\"\n        },\n        fontWeight: {\n            bold: '700',\n            normal: '100',\n        },\n\n        // minWidth: {\n        //   tiny: `(min-width: ${size.tiny})`,\n        //   mobileS: `(min-width: ${size.mobileS})`,\n        //   mobileM: `(min-width: ${size.mobileM})`,\n        //   mobileL: `(min-width: ${size.mobileL})`,\n        //   tablet: `(min-width: ${size.tablet})`,\n        //   laptop: `(min-width: ${size.laptop})`,\n        //   laptopL: `(min-width: ${size.laptopL})`,\n        //   desktop: `(min-width: ${size.desktop})`,\n        //   desktopL: `(min-width: ${size.desktop})`\n        // },\n        widthBreakpoint: {\n            tiny: `${size.tiny}`,\n            mobileS: `${size.mobileS}`,\n            mobileM: `${size.mobileM}`,\n            mobileL: `${size.mobileL}`,\n            tablet: `${size.tablet}`,\n            laptop: `${size.laptop}`,\n            laptopL: `${size.laptopL}`,\n            desktop: `${size.desktop}`,\n            desktopL: `${size.desktop}`\n        },\n\n        tree: {\n            bg: light,\n            normal: {\n                fg: '#7de7ff',\n                mg: '#bff3ff',\n                bg: '#edf5f7'\n            },\n            goal: {\n                fg: '#e399ff',\n                mg: '#ecbdfc',\n                bg: '#ede4f0',\n            },\n            warning: {\n                fg: '#ffc04b',\n                bg: '#f5eee9',\n            },\n            selected: {\n                fg: '#FF4B4B',\n                bg: '#ffe8e8',\n            },\n            alternate: {\n                fg: '#e0e0e0',\n                bg: '#f5f5f5',\n            },\n            disabled: {\n                fg: '',\n                bg: '',\n            }\n        },\n\n        schema: {\n            locations: {\n                gradient: 'radial-gradient(171.57% 115.09% at 100% 0%, rgba(121, 143, 217, 0.95) 0%, rgba(125, 89, 183, 0.95) 100%)',\n                solid: '#798fd9'\n            },\n            dashboards: {\n                gradient: 'radial-gradient(171.57% 115.09% at 100% 0%, rgba(255, 214, 0, 0.95) 0%, rgba(255, 138, 0, 0.95) 100%)',\n                solid: '#5294ff'\n            },\n            objects: {\n                gradient: 'radial-gradient(171.57% 115.09% at 100% 0%, rgba(255, 214, 0, 0.95) 0%, rgba(255, 138, 0, 0.95) 100%)',\n                solid: '#ffb62e'\n            },\n            processes: {\n                gradient: 'radial-gradient(171.57% 115.09% at 100% 0%, rgba(255, 214, 0, 0.95) 0%, rgba(255, 138, 0, 0.95) 100%)',\n                solid: '#ffb62e'\n            },\n            tasks: {\n                gradient: 'radial-gradient(171.57% 115.09% at 100% 0%, rgba(121, 217, 155, 0.95) 0%, rgba(0, 162, 132, 0.95) 100%)',\n                solid: '#79d99b'\n            },\n            routes: {\n                gradient: 'radial-gradient(171.57% 115.09% at 100% 0%, rgba(121, 217, 155, 0.95) 0%, rgba(0, 162, 132, 0.95) 100%)',\n                solid: '#79d99b',\n                iconName: \"fas fa-route\"\n            },\n            all: {\n                gradient: 'radial-gradient(171.57% 115.09% at 100% 0%, rgba(121, 217, 155, 0.95) 0%, rgba(0, 162, 132, 0.95) 100%)',\n                solid: '#1ae8a0'\n            },\n            lots: {\n                gradient: 'radial-gradient(171.57% 115.09% at 100% 0%, rgba(167, 48, 255) 0%, rgba(148, 80, 199, 0.95) 100%)',\n                solid: '#bc61ff',\n                iconName: \"fas fa-play\"\n            },\n            kick_off: {\n                gradient: 'radial-gradient(171.57% 115.09% at 100% 0%, rgba(197, 155, 255) 0%, rgba(173, 115, 255, 0.95) 100%)',\n                solid: '#c59bff',\n                iconName: \"fas fa-play\"\n            },\n            finish: {\n                gradient: 'radial-gradient(171.57% 115.09% at 100% 0%, rgba(197, 155, 255) 0%, rgba(173, 115, 255, 0.95) 100%)',\n                solid: '#fc5e03',\n                iconName: \"fas fa-flag-checkered\"\n            },\n            error: {\n                gradient: 'radial-gradient(171.57% 115.09% at 100% 0%, rgba(250, 67, 47, 0.95) 0%, rgba(217, 21, 0, 0.95) 100%)',\n                solid: '#ff1900'\n            },\n            ok: {\n                gradient: 'radial-gradient(171.57% 115.09% at 100% 0%, rgba(10, 189, 0, 0.95) 0%, rgba(77, 196, 71, 0.95) 100%)',\n                solid: '#0dff00'\n            },\n            operations: {\n                gradient: 'radial-gradient(171.57% 115.09% at 100% 0%, rgba(121, 217, 155, 0.95) 0%, rgba(0, 162, 132, 0.95) 100%)',\n                solid: '#e81a69',\n                iconName: \"fas fa-sticky-note\"\n            },\n            report: {\n                gradient: 'radial-gradient(171.57% 115.09% at 100% 0%, rgba(121, 217, 155, 0.95) 0%, rgba(0, 162, 132, 0.95) 100%)',\n                solid: '#e81a69',\n                iconName: \"fas fa-sticky-note\"\n            },\n            devices: {\n                gradient: 'radial-gradient(171.57% 115.09% at 100% 0%, rgba(255, 75, 75, 0.95) 0%, rgba(255, 61, 61, 0.95) 100%)',\n                solid: '#e36868'\n            },\n            scheduler: {\n                gradient: 'radial-gradient(171.57% 115.09% at 100% 0%, rgba(30, 156, 215, 0.95) 0%, rgba(0, 91, 151, 0.95) 100%)',\n                solid: '#1e9cd7'\n            },\n            taskQueue: {\n                gradient: 'radial-gradient(171.57% 115.09% at 100% 0%, rgba(197, 155, 255) 0%, rgba(173, 115, 255, 0.95) 100%)',\n                solid: '#c59bff'\n            },\n            settings: {\n                gradient: 'radial-gradient(171.57% 115.09% at 100% 0%, rgba(197, 155, 255) 0%, rgba(173, 115, 255, 0.95) 100%)',\n                solid: '#c59bff'\n            },\n            delete: {\n                gradient: 'radial-gradient(171.57% 115.09% at 100% 0%, rgba(255, 75, 75, 0.95) 0%, rgba(255, 61, 61, 0.95) 100%)',\n                solid: '#e36868'\n            },\n        }\n    },\n    funky: {\n\n    },\n\n\n\n};\n\n\nexport default theme;\n","import styled from 'styled-components'\n\nexport const TitleContainer = styled.h1`\n    font-size: ${props => props.theme.fontSize.sz2};\n    font-family: ${props => props.theme.font.primary};\n    color: ${props => props.theme.bg.septenary};\n    margin-top: .6rem;\n`;\n\nexport const DefaultContainer = styled.div`\n`;\n\nexport const DefaultFieldContentContainer = styled.div`\n    width: 100%;\n    height: auto;\n    position: relative;\n    // background: blue;\n`;\n\nexport const DefaultFieldDropdownContainer = styled.div`\n    flex: 1;\n`;\n\nexport const IconContainerComponent = styled.div`\n    width: auto;\n    height: auto;\n    position: absolute;\n    top: 50%;\n    right: 2rem;\n    transform: translateY(-50%);\n    margin: 0;\n    padding: 0;\n    background; cyan;\n`;\n","import React, {Component, useEffect, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport { useField, useFormikContext } from \"formik\";\nimport DropDownSearch from '../../drop_down_search_v2/drop_down_search';\n// import {globStyle} from '../../../../global_style'\nimport { getMessageFromError } from \"../../../../methods/utils/form_utils\";\n\n// import styles\nimport * as styled from './drop_down_search_field.style'\nimport ErrorTooltip from \"../error_tooltip/error_tooltip\";\nimport {isEmpty} from \"ramda\";\n\n\nconst DropDownSearchField = ({\n\t\t\t\t\t\t\t\t fieldLabel,\n\t\t\t\t\t\t\t\t LabelComponent,\n\t\t\t\t\t\t\t\t ItemComponent,\n\t\t\t\t\t\t\t\t ContentComponent,\n\t\t\t\t\t\t\t\t ErrorComponent,\n\t\t\t\t\t\t\t\t onDropdownClose,\n\t\t\t\t\t\t\t\t onChange,\n\t\t\t\t\t\t\t\t FieldContentContainer,\n\t\t\t\t\t\t\t\t FieldDropdownContainer,\n\t\t\t\t\t\t\t\t Container,\n\t\t\t\t\t\t\t\t style,\n\t\t\t\t\t\t\t\t containerSyle,\n\tmapInput,\n\tmapOutput,\n\t\t\t\t\t\t\t\t ...props\n\t\t\t\t\t\t\t }) => {\n\n\tconst { setFieldValue, setFieldTouched } = useFormikContext();\n\tconst [field, meta] = useField(props);\n\tconst hasError = meta.touched && meta.error;\n\n\tconst [value, setValue] = useState(field.value)\n\tconst [touched, setTouched] = useState(field.touched)\n\tconst [updatingValue, setUpdatingValue] = useState(false)\n\n\t/*\n\t* This is kindy funky\n\t* The first time you select a value, both onChange and onDropdownClose get called since the dropdown closes when you select a value\n\t* onChange is called first, and updates the values and performs validation\n\t* THEN onDropdownClose is called, updates field.touched and performs validation\n\t* however, onDropdownClose gets called AFTER onChange but still has the old values\n\t* This means a second validation would be performed with the old values, which can result in a validation error for the old values, even if the new values don't have an error\n\t* by managing it in a hook this way, validation for field.touched can be controlled directly\n\t*\n\t* */\n\tuseEffect(() => {\n\n\t\tif(touched) {\n\t\t\t// update touched\n\t\t\t// only perform validation if value is not being updated, otherwise validate will be called twice unnecessarily\n\t\t\tsetFieldTouched(field.name, touched, !updatingValue)\n\t\t}\n\t\t// set\n\t\tif(updatingValue) setUpdatingValue(false)\n\n\t\treturn () => {\n\t\t\tsetTouched(false)\n\t\t}\n\n\t}, [touched])\n\n\tlet ReactDropdownSelectStyle = {\n\t\tborderColor: hasError && 'red',\n\t\tboxShadow: hasError && `0 0 5px red`,\n\t}\n\n\tconst errorMessage = getMessageFromError(meta.error);\n\n\treturn (\n\t\t<Container\n\t\t\tstyle={containerSyle}\n\t\t>\n\t\t\t{fieldLabel &&\n\t\t\t<LabelComponent>{fieldLabel}</LabelComponent>\n\t\t\t}\n\n\t\t\t<styled.DefaultFieldContentContainer>\n\t\t\t\t{/*<style.DefaultFieldDropdownContainer>*/}\n\t\t\t\t<DropDownSearch\n\t\t\t\t\tonBlur={()=>{}}\n\t\t\t\t\tstyle={{ReactDropdownSelectStyle, ...style}}\n\t\t\t\t\ttheme={props.theme}\n\t\t\t\t\tItemComponent={ItemComponent}\n\t\t\t\t\tContentComponent={ContentComponent}\n\t\t\t\t\tonDropdownClose={()=>{\n\t\t\t\t\t\t// set this field to touched if not already\n\t\t\t\t\t\tconst isTouched = meta.touched;\n\t\t\t\t\t\tif(!isTouched) {\n\t\t\t\t\t\t\tsetTouched(true)\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// call any additional function that was passed as prop\n\t\t\t\t\t\tonDropdownClose && onDropdownClose();\n\t\t\t\t\t}}\n\t\t\t\t\tvalues={field.value ? mapInput(field.value): []}\n\t\t\t\t\t{...field}\n\t\t\t\t\t{...props}\n\t\t\t\t\tonChange={values => {\n\t\t\t\t\t\t// update field value and set updating to true for use in the hook\n\t\t\t\t\t\tsetFieldValue(field.name, mapOutput(values));\n\t\t\t\t\t\tsetUpdatingValue(true)\n\t\t\t\t\t\tonChange && onChange(values)\n\t\t\t\t\t}}\n\t\t\t\t\tonRemoveItem={\n\t\t\t\t\t\t()=> {\n\t\t\t\t\t\t\t// set this field to touched if not already\n\t\t\t\t\t\t\tconst isTouched = meta.touched;\n\t\t\t\t\t\t\tif(!isTouched) {\n\t\t\t\t\t\t\t\tsetTouched(true)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tsetFieldValue(field.name, \"\");\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tonClearAll={()=>setFieldValue(field.name, \"\")}\n\t\t\t\t/>\n\t\t\t\t{/*</style.DefaultFieldDropdownContainer>*/}\n\n\t\t\t\t<ErrorTooltip\n\t\t\t\t\tvisible={hasError}\n\t\t\t\t\ttext={errorMessage}\n\t\t\t\t\tContainerComponent={styled.IconContainerComponent}\n\t\t\t\t/>\n\t\t\t</styled.DefaultFieldContentContainer>\n\t\t\t{/*\n\t\t\t{meta.touched && meta.error ? (\n\t\t\t\t<ErrorComponent className=\"error\">{Object.values(meta.error)}</ErrorComponent>\n\t\t\t) : null}\n\t\t\t*/}\n\n\t\t</Container>\n\t);\n};\n\n// Specifies propTypes\nDropDownSearchField.propTypes = {\n\tLabelComponent: PropTypes.elementType,\n\tFieldDropdownContainer: PropTypes.elementType,\n\tFieldContentContainer: PropTypes.elementType,\n\tstyle: PropTypes.object,\n\tmapInput: PropTypes.func,\n\tmapOutput: PropTypes.func,\n};\n\n// Specifies the default values for props:\nDropDownSearchField.defaultProps = {\n\tLabelComponent: styled.TitleContainer,\n\tFieldDropdownContainer: styled.DefaultFieldDropdownContainer,\n\tFieldContentContainer: styled.DefaultFieldContentContainer,\n\tContainer: styled.DefaultContainer,\n\tonChange: null,\n\tmapInput: (val) => val,\n\tmapOutput: (val) => val,\n\tstyle: {}\n};\n\nexport default DropDownSearchField;\n","import uuid from 'uuid'\nimport {DEVICE_CONSTANTS} from \"../../constants/device_constants\";\nimport  store  from \"../../redux/store/index\";\nimport {defaultTask} from \"../../constants/route_constants\";\nimport {isArray} from \"./array_utils\";\nimport {useSelector} from \"react-redux\";\n\n/**\n * Creates a default route based on store state\n */\nexport const generateDefaultRoute = (obj) => {\n    const storeState = store.getState()\n    const MiRMapEnabled = storeState.localReducer.localSettings.MiRMapEnabled\n    const currentMap = storeState.mapReducer.currentMap\n\n    return {\n        ...defaultTask,\n        device_types: !!MiRMapEnabled ? [DEVICE_CONSTANTS.MIR_100, DEVICE_CONSTANTS.HUMAN] : [DEVICE_CONSTANTS.HUMAN],\n        handoff: true,\n        map_id: currentMap._id,\n        load: {...defaultTask.load},\n        unload: {...defaultTask.unload},\n        obj: obj ? obj : null,\n        _id: uuid.v4(), // NOTE - ID IS GENERATED HERE INSTEAD OF IN defaultTask SO THE ID IS GENERATED EACH TIME THE FUNCTION IS CALLED\n    }\n}\n\nexport const isHumanTask = (task) => {\n    return task && isArray(task.device_types) && task.device_types.includes(DEVICE_CONSTANTS.HUMAN)\n}\n\nexport const buildDefaultRouteName = (nameA, nameB) => {\n    if(!nameA) return \"\"\n    return nameA + \" => \" + nameB\n}\n\n/*\n* Returns true if task ONLY supports human device (and no other types), and false otherwise\n* */\nexport const isOnlyHumanTask = (task) => {\n    var containsHuman = false\n    var containsNonHuman = false\n    if(task && isArray(task.device_types)) {\n        task.device_types.forEach((currType) => {\n            if( currType === DEVICE_CONSTANTS.HUMAN ) containsHuman = true\n            if( currType !== DEVICE_CONSTANTS.HUMAN )  containsNonHuman = true\n        })\n    }\n\n\n    return !containsNonHuman && containsHuman\n}\n\nexport const isMiRandHumanTask = (task) => {\n    return task && isArray(task.device_types) && task.device_types.includes(DEVICE_CONSTANTS.MIR_100) && task.device_types.includes(DEVICE_CONSTANTS.HUMAN)\n}\n\n\nexport const isMiRTask = (task) => {\n    return task && isArray(task.device_types) && task.device_types.includes(DEVICE_CONSTANTS.MIR_100)\n}\n\nexport const getRouteProcesses = (routeId) => {\n    const storeState = store.getState()\n    const processes = storeState.processesReducer.processes\n\n    return Object.values(processes).filter((currProcess, currIndex) => {\n        if(currProcess.routes.includes(routeId)) return true\n    })\n}\n\nexport const isNextRouteViable = (currentRoute, nextRoute) => {\n    const currentUnloadStationId = getUnloadStationId(currentRoute)\n    const nextLoadStationId = getLoadStationId(nextRoute)\n\n    if (currentUnloadStationId === nextLoadStationId) {\n        return true\n    }\n}\n\nexport const getUnloadStationId = (route) => {\n    return route?.unload?.station\n}\n\nexport const getUnloadPositionId = (route) => {\n    return route?.unload?.position\n}\n\nexport const getLoadStationId = (route) => {\n    return route?.load?.station\n}\n\nexport const getLoadPositionId = (route) => {\n    return route?.load?.position\n}\n\nexport const getRouteStart = (route) => {\n    let hasStart = getLoadStationId(route)\n    if(!hasStart) hasStart = getLoadPositionId(route)\n\n    return hasStart\n}\n\nexport const getRouteEnd = (route) => {\n    let hasEnd = getUnloadStationId(route)\n    if(!hasEnd) hasEnd = getUnloadPositionId(route)\n\n    return hasEnd\n}\n\nexport const isStationLoadStation = (route, stationId) => {\n    return stationId === getLoadStationId(route)\n}\n\n\n\nexport const isStationUnloadStation = (route, stationId) => {\n    return stationId === getUnloadStationId(route)\n}\n\nexport const isPositionAtLoadStation = (route, positionId) => {\n    const storeState = store.getState()\n    const stations = storeState.stationsReducer.stations || {}\n\n    // get load station\n    const loadStationId = getLoadStationId(route)\n    const loadStation = stations[loadStationId] || { children: [] }\n\n\n    // if loadStation's children includes positionId, return true\n    if (loadStation.children.includes(positionId)) return true\n\n    // otherwise return false\n    return false\n}\n\nexport const isPositionAtUnloadStation = (route, positionId) => {\n    const storeState = store.getState()\n    const stations = storeState.stationsReducer.stations || {}\n\n    // get load station\n    const unloadStationId = getUnloadStationId(route)\n    const unloadStation = stations[unloadStationId] || { children: [] }\n\n\n    // if loadStation's children includes positionId, return true\n    if (unloadStation.children.includes(positionId)) return true\n\n    // otherwise return false\n    return false\n\n}\n\nexport const isPositionInRoutes = (routes, positionId) => {\n    const storeState = store.getState()\n    const stations = storeState.stationsReducer.stations || {}\n\n    for(const currRoute of routes) {\n\n        const {\n            load,\n            unload\n        } = currRoute || {}\n\n        const {\n            station: loadStationId\n        } = load || {}\n        const loadStation = stations[loadStationId] || { children: [] }\n        if(loadStation.children.includes(positionId)) return true   // found station with position as child, return true\n\n        const {\n            station: unloadStationId\n        } = unload || {}\n        const unloadStation = stations[unloadStationId] || { children: [] }\n        if(unloadStation.children.includes(positionId)) return true // found station with position as child, return true\n    }\n\n    return false // none of the station's contained the position\n}\n\nexport const getLoadStationDashboard = (route) => {\n    const storeState = store.getState()\n    const stations = storeState.stationsReducer.stations || {}\n\n    const loadStationId = getLoadStationId(route)\n\n    const station = stations[loadStationId] || {}\n\n    const dashboards = isArray(station.dashboards) ?  station.dashboards : [null]\n\n    return dashboards[0]\n}\n\nexport const getRouteIndexInRoutes = (processRouteIds, routeId) => {\n    return processRouteIds.indexOf(routeId)\n}\n\nexport const isStationInRoutes = (routes, stationId) => {\n    let containsStation = false\n\n    for(const currRoute of routes) {\n        if(containsStation) return containsStation\n\n            const {\n                load,\n                unload\n            } = currRoute || {}\n\n        const {\n            station: loadStationId\n        } = load || {}\n\n        const {\n            station: unloadStationId\n        } = unload || {}\n\n        if((loadStationId === stationId) || (unloadStationId === stationId)) containsStation = true\n    }\n\n    return containsStation\n}","export const SET_MODE = 'SET_MODE'\nexport const SET_ACTION = 'SET_ACTION'\nexport const SET_WIDTH = 'SET_WIDTH'\nexport const SET_OPEN = 'SET_OPEN'\n","export const WIDGET_PAGE_LOADED = 'WIDGET_PAGE_LOADED'\nexport const WIDGET_XY_COORDINATES = 'WIDGET_XY_COORDINATES'\nexport const WIDGET_LOADED = 'WIDGET_LOADED'\nexport const HOVER_STATION_INFO = 'HOVER_STATION_INFO'\n","import axios from 'axios';\n// import * as log from 'loglevel';\n\nimport logger from '../logger'\n\nimport { apiIPAddress } from '../settings/settings'\nconst operator = 'dashboards'\nconst log = logger.getLogger('Api')\n\nexport async function getDashboards() {\n    try {\n        const response = await axios({\n            method: 'get',\n            url: apiIPAddress() + operator,\n            headers: {\n                'X-API-Key': '123456',\n                'Access-Control-Allow-Origin': '*'\n            }\n        });\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n\n}\n\nexport async function deleteDashboards(ID) {\n    try {\n        const response = await axios({\n            method: 'DELETE',\n            url: apiIPAddress() + operator + '/' + ID,\n            headers: {\n                'Accept': 'application/json',\n                'X-API-Key': '123456',\n                'Access-Control-Allow-Origin': '*'\n            },\n        });\n\n        // Success 🎉\n        // log.debug('response',response);\n        // const data = response.data;\n        // const dataJson = JSON.parse(data)\n        return response;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}\n\nexport async function postDashboards(dashboards) {\n    try {\n        const response = await axios({\n            method: 'POST',\n            url: apiIPAddress() + operator,\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'application/json',\n                'Access-Control-Allow-Origin': '*'\n            },\n            data: dashboards\n        });\n\n        // Success 🎉\n        // log.debug('response',response);\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        // log.debug('response data json',dataJson);\n\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}\n\nexport async function putDashboards(dashboard, ID) {\n\n    try {\n        const response = await axios({\n            method: 'PUT',\n            url: apiIPAddress() + operator + '/' + ID,\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'text/html',\n                'Access-Control-Allow-Origin': '*'\n            },\n            data: dashboard\n        });\n\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}\n","import styled, {css} from \"styled-components\";\nimport { Draggable } from 'react-smooth-dnd';\nimport {rowCss} from \"../card_editor/card_editor.style\";\nimport * as commonCss from \"../../../../../common_css/common_css\";\n\nexport const Container = styled.div`\n \n     height: fit-content;\n  \n\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    overflow: hidden;\n        \n    background: white;\n    border-radius: 0.6rem;\n  \tborder: 3px solid ${props => props.color};\n  \n    outline: none;\n    &:focus {\n        outline: none;\n    }\n\n    letter-spacing: 1.5px;\n    box-shadow: 2px 2px 2px rgba(0, 0, 0, 0.5);\n    \n    outline: none;\n    user-select: none;\n\n    transition: transform 0.2s ease;\n\n    cursor: grab;\n    &:active {\n        box-shadow: 2px 2px 2px rgba(0,0,0,0.5);\n        transform: translateY(-2px);\n        cursor: grabbing;\n    }\n\n  &:hover {\n    box-shadow: 2px 2px 2px rgba(0,0,0,0.5);\n    transform: translateY(-2px);\n    cursor: grabbing;\n  }\n    \n    color: black;\n  \n  ${props => props.selectable && (props.isSelected ? selectedCss : notSelectedCss)};\n  ${props => props.containerStyle};\n`\n\nconst selectedCss = css`\n\t${commonCss.goodGlow};\n\n  &:active {\n    ${commonCss.goodGlow};\n    transform: translateY(-2px);\n    cursor: grabbing;\n  }\n\n  &:hover {\n    ${commonCss.goodGlow};\n    transform: translateY(-2px);\n    cursor: grabbing;\n  }\n`\n\nconst notSelectedCss = css`\n  filter: contrast(70%);\n`\n\nexport const Row = styled.div`\n    display: flex;\n    width: 100%;\n    border-bottom: 1px solid ${props => props.theme.bg.quaternary};\n    justify-content: space-between;\n    padding: .25rem 0 .25rem 0;\n`\n\nexport const ContentContainer = styled.div`\n\tpadding: 0.5rem .25rem 0rem .25rem;\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n`\n\nexport const CardName = styled.span`\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-weight: 600;\n`\n\nexport const Count = styled.span`\n\tfont-size: ${props => props.theme.fontSize.sz4};\n`\n\nexport const LotName = styled.span`\n  font-size: ${props => props.theme.fontSize.sz6};\n  //overflow: hidden;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`\n\nexport const FooterBar = styled.div`\n\theight: fit-content;\n\tbackground: ${props => props.theme.bg.septenary};\n\t// background: ${props => props.color};\n\tdisplay: flex;\n\tjustify-content: space-between;\n\tpadding: 0 1rem 0 1rem;\n  font-size: ${props => props.theme.fontSize.sz4};\n`\n\nexport const HeaderBar = styled.div`\n\theight: fit-content;\n\tbackground: ${props => props.theme.bg.septenary};\n  \t//background: ${props => props.color};\n\tdisplay: flex;\n\tjustify-content: flex-start;\n\tpadding: 0 0rem 0 1rem;\n  font-size: ${props => props.theme.fontSize.sz3};\n`\n\nexport const StyledDraggable = styled(Draggable)`\n\t.smooth-dnd-ghost .vertical .smooth-dnd-draggable-wrapper {\n\t\tbackground: blue;\n\t\tpadding: 2rem;\n\t}\n`\n\nexport const DatesContainer = styled.span`\n\tdisplay: inline-flex;\n\talign-items: center;\n\tjustify-content: center;\n    width: fit-content;\n    \n`\n\nexport const DateItem = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: center;\n\n\t\n\t&:hover {\n\t\tcursor: pointer;\n\t}\n\t\n`\n\nexport const DateArrow = styled.i`\n\tmargin-left: .35rem;\n\tmargin-right: .35rem;\n\tcolor: ${props => props.theme.bg.secondary};\n`\n\nexport const DateText = styled.span`\n\nfont-size: ${props => props.theme.fontSize.sz4};\n\n`\n\nexport const Label = styled.span`\n    font-size: ${props => props.theme.fontSize.sz4};\n    font-weight: 600;\n`","import React, {useState} from \"react\";\nimport {useSelector} from \"react-redux\";\nimport * as styled from \"./card.style\";\nimport { Draggable } from 'react-smooth-dnd';\nimport PropTypes from \"prop-types\";\nimport TextField from \"../../../../basic/form/text_field/text_field\";\n\n\n\nfunction hashCode(str) { // java String#hashCode\n    var hash = 0;\n    for (var i = 0; i < str.length; i++) {\n        hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    return hash;\n}\n\nfunction intToRGB(i){\n    var c = (i & 0x00FFFFFF)\n        .toString(16)\n        .toUpperCase();\n\n    return \"00000\".substring(0, 6 - c.length) + c;\n}\n\n\n\n\nconst Card = (props) => {\n    const {\n        name,\n        index,\n        id,\n        onClick,\n        count,\n        objectName,\n        lotName,\n        lotId = 2,\n        start_date,\n        end_date,\n        containerStyle,\n        selectable,\n        isSelected\n    } = props\n\n    const startDateText = ((start_date?.month + 1) && start_date?.day && start_date?.year) ?  (start_date.month + 1) + \"/\" + start_date.day + \"/\" + start_date.year : \"Start\"\n    const endDateText = ((end_date?.month + 1) && end_date?.day && end_date?.year) ?  (end_date.month + 1) + \"/\" + end_date.day + \"/\" +end_date.year : \"End\"\n\n    const lotColor= \"#\" + intToRGB(hashCode(lotId))\n\n    return(\n        <styled.StyledDraggable key={id} index={index}>\n            <styled.Container\n                selectable={selectable}\n                isSelected={isSelected}\n                onClick={onClick}\n                color={lotColor}\n                containerStyle={containerStyle}\n            >\n                <styled.HeaderBar\n                    color={lotColor}\n                >\n                    <styled.CardName>{name}</styled.CardName>\n                </styled.HeaderBar>\n                <styled.ContentContainer>\n\n                    <styled.Row>\n                        <styled.Label>Dates</styled.Label>\n                    <styled.DatesContainer>\n                        <styled.DateItem>\n                            <styled.DateText>{startDateText}</styled.DateText>\n                        </styled.DateItem>\n\n                        <styled.DateArrow className=\"fas fa-arrow-right\"></styled.DateArrow>\n\n                        <styled.DateItem>\n                            <styled.DateText>{endDateText}</styled.DateText>\n                        </styled.DateItem>\n                    </styled.DatesContainer>\n                    </styled.Row>\n\n                    <styled.Row style={{border: \"none\"}}>\n                        <styled.Label>Quantity</styled.Label>\n                        <styled.Count>{count}</styled.Count>\n                    </styled.Row>\n\n\n\n\n\n\n                </styled.ContentContainer>\n\n\n                {/*<styled.FooterBar*/}\n                {/*    color={lotColor}*/}\n                {/*>*/}\n\n\n                {/*    {objectName &&*/}\n                {/*        <styled.Count style={{marginRight: \"1rem\"}}>{objectName}:</styled.Count>*/}\n                {/*    }*/}\n\n\n                {/*</styled.FooterBar>*/}\n\n            </styled.Container>\n        </styled.StyledDraggable>\n    )\n}\n\n// Specifies propTypes\nCard.propTypes = {\n    isSelected: PropTypes.bool,\n    selectable: PropTypes.bool\n};\n\n// Specifies the default values for props:\nCard.defaultProps = {\n    isSelected: false,\n    selectable: false\n};\n\nexport default Card","import  store  from \"../redux/store/index\";\n\n// import logger\nimport log from \"../logger.js\";\n\nconst logger = log.getLogger(\"Configuration\");\n\n// disable defaut logging\n//console.log = () => {};\n\nexport const mirURL = (url) => {\n    // const mirURL = url\n    const mirURL = \"10.1.10.35\";\n    const prefix = \"http://\";\n    const URL = prefix + mirURL;\n    return URL;\n};\n\nexport const apiIPAddress = () => {\n    const storeState = store.getState();\n    let apiIPAddress = \"\";\n    let hostServerIpAddress = \"\";\n\n    /**\n     * READ ME: Do not change IP address here. Go to the settings tab in the interface, select Non Local API IP Address and type in the api ip address\n     * If non local api is true, then the server is running on an IP address entered\n     */\n\n    if (!!storeState.localReducer && !!storeState.localReducer.localSettings && storeState.localReducer.localSettings.non_local_api) {\n\n        // If there is no api use the local host\n        if (storeState.localReducer.localSettings.non_local_api_ip === undefined) {\n            return apiIPAddress = 'http://' + 'localhost' + ':5000/api/'\n        } else {\n            hostServerIpAddress = storeState.localReducer.localSettings.non_local_api_ip;\n            return apiIPAddress = 'http://' + hostServerIpAddress + ':5000/api/'\n        }\n    } else {\n        return apiIPAddress = 'http://' + window.location.hostname + ':5000/api/'\n    }\n};\n\nstore.subscribe(apiIPAddress);\n","import styled, { css } from 'styled-components'\nimport * as commonCss from \"../../common_css/common_css\";\n\nexport const HilContainer = styled.div`\n    position: absolute;\n    // right: 1rem;\n    // top: .5rem;\n    // left: 1rem;\n    // bottom: 2rem;\n    //margin: .5rem 1rem 2rem 1rem;\n    width: 98%;\n    height: 98%;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%,-50%);\n\n    z-index: 1000;\n    border-radius: 1rem;\n    box-shadow: 0 0.2rem 0.4rem 0rem #303030;\n    display: flex;\n    /* flex-flow: row; */\n    flex-direction: column;\n    background-color: white;\n\n    //overflow-y: scroll;\n     overflow: hidden;\n\n    ::-webkit-scrollbar {\n        display: none;  /* Safari and Chrome */\n    }\n\n`\n\nexport const HilInputContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    margin-bottom: 3rem;\n    margin-top: 1rem;\n`\n\nexport const HilInput = styled.input`\n    margin: 1rem 1rem;\n    border-radius: .5rem;\n    text-align: center;\n    width: 8rem;\n    font-size: 2rem;\n    -webkit-appearance: none !important;\n    &:focus{\n        outline: 0 !important;\n        border-color: #56d5f5;\n    }\n`\nexport const HilInputIconContainer = styled.div`\n    display: flex;\n    flex-direction:row;\n    height: 3.3rem;\n\n    margin-left:0.4rem;\n    margin-right:0.4rem;\n    margin-top:1rem;\n\n    border-radius: 0.5rem;\n    border: 0.2rem solid;\n    border-color: ${props => props.theme.bg.quinary};\n    background-color: ${props => props.theme.bg.quinary};\n\n\n    &:hover {\n        cursor: pointer;\n    }\n\n    &:active{\n        filter: brightness(85%);\n        text-shadow: none;\n    }\n`\nexport const HilInputIconText = styled.h1`\n  font-size: 2.5rem;\n  font-weight: 500;\n  padding-right:.3rem;\n  user-select: none;\n\n  text-shadow: 0.05rem 0.05rem 0.15rem #303030;\n  transition: text-shadow 0.1s ease, filter 0.1s ease;\n\n\n`\nexport const HilInputIcon = styled.i`\n    padding-top: .45rem;\n    margin-left:.5rem;\n    margin-right:.5rem;\n    font-size: 2rem;\n    text-shadow: 0.05rem 0.05rem 0.2rem #303030;\n    transition: text-shadow 0.1s ease, filter 0.1s ease;\n    color: #90eaa8;\n\n`\n\nexport const HilExitModal = styled.i`\n\n    font-size: 5rem;\n    text-shadow: 0.05rem 0.05rem 0.2rem #303030;\n    transition: text-shadow 0.1s ease, filter 0.1s ease;\n    //padding-left:2rem;\n    //padding-top:1rem;\n    margin-right: 1rem;\n\n    &:hover {\n        cursor: pointer;\n    }\n\n    &:active{\n        filter: brightness(85%);\n        text-shadow: none;\n    }\n`\n\nexport const HilBorderContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    position: relative;\n    flex: 1;\n    overflow: auto;\n\n`\n\nexport const HilButtonContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    width: 100%;\n    max-width: 50rem;\n    margin-top: 2rem;\n\n    @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n        padding: 0rem 2rem;\n    }\n\n\n\n`\n\nexport const LotSelectorContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n\n    width: 100%;\n\n    overflow: hidden;\n`\n\nexport const LotsContainer = styled.div`\n    display: flex;\n    position: relative;\n    flex-direction: column;\n    width: 100%;\n    overflow: auto;\n    flex: 1;\n    /* padding: 2rem 1rem 1rem 1rem; */\n    padding: 1rem;\n    align-items: center;\n`\n\nexport const NoLotsContainer = styled.div`\n    display: flex;\n    position: relative;\n    flex-direction: column;\n    width: 100%;\n    flex: 1;\n    align-items: center;\n    justify-content: center;\n`\n\nexport const NoLotsText = styled.span`\n    font-size: ${props => props.theme.fontSize.sz1};\n    font-family: ${props => props.theme.font.primary};\n`\n\n\nexport const SubtitleContainer = styled.div`\n    display: flex;\n    width: 100%;\n    overflow: auto;\n    justify-content: center;\n    padding-bottom:1rem;\n`\n\nexport const FooterContainer = styled.div`\n    background: ${props => props.theme.bg.septenary};\n    border-top: 1px solid ${props => props.theme.bg.tertiary};\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: .5rem;\n    flex-direction: row;\n`\n\n\nexport const HilMessage = styled.h3`\n    display: flex;\n    font-family: ${props => props.theme.font.primary};\n    justify-content: center;\n    align-self: center;\n\n    //padding-top: 1rem;\n    //margin-top: 3rem;\n    padding: 0;\n    margin: 0;\n    font-size: ${props => props.theme.fontSize.sz1};\n    text-align: center;\n`\n\nexport const HilSubtitleMessage = styled.h4`\n    display: flex;\n    font-family: ${props => props.theme.font.primary};\n    justify-content: center;\n    margin-bottom: 1.5rem;\n    //margin-top: 3rem;\n    padding: 0;\n    margin: 0;\n    font-size: 1.6rem;\n    text-align: center;\n`\n\nexport const HilSubText = styled.span`\n    font-family: ${props => props.theme.font.primary};\n    font-size: ${props => props.theme.fontSize.sz3};\n`\n\nexport const LotDropdownContainer = styled.div`\n  width: 50%;\n  margin-top: 2rem;\n  display: flex;\n  flex-direction: column;\n`\n\nconst iconButtonCss = css`\n    text-shadow: 0.05rem 0.05rem 0.2rem #303030;\n    //transition: text-shadow 0.1s ease, filter 0.1s ease;\n    &:hover {\n        cursor: pointer;\n        filter: brightness(85%);\n    }\n\n    &:active{\n        filter: brightness(85%);\n        text-shadow: none;\n    }\n\n    background: none;\n    outline: none;\n    border: none;\n\n    &:focus {\n        outline: none;\n    }\n`\n\nexport const DeselectLotIcon = styled.button`\n    ${iconButtonCss};\n    font-size: 3rem;\n    position: absolute;\n    top: 0;\n    left: 0;\n    transform: translate(-25%,-25%);\n    color: red;\n`\n\nexport const LotTitle = styled.span`\n  display: inline-flex;\n  font-family: ${props => props.theme.font.primary};\n  justify-content: center;\n  align-self: center;\n  align-items: center;\n  font-size: ${props => props.theme.fontSize.sz1};\n  text-align: center;\n`\n\nexport const HilTimer = styled.p`\n    padding: 0;\n    margin: 0;\n    display: flex;\n    justify-content: center;\n    font-family: ${props => props.theme.font.primary};\n    font-weight: bold;\n    font-size: ${props => props.theme.fontSize.sz2};\n    color: ${props => props.theme.fg.primary};\n`\n\n\nconst HilButtonCss = css`\n  border: none;\n\n    border-radius: 1rem;\n    box-shadow: 0 0.1rem 0.2rem 0rem #303030;\n    height: 100%;\n    min-height: 5rem;\n    max-height: 7rem;\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    transition: background-color 0.25s ease, filter 0.1s ease;\n    background-color: ${props => props.color};\n\n    margin-bottom: 2rem;\n\n    filter: brightness(${props => props.filter});\n\n    &:focus{\n        outline: 0 !important\n    }\n\n    &:active{\n        box-shadow: none;\n        filter: brightness(85%);\n    }\n\n    @media (max-width: ${props => props.theme.widthBreakpoint.tablet}){\n        height: 9rem;\n    }\n`\nexport const ColumnContainer = styled.div`\n  display: flex;\n    flex-direction: column;\n`\n\nexport const RowContainer = styled.div`\n  display: flex;\n    flex-direction: row;\n`\n\nexport const Header = styled.div`\n    display:flex;\n    flex-direction: row;\n    width: 100%;\n    background: ${props => props.theme.bg.septenary};\n    border-bottom: 1px solid ${props => props.theme.bg.tertiary};\n    align-items: center;\n    justify-content: space-around;\n    align-items: center;\n    padding: .5rem 1rem;\n`\n\nexport const HeaderMainContent = styled.div`\n    display: flex;\n    width: 100%;\n    align-items: center;\n    justify-content: center;\n    align-items: center;\n    margin-bottom: 1rem;\n`\n\n\nexport const HilIcon = styled.i`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    //margin: auto auto;\n    color:  ${props => props.color};\n    fill: green;\n    font-size: 2.5rem;\n    margin-right: 1rem;\n    &:hover {\n        cursor: pointer;\n    }\n\n    &:active{\n        filter: brightness(85%)\n    }\n`\n\nexport const HilButton = styled.button`\n    ${HilButtonCss};\n    align-items: center;\n    justify-content: center;\n\n    //min-height: 5rem;\n    //height: 5rem;\n    //max-height: 5rem;\n    //width: fit-content;\n    display: flex;\n    flex-direction: row;\n    padding: 0rem 3rem;\n    align-items: center;\n    justify-content: center;\n\n\n`\n\nexport const LotButton = styled.button`\n    ${HilButtonCss};\n    align-items: center;\n    justify-content: center;\n    min-height: 5rem;\n    height: 5rem;\n    width: 100%;\n    color: black;\n    ${props => !props.isSelected && \"filter: grayscale(80%)\"};\n    // border: ${props => props.isSelected ? \"1px solid cyan\" : \"none\"};\n\n     background-color: #805858;\n    margin-bottom: 2rem;\n`\n\nexport const FooterButton = styled.button`\n    ${HilButtonCss};\n\n    min-height: 5rem;\n    height: 5rem;\n    max-height: 5rem;\n    width: fit-content;\n\n    margin-left: 0.5rem;\n    margin-right: 0.5rem;\n    margin-bottom: 0rem;\n    display: flex;\n    flex-direction: row;\n    padding: 0rem 3rem;\n    align-items: center;\n    justify-content: center;\n\n`\n\n\n\nexport const LotButtonText = styled.p`\n    color:  black;\n    font-size: 2rem;\n    margin: 0;\n    padding: 0;\n`\nexport const LotTitleDescription = styled.span`\ncolor:  black;\n    font-size: 2rem;\n    margin: 0;\n    padding: 0;\n    margin-right: 1rem;\n`\n\nexport const SelectedLotContainer = styled.div`\n    // background: red;\n    display: flex;\n    //padding: .5rem;\n    align-items: center;\n    //margin-bottom: 1rem;\n    //padding: .25rem 2.5rem;\n    //m\n\n`\n\nexport const SelectedLotName = styled.div`\n    display: flex;\n    align-items: center;\n    background: ${props => props.theme.bg.quinary};\n    padding: .5rem;\n    border-radius: 1rem;\n    padding: .25rem 2.5rem;\n    min-height: 3.5rem;\n\n`\n\nexport const InvisibleItem = styled.div`\n    visibility: hidden;\n    margin-left: auto;\n    height: 1rem;\n    width: 1rem;\n\n`\n\nexport const LotTitleName = styled.span`\n    // color:  white;\n    font-size: 2rem;\n    margin: 0;\n    padding: 0;\n\n`\n\nexport const EditLotIcon = styled.button`\n    ${iconButtonCss};\n    color: white;\n    margin-left: 2rem;\n    font-size: 1.5rem;\n\n\n`\n\nexport const HilButtonText = styled.p`\n    color:  ${props => props.color};\n    font-size: 2rem;\n    margin: 0;\n    padding: 0;\n`\n\nexport const HilButtonQuantityText = styled.p`\n    color:  ${props => props.color};\n    font-size: 2rem;\n    margin-left: 1.5rem;\n    padding-top: .6rem;\n`\n\nexport const CardContainer = styled.div`\n    width: 80%;\n`\n\n\n","import axios from 'axios';\nimport log from \"../logger\"\n\nimport { apiIPAddress } from '../settings/settings'\nconst operator = 'task_queue'\n\nconst logger = log.getLogger(\"TaskQueue\")\n\nexport async function getTaskQueue() {\n    try {\n        const response = await axios({\n            method: 'get',\n            url: apiIPAddress() + operator,\n            headers: {\n                'X-API-Key': '123456',\n                'Access-Control-Allow-Origin': '*'\n            }\n        });\n        // Success 🎉\n        const data = response.data;\n\n        const dataJson = JSON.parse(data)\n\n        return dataJson;\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        throw error\n        log.debug('error', error);\n    }\n\n\n}\n\nexport async function postTaskQueue(taskQueueItem) {\n    try {\n        const response = await axios({\n            method: 'post',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'application/json',\n                'Access-Control-Allow-Origin': '*'\n            },\n            data: taskQueueItem,\n            url: apiIPAddress() + operator,\n        });\n\n        // Success 🎉\n        log.debug('postTaskQueue: response', response);\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        log.debug('dataJson', dataJson)\n        log.debug('getSchedulesdataJson', dataJson)\n        return dataJson;\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            console.error('postTaskQueue: error.response.data', error.response.data);\n            console.error('postTaskQueue: error.response.status', error.response.status);\n            console.error('postTaskQueue: error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            console.error('postTaskQueue: error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            console.error('postTaskQueue: error.message', error.message);\n        }\n        throw error\n        console.error('postTaskQueue: error', error);\n    }\n\n\n}\n\nexport async function deleteTaskQueueAll() {\n    try {\n        const response = await axios({\n            method: 'delete',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'application/json',\n                'Access-Control-Allow-Origin': '*'\n            },\n            url: apiIPAddress() + operator,\n        });\n\n        // Success 🎉\n        // log.debug('deleteTaskQueueAll: response',response);\n        const data = response.data;\n\n        return data;\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            console.error('deleteTaskQueueAll: error.response.data', error.response.data);\n            console.error('deleteTaskQueueAll: error.response.status', error.response.status);\n            console.error('deleteTaskQueueAll: error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            console.error('deleteTaskQueueAll: error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            console.error('deleteTaskQueueAll: error.message', error.message);\n        }\n        throw error\n        console.error('deleteTaskQueueAll: error', error);\n    }\n\n\n}\n\n\nexport async function deleteTaskQueueItem(id) {\n    try {\n        const response = await axios({\n            method: 'delete',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'application/json',\n                'Access-Control-Allow-Origin': '*'\n            },\n            url: apiIPAddress() + operator + '/' + id,\n        });\n\n        // Success 🎉\n        // log.debug('deleteTaskQueueItem: response',response);\n        const data = response.data;\n\n        return data;\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            console.error('deleteTaskQueueItem: error.response.data', error.response.data);\n            console.error('deleteTaskQueueItem: error.response.status', error.response.status);\n            console.error('deleteTaskQueueItem: error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            console.error('deleteTaskQueueItem: error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            console.error('deleteTaskQueueItem: error.message', error.message);\n        }\n        throw error\n    }\n\n\n}\n\nexport async function putTaskQueueItem(item, ID) {\n    try {\n        const response = await axios({\n            method: 'PUT',\n            url: apiIPAddress() + operator + '/' + ID,\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'text/html',\n                'Access-Control-Allow-Origin': '*'\n            },\n            data: item\n        });\n\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}","import axios from 'axios';\n// import * as log from 'loglevel';\n\nimport logger from '../logger'\n\nimport { apiIPAddress } from '../settings/settings'\nconst operator = 'cards'\nconst log = logger.getLogger('Api')\n\nexport async function getCard(cardId) {\n    try {\n        const response = await axios({\n            method: 'get',\n            url: apiIPAddress() + operator + \"/\" + cardId,\n            headers: {\n                'X-API-Key': '123456',\n                'Access-Control-Allow-Origin': '*'\n            }\n        });\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n\n}\n\nexport async function getCards() {\n    try {\n        const response = await axios({\n            method: 'get',\n            url: apiIPAddress() + operator,\n            headers: {\n                'X-API-Key': '123456',\n                'Access-Control-Allow-Origin': '*'\n            }\n        });\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n\n}\n\n\nexport async function getProcessCards(processId) {\n    try {\n        const response = await axios({\n            method: 'get',\n            url: apiIPAddress() + \"processes/\" + processId + \"/cards\",\n            headers: {\n                'X-API-Key': '123456',\n                'Access-Control-Allow-Origin': '*'\n            }\n        });\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n\n}\n\nexport async function deleteCard(ID) {\n    try {\n        const response = await axios({\n            method: 'DELETE',\n            url: apiIPAddress() + operator + '/' + ID,\n            headers: {\n                'Accept': 'application/json',\n                'X-API-Key': '123456',\n            },\n        });\n\n        // Success 🎉\n        // log.debug('response',response);\n        // const data = response.data;\n        // const dataJson = JSON.parse(data)\n        return response;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}\n\nexport async function postCard(card) {\n    try {\n        const response = await axios({\n            method: 'POST',\n            url: apiIPAddress() + operator,\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'application/json',\n                'Access-Control-Allow-Origin': '*'\n            },\n            data: card\n        });\n\n        // Success 🎉\n        // log.debug('response',response);\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        // log.debug('response data json',dataJson);\n\n\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}\n\nexport async function putCard(card, ID) {\n    try {\n        const response = await axios({\n            method: 'PUT',\n            url: apiIPAddress() + operator + '/' + ID,\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'text/html'\n            },\n            data: JSON.stringify(card)\n        });\n\n        // Success 🎉\n        // log.debug('response',response);\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}\n","export const SET_CONDITIONS_API = 'SET_CONDITIONS_API';\nexport const SET_SCHEDULES_API = 'SET_SCHEDULES_API';\nexport const SET_DASHBOARDS_API = 'SET_DASHBOARDS_API';\nexport const SET_SKILLS_API = 'SET_SKILLS_API';\nexport const SET_DASHBOARD_BUTTONS_API = 'SET_DASHBOARD_BUTTONS_API';\nexport const SET_STATUS_API = 'SET_STATUS_API';\nexport const SET_TASK_QUEUE_API = 'SET_TASK_QUEUE_API';\nexport const SET_TASKS_API = 'SET_TASKS_API';\nexport const STOP_API_CALLS = 'STOP_API_CALLS'\n\nexport const GET_ = 'GET_';\nexport const POST_ = 'POST_';\nexport const DELETE_ = 'DELETE_';\nexport const PUT_ = 'PUT_';\n\nexport const _STARTED = '_STARTED';\nexport const _SUCCESS = '_SUCCESS';\nexport const _FAILURE = '_FAILURE';\n","import React, { useState } from \"react\";\nimport { isEquivalent } from \"../../../methods/utils/utils\";\nimport {useField, useFormikContext} from \"formik\";\n\n// Updates fields in parent form\nconst useChange = (fieldName) => {\n\tconst { setFieldValue, setFieldTouched, validateOnChange, validateOnBlur, validateField, validateForm, ...context } = useFormikContext();\n\tconst [field, meta] = useField(fieldName ? fieldName : \"null\");\n\n\tlet value\n\tif(fieldName) {\n\t\tvalue = meta?.value || {}\n\t}\n\telse {\n\t\tvalue = context.values || {}\n\t}\n\n\tconst {\n\t\tchanged: changedSet\n\t} = value || {}\n\n\tconst [changed, setChanged] = useState(false);\n\tconst [initialValue, setInitialValue] = useState(value);\n\n\tReact.useEffect(() => {\n\n\t\t// if values have changed from initial values, set changed to true\n\n\t\tif(!changed) {\n\n\t\t\tconst issEquivalent = isEquivalent(initialValue, value)\n\n\n\t\t\tif(!issEquivalent) {\n\t\t\t\tsetChanged(true);\n\t\t\t\tsetFieldValue(fieldName ? `${fieldName}.changed` : 'changed', true);\n\t\t\t}\n\t\t}\n\n\t\telse {\n\t\t\tif(!changedSet) {\n\t\t\t\tsetChanged(false)\n\t\t\t\tsetInitialValue(value)\n\t\t\t}\n\t\t}\n\n\t\t// if values are changed back to original value, set changed to false\n\t\t// if(changed) {\n\t\t// \tconsole.log(\"beeep\")\n\t\t// \tif(issEquivalent) {\n\t\t// \t\tconsole.log(\"ayooo\")\n\t\t// \t\tsetChanged(false);\n\t\t// \t\tparentForm.setFieldValue(\"changed\", false);\n\t\t// \t}\n\t\t// }\n\n\t}, [value]);\n\n\t// handle mount and dismount\n\tReact.useEffect(() => {\n\t\t/* add any mount logic here\n\n\n\t\t */\n\n\t\t// dismount\n\t\treturn () => {\n\t\t\t// set changed to true\n\t\t\t// parentForm.setFieldValue(\"changed\", true);\n\t\t};\n\t}, []);\n};\n\nexport default useChange","// TASKS types\nexport const TASKS = 'TASKS';\nexport const TASK = 'TASK';\n\nexport const ANALYSIS = 'ANALYSIS';\n\nexport const GET_TASKS = 'GET_TASKS'\nexport const GET_TASKS_STARTED = 'GET_TASKS_STARTED'\nexport const GET_TASKS_SUCCESS = 'GET_TASKS_SUCCESS'\nexport const GET_TASKS_FAILURE = 'GET_TASKS_FAILURE'\n\nexport const GET_TASK = 'GET_TASK'\nexport const GET_TASK_STARTED = 'GET_TASK_STARTED'\nexport const GET_TASK_SUCCESS = 'GET_TASK_SUCCESS'\nexport const GET_TASK_FAILURE = 'GET_TASK_FAILURE'\n\nexport const POST_TASK = 'POST_TASK'\nexport const POST_TASK_STARTED = 'POST_TASK_STARTED'\nexport const POST_TASK_SUCCESS = 'POST_TASK_SUCCESS'\nexport const POST_TASK_FAILURE = 'POST_TASK_FAILURE'\n\nexport const PUT_TASK = 'PUT_TASK'\nexport const PUT_TASK_STARTED = 'PUT_TASK_STARTED'\nexport const PUT_TASK_SUCCESS = 'PUT_TASK_SUCCESS'\nexport const PUT_TASK_FAILURE = 'PUT_TASK_FAILURE'\n\nexport const DELETE_TASK = 'DELETE_TASK'\nexport const DELETE_TASK_STARTED = 'DELETE_TASK_STARTED'\nexport const DELETE_TASK_SUCCESS = 'DELETE_TASK_SUCCESS'\nexport const DELETE_TASK_FAILURE = 'DELETE_TASK_FAILURE'\n\nexport const ADD_TASK = 'ADD_TASK'\nexport const SET_TASKS = 'SET_TASKS'\nexport const UPDATE_TASK = 'UPDATE_TASK'\nexport const UPDATE_TASKS = 'UPDATE_TASKS'\nexport const REMOVE_TASK = 'REMOVE_TASK'\nexport const REMOVE_TASKS = 'REMOVE_TASKS'\nexport const SET_TASK_ATTRIBUTES = 'SET_TASK_ATTRIBUTES'\nexport const VALIDATE_TASK = 'VALIDATE_TASK'\nexport const SELECT_TASK = 'SELECT_TASK'\nexport const SET_SELECTED_TASK = 'SET_SELECTED_TASK'\nexport const DESELECT_TASK = 'DESELECT_TASK'\nexport const EDITING_TASK = 'EDITING_TASK'\n","export const CARD_DRAGGING = 'CARD_DRAGGING'\nexport const COLUMN_HOVERING = 'COLUMN_HOVERING'\nexport const SET_SIZE = \"SET_SIZE\"","import {DEVICE_CONSTANTS} from \"./device_constants\";\nimport uuid from 'uuid'\n\nexport const ROUTE_TYPES = {\n    PUSH: \"push\",\n    PULL: \"pull\"\n}\n\n\n/*\n* NOTE: DO NOT GENERATE ID HERE, OTHERWISE IT WILL ONLY BE GENERATED ONCE ON LOAD AND NEW TASKS WILL ALL HAVE THE SAME ID\n* */\nexport const defaultTask = {\n    name: '',\n    obj: null,\n    type: ROUTE_TYPES.PUSH,\n    quantity: 1,\n    device_types: [],\n    handoff: true,\n    track_quantity: true,\n    map_id: null,\n    new: true,\n    processes: [],\n    load: {\n        position: null,\n        station: null,\n        sound: null,\n        instructions: 'Load',\n        timeout: '09:00'\n    },\n    unload: {\n        position: null,\n        station: null,\n        sound: null,\n        instructions: 'Unload'\n    },\n}","import React, { useState, useMemo, useEffect } from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useParams, useHistory } from 'react-router-dom'\nimport { useTimer } from 'react-timer-hook'\n\nimport * as styled from './hil_modals.style';\nimport useWindowSize from '../../hooks/useWindowSize'\n\n// Import Components\nimport Textbox from '../basic/textbox/textbox'\nimport HILSuccess from './hil_modals_content/hil_success'\nimport DropDownSearch from \"../basic/drop_down_search_v2/drop_down_search\";\nimport DropDownSearchField from \"../basic/form/drop_down_search_field/drop_down_search_field\";\nimport Button from \"../basic/button/button\";\n\n// Import Actions\nimport { postTaskQueue, putTaskQueue, deleteTaskQueueItem } from '../../redux/actions/task_queue_actions'\nimport { postEvents } from '../../redux/actions/events_actions'\nimport { getTasks } from '../../redux/actions/tasks_actions'\n\n// Import API\nimport { putTaskQueueItem } from '../../api/task_queue_api'\n\n// Import Utils\nimport { deepCopy } from '../../methods/utils/utils'\nimport { getCards } from \"../../redux/actions/card_actions\";\nimport { sortBy } from \"../../methods/utils/card_utils\";\nimport { SORT_MODES } from \"../../constants/common_contants\";\nimport Card from \"../side_bar/content/cards/card/card\";\nimport { getRouteProcesses, getLoadStationId } from \"../../methods/utils/route_utils\";\n\n\n/**\n * Handles what type of HIL to display depending on the status\n */\nconst HILModals = (props) => {\n\n    const {\n        hilMessage,\n        hilType,\n        taskQuantity,\n        taskQueueID,\n        item\n    } = props\n\n    const {\n        dashboard: dashboardId\n    } = item || {}\n\n    const dispatch = useDispatch()\n    const dispatchGetCards = () => dispatch(getCards())\n    const dispatchTaskQueueItemClicked = (id) => dispatch({ type: 'TASK_QUEUE_ITEM_CLICKED', payload: id })\n    const disptachHILResponse = (response) => dispatch({ type: 'HIL_RESPONSE', payload: response })\n    const disptachPutTaskQueue = async (item, id) => await dispatch(putTaskQueue(item, id))\n    const dispatchSetActiveHilDashboards = (active) => dispatch({ type: 'ACTIVE_HIL_DASHBOARDS', payload: active })\n    const dispatchLocalHumanTask = (bol) => dispatch({ type: 'LOCAL_HUMAN_TASK', payload: bol })\n\n    const hilTimers = useSelector(state => { return state.taskQueueReducer.hilTimers })\n    const tasks = useSelector(state => { return state.tasksReducer.tasks })\n    const taskQueue = useSelector(state => state.taskQueueReducer.taskQueue)\n    const activeHilDashboards = useSelector(state => state.taskQueueReducer.activeHilDashboards)\n    const taskQueueItemClicked = useSelector(state => state.taskQueueReducer.taskQueueItemClicked)\n    const dashboardOpen = useSelector(state => state.dashboardsReducer.dashboardOpen)\n    const dashboards = useSelector(state => state.dashboardsReducer.dashboards) || {}\n    const objects = useSelector(state => state.objectsReducer.objects)\n    const cards = useSelector(state => state.cardsReducer.cards)\n\n    const [quantity, setQuantity] = useState(taskQuantity)\n    const [selectedTask, setSelectedTask] = useState(null)\n    const [associatedTask, setAssociatedTask] = useState(null)\n    const [trackQuantity, setTrackQuantity] = useState(null)\n    const [selectedLot, setSelectedLot] = useState(null)\n    const [isProcessTask, setIsProcessTask] = useState(true)\n    const [availableLots, setAvailableLots] = useState([])\n    const [selectedDashboard, setSelectedDashboard] = useState(null)\n    const [showLotSelector, setShowLotSelector] = useState(false)\n    const [didDisplayLots, setDidDisplayLots] = useState(false)\n    const [didSelectInitialLot, setDidSelectInitialLot] = useState(false)\n    const [hilLoadUnload, setHilLoadUnload] = useState('')\n    const [dataLoaded, setDataLoaded] = useState(false)\n    const [lotFilterValue, setLotFilterValue] = useState('')\n    const [shouldFocusLotFilter, setShouldFocusLotFilter] = useState('')\n    const [changeQtyMouseHold, setChangeQtyMouseHold] = useState('')\n    const [sortMode, setSortMode] = useState(SORT_MODES.END_ASCENDING)\n    const [lotsAtStation, setLotsAtStation] = useState(false)\n    const [taskHasProcess, setTaskHasProcess] = useState(false)\n    const [noLotsSelected, setNoLotsSelected] = useState(false)\n\n    const size = useWindowSize()\n    const windowWidth = size.width\n\n    const {\n        name: dashboardName,\n        station: stationId, //\"c754a665-f756-4c74-a7c5-e8c014039ba3\"\n    } = selectedDashboard || {}\n\n    const currentTask = tasks[item.task_id]\n\n    const {\n        type,\n        load,\n        unload\n    } = currentTask || {}\n\n    const {\n        station: unloadStationId\n    } = unload || {}\n\n    const {\n        station: loadStationId\n    } = load || {}\n\n    const {\n        name: selectedLotName,\n        _id: selectedLotId,\n        bins\n    } = selectedLot || {}\n\n    const currentBin = bins ? bins[loadStationId] : {}\n    const {\n        count\n    } = currentBin || {}\n\n    // If the qty goes below 0, then set to 0. You can never send negative parts\n    if (quantity < 0) {\n        setQuantity(0)\n    }\n\n    // if number of available lots >= 5, auto focus lot filter text box\n    useEffect(() => {\n        if (availableLots.length >= 5) {\n            setShouldFocusLotFilter(true)\n        }\n    }, [availableLots.length])\n\n    // load card data on load for selecting lot\n    useEffect(() => {\n        // get dashboard info from item\n        const dashboard = dashboards[dashboardId]\n        setSelectedDashboard(dashboard)\n    }, [dashboards])\n\n    // handles initial display of lot selector\n    useEffect(() => {\n\n        const currentTask = tasks[item.task_id]\n        const routeProcesses = getRouteProcesses(currentTask?._id).map((currProcess) => currProcess._id) || []\n\n        //If the task doesn't belong to a process, skip the lot selector screen and go straight to HIL modal\n        if (!!routeProcesses[0]) {\n            setTrackQuantity(currentTask.track_quantity)\n            setTaskHasProcess(true)\n            // Only show lot selector if they're cards loaded, lots have not been dispalyed yet, it's a load hil and there's available lots\n            if (!didDisplayLots && hilLoadUnload && hilLoadUnload !== 'unload') {\n                setShowLotSelector(true)\n                setDidDisplayLots(true)\n            }\n        }\n\n        else {\n            setSelectedLot(null) // clear selected lot\n            setShowLotSelector(false) // hide lot selector\n            setTrackQuantity(true)\n        }\n\n\n    }, [availableLots, didDisplayLots, hilLoadUnload, isProcessTask])\n\n    /*\n    * Get dropdownsearch options for cards\n    *\n    * Filter out cards that don't belong to the same station\n    * Each option only needs to contain the card's id and a label to display, the extaneous information can be left out\n    *\n    * */\n    useEffect(() => {\n\n        const taskProcesses = getRouteProcesses(selectedTask?._id).map((currProcess) => currProcess._id)\n\n        if ((taskProcesses && Array.isArray(taskProcesses) && (taskProcesses.length > 0))) {\n            setIsProcessTask(true)\n\n            let stationCards = Object.values(cards).filter((currCard) => {\n                const {\n                    bins,\n                    process_id: currCardProcessId\n                } = currCard || {}\n\n                if (bins) {\n                    if (bins[loadStationId] && bins[loadStationId].count > 0 && (taskProcesses.includes(currCardProcessId))) return true\n                }\n            })\n\n            if (sortMode) {\n                sortBy(stationCards, sortMode)\n            }\n\n            if (stationCards && Array.isArray(stationCards) && stationCards.length > 0) {\n                if ((stationCards.length === 1) && !selectedLot && !didSelectInitialLot) {\n                    setSelectedLot(stationCards[0])\n                    setDidSelectInitialLot(true)\n                }\n                setAvailableLots(stationCards)\n            }\n        }\n\n        else {\n            // setIsProcessTask(false)\n        }\n\n\n\n\n    }, [cards, selectedTask])\n\n    useEffect(() => {\n        if (count && quantity && (quantity > count)) setQuantity(parseInt(count))\n\n\n    }, [selectedLot])\n\n    // Changes quantity on Mouse hold\n    useEffect(() => {\n        const interval = setInterval(() => {\n\n            switch (changeQtyMouseHold) {\n                case 'decrementTen':\n                    if (count) {\n                        if (quantity > count) {\n                            // quantity should not exceed count, it may have been set higher before a lot was selected\n                            // reduce quantity to lot count\n                            setQuantity(count)\n                        }\n                        else {\n                            // quantity cannot be negative\n                            if (quantity - 10 > 0) setQuantity(quantity => quantity - 10)\n                        }\n                    }\n                    else {\n                        // quantity cannot be negative\n                        if (quantity - 10 > 0) setQuantity(quantity => quantity - 10)\n                    }\n\n                    break;\n\n                case 'decrementOne':\n                    if (count) {\n                        if (quantity > count) {\n                            // quantity should not exceed count, it may have been set higher before a lot was selected\n                            // reduce quantity to lot count\n                            setQuantity(count)\n                        }\n                        else {\n                            // quantity cannot be negative\n                            if (quantity > 0) setQuantity(quantity => quantity - 1)\n                        }\n                    }\n                    else {\n                        // quantity cannot be negative\n                        if (quantity > 0) setQuantity(quantity => quantity - 1)\n                    }\n\n                    break;\n\n                case 'incrementOne':\n                    if (count) {\n                        if (quantity < count) {\n                            setQuantity(quantity => quantity + 1)\n                        }\n\n                        else {\n                            setQuantity(count)\n                        }\n\n                    }\n                    // otherwise quantity can be anything\n                    else {\n                        setQuantity(quantity => quantity + 1)\n                    }\n\n                    break;\n\n                case 'incrementTen':\n                    if (count) {\n                        if (quantity + 10 < count) {\n                            setQuantity(quantity => quantity + 10)\n                        }\n                        else {\n                            setQuantity(parseInt(count))\n                        }\n\n                    }\n                    // otherwise quantity can be anything\n                    else {\n                        setQuantity(quantity => quantity + 10)\n                    }\n            }\n\n        }, 200);\n        return () => clearInterval(interval)\n    }, [changeQtyMouseHold]\n    )\n\n\n\n    // Use Effect for when page loads, handles wether the HIL is a load or unload\n    useEffect(() => {\n        dispatchGetCards()\n\n        const currentTask = tasks[item.task_id]\n        setSelectedTask(currentTask)\n        if (currentTask) {\n            if (!!currentTask.associated_task) setAssociatedTask(tasks[currentTask.associated_task])\n        }\n\n        // If the task's load location of the task q item matches the item's location then its a load hil, else its unload\n        if (currentTask && currentTask?.load?.station === item.hil_station_id || !!item.dashboard) {\n            // load\n            setHilLoadUnload('load')\n            setShowLotSelector(true)\n        } else {\n            // unload\n            setHilLoadUnload('unload')\n        }\n\n\n        setDataLoaded(true)\n        // On unmount, set the task q item to none\n        return () => {\n            dispatchTaskQueueItemClicked('')\n            // dispatchLocalHumanTask(null)\n        }\n\n    }, [])\n\n    useEffect(() => {\n\n        if (!!item.quantity) {\n            setQuantity(item.quantity)\n        } else {\n            if (!!selectedLot) {\n                setQuantity(selectedLot.bins[loadStationId].count)\n            }\n            else { setQuantity(0) }\n        }\n\n    }, [selectedLot], [tasks])\n\n    useEffect(() => {\n        const currentTask = tasks[item.task_id]\n        const routeProcesses = getRouteProcesses(currentTask?._id).map((currProcess) => currProcess._id) || []\n\n\n        //If the route is part of a process and at least 1 lot is present display the\n        //fraction or quantity modal depending on what was chosen during route creation\n        //Else display quantity HIL\n        if (!!routeProcesses[0]) {\n            Object.values(cards).map((card) => {\n\n                if (!!card.bins[getLoadStationId(currentTask)]) {\n                    setLotsAtStation(true)\n\n                }\n            })\n        }\n\n    }, [tasks])\n\n    // Posts HIL Success to API\n    const onHilSuccess = async (fraction) => {\n\n\n        dispatchTaskQueueItemClicked('')\n\n        let newItem = {\n            ...item,\n            hil_response: true,\n            lot_id: selectedLotId\n        }\n\n        // If its a load, then add a quantity to the response\n        if (hilLoadUnload === 'load') {\n            // If track quantity then add quantity, or if noLotSelected then use quantity\n            if (!!selectedTask.track_quantity || !!noLotsSelected) {\n                newItem.quantity = quantity\n            }\n\n            // Else it's a fraction so tell the fraction amount\n            else {\n                newItem.fraction = fraction\n            }\n        }\n\n        // Deletes the dashboard id from active list for the hil that has been responded too\n        dispatchSetActiveHilDashboards(delete (activeHilDashboards[item.hil_station_id]))\n\n        const ID = deepCopy(taskQueueID)\n\n        delete newItem._id\n        delete newItem.dashboard\n\n        // This is used to make the tap of the HIL button respond quickly\n        disptachHILResponse(hilLoadUnload === 'load' ? 'load' : 'unload')\n        setTimeout(() => disptachHILResponse(''), 2000)\n\n        await disptachPutTaskQueue(newItem, ID)\n\n        // onLogHumanEvent()\n    }\n\n    // Posts HIL Postpone to API\n    // HIL Postpone will place the current task after the next task in the queue. (Delays task by 1 task)\n    const onHilPostpone = () => {\n        dispatchTaskQueueItemClicked('')\n    }\n\n\n    const onBlurQuantityInput = () => {\n        if (quantity > count) {\n            setQuantity(count)\n        }\n    }\n\n    // Posts HIL Failure to API\n    const onHilFailure = async () => {\n        let newItem = {\n            ...item,\n            hil_response: false\n        }\n\n        delete newItem._id\n\n        await putTaskQueueItem(newItem, taskQueueID)\n        dispatchTaskQueueItemClicked('')\n    }\n\n    // Posts event to back end for stats and tracking\n    const onLogHumanEvent = () => {\n\n        let event = {\n            object: null,\n            outgoing: false,\n            quantity: 0,\n            station: null,\n            time: null,\n        }\n\n        //Get the time\n        const time = Date.now() / 1000\n        const object = tasks[item.task_id].obj\n        const station = item.hil_station_id\n\n        let eventQuantity = 0\n        if (!!item.quantity) {\n            eventQuantity = item.quantity\n        } else {\n            eventQuantity = quantity\n        }\n\n        let outgoing = null\n        if (hilLoadUnload === 'load') {\n            outgoing = true\n        } else if (hilLoadUnload === 'unload') {\n            outgoing = false\n        } else (\n            outgoing = 'Unknown'\n        )\n\n        event.time = time\n        event.object = object\n        event.station = station\n        event.quantity = eventQuantity\n        event.outgoing = outgoing\n        // dispatchPostEvents(event)\n    }\n\n    const renderSelectedLot = () => {\n\n        return (\n            <>\n                {windowWidth < 700 ?\n                    <>\n                        {taskHasProcess && //If the task isn't part of a process don't render the choose lot stuff on the HIL\n                            <styled.SelectedLotContainer style={{ flexDirection: 'column', paddingBottom: '1rem' }}>\n\n                                {selectedLot ?\n                                    <styled.LotTitleDescription style={{ fontSize: '1.5rem' }}>Selected Lot:</styled.LotTitleDescription>\n                                    :\n                                    <styled.FooterButton\n                                        onClick={() => {\n                                            setShowLotSelector(true)\n                                            setNoLotsSelected(false)\n                                        }}\n                                    >\n\n                                        <styled.LotTitleDescription>Select Lot</styled.LotTitleDescription>\n                                    </styled.FooterButton>\n                                }\n\n                                {(selectedLot) &&\n                                    <styled.SelectedLotName>\n                                        {selectedLotName &&\n                                            <styled.LotTitleName>{selectedLotName}</styled.LotTitleName>\n                                        }\n                                        {!showLotSelector &&\n                                            <styled.EditLotIcon\n                                                className=\"fas fa-edit\"\n                                                onClick={() => {\n                                                    setShowLotSelector(true)\n                                                }}\n                                            />\n                                        }\n                                    </styled.SelectedLotName>\n                                }\n                            </styled.SelectedLotContainer>\n                        }\n                    </>\n                    :\n                    <>\n                        {taskHasProcess && //If the task isn't part of a process don't render the choose lot stuff on the HIL\n                            <styled.SelectedLotContainer>\n\n                                {selectedLot ?\n                                    <styled.LotTitleDescription>Selected Lot:</styled.LotTitleDescription>\n                                    :\n                                    <styled.FooterButton\n                                        onClick={() => {\n                                            setShowLotSelector(true)\n                                            setNoLotsSelected(false)\n                                        }}\n                                    >\n\n                                        <styled.LotTitleDescription>Select Lot</styled.LotTitleDescription>\n                                    </styled.FooterButton>\n                                }\n\n                                {(selectedLot) &&\n                                    <styled.SelectedLotName>\n                                        {selectedLotName &&\n                                            <styled.LotTitleName>{selectedLotName}</styled.LotTitleName>\n                                        }\n                                        {!showLotSelector &&\n                                            <styled.EditLotIcon\n                                                className=\"fas fa-edit\"\n                                                onClick={() => {\n                                                    setShowLotSelector(true)\n                                                }}\n                                            />\n                                        }\n                                    </styled.SelectedLotName>\n                                }\n                            </styled.SelectedLotContainer>\n                        }\n                    </>}\n            </>\n        )\n    }\n\n    const renderUnloadOptions = () => {\n        return (\n            <>\n                <styled.Header>\n\n                    <styled.ColumnContainer>\n                        <styled.HilMessage>{hilMessage}</styled.HilMessage>\n                        {/* Only Showing timers on load at the moment, will probably change in the future */}\n                        {\n                            !!hilTimers[item._id] && hilLoadUnload === 'load' &&\n                            <styled.HilTimer>{hilTimers[item._id]}</styled.HilTimer>\n                        }\n                    </styled.ColumnContainer>\n\n                </styled.Header>\n\n                <styled.LotSelectorContainer>\n                    <styled.LotsContainer>\n\n                        <styled.HilButton color={'#90eaa8'}\n                            onClick={() => {\n                                onHilSuccess()\n                            }}\n                        >\n                            <styled.HilIcon\n                                className='fas fa-check'\n                                color={'#1c933c'}\n                            />\n                            {/* <styled.HilButtonText color={'#1c933c'}>1</styled.HilButtonText> */}\n                        </styled.HilButton>\n\n                    </styled.LotsContainer>\n                </styled.LotSelectorContainer>\n            </>\n        )\n    }\n\n    const renderFractionOptions = () => {\n\n        const fractionOptions = ['1', '3/4', '1/2', '1/4']\n        const fractionDecimals = ['1', '0.75', '0.5', '0.25']\n\n        return (\n            <>\n                <styled.Header>\n\n                    <styled.ColumnContainer>\n                        <styled.HilMessage>{hilMessage}</styled.HilMessage>\n                        {/* Only Showing timers on load at the moment, will probably change in the future */}\n                        {\n                            !!hilTimers[item._id] && hilLoadUnload === 'load' &&\n                            <styled.HilTimer>{hilTimers[item._id]}</styled.HilTimer>\n                        }\n                    </styled.ColumnContainer>\n\n                    {/* <styled.InvisibleItem /> */}\n\n                </styled.Header>\n\n                <styled.LotSelectorContainer>\n\n                    <styled.LotsContainer>\n                        <styled.SubtitleContainer>\n                            <styled.HilSubtitleMessage>Select a fraction:</styled.HilSubtitleMessage>\n                        </styled.SubtitleContainer>\n\n\n                        {fractionOptions.map((value, ind) => {\n                            const decimal = fractionDecimals[ind]\n                            return (\n                                <styled.HilButton\n                                    color={'#90eaa8'}\n                                    filter={Math.cbrt(eval(value))}\n                                    onClick={() => {\n                                        onHilSuccess(eval(value))\n                                    }}\n                                >\n                                    {/* <styled.HilIcon\n                                className='fas fa-check'\n                                color={'#1c933c'}\n                            /> */}\n                                    <styled.RowContainer>\n                                        <styled.HilButtonText style={{ fontSize: '3rem' }} color={'#1c933c'}>{value}</styled.HilButtonText>\n                                        {!!count &&\n                                            <styled.HilButtonQuantityText color={'#1c933c'}>{'(Quantity ' + Math.ceil(count * decimal) + ')'}</styled.HilButtonQuantityText>\n                                        }\n\n                                    </styled.RowContainer>\n                                </styled.HilButton>\n                            )\n                        })}\n\n                    </styled.LotsContainer>\n\n                    {(hilType === 'pull' || hilType === 'push') && hilLoadUnload === 'load' &&\n                        <styled.FooterContainer>\n\n                            {renderSelectedLot()}\n\n                            <styled.FooterButton style={{ marginBottom: '1rem', marginTop: \"1rem\", marginLeft: '1rem' }} color={'#ff9898'} onClick={onHilFailure}>\n                                <styled.HilIcon\n                                    style={{ marginBottom: 0, marginRight: \"1rem\", fontSize: \"2.5rem\" }}\n                                    className='fas fa-times'\n                                    color={'#ff1818'}\n                                />\n                                <styled.HilButtonText style={{ margin: 0, padding: 0 }} color={'#ff1818'}>Cancel</styled.HilButtonText>\n                            </styled.FooterButton>\n                        </styled.FooterContainer>\n                    }\n\n\n                </styled.LotSelectorContainer>\n            </>\n        )\n\n\n    }\n\n    const renderQuantityOptions = () => {\n\n        return (\n            <>\n\n                <styled.Header>\n\n                    <styled.ColumnContainer>\n                        <styled.HilMessage>{hilMessage}</styled.HilMessage>\n\n\n                        {/* Only Showing timers on load at the moment, will probably change in the future */}\n                        {\n                            !!hilTimers[item._id] && hilLoadUnload === 'load' &&\n                            <styled.HilTimer>{hilTimers[item._id]}</styled.HilTimer>\n                        }\n                    </styled.ColumnContainer>\n\n                    {/* <styled.InvisibleItem /> */}\n\n                </styled.Header>\n\n                <styled.LotSelectorContainer>\n\n                    <styled.LotsContainer style={{ justifyContent: hilLoadUnload === 'load' && \"space-between\" }}>\n\n\n\n                        <div style={{ display: \"flex\", flexDirection: \"column\", justifyContent: \"center\", alignItems: \"center\" }}>\n                            {\n                                (hilType === 'pull' || hilType === 'push') && hilLoadUnload === 'load' &&\n                                <>\n                                    <styled.HilMessage style={{ marginBottom: '1rem' }}>Enter Quantity</styled.HilMessage>\n\n                                    <styled.HilInputContainer>\n\n                                        {windowWidth > 590 &&\n                                            <styled.HilInputIconContainer\n                                                onClick={() => {\n\n                                                    if (count) {\n                                                        if (quantity > count) {\n                                                            // quantity should not exceed count, it may have been set higher before a lot was selected\n                                                            // reduce quantity to lot count\n                                                            setQuantity(count)\n                                                        }\n                                                        else {\n                                                            // quantity cannot be negative\n                                                            if (quantity - 10 >= 0) setQuantity(quantity - 10)\n                                                            else { setQuantity(0) }\n                                                        }\n                                                    }\n                                                    else {\n                                                        // quantity cannot be negative\n                                                        if (quantity - 10 >= 0) setQuantity(quantity - 10)\n                                                        else { setQuantity(0) }\n\n                                                    }\n\n                                                }}\n                                                onMouseDown={() => {\n                                                    setChangeQtyMouseHold('decrementTen')\n                                                }}\n                                                onMouseUp={() => {\n                                                    setChangeQtyMouseHold('')\n                                                }}\n                                            >\n                                                <styled.HilInputIcon\n                                                    className='fas fa-minus-circle'\n                                                    style={{ color: '#ff9898' }}\n                                                />\n                                                <styled.HilInputIconText style={{ color: '#ff9898' }}>10</styled.HilInputIconText>\n                                            </styled.HilInputIconContainer>\n                                        }\n\n                                        <styled.HilInputIconContainer\n                                            onClick={() => {\n\n                                                if (count) {\n                                                    if (quantity > count) {\n                                                        // quantity should not exceed count, it may have been set higher before a lot was selected\n                                                        // reduce quantity to lot count\n                                                        setQuantity(count)\n                                                    }\n                                                    else {\n                                                        // quantity cannot be negative\n                                                        if (quantity > 0) setQuantity(quantity - 1)\n                                                    }\n                                                }\n                                                else {\n                                                    // quantity cannot be negative\n                                                    if (quantity > 0) setQuantity(quantity - 1)\n                                                }\n\n                                            }}\n\n                                            onMouseDown={() => {\n                                                setChangeQtyMouseHold('decrementOne')\n                                            }}\n                                            onMouseUp={() => {\n                                                setChangeQtyMouseHold('')\n                                            }}\n                                        >\n                                            {\n\n                                            }      <styled.HilInputIcon\n                                                className='fas fa-minus-circle'\n                                                style={{ color: '#ff9898' }}\n                                            />\n                                            <styled.HilInputIconText style={{ color: '#ff9898' }}>1</styled.HilInputIconText>\n                                        </styled.HilInputIconContainer>\n\n\n                                        <styled.HilInput\n                                            type=\"number\"\n                                            onChange={(e) => {\n                                                // get value and parse to int to avoid string concat instead of addition / subtraction\n                                                const value = parseInt(e.target.value)\n\n                                                // if there is a lot with a count, the quantity cannot exceed the count\n                                                //  if (count) {\n                                                //    if (value <= count)\n                                                //}\n\n                                                // otherwise the value can be anything\n                                                //else {\n                                                setQuantity(value)\n                                                //}\n                                            }}\n                                            value={quantity}\n                                            style={quantity > count ? { backgroundColor: 'red' } : {}}\n                                            onBlur={onBlurQuantityInput}\n                                        />\n                                        <styled.HilInputIconContainer\n                                            onClick={() => {\n                                                // if there is a lot count, quantity cannot exceed lot count\n                                                if (count) {\n                                                    if (quantity < count) {\n                                                        setQuantity(quantity + 1)\n                                                    }\n\n                                                    // quantity is greater than count (probably was set before lot was selected), reduce to count\n                                                    else {\n                                                        setQuantity(parseInt(count))\n                                                    }\n\n                                                }\n                                                // otherwise quantity can be anything\n                                                else {\n                                                    setQuantity(quantity + 1)\n                                                }\n\n                                            }}\n\n                                            onMouseDown={() => {\n                                                setChangeQtyMouseHold('incrementOne')\n                                            }}\n                                            onMouseUp={() => {\n                                                setChangeQtyMouseHold('')\n                                            }}\n                                        >\n                                            <styled.HilInputIcon\n                                                className='fas fa-plus-circle'\n                                                style={{ color: '#90eaa8' }}\n                                            />\n                                            <styled.HilInputIconText style={{ color: '#90eaa8' }}>1</styled.HilInputIconText>\n                                        </styled.HilInputIconContainer>\n\n                                        {windowWidth > 590 &&\n                                            <styled.HilInputIconContainer\n                                                onClick={() => {\n                                                    // if there is a lot count, quantity cannot exceed lot count\n                                                    if (count) {\n                                                        if (quantity + 10 < count) {\n                                                            setQuantity(quantity + 10)\n                                                        }\n\n                                                        // quantity is greater than count (probably was set before lot was selected), reduce to count\n                                                        else {\n                                                            setQuantity(parseInt(count))\n                                                        }\n\n                                                    }\n                                                    // otherwise quantity can be anything\n                                                    else {\n                                                        setQuantity(quantity + 10)\n                                                    }\n\n                                                }}\n                                                onMouseDown={() => {\n                                                    setChangeQtyMouseHold('incrementTen')\n                                                }}\n                                                onMouseUp={() => {\n                                                    setChangeQtyMouseHold('')\n                                                }}\n                                            >\n                                                <styled.HilInputIcon\n                                                    className='fas fa-plus-circle'\n                                                    style={{ color: '#90eaa8' }}\n                                                />\n                                                <styled.HilInputIconText style={{ color: '#90eaa8' }}>10</styled.HilInputIconText>\n                                            </styled.HilInputIconContainer>\n                                        }\n\n                                    </styled.HilInputContainer>\n                                    {renderSelectedLot()}\n                                </>\n\n                            }\n\n\n                            {count &&\n                                <styled.HilSubText style={{ marginBottom: \"1rem\" }}>Available Lot Items: {count}</styled.HilSubText>\n                            }\n                        </div>\n\n                        <styled.HilButtonContainer>\n\n                            <styled.HilButton\n                                color={'#90eaa8'}\n                                onClick={() => {\n                                    onHilSuccess()\n                                }}\n                            >\n                                <styled.HilIcon\n                                    // onClick={() => {\n                                    //     onHilSuccess()\n                                    // }}\n                                    style={{ margin: 0, marginRight: \"1rem\", fontSize: \"2.5rem\" }}\n                                    className='fas fa-check'\n                                    color={'#1c933c'}\n\n                                />\n                                <styled.HilButtonText\n                                    color={'#1c933c'}\n                                    style={{ margin: 0, padding: 0 }}\n                                >\n                                    Confirm\n                                </styled.HilButtonText>\n                            </styled.HilButton>\n\n                            {((hilType === 'pull' && hilLoadUnload === 'load') || hilType === 'check') &&\n                                <styled.HilButton color={'#f7cd89'} onClick={onHilPostpone}>\n                                    <styled.HilIcon\n                                        style={{}}\n                                        // onClick={onHilPostpone}\n                                        className='icon-postpone'\n                                        color={'#ff7700'}\n                                        styled={{ marginTop: '.5rem' }}\n                                    />\n                                    <styled.HilButtonText\n                                        color={'#ff7700'}\n                                        style={{ margin: 0, padding: 0 }}\n                                    >\n                                        Postpone\n                                </styled.HilButtonText>\n                                </styled.HilButton>\n                            }\n\n                            {(hilType === 'pull' || hilType === 'push') && hilLoadUnload === 'load' &&\n\n                                <styled.HilButton color={'#ff9898'} onClick={onHilFailure}>\n                                    <styled.HilIcon\n                                        // onClick={onHilFailure}\n                                        className='fas fa-times'\n                                        color={'#ff1818'}\n                                    />\n                                    <styled.HilButtonText color={'#ff1818'}>Cancel</styled.HilButtonText>\n                                </styled.HilButton>\n                            }\n\n                        </styled.HilButtonContainer>\n                    </styled.LotsContainer>\n                </styled.LotSelectorContainer>\n            </>\n        )\n    }\n\n\n    const renderLotSelector = () => {\n        return (\n            <>\n                <styled.Header style={{ flexDirection: \"column\" }}>\n                    <styled.HeaderMainContent>\n\n                        <styled.ColumnContainer>\n                            <styled.HilMessage>Select Lot</styled.HilMessage>\n                        </styled.ColumnContainer>\n\n                    </styled.HeaderMainContent>\n\n                    <div style={{ display: \"flex\", maxWidth: \"50rem\", minWidth: \"1rem\", width: \"50%\" }}>\n                        <Textbox\n                            focus={shouldFocusLotFilter}\n                            placeholder='Filter lots...'\n                            onChange={(e) => {\n                                setLotFilterValue(e.target.value)\n                            }}\n                            textboxContainerStyle={{ flex: 1 }}\n                        />\n                    </div>\n                </styled.Header>\n                <styled.LotSelectorContainer>\n\n                    {availableLots.length > 0 ?\n                        <styled.LotsContainer>\n\n                            {availableLots\n                                .filter((currLot) => {\n\n                                    const {\n                                        name: currLotName,\n                                        _id: currLotId,\n                                        bins: currLotBins\n                                    } = currLot || {}\n\n                                    if (\n                                        currLotName\n                                            .toLowerCase()\n                                            .includes(lotFilterValue.toLowerCase())\n                                    ) {\n                                        return true\n                                    }\n                                    else {\n                                        return false\n                                    }\n                                })\n                                .map((currLot, lotIndex) => {\n                                    const {\n                                        _id: lotId,\n                                        name,\n                                        object_id,\n                                        cardId,\n                                        start_date,\n                                        end_date,\n                                        bins = {}\n                                    } = currLot\n\n                                    const count = bins[stationId]?.count\n\n                                    const isSelected = selectedLotId === lotId\n\n                                    // const lotName = lots[lot_id] ? lots[lot_id].name : null\n                                    const objectName = objects[object_id] ? objects[object_id].name : null\n\n                                    return (\n                                        <styled.CardContainer>\n                                            <Card\n                                                name={name}\n                                                start_date={start_date}\n                                                end_date={end_date}\n                                                objectName={objectName}\n                                                count={count}\n                                                id={lotId}\n                                                index={lotIndex}\n                                                isSelected={isSelected}\n                                                selectable={!!selectedLotId}\n                                                onClick={() => {\n                                                    // set selected lot and close lot selector\n                                                    setSelectedLot(currLot)\n                                                    setShowLotSelector(false)\n                                                }}\n                                                containerStyle={{ marginBottom: \"0.5rem\" }}\n                                            />\n                                        </styled.CardContainer>\n                                    )\n                                })\n                            }\n                        </styled.LotsContainer>\n\n                        :\n                        <styled.NoLotsContainer>\n                            <styled.NoLotsText>No lots available</styled.NoLotsText>\n                        </styled.NoLotsContainer>\n                    }\n\n                    <styled.FooterContainer>\n                        <styled.FooterButton\n                            color={'#90eaa8'}\n                            onClick={() => {\n                                setSelectedLot(null) // clear selected lot\n                                setNoLotsSelected(true)\n                                setShowLotSelector(false) // hide lot selector\n                            }}\n                        >\n                            <styled.HilButtonText\n                                style={{ margin: 0, padding: 0 }}\n                                color={'#1c933c'}\n                            >\n                                {\"Continue Without Lot\"}\n                            </styled.HilButtonText>\n                        </styled.FooterButton>\n\n                        <styled.FooterButton\n                            color={'#ff9898'}\n                            onClick={onHilFailure}\n                        >\n                            <styled.HilIcon\n                                className='fas fa-times'\n                                color={'#ff1818'}\n                                style={{ marginRight: '0.8rem' }}\n                            />\n                            <styled.HilButtonText\n                                style={{ margin: 0, padding: 0 }}\n                                color={'#ff1818'}\n                            >\n                                {\"Cancel\"}\n                            </styled.HilButtonText>\n\n\n                        </styled.FooterButton>\n                    </styled.FooterContainer>\n\n\n\n\n                </styled.LotSelectorContainer>\n            </>\n        )\n    }\n\n    /**\n     * Conditioinally renders HIL Modal based on type.\n     *\n     * Type 1: HIL Load Pull\n     * This type requires a quantity input, success, postpone, and cancel\n     * Requires a postpone becauses if someone requests (pulls) a object without\n     * the person loading being ready, they should be able to postopen until they are ready\n     *\n     * Type 2: HIL Load Push\n     * This type requires a quantity input, success and cancel\n     * No postpone because you're pushing objects to the next location.\n     * Meaning that your objects should be ready since you said they were\n     *\n     * Type 3: HIL Unload\n     * This type requires just a success button\n     * No Cancel, postpone or quantity button.\n     * Quantity is already taken care of in the load section, no objects should be lost in transportation.\n     * No postpone becasue your objects are already on the cart and ready to be taken off, plus the cart cant be used while objects are on it\n     * No cancel becasue the cart cant be used with objects on it\n     *\n     * Type 4: HIL Check\n     * This type requires a Yes of postpone button\n     * The purpose of a HIL check is to make sure the operator is ready to deliver parts.\n     * HIL Check will only show on a pull request\n     */\n\n    if (dataLoaded) {\n        return (\n            <styled.HilContainer >\n\n                {/*<styled.HilBorderContainer >*/}\n\n                {\n                    showLotSelector ?\n                        renderLotSelector()\n                        :\n                        !!selectedTask && hilLoadUnload === 'load' ?\n                            trackQuantity !== true && lotsAtStation === true && noLotsSelected !== true ?\n                                renderFractionOptions()\n                                :\n                                renderQuantityOptions()\n\n                            :\n                            renderUnloadOptions()\n                }\n\n\n\n\n                {/*</styled.HilBorderContainer>*/}\n\n            </styled.HilContainer>\n        )\n    }\n    else {\n        return null\n    }\n}\n\nexport default HILModals\n","import styled from 'styled-components'\nimport { hexToRGBA, LightenDarkenColor, RGB_Linear_Shade } from '../../../methods/utils/color_utils';\n\n\nconst buttonTheme = (props) => {\n    if (props.disabled) { // Disabled\n        return (`\n            background-color: ${props.theme.bg.quinary};\n            color: ${props.theme.bg.senary};\n            border: none;`\n        )\n    } else if (props.secondary) { // Secondary\n        return (`\n            background: ${!!props.schema ? props.theme.schema[props.schema].gradient : props.theme.fg.primary};\n            color: ${props.theme.bg.octonary};\n            border: none;\n             \n            &:hover {\n                background-color: ${LightenDarkenColor(props.theme.bg.septenary, 10)}\n            }\n             `\n        )\n    } else { // Primary\n        return (`\n            border: 0.1rem solid ${props.theme.bg.octonary};\n            box-sizing: content-box;\n\n            ${!props.active && `\n                background-color: transparent;\n                color: ${props.theme.bg.octonary};\n\n                &:hover {\n                    color: ${!!props.schema ? props.theme.schema[props.schema].solid : props.theme.fg.primary};\n                    border-color: ${!!props.schema ? props.theme.schema[props.schema].solid : props.theme.fg.primary};\n                }`\n            }\n\n            ${props.active ? `\n                border-color: red;\n                color: ${props.theme.bg.tertiary};\n                background: ${!!props.schema ? props.theme.schema[props.schema].solid : props.theme.fg.primary};\n                border-color: transparent;\n\n                &:active {\n                    color: ${props.theme.bg.tertiary};\n                }\n                `\n                : `\n                &:active {\n                    color: ${props.theme.bg.tertiary};\n                    background: ${!!props.schema ? props.theme.schema[props.schema].solid : props.theme.fg.primary};\n                    border-color: transparent;\n                }`\n            }`\n        )\n    }\n}\n\nexport const SmallButton = styled.button`\n    display: inline-block;\n    height: 2rem;\n    line-height: 2rem;\n    text-align: center;\n    margin: 0.3rem 0.5rem 0.3rem 0.5rem;\n    user-select: none;\n\n    padding: 0 1rem 0 1rem;\n\n    font-size: ${props => props.theme.fontSize.sz3};\n    font-family: ${props => props.theme.font.primary};\n    font-weight: 500;\n\n    border-radius: 0.35rem;\n    border: none;\n\n    ${props => buttonTheme(props)}\n\n    &:focus {\n        outline: none;\n    }\n`;\n","import React from 'react';\nimport * as styled from './button.style'\n\n\nconst Button = (props) => {\n\n    const {\n      disabled,\n      onClick,\n      schema,\n      style,\n      secondary,\n      children,\n      label,\n    } = props\n\n\n    return (\n        <styled.SmallButton\n            onClick={!disabled ? onClick : () => {return}}\n            disabled={disabled}\n            schema={schema}\n            style={style}\n            secondary={secondary}\n            {...props} >\n\n        {children ?\n            children\n            :\n            label\n        }\n\n        </styled.SmallButton>\n    )\n};\n\nButton.defaultProps = {\n    secondary : false,\n    disabled: false\n};\n\nexport default Button;\n","export const GET = 'GET_';\nexport const POST = 'POST_';\nexport const DELETE = 'DELETE_';\nexport const PUT = 'PUT_';\nexport const SET = 'SET_';\n","import axios from 'axios';\nimport { apiIPAddress } from '../settings/settings'\nimport * as log from 'loglevel';\n\nconst operator = 'tasks'\n\nexport async function getTasks() {\n    try {\n        const response = await axios({\n            method: 'get',\n            url: apiIPAddress() + operator,\n            headers: {\n                'X-API-Key': '123456',\n                'Access-Control-Allow-Origin': '*'\n            }\n        });\n\n        // Success 🎉\n        // log.debug('getTasks :res:',response);\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        // log.debug('getTasks: dataJson: ', dataJson)\n        return dataJson;\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            console.error('error.response.data', error.response.data);\n            console.error('error.response.status', error.response.status);\n            console.error('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            console.error('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            console.error('error.message', error.message);\n        }\n        throw error\n        console.error('error', error);\n    }\n\n\n};\n\nexport async function getTask(id) {\n    // log.debug('getTask: id: ', id)\n    try {\n        const response = await axios({\n            method: 'get',\n            url: apiIPAddress() + operator + '/' + id,\n            headers: {\n                'X-API-Key': '123456',\n                'Access-Control-Allow-Origin': '*'\n            }\n        });\n        // Success 🎉\n        // log.debug('getTask: response: ', response);\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        // log.debug('getTask: dataJson:', dataJson)\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            console.error('getTask: error.response.data', error.response.data);\n            console.error('getTask: error.response.status', error.response.status);\n            console.error('getTask: error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            console.error('getTask: error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            console.error('getTask: error.message', error.message);\n        }\n        throw error\n        console.error('getTask: error', error);\n    }\n\n\n};\n\nexport async function postTask(task) {\n    // log.debug('postTask task:',task, JSON.stringify(task));\n    try {\n        const response = await axios({\n            method: 'post',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'text/html',\n                'Access-Control-Allow-Origin': '*'\n            },  \n            url: apiIPAddress() + operator,\n            data: JSON.stringify(task)\n        });\n\n        // Success 🎉\n        // log.debug('postTask: response: ', response);\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        // log.debug('postTask: dataJson: ', dataJson)\n        return dataJson;\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            console.error('postTask: error.response.data', error.response.data);\n            console.error('postTask: error.response.status', error.response.status);\n            console.error('postTask: error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            console.error('postTask: error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            console.error('postTask: error.message', error.message);\n        }\n        throw error\n        console.error('postTask: error', error);\n    }\n\n\n};\n\nexport async function deleteTask(id) {\n    // log.debug('deleteTask: id:',id)\n\n    try {\n        const response = await axios({\n            method: 'delete',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'application/json',\n                'Access-Control-Allow-Origin': '*'\n            },\n            url: apiIPAddress() + operator + '/' + id\n        });\n\n        // Success 🎉\n        // log.debug('deleteTask: response',response);\n        const data = response.data;\n\n        return response;\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        throw error\n        log.debug('error', error);\n    }\n\n\n};\n\nexport async function putTask(task, id) {\n    try {\n        const response = await axios({\n            method: 'put',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'application/json',\n                'Access-Control-Allow-Origin': '*'\n            },\n            url: apiIPAddress() + operator + '/' + id,\n            data: JSON.stringify(task)\n        });\n\n        // Success 🎉\n        // log.debug('putTask: response: ',response);\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        // log.debug('putTask: dataJson:', dataJson)\n        return dataJson;\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        throw error\n        log.debug('error', error);\n    }\n\n\n}\n","import {\n    GET_TASKS,\n    GET_TASKS_STARTED,\n    GET_TASKS_SUCCESS,\n    GET_TASKS_FAILURE,\n\n    GET_TASK,\n    GET_TASK_STARTED,\n    GET_TASK_SUCCESS,\n    GET_TASK_FAILURE,\n\n    POST_TASK,\n    POST_TASK_STARTED,\n    POST_TASK_SUCCESS,\n    POST_TASK_FAILURE,\n\n    PUT_TASK,\n    PUT_TASK_STARTED,\n    PUT_TASK_SUCCESS,\n    PUT_TASK_FAILURE,\n\n    DELETE_TASK,\n    DELETE_TASK_STARTED,\n    DELETE_TASK_SUCCESS,\n    DELETE_TASK_FAILURE,\n\n    ADD_TASK,\n    SET_TASKS,\n    UPDATE_TASK,\n    UPDATE_TASKS,\n    REMOVE_TASK,\n    SET_TASK_ATTRIBUTES,\n    SELECT_TASK,\n    SET_SELECTED_TASK,\n    DESELECT_TASK,\n    EDITING_TASK,\n    REMOVE_TASKS,\n} from '../types/tasks_types'\n\nimport { deepCopy } from '../../methods/utils/utils';\n\nimport * as api from '../../api/tasks_api'\nimport * as dashboardActions from \"./dashboards_actions\";\nimport {getRouteProcesses} from \"../../methods/utils/route_utils\";\nimport {willRouteDeleteBreakProcess} from \"../../methods/utils/processes_utils\";\nimport {useSelector} from \"react-redux\";\nimport * as processesActions from \"./processes_actions\";\nimport * as dashboardsActions from \"./dashboards_actions\";\n\n// get\n// ******************************\nexport const getTasks = () => {\n    return async (dispatch) => {\n\n        function onStart() {\n            dispatch({ type: GET_TASKS_STARTED });\n        }\n        function onSuccess(response) {\n            dispatch({ type: GET_TASKS_SUCCESS, payload: response });\n            return response;\n        }\n        function onError(error) {\n            dispatch({ type: GET_TASKS_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const tasks = await api.getTasks();\n\n            const normalizedTasks = {}\n            tasks.map((task) => {\n                normalizedTasks[task._id] = task\n            })\n\n            return onSuccess(normalizedTasks);\n        } catch (error) {\n            return onError(error);\n        }\n    };\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// get task details\n// ******************************\n// export const getTask = (task_id) => {\n//   return async dispatch => {\n\n//     function onStart() {\n//       dispatch({ type: GET_TASK_STARTED });\n//     }\n//     function onSuccess(response) {\n//       dispatch({ type: GET_TASK_SUCCESS, payload: response });\n//       return response;\n//     }\n//     function onError(error) {\n//       dispatch({ type: GET_TASK_FAILURE, payload: error });\n//       return error;\n//     }\n\n//     try {\n//       onStart();\n//       const task_details = await api.getTask(task_id);\n//       return onSuccess(task_details);\n//     } catch (error) {\n//       return onError(error);\n//     }\n//   };\n// };\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// post\n// ******************************\nexport const postTask = (task) => {\n    return async dispatch => {\n\n        function onStart() {\n            dispatch({ type: POST_TASK_STARTED });\n        }\n        const onSuccess = async (newTask) => {\n            await dispatch({ type: POST_TASK_SUCCESS, payload: newTask });\n            return newTask;\n        }\n        function onError(error) {\n            dispatch({ type: POST_TASK_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            if(!!task.new){\n                delete task.new\n            }\n            if(task.changed) {\n                delete task.changed\n            }\n            const newTask = await api.postTask(task);\n            return onSuccess(newTask);\n        } catch (error) {\n            return onError(error);\n        }\n    };\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// put\n// ******************************\nexport const putTask = (task, ID) => {\n    return async dispatch => {\n        function onStart() {\n            dispatch({ type: PUT_TASK_STARTED });\n        }\n        function onSuccess(updateTask) {\n            dispatch({ type: PUT_TASK_SUCCESS, payload: updateTask });\n            return updateTask;\n        }\n        function onError(error) {\n            dispatch({ type: PUT_TASK_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            let taskCopy = deepCopy(task)\n            if(!!taskCopy.new){\n                delete taskCopy.new\n            }\n            if(taskCopy.changed) {\n                delete taskCopy.changed\n            }\n            // delete taskCopy._id\n            const updateTask = await api.putTask(taskCopy, ID);\n            return onSuccess(updateTask)\n        } catch (error) {\n            return onError(error)\n        }\n    }\n}\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// delete\n// ******************************\nexport const deleteTask = (ID) => {\n    return async dispatch => {\n        function onStart() {\n            dispatch({ type: DELETE_TASK_STARTED });\n        }\n        function onSuccess(response) {\n            dispatch({ type: DELETE_TASK_SUCCESS, payload: ID });\n            return response;\n        }\n        function onError(error) {\n            dispatch({ type: DELETE_TASK_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const removeTask = await api.deleteTask(ID);\n            return onSuccess(ID)\n        } catch (error) {\n            return onError(error)\n        }\n    }\n}\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// delete\n// ******************************\nexport const deleteRouteClean = (routeId) => {\n    return async (dispatch, getState) => {\n\n        // remove route from all dashboards\n        await dispatch(dashboardsActions.removeRouteFromAllDashboards(routeId))\n\n        // remove route from all processes\n        await dispatch(processesActions.removeRouteFromAllProcesses(routeId))\n\n        // delete route\n        await dispatch(deleteTask(routeId));\n    }\n}\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// PUT clean\n// ******************************\nexport const putRouteClean = (route, routeId) => {\n    return async (dispatch, getState) => {\n\n        // put task\n        await dispatch(putTask(route, routeId));\n\n        // remove buttons associated with route at dashboards at the wrong station\n        await dispatch(dashboardsActions.removeRouteFromWrongDashboards(route))\n\n        // handle adding buttons to dashboards\n        await dispatch(dashboardsActions.addRouteToDashboards(route))\n    }\n}\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// POST clean\n// ******************************\nexport const postRouteClean = (route) => {\n    return async (dispatch, getState) => {\n\n        // post route\n        await dispatch(postTask(route));\n\n        // remove buttons associated with route at dashboards at the wrong station\n        await dispatch(dashboardsActions.removeRouteFromWrongDashboards(route))\n\n        // handle adding buttons to dashboards\n        await dispatch(dashboardsActions.addRouteToDashboards(route))\n    }\n}\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n//\n// ******************************\nexport const saveFormRoute = (formRoute) => {\n    return async (dispatch) => {\n\n        // extract values\n        const {\n            unsaved,        // remove key\n            new: isNew,     // remove key\n            changed,        // remove key\n            needsSubmit,    // remove key\n            obj = {},\n            ...remainingRoute\n        } = formRoute\n\n        // get objectId\n        const {\n            _id: objectId\n        } = obj || {}\n\n        // create payload\n        const payload = {\n            ...remainingRoute,\n            obj: objectId\n        }\n\n        // create new route\n        if(isNew) {\n            dispatch(postRouteClean(payload))\n        }\n\n        // update existing route\n        else {\n            dispatch(putRouteClean(payload, payload._id))\n        }\n    }\n}\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n\nexport const addTask = (task) => {\n    return { type: ADD_TASK, payload: { task } }\n}\n\nexport const setTasks = (tasks) => {\n    return { type: SET_TASKS, payload: tasks}\n}\n\nexport const updateTask = (task) => {\n    return { type: UPDATE_TASK, payload: { task } }\n}\n\nexport const updateTasks = (tasks) => {\n    return { type: UPDATE_TASKS, payload: { tasks } }\n}\n\nexport const removeTask = (id) => {\n    return { type: REMOVE_TASK, payload: { id } }\n}\n\nexport const removeTasks = (ids) => {\n    return { type: REMOVE_TASKS, payload: { ids } }\n}\n\nexport const setTaskAttributes = (id, attr) => {\n    return { type: SET_TASK_ATTRIBUTES, payload: { id, attr } }\n}\n\nexport const selectTask = (id) => {\n    return { type: SELECT_TASK, payload: { id } }\n}\n\nexport const setSelectedTask = (task) => {\n    return { type: SET_SELECTED_TASK, payload: { task }}\n}\n\nexport const deselectTask = () => {\n    return { type: DESELECT_TASK }\n}\n\nexport const editingTask = (bool) => {\n    return { type: EDITING_TASK, payload: bool }\n}\n","import { denormalize, schema } from 'normalizr';\nimport { uuidv4 } from '../methods/utils/utils';\n\n// schedule schema\nexport const scheduleSchema = new schema.Entity(\n  // key\n  'schedules',\n  // definition\n  {\n    //condition: conditionSchema\n  },\n  // options\n  {\n    idAttribute: (value, parent, key) => {\n      return value._id.$oid\n    },\n\n    // processStrategy\n    processStrategy: (value, parent, key) => {\n      return {\n        _id: {\n          $oid: value._id.$oid ? value._id.$oid : null\n        },\n        id: value._id.$oid ? value._id.$oid : null,\n        name: value.name ? value.name : '',\n\n        days_on: value.days_on ? value.days_on : {\n          friday: false,\n          monday: false,\n          saturday: false,\n          sunday: false,\n          thursday: false,\n          tuesday: false,\n          wednesday: false\n        },\n\n        interval_on:  value.interval_on ? value.interval_on : false,\n        time_interval: value.time_interval ? value.time_interval : null,\n        map_id: value.map_id ? value.map_id : null,\n\n        schedule_on: value.schedule_on ? value.schedule_on : false,\n        start_time: value.start_time ? value.start_time : null,\n\n        stop_time_on: value.stop_time_on ? value.stop_time_on : false,\n        stop_time: value.stop_time ? value.stop_time : null,\n\n        task_id: value.task_id ? value.task_id : null,\n      };\n    }\n  },\n\n);\n\n// schema for list of schedules\nexport const schedulesSchema = [scheduleSchema]\n","import axios from 'axios';\nimport * as log from 'loglevel';\n\nimport { apiIPAddress } from '../settings/settings'\n\n//import store from '../redux/store'\nconst token = '123456' //store.getState().cognotoUserSession\n\nconst operator = 'stations'\n\nconst logger = log.getLogger('Stations_Api', \"Station\");\n\nexport async function getStations() {\n    try {\n        const response = await axios({\n            method: 'GET',\n            url: apiIPAddress() + operator,\n            headers: {\n                'X-API-Key': '123456',\n                'Access-Control-Allow-Origin': '*'\n            }\n        });\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        throw error\n    }\n\n\n}\n\nexport async function deleteStation(ID) {\n    try {\n        const response = await axios({\n            method: 'DELETE',\n            url: apiIPAddress() + operator + '/' + ID,\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'application/json',\n                'Access-Control-Allow-Origin': '*'\n            },\n        });\n\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n\n        console.log(dataJson)\n\n        return dataJson\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}\n\n\nexport async function postStation(station) {\n    try {\n        const response = await axios({\n            method: 'POST',\n            url: apiIPAddress() + operator,\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'application/json',\n                'Access-Control-Allow-Origin': '*'\n            },\n            data: JSON.stringify(station)\n        });\n\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}\n\nexport async function putStation(station, ID) {\n\n    try {\n        const response = await axios({\n            method: 'PUT',\n            url: apiIPAddress() + operator + '/' + ID,\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'text/html',\n                'Access-Control-Allow-Origin': '*'\n            },\n            data: station\n        });\n\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}\n\nexport async function getStationAnalytics(id, timeSpan) {\n    try {\n        const response = await axios({\n            method: 'PUT',\n            url: apiIPAddress() + operator + '/' + id + '/analysis',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'text/html',\n                'Access-Control-Allow-Origin': '*'\n            },\n            // A timespan is {time_span: 'day', index: 0}\n            data: timeSpan\n        });\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        return dataJson;\n\n\n    } catch (error) {\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        throw error\n    }\n\n\n}","import { normalize, schema } from 'normalizr';\n\nimport {\n    GET_STATIONS_STARTED,\n    GET_STATIONS_SUCCESS,\n    GET_STATIONS_FAILURE,\n\n    POST_STATION_STARTED,\n    POST_STATION_SUCCESS,\n    POST_STATION_FAILURE,\n\n    PUT_STATION_STARTED,\n    PUT_STATION_SUCCESS,\n    PUT_STATION_FAILURE,\n\n    DELETE_STATION_STARTED,\n    DELETE_STATION_SUCCESS,\n    DELETE_STATION_FAILURE,\n\n    ADD_STATION,\n    UPDATE_STATION,\n    UPDATE_STATIONS,\n    REMOVE_STATION,\n    SET_STATION_ATTRIBUTES,\n    SET_SELECTED_STATION,\n    EDITING_STATION,\n} from '../types/stations_types'\n\nimport uuid from 'uuid';\n\n// Import External Actions\nimport { deleteTask } from './tasks_actions'\nimport { deletePosition, putPosition, postPosition } from './positions_actions'\nimport { deleteDashboard, postDashboard } from './dashboards_actions'\n\n// Import utils\nimport { deepCopy } from '../../methods/utils/utils';\n\n// Import Schema\nimport { stationsSchema } from '../../normalizr/schema'\n\n// Import API\nimport * as api from '../../api/stations_api'\n\n// Import Store\nimport store from '../store/index'\n\n// get\n// ******************************\nexport const getStations = () => {\n    return async dispatch => {\n\n        function onStart() {\n            dispatch({ type: GET_STATIONS_STARTED });\n        }\n        function onSuccess(stations) {\n            dispatch({ type: GET_STATIONS_SUCCESS, payload: stations });\n            return stations;\n        }\n        function onError(error) {\n            dispatch({ type: GET_STATIONS_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const stations = await api.getStations();\n\n            const normalizedStations = !!normalize(stations, stationsSchema)?.entities?.stations ? normalize(stations, stationsSchema)?.entities?.stations : {}\n\n            return onSuccess(normalizedStations);\n        } catch (error) {\n            return onError(error);\n        }\n    };\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// post\n// ******************************\nexport const postStation = (station) => {\n    return async dispatch => {\n\n        function onStart() {\n            dispatch({ type: POST_STATION_STARTED });\n        }\n        function onSuccess(station) {\n            dispatch({ type: POST_STATION_SUCCESS, payload: station });\n            return station;\n        }\n        function onError(error) {\n            dispatch({ type: POST_STATION_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            let stationCopy = deepCopy(station)\n            stationCopy = await dispatch(onPostStation(stationCopy))\n            delete stationCopy.temp\n            delete stationCopy.new\n            const newStation = await api.postStation(stationCopy);\n            return onSuccess(newStation);\n        } catch (error) {\n            return onError(error);\n        }\n    };\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// put\n// ******************************\nexport const putStation = (station) => {\n    return async dispatch => {\n        function onStart() {\n            dispatch({ type: PUT_STATION_STARTED });\n        }\n        function onSuccess(station) {\n            dispatch({ type: PUT_STATION_SUCCESS, payload: station });\n            return station;\n        }\n        function onError(error) {\n            dispatch({ type: PUT_STATION_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            let stationCopy = deepCopy(station)\n            await dispatch(onSaveChildren())\n            delete stationCopy.temp\n            const updateStation = await api.putStation(stationCopy, stationCopy._id);\n            return onSuccess(updateStation)\n        } catch (error) {\n            return onError(error)\n        }\n    }\n}\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// put\n// ******************************\nexport const putStationWithoutSavingChildren = (station) => {\n    return async dispatch => {\n        function onStart() {\n            dispatch({ type: PUT_STATION_STARTED });\n        }\n        function onSuccess(station) {\n            dispatch({ type: PUT_STATION_SUCCESS, payload: station });\n            return station;\n        }\n        function onError(error) {\n            dispatch({ type: PUT_STATION_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            let stationCopy = deepCopy(station)\n            delete stationCopy.temp\n            const updateStation = await api.putStation(stationCopy, stationCopy._id);\n            return onSuccess(updateStation)\n        } catch (error) {\n            return onError(error)\n        }\n    }\n}\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// delete\n// ******************************\nexport const deleteStation = (ID) => {\n    return async dispatch => {\n        function onStart() {\n            dispatch({ type: DELETE_STATION_STARTED });\n        }\n        function onSuccess(id) {\n            dispatch({ type: DELETE_STATION_SUCCESS, payload: id });\n            return id;\n        }\n        function onError(error) {\n            dispatch({ type: DELETE_STATION_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const station = await dispatch(onDeleteStation(ID))\n            const removeStation = await api.deleteStation(station._id);\n            return onSuccess(ID)\n        } catch (error) {\n            return onError(error)\n        }\n    }\n}\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n\n// get Station Analytics\n// ******************************\nexport const getStationAnalytics = async (id, timeSpan) => {\n    try {\n        const stationAnalytics = await api.getStationAnalytics(id, timeSpan);\n        return stationAnalytics\n    } catch (error) {\n    }\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nexport const addStation = (station) => {\n    return { type: ADD_STATION, payload: station }\n}\n\nexport const updateStation = (station) => {\n    return { type: UPDATE_STATION, payload: station }\n}\n\nexport const updateStations = (stations, selectedStation, d3) => {\n    return { type: UPDATE_STATIONS, payload: { stations, selectedStation, d3 } }\n}\n\nexport const removeStation = (id) => {\n    // Have to use dispatch here because of onRemoveStationFunction\n    return async dispatch => {\n\n        const updatedId = await dispatch(onRemoveStation(id))\n        dispatch({ type: REMOVE_STATION, payload: updatedId })\n    }\n}\n\nexport const setStationAttributes = (id, attr) => {\n    return { type: SET_STATION_ATTRIBUTES, payload: { id, attr } }\n}\n\nexport const setSelectedStation = (station) => {\n    return { type: SET_SELECTED_STATION, payload: station }\n}\n\nexport const setEditingStation = (bool) => {\n    return { type: EDITING_STATION, payload: bool }\n}\n\n\n/**\n * Removes Station that is not on the backend yet\n * If the station has children, it deletes those as well\n * @param {*} id \n */\nconst onRemoveStation = (id) => {\n    const stationsState = store.getState().stationsReducer\n    let station = !!stationsState.selectedStation ? stationsState.selectedStation : stationsState.stations[id]\n\n    return async dispatch => {\n\n        if (!!station.children) {\n\n            // TODO: Fix this, in positions, it'll put the station to tell it's deleted, but the station is about to be deleted, so no need to put\n            station.children.forEach(async position => {\n\n                // Passes in true to tell that the deleted postion's associated station is being deleted too\n                // This way, it wont update the station \n                await dispatch(deletePosition(position, true))\n            })\n        }\n        return station._id\n    }\n}\n\n\nconst onDeleteStation = (id) => {\n\n    return async dispatch => {\n\n        const stationsState = store.getState().stationsReducer\n        const positionsState = store.getState().positionsReducer\n        const tasksState = store.getState().tasksReducer\n\n        let station = !!stationsState.selectedStation ? stationsState.selectedStation : stationsState.stations[id]\n\n        // If the station has children, delete them\n        if (!!station.children) {\n\n            // TODO: Fix this, in positions, it'll put the station to tell it's deleted, but the station is about to be deleted, so no need to put\n            station.children.forEach(async position => {\n\n                // Passes in true to tell that the deleted postion's associated station is being deleted too\n                // This way, it wont update the station \n                await dispatch(deletePosition(position, true))\n            })\n        }\n\n\n        // If the position is new, just remove it from the local station\n        // Since the position is new, it does not exist in the backend and there can't be any associated tasks\n        if (!!station.new) {\n            dispatch(removeStation(station._id))\n            return null\n        }\n\n        // Else delete in backend and delete any associated tasks\n        else {\n\n            // Delete associated dashboards\n            station.dashboards.forEach(async dashboard => {\n                await dispatch(deleteDashboard(dashboard))\n            })\n\n            // Sees if any tasks are associated with the position and delete them\n            const tasks = tasksState.tasks\n            Object.values(tasks).filter(task => {\n                return task.load.station === station._id || task.unload.station === station._id\n            }).forEach(async relevantTask => {\n                await dispatch(deleteTask(relevantTask._id))\n            })\n\n\n        }\n        return station\n    }\n}\n\nconst onPostStation = (station) => {\n    return async dispatch => {\n        // Add dashboard\n        let defaultDashboard = {\n            name: station.name + ' Dashboard',\n            buttons: [],\n            station: station._id\n        }\n\n        //// Now post the dashboard, and on return tie that dashboard to location.dashboards and put the location\n        const postedDashboard = await dispatch(postDashboard(defaultDashboard))\n        station.dashboards = [postedDashboard._id.$oid]\n\n        // Save Children\n        await dispatch(onSaveChildren())\n\n        return station\n    }\n}\n\nconst onSaveChildren = () => {\n\n    return async dispatch => {\n        const positionsState = store.getState().positionsReducer\n        const selectedStationChildrenCopy = positionsState.selectedStationChildrenCopy\n\n        // If there children Children Position, save them\n        if (!!selectedStationChildrenCopy) {\n            Object.values(selectedStationChildrenCopy).map(async (child, ind) => {\n                // Post\n                if (!!child.new) {\n                    await dispatch(postPosition(child))\n\n                }\n                // Put\n                else {\n                    await dispatch(putPosition(child))\n\n                }\n            })\n        }\n\n        return\n    }\n}","export const SCHEDULES = 'SCHEDULES';\nexport const SCHEDULE = 'SCHEDULE';\nexport const CARD = 'CARD';\nexport const CARDS = 'CARDS';\nexport const SHOW_EDITOR = 'CARDS';\nexport const LOT = 'LOT';\nexport const LOTS = 'LOTS';\nexport const PROCESS_CARDS = 'PROCESS_CARDS';\nexport const CARD_HISTORY = 'CARD_HISTORY';\nexport const DATA_PAGE = 'DATA_PAGE';\nexport const JUNK = 'JUNK';\nexport const REPORT_EVENT = 'REPORT_EVENT';\nexport const REPORT_EVENTS = 'REPORT_EVENTS';\nexport const DASHBOARDS = 'DASHBOARDS';\nexport const DASHBOARD = 'DASHBOARD';\n","import axios from 'axios';\nimport * as log from 'loglevel';\n\nimport { apiIPAddress } from '../settings/settings'\n\nimport store from '../redux/store'\nconst token = '123456'//store.getState().cognotoUserSession\n\nconst operator = 'positions'\n\nconst logger = log.getLogger('Positions_Api', \"Position\");\n\nexport async function getPositions() {\n    try {\n        const response = await axios({\n            method: 'get',\n            url: apiIPAddress() + operator,\n            headers: {\n                'X-API-Key': '123456',\n                'Access-Control-Allow-Origin': '*'\n            }\n        });\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        throw error\n    }\n\n\n}\n\nexport async function deletePosition(ID) {\n    try {\n        const response = await axios({\n            method: 'DELETE',\n            url: apiIPAddress() + operator + '/' + ID,\n            headers: {\n                'Accept': 'application/json',\n                'X-API-Key': '123456',\n                'Access-Control-Allow-Origin': '*'\n            },\n        });\n\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}\n\n\nexport async function postPosition(position) {\n    try {\n        const response = await axios({\n            method: 'POST',\n            url: apiIPAddress() + operator,\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'application/json',\n                'Access-Control-Allow-Origin': '*'\n            },\n            data: JSON.stringify(position)\n        });\n\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}\n\nexport async function putPosition(position, ID) {\n\n    try {\n        const response = await axios({\n            method: 'PUT',\n            url: apiIPAddress() + operator + '/' + ID,\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'text/html',\n                'Access-Control-Allow-Origin': '*'\n            },\n            data: position\n        });\n\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}\n\n","import { normalize, schema } from 'normalizr';\n\nimport {\n    GET_POSITIONS_STARTED,\n    GET_POSITIONS_SUCCESS,\n    GET_POSITIONS_FAILURE,\n\n    POST_POSITION_STARTED,\n    POST_POSITION_SUCCESS,\n    POST_POSITION_FAILURE,\n\n    PUT_POSITION_STARTED,\n    PUT_POSITION_SUCCESS,\n    PUT_POSITION_FAILURE,\n\n    DELETE_POSITION_STARTED,\n    DELETE_POSITION_SUCCESS,\n    DELETE_POSITION_FAILURE,\n\n    ADD_POSITION,\n    UPDATE_POSITION,\n    UPDATE_POSITIONS,\n    REMOVE_POSITION,\n    SET_POSITION_ATTRIBUTES,\n    REVERT_CHILDREN,\n    SET_SELECTED_POSITION,\n    EDITING_POSITION,\n    SET_SELECTED_STATION_CHILDREN_COPY\n} from '../types/positions_types'\n\nimport uuid from 'uuid';\n\nimport * as api from '../../api/positions_api'\n\n// Import Schema\nimport { positionsSchema } from '../../normalizr/schema'\n\n// Import External Actions\nimport { putStation, putStationWithoutSavingChildren, setStationAttributes, setSelectedStation } from './stations_actions'\nimport { deleteTask } from './tasks_actions'\nimport { putDevices } from './devices_actions'\n\n// Import Utils\nimport { deepCopy } from '../../methods/utils/utils';\n\n// Import Store\nimport store from '../store/index'\n\n// get\n// ******************************\nexport const getPositions = () => {\n    return async dispatch => {\n\n        function onStart() {\n            dispatch({ type: GET_POSITIONS_STARTED });\n        }\n        function onSuccess(positions) {\n            dispatch({ type: GET_POSITIONS_SUCCESS, payload: positions });\n            return positions;\n        }\n        function onError(error) {\n            dispatch({ type: GET_POSITIONS_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const positions = await api.getPositions();\n\n            let normalizedPositions = !!normalize(positions, positionsSchema).entities.positions ? normalize(positions, positionsSchema).entities.positions : {}\n\n            // Filter out entry positions\n            Object.values(normalizedPositions).map((pos) => {\n                if (pos.type === 'shelf_entry_position' || pos.type === \"charger_entry_position\") {\n                    delete normalizedPositions[pos._id]\n                }\n            })\n\n            return onSuccess(normalizedPositions);\n        } catch (error) {\n            return onError(error);\n        }\n    };\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// post\n// ******************************\nexport const postPosition = (position) => {\n    return async dispatch => {\n\n        function onStart() {\n            dispatch({ type: POST_POSITION_STARTED });\n        }\n        function onSuccess(position) {\n            dispatch({ type: POST_POSITION_SUCCESS, payload: position });\n            return position;\n        }\n        function onError(error) {\n            dispatch({ type: POST_POSITION_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            if (!('_id' in position)) {\n                position._id = uuid.v4()\n            }\n\n            // Was used for a bug that didnt exist\n            // if (position.rotation > 180) {\n            //     position.rotation = position.rotation - 360\n            // }\n\n            // else if (position.rotation < -180) {\n            //     position.rotation = position.rotation + 360\n            // }\n\n            delete position.temp\n            delete position.new\n            position.change_key = 'new'\n            const postedPosition = await api.postPosition(position);\n            return onSuccess(postedPosition);\n        } catch (error) {\n            return onError(error);\n        }\n    };\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// put\n// ******************************\nexport const putPosition = (position) => {\n    return async dispatch => {\n        function onStart() {\n            dispatch({ type: PUT_POSITION_STARTED });\n        }\n        function onSuccess(position) {\n            dispatch({ type: PUT_POSITION_SUCCESS, payload: position });\n            return position;\n        }\n        function onError(error) {\n            dispatch({ type: PUT_POSITION_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            let positionCopy = deepCopy(position)\n            delete positionCopy.temp\n\n            // Tells the backend that a position has changed\n            if (positionCopy.change_key !== 'deleted') positionCopy.change_key = 'changed'\n            const updatePosition = await api.putPosition(positionCopy, positionCopy._id);\n            return onSuccess(updatePosition)\n        } catch (error) {\n            return onError(error)\n        }\n    }\n}\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// delete\n// ******************************\nexport const deletePosition = (id, stationDelete) => {\n    return async dispatch => {\n        function onStart() {\n            dispatch({ type: DELETE_POSITION_STARTED });\n        }\n        function onSuccess(id) {\n            dispatch({ type: DELETE_POSITION_SUCCESS, payload: id });\n            return id;\n        }\n        function onError(error) {\n            dispatch({ type: DELETE_POSITION_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            let positionCopy = await dispatch(onDeletePosition(id, stationDelete))\n            // If theres a position copy then tell the backend is deleted\n            // There wouldnt be a position copy because the position did not exist on the backend\n            if (!!positionCopy) {\n                delete positionCopy.temp\n                // IMPORTANT!: Putting with change_key as deleted instead of deleting because it was causing back end issues\n                // Tells the backend that a position has been deleted\n                positionCopy.change_key = 'deleted'\n                const updatePosition = await dispatch(putPosition(positionCopy))\n                return onSuccess(positionCopy._id)\n            }\n            else {\n                return\n            }\n\n        } catch (error) {\n            return onError(error)\n        }\n    }\n}\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nexport const addPosition = (position) => {\n    return { type: ADD_POSITION, payload: position }\n}\n\nexport const updatePosition = (position) => {\n    return { type: UPDATE_POSITION, payload: position }\n}\n\nexport const revertChildren = (position) => {\n    return { type: REVERT_CHILDREN, payload: position }\n}\n\nexport const updatePositions = (positions, selectedPosition, childrenPositions, d3) => {\n    return { type: UPDATE_POSITIONS, payload: { positions, selectedPosition, childrenPositions, d3 } }\n}\n\nexport const removePosition = (id) => {\n    return { type: REMOVE_POSITION, payload: id }\n}\n\nexport const setPositionAttributes = (id, attr) => {\n    return { type: SET_POSITION_ATTRIBUTES, payload: { id, attr } }\n}\n\nexport const setSelectedPosition = (position) => {\n    return { type: SET_SELECTED_POSITION, payload: position }\n}\n\nexport const setEditingPosition = (bool) => {\n    return { type: EDITING_POSITION, payload: bool }\n}\n\nexport const setSelectedStationChildrenCopy = (positions) => {\n    return { type: SET_SELECTED_STATION_CHILDREN_COPY, payload: positions }\n}\n\nconst onDeletePosition = (id, stationDelete) => {\n    return async dispatch => {\n        const stationsState = store.getState().stationsReducer\n        const positionsState = store.getState().positionsReducer\n        const tasksState = store.getState().tasksReducer\n        const devicesState = store.getState().devicesReducer\n\n        let position = deepCopy(positionsState.positions[id])\n\n        // If the position has a parent then remove from parent\n        if (!!position.parent && !stationDelete) {\n\n            let selectedStation = deepCopy(stationsState.selectedStation)\n            // If there is an associated parent station\n            if (!!selectedStation) {\n                // Remove the position from the list of children\n                const positionIndex = selectedStation.children.indexOf(position._id)\n                if (!!position.new) {\n                    let children = deepCopy(selectedStation.children)\n                    children.splice(positionIndex, 1)\n                    dispatch(setStationAttributes(selectedStation._id, { children }))\n\n                }\n\n                // TODO: For tommorow, 1/27 it looks like its removing the wrong position from the children array...\n                else {\n                    let children = deepCopy(selectedStation.children)\n                    children.splice(positionIndex, 1)\n                    dispatch(setStationAttributes(selectedStation._id, { children }))\n\n                    // This goes through and finds any nwe children that might be in the chidlren array\n                    // If the child is new, delete it from the array\n                    // A new child will not have been saved yet, and since this is deleting and saving the parent station then the children array will also be saved\n                    let newChildIndex = []\n                    children.forEach(child => {\n                        if (!!positionsState.selectedStationChildrenCopy[child].new) {\n                            let newChildInd = children.indexOf[child]\n                            newChildIndex.push(newChildInd)\n                        }\n                    })\n\n                    // Revers the array because this index is being used for deletes\n                    // If it starts at the begining and deletes that one, then the next index will have changed\n                    newChildIndex.reverse()\n                    newChildIndex.forEach(child => {\n                        children.splice(child, 1)\n                    })\n\n                    await dispatch(putStationWithoutSavingChildren({ ...selectedStation, children: children, }))\n                }\n\n            }\n\n        }\n\n        // Remove from stations copy if need be\n        if (!!positionsState.selectedStationChildrenCopy) {\n            // Update the ChildrenCopy\n            let copyOfCopy = deepCopy(positionsState.selectedStationChildrenCopy)\n            delete copyOfCopy[position._id]\n            dispatch(setSelectedStationChildrenCopy(\n                copyOfCopy\n            ))\n        }\n\n\n        // If the position is new, just remove it from the local station\n        // Since the position is new, it does not exist in the backend and there can't be any associated tasks\n        if (!!position.new) {\n            dispatch(removePosition(position._id))\n            return null\n        }\n\n        // Else delete in backend and delete any associated tasks\n        else {\n            const tasks = tasksState.tasks\n\n            // Sees if any tasks are associated with the position and delete them\n            Object.values(tasks).filter(task => {\n                return task.load.position == position._id || task.unload.position == position._id\n            }).forEach(async relevantTask => {\n                await dispatch(deleteTask(relevantTask._id))\n            })\n\n            const devices = devicesState.devices\n            // See if the position belonged as an idle location for a device\n            Object.values(devices).filter(device => {\n                return !!device.idle_location && device.idle_location === position._id\n            }).forEach(async relevantDevice => {\n                relevantDevice.idle_location = null\n                await dispatch(putDevices(relevantDevice, relevantDevice._id))\n            })\n\n\n        }\n        return position\n    }\n}","import styled, {css} from \"styled-components\";\nimport Modal from \"react-modal\";\nimport {Form} from \"formik\";\n\nexport const rowCss = css`\n\tmargin-bottom: 1rem;\n`\n\nexport const Container = styled(Modal)`\n  outline: none !important;\n  outline-offset: none !important;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  right: auto;\n  bottom: auto;\n\n  position: absolute;\n\n  z-index: 50;\n  \n  min-width: 95%;\n  max-width: 95%;\n  max-height: 95%;\n  // height: 95%;\n  \n  color: ${props => props.theme.bg.octonary};\n  \n  display: flex;\n  flex-direction: column;\n  \n  color: ${props => props.theme.bg.octonary};\n`;\n\nexport const Header = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\tpadding: 0;\n\tmargin: 0;\n\tbackground: ${props => props.theme.bg.quinary};\n  \tborder-bottom: 1px solid black;\n`\n\nexport const NameContainer = styled.div`\n\tbackground: ${props => props.theme.bg.quaternary};\n\twidth: 100%;\n\t//padding: 0rem 1rem;\n  \tmargin-bottom: 1rem;\n`\n\nexport const CloseButton = styled.button`\n\theight: 100%;\n\twidth: 3rem;\n\n`\n\nexport const Title = styled.div`\n\tflex: 2;\n\theight: 100%;\n\tmin-height: 100%;\n\tmargin: 0;\n\tpadding: 0;\n\ttext-align: center;\n\tdisplay: inline-flex;\n\tjustify-content: center;\n\talign-items: center;\n\tdisplay: flex;\n  flex-direction: column;\n\tfont-size: ${props => props.theme.fontSize.sz2};\n\tfont-weight: ${props => props.theme.fontWeight.bold};\n\t\n`\nexport const TitleText = styled.span`\n\n`\n\nexport const FieldTitle = styled.span`\n  font-size: ${props => props.theme.fontSize.sz3};\n  font-weight: ${props => props.theme.fontWeight.bold};\n  align-self: center;\n`\n\nexport const InfoText = styled.span`\n  font-size: ${props => props.theme.fontSize.sz3};\n  // font-weight: ${props => props.theme.fontWeight.bold};\n  color: ${props => props.highlight ? props.theme.schema[props.schema].solid : \"white\"};\n`\n\nexport const SectionContainer = styled.div`\n\tborder-bottom: 1px solid ${props => props.theme.bg.quinary};\n  padding: 0 1rem;\n  //display: flex;\n  \n  //background: green;\n  display: flex;\n  flex-direction: column;\n  \n`\n\nexport const TheBody = styled.div`\n\t//background: blue;\n  padding-top: 1rem;\n  overflow: auto;\n\n`\n\n\nexport const ProcessFieldContainer = styled.div`\n  margin-bottom: 1rem;\n  display: flex;\n  flex-direction: column;\n  //width: auto;\n`\n\n\nexport const ProcessOptionsContainer = styled.div`\n\t//margin-bottom: 1rem;\n  display: flex;\n  overflow-x: auto;\n  overflow-y: hidden;\n  position: relative;\n  \n  \n  box-shadow: ${props => props.hasError && \"0 0 5px red\"}; \n\n  background: ${props => props.theme.bg.quinary}; \n  padding: 1rem;\n  border-radius: 1rem;\n  \n  padding-bottom: 1rem;\n  \n  ::-webkit-scrollbar {\n    height: 10px;\n  }\n\n  /* Track */\n  ::-webkit-scrollbar-track {\n    background: rgba(100,100,100,0.2);\n    opacity: 10%;\n  }\n\n  ::-webkit-scrollbar-track:hover {\n    background: rgba(100,100,100,0.6);\n    border-left: 1px solid rgba(100,100,100,0.6);\n    border-right: 1px solid rgba(100,100,100,0.6);\n  }\n\n  /* Handle */\n  ::-webkit-scrollbar-thumb {\n    background: ${props => props.theme.bg.tertiary};\n    border-radius: .5rem;\n  }\n\n  /* Handle on hover */\n  ::-webkit-scrollbar-thumb:hover {\n    background: #555;\n\n  }\n`\nexport const ProcessName = styled.span`\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`\n\nexport const ProcessOption = styled.div`\n\n\t&:hover {\n\t\tcursor: pointer;\n\t}\n\t\n\ttext-shadow: 0.05rem 0.05rem 0.2rem #303030;\n\t&:hover {\n\t\tcursor: pointer;\n\t\tfilter: brightness(140%);\n\t}\n\t\n\t&:active{\n\t\tfilter: brightness(85%);\n\t\ttext-shadow: none;\n\t}\n  \n  \tbackground: ${props => props.theme.bg.senary};\n\t\n  \tpadding: 1rem;\n\tborder-radius: 1rem;\n  \tmargin-right: 1rem;\n  \n\tmin-width: 10rem;\n\tmax-width: 10rem;\n\twidth: 10rem;\n\t\n\tdisplay: inline-flex;\n\tjustify-content: center;\n\talign-items: center;\n\t\n\t${props => (!props.isSelected && props.containsSelected) && \"filter: grayscale(50%)\"};\n\t${props => props.isSelected && \"filter: brightness(130%)\"};\n\ttransition: all 0.5s ease;\n\t\n\tfont-size: ${props => props.theme.fontSize.sz3};\n\tfont-weight: ${props => props.theme.fontWeight.normal};\n  \n\toverflow: hidden;\n\twhite-space: nowrap;\n\ttext-overflow: ellipsis;\n`\n\nexport const StyledForm = styled(Form)`\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n    width: 100%;\n    max-width: 100%;\n    // max-height: 100%;\n    // overflow-x: hidden;\n    border-radius: .5rem;\n    position: relative;\n    \n    overflow: hidden;\n  background: ${props => props.theme.bg.quaternary};\n    \n   \n    flex: 1;\n    \n    justify-content: space-between;\n  \n  \n`;\n\nexport const ContentContainer = styled.div`\n\tdisplay: flex;\n\tpadding: 1rem;\n\tflex-direction: column;\n\tmax-height: 100%;\n\toverflow: hidden;\n\tflex: 1;\n\tjustify-content: space-between;\n`\n\nexport const BodyContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tpadding: 1rem;\n\tflex: 1;\n\tjustify-content: space-between;\n  min-height: ${props => props.minHeight};\n\t\n\tbackground: ${props => props.theme.bg.quaternary};\n  background: transparent;\n`\n\nexport const WidgetContainer = styled.div`\n\tdisplay: flex;\n\tpadding-left: 1rem;\n\t\n\t${rowCss};\n`\n\nexport const Icon = styled.i`\n\tfont-size: 2rem;\n\tcolor: ${props => props.color};\n\tmargin-right: 1rem;\n\t\n`\n\nexport const ObjectInfoContainer = styled.div`\n\tdisplay: flex;\n\t//width: 100%;\n\t//flex-direction: column;\n\talign-items: center;\n\t//background: red;\n\tmargin-bottom: 1rem;\n`\n\n\nexport const ObjectTitleContainer = styled.div`\n\tdisplay: flex;\n\tmargin-right: 1rem;\n  flex: 1;\n`\n\nexport const CountInput = styled.input`\n\twidth: fit-content;\n`\n\nexport const ObjectLabel = styled.span`\n\tdisplay: inline-flex;\n\tmargin-right: 1rem;\n\tfont-weight: bold;\n  align-items: center;\n`\n\nexport const QuantityErrorContainerComponent = styled.div`\n    width: auto;\n    height: auto;\n    position: absolute;\n    top: 50%;\n    right: 2.5rem;\n    transform: translateY(-50%);\n    margin: 0;\n    padding: 0;\n    ${props => props.iconContainerCss};\n`;\n\nexport const ObjectName = styled.span`\n\tdisplay: flex;\n`\n\nexport const InputContainer = styled.div`\n\tflex: 1;\n`\n\nexport const ButtonContainer = styled.div`\n\tdisplay: flex;\n\t//flex-direction: row;\n\talign-items: center;\n  width: 100%;\n  justify-content: center;\n  align-self: center;\n\tpadding: 1rem;\n\tmargin: 0;\n  \tmargin: 0 .5rem;\n  background: ${props => props.theme.bg.quinary};\n  border-top: 1px solid black;\n`\n\nexport const DatesContainer = styled.span`\n\tdisplay: inline-flex;\n\talign-items: center;\n\tbackground: ${props => props.theme.bg.quinary};\n\tjustify-content: center;\n\tpadding: .75rem;\n\tborder-radius: 1rem;\n  width: fit-content;\n  margin: 0;\n\t\n\t\n\t//${rowCss};\n`\n\nexport const DateItem = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tbackground: ${props => props.theme.bg.senary};\n\tborder-radius: 1rem;\n\t\n\tpadding: .5rem;\n\talign-items: center;\n\tjustify-content: center;\n\t\n\t&:hover {\n\t\tcursor: pointer;\n\t}\n\t\n`\n\nexport const ErrorTooltipContainer = styled.div`\n\tmargin-left: 1rem;\n`\n\nexport const DateArrow = styled.i`\n\tmargin-left: 1rem;\n\tmargin-right: 1rem;\n\tcolor: ${props => props.theme.bg.senary};\n`\n\nexport const DateTitle = styled.span``\n\nexport const DateText = styled.span`\n\n`\n\nexport const TimeText = styled.span`\n\n`\n\nexport const StationContainer = styled.div`\n\t${rowCss};\n`\n\n// history\n\nexport const ContentHeader = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\twidth: 100%;\n  \tmargin-bottom: 1rem;\n\t//padding: 1rem;\n`\n\nexport const ContentTitle = styled.span`\n\tfont-size: ${props => props.theme.fontSize.sz3};\n\tfont-weight: ${props => props.theme.fontWeight.bold};\n`\n\nexport const CalendarContainer = styled.div`\n\toverflow: auto;\n\t\n\t${rowCss};\n`\n\nexport const RowContainer = styled.div`\n\tdisplay: flex;\n\tmargin-bottom: 1rem;\n`\n\nexport const FadeLoaderCSS = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\n\n\nexport const HistoryBodyContainer = styled.div`\n\tdisplay: flex;\n\tpadding: 1rem;\n\tflex-direction: column;\n\toverflow-y: auto;\n\toverflow-x: hidden;\n\tflex: 1;\n\tborder-bottom: 1px solid ${props => props.theme.bg.tertiary};\n\tborder-top: 1px solid ${props => props.theme.bg.tertiary};\n`\n\nexport const HistoryItemContainer = styled.div`\n\tdisplay: flex;\n\tpadding: 1rem;\n\tbackground: rgba(200,0,200,0.2);\n\tmargin-bottom: 1rem;\n\tborder-radius: 1rem;\n\tbackground: ${props => props.theme.bg.quinary};\n\n`\n\nconst textCommon = css`\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n`\n\nconst historyContainerCommon = css`\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tflex-direction: column;\n\t\n`\n\nexport const HistoryDateContainer = styled.div`\n\t${historyContainerCommon};\n\tflex: 1;\n`\n\n\nexport const HistoryDateText = styled.span`\n\t${textCommon};\n`\n\nexport const HistoryUserContainer = styled.div`\n\t${historyContainerCommon};\n\t// display: inline-flex;\n\t\n\t\n`\nexport const HistoryUserText = styled.span`\n\t${textCommon};\n\tbackground: ${props => props.theme.bg.senary};\n\tpadding: .5rem;\n\tborder-radius: .5rem;\n\tcolor: ${props => props.theme.bg.primary};\n\n`\n\nexport const HistoryInfoContainer = styled.div`\n\t${historyContainerCommon};\n\tflex: 2;\n\talign-items: flex-start;\n\tmargin: 0 1rem 0 1rem;\n\t\n`\n\nexport const HistoryInfoText = styled.span`\n\tdisplay: flex;\n\tjustify-content: flex-start;\n\talign-items: flex-start;\n`\n\nexport const TimePickerContainer = styled.div`\n\tflex: 1;\n\tflex-direction: column;\n\tdisplay: flex;\n\toverflow: hidden;\n`\n\n\n\n\nexport const buttonViewCss = css`\n\t// border-right: ${props => !props.isLast && `solid ${props.theme.bg.quaternary} thin`}; // dont show border on last item\n\tcolor: ${props => props.theme.bg.quinary};\n\tpadding: 0;\n\tmargin: 0;\n\tpadding-left: .5rem;\n\tpadding-right: .5rem;\n\tfont-size: ${props => props.theme.fontSize.sz3};\n\tfont-family: ${props => props.theme.font.primary};\n`\n\n\nexport const buttonViewSelectedCss = css`\n\tbackground: transparent;\n\tcolor: ${props => props.theme.schema[\"lots\"].solid};\n`\n\n\nexport const buttonGroupContainerCss = css`\n\tdisplay: flex;\n\tflex-direction: row;\n\talign-self: center;\n\tpadding: 0;\n\tmargin: 0 0 1rem 0;\n  width: fit-content;\n  \n\t\n`\n\n\nexport const buttonCss = css`\n\tmargin: 0;\n\tpadding: 0;\n  \n\t\n\t&:focus{\n\t}\n\t\n\t&:active{\n\t}\n\t\n\t&:hover{\n\t\tcursor: default;\n\t}\n\t\n`\n\n\n\n","import {isBrowser} from \"react-device-detect\";\n\nexport const defaultLocalSettings = {\n\tnon_local_api_ip: '',//'18.220.200.169',\n\tnon_local_api: false, //true,\n\tmapViewEnabled: isBrowser,\n\ttoggleDevOptions:false,\n\tcurrentMapId: null,\n\tauthenticated: null,\n\trefreshToken: null,\n\taccessToken: null\n}\n","import styled from 'styled-components'\nimport { hexToRGBA, LightenDarkenColor } from '../../../methods/utils/color_utils'\n\nexport const TextboxContainer = styled.div`\n    ${props => props.flex &&\n        `\n        display: flex;\n        flex-grow: 1`\n    }\n\n    padding: 0;\n    margin: 0;\n`\n\n\nexport const TextboxLabel = styled.h1`\n    font-size: ${props => props.theme.fontSize.sz2};\n    font-family: ${props => props.theme.font.primary};\n    color: ${props => props.theme.bg.septenary};\n    margin-top: .6rem;\n    margin-right: 0.5rem;\n    line-height: 1rem;\n`;\n\nexport const TextboxInput = styled.input`\n    background-color: ${props => props.theme.bg.quinary};\n    border: none;\n    font-size: ${props => props.theme.fontSize.sz4};\n    font-family: ${props => props.theme.font.primary};\n    font-weight: 500;\n    display: flex;\n    flex-grow: 1;\n    color: ${props => props.theme.bg.octonary};\n\n    box-shadow: 0 0.1rem 0.2rem 0rem rgba(0,0,0,0.1) !important;\n    border-bottom: 2px solid ${props => props.theme.bg.quinary};\n\n    &:focus {\n        background-color: ${props => LightenDarkenColor(props.theme.bg.quinary, 10)};\n        border-bottom: 2px solid ${props => !!props.schema ? props.theme.schema[props.schema].solid : props.theme.fg.primary};\n        color: ${props => props.theme.bg.octonary};\n        outline: none !important;\n    }\n\n    &::placeholder {\n        font-family: ${props => props.theme.font.secondary};\n        color: ${props => props.theme.bg.senary};\n    }\n`;\n\nexport const TextboxArea = styled.textarea`\n    background-color: ${props => props.theme.bg.quinary};\n    border: none;\n    font-size: ${props => props.theme.fontSize.sz4};\n    font-family: ${props => props.theme.font.primary};\n    font-weight: 500;\n    display: flex;\n    flex-grow: 1;\n    color: ${props => props.theme.bg.octonary};\n\n    box-shadow: 0 0.1rem 0.2rem 0rem rgba(0,0,0,0.1) !important;\n    border-bottom: 2px solid ${props => props.theme.bg.quinary};\n\n    &:focus {\n        background-color: ${props => LightenDarkenColor(props.theme.bg.quinary, 10)};\n        border-bottom: 2px solid ${props => !!props.schema ? props.theme.schema[props.schema].solid : props.theme.fg.primary};\n        color: ${props => props.theme.bg.octonary};\n        outline: none !important;\n    }\n\n    &::placeholder {\n        font-family: ${props => props.theme.font.secondary};\n        color: ${props => props.theme.bg.senary};\n    }\n`;\n","import React, { useEffect, useRef } from 'react'\nimport * as styled from './textbox.style'\n\nexport default function Textbox(props) {\n\n    let InputComponent;\n    if (props.lines) {InputComponent = props.inputAreaComponent}\n    else {InputComponent = props.inputComponent}\n\n    const inputRef = useRef(null)\n\n    useEffect(() => {\n        if (props.focus == true) {\n            inputRef.current.focus()\n        }\n    }, [props.focus])\n\n    useEffect(() => {\n        if (props.keepFocus === true) {\n            inputRef.current.focus()\n        }\n    })\n\n    return (\n        <React.Fragment>\n            {(!props.inline && props.label) && <styled.TextboxLabel style={props.labelStyle}>{props.label}</styled.TextboxLabel>}\n            <styled.TextboxContainer className=\"form-group\" style={{...props.textboxContainerStyle}}>\n                {props.inline && <styled.TextboxLabel style={props.labelStyle}>{props.label}</styled.TextboxLabel>}\n                <InputComponent \n                    ref={inputRef}\n                    theme={props.theme}\n                    style={props.style}\n                    className={\"form-control \"+props.className}\n                    placeholder={props.placeholder}\n                    value={props.value}\n                    onChange={props.onChange}\n                    onKeyPress={props.onKeyPress}\n                    rows={props.lines}\n                    type={props.type}\n                    defaultValue={props.defaultValue}\n                    disabled={props.disabled}\n                    schema={props.schema}\n                    onBlur={props.onBlur}\n                    onFocus={props.onFocus}\n                    >\n                </InputComponent>\n                </styled.TextboxContainer>\n        </React.Fragment>\n    )\n    \n}\n\nTextbox.defaultProps = {\n    inputAreaComponent : styled.TextboxArea,\n    inputComponent : styled.TextboxInput,\n    autofocus: false,\n    flex: false,\n    inline: false,\n    labelStyle: null,\n    onBlur: () => {},\n    onFocus: () => {},\n}\n","// This reducer is for api calls to local storage\n\nimport {\n  GET_LOGGERS,\n  GET_LOGGERS_STARTED,\n  GET_LOGGERS_SUCCESS,\n  GET_LOGGERS_FAILURE,\n\n  POST_LOGGERS,\n  POST_LOGGERS_STARTED,\n  POST_LOGGERS_SUCCESS,\n  POST_LOGGERS_FAILURE,\n\n  GET_LOCAL_SETTINGS,\n  GET_LOCAL_SETTINGS_STARTED,\n  GET_LOCAL_SETTINGS_SUCCESS,\n  GET_LOCAL_SETTINGS_FAILURE,\n\n  POST_LOCAL_SETTINGS,\n  POST_LOCAL_SETTINGS_STARTED,\n  POST_LOCAL_SETTINGS_SUCCESS,\n  POST_LOCAL_SETTINGS_FAILURE,\n\n  STOP_API_CALLS,\n\n} from '../types/local_types';\nimport {defaultLocalSettings} from \"../../constants/local_settings_constants\";\n\nconst defaultState = {\n    loggers: {\n        /*\n        All: {\n          enabled: false,\n          level: 0,\n          name: \"All\"\n        },\n        Dashboards: {\n          enabled: false,\n          level: 0,\n          name: \"Dashboards\"\n        },\n        Scheduler: {\n          enabled: false,\n          level: 0,\n          name: \"Scheduler\"\n        },\n        Tasks: {\n          enabled: false,\n          level: 0,\n          name: \"Tasks\"\n        },\n        Objects: {\n          enabled: false,\n          level: 0,\n          name: \"Objects\"\n        },\n        Api: {\n          enabled: false,\n          level: 0,\n          name: \"Api\"\n        },\n        ReduxLogger: {\n          enabled: false,\n          level: 0,\n          name: \"ReduxLogger\"\n        }\n        */\n    },\n\n    localSettings: defaultLocalSettings,\n    devicesEnabled: false,\n\n    disableAll: false,\n    enableAll: false,\n    loaded: false,\n};\n\nconst localReducer = (state = defaultState, action) => {\n    switch(action.type) {\n\n    // ======================================== //\n    //                                          //\n    //              Get SETTINGS                //\n    //                                          //\n    // ======================================== //\n        case GET_LOGGERS:\n            break;\n\n        case GET_LOGGERS_SUCCESS:\n            return  {\n                ...state,\n                ...action.payload,\n                loggers: {\n                  ...state.loggers, ...action.payload.loggers\n                },\n\n                pending: false,\n                loaded: true,\n            }\n\n        case GET_LOGGERS_FAILURE:\n            return  Object.assign({}, state, {\n                error: action.payload,\n                pending: false,\n                loaded: true,\n            });\n\n        case GET_LOGGERS_STARTED:\n            return  Object.assign({}, state, {\n                pending: true\n            });\n\n    // ======================================== //\n    //                                          //\n    //             Post LOGGERS                //\n    //                                          //\n    // ======================================== //\n        case POST_LOGGERS:\n            break;\n\n        case POST_LOGGERS_SUCCESS:\n            return{\n                ...state,\n                 ...action.payload,\n                pending: false\n            }\n\n        case POST_LOGGERS_FAILURE:\n            return  Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case POST_LOGGERS_STARTED:\n            return  Object.assign({}, state, {\n                pending: true\n            });\n\n    // ======================================== //\n    //                                          //\n    //          Get Local Settings              //\n    //                                          //\n    // ======================================== //\n        case GET_LOCAL_SETTINGS:\n            break\n\n        case GET_LOCAL_SETTINGS_SUCCESS:\n            return  {\n                ...state,\n                localSettings: action.payload,\n                pending: false,\n            }\n\n        case GET_LOCAL_SETTINGS_FAILURE:\n            return  Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case GET_LOCAL_SETTINGS_STARTED:\n            return  Object.assign({}, state, {\n                pending: true\n            });\n\n    // ======================================== //\n    //                                          //\n    //           Post Local Settings            //\n    //                                          //\n    // ======================================== //\n        case POST_LOCAL_SETTINGS:\n            break;\n\n        case POST_LOCAL_SETTINGS_SUCCESS:\n            return{\n                ...state,\n                localSettings: {\n                    ...state.localSettings, \n                    ...action.payload\n                },\n                pending: false\n            }\n\n        case POST_LOCAL_SETTINGS_FAILURE:\n            return  Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case POST_LOCAL_SETTINGS_STARTED:\n            return  Object.assign({}, state, {\n                pending: true\n            });\n\n        case STOP_API_CALLS:\n            return {\n                ...state,\n                stopAPICalls: action.payload,\n            }\n\n\n        // ~~~~~~~~~~~~~~~\n    }\n\n    return state\n}\n\nexport default localReducer\n","import { denormalize, schema } from 'normalizr';\nimport { uuidv4 } from '../methods/utils/utils';\n\n// schema for single task queue item schema\nexport const taskQueueItemSchema = new schema.Entity(\n  // key\n  'taskQueue',\n  // definition\n  {\n    //condition: conditionSchema\n  },\n  // options\n  {\n    idAttribute: (value, parent, key) => {\n      return value._id\n    },\n\n    // processStrategy\n    processStrategy: (value, parent, key) => {\n      return value;\n    }\n  },\n\n);\n\n// schema for list of task queue items\nexport const taskQueueSchema = [taskQueueItemSchema]\n","import { normalize, schema } from 'normalizr';\n\nimport {\n    GET_DASHBOARDS,\n    GET_DASHBOARDS_STARTED,\n    GET_DASHBOARDS_SUCCESS,\n    GET_DASHBOARDS_FAILURE,\n\n    POST_DASHBOARD,\n    POST_DASHBOARD_STARTED,\n    POST_DASHBOARD_SUCCESS,\n    POST_DASHBOARD_FAILURE,\n\n    PUT_DASHBOARD,\n    PUT_DASHBOARD_STARTED,\n    PUT_DASHBOARD_SUCCESS,\n    PUT_DASHBOARD_FAILURE,\n\n    DELETE_DASHBOARD,\n    DELETE_DASHBOARD_STARTED,\n    DELETE_DASHBOARD_SUCCESS,\n    DELETE_DASHBOARD_FAILURE,\n\n    DASHBOARD_OPEN,\n} from '../types/dashboards_types'\n\nimport {\n    DASHBOARD,\n    DASHBOARDS\n} from \"../types/data_types\"\n\nimport {\n    SET\n} from \"../types/prefixes\"\n\nimport {\n    KICK_OFF_ENABLED,\n    FINISH_ENABLED\n} from \"../types/suffixes\"\n\nimport uuid from 'uuid'\n\nimport * as api from '../../api/dashboards_api'\nimport { dashboardsSchema } from '../../normalizr/schema';\nimport {getLoadStationId, getRouteProcesses, getUnloadStationId} from \"../../methods/utils/route_utils\";\nimport {willRouteDeleteBreakProcess} from \"../../methods/utils/processes_utils\";\nimport {putProcesses, setSelectedProcess} from \"./processes_actions\";\nimport {deleteTask} from \"./tasks_actions\";\nimport {deepCopy} from \"../../methods/utils/utils\";\nimport {useSelector} from \"react-redux\";\nimport * as stationActions from \"./stations_actions\";\nimport {getDefaultStation} from \"../../methods/utils/station_utils\";\nimport {removeArrayIndices} from \"../../methods/utils/array_utils\";\nimport {ROUTE_TYPES} from \"../../constants/route_constants\";\n\n\nexport const getDashboards = () => {\n    return async dispatch => {\n        function onStart() {\n            dispatch({ type: GET_DASHBOARDS_STARTED });\n        }\n        function onSuccess(response) {\n            dispatch({ type: GET_DASHBOARDS_SUCCESS, payload: response });\n            return response;\n        }\n        function onError(error) {\n            dispatch({ type: GET_DASHBOARDS_FAILURE, payload: error });\n            console.log(error)\n\n            return error;\n        }\n\n        try {\n            onStart();\n            const dashboards = await api.getDashboards();\n\n            const normalizedDashboards = {}\n            dashboards.map((dashboard) => {\n                normalizedDashboards[dashboard._id.$oid] = dashboard\n            })\n\n            return onSuccess(normalizedDashboards)\n            // return onSuccess(dashboards)\n        } catch (error) {\n            return onError(error)\n        }\n    }\n}\nexport const postDashboard = (dashboard) => {\n    return async dispatch => {\n        function onStart() {\n            dispatch({ type: POST_DASHBOARD_STARTED });\n        }\n        function onSuccess(response) {\n            dispatch({ type: POST_DASHBOARD_SUCCESS, payload: response });\n            return response;\n        }\n        function onError(error) {\n            dispatch({ type: POST_DASHBOARD_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            delete dashboard._id\n            const newDashboard = await api.postDashboards(dashboard);\n            return onSuccess(newDashboard)\n        } catch (error) {\n            return onError(error)\n        }\n    }\n}\nexport const putDashboard = (dashboard, ID) => {\n    return async dispatch => {\n        function onStart() {\n            dispatch({ type: PUT_DASHBOARD_STARTED });\n        }\n        function onSuccess(updatedDashboard) {\n            dispatch({ type: PUT_DASHBOARD_SUCCESS, payload: updatedDashboard });\n            return updatedDashboard;\n        }\n        function onError(error) {\n            dispatch({ type: PUT_DASHBOARD_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            delete dashboard._id\n            const updateDashboard = await api.putDashboards(dashboard, ID);\n            return onSuccess(updateDashboard)\n        } catch (error) {\n            return onError(error)\n        }\n    }\n}\nexport const deleteDashboard = (ID) => {\n    return async dispatch => {\n        function onStart() {\n            dispatch({ type: DELETE_DASHBOARD_STARTED });\n        }\n        function onSuccess(response) {\n            dispatch({ type: DELETE_DASHBOARD_SUCCESS, payload: ID });\n            return response;\n        }\n        function onError(error) {\n            dispatch({ type: DELETE_DASHBOARD_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const removeDashboards = await api.deleteDashboards(ID);\n            return onSuccess(ID)\n        } catch (error) {\n            return onError(error)\n        }\n    }\n}\n\n// deletes all buttons with routeId from all dashboards\n// ******************************\nexport const removeRouteFromAllDashboards = (routeId) => {\n    return async (dispatch, getState) => {\n\n        // current state\n        const state = getState()\n\n        const dashboards = state.dashboardsReducer.dashboards || {}\n        const routes = state.tasksReducer.tasks || {}\n        const selectedTask = routes[routeId] || {}\n\n        // Delete all dashboard buttons associated with that task\n        Object.values(dashboards)\n            .filter(dashboard =>\n                dashboard.station === selectedTask?.load?.station || dashboard.station === selectedTask?.unload?.station\n            ).forEach(currDashboard => {\n                var currButtons = [...currDashboard.buttons]\n\n                currButtons = currButtons.filter(button => button.task_id !== routeId)\n\n                // update dashboard\n                dispatch(putDashboard({\n                    ...currDashboard,\n                    buttons: currButtons\n                }, currDashboard._id.$oid))\n            }\n        )\n\n    }\n}\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// automatically adds a button for a route to its load station's dashboard\n// ******************************\nexport const addRouteToDashboards = (route) => {\n    return async (dispatch, getState) => {\n\n        // current state\n        const state = getState()\n        const dashboards = state.dashboardsReducer.dashboards || {}\n        const stations = state.stationsReducer.stations || {}\n\n        const {\n            _id: routeId,\n            type: routeType,\n            name: routeName\n        } = route\n\n        // get station for route button (load if push, unload if pull)\n        let stationId\n        if(routeType === ROUTE_TYPES.PULL) {\n            stationId = getUnloadStationId(route)\n        }\n        else {\n            stationId = getLoadStationId(route)\n        }\n\n        const station = stations[stationId] || getDefaultStation()\n        const dashboard = dashboards[station.dashboards[0]]\n\n        const newDashboardButton = {\n            color: '#bcbcbc',\n            id: uuid.v4(),\n            name: routeName,\n            task_id: routeId\n        }\n\n        if (dashboard === undefined) {\n            const defaultDashboard = {\n                name: station.name + ' Dashboard',\n                buttons: [newDashboardButton],\n                station: station._id\n            }\n            const postDashboardPromise = dispatch(postDashboard(defaultDashboard))\n            postDashboardPromise.then(async postedDashboard => {\n                alert('Added dashboard to location. There already should be a dashboard tied to this location, so this is an temp fix')\n                await dispatch(stationActions.putStation({\n                    ...station,\n                    dashboards: [postedDashboard._id.$oid]\n                }, station._id))\n\n            })\n        }\n\n        else {\n            // see if button for task already exists\n            const buttonIndex = dashboard.buttons.findIndex((currButton) => {\n                return currButton.task_id === route._id\n            })\n\n            // only add button if it isn't already in the dashboard\n            if(buttonIndex === -1) {\n                dispatch(putDashboard({\n                    ...dashboard,\n                    buttons: [...dashboard.buttons, newDashboardButton]\n                }, dashboard._id.$oid))\n            }\n\n        }\n    }\n}\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// automatically removes a button that was added to a dashboard but no longer belongs to it\n// ******************************\nexport const removeRouteFromWrongDashboards = (route) => {\n    return async (dispatch, getState) => {\n\n        // current state\n        const state = getState()\n        const dashboards = Object.values(state.dashboardsReducer.dashboards) || []\n\n        const {\n            _id: routeId,\n            type: routeType\n        } = route\n\n        // get station id for route (load for push, unload for pull)\n        let stationId\n        if(routeType === ROUTE_TYPES.PULL) {\n            // if pull type, button should be at unload station\n            stationId = getUnloadStationId(route)\n        }\n\n        else {\n            // if push type, button should be at load station\n            stationId = getLoadStationId(route)\n        }\n\n        dashboards.forEach((currDashboard) => {\n            const {\n                buttons: currDashboardButtons = [],\n                _id: currDashboardIdObj = {},\n                station: currStationId\n            } = currDashboard\n\n            const {\n                $oid: currDashboardId\n            } = currDashboardIdObj\n\n            // curr dashboard isn't the route's load station\n            if(currStationId !== stationId) {\n\n                // loop through each button and check if the button needs to be removed\n                const filteredButtons = currDashboardButtons.filter((currButton, currButtonIndex) => {\n                    const {\n                        task_id: currRouteId\n                    } = currButton\n\n                    return(currRouteId !== routeId) // if dashboard isn't at the right station for the route, filter out buttons for this route\n                })\n\n                // if length of buttons arr changed, a button was removed, so update\n                // otherwise nothing was removed, so need for update\n                if(filteredButtons.length !== currDashboardButtons.length) {\n                    // update the dashboard\n                    dispatch(putDashboard({\n                        ...currDashboard,\n                        buttons: filteredButtons\n                    }, currDashboardId))\n                }\n\n            }\n        })\n    }\n}\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nexport const dashboardOpen = (bol) => {\n    return { type: DASHBOARD_OPEN, payload: bol }\n}\n\nexport const setDashboardKickOffProcesses = (dashboardId, kickOffEnabled) => {\n    return { type: SET + DASHBOARD + KICK_OFF_ENABLED, payload: {dashboardId, kickOffEnabled} }\n}\n\nexport const setDashboardFinishProcesses = (dashboardId, finishEnabled) => {\n    return { type: SET + DASHBOARD + FINISH_ENABLED, payload: {dashboardId, finishEnabled} }\n}\n","export const getDefaultStation = () => {\n\treturn {\n\t\tdashboards: []\n\t}\n\n}\n\n","export const STARTED = '_STARTED';\nexport const SUCCESS = '_SUCCESS';\nexport const FAILURE = '_FAILURE';\nexport const SELECTED = '_SELECTED';\nexport const KICK_OFF_ENABLED = '_KICK_OFF_ENABLED';\nexport const FINISH_ENABLED = '_FINISH_ENABLED';","export const GET_OBJECTS = 'GET_OBJECTS'\nexport const GET_OBJECTS_STARTED = 'GET_OBJECTS_STARTED'\nexport const GET_OBJECTS_SUCCESS = 'GET_OBJECTS_SUCCESS'\nexport const GET_OBJECTS_FAILURE = 'GET_OBJECTS_FAILURE'\n\nexport const GET_OBJECT = 'GET_OBJECT'\nexport const GET_OBJECT_STARTED = 'GET_OBJECT_STARTED'\nexport const GET_OBJECT_SUCCESS = 'GET_OBJECT_SUCCESS'\nexport const GET_OBJECT_FAILURE = 'GET_OBJECT_FAILURE'\n\nexport const POST_OBJECT = 'POST_OBJECT'\nexport const POST_OBJECT_STARTED = 'POST_OBJECT_STARTED'\nexport const POST_OBJECT_SUCCESS = 'POST_OBJECT_SUCCESS'\nexport const POST_OBJECT_FAILURE = 'POST_OBJECT_FAILURE'\n\nexport const PUT_OBJECT = 'PUT_OBJECT'\nexport const PUT_OBJECT_STARTED = 'PUT_OBJECT_STARTED'\nexport const PUT_OBJECT_SUCCESS = 'PUT_OBJECT_SUCCESS'\nexport const PUT_OBJECT_FAILURE = 'PUT_OBJECT_FAILURE'\n\nexport const DELETE_OBJECT = 'DELETE_OBJECT'\nexport const DELETE_OBJECT_STARTED = 'DELETE_OBJECT_STARTED'\nexport const DELETE_OBJECT_SUCCESS = 'DELETE_OBJECT_SUCCESS'\nexport const DELETE_OBJECT_FAILURE = 'DELETE_OBJECT_FAILURE'\n\nexport const ADD_OBJECT = 'ADD_OBJECT'\nexport const UPDATE_OBJECT = 'UPDATE_OBJECT'\nexport const UPDATE_OBJECTS = 'UPDATE_OBJECTS'\nexport const REMOVE_OBJECT = 'REMOVE_OBJECT'\nexport const SET_OBJECT_ATTRIBUTES = 'SET_OBJECT_ATTRIBUTES'\nexport const VALIDATE_OBJECT = 'VALIDATE_OBJECT'\nexport const SELECT_OBJECT = 'SELECT_OBJECT'\nexport const SET_SELECTED_OBJECT = 'SET_SELECTED_OBJECT'\nexport const DESELECT_OBJECT = 'DESELECT_OBJECT'","export const GET_STATIONS_STARTED = 'GET_STATIONS_STARTED'\nexport const GET_STATIONS_SUCCESS = 'GET_STATIONS_SUCCESS'\nexport const GET_STATIONS_FAILURE = 'GET_STATIONS_FAILURE'\n\nexport const POST_STATION_STARTED = 'POST_STATION_STARTED'\nexport const POST_STATION_SUCCESS = 'POST_STATION_SUCCESS'\nexport const POST_STATION_FAILURE = 'POST_STATION_FAILURE'\n\nexport const PUT_STATION_STARTED = 'PUT_STATION_STARTED'\nexport const PUT_STATION_SUCCESS = 'PUT_STATION_SUCCESS'\nexport const PUT_STATION_FAILURE = 'PUT_STATION_FAILURE'\n\nexport const DELETE_STATION_STARTED = 'DELETE_STATION_STARTED'\nexport const DELETE_STATION_SUCCESS = 'DELETE_STATION_SUCCESS'\nexport const DELETE_STATION_FAILURE = 'DELETE_STATION_FAILURE'\n\nexport const ADD_STATION = 'ADD_STATION'\nexport const UPDATE_STATION = 'UPDATE_STATION'\nexport const UPDATE_STATIONS = 'UPDATE_STATIONS'\nexport const REMOVE_STATION = 'REMOVE_STATION'\nexport const EDITING_STATION = 'EDITING_STATION'\nexport const SET_STATION_ATTRIBUTES = 'SET_STATION_ATTRIBUTES'\nexport const SET_SELECTED_STATION = 'SET_SELECTED_STATION'","export const GET_POSITIONS_STARTED = 'GET_POSITIONS_STARTED'\nexport const GET_POSITIONS_SUCCESS = 'GET_POSITIONS_SUCCESS'\nexport const GET_POSITIONS_FAILURE = 'GET_POSITIONS_FAILURE'\n\nexport const GET_POSITION_STARTED = 'GET_POSITION_STARTED'\nexport const GET_POSITION_SUCCESS = 'GET_POSITION_SUCCESS'\nexport const GET_POSITION_FAILURE = 'GET_POSITION_FAILURE'\n\nexport const POST_POSITION_STARTED = 'POST_POSITION_STARTED'\nexport const POST_POSITION_SUCCESS = 'POST_POSITION_SUCCESS'\nexport const POST_POSITION_FAILURE = 'POST_POSITION_FAILURE'\n\nexport const PUT_POSITION_STARTED = 'PUT_POSITION_STARTED'\nexport const PUT_POSITION_SUCCESS = 'PUT_POSITION_SUCCESS'\nexport const PUT_POSITION_FAILURE = 'PUT_POSITION_FAILURE'\n\nexport const DELETE_POSITION_STARTED = 'DELETE_POSITION_STARTED'\nexport const DELETE_POSITION_SUCCESS = 'DELETE_POSITION_SUCCESS'\nexport const DELETE_POSITION_FAILURE = 'DELETE_POSITION_FAILURE'\n\nexport const ADD_POSITION = 'ADD_POSITION'\nexport const UPDATE_POSITION = 'UPDATE_POSITION'\nexport const UPDATE_POSITIONS = 'UPDATE_POSITIONS'\nexport const REMOVE_POSITION = 'REMOVE_POSITION'\nexport const SET_POSITION_ATTRIBUTES = 'SET_POSITION_ATTRIBUTES'\nexport const REVERT_CHILDREN = 'REVERT_CHILDREN'\nexport const SET_SELECTED_POSITION = 'SET_SELECTED_POSITION'\nexport const EDITING_POSITION ='EDITING_POSITION'\nexport const SET_SELECTED_STATION_CHILDREN_COPY = 'SET_SELECTED_STATION_CHILDREN_COPY'\n","import {\n    GET_OBJECTS,\n    GET_OBJECTS_STARTED,\n    GET_OBJECTS_SUCCESS,\n    GET_OBJECTS_FAILURE,\n\n    GET_OBJECT,\n    GET_OBJECT_STARTED,\n    GET_OBJECT_SUCCESS,\n    GET_OBJECT_FAILURE,\n\n    POST_OBJECT,\n    POST_OBJECT_STARTED,\n    POST_OBJECT_SUCCESS,\n    POST_OBJECT_FAILURE,\n\n    PUT_OBJECT,\n    PUT_OBJECT_STARTED,\n    PUT_OBJECT_SUCCESS,\n    PUT_OBJECT_FAILURE,\n\n    DELETE_OBJECT,\n    DELETE_OBJECT_STARTED,\n    DELETE_OBJECT_SUCCESS,\n    DELETE_OBJECT_FAILURE,\n\n    ADD_OBJECT,\n    UPDATE_OBJECT,\n    UPDATE_OBJECTS,\n    REMOVE_OBJECT,\n    SET_OBJECT_ATTRIBUTES,\n    VALIDATE_OBJECT,\n    SELECT_OBJECT,\n    SET_SELECTED_OBJECT,\n    DESELECT_OBJECT,\n} from '../types/objects_types'\n\nimport { deepCopy } from '../../methods/utils/utils';\n\n\nconst defaultState = {\n    objects: {},\n    selectedObject: null,\n\n    error: {},\n    pending: false\n};\n\nexport default function objectsReducer(state = defaultState, action) {\n    let index = ''\n    let objectID = ''\n    let objectsCopy = {}\n\n    switch (action.type) {\n\n        // ======================================== //\n        //                                          //\n        //              Get Objects               //\n        //                                          //\n        // ======================================== //\n        case GET_OBJECTS:\n            break;\n\n        case GET_OBJECTS_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        case GET_OBJECTS_SUCCESS:\n            objectsCopy = deepCopy(action.payload)\n            return {\n                ...state,\n                objects: action.payload,\n                pending: false\n            }\n\n        case GET_OBJECTS_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        // ======================================== //\n        //                                          //\n        //             Post Objects               //\n        //                                          //\n        // ======================================== //\n\n        case POST_OBJECT:\n            break;\n\n        case POST_OBJECT_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        case POST_OBJECT_SUCCESS:\n            objectsCopy = deepCopy(state.objects)\n            objectsCopy[action.payload._id] = action.payload\n            return {\n                ...state,\n                objects: objectsCopy,\n                pending: false,\n\n            }\n\n        case POST_OBJECT_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        // ======================================== //\n        //                                          //\n        //             Put Objects                //\n        //                                          //\n        // ======================================== //\n\n        case PUT_OBJECT:\n            break;\n\n        case PUT_OBJECT_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        case PUT_OBJECT_SUCCESS:\n            objectsCopy = deepCopy(state.objects)\n            objectsCopy[action.payload._id] = action.payload\n\n            return {\n                ...state,\n                objects: objectsCopy\n            }\n\n        case PUT_OBJECT_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case DELETE_OBJECT:\n            break;\n\n        case DELETE_OBJECT_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        case DELETE_OBJECT_SUCCESS:\n            objectsCopy = deepCopy(state.objects)\n            delete objectsCopy[action.payload]\n\n            return {\n                ...state,\n                objects: objectsCopy\n            }\n\n        case DELETE_OBJECT_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n\n\n        // ======================================== //\n        //                                          //\n        //             Objects Utils              //\n        //                                          //\n        // ======================================== //\n\n        case ADD_OBJECT:\n            objectsCopy = deepCopy(state.objects)\n            objectsCopy[action.payload.object._id] = action.payload.object\n            return {\n                ...state,\n                objects: objectsCopy,\n                selectedObject: objectsCopy[action.payload.object._id],\n            }\n\n        case UPDATE_OBJECT:\n            objectsCopy = deepCopy(state.objects)\n            objectsCopy[action.payload.object._id] = action.payload.object\n\n            if (state.selectedObject !== null) {\n                return {\n                    ...state,\n                    objects: objectsCopy,\n                    selectedObject: objectsCopy[state.selectedObject._id]\n                }\n            } else {\n                return {\n                    ...state,\n                    objects: objectsCopy\n                }\n            }\n\n        case UPDATE_OBJECTS:\n            objectsCopy = deepCopy(action.payload.objects)\n\n            if (state.selectedObject !== null) {\n                return {\n                    ...state,\n                    objects: deepCopy(action.payload.objects),\n                    selectedObject: deepCopy(action.payload.objects[state.selectedObject._id])\n                }\n            } else {\n                return {\n                    ...state,\n                    objects: deepCopy(action.payload.objects)\n                }\n            }\n\n        case REMOVE_OBJECT:\n            objectsCopy = deepCopy(state.objects)\n            delete objectsCopy[action.payload.id]\n\n            return {\n                ...state,\n                objects: objectsCopy,\n            }\n\n\n        case SET_OBJECT_ATTRIBUTES:\n\n            objectsCopy = deepCopy(state.objects)\n            objectsCopy = {\n                ...objectsCopy,\n                [state.selectedObject._id]: {\n                    ...state.selectedObject,\n                    ...action.payload,\n                }\n            }\n\n            // Object.assign(objectsCopy[action.payload.id], action.payload.attr)\n            return {\n                ...state,\n                objects: objectsCopy,\n                selectedObject: deepCopy(objectsCopy[state.selectedObject._id])\n            }\n\n\n        case SELECT_OBJECT:\n            objectsCopy = deepCopy(state.objects)\n            return {\n                ...state,\n                selectedObject: objectsCopy[action.payload.id]\n            }\n\n        case DESELECT_OBJECT:\n            return {\n                ...state,\n                selectedObject: null,\n            }\n\n        default:\n            return state;\n    }\n}\n","import {\n  SET_CONDITIONS_API,\n  SET_SCHEDULES_API,\n  SET_DASHBOARDS_API,\n  SET_SKILLS_API,\n  SET_DASHBOARD_BUTTONS_API,\n  SET_STATUS_API,\n  SET_TASK_QUEUE_API,\n  SET_TASKS_API,\n} from '../types/api_types';\n\nimport {\n  SET\n} from \"../types/prefixes\"\n\nimport {\n  DATA_PAGE\n} from \"../types/data_types\"\n\nconst defaultState = {\n  conditionsApi: null,\n  schedulesApi: null,\n  dashboardsApi: null,\n  skillsApi: null,\n  dashboardButtonsApi: null,\n  statusApi: null,\n  taskQueueApi: null,\n  tasksApi: null,\n  page: null,\n};\n\nexport default function apiReducer(state = defaultState, action) {\n\n  switch (action.type) {\n\n    case SET + DATA_PAGE:\n      return {\n        ...state,\n        page: action.payload,\n      }\n\n    case SET_CONDITIONS_API:\n      return  Object.assign({}, state, {\n        conditionsApi: action.payload,\n      });\n\n    case SET_SCHEDULES_API:\n      return  Object.assign({}, state, {\n        schedulesApi: action.payload,\n      });\n\n    case SET_STATUS_API:\n      return  Object.assign({}, state, {\n        statusApi: action.payload,\n      });\n\n    case SET_TASK_QUEUE_API:\n      return  Object.assign({}, state, {\n        taskQueueApi: action.payload,\n      });\n\n    case SET_TASKS_API:\n      return  Object.assign({}, state, {\n        tasksApi: action.payload,\n      });\n\n    default:\n      return state\n  }\n\n}\n","import {\n    TASKS,\n    TASK,\n    ANALYSIS,\n} from '../types/tasks_types';\n\nimport {\n    GET_,\n\n    _STARTED,\n    _SUCCESS,\n    _FAILURE,\n} from '../types/api_types';\n\n\nconst defaultState = {\n    tasksAnalysis: {},\n    taskAnalysis: {}\n};\n\n\nexport default function taskAnalysisReducer(state = defaultState, action) {\n\n\n    switch (action.type) {\n\n        // GET\n        // ***************\n\n        // multi\n        case GET_ + TASKS + ANALYSIS + _SUCCESS:\n            return {\n                ...state,\n                tasksAnalysis: action.payload,\n                pending: false\n            }\n\n        case GET_ + TASKS + ANALYSIS + _FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case GET_ + TASKS + ANALYSIS + _STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        // single\n        case GET_ + TASK + ANALYSIS + _SUCCESS:\n            return {\n                ...state,\n                taskAnalysis: action.payload,\n                pending: false\n            };\n\n        case GET_ + TASK + ANALYSIS + _FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case GET_ + TASK + ANALYSIS + _STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n        // ~~~~~~~~~~~~~~~\n\n        default:\n            return state\n    }\n}\n","export const GET_TASK_QUEUE = 'GET_TASK_QUEUE'\nexport const GET_TASK_QUEUE_STARTED = 'GET_TASK_QUEUE_STARTED'\nexport const GET_TASK_QUEUE_SUCCESS = 'GET_TASK_QUEUE_SUCCESS'\nexport const GET_TASK_QUEUE_FAILURE = 'GET_TASK_QUEUE_FAILURE'\n\nexport const GET_TASK_QUEUE_ITEM = 'GET_TASK_QUEUE_ITEM'\nexport const GET_TASK_QUEUE_ITEM_STARTED = 'GET_TASK_QUEUE_ITEM_STARTED'\nexport const GET_TASK_QUEUE_ITEM_SUCCESS = 'GET_TASK_QUEUE_ITEM_SUCCESS'\nexport const GET_TASK_QUEUE_ITEM_FAILURE = 'GET_TASK_QUEUE_ITEM_FAILURE'\n\nexport const POST_TASK_QUEUE = 'POST_TASK_QUEUE'\nexport const POST_TASK_QUEUE_STARTED = 'POST_TASK_QUEUE_STARTED'\nexport const POST_TASK_QUEUE_SUCCESS = 'POST_TASK_QUEUE_SUCCESS'\nexport const POST_TASK_QUEUE_FAILURE = 'POST_TASK_QUEUE_FAILURE'\n\nexport const PUT_TASK_QUEUE = 'PUT_TASK_QUEUE'\nexport const PUT_TASK_QUEUE_STARTED = 'PUT_TASK_QUEUE_STARTED'\nexport const PUT_TASK_QUEUE_SUCCESS = 'PUT_TASK_QUEUE_SUCCESS'\nexport const PUT_TASK_QUEUE_FAILURE = 'PUT_TASK_QUEUE_FAILURE'\n\nexport const DELETE_TASK_QUEUE = 'DELETE_TASK_QUEUE'\nexport const DELETE_TASK_QUEUE_STARTED = 'DELETE_TASK_QUEUE_STARTED'\nexport const DELETE_TASK_QUEUE_SUCCESS = 'DELETE_TASK_QUEUE_SUCCESS'\nexport const DELETE_TASK_QUEUE_FAILURE = 'DELETE_TASK_QUEUE_FAILURE'\n\nexport const TASK_QUEUE = 'TASK_QUEUE'\nexport const TASK_QUEUE_ALL = 'TASK_QUEUE_ALL'\nexport const TASK_QUEUE_ITEM = 'TASK_QUEUE_ITEM'\nexport const TASK_QUEUE_OPEN = 'TASK_QUEUE_OPEN'\nexport const HANDLE_POST_TASK_QUEUE = 'HANDLE_POST_TASK_QUEUE'\nexport const INCREMENT_GET_DATA_FAILURE_COUNT = 'INCREMENT_GET_DATA_FAILURE_COUNT'\n","import React, { useState, useMemo, useEffect } from 'react';\n\n// Import Styles\nimport * as styled from '../hil_modals.style'\n\nconst HILSuccess = (props) => {\n\n    return(\n        <styled.HilContainer style={{justifyContent: 'center', }}>\n            <styled.HilIcon color='green' style={{fontSize:'6rem'}} className='fas fa-check'/>\n            <styled.HilMessage>Task has been added to the Queue</styled.HilMessage>\n        </styled.HilContainer>\n    )\n}\n\nexport default HILSuccess","import {\n  GET_SCHEDULES,\n  GET_SCHEDULES_STARTED,\n  GET_SCHEDULES_SUCCESS,\n  GET_SCHEDULES_FAILURE,\n\n  POST_SCHEDULE,\n  POST_SCHEDULE_STARTED,\n  POST_SCHEDULE_SUCCESS,\n  POST_SCHEDULE_FAILURE,\n\n  DELETE_SCHEDULE,\n  DELETE_SCHEDULES,\n\n  ADD_SCHEDULES,\n  DELETE_SCHEDULE_STARTED,\n  DELETE_SCHEDULE_SUCCESS,\n  DELETE_SCHEDULE_FAILURE,\n\n  PUT_SCHEDULE,\n  PUT_SCHEDULE_STARTED,\n  PUT_SCHEDULE_SUCCESS,\n  PUT_SCHEDULE_FAILURE,\n\n  UPDATE_SCHEDULE,\n  ADD_SCHEDULES_UNSAVED,\n} from '../types/schedule_types';\n\nimport { clone_object } from '../../methods/utils/utils';\n\nconst defaultState = {\n\n  schedules: {},\n  error: {},\n  pending: false\n};\n\nexport default function schedulesReducer(state = defaultState, action) {\n  var schedules = {}\n\n  switch (action.type) {\n\n    // get\n    // ***************\n    case GET_SCHEDULES_SUCCESS:\n      return  Object.assign({}, state, {\n        schedules: {...state.schedules, ...action.payload.schedulesObj},\n        pending: false\n      });\n\n    case GET_SCHEDULES_FAILURE:\n      return  Object.assign({}, state, {\n        error: action.payload,\n        pending: false\n      });\n\n    case GET_SCHEDULES_STARTED:\n      return  Object.assign({}, state, {\n        pending: true\n      });\n    // ~~~~~~~~~~~~~~~\n\n    // create\n    // ***************\n    case POST_SCHEDULE_SUCCESS:\n      schedules = clone_object(state.schedules);\n      console.log('CREATE_SCHEDULE_SUCCESS schedules before delete ', schedules)\n      console.log('CREATE_SCHEDULE_SUCCESS action.payload ', action.payload)\n      delete schedules[action.payload.oldScheduleId];\n      console.log('CREATE_SCHEDULE_SUCCESS schedules after delete', schedules)\n      //schedules[action.payload.createdSchedule._id.$oid] = action.payload.createdSchedule;\n      console.log('CREATE_SCHEDULE_SUCCESS schedules after add', schedules)\n\n      return  Object.assign({}, state, {\n        schedules: {...schedules, ...action.payload.createdSchedules},\n        pending: false\n      });\n\n\n    case POST_SCHEDULE_FAILURE:\n      return  Object.assign({}, state, {\n        error: action.payload,\n        pending: false\n      });\n\n    case POST_SCHEDULE_STARTED:\n      return  Object.assign({}, state, {\n        pending: true\n      });\n    // ~~~~~~~~~~~~~~~\n\n    // delete\n    // ***************\n    case DELETE_SCHEDULE_SUCCESS:\n      schedules = clone_object(state.schedules);\n      delete schedules[action.payload.scheduleId];\n\n      return  Object.assign({}, state, {\n        schedules: {...schedules},\n        pending: false\n      });\n\n\n    case DELETE_SCHEDULE_FAILURE:\n      return  Object.assign({}, state, {\n        error: action.payload,\n        pending: false\n      });\n\n    case DELETE_SCHEDULE_STARTED:\n      return  Object.assign({}, state, {\n        pending: true\n      });\n    // ~~~~~~~~~~~~~~~\n\n    // update\n    // ***************\n    case PUT_SCHEDULE_SUCCESS:\n      //schedules = clone_object(state.schedules);\n      //schedules[action.payload.scheduleId] = action.payload.schedules;\n\n      return  Object.assign({}, state, {\n        schedules: {...state.schedules, ...action.payload.schedules},\n        pending: false\n      });\n\n\n    case PUT_SCHEDULE_FAILURE:\n      return  Object.assign({}, state, {\n        error: action.payload,\n        pending: false\n      });\n\n    case PUT_SCHEDULE_STARTED:\n      return  Object.assign({}, state, {\n        pending: true\n      });\n    // ~~~~~~~~~~~~~~~\n\n    case ADD_SCHEDULES:\n      return  Object.assign({}, state, {\n        schedules: {...state.schedules, ...action.schedules}\n      });\n\n    case DELETE_SCHEDULES:\n        schedules = clone_object(state.schedules)\n        action.scheduleIds.forEach((scheduleId, index, scheduleIds)=> {\n          delete schedules[scheduleId];\n        })\n\n        return  Object.assign({}, state, {\n\n          schedules: {...schedules}\n        });\n\n    case UPDATE_SCHEDULE:\n        schedules = clone_object(state.schedules);\n        delete schedules[action.scheduleId];\n        schedules[action.schedule.id] = action.schedule\n\n        return  Object.assign({}, state, {\n          schedules: {...schedules}\n        });\n\n    default:\n      return state\n  }\n}\n","import {\n    GET_SKILLS,\n    GET_SKILLS_STARTED,\n    GET_SKILLS_SUCCESS,\n    GET_SKILLS_FAILURE,\n\n    POST_SKILLS,\n    POST_SKILLS_STARTED,\n    POST_SKILLS_SUCCESS,\n    POST_SKILLS_FAILURE,\n\n    PUT_SKILLS,\n    PUT_SKILLS_STARTED,\n    PUT_SKILLS_SUCCESS,\n    PUT_SKILLS_FAILURE,\n\n    DELETE_SKILLS,\n    DELETE_SKILLS_STARTED,\n    DELETE_SKILLS_SUCCESS,\n    DELETE_SKILLS_FAILURE\n} from '../types/skills_types'\n\nimport { deepCopy } from '../../methods/utils/utils.js'\n\n\nconst defaultState = {\n  skills: [],\n  error: {},\n  pending: false,\n  currentSkill : {},\n  skillUpdated : false,\n  allFieldsFilled: false,\n};\n\nlet index;\n\nexport default function skillsReducer(state = defaultState, action) {\n    let skillsClone = {}\n\n    switch (action.type) {\n\n        case 'SKILL_SELECTED':\n            return {\n                ...state,\n                currentSkill: action.payload\n            }\n\n        case 'ALL_FIELDS_FILLED':\n            return{\n                ...state,\n                allFieldsFilled: action.payload\n            }\n\n        case 'SKILL_UPDATED':\n            return{\n                ...state,\n                skillUpdated: action.payload\n            }\n\n        case GET_SKILLS:\n            break;\n\n        case GET_SKILLS_STARTED:\n            return  Object.assign({}, state, {\n                pending: true\n            });\n\n        case GET_SKILLS_SUCCESS:\n            return  Object.assign({}, state, {\n                skills: [...action.payload],\n                pending: false\n            });\n\n        case GET_SKILLS_FAILURE:\n            return  Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case POST_SKILLS:\n            break;\n\n        case POST_SKILLS_STARTED:\n            return  Object.assign({}, state, {\n                pending: true\n            });\n\n        case POST_SKILLS_SUCCESS:\n            skillsClone = deepCopy(state.skills);\n            return  Object.assign({}, state, {\n                skills: [...skillsClone, action.payload],\n                pending: false\n            });\n\n        case POST_SKILLS_FAILURE:\n            return  Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case PUT_SKILLS:\n            break;\n\n        case PUT_SKILLS_STARTED:\n            return  Object.assign({}, state, {\n                pending: true\n            });\n\n        case PUT_SKILLS_SUCCESS:\n            skillsClone = deepCopy(state.skills);\n            index = skillsClone.findIndex(s => {\n                return s._id.$oid === action.payload._id.$oid;\n            });\n            skillsClone.splice(index, 1, action.payload);\n            return  Object.assign({}, state, {\n                skills: skillsClone,\n                pending: false\n            });\n\n        case PUT_SKILLS_FAILURE:\n            return  Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case DELETE_SKILLS:\n            break;\n\n        case DELETE_SKILLS_STARTED:\n            return  Object.assign({}, state, {\n                pending: true\n            });\n\n        case DELETE_SKILLS_SUCCESS:\n            skillsClone = deepCopy(state.skills);\n            index = skillsClone.findIndex(s => {\n                return s._id.$oid === action.payload.skillId;\n            })\n            skillsClone.splice(index, 1);\n            return  Object.assign({}, state, {\n                skills: skillsClone,\n                pending: false\n            });\n\n        case DELETE_SKILLS_FAILURE:\n            return  Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        default:\n            return state;\n\n    }\n}\n","import {\n    GET_STATIONS_STARTED,\n    GET_STATIONS_SUCCESS,\n    GET_STATIONS_FAILURE,\n\n    POST_STATION_STARTED,\n    POST_STATION_SUCCESS,\n    POST_STATION_FAILURE,\n\n    PUT_STATION_STARTED,\n    PUT_STATION_SUCCESS,\n    PUT_STATION_FAILURE,\n\n    DELETE_STATION_STARTED,\n    DELETE_STATION_SUCCESS,\n    DELETE_STATION_FAILURE,\n\n    ADD_STATION,\n    SET_SELECTED_STATION,\n    UPDATE_STATION,\n    SET_STATION_ATTRIBUTES,\n    UPDATE_STATIONS,\n    REMOVE_STATION,\n    EDITING_STATION\n\n} from '../types/stations_types'\n\n// Import Utils\nimport { deepCopy, isEquivalent } from '../../methods/utils/utils';\nimport { compareExistingVsIncomingLocations } from '../../methods/utils/locations_utils'\n\nconst defaultState = {\n    stations: {},\n\n    selectedStation: null,\n\n    editingStation: false,\n\n    d3: {},\n\n    error: {},\n    pending: false,\n}\n\nexport default function stationsReducer(state = defaultState, action) {\n    let stationsCopy\n    /**\n     * Updates the state of stations to include the incoming payload station.\n     * If the payload is the current selected Station, then update that as well\n     * @param {object} station\n     */\n    const onUpdateStation = (station) => {\n        return {\n            ...state,\n            stations: {\n                ...state.stations,\n                [station._id]: station\n            },\n            // If the post station is the selectedStation, then update selected station\n            selectedStation: state.selectedStation !== null && state.selectedStation._id === station._id && station,\n            pending: false,\n        }\n    }\n\n    switch (action.type) {\n\n        // ======================================== //\n        //                                          //\n        //                UTILS                     //\n        //                                          //\n        // ======================================== //\n\n        // Adds station to front-end without adding it to the backend\n        case ADD_STATION:\n            return onUpdateStation(action.payload)\n\n        // Sets Stations Attributes\n        case SET_STATION_ATTRIBUTES:\n            // If there is a selected station and the payload is that station, then edit the selected station and dont edit the station in state\n            if (!!state.selectedStation && action.payload.id === state.selectedStation._id) {\n                return {\n                    ...state,\n                    selectedStation: {\n                        ...state.selectedStation,\n                        ...action.payload.attr\n                    }\n                }\n            }\n\n            else {\n                let updatedStation = state.stations[action.payload.id]\n                Object.assign(updatedStation, action.payload.attr)\n                return onUpdateStation(updatedStation)\n            }\n\n        // Sets a selected Station\n        case SET_SELECTED_STATION:\n            return {\n                ...state,\n                selectedStation: action.payload\n            }\n\n        // Updates a station locally on the front-end\n        case UPDATE_STATION:\n            return onUpdateStation(action.payload)\n\n        // Upates stations locally on the front-end\n        case UPDATE_STATIONS:\n            return {\n                ...state,\n                stations: action.payload.stations,\n                selectedStation: !!action.payload.selectedStation ? action.payload.selectedStation : state.selectedStation,\n                d3: !!action.payload.d3 ? action.payload.d3 : state.d3\n            }\n\n        case EDITING_STATION:\n            return {\n                ...state,\n                editingStation: action.payload\n            }\n\n        case REMOVE_STATION:\n            stationsCopy = deepCopy(state.stations)\n            delete stationsCopy[action.payload]\n            return {\n                ...state,\n                stations: stationsCopy\n            }\n\n        // ========== GET ========== //\n        case GET_STATIONS_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        case GET_STATIONS_SUCCESS:\n            const parsedStations = compareExistingVsIncomingLocations(deepCopy(action.payload), deepCopy(state.stations), state.d3)\n\n            return {\n                ...state,\n                stations: parsedStations,\n                pending: false\n            }\n\n        case GET_STATIONS_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        // ========== POST ========== //\n        case POST_STATION_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        case POST_STATION_SUCCESS:\n            return onUpdateStation(action.payload)\n\n        case POST_STATION_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        // ========== PUT ========== //\n        case PUT_STATION_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        case PUT_STATION_SUCCESS:\n            return onUpdateStation(action.payload)\n\n        case PUT_STATION_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        // ========== DELETE ========== //\n        case DELETE_STATION_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        case DELETE_STATION_SUCCESS:\n            stationsCopy = deepCopy(state.stations)\n            delete stationsCopy[action.payload]\n            return {\n                ...state,\n                stations: stationsCopy,\n                selectedStation: null,\n                pending: false,\n                hello: true,\n            }\n\n        case DELETE_STATION_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        default:\n            return state\n    }\n\n}\n","import {\n    GET_POSITIONS_STARTED,\n    GET_POSITIONS_SUCCESS,\n    GET_POSITIONS_FAILURE,\n\n    POST_POSITION_STARTED,\n    POST_POSITION_SUCCESS,\n    POST_POSITION_FAILURE,\n\n    PUT_POSITION_STARTED,\n    PUT_POSITION_SUCCESS,\n    PUT_POSITION_FAILURE,\n\n    DELETE_POSITION_STARTED,\n    DELETE_POSITION_SUCCESS,\n    DELETE_POSITION_FAILURE,\n\n    ADD_POSITION,\n    SET_SELECTED_POSITION,\n    UPDATE_POSITION,\n    SET_POSITION_ATTRIBUTES,\n    UPDATE_POSITIONS,\n    REMOVE_POSITION,\n    EDITING_POSITION,\n    SET_SELECTED_STATION_CHILDREN_COPY\n\n} from '../types/positions_types'\n\n// Import Utils\nimport { deepCopy, isEquivalent } from '../../methods/utils/utils';\nimport { compareExistingVsIncomingLocations } from '../../methods/utils/locations_utils'\n\nconst defaultState = {\n    positions: {},\n\n    selectedPosition: null,\n\n    editingPosition: false,\n    selectedStationChildrenCopy: null,\n\n    d3: {},\n\n    error: {},\n    pending: false,\n}\n\nconst positionsReducer = (state = defaultState, action) => {\n    let positionsCopy\n\n    /**\n     * Updates the state of positions to include the incoming payload position.\n     * If the payload is the current selected Position, then update that as well\n     * @param {object} position \n     */\n    const onUpdatePosition = (position) => {\n        return {\n            ...state,\n            positions: {\n                ...state.positions,\n                [position._id]: position\n            },\n            // If the post position is the selectedPosition, then update selected position\n            selectedPosition: state.selectedPosition !== null && state.selectedPosition._id === position._id && position,\n            pending: false,\n        }\n    }\n\n    switch (action.type) {\n\n        // ========== UTILS ========== //\n\n        // Adds position to front-end without adding it to the backend\n        case ADD_POSITION:\n            return onUpdatePosition(action.payload)\n\n        // Sets Positions Attributes\n        case SET_POSITION_ATTRIBUTES:\n            // If editing a child position then update the position in the childrencopy\n            if (!!state.selectedStationChildrenCopy && action.payload.id in state.selectedStationChildrenCopy) {\n                return {\n                    ...state,\n                    selectedStationChildrenCopy: {\n                        ...state.selectedStationChildrenCopy,\n                        [action.payload.id]: {\n                            ...state.selectedStationChildrenCopy[action.payload.id],\n                            ...action.payload.attr,\n                        }\n                    },\n                }\n            }\n\n            // If there is a selected station and the payload is that station, then edit the selected station and dont edit the station in state\n            else if (!!state.selectedPosition && action.payload.id === state.selectedPosition._id) {\n                return {\n                    ...state,\n                    selectedPosition: {\n                        ...state.selectedPosition,\n                        ...action.payload.attr\n                    }\n                }\n            }\n\n            else {\n                let updatedPosition = state.positions[action.payload.id]\n                Object.assign(updatedPosition, action.payload.attr)\n                return onUpdatePosition(updatedPosition)\n            }\n\n        // Sets a selected Position\n        case SET_SELECTED_POSITION:\n            return {\n                ...state,\n                selectedPosition: action.payload\n            }\n\n        // Updates a position locally on the front-end\n        case UPDATE_POSITION:\n            return onUpdatePosition(action.payload)\n\n        // Upates positions locally on the front-end\n        case UPDATE_POSITIONS:\n            // TODO Comment\n            return {\n                ...state,\n                positions: action.payload.positions,\n                selectedPosition: !!action.payload.selectedPosition ? action.payload.selectedPosition : state.selectedPosition,\n                selectedStationChildrenCopy: !!action.payload.childrenPositions ? action.payload.childrenPositions : state.selectedStationChildrenCopy,\n                d3: !!action.payload.d3 ? action.payload.d3 : state.d3\n            }\n\n        case EDITING_POSITION:\n            return {\n                ...state,\n                editingPosition: action.payload\n            }\n\n        case SET_SELECTED_STATION_CHILDREN_COPY:\n            return {\n                ...state,\n                selectedStationChildrenCopy: action.payload\n            }\n\n        case REMOVE_POSITION:\n            positionsCopy = deepCopy(state.positions)\n            delete positionsCopy[action.payload]\n            // positionsCopy.delete(action.payload)\n            return {\n                ...state,\n                positions: positionsCopy\n            }\n\n        // ========== GET ========== //\n        case GET_POSITIONS_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        case GET_POSITIONS_SUCCESS:\n\n            const parsedPositions = compareExistingVsIncomingLocations(deepCopy(action.payload), deepCopy(state.positions), state.d3)\n\n            return {\n                ...state,\n                positions: parsedPositions,\n                pending: false\n            }\n\n        case GET_POSITIONS_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        // ========== POST ========== //\n        case POST_POSITION_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        case POST_POSITION_SUCCESS:\n            return onUpdatePosition(action.payload)\n\n        case POST_POSITION_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        // ========== PUT ========== //\n        case PUT_POSITION_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        case PUT_POSITION_SUCCESS:\n            if (action.payload.change_key === 'deleted') {\n                return state\n            }\n            return onUpdatePosition(action.payload)\n\n        case PUT_POSITION_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        // ========== DELETE ========== //\n        case DELETE_POSITION_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        case DELETE_POSITION_SUCCESS:\n            positionsCopy = deepCopy(state.positions)\n            delete positionsCopy[action.payload]\n            return {\n                ...state,\n                positions: positionsCopy,\n                selectedPosition: null,\n                pending: false,\n            }\n\n        case DELETE_POSITION_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        default:\n            return state\n    }\n\n}\n\nexport default positionsReducer","import {\n    GET_DASHBOARDS,\n    GET_DASHBOARDS_STARTED,\n    GET_DASHBOARDS_SUCCESS,\n    GET_DASHBOARDS_FAILURE,\n\n    GET_DASHBOARD,\n    GET_DASHBOARD_STARTED,\n    GET_DASHBOARD_SUCCESS,\n    GET_DASHBOARD_FAILURE,\n\n    POST_DASHBOARD,\n    POST_DASHBOARD_STARTED,\n    POST_DASHBOARD_SUCCESS,\n    POST_DASHBOARD_FAILURE,\n\n    PUT_DASHBOARD,\n    PUT_DASHBOARD_STARTED,\n    PUT_DASHBOARD_SUCCESS,\n    PUT_DASHBOARD_FAILURE,\n\n    DELETE_DASHBOARD,\n    DELETE_DASHBOARD_STARTED,\n    DELETE_DASHBOARD_SUCCESS,\n    DELETE_DASHBOARD_FAILURE,\n\n    ADD_DASHBOARD,\n    UPDATE_DASHBOARD,\n    UPDATE_DASHBOARDS,\n    REMOVE_DASHBOARD,\n    SET_DASHBOARD_ATTRIBUTES,\n    VALIDATE_DASHBOARD,\n    SELECT_DASHBOARD,\n    SET_SELECTED_DASHBOARD,\n    DESELECT_DASHBOARD,\n    HOVER_DASHBOARD_ID,\n\n    DASHBOARD_OPEN,\n} from '../types/dashboards_types'\n\nimport { deepCopy } from '../../methods/utils/utils';\nimport {SET} from \"../types/prefixes\";\nimport {DASHBOARD} from \"../types/data_types\";\nimport {FINISH_ENABLED, KICK_OFF_ENABLED} from \"../types/suffixes\";\n\n\nconst defaultState = {\n\n    dashboards: null,\n    kickOffEnabledDashboards: {}, // key = dashboard id - value = list of processes where the processes first station is the same as the dashboard's station\n    finishEnabledDashboards: {}, // key = dashboard id - value = list of processes where the processes first station is the same as the dashboard's station\n\n    error: {},\n    pending: false,\n\n    dashboardOpen: false,\n};\n\nexport default function dashboardsReducer(state = defaultState, action) {\n    let dashboardsCopy = {}\n\n    switch (action.type) {\n\n        case SET + DASHBOARD + KICK_OFF_ENABLED: {\n            const {\n                dashboardId,\n                kickOffEnabled\n            } = action.payload\n\n            return {\n                ...state,\n                kickOffEnabledDashboards: {...state.kickOffEnabledDashboards, [dashboardId]: kickOffEnabled},\n            }\n        }\n\n\n        case SET + DASHBOARD + FINISH_ENABLED: {\n            const {\n                dashboardId,\n                finishEnabled\n            } = action.payload\n\n            return {\n                ...state,\n                finishEnabledDashboards: {...state.finishEnabledDashboards, [dashboardId]: finishEnabled},\n            }\n        }\n\n\n\n        case DASHBOARD_OPEN:\n            return {\n                ...state,\n                dashboardOpen: action.payload\n            }\n\n        // ======================================== //\n        //                                          //\n        //              Get Dashboards              //\n        //                                          //\n        // ======================================== //\n        case GET_DASHBOARDS:\n            break;\n\n        case GET_DASHBOARDS_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        case GET_DASHBOARDS_SUCCESS:\n            dashboardsCopy = deepCopy(action.payload)\n            return {\n                ...state,\n                dashboards: action.payload,\n                pending: false\n            }\n\n        case GET_DASHBOARDS_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        // ======================================== //\n        //                                          //\n        //             Post Dashboards               //\n        //                                          //\n        // ======================================== //\n\n        case POST_DASHBOARD:\n            break;\n\n        case POST_DASHBOARD_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        case POST_DASHBOARD_SUCCESS:\n            return {\n                ...state,\n                dashboards: {...state.dashboards, [action.payload._id.$oid]: action.payload},\n                pending: false,\n\n            }\n\n        case POST_DASHBOARD_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        // ======================================== //\n        //                                          //\n        //             Put Dashboards                //\n        //                                          //\n        // ======================================== //\n\n        case PUT_DASHBOARD:\n            break;\n\n        case PUT_DASHBOARD_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        case PUT_DASHBOARD_SUCCESS:\n\n            return {\n                ...state,\n                dashboards: {...state.dashboards, [action.payload._id.$oid]: action.payload},\n            }\n\n        case PUT_DASHBOARD_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case DELETE_DASHBOARD:\n            break;\n\n        case DELETE_DASHBOARD_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        case DELETE_DASHBOARD_SUCCESS:\n            dashboardsCopy = deepCopy(state.dashboards)\n\n            delete dashboardsCopy[action.payload]\n\n            return {\n                ...state,\n                dashboards: dashboardsCopy\n            }\n\n        case DELETE_DASHBOARD_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n\n        default:\n            return state;\n    }\n}\n","import {\n  CLEAR_ERROR\n} from '../types/error_types';\nimport { clone_object } from '../../methods/utils/utils';\n\nconst defaultState = {\n\n};\n\nexport default function errorReducer(state = defaultState, action) {\n\n  const { type, payload } = action;\n  const matches = /(.*)_(STARTED|FAILURE)/.exec(type);\n\n  if(type == CLEAR_ERROR) {\n    console.log('clearing error')\n    var stateClone = clone_object(state);\n    //delete stateClone[]\n    return {\n      ...state,\n      // Store errorMessage\n      // e.g. stores errorMessage when receiving GET_TODOS_FAILURE\n      //      else clear errorMessage when receiving GET_TODOS_REQUEST\n      [payload]: '',\n    };\n  }\n\n  // not a *_REQUEST / *_FAILURE actions, so we ignore them\n  if (!matches) return state;\n\n  const [, requestName, requestState] = matches;\n  //console.log('errorReducer matches', matches)\n  //console.log('errorReducer requestName', requestName)\n  //console.log('errorReducer requestState', requestState)\n\n\n  return {\n    ...state,\n    // Store errorMessage\n    // e.g. stores errorMessage when receiving GET_TODOS_FAILURE\n    //      else clear errorMessage when receiving GET_TODOS_REQUEST\n    [requestName]: requestState === 'FAILURE' ? payload : '',\n  };\n};\n","import {\n    GET_STATUS,\n    GET_STATUS_STARTED,\n    GET_STATUS_SUCCESS,\n    GET_STATUS_FAILURE,\n\n    POST_STATUS,\n    POST_STATUS_STARTED,\n    POST_STATUS_SUCCESS,\n    POST_STATUS_FAILURE,\n} from '../types/status_types';\n\nimport { clone_object } from '../../methods/utils/utils';\n\nconst defaultState = {\n    status: {},\n    pending: false,\n    hilTimer: String.fromCharCode(160),\n\n};\n\nexport default function statusReducer(state = defaultState, action) {\n\n    switch (action.type) {\n\n        // get\n        // ***************\n        case GET_STATUS_SUCCESS:\n            return Object.assign({}, state, {\n                status: action.payload,\n                pending: false\n            });\n\n        case GET_STATUS_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case GET_STATUS_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n        // ~~~~~~~~~~~~~~~\n\n        // post\n        // ***************\n        case POST_STATUS_SUCCESS:\n            return Object.assign({}, state, {\n                pending: false,\n                status: { ...state.status, ...action.payload },\n            });\n\n        case POST_STATUS_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case POST_STATUS_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n        // ~~~~~~~~~~~~~~~\n\n        default:\n            return state\n    }\n}\n","import {\n    GET_TASK_QUEUE,\n    TASK_QUEUE,\n    TASK_QUEUE_ALL,\n    TASK_QUEUE_ITEM,\n    GET_TASK_QUEUE_STARTED,\n    GET_TASK_QUEUE_SUCCESS,\n    GET_TASK_QUEUE_FAILURE,\n\n    GET_TASK_QUEUE_ITEM,\n    GET_TASK_QUEUE_ITEM_STARTED,\n    GET_TASK_QUEUE_ITEM_SUCCESS,\n    GET_TASK_QUEUE_ITEM_FAILURE,\n\n    POST_TASK_QUEUE,\n    POST_TASK_QUEUE_STARTED,\n    POST_TASK_QUEUE_SUCCESS,\n    POST_TASK_QUEUE_FAILURE,\n\n    PUT_TASK_QUEUE,\n    PUT_TASK_QUEUE_STARTED,\n    PUT_TASK_QUEUE_SUCCESS,\n    PUT_TASK_QUEUE_FAILURE,\n\n    DELETE_TASK_QUEUE,\n    DELETE_TASK_QUEUE_STARTED,\n    DELETE_TASK_QUEUE_SUCCESS,\n    DELETE_TASK_QUEUE_FAILURE,\n\n    TASK_QUEUE_OPEN,\n    INCREMENT_GET_DATA_FAILURE_COUNT\n} from '../types/task_queue_types';\n\nimport {\n    GET_,\n    POST_,\n    DELETE_,\n    PUT_,\n\n    _STARTED,\n    _SUCCESS,\n    _FAILURE,\n} from '../types/api_types';\n\nimport { clone_object, deepCopy } from '../../methods/utils/utils';\n\nconst defaultState = {\n    taskQueue: {},\n    pending: false,\n    error: '',\n    taskQueueItemClicked: '',\n    hilTimers: {},\n    hilResponse: '',\n    activeHilDashboards: {},\n    localHumanTask: null,\n    taskQueueOpen: false,\n    getFailureCount: 1\n};\n\nexport default function taskQueueReducer(state = defaultState, action) {\n    let taskQueue = {}\n\n    switch (action.type) {\n\n        /**\n         * HILs?\n         */\n        case 'TASK_QUEUE_ITEM_CLICKED':\n            return {\n                ...state,\n                taskQueueItemClicked: action.payload\n            }\n\n        case 'HIL_TIMERS':\n            return {\n                ...state,\n                hilTimers: action.payload,\n            }\n\n        // Used for immediate HIL response input\n        case 'HIL_RESPONSE':\n            return {\n                ...state,\n                hilResponse: action.payload,\n            }\n\n        // Used for when a human task is clicked, should only show dashboard on the clicked tablet\n        case 'LOCAL_HUMAN_TASK':\n            return {\n                ...state,\n                localHumanTask: action.payload,\n            }\n\n        // Used to set first in, first out dashboard HILs\n        // Not 100% tested, but in theory should work\n        case 'ACTIVE_HIL_DASHBOARDS':\n            return {\n                ...state,\n                activeHilDashboards: action.payload,\n            }\n\n\n        // get\n        // ***************\n        case GET_TASK_QUEUE_SUCCESS:\n            if (action.payload === undefined) {\n                action.payload = {}\n            }\n            return Object.assign({}, state, {\n                taskQueue: action.payload,\n                pending: false\n            });\n\n        case GET_TASK_QUEUE_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case GET_TASK_QUEUE_STARTED:\n\n            return {\n                ...state,\n                pending: true,\n            }\n        // ~~~~~~~~~~~~~~~\n\n        // post\n        // ***************\n        case POST_TASK_QUEUE_SUCCESS:\n            return {\n                ...state,\n                taskQueue: {\n                    ...state.taskQueue,\n                    [action.payload.createdTaskQueueItem._id]: action.payload.createdTaskQueueItem\n                },\n                error: '',\n                pending: false,\n            }\n\n        case POST_TASK_QUEUE_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case POST_TASK_QUEUE_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n        // ~~~~~~~~~~~~~~~\n\n        // put\n        // ***************\n        case PUT_TASK_QUEUE_SUCCESS:\n\n            const updatedTaskQ = deepCopy({\n                ...action.payload.item,\n                _id: { $oid: action.payload.ID }\n\n            })\n\n            let forceUpdate = {}\n\n            forceUpdate = Object.assign(forceUpdate, updatedTaskQ)\n\n            return {\n                ...state,\n                taskQueue: {\n                    ...state.taskQueue,\n                    [action.payload.ID]: forceUpdate,\n                },\n                error: '',\n                pending: false,\n            }\n\n        case PUT_TASK_QUEUE_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case PUT_TASK_QUEUE_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n        // ~~~~~~~~~~~~~~~\n\n        // delete\n        // ***************\n        case DELETE_ + TASK_QUEUE_ALL + _SUCCESS:\n            return Object.assign({}, state, {\n                taskQueue: {},\n                pending: false\n            });\n\n        case DELETE_ + TASK_QUEUE_ALL + _FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case DELETE_ + TASK_QUEUE_ALL + _STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n        // ~~~~~~~~~~~~~~~\n\n        // delete\n        // ***************\n        case DELETE_ + TASK_QUEUE_ITEM + _SUCCESS:\n            taskQueue = clone_object(state.taskQueue);\n            delete taskQueue[action.payload.id];\n\n            return Object.assign({}, state, {\n                taskQueue: { ...taskQueue },\n                pending: false\n            });\n\n        case DELETE_ + TASK_QUEUE_ITEM + _FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case DELETE_ + TASK_QUEUE_ITEM + _STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        case TASK_QUEUE_OPEN:\n            return {\n                ...state,\n                taskQueueOpen: action.payload,\n            }\n\n        case INCREMENT_GET_DATA_FAILURE_COUNT:\n            return {\n                ...state,\n                getFailureCount: state.getFailureCount + 1,\n            }\n        // ~~~~~~~~~~~~~~~\n\n        default:\n            return state\n    }\n}\n","import { ADD_TASKS, ADD_SCHEDULES, DELETE_SCHEDULES } from '../types/tasks_types';\n\nimport {\n  ON_BLUR,\n  ON_FOCUS\n} from '../types/keyboard_types';\n\nimport { clone_object } from '../../methods/utils/utils';\n\nconst defaultState = {\n\n  target: null,\n  focused: false,\n  showKeyboard: false\n};\n\nexport default function keyboardReducer(state = defaultState, action) {\n  var schedules = {}\n\n  switch (action.type) {\n\n    case ON_FOCUS:\n      return  Object.assign({}, state, {\n        target: action.target,\n        focused: true,\n        showKeyboard: true\n      });\n\n      case ON_BLUR:\n        return  Object.assign({}, state, {\n          target: null,\n          focused: false,\n          showKeyboard: false\n        });\n\n\n\n    default:\n      return state\n  }\n}\n","import {\n    GET_TASKS,\n    GET_TASKS_STARTED,\n    GET_TASKS_SUCCESS,\n    GET_TASKS_FAILURE,\n\n    GET_TASK,\n    GET_TASK_STARTED,\n    GET_TASK_SUCCESS,\n    GET_TASK_FAILURE,\n\n    POST_TASK,\n    POST_TASK_STARTED,\n    POST_TASK_SUCCESS,\n    POST_TASK_FAILURE,\n\n    PUT_TASK,\n    PUT_TASK_STARTED,\n    PUT_TASK_SUCCESS,\n    PUT_TASK_FAILURE,\n\n    DELETE_TASK,\n    DELETE_TASK_STARTED,\n    DELETE_TASK_SUCCESS,\n    DELETE_TASK_FAILURE,\n\n    ADD_TASK,\n    SET_TASKS,\n    UPDATE_TASK,\n    UPDATE_TASKS,\n    REMOVE_TASK,\n    SET_TASK_ATTRIBUTES,\n    VALIDATE_TASK,\n    SELECT_TASK,\n    SET_SELECTED_TASK,\n    DESELECT_TASK,\n    EDITING_TASK, REMOVE_TASKS,\n\n} from '../types/tasks_types'\n\nimport { deepCopy } from '../../methods/utils/utils';\nimport {isObject} from \"../../methods/utils/object_utils\";\n\n\nconst defaultState = {\n    tasks: {},\n    selectedTask: null,\n\n    error: {},\n    pending: false\n};\n\nexport default function tasksReducer(state = defaultState, action) {\n    let index = ''\n    let taskID = ''\n    let tasksCopy = {};\n\n    switch (action.type) {\n\n        // ======================================== //\n        //                                          //\n        //              Get Tasks               //\n        //                                          //\n        // ======================================== //\n        case GET_TASKS:\n            break;\n\n        case GET_TASKS_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        case GET_TASKS_SUCCESS:\n            tasksCopy = deepCopy(action.payload)\n            return {\n                ...state,\n                tasks: action.payload,\n                pending: false\n            }\n\n        case GET_TASKS_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        // ======================================== //\n        //                                          //\n        //             Post Tasks               //\n        //                                          //\n        // ======================================== //\n\n        case POST_TASK:\n            break;\n\n        case POST_TASK_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        case POST_TASK_SUCCESS:\n            const ID = deepCopy(action.payload._id)\n            return {\n                ...state,\n                tasks: {\n                    ...state.tasks,\n                    [ID]: action.payload,\n                },\n                pending: false,\n\n            }\n\n        case POST_TASK_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        // ======================================== //\n        //                                          //\n        //             Put Tasks                //\n        //                                          //\n        // ======================================== //\n\n        case PUT_TASK:\n            break;\n\n        case PUT_TASK_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        case PUT_TASK_SUCCESS:\n            return {\n                ...state,\n                tasks: {\n                    ...state.tasks,\n                    [action.payload._id]: action.payload,\n                }\n            }\n\n        case PUT_TASK_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case DELETE_TASK:\n            break;\n\n        case DELETE_TASK_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        case DELETE_TASK_SUCCESS:\n            tasksCopy = deepCopy(state.tasks)\n            delete tasksCopy[action.payload]\n\n            return {\n                ...state,\n                tasks: tasksCopy\n            }\n\n        case DELETE_TASK_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n\n\n        // ======================================== //\n        //                                          //\n        //             Tasks Utils              //\n        //                                          //\n        // ======================================== //\n\n        case ADD_TASK:\n            tasksCopy = deepCopy(state.tasks)\n            tasksCopy[action.payload.task._id] = action.payload.task\n            return {\n                ...state,\n                tasks: tasksCopy\n            }\n\n        case SET_TASKS:\n            return {\n                ...state,\n                tasks: {\n                    ...state.tasks,\n                    ...action.payload\n                }\n            }\n\n        case UPDATE_TASK:\n            tasksCopy = deepCopy(state.tasks)\n            tasksCopy[action.payload.task._id] = action.payload.task\n\n            if (state.selectedTask !== null) {\n                return {\n                    ...state,\n                    tasks: tasksCopy,\n                    selectedTask: tasksCopy[state.selectedTask._id]\n                }\n            } else {\n                return {\n                    ...state,\n                    tasks: tasksCopy\n                }\n            }\n\n        case UPDATE_TASKS:\n            tasksCopy = deepCopy(action.payload.tasks)\n\n            if (state.selectedTask !== null) {\n                return {\n                    ...state,\n                    tasks: deepCopy(action.payload.tasks),\n                    selectedTask: deepCopy(action.payload.tasks[state.selectedTask._id])\n                }\n            } else {\n                return {\n                    ...state,\n                    tasks: deepCopy(action.payload.tasks)\n                }\n            }\n\n        case REMOVE_TASK: {\n            const {\n                [action.payload.id]: taskToRemove,  // extract task to remove\n                ...remainingTasks                   // all other tasks are left here\n            } = state.tasks\n\n            return {\n                ...state,\n                tasks: {...remainingTasks},         // keep all tasks but the one to remove\n            }\n        }\n\n        case REMOVE_TASKS: {\n\n\n            let temp = {...state.tasks}\n\n            action.payload.ids.forEach((currId) => {\n                const {\n                    [currId]: removed,\n                    ...remainingTasks\n                } = temp\n\n                temp = remainingTasks\n            })\n\n            return {\n                ...state,\n                tasks: {...temp},         // keep all tasks but the one to remove\n            }\n        }\n\n\n        case SET_TASK_ATTRIBUTES: {\n                var newState\n\n                if (isObject(state.selectedTask) && state.selectedTask._id === action.payload.id) {\n                    newState = {\n                        ...state,\n                        tasks: state.tasks[action.payload.id] ?\n                            {\n                                ...state.tasks,\n                                [action.payload.id]: {...state.tasks[action.payload.id], ...action.payload.attr},\n                            }\n                        :\n                            {\n                                ...state.tasks\n                            },\n                        selectedTask: {\n                            ...state.selectedTask,\n                            ...action.payload.attr\n                        }\n                    }\n                } else {\n                    newState = {\n                        ...state,\n                        tasks: state.tasks[action.payload.id] ? {\n                                ...state.tasks,\n                                [action.payload.id]: {...state.tasks[action.payload.id], ...action.payload.attr},\n                            }\n                        :\n                            {\n                                ...state.tasks\n                            }\n                    }\n                }\n\n                return newState\n\n            }\n\n\n        case SELECT_TASK:\n            return {\n                ...state,\n                selectedTask: state.tasks[action.payload.id]\n            }\n\n        case SET_SELECTED_TASK:\n            return {\n                ...state,\n                selectedTask: action.payload.task\n            }\n\n        case DESELECT_TASK:\n            return {\n                ...state,\n                selectedTask: null,\n            }\n\n            case EDITING_TASK:\n                return {\n                    ...state,\n                    editingTask: action.payload,\n                }\n        default:\n            return state;\n    }\n}\n","let GET_SOUNDS = 'GET_SOUNDS';\nlet GET_SOUNDS_STARTED = 'GET_SOUNDS_STARTED';\nlet GET_SOUNDS_SUCCESS = 'GET_SOUNDS_SUCCESS';\nlet GET_SOUNDS_FAILURE = 'GET_SOUNDS_FAILURE';\n\nconst defaultState = {\n    sounds: {},\n    error: {},\n    pending: false\n};\n\nexport default function soundsReducer(state = defaultState, action) {\n\n    switch (action.type) {\n        case GET_SOUNDS:\n            break;\n\n        case GET_SOUNDS_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        case GET_SOUNDS_SUCCESS:\n            return {\n                ...state,\n                sounds: action.payload,\n                pending: false\n            }\n\n        case GET_SOUNDS_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n\n        default:\n            return state;\n            break;\n\n    }\n}\n","import {\n    GET_SETTINGS,\n    GET_SETTINGS_STARTED,\n    GET_SETTINGS_SUCCESS,\n    GET_SETTINGS_FAILURE,\n\n    POST_SETTINGS,\n    POST_SETTINGS_STARTED,\n    POST_SETTINGS_SUCCESS,\n    POST_SETTINGS_FAILURE,\n    DEVICE_ENABLED,\n\n  } from '../types/setting_types'\n\nconst defaultState = {\n    settings: {\n        loggers: {\n            Dashboards: false,\n            Scheduler: false,\n            Tasks: false,\n            Objects: false,\n            ModelViewer: false,\n            Api: false,\n            ReduxLogger: false,\n            All: false,\n        }\n    },\n\n    error: {},\n    pending: false,\n    enableLogger: '',\n    muteReducer: false,\n    deviceEnabled: false,\n    apiSim: false,\n}\n\n// import { deepCoppy } from '../../methods/utils/utils'\n\nexport const mirUrl = (state = defaultState) => {\n    return state.settings\n}\n\nconst settingsReducer = (state = defaultState, action) => {\n    switch(action.type) {\n\n        case 'apiSim':\n            return {\n                ...state,\n                apiSim: action.payload\n            }\n\n        case DEVICE_ENABLED:\n            return {\n                ...state,\n                deviceEnabled: action.payload,\n            };\n\n    // ======================================== //\n    //                                          //\n    //              Get SETTINGS                //\n    //                                          //\n    // ======================================== //\n        case GET_SETTINGS:\n            break;\n\n        case GET_SETTINGS_SUCCESS:\n            return  {\n                ...state,\n                settings: {\n                  ...state.settings,\n                  ...action.payload,\n                  loggers: {...state.settings.loggers, ...action.payload.loggers},\n                },\n                pending: false,\n            }\n\n        case GET_SETTINGS_FAILURE:\n            return  Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case GET_SETTINGS_STARTED:\n            return  Object.assign({}, state, {\n                pending: true\n            });\n\n    // ======================================== //\n    //                                          //\n    //             Post SETTINGS                //\n    //                                          //\n    // ======================================== //\n        case POST_SETTINGS:\n            break;\n\n        case POST_SETTINGS_SUCCESS:\n            return{\n                ...state,\n                settings: {...state.settings, ...action.payload},\n                pending: false,\n\n            }\n\n        case POST_SETTINGS_FAILURE:\n        return Object.assign({}, state, {\n            error: action.payload,\n            pending: false\n        });\n\n        case POST_SETTINGS_STARTED:\n        return  Object.assign({}, state, {\n            pending: true\n        });\n        // ~~~~~~~~~~~~~~~\n    }\n    return state\n}\n\nexport default settingsReducer\n","import {\n\n  GET_MODELS,\n  GET_MODELS_STARTED,\n  GET_MODELS_SUCCESS,\n  GET_MODELS_FAILURE,\n\n} from '../types/models_types';\n\nconst defaultState = {\n  models: [],\n  error: {},\n  pending: false\n};\n\nexport default function modelsReducer(state = defaultState, action) {\n\n    switch (action.type) {\n        case GET_MODELS:\n            break;\n\n        case GET_MODELS_STARTED:\n            return  Object.assign({}, state, {\n                pending: true\n            });\n\n        case GET_MODELS_SUCCESS:\n            return  Object.assign({}, state, {\n                models: [...action.payload],\n                pending: false\n            });\n\n        case GET_MODELS_FAILURE:\n            return  Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        default:\n            return state;\n            break;\n\n    }\n}\n","export const GET_SKILL_TEMPLATES = 'GET_SKILL_TEMPLATES'\nexport const GET_SKILL_TEMPLATES_STARTED = 'GET_SKILL_TEMPLATES_STARTED'\nexport const GET_SKILL_TEMPLATES_SUCCESS = 'GET_SKILL_TEMPLATES_SUCCESS'\nexport const GET_SKILL_TEMPLATES_FAILURE = 'GET_SKILL_TEMPLATES_FAILURE'","import {\n    GET_SKILL_TEMPLATES,\n    GET_SKILL_TEMPLATES_STARTED,\n    GET_SKILL_TEMPLATES_SUCCESS,\n    GET_SKILL_TEMPLATES_FAILURE,\n} from '../types/skill_templates_types'\n\nimport { deepCopy } from '../../methods/utils/utils.js'\n\n\nconst defaultState = {\n    skillTemplates: [],\n    error: {},\n    pending: false,\n    returnedSkillTemplates : [],\n  };\n  \n  let index;\n  \n  export default function skillTemplatesReducer(state = defaultState, action) {\n      // let skillsClone = state.skills.map(skill => deepCopy(skill));\n        switch (action.type) {\n  \n          case 'SKILL_TEMPLATES_RETURNED':\n              return {\n                  ...state,\n                  returnedSkillTemplates: action.payload\n              }\n  \n          case GET_SKILL_TEMPLATES:\n              break;\n  \n          case GET_SKILL_TEMPLATES_STARTED:\n              return  Object.assign({}, state, {\n                  pending: true\n              });\n  \n          case GET_SKILL_TEMPLATES_SUCCESS:\n              return  {\n                ...state,\n                skillTemplates: action.payload\n              };\n  \n          case GET_SKILL_TEMPLATES_FAILURE:\n              return  Object.assign({}, state, {\n                  error: action.payload,\n                  pending: false\n              });\n  \n          default:\n              return state;\n              break;\n  \n      }\n  }\n  ","export const GET_POSES = 'GET_POSES';\nexport const GET_POSES_STARTED = 'GET_POSES_STARTED';\nexport const GET_POSES_SUCCESS = 'GET_POSES_SUCCESS';\nexport const GET_POSES_FAILURE = 'GET_POSES_FAILURE';\n\nexport const GET_POSE = 'GET_POSE';\nexport const GET_POSE_STARTED = 'GET_POSE_STARTED';\nexport const GET_POSE_SUCCESS = 'GET_POSE_SUCCESS';\nexport const GET_POSE_FAILURE = 'GET_POSE_FAILURE';\n","import {\n  GET_POSES,\n  GET_POSES_STARTED,\n  GET_POSES_SUCCESS,\n  GET_POSES_FAILURE,\n\n  GET_POSE,\n  GET_POSE_STARTED,\n  GET_POSE_SUCCESS,\n  GET_POSE_FAILURE,\n\n} from '../types/poses_types';\n\nimport log from '../../logger.js';\n\nconst logger = log.getLogger(\"Poses\", \"Poses\");\n\nconst defaultState = {\n    poses: {},\n    error: {},\n    pending: false\n};\n\nexport default function posesReducer(state = defaultState, action) {\n    switch(action.type) {\n\n        case GET_POSES_SUCCESS:\n            return  Object.assign({}, state, {\n              poses: {...action.payload},\n              pending: false\n            });\n\n        case GET_POSES_FAILURE:\n            return  Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case GET_POSES_STARTED:\n            return  Object.assign({}, state, {\n                pending: true\n            });\n\n        default:\n            return state\n\n    }\n}\n","export function getActionName(actionType) {\n if (typeof actionType !== 'string') {\n   return null;\n }\n\n return actionType\n   .split(\"_\")\n   .slice(0, -1)\n   .join(\"_\");\n}\n","import {\n    STARTED,\n    SUCCESS,\n    FAILURE\n} from '../types/suffixes';\n\n\nimport { getActionName } from \"../../methods/utils/redux_utils\";\n\nconst requestStatusReducer = (state = {}, action) => {\n\n    const { type } = action;\n    const actionName = getActionName(type);\n\n    if (!actionName) {\n        return {\n             ...state,\n        }\n    }\n\n    if (type.endsWith(STARTED)) {\n        return {\n             ...state,\n             [actionName]: {\n                 pending: true\n             }\n        };\n    }\n\n    if (type.endsWith(SUCCESS) || type.endsWith(FAILURE)) {\n        return {\n             ...state,\n             [actionName]: {\n                 pending: false\n             }\n        };\n    }\n\n    return {\n        ...state\n    };\n};\n\nexport default requestStatusReducer;\n","import {\n    GET_MAPS,\n    GET_MAPS_STARTED,\n    GET_MAPS_SUCCESS,\n    GET_MAPS_FAILURE,\n\n    GET_MAP,\n    GET_MAP_STARTED,\n    GET_MAP_SUCCESS,\n    GET_MAP_FAILURE,\n\n    SET_MAP_ATTRIBUTES,\n    SET_CURRENT_MAP,\n} from '../types/map_types'\n\nimport { object } from 'yup';\nimport { deepCopy } from '../../methods/utils/utils'\n\n\nconst defaultState = {\n    maps: [],\n    currentMap: {},\n\n    error: {},\n    pending: false,\n    reduxZoom: 2\n};\n\nexport default function mapReducer(state=defaultState, action) {\n    let currentMapCopy = {}\n\n    switch (action.type) {\n\n        // ======================================== //\n        //                                          //\n        //              Get All Maps                //\n        //                                          //\n        // ======================================== //\n\n        case GET_MAPS:\n            break;\n\n        case GET_MAPS_STARTED:\n            return  Object.assign({}, state, {\n                pending: true\n            });\n\n        case GET_MAPS_SUCCESS:\n            return  {\n                ...state,\n                maps: action.payload,\n                pending: false\n            }\n\n        case GET_MAPS_FAILURE:\n            return  Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        // ======================================== //\n        //                                          //\n        //            Get Map Details               //\n        //                                          //\n        // ======================================== //\n\n        case GET_MAP:\n            break;\n\n        case GET_MAP_STARTED:\n            return  Object.assign({}, state, {\n                pending: true\n            });\n\n        case GET_MAP_SUCCESS:\n            currentMapCopy = deepCopy(action.payload)\n            currentMapCopy.d3 = {\n                scale: 1,\n                translate: [0,0],\n                boundingClientHeight: null\n            }\n\n            return{\n                ...state,\n                currentMap: currentMapCopy,\n                pending: false\n            }\n\n        case GET_MAP_FAILURE:\n            return  Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        // ======================================== //\n        //                                          //\n        //            Map Utility Funcs             //\n        //                                          //\n        // ======================================== //\n\n        case SET_MAP_ATTRIBUTES:\n            currentMapCopy = deepCopy(state.currentMap)\n            Object.assign(currentMapCopy, {...action.payload.attr})\n\n            return {\n                ...state,\n                currentMap: currentMapCopy\n            }\n\n        case SET_CURRENT_MAP:\n            return {\n                ...state,\n                currentMap: action.payload\n            }\n\n        default:\n            return state;\n            break;\n    }\n}\n","import {\n    SET_MODE,\n    SET_ACTION,\n    SET_WIDTH,\n    SET_OPEN,\n} from '../types/sidebar_types'\n\n\nconst defaultState = {\n    mode: 'locations',\n    action: null,\n    width: 450,\n    open: false,\n};\n\nexport default function sidebarReducer(state = defaultState, action) {\n\n    switch (action.type) {\n\n        case SET_MODE:\n            return {\n                ...state,\n                mode: action.payload.mode\n            }\n\n        case SET_ACTION:\n            return {\n                ...state,\n                action: action.payload.action\n            }\n\n        case SET_WIDTH:\n            return {\n                ...state,\n                width: action.payload\n            }\n\n        case SET_OPEN:\n            return {\n                ...state,\n                open: action.payload\n            }\n\n\n\n        default:\n            return state;\n    }\n}\n","import {\n  WIDGET_PAGE_LOADED,\n  WIDGET_XY_COORDINATES,\n  WIDGET_LOADED,\n  HOVER_STATION_INFO,\n\n} from '../types/widget_types'\n\n\n  const defaultState = {\n    widgetPageLoaded: false,\n    widgetXYCoordinates: {x: '', y: ''},\n    widgetLoaded: false,\n    hoverStationInfo: null,\n\n};\n\nconst widgetReducer = (state = defaultState, action) => {\n\n\n    switch (action.type) {\n        case WIDGET_PAGE_LOADED:\n            return {\n                ...state,\n                widgetPageLoaded: action.payload\n            }\n\n        case WIDGET_XY_COORDINATES:\n            return {\n                ...state,\n                widgetXYCoordinates: action.payload\n            }\n\n          case WIDGET_LOADED:\n              return {\n                  ...state,\n                  widgetLoaded: action.payload,\n              }\n\n          case HOVER_STATION_INFO:\n              return {\n                  ...state,\n                  hoverStationInfo: action.payload.info,\n              }\n\n        default:\n            return state\n    }\n}\n\nexport default widgetReducer\n","import {\n    GET_DEVICES,\n    GET_DEVICES_STARTED,\n    GET_DEVICES_SUCCESS,\n    GET_DEVICES_FAILURE,\n\n    POST_DEVICES,\n    POST_DEVICES_STARTED,\n    POST_DEVICES_SUCCESS,\n    POST_DEVICES_FAILURE,\n\n    PUT_DEVICES,\n    PUT_DEVICES_STARTED,\n    PUT_DEVICES_SUCCESS,\n    PUT_DEVICES_FAILURE,\n\n    DELETE_DEVICES,\n    DELETE_DEVICES_STARTED,\n    DELETE_DEVICES_SUCCESS,\n    DELETE_DEVICES_FAILURE,\n} from '../types/devices_types'\n\nimport { deepCopy, isEquivalent } from '../../methods/utils/utils';\nimport { convertRealToD3 } from '../../methods/utils/map_utils'\n\nconst defaultState = {\n    devices: {},\n    d3: null,\n    selectedDevice: null,\n}\n\nconst devicesReducer = (state = defaultState, action) => {\n    let devicesClone = {}\n    let currentDevice = ''\n    let updatedDeviceIndex = ''\n    let index = ''\n\n    // ======================================== //\n    //                                          //\n    //         DEVICE UTILITY FUNCTIONS         //\n    //                                          //\n    // ======================================== //\n    const setDevices = (devices) => {\n\n        if(Object.keys(devices).length === 0) return\n\n        // What this does is update the devices X and Y positions based on the values in the backend.\n        // When the RMStudio initially loads, the devices X and Y is calculated in the map_view container, but those values aren't put to the backend.\n        // When a get call is made, the state.devices is overwritten with the backend data (data without X and Y coords). This removes the device from the map view, which we dont want.\n        // This function takes care of that and adds new X and Y coordinates on every get call. state.d3 is added in mapview\n        if (!isEquivalent(devices, state.devices)) {\n            devicesClone = deepCopy(devices)\n            // devicesClone = devices\n\n            Object.keys(devicesClone).map((key, ind) => {\n                const updatedDevice = devices[key]\n                if (updatedDevice.position !== undefined) {\n\n                    // On page load, the d3 state will be null. This is here so that devices wont be undifened on page load\n                    if (state.d3 === null) {\n                        devicesClone[key] = {\n                            ...devicesClone[key],\n                            position: {\n                                ...devicesClone[key].position,\n                                x: updatedDevice.position.pos_x,\n                                y: updatedDevice.position.pos_y,\n                            }\n                        }\n                    }\n\n                    else {\n                        let [x, y] = convertRealToD3([updatedDevice.position.pos_x, updatedDevice.position.pos_y], state.d3)\n                        devicesClone[key] = {\n                            ...devicesClone[key],\n                            position: {\n                                ...devicesClone[key].position,\n                                x: x,\n                                y: y,\n                            }\n                        }\n                    }\n                }\n                return devicesClone\n            })\n        } else {\n            return state\n        }\n        return {\n            ...state,\n            devices: { ...devicesClone },\n            pending: false,\n        }\n    }\n\n\n    switch (action.type) {\n\n        // ======================================== //\n        //                                          //\n        //              Get Devices                 //\n        //                                          //\n        // ======================================== //\n        case GET_DEVICES:\n            break;\n\n        case GET_DEVICES_SUCCESS:\n\n            // Fix for when action.payload is undefined\n            let devices = !!action.payload ? action.payload : {}\n            return setDevices(devices)\n\n        case GET_DEVICES_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case GET_DEVICES_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        // ======================================== //\n        //                                          //\n        //             Post Devices                 //\n        //                                          //\n        // ======================================== //\n        case POST_DEVICES:\n            break;\n\n        case POST_DEVICES_SUCCESS:\n            devicesClone = deepCopy(state.devices)\n            devicesClone[action.payload._id.$oid] = action.payload\n\n            return {\n                ...state,\n                devices: devicesClone,\n                pending: false,\n            }\n\n\n        case POST_DEVICES_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case POST_DEVICES_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n        // ~~~~~~~~~~~~~~~\n\n        // ======================================== //\n        //                                          //\n        //              Put Devices                 //\n        //                                          //\n        // ======================================== //\n        case PUT_DEVICES:\n            break;\n\n        case PUT_DEVICES_SUCCESS:\n            // Find the corresponding device and replace it with the new one\n            currentDevice = action.payload\n\n            devicesClone = deepCopy(state.devices)\n\n            devicesClone[currentDevice._id] = currentDevice\n\n            return setDevices(devicesClone)\n\n        case PUT_DEVICES_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case PUT_DEVICES_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n        // ~~~~~~~~~~~~~~~\n\n        // ======================================== //\n        //                                          //\n        //           Delete Devices                 //\n        //                                          //\n        // ======================================== //\n        case DELETE_DEVICES:\n            break;\n\n        case DELETE_DEVICES_SUCCESS:\n\n            devicesClone = deepCopy(state.devices)\n\n            delete devicesClone[action.payload]\n            return {\n                ...state,\n                devices: devicesClone\n            }\n\n        case DELETE_DEVICES_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case DELETE_DEVICES_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n\n        // ~~~~~~~~~~~~~~~\n\n        // ======================================== //\n        //                                          //\n        //             Utilities                    //\n        //                                          //\n        // ======================================== //\n        case 'UPDATE_DEVICES':\n            return {\n                ...state,\n                devices: deepCopy(action.payload.devices),\n                // devices: action.payload.devices,\n                d3: action.payload.d3,\n            }\n\n        case 'SET_SELECTED_DEVICE':\n            return {\n                ...state,\n                selectedDevice: action.payload\n\n            }\n\n        default:\n            return state\n\n\n\n\n    }\n}\n\nexport default devicesReducer\n","import {\n    GET_NOTIFICATIONS,\n    GET_NOTIFICATIONS_STARTED,\n    GET_NOTIFICATIONS_SUCCESS,\n    GET_NOTIFICATIONS_FAILURE,\n\n    GET_NOTIFICATION,\n    GET_NOTIFICATION_STARTED,\n    GET_NOTIFICATION_SUCCESS,\n    GET_NOTIFICATION_FAILURE,\n\n    POST_NOTIFICATION,\n    POST_NOTIFICATION_STARTED,\n    POST_NOTIFICATION_SUCCESS,\n    POST_NOTIFICATION_FAILURE,\n\n    PUT_NOTIFICATION,\n    PUT_NOTIFICATION_STARTED,\n    PUT_NOTIFICATION_SUCCESS,\n    PUT_NOTIFICATION_FAILURE,\n\n    DELETE_NOTIFICATION,\n    DELETE_NOTIFICATION_STARTED,\n    DELETE_NOTIFICATION_SUCCESS,\n    DELETE_NOTIFICATION_FAILURE,\n\n    ADD_NOTIFICATION,\n    UPDATE_NOTIFICATION,\n    UPDATE_NOTIFICATIONS,\n    TOGGLE_NOTIFICATION_TASK_QUEUE,\n    REMOVE_NOTIFICATION,\n    SET_NOTIFICATION_ATTRIBUTES,\n    VALIDATE_NOTIFICATION,\n    SELECT_NOTIFICATION,\n    SET_SELECTED_NOTIFICATION,\n    DESELECT_NOTIFICATION,\n} from '../types/notifications_types'\n\n\nconst defaultState = {\n    hiddenNotifications: {},\n    notifications: [\n        {\n            type: \"station_alert\",\n            label: \"Workstation 3\",\n            message: \"Takt time is 10s slower than normal\",\n            priority: \"warning\",\n            dateTime: new Date(2020, 7, 25, 11, 34)\n        },\n        {\n            type: \"device_alert\",\n            label: \"MiR 3\",\n            message: \"Battery low\",\n            priority: \"critical\",\n            dateTime: new Date(2020, 7, 24, 15, 12)\n        },\n        {\n            type: \"station_alert\",\n            label: \"Shipping\",\n            message: \"Station has denyed task request 'Finished Cartridges to Shipping'\",\n            priority: \"alert\",\n            dateTime: new Date(2020, 7, 22, 15, 54)\n        },\n        {\n            type: \"station_alert\",\n            label: \"Workstation 4\",\n            message: \"Takt time is 8s faster than normal\",\n            priority: \"alert\",\n            dateTime: new Date(2020, 7, 10, 16, 32)\n        }\n\n    ],\n\n    toggleNotificationTaskQueue: 'taskQueue'\n}\n\nconst notificationsReducer = (state = defaultState, action) => {\n    switch (action.type) {\n        case 'HIDDEN_NOTIFICATIONS':\n\n            // Need to assign to new object because React doesn't see the object change as a state change. \n            // This makes react think a state change is happening so the component rerenders\n            const newPayload = { ...action.payload }\n\n            return {\n                ...state,\n                hiddenNotifications: newPayload,\n            }\n\n        case TOGGLE_NOTIFICATION_TASK_QUEUE:\n            return {\n                ...state,\n                toggleNotificationTaskQueue: action.payload,\n            }\n\n        default:\n            return state\n    }\n}\n\nexport default notificationsReducer","import {\n    GET_EVENTS,\n    GET_EVENTS_STARTED,\n    GET_EVENTS_SUCCESS,\n    GET_EVENTS_FAILURE,\n\n    POST_EVENTS,\n    POST_EVENTS_STARTED,\n    POST_EVENTS_SUCCESS,\n    POST_EVENTS_FAILURE,\n\n    PUT_EVENTS,\n    PUT_EVENTS_STARTED,\n    PUT_EVENTS_SUCCESS,\n    PUT_EVENTS_FAILURE,\n\n    DELETE_EVENTS,\n    DELETE_EVENTS_STARTED,\n    DELETE_EVENTS_SUCCESS,\n    DELETE_EVENTS_FAILURE,\n} from '../types/events_types'\n\nimport { clone_object, deepCopy } from '../../methods/utils/utils';\n\nconst defaultState = {\n    events: {},\n}\n\nconst eventsReducer = (state = defaultState, action) => {\n    let eventsClone = {}\n    let currentEvent = ''\n    let updatedEventIndex = ''\n    let index = ''\n\n\n    switch (action.type) {\n\n        // ======================================== //\n        //                                          //\n        //              Get Events                 //\n        //                                          //\n        // ======================================== //\n        case GET_EVENTS:\n            break;\n\n        case GET_EVENTS_SUCCESS:\n\n\n            return {\n    \n                ...state,\n                events: { ...action.payload },\n                pending: false,\n            }\n\n\n        case GET_EVENTS_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case GET_EVENTS_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        // ======================================== //\n        //                                          //\n        //             Post Events                 //\n        //                                          //\n        // ======================================== //\n        case POST_EVENTS:\n            break;\n\n        case POST_EVENTS_SUCCESS:\n\n            eventsClone = deepCopy(state.events)\n\n            eventsClone[action.payload._id.$oid] = action.payload\n\n            return {\n                ...state,\n                events: eventsClone,\n                pending: false\n            }\n\n\n        case POST_EVENTS_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case POST_EVENTS_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n        // ~~~~~~~~~~~~~~~\n\n        // ======================================== //\n        //                                          //\n        //              Put Events              //\n        //                                          //\n        // ======================================== //\n        case PUT_EVENTS:\n            break;\n\n        case PUT_EVENTS_SUCCESS:\n            // Find the corresponding event and replace it with the new one\n            currentEvent = JSON.parse(action.payload)\n\n            eventsClone = deepCopy(state.events)\n\n            eventsClone[currentEvent._id.$oid] = currentEvent\n\n            return {\n                ...state,\n                events: { ...eventsClone }\n            }\n\n        case PUT_EVENTS_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case PUT_EVENTS_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n        // ~~~~~~~~~~~~~~~\n\n        // ======================================== //\n        //                                          //\n        //           Delete Events                 //\n        //                                          //\n        // ======================================== //\n        case DELETE_EVENTS:\n            break;\n\n        case DELETE_EVENTS_SUCCESS:\n\n            eventsClone = deepCopy(state.events)\n\n            delete eventsClone[action.payload]\n\n            return {\n                ...state,\n                events: eventsClone\n            }\n\n        case DELETE_EVENTS_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case DELETE_EVENTS_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n        // ~~~~~~~~~~~~~~~\n\n        // ======================================== //\n        //                                          //\n        //             Utilities                    //\n        //                                          //\n        // ======================================== //\n        case 'UPDATE_EVENTS':\n            return {\n                ...state,\n                events: deepCopy(action.payload.events)\n            }\n\n        default:\n            return state\n\n\n    }\n}\n\nexport default eventsReducer","import {\n    GET_REFRESH_TOKEN,\n    GET_REFRESH_TOKEN_STARTED,\n    GET_REFRESH_TOKEN_SUCCESS,\n    GET_REFRESH_TOKEN_FAILURE,\n\n\n    POST_REFRESH_TOKEN,\n    POST_REFRESH_TOKEN_STARTED,\n    POST_REFRESH_TOKEN_SUCCESS,\n    POST_REFRESH_TOKEN_FAILURE,\n\n} from '../types/authentication_types'\n\nconst defaultState = {\n\n    refreshToken: '',\n    cognitoUserSession: null,\n\n    error: {},\n    pending: false,\n\n    // Authenticated?\n    authenticated: false\n\n};\n\nexport default function authenticationReducer(state = defaultState, action) {\n\n    switch (action.type) {\n\n        case 'AUTHENTICATE_USER':\n            return{\n                ...state,\n                cognitoUserSession: action.payload,\n                authenticated: true\n            }\n\n        case 'POST_COGNITO_USER_SESSION':\n            return{\n                ...state,\n                cognitoUserSession: action.payload,\n                authenticated: true\n            }\n\n        // ======================================== //\n        //                                          //\n        //              Get Refresh Token           //\n        //                                          //\n        // ======================================== //\n        case GET_REFRESH_TOKEN:\n            break;\n\n        case GET_REFRESH_TOKEN_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        case GET_REFRESH_TOKEN_SUCCESS:\n            return {\n                ...state,\n                refreshToken: action.payload,\n                pending: false\n            }\n\n        case GET_REFRESH_TOKEN_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        // ======================================== //\n        //                                          //\n        //             Post Refresh Token           //\n        //                                          //\n        // ======================================== //\n\n        case POST_REFRESH_TOKEN:\n            break;\n\n        case POST_REFRESH_TOKEN_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        case POST_REFRESH_TOKEN_SUCCESS:\n\n            return {\n                ...state,\n                refreshToken: action.payload,\n                pending: false,\n\n            }\n\n        case POST_REFRESH_TOKEN_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n\n        default:\n            return state;\n\n    }\n}","import {\n    GET_PROCESSES,\n    GET_PROCESSES_STARTED,\n    GET_PROCESSES_SUCCESS,\n    GET_PROCESSES_FAILURE,\n\n    POST_PROCESSES,\n    POST_PROCESSES_STARTED,\n    POST_PROCESSES_SUCCESS,\n    POST_PROCESSES_FAILURE,\n\n    PUT_PROCESSES,\n    PUT_PROCESSES_STARTED,\n    PUT_PROCESSES_SUCCESS,\n    PUT_PROCESSES_FAILURE,\n\n    DELETE_PROCESSES,\n    DELETE_PROCESSES_STARTED,\n    DELETE_PROCESSES_SUCCESS,\n    DELETE_PROCESSES_FAILURE,\n    EDITING_PROCESS,\n} from '../types/processes_types'\n\nimport { deepCopy } from '../../methods/utils/utils';\n\nconst defaultState = {\n    // processes: {'qqq':{\n    //     id: 'qqq',\n    //     name: 'Fakey McFake Fake',\n    //     routes: [\n    //         \"5fa06a9dfacd1af9a74c1925\",\n    //         \"5fa06aa4facd1af9a74c1926\",\n    //         \"5fa06ac3facd1af9a74c1927\",\n    //     ],\n    // },},\n    processes: {},\n    selectedProcess: null,\n    fixingProcess: false,\n}\n\nconst processesReducer = (state = defaultState, action) => {\n    let processesClone = {}\n    let currentProcesse = ''\n    let updatedProcesseIndex = ''\n    let index = ''\n\n    switch (action.type) {\n\n        // ======================================== //\n        //                                          //\n        //              Get Processes               //\n        //                                          //\n        // ======================================== //\n        case GET_PROCESSES:\n            break;\n\n        case GET_PROCESSES_SUCCESS:\n            return {\n                ...state,\n                processes: action.payload,\n                pending: false,\n            }\n\n        case GET_PROCESSES_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case GET_PROCESSES_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n\n        // ======================================== //\n        //                                          //\n        //             Post Processes                 //\n        //                                          //\n        // ======================================== //\n        case POST_PROCESSES:\n            break;\n\n        case POST_PROCESSES_SUCCESS:\n            processesClone = deepCopy(state.processes)\n            processesClone[action.payload._id] = action.payload\n\n            return {\n                ...state,\n                processes: processesClone,\n                pending: false\n            }\n\n\n        case POST_PROCESSES_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case POST_PROCESSES_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n        // ~~~~~~~~~~~~~~~\n\n        // ======================================== //\n        //                                          //\n        //              Put Processes                 //\n        //                                          //\n        // ======================================== //\n        case PUT_PROCESSES:\n            break;\n\n        case PUT_PROCESSES_SUCCESS:\n            return {\n                ...state,\n                processes: {\n                    ...state.processes,\n                    [action.payload._id]: action.payload\n                },\n                pending: false\n            }\n\n        case PUT_PROCESSES_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case PUT_PROCESSES_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n        // ~~~~~~~~~~~~~~~\n\n        // ======================================== //\n        //                                          //\n        //           Delete Processes                 //\n        //                                          //\n        // ======================================== //\n        case DELETE_PROCESSES:\n            break;\n\n        case DELETE_PROCESSES_SUCCESS:\n\n            processesClone = deepCopy(state.processes)\n\n            delete processesClone[action.payload]\n            return {\n                ...state,\n                processes: processesClone\n            }\n\n        case DELETE_PROCESSES_FAILURE:\n            return Object.assign({}, state, {\n                error: action.payload,\n                pending: false\n            });\n\n        case DELETE_PROCESSES_STARTED:\n            return Object.assign({}, state, {\n                pending: true\n            });\n        // ~~~~~~~~~~~~~~~\n\n        // ======================================== //\n        //                                          //\n        //             Utilities                    //\n        //                                          //\n        // ======================================== //\n        case 'UPDATE_PROCESSES':\n            return {\n                ...state,\n                processes: deepCopy(action.payload.processes),\n                // processes: action.payload.processes,\n                d3: action.payload.d3,\n            }\n\n        case 'SET_SELECTED_PROCESS':\n            return {\n                ...state,\n                selectedProcess: action.payload\n\n            }\n\n        case EDITING_PROCESS:\n            return {\n                ...state,\n                editingProcess: action.payload,\n            }\n\n        case 'SET_FIXING_PROCESS':\n            return {\n                ...state,\n                fixingProcess: action.payload\n            }\n\n        default:\n            return state\n\n\n    }\n}\n\nexport default processesReducer\n","// import types\nimport {\n  GET,\n  POST,\n  DELETE,\n  PUT\n} from '../types/prefixes';\n\nimport {\n  REPORT_EVENTS,\n  REPORT_EVENT\n} from '../types/data_types';\n\nimport {\n  STARTED,\n  SUCCESS,\n  FAILURE\n} from '../types/suffixes';\n\nimport { clone_object } from '../../methods/utils/utils';\n\nconst defaultState = {\n  reportEvents: {},\n  id: {},\n  dashboard_id: {},\n  station_id: {},\n  report_button_id: {},\n  error: {},\n  pending: false\n};\n\nexport default function reportEventsReducer(state = defaultState, action) {\n\n  switch (action.type) {\n\n    // get\n    // ***************\n    case GET + REPORT_EVENTS + SUCCESS:\n      return  Object.assign({}, state, {\n        reportEvents: {...state.reportEvents, ...action.payload.reportEventsObj},\n        pending: false\n      });\n\n    case GET + REPORT_EVENTS + FAILURE:\n      return  Object.assign({}, state, {\n        error: action.payload,\n        pending: false\n      });\n\n    case GET + REPORT_EVENTS + STARTED:\n      return  Object.assign({}, state, {\n        pending: true\n      });\n    // ~~~~~~~~~~~~~~~\n\n    // create\n    // ***************\n    case POST + REPORT_EVENT + SUCCESS:\n      const created = action.payload.createdReportEvent\n\n      return  Object.assign({}, state, {\n        reportEvents: {\n          ...state.reportEvents,\n          _id: {\n            ...state.reportEvents._id,\n            [created.report_button_id]: created\n          }\n        },\n        pending: false\n      });\n\n\n    case POST + REPORT_EVENT + FAILURE:\n      return  Object.assign({}, state, {\n        error: action.payload,\n        pending: false\n      });\n\n    case POST + REPORT_EVENT + STARTED:\n      return  Object.assign({}, state, {\n        pending: true\n      });\n    // ~~~~~~~~~~~~~~~\n\n    // delete\n    // ***************\n    case DELETE + REPORT_EVENT + SUCCESS:\n\n      const {\n        [action.payload.id]: old,\n          ...rest\n      } = state.reportEvents._id\n\n      return  Object.assign({}, state, {\n        reportEvents: {\n          ...state.reportEvents,\n          _id: {...rest,}\n        },\n        pending: false\n      });\n\n\n    case  DELETE + REPORT_EVENT + FAILURE:\n      return  Object.assign({}, state, {\n        error: action.payload,\n        pending: false\n      });\n\n    case  DELETE + REPORT_EVENT + STARTED:\n      return  Object.assign({}, state, {\n        pending: true\n      });\n    // ~~~~~~~~~~~~~~~\n\n    // update\n    // ***************\n    case  PUT + REPORT_EVENT + SUCCESS:\n\n      return  Object.assign({}, state, {\n        reportEvents: {\n          ...state.reportEvents,\n          _id: {\n            ...state.reportEvents._id,\n            [action.payload.updatedReportEvent.report_button_id]: action.payload.updatedReportEvent\n          }\n        },\n        pending: false\n      });\n\n\n    case PUT + REPORT_EVENT + FAILURE:\n      return  Object.assign({}, state, {\n        error: action.payload,\n        pending: false\n      });\n\n    case PUT + REPORT_EVENT + STARTED:\n      return  Object.assign({}, state, {\n        pending: true\n      });\n    // ~~~~~~~~~~~~~~~\n\n    default:\n      return state\n  }\n}\n","import {\n  GET,\n  POST,\n  DELETE,\n  PUT\n} from '../types/prefixes';\n\nimport {\n  STARTED,\n  SUCCESS,\n  FAILURE\n} from '../types/suffixes'\n\nimport {\n  CARD,\n  CARDS,\n  CARD_HISTORY,\n  PROCESS_CARDS,\n  SHOW_EDITOR\n} from '../types/data_types'\n\nimport {uuidv4} from \"../../methods/utils/utils\";\n\n\nconst defaultState = {\n\n  cards: {},\n  processCards: {},\n  cardHistories: {},\n  error: {},\n  pending: false,\n  showEditor:false\n\n};\n\nexport default function cardsReducer(state = defaultState, action) {\n  let processCards = {}\n\n  switch (action.type) {\n    case GET + CARD + SUCCESS:\n      return {\n        ...state,\n        cards: {...state.cards, [action.payload.card._id]: action.payload.card},\n        pending: false,\n      }\n\n    case GET + CARDS + SUCCESS:\n\n      Object.values(action.payload.cards).forEach((card,index) => {\n        if(processCards[card.process_id]) {\n          processCards[card.process_id][card._id] = card\n        } else {\n          processCards[card.process_id] = {\n            [card._id]: card\n          }\n        }\n\n      })\n      return {\n        ...state,\n        cards: {...state.cards, ...action.payload.cards},\n        processCards: processCards,\n        pending: false,\n      }\n\n    case GET + PROCESS_CARDS + SUCCESS:\n      return {\n        ...state,\n        processCards: {...state.processCards, [action.payload.processId]: {\n          ...state.processCards[action.payload.processId], ...action.payload.cards\n          }},\n        pending: false,\n      }\n\n    case PUT + CARD + SUCCESS:\n      return {\n        ...state,\n        cards: {...state.cards, [action.payload.card._id]: action.payload.card},\n        processCards: {...state.processCards, [action.payload.processId]: {\n            ...state.processCards[action.payload.processId], [action.payload.card._id]: action.payload.card\n          }},\n        pending: false,\n      }\n\n    case POST + CARD + SUCCESS:\n      return {\n        ...state,\n        cards: {...state.cards, [action.payload.card._id]: action.payload.card},\n        processCards: {...state.processCards, [action.payload.processId]: {\n            ...state.processCards[action.payload.processId], [action.payload.card._id]: action.payload.card\n          }},\n        pending: false,\n      }\n\n    case DELETE + CARD + SUCCESS:\n      const { [action.payload.cardId]: value, ...rest } = state.cards; // extracts payload card from rest\n      const {\n\n        [action.payload.processId]: {[action.payload.cardId]: removedCard, ...remaining} ,\n        ...unchangedProcessGroups\n\n      } = state.processCards; // extracts payload card from rest\n\n      return {\n        ...state,\n        cards: {...rest},\n        processCards: {...unchangedProcessGroups, [action.payload.processId]: remaining},\n        pending: false,\n      }\n\n    case GET + CARD_HISTORY + SUCCESS:\n      return {\n        ...state,\n        cardHistories: {...state.cardHistories, [action.payload.cardHistory.card_id]: action.payload.cardHistory},\n        pending: false,\n      }\n\n    case POST + CARD_HISTORY + SUCCESS:\n      return {\n        ...state,\n        cardHistories: {...state.cardHistories, [action.payload.cardHistory.card_id]: action.payload.cardHistory},\n        pending: false,\n      }\n\n    case PUT + CARD_HISTORY + SUCCESS:\n      return {\n        ...state,\n        cardHistories: {...state.cardHistories, [action.payload.cardHistory.card_id]: action.payload.cardHistory},\n        pending: false,\n      }\n\n      case SHOW_EDITOR:\n          return {\n              ...state,\n              showEditor: action.payload,\n          }\n\n    default:\n      return state\n  }\n}\n","import {\n  GET,\n  POST,\n  DELETE,\n  PUT\n} from '../types/prefixes';\n\nimport {\n  STARTED,\n  SUCCESS,\n  FAILURE\n} from '../types/suffixes'\n\nimport {\n  LOT,\n  LOTS,\n} from '../types/data_types'\n\n\n\nconst defaultState = {\n  lots: {},\n};\n\nexport default function lotsReducer(state = defaultState, action) {\n\n  switch (action.type) {\n    case GET + LOT + SUCCESS:\n      return {\n        ...state,\n        lots: {...state.lots, [action.payload.lot._id]: action.payload.lot},\n      }\n\n    case GET + LOTS + SUCCESS:\n      return {\n        ...state,\n        lots: {...state.lots, ...action.payload.lots},\n      }\n\n    case PUT + LOT + SUCCESS:\n      return {\n        ...state,\n        lots: {...state.lots, [action.payload.lot._id]: action.payload.lot},\n      }\n\n    case POST + LOT + SUCCESS:\n      return {\n        ...state,\n        lots: {...state.lots, [action.payload.lot._id]: action.payload.lot},\n      }\n\n    case DELETE + LOT + SUCCESS:\n      const { [action.payload.lotId]: value, ...rest } = state.lots; // extracts payload lot from rest\n\n      return {\n        ...state,\n        lots: {...rest},\n      }\n\n    default:\n      return state\n  }\n}\n","import { SET } from \"../types/prefixes\"\nimport {CARD_DRAGGING, COLUMN_HOVERING, SET_SIZE} from \"../types/ui_types\"\n\n\nconst defaultState = {\n\tisCardDragging: false,\n\tisHoveringOverColumn: false,\n\tsizes: {},\n\tdraggedLotInfo: {}\n}\n\nconst cardPageReducer = (state = defaultState, action) => {\n\n\n\tswitch (action.type) {\n\t\tcase SET + CARD_DRAGGING:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdraggedLotInfo: action.payload\n\t\t\t}\n\n\t\tcase SET_SIZE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tsizes: {...state.sizes, [action.payload.processId]: action.payload.size},\n\t\t\t}\n\n\t\tcase SET + COLUMN_HOVERING:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisHoveringOverColumn: action.payload\n\t\t\t}\n\n\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport default cardPageReducer","import { combineReducers } from 'redux'\nimport schedulesReducer from './schedules_reducer_v2';\nimport skillsReducer from './skills_reducer';\nimport stationsReducer from './stations_reducer';\nimport positionsReducer from './positions_reducer'\nimport objectsReducer from './objects_reducer';\nimport apiReducer from './api_reducer';\nimport dashboardsReducer from './dashboards_reducer'\nimport errorReducer from './error_reducer';\nimport statusReducer from './status_reducer';\nimport taskQueueReducer from './task_queue_reducer';\nimport keyboardReducer from './keyboard_reducer';\nimport tasksReducer from './tasks_reducer';\nimport soundsReducer from './sounds_reducer';\nimport settingsReducer from './settings_reducer';\nimport localReducer from './local_reducer';\nimport modelsReducer from './models_reducer'\nimport skillTemplatesReducer from './skill_templates_reducer'\nimport posesReducer from './poses_reducer';\nimport requestStatusReducer from './request_status_reducer';\nimport taskAnalysisReducer from './task_analysis_reducer'\nimport mapReducer from './map_reducer'\nimport sidebarReducer from './sidebar_reducer'\nimport widgetReducer from './widget_reducer'\nimport devicesReducer from './devices_reducer'\nimport notificationsReducer from './notifications_reducer'\nimport eventsReducer from './events_reducer'\nimport authenticationReducer from './authentication_reducer'\nimport processesReducer from './processes_reducer'\nimport reportEventsReducer from './report_events_reducer'\nimport cardsReducer from './cards_reducer'\nimport lotsReducer from './lots_reducer'\nimport testReducer from './test_reducer'\nimport cardPageReducer from \"./card_page_reducer\"\n// TEST\n\nexport default combineReducers({\n    cardPageReducer,\n    apiReducer,\n    reportEventsReducer,\n    cardsReducer,\n    lotsReducer,\n    schedulesReducer,\n    skillsReducer,\n    positionsReducer,\n    stationsReducer,\n    objectsReducer,\n    dashboardsReducer,\n    errorReducer,\n    statusReducer,\n    taskQueueReducer,\n    keyboardReducer,\n    soundsReducer,\n    tasksReducer,\n    settingsReducer,\n    localReducer,\n    modelsReducer,\n    skillTemplatesReducer,\n    posesReducer,\n    requestStatusReducer,\n    taskAnalysisReducer,\n    mapReducer,\n    sidebarReducer,\n    widgetReducer,\n    devicesReducer,\n    notificationsReducer,\n    eventsReducer,\n    authenticationReducer,\n    processesReducer,\n})\n","// schedules types\n\n// get multiple\n// ***************\nexport const GET_SCHEDULES = 'GET_SCHEDULES'\nexport const GET_SCHEDULES_STARTED = 'GET_SCHEDULES_STARTED'\nexport const GET_SCHEDULES_SUCCESS = 'GET_SCHEDULES_SUCCESS'\nexport const GET_SCHEDULES_FAILURE = 'GET_SCHEDULES_FAILURE'\n// ~~~~~~~~~~~~~~~\n\n// get single\n// ***************\nexport const GET_SCHEDULE = 'GET_SCHEDULE'\nexport const GET_SCHEDULE_STARTED = 'GET_SCHEDULE_STARTED'\nexport const GET_SCHEDULE_SUCCESS = 'GET_SCHEDULE_SUCCESS'\nexport const GET_SCHEDULE_FAILURE = 'GET_SCHEDULE_FAILURE'\n// ~~~~~~~~~~~~~~~\n\n// post\n// ***************\nexport const POST_SCHEDULE = 'POST_SCHEDULE'\nexport const POST_SCHEDULE_STARTED = 'POST_SCHEDULE_STARTED'\nexport const POST_SCHEDULE_SUCCESS = 'POST_SCHEDULE_SUCCESS'\nexport const POST_SCHEDULE_FAILURE = 'POST_SCHEDULE_FAILURE'\n// ~~~~~~~~~~~~~~~\n\n// delete\n// ***************\nexport const DELETE_SCHEDULE = 'DELETE_SCHEDULE'\nexport const DELETE_SCHEDULE_STARTED = 'DELETE_SCHEDULE_STARTED'\nexport const DELETE_SCHEDULE_SUCCESS = 'DELETE_SCHEDULE_SUCCESS'\nexport const DELETE_SCHEDULE_FAILURE = 'DELETE_SCHEDULE_FAILURE'\n// ~~~~~~~~~~~~~~~\n\n// PUT\n// ***************\nexport const PUT_SCHEDULE = 'PUT_SCHEDULE'\nexport const PUT_SCHEDULE_STARTED = 'PUT_SCHEDULE_STARTED'\nexport const PUT_SCHEDULE_SUCCESS = 'PUT_SCHEDULE_SUCCESS'\nexport const PUT_SCHEDULE_FAILURE = 'PUT_SCHEDULE_FAILURE'\n// ~~~~~~~~~~~~~~~\n\n// ADD\n// ***************\nexport const ADD_SCHEDULES = 'ADD_SCHEDULES'\nexport const ADD_SCHEDULES_STARTED = 'ADD_SCHEDULES_STARTED'\nexport const ADD_SCHEDULES_SUCCESS = 'ADD_SCHEDULES_SUCCESS'\nexport const ADD_SCHEDULES_FAILURE = 'ADD_SCHEDULES_FAILURE'\n// ~~~~~~~~~~~~~~~\n\n// UPDATE\n// ***************\nexport const UPDATE_SCHEDULE = 'UPDATE_SCHEDULE'\nexport const UPDATE_SCHEDULE_STARTED = 'UPDATE_SCHEDULE_STARTED'\nexport const UPDATE_SCHEDULE_SUCCESS = 'UPDATE_SCHEDULE_SUCCESS'\nexport const UPDATE_SCHEDULE_FAILURE = 'UPDATE_SCHEDULE_FAILURE'\n// ~~~~~~~~~~~~~~~\n\n// add unsaved schedules\n// ***************\nexport const ADD_SCHEDULES_UNSAVED = 'ADD_SCHEDULES_UNSAVED';\n// ~~~~~~~~~~~~~~~\n\nexport const DELETE_SCHEDULES = 'DELETE_SCHEDULES'\n","export const GET_SKILLS = 'GET_SKILLS'\nexport const GET_SKILLS_STARTED = 'GET_SKILLS_STARTED'\nexport const GET_SKILLS_SUCCESS = 'GET_SKILLS_SUCCESS'\nexport const GET_SKILLS_FAILURE = 'GET_SKILLS_FAILURE'\n\nexport const POST_SKILLS = 'POST_SKILLS'\nexport const POST_SKILLS_STARTED = 'POST_SKILLS_STARTED'\nexport const POST_SKILLS_SUCCESS = 'POST_SKILLS_SUCCESS'\nexport const POST_SKILLS_FAILURE = 'POST_SKILLS_FAILURE'\n\nexport const PUT_SKILLS = 'PUT_SKILLS'\nexport const PUT_SKILLS_STARTED = 'PUT_SKILLS_STARTED'\nexport const PUT_SKILLS_SUCCESS = 'PUT_SKILLS_SUCCESS'\nexport const PUT_SKILLS_FAILURE = 'PUT_SKILLS_FAILURE'\n\nexport const DELETE_SKILLS = 'DELETE_SKILLS'\nexport const DELETE_SKILLS_STARTED = 'DELETE_SKILLS_STARTED'\nexport const DELETE_SKILLS_SUCCESS = 'DELETE_SKILLS_SUCCESS'\nexport const DELETE_SKILLS_FAILURE = 'DELETE_SKILLS_FAILURE'\n","export const CLEAR_ERROR = 'CLEAR_ERROR';\n","// keyboard types\n\n\n// ***************\nexport const ON_BLUR = 'ON_BLUR';\nexport const ON_FOCUS = 'ON_FOCUS';\n// ~~~~~~~~~~~~~~~\n","export const GET_MODELS = 'GET_MODELS';\nexport const GET_MODELS_STARTED = 'GET_MODELS_STARTED';\nexport const GET_MODELS_SUCCESS = 'GET_MODELS_SUCCESS';\nexport const GET_MODELS_FAILURE = 'GET_MODELS_FAILURE';\n","import React from 'react';\nimport {createStore, applyMiddleware, compose} from 'redux';\nimport { createDevTools } from 'redux-devtools';\nimport { createLogger } from 'redux-logger'\nimport reducers from '../reducers/index';\nimport thunk from 'redux-thunk';\nimport LogMonitor from 'redux-devtools-log-monitor';\n\nimport log_module from '../../logger.js';\n\nconst reduxLogger = log_module.getLogger('ReduxLogger');\n\nvar logger = createLogger({logger: reduxLogger, level: \"info\"});\n\nconst muteReducer = () => {\n  if(reducers.settingsReducer.muteReducer){\n    return applyMiddleware(thunk)\n  } else {\n    return applyMiddleware(logger, thunk)\n  }\n}\n\nconst composeEnhancers =\n  typeof window === 'object' &&\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n      // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n      // actionCreators,\n      trace: true,\n      traceLimit: 25,\n    }) : compose;\n\nconst enhancer = composeEnhancers(\n  applyMiddleware(logger, thunk),\n  // other store enhancers if any\n);\n\nconst store = createStore(reducers, enhancer);\n\nif (module.hot) {\n  module.hot.accept('../reducers/index.js', () => {\n    // const nextReducer = combineReducers(require('../reducers'))\n    // store.replaceReducer(nextReducer)\n    store.replaceReducer(require('../reducers/index.js').default)\n  })\n}\n\nexport default store\n","import axios from 'axios';\n// import * as log from 'loglevel';\n\nimport logger from '../logger'\n\nimport { apiIPAddress } from '../settings/settings'\nconst operator = 'processes'\nconst log = logger.getLogger('Api')\n\nexport async function getProcesses() {\n    try {\n        const response = await axios({\n            method: 'get',\n            url: apiIPAddress() + operator,\n            headers: {\n                'X-API-Key': '123456',\n                'Access-Control-Allow-Origin': '*'\n            }\n        });\n        // Success 🎉\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n\n}\n\nexport async function deleteProcesses(ID) {\n    try {\n        const response = await axios({\n            method: 'DELETE',\n            url: apiIPAddress() + operator + '/' + ID,\n            headers: {\n                'Accept': 'application/json',\n                'X-API-Key': '123456',\n                'Access-Control-Allow-Origin': '*'\n            },\n        });\n\n        // Success 🎉\n        // log.debug('response',response);\n        // const data = response.data;\n        // const dataJson = JSON.parse(data)\n        return response;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}\n\nexport async function postProcesses(process) {\n    try {\n        const response = await axios({\n            method: 'POST',\n            url: apiIPAddress() + operator,\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json',\n                'X-API-Key': '123456',\n                'Access-Control-Allow-Origin': '*'\n            },\n            data: process\n        });\n\n        // Success 🎉\n        // log.debug('response',response);\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        // log.debug('response data json',dataJson);\n\n\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}\n\nexport async function putProcesses(process, ID) {\n    try {\n        const response = await axios({\n            method: 'PUT',\n            url: apiIPAddress() + operator + '/' + ID,\n            headers: {\n                'Content-Type': 'application/json',\n                'X-API-Key': '123456',\n                'Accept': 'application/json',\n                'Access-Control-Allow-Origin': '*'\n            },\n            data: process\n        });\n\n        // Success 🎉\n        // log.debug('response',response);\n        const data = response.data;\n        const dataJson = JSON.parse(data)\n        return dataJson;\n\n\n    } catch (error) {\n\n        // Error 😨\n        if (error.response) {\n            /*\n             * The request was made and the server responded with a\n             * status code that falls out of the range of 2xx\n             */\n            log.debug('error.response.data', error.response.data);\n            log.debug('error.response.status', error.response.status);\n            log.debug('error.response.headers', error.response.headers);\n        } else if (error.request) {\n            /*\n             * The request was made but no response was received, `error.request`\n             * is an instance of XMLHttpRequest in the browser and an instance\n             * of http.ClientRequest in Node.js\n             */\n            log.debug('error.request', error.request);\n        } else {\n            // Something happened in setting up the request and triggered an Error\n            log.debug('error.message', error.message);\n        }\n        log.debug('error', error);\n    }\n}\n","import { normalize, schema } from 'normalizr';\n\nimport {\n    GET_PROCESSES,\n    GET_PROCESSES_STARTED,\n    GET_PROCESSES_SUCCESS,\n    GET_PROCESSES_FAILURE,\n\n    POST_PROCESSES,\n    POST_PROCESSES_STARTED,\n    POST_PROCESSES_SUCCESS,\n    POST_PROCESSES_FAILURE,\n\n    PUT_PROCESSES,\n    PUT_PROCESSES_STARTED,\n    PUT_PROCESSES_SUCCESS,\n    PUT_PROCESSES_FAILURE,\n\n    DELETE_PROCESSES,\n    DELETE_PROCESSES_STARTED,\n    DELETE_PROCESSES_SUCCESS,\n    DELETE_PROCESSES_FAILURE,\n    EDITING_PROCESS,\n} from '../types/processes_types'\n\nimport * as api from '../../api/processes_api'\nimport { processesSchema } from '../../normalizr/schema';\nimport { deepCopy } from '../../methods/utils/utils'\nimport {putDashboard} from \"./dashboards_actions\";\nimport {getRouteProcesses} from \"../../methods/utils/route_utils\";\nimport {willRouteDeleteBreakProcess} from \"../../methods/utils/processes_utils\";\n\n\nexport const getProcesses = () => {\n    return async dispatch => {\n        function onStart() {\n            dispatch({ type: GET_PROCESSES_STARTED });\n        }\n        function onSuccess(response) {\n            dispatch({ type: GET_PROCESSES_SUCCESS, payload: response });\n            return response;\n        }\n        function onError(error) {\n            dispatch({ type: GET_PROCESSES_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const processes = await api.getProcesses();\n            // Uncomment when you want to make processes an object\n            const normalizedProcesses = normalize(processes, processesSchema);\n            if (normalizedProcesses.entities.processes === undefined) {\n                return onSuccess(normalizedProcesses.entities)\n            }\n            else {\n                return onSuccess(normalizedProcesses.entities.processes)\n            }\n        } catch (error) {\n            return onError(error)\n        }\n    }\n}\nexport const postProcesses = (process) => {\n    return async dispatch => {\n        function onStart() {\n            dispatch({ type: POST_PROCESSES_STARTED });\n        }\n        function onSuccess(response) {\n            dispatch({ type: POST_PROCESSES_SUCCESS, payload: response });\n            return response;\n        }\n        function onError(error) {\n            dispatch({ type: POST_PROCESSES_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            delete process.new\n            delete process.changed\n\n            const newProcesses = await api.postProcesses(process);\n            return onSuccess(newProcesses)\n        } catch (error) {\n            return onError(error)\n        }\n    }\n}\nexport const putProcesses = (process) => {\n    return async dispatch => {\n        function onStart() {\n            dispatch({ type: PUT_PROCESSES_STARTED });\n        }\n        function onSuccess(response) {\n            dispatch({ type: PUT_PROCESSES_SUCCESS, payload: response });\n            return response;\n        }\n        function onError(error) {\n            dispatch({ type: PUT_PROCESSES_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const ID = deepCopy(process._id)\n\n            if(process.new) {\n                delete process.new\n            }\n            if(process.changed) {\n                delete process.changed\n            }\n            // delete process._id\n            const updateProcesses = await api.putProcesses(process, ID);\n            return onSuccess(updateProcesses)\n        } catch (error) {\n            return onError(error)\n        }\n    }\n}\nexport const deleteProcesses = (ID) => {\n    return async dispatch => {\n        function onStart() {\n            dispatch({ type: DELETE_PROCESSES_STARTED });\n        }\n        function onSuccess(response) {\n            dispatch({ type: DELETE_PROCESSES_SUCCESS, payload: ID });\n            return response;\n        }\n        function onError(error) {\n            dispatch({ type: DELETE_PROCESSES_FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const removeProcesses = await api.deleteProcesses(ID);\n            return onSuccess(ID)\n        } catch (error) {\n            return onError(error)\n        }\n    }\n}\n\n// deletes all buttons with routeId from all dashboards\n// ******************************\nexport const removeRouteFromAllProcesses = (routeId) => {\n    return async (dispatch, getState) => {\n\n        // current state\n        const state = getState()\n        const routes = state.tasksReducer.tasks || {}\n\n        // get all processes that contain routeId\n        const routeProcesses = getRouteProcesses(routeId)\n\n        console.log(\"removeRouteFromAllProcesses routeProcesses\",routeProcesses)\n\n        // loop through each of these processes, check if removing the route will break the process, then remove the route\n        for (const currProcess of routeProcesses) {\n\n            const processRoutes = currProcess.routes.map((currRoute) => routes[currRoute])\n\n            // will removing route break the process?\n            const willBreak = willRouteDeleteBreakProcess(processRoutes, routeId)\n            console.log(\"willBreak\",willBreak)\n\n            // dispatch update\n            await dispatch(putProcesses({\n                ...currProcess,\n                broken: willBreak,\n                routes: currProcess.routes.filter((currRoute) => currRoute !== routeId)\n            }))\n        }\n\n    }\n}\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nexport const updateProcesses = (processes, d3) => {\n    return { type: 'UPDATE_PROCESSES', payload: { processes, d3 } }\n}\n\nexport const setSelectedProcess = (process) => {\n    return { type: 'SET_SELECTED_PROCESS', payload: process }\n}\n\nexport const editingProcess = (bool) => {\n    return { type: EDITING_PROCESS, payload: bool }\n}\n\n/**\n * This is to tell the map that you are fixing a process vs adding a new route to the process\n * It will force you to select a location that is tied with the location before the process breaks\n * @param {bool} bool \n */\nexport const setFixingProcess = (bool) => {\n    return { type: 'SET_FIXING_PROCESS', payload: bool }\n}\n","import React from 'react'\n\nconst defaultWidgetPages = ['dashboards']\n\nexport const DeviceTypes = {\n\n    generic: {\n        icon: 'icon-rmLogo',\n        primaryColor: '#FF4B4B',\n        startGradientColor: '#FF4B4B',\n        stopGradientColor: '#ff2424',\n        svgPath: 'M195.33,232.27c1.06,1.43.51,2.6-1.24,2.6H172a7.18,7.18,0,0,1-5.09-2.6l-58.8-79.35h35.12a29.27,29.27,0,1,0,0-58.53H96.36V234.87H73V71h70.24a52.68,52.68,0,0,1,10,104.4ZM263.64,71.13,214.18,120.6l-14-14a1.35,1.35,0,0,0-.83-.29l-.21,0a1.29,1.29,0,0,0-1.09,1.28,1.1,1.1,0,0,0,0,.26s0,.09,0,.13a57.16,57.16,0,0,1,.65,28.85l0,.13a1.1,1.1,0,0,0,0,.26,1.33,1.33,0,0,0,.29.83,1.45,1.45,0,0,0,.18.17l.6.6,8.15,8.16h0l6.27,6.27,16.32-16.31,33.15-33.15V235h23.41V71.13Z',\n        widgetPages: defaultWidgetPages,\n    },\n\n    trident: {\n        icon: 'icon-trident',\n        primaryColor: '#d7841e',\n        startGradientColor: '#d7a31e',\n        stopGradientColor: '#d7841e',\n        svgPath: \"M171.27,213.07c-2.27-1-3-2.87-2.94-5.29.06-12.66,0-25.33,0-38v-2.61c-6,2.49-11.87,4.64-17.47,7.29a98.76,98.76,0,0,0-10.57,6.33c-1.52,1-3,1.62-4.73.73s-2.06-2.35-2.18-4.09c-1.64-23.93-5.32-47.51-12.67-70.41-4.15-13-9.45-25.4-17.78-36.34A56.17,56.17,0,0,0,90.15,58.17a15.14,15.14,0,0,1-2-1.55,3.57,3.57,0,0,1-.94-4,3.4,3.4,0,0,1,3.59-2.53,91.1,91.1,0,0,1,11.31,1.47,67.94,67.94,0,0,1,37.43,22.22c1.29,1.48,2.14,3,1.3,4.92s-2.53,2.45-4.49,2.37a10.46,10.46,0,0,0-1.11.06c7.69,22,14.86,44.08,17.35,67.37l15.7-5.31V73.57a43.06,43.06,0,0,0-4.71,2.35c-2.11,1.37-3.8,1.61-5.32.39s-1.91-2.94-.87-5.24q9.39-20.74,18.8-41.49a4,4,0,0,1,3.76-2.65,4,4,0,0,1,3.9,2.72Q193.19,50.32,202.57,71c1.08,2.39.75,4.12-.89,5.39s-3.17.91-5.32-.49a43.24,43.24,0,0,0-4.67-2.32V143.2l15.69,5.3c2.5-23.14,9.63-45.25,17.41-67.43-.78,0-1.37,0-1.95,0a3.8,3.8,0,0,1-3.72-2.42,3.89,3.89,0,0,1,.79-4.22A68.45,68.45,0,0,1,240,58.15a69.71,69.71,0,0,1,27.48-8.07c2.46-.2,4.39.37,5.61,2.64V54.9a27.37,27.37,0,0,1-3.28,3.27,59.26,59.26,0,0,0-12.89,12.7c-8.23,10.85-13.49,23.18-17.61,36-7.36,22.88-11,46.46-12.7,70.39-.12,1.79-.45,3.38-2.2,4.26s-3.32.15-4.89-.84c-3.41-2.18-6.82-4.39-10.4-6.28a89.42,89.42,0,0,0-17.47-6.79v2.17c0,12.66,0,25.32,0,38,0,2.42-.66,4.24-2.93,5.29Z\",\n        widgetPages: [...defaultWidgetPages, 'statistics'],\n    },\n    arm: {\n        icon: 'icon-arm',\n        primaryColor: '#1e9cd7',\n        startGradientColor: '#1e9cd7',\n        stopGradientColor: '#005b97',\n        svgPath: 'M173.7,172.2a22.64,22.64,0,1,1-22.64,22.64A22.64,22.64,0,0,1,173.7,172.2Zm.08-4L125.61,65.38A22.53,22.53,0,0,1,103.37,75.8l48.17,102.84a22.53,22.53,0,0,1,22.24-10.42ZM82,49.35a22.64,22.64,0,1,0,22.64-22.63A22.64,22.64,0,0,0,82,49.35ZM240.43,25,127.3,34.91a22.5,22.5,0,0,1,2.14,24.46l113.13-9.9A22.55,22.55,0,0,1,240.43,25Zm1.43,10.68a13.21,13.21,0,1,0,13.21-13.21A13.22,13.22,0,0,0,241.86,35.69ZM250,81.74a57.78,57.78,0,0,0,4.17,13.78,3.78,3.78,0,0,0,.17.35l8.11-1.42-2.61-14.76,6.92-1.22,2.61,14.75,8.1-1.42c0-.14,0-.27,0-.4A57.9,57.9,0,0,0,276.7,77a57.32,57.32,0,0,0-4.18-13.78l-2.61-14.83-23.34,4.12,2.62,14.83A57.43,57.43,0,0,0,250,81.74Zm11.36-.88,5.47,31,2.45,7.46,2.17-.39-.25-7.84-5.46-31Z',\n        widgetPages: [...defaultWidgetPages, 'statistics'],\n    },\n    cart: {\n        icon: 'icon-cart',\n        deviceFontSize: '2.5rem',\n        primaryColor: '#03ffa3',\n        startGradientColor: '#03ffa3',\n        stopGradientColor: '#00b673',\n        svgPath:\n            <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 400 400\">\n                <path d=\"M285,90a35,35,0,0,1-35-35,39.83,39.83,0,0,1,2.05-11.22A2.67,2.67,0,0,0,249.37,40H150.63A2.67,2.67,0,0,0,148,43.78,39.83,39.83,0,0,1,150,55a35,35,0,0,1-35,35,39.83,39.83,0,0,1-11.22-2A2.67,2.67,0,0,0,100,90.63V309.37a2.67,2.67,0,0,0,3.78,2.68A39.83,39.83,0,0,1,115,310a35,35,0,0,1,35,35A39.83,39.83,0,0,1,148,356.22a2.67,2.67,0,0,0,2.68,3.78h98.74a2.67,2.67,0,0,0,2.68-3.78A39.83,39.83,0,0,1,250,345a35,35,0,0,1,35-35,39.83,39.83,0,0,1,11.22,2.05,2.67,2.67,0,0,0,3.78-2.68V90.63A2.67,2.67,0,0,0,296.22,88,39.83,39.83,0,0,1,285,90ZM159.38,167a12.9,12.9,0,0,1,2.61-6.38l36.69-45.94a16.33,16.33,0,0,1,4.83-4.13c1.27-.55,5,2.41,6.42,4.13l36.69,45.94a12.9,12.9,0,0,1,2.61,6.38c.07,1.78-5,3.24-7.24,3.24H166.62C164.42,170.19,159.32,168.73,159.38,167ZM250,248.06a13,13,0,0,1-6.61,1.94H168a13,13,0,0,1-6.61-1.94c-1.44-1.07.6-6,2-7.69l36.69-45.93a16.64,16.64,0,0,1,4.82-4.14c1.28-.55,5.05,2.42,6.43,4.14L248,240.37C249.39,242.09,251.43,247,250,248.06Z\" />\n                <circle cx=\"115\" cy=\"55\" r=\"30\" />\n                <circle cx=\"285\" cy=\"55\" r=\"30\" />\n                <circle cx=\"115\" cy=\"345\" r=\"30\" />\n                <circle cx=\"285\" cy=\"345\" r=\"30\" />\n            </svg>,\n\n        widgetPages: defaultWidgetPages,\n    },\n    rmVision: {\n        icon: 'icon-rmVision',\n        primaryColor: '#eb008a',\n        startGradientColor: '#eb008a',\n        stopGradientColor: '#9e005d',\n        svgPath: \"M306.33,121.46a54.29,54.29,0,0,1-3.68,6.06c-17.81,22.3-38.44,41.43-63.28,55.73-16.35,9.41-33.78,15.74-52.75,17a105.48,105.48,0,0,1-44.93-7.08c-21.83-8.29-40.59-21.41-57.72-37a239.89,239.89,0,0,1-27.6-29.84c-3.59-4.6-3.61-8.11,0-12.69,17.93-22.74,38.79-42.24,64-56.77,19.78-11.41,40.89-18.3,64.05-17.27a112.79,112.79,0,0,1,45.15,12c29.9,14.68,53.82,36.52,74.31,62.41a31.48,31.48,0,0,1,2.47,4.5ZM72.5,119.81c.93,1.1,1.56,2,2.29,2.71,7.68,7.88,15,16.13,23.16,23.53C113.61,160.33,131,172,151.3,178.87a86,86,0,0,0,37.38,4.47c16.4-1.8,31.28-7.88,45.3-16.28,18.21-10.92,33.79-25,47.92-40.72,1.85-2.06,3.61-4.2,5.59-6.51-4.85-5.25-9.4-10.44-14.24-15.35C257,88,239,73.8,217.53,64.5A95,95,0,0,0,184,56.26c-17.93-.84-34.42,4.16-50.12,12.28-17.55,9.07-32.74,21.32-46.56,35.31C82.25,109,77.49,114.41,72.5,119.81Z M229.92,120.19c-.2,27.69-22.78,50-50.26,49.71a49.92,49.92,0,1,1,50.26-49.71Zm-16.65-.12A33.29,33.29,0,1,0,180,153.29,33.33,33.33,0,0,0,213.27,120.07Z M176.11,135.28h-4.3V141c0,1.28-.18,1.46-1.44,1.46h-5.2c0,.84,0,1.63,0,2.41,0,.13.21.28.35.38A2.37,2.37,0,1,1,162,148a2.33,2.33,0,0,1,1-2.71.76.76,0,0,0,.37-.77c0-.85,0-1.71,0-2.56s.26-1.24,1.27-1.25H170v-5.44h-4.24c-.71,0-1-.33-1-1,0-1.19,0-2.38,0-3.56V130h-5.4c0,.22,0,.43,0,.65v4.75c0,.91-.29,1.19-1.2,1.2h-1.63a2.2,2.2,0,0,0-2.14.79,2.23,2.23,0,0,1-3.37-.11,2.36,2.36,0,0,1,.32-3.43,2.29,2.29,0,0,1,3.35.49,1,1,0,0,0,1.08.52c.59,0,1.38.14,1.72-.17s.11-1.1.12-1.68c0-1.23,0-2.45,0-3.68,0-.85.28-1.12,1.14-1.12h6v-4.26a4.22,4.22,0,0,0-.49,0h-8.74a.76.76,0,0,0-.76.39,2.29,2.29,0,0,1-2.65,1,2.37,2.37,0,0,1,0-4.54,2.4,2.4,0,0,1,2.73,1,.76.76,0,0,0,.49.35c3.12,0,6.25,0,9.37,0,0,0,0,0,.09-.06v-4.19h-.51c-2.92,0-5.83,0-8.75,0a.75.75,0,0,0-.74.4,2.3,2.3,0,0,1-2.67,1,2.36,2.36,0,0,1,0-4.51,2.3,2.3,0,0,1,2.68.94.86.86,0,0,0,.85.45h9.16V111.8H164c-1.75,0-3.5,0-5.25,0-.94,0-1.2-.25-1.2-1.18,0-1.6,0-3.21,0-4.81,0-.52-.15-.72-.67-.66a3.66,3.66,0,0,1-.81,0,1.55,1.55,0,0,0-1.61.7,2.28,2.28,0,0,1-3.42.1,2.36,2.36,0,0,1,.09-3.41,2.31,2.31,0,0,1,3.42.29,1.25,1.25,0,0,0,1.23.59c.79,0,1.58,0,2.37,0s1.13.3,1.13,1.14c0,1.58,0,3.16,0,4.75V110h5.44v-3.35c0-1.91,0-1.91,1.91-1.91h3.19a.54.54,0,0,0,.16,0V99.31h-5.39c-.93,0-1.2-.27-1.21-1.18s0-1.8,0-2.69a1,1,0,0,0-.37-.67A2.46,2.46,0,0,1,162,92a2.4,2.4,0,0,1,2.28-1.64,2.36,2.36,0,0,1,2.25,1.67,2.41,2.41,0,0,1-1,2.72.81.81,0,0,0-.36.5c0,.72,0,1.45,0,2.24.27,0,.49,0,.71,0h4.68c1,0,1.25.24,1.26,1.26v5.9h4.27c0-.21,0-.41,0-.61,0-2.86,0-5.71,0-8.56a.86.86,0,0,0-.45-.85,2.28,2.28,0,0,1-1-2.62,2.36,2.36,0,0,1,4.53,0,2.41,2.41,0,0,1-1,2.69.93.93,0,0,0-.4.59q0,4.56,0,9.12c0,.08,0,.16,0,.27h4.24v-1.08c0-2.7,0-5.41,0-8.12a.8.8,0,0,0-.41-.8,2.3,2.3,0,0,1-1-2.67A2.39,2.39,0,0,1,183,90.38a2.36,2.36,0,0,1,2.29,1.7,2.43,2.43,0,0,1-1,2.68.94.94,0,0,0-.39.6c0,3,0,6.09,0,9.13a1.31,1.31,0,0,0,0,.22h4.23c0-.21,0-.43,0-.64V98.75c0-.93.26-1.19,1.2-1.19,1.56,0,3.12,0,4.68,0h.76c0-.83,0-1.6,0-2.36,0-.18-.27-.37-.46-.51a2.37,2.37,0,0,1,1.22-4.31,2.36,2.36,0,0,1,2.32,1.47,2.32,2.32,0,0,1-.89,2.86.8.8,0,0,0-.42.8c0,.87,0,1.75,0,2.62s-.29,1.17-1.16,1.17H190c0,.22-.05.36-.05.5v4.94c1,0,2,0,2.91,0,2.51,0,2.43-.1,2.4,2.43,0,.93,0,1.86,0,2.83h5.4c0-.23,0-.45,0-.67v-4.68c0-1,.27-1.25,1.27-1.25.8,0,1.59,0,2.38,0a1,1,0,0,0,1-.49A2.3,2.3,0,0,1,208,102a2.38,2.38,0,0,1,0,4.51,2.33,2.33,0,0,1-2.72-1,.76.76,0,0,0-.75-.41c-.66,0-1.33,0-2,0,0,.28,0,.5,0,.72v4.69c0,1-.25,1.23-1.22,1.23-1.75,0-3.5,0-5.25,0h-.69v4.28l.56,0h8.63a.8.8,0,0,0,.8-.41,2.29,2.29,0,0,1,2.66-1,2.37,2.37,0,0,1,0,4.54,2.41,2.41,0,0,1-2.69-1c-.12-.17-.35-.39-.54-.39-3.12,0-6.24,0-9.41,0v4.23c.16,0,.33,0,.51,0h8.69a.81.81,0,0,0,.79-.43,2.32,2.32,0,0,1,2.68-.95,2.37,2.37,0,0,1,0,4.52,2.28,2.28,0,0,1-2.63-.92,1,1,0,0,0-1-.49c-2.79,0-5.58,0-8.37,0h-.71v4.31H201c1.35,0,1.49.15,1.49,1.53v5.12c.84,0,1.6,0,2.37,0,.18,0,.36-.29.5-.48a2.37,2.37,0,0,1,4.31,1.24,2.39,2.39,0,0,1-1.48,2.32,2.3,2.3,0,0,1-2.81-.85.92.92,0,0,0-.91-.47c-.88,0-1.75,0-2.63,0s-1.09-.31-1.1-1.11c0-1.58,0-3.17,0-4.75V130h-5.44v3.93c0,1.08-.24,1.32-1.32,1.32h-4v5.41l.7,0h4.74c.89,0,1.17.28,1.18,1.15s0,1.8,0,2.69a1,1,0,0,0,.36.68,2.47,2.47,0,0,1,1,2.74,2.41,2.41,0,0,1-2.26,1.66,2.36,2.36,0,0,1-2.26-1.65,2.31,2.31,0,0,1,1-2.71.75.75,0,0,0,.39-.76c0-.66,0-1.32,0-2.06h-5.25c-1.19,0-1.4-.2-1.4-1.37v-5.78h-4.3v.58q0,4.29,0,8.56a.86.86,0,0,0,.44.86,2.3,2.3,0,0,1,1,2.67,2.37,2.37,0,0,1-4.52,0,2.41,2.41,0,0,1,.94-2.7c.19-.14.42-.39.42-.59,0-3.08,0-6.16,0-9.24a.68.68,0,0,0,0-.15h-4.19c0,.19,0,.37,0,.55,0,2.87,0,5.75,0,8.62a.87.87,0,0,0,.45.85,2.3,2.3,0,0,1,.95,2.63,2.37,2.37,0,0,1-4.52.05,2.27,2.27,0,0,1,.88-2.64,1,1,0,0,0,.51-1C176.1,141.34,176.11,138.34,176.11,135.28Zm17.34-1.81V106.55H166.53v26.92Zm-29.3-40h.27c.16-.23.41-.44.46-.69a.5.5,0,0,0-.59-.61.84.84,0,0,0-.57.57C163.7,93,164,93.22,164.15,93.46Zm13.72-.76c-.44-.26-.7-.55-.94-.53s-.49.37-.53.6a.49.49,0,0,0,.62.57C177.27,93.29,177.47,93,177.87,92.7Zm5.13-.82c-.28.4-.6.66-.56.85a1,1,0,0,0,.6.61.5.5,0,0,0,.57-.63C183.55,92.46,183.29,92.26,183,91.88Zm12.54,1.58h.27c.17-.22.5-.47.47-.66s-.36-.45-.57-.67c-.2.19-.55.37-.57.58S195.39,93.21,195.54,93.46ZM152.62,105h.27c.16-.23.48-.49.44-.67a.92.92,0,0,0-.6-.6c-.16,0-.54.35-.56.56S152.45,104.76,152.62,105Zm55.33-.53v-.3c-.24-.16-.49-.46-.72-.45a.81.81,0,0,0-.57.56.79.79,0,0,0,.53.58C207.43,104.88,207.7,104.61,208,104.47Zm-55.26,13.41c.32-.41.6-.6.65-.85a.49.49,0,0,0-.56-.63.84.84,0,0,0-.6.52C152.15,117.16,152.43,117.43,152.69,117.88Zm55.43-.87c-.38-.29-.57-.56-.82-.62a.5.5,0,0,0-.64.56.94.94,0,0,0,.6.61C207.45,117.6,207.71,117.29,208.12,117Zm-54.66,6.18v-.29c-.24-.17-.49-.47-.73-.46a.78.78,0,0,0-.56.56c0,.2.31.56.52.59S153.2,123.34,153.46,123.19Zm53.66.54h.27c.16-.23.48-.5.43-.68s-.38-.43-.6-.64c-.19.2-.54.4-.55.61S207,123.49,207.12,123.73Zm-53.67,12.16v-.28c-.21-.17-.41-.43-.65-.49a.5.5,0,0,0-.65.55.89.89,0,0,0,.53.61C152.93,136.3,153.2,136,153.45,135.89Zm53.67.53h.26c.16-.23.42-.44.46-.69a.49.49,0,0,0-.6-.59c-.24.05-.57.36-.57.56S207,136.17,207.12,136.42ZM165,147.4l0-.28c-.24-.16-.48-.46-.71-.45s-.6.39-.57.55a1,1,0,0,0,.59.61C164.49,147.87,164.76,147.55,165,147.4Zm12.14-.87h-.27c-.16.23-.41.43-.46.68a.51.51,0,0,0,.58.62.89.89,0,0,0,.59-.57C177.58,147,177.28,146.78,177.12,146.53Zm6.76.71c-.39-.28-.64-.61-.83-.57s-.44.37-.65.58c.22.21.41.53.66.58S183.5,147.53,183.88,147.24Zm12.53.13v-.26c-.24-.16-.5-.45-.73-.44s-.5.35-.55.58a.49.49,0,0,0,.6.59C196,147.8,196.18,147.54,196.41,147.37Z M179.94,130.75H170.5c-1,0-1.25-.26-1.25-1.26v-19c0-1,.26-1.25,1.26-1.25h19c1,0,1.26.26,1.26,1.26v19c0,1-.27,1.26-1.26,1.26ZM171,129H189V111H171Z M187.75,118c0,.77,0,1.54,0,2.31s-.32,1-.85,1-.9-.35-.9-1c0-1.53,0-3.07,0-4.6,0-.64.32-1,.85-1s.89.36.9,1S187.75,117.18,187.75,118Z\",\n        widgetPages: [...defaultWidgetPages, 'view'],\n    },\n\n    shelf: {\n        primaryColor: '#fb7c4e',\n        svgPath:\n            <>\n                <rect x=\"358.42\" width=\"28\" height=\"71\" rx=\"10\" />\n                <rect x=\"0.42\" width=\"28\" height=\"71\" rx=\"10\" />\n                <rect y=\"216.99\" width=\"28\" height=\"71\" rx=\"10\" />\n                <rect x=\"358.42\" y=\"217\" width=\"28\" height=\"71\" rx=\"10\" />\n                <path d=\"M371.72,85.5h-5.89a20.71,20.71,0,0,1-20.71-20.7V36.7A10.7,10.7,0,0,0,334.42,26H52.84a10.7,10.7,0,0,0-10.7,10.7V64.8A20.71,20.71,0,0,1,21.43,85.5H15.12A10.7,10.7,0,0,0,4.42,96.2v95.58a10.7,10.7,0,0,0,10.7,10.71H21a20.71,20.71,0,0,1,20.71,20.7V251.3A10.7,10.7,0,0,0,52.42,262H334a10.7,10.7,0,0,0,10.7-10.7V223.2a20.71,20.71,0,0,1,20.71-20.7h6.31a10.7,10.7,0,0,0,10.7-10.7V96.2A10.7,10.7,0,0,0,371.72,85.5ZM166,177.5H100a10,10,0,0,1-8.19-15.74l33-47a10,10,0,0,1,16.37,0l33,47A10,10,0,0,1,166,177.5Zm120.82,0h-66a10,10,0,0,1-8.18-15.74l33-47a10,10,0,0,1,16.37,0l33,47A10,10,0,0,1,286.83,177.5Z\" />\n            </>\n\n\n    }\n\n}\nexport const DEVICE_CONSTANTS = {\n    HUMAN: \"human\",\n    MIR_100: 'MiR_100'\n}","export const GET_DEVICES = 'GET_DEVICES'\nexport const GET_DEVICES_STARTED = 'GET_DEVICES_STARTED'\nexport const GET_DEVICES_SUCCESS = 'GET_DEVICES_SUCCESS'\nexport const GET_DEVICES_FAILURE = 'GET_DEVICES_FAILURE'\n\nexport const POST_DEVICES = 'POST_DEVICES'\nexport const POST_DEVICES_STARTED = 'POST_DEVICES_STARTED'\nexport const POST_DEVICES_SUCCESS = 'POST_DEVICES_SUCCESS'\nexport const POST_DEVICES_FAILURE = 'POST_DEVICES_FAILURE'\n\nexport const PUT_DEVICES = 'PUT_DEVICES'\nexport const PUT_DEVICES_STARTED = 'PUT_DEVICES_STARTED'\nexport const PUT_DEVICES_SUCCESS = 'PUT_DEVICES_SUCCESS'\nexport const PUT_DEVICES_FAILURE = 'PUT_DEVICES_FAILURE'\n\nexport const DELETE_DEVICES = 'DELETE_DEVICES'\nexport const DELETE_DEVICES_STARTED = 'DELETE_DEVICES_STARTED'\nexport const DELETE_DEVICES_SUCCESS = 'DELETE_DEVICES_SUCCESS'\nexport const DELETE_DEVICES_FAILURE = 'DELETE_DEVICES_FAILURE'\n","/**\n *  Goes through all the tasks and finds any tasks that belong to that location.\n *  It then sees if that task belongs to that location either as load or unload task.\n *  Then adds the key: taskID and value: object ID to be used for the object builder\n * */ \nexport const handleParseTaskBasedOnLoadUnload = (tasks, stationID) => {\n\n    let parsedTasks = { load: {}, unload: {} }\n\n    Object.values(tasks).forEach(task => {\n\n        // If station is load\n        if (task.load.station == stationID) {\n            parsedTasks.load = {\n                ...parsedTasks.load,\n                [task._id]: task.obj\n            }\n\n            // If station is unload\n        } else if (task.unload.station == stationID) {\n            parsedTasks.unload = {\n                ...parsedTasks.unload,\n                [task._id]: task.obj\n            }\n        }\n    })\n    return parsedTasks\n}\n\nexport const isEmpty = (obj) => {\n    for(var prop in obj) {\n        if(obj.hasOwnProperty(prop)) {\n            return false;\n        }\n    }\n\n    return JSON.stringify(obj) === JSON.stringify({});\n}\n\nexport const isObject = (item) => {\n    return ((typeof item === 'object') && (item !== null))\n}","export const GET_LOGGERS = 'GET_LOGGERS'\nexport const GET_LOGGERS_STARTED = 'GET_LOGGERS_STARTED'\nexport const GET_LOGGERS_SUCCESS = 'GET_LOGGERS_SUCCESS'\nexport const GET_LOGGERS_FAILURE = 'GET_LOGGERS_FAILURE'\n\nexport const POST_LOGGERS = 'POST_LOGGERS'\nexport const POST_LOGGERS_STARTED = 'POST_LOGGERS_STARTED'\nexport const POST_LOGGERS_SUCCESS = 'POST_LOGGERS_SUCCESS'\nexport const POST_LOGGERS_FAILURE = 'POST_LOGGERS_FAILURE'\n\nexport const PUT_LOGGERS = 'PUT_LOGGERS'\nexport const PUT_LOGGERS_STARTED = 'PUT_LOGGERS_STARTED'\nexport const PUT_LOGGERS_SUCCESS = 'PUT_LOGGERS_SUCCESS'\nexport const PUT_LOGGERS_FAILURE = 'PUT_LOGGERS_FAILURE'\n\nexport const DELETE_LOGGERS = 'DELETE_LOGGERS'\nexport const DELETE_LOGGERS_STARTED = 'DELETE_LOGGERS_STARTED'\nexport const DELETE_LOGGERS_SUCCESS = 'DELETE_LOGGERS_SUCCESS'\nexport const DELETE_LOGGERS_FAILURE = 'DELETE_LOGGERS_FAILURE'\n\nexport const GET_LOCAL_SETTINGS = 'GET_LOCAL_SETTINGS'\nexport const GET_LOCAL_SETTINGS_STARTED = 'GET_LOCAL_SETTINGS_STARTED'\nexport const GET_LOCAL_SETTINGS_SUCCESS = 'GET_LOCAL_SETTINGS_SUCCESS'\nexport const GET_LOCAL_SETTINGS_FAILURE = 'GET_LOCAL_SETTINGS_FAILURE'\n\nexport const POST_LOCAL_SETTINGS = 'POST_LOCAL_SETTINGS'\nexport const POST_LOCAL_SETTINGS_STARTED = 'POST_LOCAL_SETTINGS_STARTED'\nexport const POST_LOCAL_SETTINGS_SUCCESS = 'POST_LOCAL_SETTINGS_SUCCESS'\nexport const POST_LOCAL_SETTINGS_FAILURE = 'POST_LOCAL_SETTINGS_FAILURE'\n\nexport const STOP_API_CALLS = 'STOP_API_CALLS'\n","export const GET_DASHBOARDS = 'GET_DASHBOARDS'\nexport const GET_DASHBOARDS_STARTED = 'GET_DASHBOARDS_STARTED'\nexport const GET_DASHBOARDS_SUCCESS = 'GET_DASHBOARDS_SUCCESS'\nexport const GET_DASHBOARDS_FAILURE = 'GET_DASHBOARDS_FAILURE'\n\nexport const POST_DASHBOARD = 'POST_DASHBOARD'\nexport const POST_DASHBOARD_STARTED = 'POST_DASHBOARD_STARTED'\nexport const POST_DASHBOARD_SUCCESS = 'POST_DASHBOARD_SUCCESS'\nexport const POST_DASHBOARD_FAILURE = 'POST_DASHBOARD_FAILURE'\n\nexport const PUT_DASHBOARD = 'PUT_DASHBOARD'\nexport const PUT_DASHBOARD_STARTED = 'PUT_DASHBOARD_STARTED'\nexport const PUT_DASHBOARD_SUCCESS = 'PUT_DASHBOARD_SUCCESS'\nexport const PUT_DASHBOARD_FAILURE = 'PUT_DASHBOARD_FAILURE'\n\nexport const DELETE_DASHBOARD = 'DELETE_DASHBOARD'\nexport const DELETE_DASHBOARD_STARTED = 'DELETE_DASHBOARD_STARTED'\nexport const DELETE_DASHBOARD_SUCCESS = 'DELETE_DASHBOARD_SUCCESS'\nexport const DELETE_DASHBOARD_FAILURE = 'DELETE_DASHBOARD_FAILURE'\n\nexport const DASHBOARD_OPEN = 'DASHBOARD_OPEN'","export const GET_PROCESSES = 'GET_PROCESSES'\nexport const GET_PROCESSES_STARTED = 'GET_PROCESSES_STARTED'\nexport const GET_PROCESSES_SUCCESS = 'GET_PROCESSES_SUCCESS'\nexport const GET_PROCESSES_FAILURE = 'GET_PROCESSES_FAILURE'\n\nexport const POST_PROCESSES = 'POST_PROCESSES'\nexport const POST_PROCESSES_STARTED = 'POST_PROCESSES_STARTED'\nexport const POST_PROCESSES_SUCCESS = 'POST_PROCESSES_SUCCESS'\nexport const POST_PROCESSES_FAILURE = 'POST_PROCESSES_FAILURE'\n\nexport const PUT_PROCESSES = 'PUT_PROCESSES'\nexport const PUT_PROCESSES_STARTED = 'PUT_PROCESSES_STARTED'\nexport const PUT_PROCESSES_SUCCESS = 'PUT_PROCESSES_SUCCESS'\nexport const PUT_PROCESSES_FAILURE = 'PUT_PROCESSES_FAILURE'\n\nexport const DELETE_PROCESSES = 'DELETE_PROCESSES'\nexport const DELETE_PROCESSES_STARTED = 'DELETE_PROCESSES_STARTED'\nexport const DELETE_PROCESSES_SUCCESS = 'DELETE_PROCESSES_SUCCESS'\nexport const DELETE_PROCESSES_FAILURE = 'DELETE_PROCESSES_FAILURE'\nexport const EDITING_PROCESS = 'EDITING_PROCESS'\n","import React, {useState, useEffect, useRef} from 'react';\nimport { createPortal } from \"react-dom\";\nimport DropDownSearch, {DefaultReactDropdownSelect} from \"../components/basic/drop_down_search_v2/drop_down_search\";\n\nconst Portal = (props) => {\n\n\tconst {\n\t\tchildren,\n\t\tmountElement\n\t} = props\n\n\tconst mount = document.getElementById(mountElement);\n\tconst el = document.createElement(\"div\");\n\n\tuseEffect(() => {\n\t\tmount && mount.appendChild(el);\n\n\t\treturn () => mount && mount.removeChild(el);\n\t}, [el, mount]);\n\n\treturn createPortal(children, el)\n};\n\n\nPortal.defaultProps = {\n\tmountElement: \"root\",\n};\nexport default Portal;","import styled from \"styled-components\";\n\nexport const WarningIcon = styled.i`\n    color: ${props => props.color};\n    z-index: 10;\n    pointer-events:all;\n\n    // position: absolute;\n    // top: 50%;\n    // right: 1rem;\n    // transform: translateY(-50%);\n    // margin-left: 1rem;\n    opacity: ${props => props.visible ? 1 : 0};\n\n    z-index: 2;\n`;\n\nexport const StyledInput = styled.input`\n    width: 0;\n    height: 0;\n    position: absolute;\n    z-index: 0;\n    opacity:0;\n    cursor: default;\n\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n`;\n\nexport const IconContainer = styled.div`\n    //position: absolute;\n    width: auto;\n    height: auto;\n\n    position: absolute;\n    margin-bottom:1rem;\n    top: 50%;\n    right: 1rem;\n    transform: translateY(-50%);\n    margin-left: 1rem;\n`;\n","// import external dependencies\nimport React, { useState, useEffect, useRef } from 'react';\nimport ReactTooltip from \"react-tooltip\";\n\nimport Portal from \"../../../../higher_order_components/portal\";\n\nimport { uuidv4 } from '../../../../methods/utils/utils'\n\n// import styles\nimport * as styled from './error_tooltip.style';\nimport DropDownSearchField from \"../drop_down_search_field/drop_down_search_field\";\n\nconst ErrorTooltip = (props) => {\n\n    const {\n        ContainerComponent,\n        text,\n        visible,\n        onClick,\n        className,\n        color\n    } = props\n\n    // target input for initial display of tooltip\n    const inputRef = useRef(null);\n\n    // required for initial display of tooltip\n    const [autoFocus, setAutoFocus] = useState(false);\n\n    // unique id for tooltip\n    const [id, setId] = useState(uuidv4());\n\n    // input is initially focused to show tooltip, then blurred after timeout to hide it\n    useEffect(\n        () => {\n            if (autoFocus) {\n                let timer1 = setTimeout(() => setAutoFocus(false), 3000)\n\n                // this will clear Timeout when component unmount like in willComponentUnmount\n                return () => {\n                    clearTimeout(timer1)\n                }\n            }\n\n        },\n        [] //useEffect will run only one time\n        //if you pass a value to array, like this [data] than clearTimeout will run every time this value changes (useEffect re-run)\n    )\n\n\n    // useEffect(() => {\n    //     if (autoFocus) {\n    //         inputRef.current.focus();\n    //     } else {\n    //         inputRef.current.blur();\n    //     }\n    // }, [autoFocus]);\n\n    return (\n\n        <ContainerComponent>\n            {/*initial display on load*/}\n            {autoFocus && visible &&\n                //wrap in portal to avoid clipping issues\n                <Portal>\n                    <ReactTooltip style={{ zIndex: 20 }} delayShow={250} event={'focus'} eventOff={'blur'} id={id}>\n                        <span>{text}</span>\n                    </ReactTooltip>\n                </Portal>\n\n            }\n\n            {/* only show on hover after initial display */}\n            {!autoFocus && visible &&\n                //wrap in portal to avoid clipping issues\n                <Portal>\n                    <ReactTooltip eventOff={'mouseout'} id={id}>\n                        <span>{text}</span>\n                    </ReactTooltip>\n                </Portal>\n            }\n\n            {autoFocus &&\n                <styled.StyledInput\n                    visible={visible}\n                    ref={inputRef}\n                    readOnly={true}\n                    // hidden={true}\n                    // autoFocus={autoFocus}\n                    event={'focus'}\n                    data-tip\n                    data-for={id}\n                />\n            }\n\n            <styled.WarningIcon\n                visible={visible}\n                color={color}\n                className={className}\n                data-tip\n                data-for={id}\n                onClick={onClick}\n            />\n        </ContainerComponent>\n\n    );\n\n}\n\n// Specifies the default values for props:\nErrorTooltip.defaultProps = {\n    ContainerComponent: styled.IconContainer,\n    className: \"fas fa-exclamation-triangle\",\n    color: '#FF4B4B',\n};\n\nexport default React.memo(ErrorTooltip);","import { TEMP_NEW_SCHEDULE_ID, DEFAULT_TASK_ID } from '../../constants/scheduler_constants';\n\nexport function timeout(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport function mapArrayToObjById(arr) {\n    var obj = {};\n\n    for (let i = 0; i < arr.length; i++) {\n        obj[arr[i].id] = arr[i];\n    }\n\n    return obj;\n}\n\nexport const convertArrayToObject = (array, key) => {\n    const initialValue = {};\n    return array.reduce((obj, item) => {\n        return {\n            ...obj,\n            [item[key]]: item,\n        };\n    }, initialValue);\n};\n\nexport function clone_object(obj) {\n    if (null == obj || \"object\" != typeof obj) return obj;\n    var copy = obj.constructor();\n    for (var attr in obj) {\n        if (obj.hasOwnProperty(attr)) copy[attr] = obj[attr];\n    }\n    return copy;\n}\n\nexport function deepCopy(obj) {\n    return JSON.parse(JSON.stringify(obj));\n}\n\nexport function timeString24HrToDate(timeString) {\n    if (timeString) {\n        var date = Date.parse(\"2019-01-01T\" + timeString);\n        var newDate = new Date();\n        newDate.setTime(date)\n        return newDate\n    } else {\n        return null;\n    }\n\n}\n\nexport function arraysEqual(_arr1, _arr2) {\n\n    if (!Array.isArray(_arr1) || !Array.isArray(_arr2) || _arr1.length !== _arr2.length)\n        return false;\n\n    var arr1 = _arr1.concat().sort();\n    var arr2 = _arr2.concat().sort();\n\n    for (var i = 0; i < arr1.length; i++) {\n\n        if (arr1[i] !== arr2[i])\n            return false;\n\n    }\n\n    return true;\n\n}\n\n// checks if x is a subset of y\nexport function objectIsSubet(x, y) {\n    console.log('inside objectIsSubet')\n    if (x === y) return true;\n    // if both x and y are null or undefined and exactly the same\n\n    // failure point 1\n    // if they are not strictly equal, they both need to be Objects\n    if (!(x instanceof Object) || !(y instanceof Object)) {\n        console.log('objectIsSubet: failed at 1')\n        return false;\n    }\n\n    // failure point 2\n    // they must have the exact same prototype chain, the closest we can do is\n    // test there constructor.\n    if (x.constructor !== y.constructor) {\n        console.log('objectIsSubet: failed at 2')\n        return false;\n    }\n\n\n    for (var p in x) {\n        console.log('var p in x', x)\n        if (!x.hasOwnProperty(p)) continue;\n        // other properties were tested using x.constructor === y.constructor\n\n        // failure point 3\n        // allows to compare x[ p ] and y[ p ] when set to undefined\n        if (!y.hasOwnProperty(p)) {\n            console.log('objectIsSubet: failed at 3')\n            return false;\n        }\n\n\n        if (x[p] === y[p]) continue;\n        // if they have the same strict value or identity then they are equal\n\n        // failure point 4\n        if (typeof (x[p]) !== \"object\") {\n            console.log('objectIsSubet: failure point 4:', p)\n            console.log('objectIsSubet: failure point 4:', x[p])\n            console.log('objectIsSubet: failure point 4:', typeof (x[p]))\n            console.log('objectIsSubet: failed at 4')\n            return false;\n        }\n        // Numbers, Strings, Functions, Booleans must be strictly equal\n\n        // failure point 5\n        if (!objectIsSubet(x[p], y[p])) {\n            console.log('objectIsSubet: failed at 5')\n            return false;\n        }\n        // Objects and Arrays must be tested recursively\n    }\n\n    //for ( p in y ) {\n    //if ( y.hasOwnProperty( p ) && ! x.hasOwnProperty( p ) ) return false;\n    // allows x[ p ] to be set to undefined\n    //}\n    return true;\n}\n\n\n\nexport function uuidv4() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n        return v.toString(16);\n    });\n}\n\nexport function LightenDarkenColor(col, amt) {\n    var usePound = false;\n    if (col[0] == \"#\") {\n        col = col.slice(1);\n        usePound = true;\n    }\n\n    var num = parseInt(col, 16);\n\n    var r = (num >> 16) + amt;\n\n    if (r > 255) r = 255;\n    else if (r < 0) r = 0;\n\n    var b = ((num >> 8) & 0x00FF) + amt;\n\n    if (b > 255) b = 255;\n    else if (b < 0) b = 0;\n\n    var g = (num & 0x0000FF) + amt;\n\n    if (g > 255) g = 255;\n    else if (g < 0) g = 0;\n\n    return (usePound ? \"#\" : \"\") + (g | (b << 8) | (r << 16)).toString(16);\n}\n\nexport function isEquivalent(a, b) {\n    // Create arrays of property names\n    if (typeof a !== 'object' || typeof b !== 'object' || a === null || b === null) {\n        return a === b;\n    }\n\n    var aProps = Object.getOwnPropertyNames(a);\n    var bProps = Object.getOwnPropertyNames(b);\n\n    // If number of properties is different,\n    // objects are not equivalent\n    if (aProps.length != bProps.length) {\n        return false;\n    }\n\n    for (var i = 0; i < aProps.length; i++) {\n        var propName = aProps[i];\n\n        // If values of same property are not equal,\n        // objects are not equivalent\n        if (!isEquivalent(a[propName], b[propName])) {\n            return false;\n        }\n    }\n\n    // If we made it this far, objects\n    // are considered equivalent\n    return true;\n}\n\nexport function randomHash() {\n    var hash = '';\n    var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for (var i = 0; i < 16; i++) {\n        hash += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return hash;\n}\n\nexport const upperCaseFirstLetterInString = (str) => {\n    return str\n        .toLowerCase()\n        .split(' ')\n        .map(function (word) {\n            return word[0].toUpperCase() + word.substr(1);\n        })\n        .join(' ');\n}\n\n// Returns name of day ('Mon', 'Tues', etc...)\nexport const getDateName = (date) => {\n    return date.toLocaleDateString(undefined, { weekday: 'short' });\n}\n\n// Returns date from string, this assumes the date is the first word in the string\nexport const getDateFromString = (str) => {\n    const dateStr = deepCopy(str).replace(/ .*/, '').split('-');\n    return new Date(dateStr[0], dateStr[1] - 1, dateStr[2]);\n}","export const daysOfTheWeek = {\n  0: 'monday',\n  1: 'tuesday',\n  2: 'wednesday',\n  3: 'thursday',\n  4: 'friday',\n  5: 'saturday',\n  6: 'sunday'\n}\n\nexport const TEMP_NEW_SCHEDULE_ID = \"TEMP_NEW_SCHEDULE_ID\"\nexport const DEFAULT_TASK_ID = \"DEFAULT_TASK_ID\"\n\nexport const FORM_MODES = {\n  CREATE: \"CREATE\",\n  UPDATE: \"UPDATE\"\n}\n","export const GET_EVENTS = 'GET_EVENTS'\nexport const GET_EVENTS_STARTED = 'GET_EVENTS_STARTED'\nexport const GET_EVENTS_SUCCESS = 'GET_EVENTS_SUCCESS'\nexport const GET_EVENTS_FAILURE = 'GET_EVENTS_FAILURE'\n\nexport const POST_EVENTS = 'POST_EVENTS'\nexport const POST_EVENTS_STARTED = 'POST_EVENTS_STARTED'\nexport const POST_EVENTS_SUCCESS = 'POST_EVENTS_SUCCESS'\nexport const POST_EVENTS_FAILURE = 'POST_EVENTS_FAILURE'\n\nexport const PUT_EVENTS = 'PUT_EVENTS'\nexport const PUT_EVENTS_STARTED = 'PUT_EVENTS_STARTED'\nexport const PUT_EVENTS_SUCCESS = 'PUT_EVENTS_SUCCESS'\nexport const PUT_EVENTS_FAILURE = 'PUT_EVENTS_FAILURE'\n\nexport const DELETE_EVENTS = 'DELETE_EVENTS'\nexport const DELETE_EVENTS_STARTED = 'DELETE_EVENTS_STARTED'\nexport const DELETE_EVENTS_SUCCESS = 'DELETE_EVENTS_SUCCESS'\nexport const DELETE_EVENTS_FAILURE = 'DELETE_EVENTS_FAILURE'\n","import { normalize, schema } from 'normalizr';\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n    TASK_QUEUE,\n    TASK_QUEUE_ALL,\n    TASK_QUEUE_ITEM,\n    GET_TASK_QUEUE,\n    GET_TASK_QUEUE_STARTED,\n    GET_TASK_QUEUE_SUCCESS,\n    GET_TASK_QUEUE_FAILURE,\n\n    GET_TASK_QUEUE_ITEM,\n    GET_TASK_QUEUE_ITEM_STARTED,\n    GET_TASK_QUEUE_ITEM_SUCCESS,\n    GET_TASK_QUEUE_ITEM_FAILURE,\n\n    POST_TASK_QUEUE,\n    POST_TASK_QUEUE_STARTED,\n    POST_TASK_QUEUE_SUCCESS,\n    POST_TASK_QUEUE_FAILURE,\n\n    DELETE_TASK_QUEUE,\n    DELETE_TASK_QUEUE_STARTED,\n    DELETE_TASK_QUEUE_SUCCESS,\n    DELETE_TASK_QUEUE_FAILURE,\n\n    HANDLE_POST_TASK_QUEUE,\n    TASK_QUEUE_OPEN,\n    INCREMENT_GET_DATA_FAILURE_COUNT\n} from '../types/task_queue_types';\n\nimport {\n    GET_,\n    POST_,\n    DELETE_,\n    PUT_,\n\n    _STARTED,\n    _SUCCESS,\n    _FAILURE,\n} from '../types/api_types';\n\nimport { taskQueueSchema } from '../../normalizr/task_queue_schema';\nimport uuid from 'uuid';\nimport * as api from '../../api/task_queue_api'\n\n\n// get\n// ******************************\nexport const getTaskQueue = () => {\n    return async dispatch => {\n\n        function onStart() {\n            dispatch({ type: GET_ + TASK_QUEUE + _STARTED });\n        }\n        function onSuccess(taskQueue) {\n            dispatch({ type: GET_ + TASK_QUEUE + _SUCCESS, payload: taskQueue });\n            return taskQueue;\n        }\n        function onError(error) {\n            dispatch({ type: GET_ + TASK_QUEUE + _FAILURE, payload: error });\n            dispatch({ type: INCREMENT_GET_DATA_FAILURE_COUNT, payload: null })\n            return error;\n        }\n\n        try {\n            onStart();\n\n            const taskQueue = await api.getTaskQueue();\n            const normalizedData = normalize(taskQueue, taskQueueSchema);\n\n            return onSuccess(normalizedData.entities.taskQueue);\n        } catch (error) {\n            return onError(error);\n        }\n    };\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// create\n// ******************************\nexport const postTaskQueue = (queueItem) => {\n    return async dispatch => {\n\n        function onStart() {\n            dispatch({ type: POST_ + TASK_QUEUE + _STARTED, payload: queueItem });\n        }\n        function onSuccess(createdTaskQueueItem, oldTaskQueueItemId) {\n            const payload = { createdTaskQueueItem, oldTaskQueueItemId };\n            dispatch({ type: POST_ + TASK_QUEUE + _SUCCESS, payload });\n            return (\n                createdTaskQueueItem\n            );\n        }\n        function onError(error) {\n            dispatch({ type: POST_ + TASK_QUEUE + _FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const createdTaskQueueItem = await api.postTaskQueue(queueItem);\n            return onSuccess(createdTaskQueueItem, queueItem.id);\n        } catch (error) {\n            return onError(error);\n        }\n    };\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// update\n// ******************************\nexport const putTaskQueue = (item, ID) => {\n    return async dispatch => {\n\n        function onStart() {\n            dispatch({ type: PUT_ + TASK_QUEUE + _STARTED, payload: {item, ID} });\n        }\n        function onSuccess(item, ID) {\n            const payload = { item, ID };\n            dispatch({ type: PUT_ + TASK_QUEUE + _SUCCESS, payload });\n            return payload\n\n        }\n        function onError(error) {\n            dispatch({ type: PUT_ + TASK_QUEUE + _FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const taskQueueItem = await api.putTaskQueueItem(item, ID);\n            return onSuccess(item, ID);\n        } catch (error) {\n            return onError(error);\n        }\n    };\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// delete all\n// ******************************\nexport const deleteTaskQueueAll = () => {\n    return async dispatch => {\n\n        function onStart() {\n            dispatch({ type: DELETE_ + TASK_QUEUE_ALL + _STARTED });\n        }\n        function onSuccess(response) {\n            dispatch({ type: DELETE_ + TASK_QUEUE_ALL + _SUCCESS });\n            return response;\n        }\n        function onError(error) {\n            dispatch({ type: DELETE_ + TASK_QUEUE_ALL + _FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const response = await api.deleteTaskQueueAll();\n            return onSuccess(response);\n        } catch (error) {\n            return onError(error);\n        }\n    };\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n// delete all\n// ******************************\nexport const deleteTaskQueueItem = (id) => {\n    return async dispatch => {\n\n        function onStart() {\n            dispatch({ type: DELETE_ + TASK_QUEUE_ITEM + _STARTED });\n        }\n        function onSuccess(response, id) {\n            const payload = { id }\n            dispatch({ type: DELETE_ + TASK_QUEUE_ITEM + _SUCCESS, payload });\n            return response;\n        }\n        function onError(error) {\n            dispatch({ type: DELETE_ + TASK_QUEUE_ITEM + _FAILURE, payload: error });\n            return error;\n        }\n\n        try {\n            onStart();\n            const response = await api.deleteTaskQueueItem(id);\n            return onSuccess(response, id);\n        } catch (error) {\n            return onError(error);\n        }\n    };\n};\n\n/**\n @param {*} props\n */\n\nexport const handlePostTaskQueue = (props) => {\n\n    const {\n        dashboardID,\n        tasks,\n        taskQueue,\n        Id,\n        name,\n        custom,\n        fromSideBar,\n        deviceType\n    } = props\n\n    return async dispatch => {\n        // If a custom task then add custom task key to task q\n        if (Id === 'custom_task') {\n\n            await dispatch(postTaskQueue(\n                {\n                    _id: uuid.v4(),\n                    \"task_id\": Id,\n                    'custom_task': custom,\n                    \"device_type\": deviceType\n                }\n            ))\n        }\n\n        else {\n\n            let inQueue = false\n\n            if (!!taskQueue) {\n                Object.values(taskQueue).map((item) => {\n                    // If its in the Q and not a handoff, then alert the user saying its already there\n                    if (item.task_id === Id && !tasks[item.task_id].handoff) inQueue = true\n                })\n            }\n\n            // add alert to notify task has been added\n            if (!inQueue) {\n                // If the task is a human task, its handled a little differently compared to a normal task\n                // Set hil_response to null because the backend does not dictate the load hil message\n                // Since the task is put into the q but automatically assigned to the person that clicks the button\n                if (deviceType === 'human') {\n\n                    const postTask = {\n                        _id: uuid.v4(),\n                        \"device_type\": deviceType,\n                        \"task_id\": Id,\n                        dashboard: dashboardID,\n                        hil_response: null,\n                    }\n                    await dispatch({ type: 'LOCAL_HUMAN_TASK', payload: postTask._id })\n                    const postToQueue = dispatch(postTaskQueue(postTask))\n\n                    if (fromSideBar) {\n                        postToQueue.then(item => {\n                            const id = item?._id\n                            dispatch({ type: 'TASK_QUEUE_ITEM_CLICKED', payload: id })\n                        })\n                    }\n                }\n\n                else {\n                    await dispatch(postTaskQueue(\n                        {\n                            _id: uuid.v4(),\n                            \"device_type\": deviceType,\n                            \"task_id\": Id,\n                        })\n                    )\n                }\n            }\n        }\n    };\n};\n\n\nexport const taskQueueOpen = (bool) => {\n    return { type: TASK_QUEUE_OPEN, payload: bool }\n};\n// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n","import styled from 'styled-components';\nimport TimePicker from 'rc-time-picker';\nimport {css} from 'styled-components'\n\nexport const DefaultLabelComponent = styled.label`\n`;\n\nexport const DefaultFieldContainer = styled.div`\n`;\n\nexport const DefaultContentContainer = styled.div`\n    flex-direction: row;\n    align-items: center;\n    width: 100%;\n    position: relative;\n    display: flex;\n    \n`;\n\nexport const DefaultInputContainer = styled.div`\n    // width: 90%;\n    flex: 1;\n    align-items: center;\n    margin: 0;\n    padding: 0;\n    position: relative;\n   \n`;\n\nexport const DefaultInputComponent = styled.input`\n     // background: ${props =>  props.hasError && props.theme.bad};\n`;\n\nexport const IconContainerComponent = styled.div`\n    width: auto;\n    height: auto;\n    position: absolute;\n    top: 50%;\n    right: 1rem;\n    transform: translateY(-50%);\n    margin: 0;\n    padding: 0;\n    // background: magenta;\n    \n    ${props => props.iconContainerCss};\n    \n`;\n\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { useField, useFormikContext } from \"formik\";\n\nimport ErrorTooltip from '../error_tooltip/error_tooltip';\nimport useChange from '../../../basic/form/useChange'\nimport * as styled from './text_field.style'\n\nconst TextField = ({\n    InputComponent,\n    ErrorComponent,\n    LabelComponent,\n    InputContainer,\n    fieldLabel,\n    onBlur,\n    onFocus,\n    onChange,\n    inputStyleFunc,\n    IconContainerComponent,\n    ContentContainer,\n    FieldContainer,\n    mapInput,\n    mapOutput,\n    inputProps,\n\n    style,\n    ...props }) => {\n\n    const { setFieldValue, setFieldTouched, validateOnChange, validateOnBlur, validateField, validateForm, ...context } = useFormikContext();\n    const [field, meta] = useField(props);\n    const { touched, error } = meta\n\n    const hasError = touched && error\n    useChange(setFieldValue)\n    const inputStyle = inputStyleFunc(hasError);\n    return (\n        <>\n            {fieldLabel &&\n                <LabelComponent hasError={hasError} htmlFor={props.id || props.name}>{fieldLabel}</LabelComponent>\n            }\n            <ContentContainer>\n                <InputContainer>\n                    <InputComponent\n\n                        // inputStyle={{...inputStyle, ...style}}\n                        // inputStyle={inputStyle}\n                        className='form-control'\n                        {...field}\n                        {...inputProps}\n                        {...props}\n                        style={{ ...style, ...inputStyle }}\n                        value={mapInput(field.value)}\n                        onChange={(event) => {\n                            // update touched if necessary\n                            if (!touched) {\n                                setFieldTouched(field.name, true)\n                            }\n\n                            setFieldValue(field.name, mapOutput(event.target.value)) // update field value\n\n                            onChange(event) // call additional onChange prop if necessary\n                        }}\n                        // set field touched and call onBlur prop\n                        onBlur={(event) => {\n                            // update touched if necessary\n                            if (!touched) {\n                                setFieldTouched(field.name, true)\n                            }\n\n                            // validateOnBlur && validateField(field.name) // validate if necessary\n                            // validateField(field.name) // validate if necessary\n\n                            onBlur(event) // call onBlur prop if passed\n                        }}\n                    />\n                    <ErrorTooltip\n                        visible={hasError}\n                        text={error}\n                        ContainerComponent={IconContainerComponent}\n                    />\n                </InputContainer>\n\n            </ContentContainer>\n\n\n\n        </>\n    );\n};\n\n/* *\n*\n* Returns style for input component\n* Accepts hasError prop, which can be used to change styling based on presence of errors\n*\n* */\nconst defaultInputStyleFunc = (hasError) => {\n    return {\n        // borderColor: hasError && 'red',\n        // border: hasError && '1px solid red',\n        transition: \"all .5s ease-in-out\",\n        boxShadow: hasError && `0 0 5px red !important`,\n\n        borderLeft: hasError ? '1px solid red' : \"1px solid transparent\",\n        borderTop: hasError ? '1px solid red' : \"1px solid transparent\",\n        borderRight: hasError ? '1px solid red' : \"1px solid transparent\",\n        borderBottom: hasError && '1px solid red',\n\n\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        // padding: \"0.25rem\"\n    }\n}\n\n// Specifies propTypes\nTextField.propTypes = {\n    LabelComponent: PropTypes.elementType,\n    InputComponent: PropTypes.elementType,\n    InputContainer: PropTypes.elementType,\n    onBlur: PropTypes.func,\n    onFocus: PropTypes.func,\n    onChange: PropTypes.func,\n    inputStyleFunc: PropTypes.func,\n    fieldLabel: PropTypes.string,\n    IconContainerComponent: PropTypes.elementType,\n    ContentComponent: PropTypes.elementType,\n    style: PropTypes.object,\n};\n\n// Specifies the default values for props:\nTextField.defaultProps = {\n    LabelComponent: styled.DefaultLabelComponent,\n    InputComponent: styled.DefaultInputComponent,\n    InputContainer: styled.DefaultInputContainer,\n    onBlur: () => { },\n    onFocus: () => { },\n    onChange: () => { },\n    fieldLabel: \"\",\n    inputStyleFunc: defaultInputStyleFunc,\n    IconContainerComponent: styled.IconContainerComponent,\n    ContentContainer: styled.DefaultContentContainer,\n    FieldContainer: styled.DefaultFieldContainer,\n    style: {},\n    validateOnBlur: false,\n    mapInput: (val) => val,\n    mapOutput: (val) => val,\n};\n\nexport default TextField;\n","import {\n    STARTED,\n    SUCCESS,\n    FAILURE\n} from '../types/suffixes';\n\nexport const api_action = async (actionName, callback, dispatch, args) => {\n\n\n    function onStart() {\n      dispatch({ type: actionName + STARTED, payload: args });\n    }\n\n    function onSuccess(payload) {\n      dispatch({ type: actionName + SUCCESS, payload });\n      return payload;\n    }\n\n    function onError(error) {\n      dispatch({ type: actionName + FAILURE, payload: error });\n      return error;\n    }\n\n    try {\n\n      onStart();\n      const payload = await callback();\n      return onSuccess(payload);\n\n    } catch (error) {\n      return onError(error);\n    }\n\n};\n"],"sourceRoot":""}